#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.3053
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Arachnode.DataSource
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[System.Data.Linq.Mapping.DatabaseAttribute(Name="arachnode.net")]
	public partial class ReportingLinqToSqlDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertDisallowedAbsoluteUris_COUNT_BY_ABSOLUTEURI(DisallowedAbsoluteUris_COUNT_BY_ABSOLUTEURI instance);
    partial void UpdateDisallowedAbsoluteUris_COUNT_BY_ABSOLUTEURI(DisallowedAbsoluteUris_COUNT_BY_ABSOLUTEURI instance);
    partial void DeleteDisallowedAbsoluteUris_COUNT_BY_ABSOLUTEURI(DisallowedAbsoluteUris_COUNT_BY_ABSOLUTEURI instance);
    partial void InsertDisallowedAbsoluteUris_MOST_POPULAR_SCHEMES_BY_SCHEME(DisallowedAbsoluteUris_MOST_POPULAR_SCHEMES_BY_SCHEME instance);
    partial void UpdateDisallowedAbsoluteUris_MOST_POPULAR_SCHEMES_BY_SCHEME(DisallowedAbsoluteUris_MOST_POPULAR_SCHEMES_BY_SCHEME instance);
    partial void DeleteDisallowedAbsoluteUris_MOST_POPULAR_SCHEMES_BY_SCHEME(DisallowedAbsoluteUris_MOST_POPULAR_SCHEMES_BY_SCHEME instance);
    partial void InsertDisallowedAbsoluteUris_COUNT_BY_DOMAIN(DisallowedAbsoluteUris_COUNT_BY_DOMAIN instance);
    partial void UpdateDisallowedAbsoluteUris_COUNT_BY_DOMAIN(DisallowedAbsoluteUris_COUNT_BY_DOMAIN instance);
    partial void DeleteDisallowedAbsoluteUris_COUNT_BY_DOMAIN(DisallowedAbsoluteUris_COUNT_BY_DOMAIN instance);
    partial void InsertDisallowedAbsoluteUris_COUNT_BY_EXTENSION(DisallowedAbsoluteUris_COUNT_BY_EXTENSION instance);
    partial void UpdateDisallowedAbsoluteUris_COUNT_BY_EXTENSION(DisallowedAbsoluteUris_COUNT_BY_EXTENSION instance);
    partial void DeleteDisallowedAbsoluteUris_COUNT_BY_EXTENSION(DisallowedAbsoluteUris_COUNT_BY_EXTENSION instance);
    partial void InsertDisallowedAbsoluteUris_COUNT_BY_HOST(DisallowedAbsoluteUris_COUNT_BY_HOST instance);
    partial void UpdateDisallowedAbsoluteUris_COUNT_BY_HOST(DisallowedAbsoluteUris_COUNT_BY_HOST instance);
    partial void DeleteDisallowedAbsoluteUris_COUNT_BY_HOST(DisallowedAbsoluteUris_COUNT_BY_HOST instance);
    partial void InsertDisallowedAbsoluteUris_COUNT_BY_SCHEME(DisallowedAbsoluteUris_COUNT_BY_SCHEME instance);
    partial void UpdateDisallowedAbsoluteUris_COUNT_BY_SCHEME(DisallowedAbsoluteUris_COUNT_BY_SCHEME instance);
    partial void DeleteDisallowedAbsoluteUris_COUNT_BY_SCHEME(DisallowedAbsoluteUris_COUNT_BY_SCHEME instance);
    partial void InsertDisallowedAbsoluteUris_MOST_POPULAR_ABSOLUTEURIS_BY_ABSOLUTEURI(DisallowedAbsoluteUris_MOST_POPULAR_ABSOLUTEURIS_BY_ABSOLUTEURI instance);
    partial void UpdateDisallowedAbsoluteUris_MOST_POPULAR_ABSOLUTEURIS_BY_ABSOLUTEURI(DisallowedAbsoluteUris_MOST_POPULAR_ABSOLUTEURIS_BY_ABSOLUTEURI instance);
    partial void DeleteDisallowedAbsoluteUris_MOST_POPULAR_ABSOLUTEURIS_BY_ABSOLUTEURI(DisallowedAbsoluteUris_MOST_POPULAR_ABSOLUTEURIS_BY_ABSOLUTEURI instance);
    partial void InsertDisallowedAbsoluteUris_MOST_POPULAR_ABSOLUTEURIS_BY_DOMAIN(DisallowedAbsoluteUris_MOST_POPULAR_ABSOLUTEURIS_BY_DOMAIN instance);
    partial void UpdateDisallowedAbsoluteUris_MOST_POPULAR_ABSOLUTEURIS_BY_DOMAIN(DisallowedAbsoluteUris_MOST_POPULAR_ABSOLUTEURIS_BY_DOMAIN instance);
    partial void DeleteDisallowedAbsoluteUris_MOST_POPULAR_ABSOLUTEURIS_BY_DOMAIN(DisallowedAbsoluteUris_MOST_POPULAR_ABSOLUTEURIS_BY_DOMAIN instance);
    partial void InsertDisallowedAbsoluteUris_MOST_POPULAR_ABSOLUTEURIS_BY_EXTENSION(DisallowedAbsoluteUris_MOST_POPULAR_ABSOLUTEURIS_BY_EXTENSION instance);
    partial void UpdateDisallowedAbsoluteUris_MOST_POPULAR_ABSOLUTEURIS_BY_EXTENSION(DisallowedAbsoluteUris_MOST_POPULAR_ABSOLUTEURIS_BY_EXTENSION instance);
    partial void DeleteDisallowedAbsoluteUris_MOST_POPULAR_ABSOLUTEURIS_BY_EXTENSION(DisallowedAbsoluteUris_MOST_POPULAR_ABSOLUTEURIS_BY_EXTENSION instance);
    partial void InsertDisallowedAbsoluteUris_MOST_POPULAR_ABSOLUTEURIS_BY_HOST(DisallowedAbsoluteUris_MOST_POPULAR_ABSOLUTEURIS_BY_HOST instance);
    partial void UpdateDisallowedAbsoluteUris_MOST_POPULAR_ABSOLUTEURIS_BY_HOST(DisallowedAbsoluteUris_MOST_POPULAR_ABSOLUTEURIS_BY_HOST instance);
    partial void DeleteDisallowedAbsoluteUris_MOST_POPULAR_ABSOLUTEURIS_BY_HOST(DisallowedAbsoluteUris_MOST_POPULAR_ABSOLUTEURIS_BY_HOST instance);
    partial void InsertDisallowedAbsoluteUris_MOST_POPULAR_ABSOLUTEURIS_BY_SCHEME(DisallowedAbsoluteUris_MOST_POPULAR_ABSOLUTEURIS_BY_SCHEME instance);
    partial void UpdateDisallowedAbsoluteUris_MOST_POPULAR_ABSOLUTEURIS_BY_SCHEME(DisallowedAbsoluteUris_MOST_POPULAR_ABSOLUTEURIS_BY_SCHEME instance);
    partial void DeleteDisallowedAbsoluteUris_MOST_POPULAR_ABSOLUTEURIS_BY_SCHEME(DisallowedAbsoluteUris_MOST_POPULAR_ABSOLUTEURIS_BY_SCHEME instance);
    partial void InsertDisallowedAbsoluteUris_MOST_POPULAR_DOMAINS_BY_ABSOLUTEURI(DisallowedAbsoluteUris_MOST_POPULAR_DOMAINS_BY_ABSOLUTEURI instance);
    partial void UpdateDisallowedAbsoluteUris_MOST_POPULAR_DOMAINS_BY_ABSOLUTEURI(DisallowedAbsoluteUris_MOST_POPULAR_DOMAINS_BY_ABSOLUTEURI instance);
    partial void DeleteDisallowedAbsoluteUris_MOST_POPULAR_DOMAINS_BY_ABSOLUTEURI(DisallowedAbsoluteUris_MOST_POPULAR_DOMAINS_BY_ABSOLUTEURI instance);
    partial void InsertDisallowedAbsoluteUris_MOST_POPULAR_DOMAINS_BY_DOMAIN(DisallowedAbsoluteUris_MOST_POPULAR_DOMAINS_BY_DOMAIN instance);
    partial void UpdateDisallowedAbsoluteUris_MOST_POPULAR_DOMAINS_BY_DOMAIN(DisallowedAbsoluteUris_MOST_POPULAR_DOMAINS_BY_DOMAIN instance);
    partial void DeleteDisallowedAbsoluteUris_MOST_POPULAR_DOMAINS_BY_DOMAIN(DisallowedAbsoluteUris_MOST_POPULAR_DOMAINS_BY_DOMAIN instance);
    partial void InsertDisallowedAbsoluteUris_MOST_POPULAR_DOMAINS_BY_EXTENSION(DisallowedAbsoluteUris_MOST_POPULAR_DOMAINS_BY_EXTENSION instance);
    partial void UpdateDisallowedAbsoluteUris_MOST_POPULAR_DOMAINS_BY_EXTENSION(DisallowedAbsoluteUris_MOST_POPULAR_DOMAINS_BY_EXTENSION instance);
    partial void DeleteDisallowedAbsoluteUris_MOST_POPULAR_DOMAINS_BY_EXTENSION(DisallowedAbsoluteUris_MOST_POPULAR_DOMAINS_BY_EXTENSION instance);
    partial void InsertDisallowedAbsoluteUris_MOST_POPULAR_DOMAINS_BY_HOST(DisallowedAbsoluteUris_MOST_POPULAR_DOMAINS_BY_HOST instance);
    partial void UpdateDisallowedAbsoluteUris_MOST_POPULAR_DOMAINS_BY_HOST(DisallowedAbsoluteUris_MOST_POPULAR_DOMAINS_BY_HOST instance);
    partial void DeleteDisallowedAbsoluteUris_MOST_POPULAR_DOMAINS_BY_HOST(DisallowedAbsoluteUris_MOST_POPULAR_DOMAINS_BY_HOST instance);
    partial void InsertDisallowedAbsoluteUris_MOST_POPULAR_DOMAINS_BY_SCHEME(DisallowedAbsoluteUris_MOST_POPULAR_DOMAINS_BY_SCHEME instance);
    partial void UpdateDisallowedAbsoluteUris_MOST_POPULAR_DOMAINS_BY_SCHEME(DisallowedAbsoluteUris_MOST_POPULAR_DOMAINS_BY_SCHEME instance);
    partial void DeleteDisallowedAbsoluteUris_MOST_POPULAR_DOMAINS_BY_SCHEME(DisallowedAbsoluteUris_MOST_POPULAR_DOMAINS_BY_SCHEME instance);
    partial void InsertDisallowedAbsoluteUris_MOST_POPULAR_EXTENSIONS_BY_ABSOLUTEURI(DisallowedAbsoluteUris_MOST_POPULAR_EXTENSIONS_BY_ABSOLUTEURI instance);
    partial void UpdateDisallowedAbsoluteUris_MOST_POPULAR_EXTENSIONS_BY_ABSOLUTEURI(DisallowedAbsoluteUris_MOST_POPULAR_EXTENSIONS_BY_ABSOLUTEURI instance);
    partial void DeleteDisallowedAbsoluteUris_MOST_POPULAR_EXTENSIONS_BY_ABSOLUTEURI(DisallowedAbsoluteUris_MOST_POPULAR_EXTENSIONS_BY_ABSOLUTEURI instance);
    partial void InsertDisallowedAbsoluteUris_MOST_POPULAR_EXTENSIONS_BY_DOMAIN(DisallowedAbsoluteUris_MOST_POPULAR_EXTENSIONS_BY_DOMAIN instance);
    partial void UpdateDisallowedAbsoluteUris_MOST_POPULAR_EXTENSIONS_BY_DOMAIN(DisallowedAbsoluteUris_MOST_POPULAR_EXTENSIONS_BY_DOMAIN instance);
    partial void DeleteDisallowedAbsoluteUris_MOST_POPULAR_EXTENSIONS_BY_DOMAIN(DisallowedAbsoluteUris_MOST_POPULAR_EXTENSIONS_BY_DOMAIN instance);
    partial void InsertDisallowedAbsoluteUris_MOST_POPULAR_EXTENSIONS_BY_EXTENSION(DisallowedAbsoluteUris_MOST_POPULAR_EXTENSIONS_BY_EXTENSION instance);
    partial void UpdateDisallowedAbsoluteUris_MOST_POPULAR_EXTENSIONS_BY_EXTENSION(DisallowedAbsoluteUris_MOST_POPULAR_EXTENSIONS_BY_EXTENSION instance);
    partial void DeleteDisallowedAbsoluteUris_MOST_POPULAR_EXTENSIONS_BY_EXTENSION(DisallowedAbsoluteUris_MOST_POPULAR_EXTENSIONS_BY_EXTENSION instance);
    partial void InsertDisallowedAbsoluteUris_MOST_POPULAR_EXTENSIONS_BY_HOST(DisallowedAbsoluteUris_MOST_POPULAR_EXTENSIONS_BY_HOST instance);
    partial void UpdateDisallowedAbsoluteUris_MOST_POPULAR_EXTENSIONS_BY_HOST(DisallowedAbsoluteUris_MOST_POPULAR_EXTENSIONS_BY_HOST instance);
    partial void DeleteDisallowedAbsoluteUris_MOST_POPULAR_EXTENSIONS_BY_HOST(DisallowedAbsoluteUris_MOST_POPULAR_EXTENSIONS_BY_HOST instance);
    partial void InsertDisallowedAbsoluteUris_MOST_POPULAR_EXTENSIONS_BY_SCHEME(DisallowedAbsoluteUris_MOST_POPULAR_EXTENSIONS_BY_SCHEME instance);
    partial void UpdateDisallowedAbsoluteUris_MOST_POPULAR_EXTENSIONS_BY_SCHEME(DisallowedAbsoluteUris_MOST_POPULAR_EXTENSIONS_BY_SCHEME instance);
    partial void DeleteDisallowedAbsoluteUris_MOST_POPULAR_EXTENSIONS_BY_SCHEME(DisallowedAbsoluteUris_MOST_POPULAR_EXTENSIONS_BY_SCHEME instance);
    partial void InsertDisallowedAbsoluteUris_MOST_POPULAR_HOSTS_BY_ABSOLUTEURI(DisallowedAbsoluteUris_MOST_POPULAR_HOSTS_BY_ABSOLUTEURI instance);
    partial void UpdateDisallowedAbsoluteUris_MOST_POPULAR_HOSTS_BY_ABSOLUTEURI(DisallowedAbsoluteUris_MOST_POPULAR_HOSTS_BY_ABSOLUTEURI instance);
    partial void DeleteDisallowedAbsoluteUris_MOST_POPULAR_HOSTS_BY_ABSOLUTEURI(DisallowedAbsoluteUris_MOST_POPULAR_HOSTS_BY_ABSOLUTEURI instance);
    partial void InsertDisallowedAbsoluteUris_MOST_POPULAR_HOSTS_BY_DOMAIN(DisallowedAbsoluteUris_MOST_POPULAR_HOSTS_BY_DOMAIN instance);
    partial void UpdateDisallowedAbsoluteUris_MOST_POPULAR_HOSTS_BY_DOMAIN(DisallowedAbsoluteUris_MOST_POPULAR_HOSTS_BY_DOMAIN instance);
    partial void DeleteDisallowedAbsoluteUris_MOST_POPULAR_HOSTS_BY_DOMAIN(DisallowedAbsoluteUris_MOST_POPULAR_HOSTS_BY_DOMAIN instance);
    partial void InsertDisallowedAbsoluteUris_MOST_POPULAR_HOSTS_BY_EXTENSION(DisallowedAbsoluteUris_MOST_POPULAR_HOSTS_BY_EXTENSION instance);
    partial void UpdateDisallowedAbsoluteUris_MOST_POPULAR_HOSTS_BY_EXTENSION(DisallowedAbsoluteUris_MOST_POPULAR_HOSTS_BY_EXTENSION instance);
    partial void DeleteDisallowedAbsoluteUris_MOST_POPULAR_HOSTS_BY_EXTENSION(DisallowedAbsoluteUris_MOST_POPULAR_HOSTS_BY_EXTENSION instance);
    partial void InsertDisallowedAbsoluteUris_MOST_POPULAR_HOSTS_BY_HOST(DisallowedAbsoluteUris_MOST_POPULAR_HOSTS_BY_HOST instance);
    partial void UpdateDisallowedAbsoluteUris_MOST_POPULAR_HOSTS_BY_HOST(DisallowedAbsoluteUris_MOST_POPULAR_HOSTS_BY_HOST instance);
    partial void DeleteDisallowedAbsoluteUris_MOST_POPULAR_HOSTS_BY_HOST(DisallowedAbsoluteUris_MOST_POPULAR_HOSTS_BY_HOST instance);
    partial void InsertDisallowedAbsoluteUris_MOST_POPULAR_HOSTS_BY_SCHEME(DisallowedAbsoluteUris_MOST_POPULAR_HOSTS_BY_SCHEME instance);
    partial void UpdateDisallowedAbsoluteUris_MOST_POPULAR_HOSTS_BY_SCHEME(DisallowedAbsoluteUris_MOST_POPULAR_HOSTS_BY_SCHEME instance);
    partial void DeleteDisallowedAbsoluteUris_MOST_POPULAR_HOSTS_BY_SCHEME(DisallowedAbsoluteUris_MOST_POPULAR_HOSTS_BY_SCHEME instance);
    partial void InsertDisallowedAbsoluteUris_MOST_POPULAR_SCHEMES_BY_ABSOLUTEURI(DisallowedAbsoluteUris_MOST_POPULAR_SCHEMES_BY_ABSOLUTEURI instance);
    partial void UpdateDisallowedAbsoluteUris_MOST_POPULAR_SCHEMES_BY_ABSOLUTEURI(DisallowedAbsoluteUris_MOST_POPULAR_SCHEMES_BY_ABSOLUTEURI instance);
    partial void DeleteDisallowedAbsoluteUris_MOST_POPULAR_SCHEMES_BY_ABSOLUTEURI(DisallowedAbsoluteUris_MOST_POPULAR_SCHEMES_BY_ABSOLUTEURI instance);
    partial void InsertDisallowedAbsoluteUris_MOST_POPULAR_SCHEMES_BY_DOMAIN(DisallowedAbsoluteUris_MOST_POPULAR_SCHEMES_BY_DOMAIN instance);
    partial void UpdateDisallowedAbsoluteUris_MOST_POPULAR_SCHEMES_BY_DOMAIN(DisallowedAbsoluteUris_MOST_POPULAR_SCHEMES_BY_DOMAIN instance);
    partial void DeleteDisallowedAbsoluteUris_MOST_POPULAR_SCHEMES_BY_DOMAIN(DisallowedAbsoluteUris_MOST_POPULAR_SCHEMES_BY_DOMAIN instance);
    partial void InsertDisallowedAbsoluteUris_MOST_POPULAR_SCHEMES_BY_EXTENSION(DisallowedAbsoluteUris_MOST_POPULAR_SCHEMES_BY_EXTENSION instance);
    partial void UpdateDisallowedAbsoluteUris_MOST_POPULAR_SCHEMES_BY_EXTENSION(DisallowedAbsoluteUris_MOST_POPULAR_SCHEMES_BY_EXTENSION instance);
    partial void DeleteDisallowedAbsoluteUris_MOST_POPULAR_SCHEMES_BY_EXTENSION(DisallowedAbsoluteUris_MOST_POPULAR_SCHEMES_BY_EXTENSION instance);
    partial void InsertDisallowedAbsoluteUris_MOST_POPULAR_SCHEMES_BY_HOST(DisallowedAbsoluteUris_MOST_POPULAR_SCHEMES_BY_HOST instance);
    partial void UpdateDisallowedAbsoluteUris_MOST_POPULAR_SCHEMES_BY_HOST(DisallowedAbsoluteUris_MOST_POPULAR_SCHEMES_BY_HOST instance);
    partial void DeleteDisallowedAbsoluteUris_MOST_POPULAR_SCHEMES_BY_HOST(DisallowedAbsoluteUris_MOST_POPULAR_SCHEMES_BY_HOST instance);
    partial void InsertEmailAddresses_COUNT_BY_ABSOLUTEURI(EmailAddresses_COUNT_BY_ABSOLUTEURI instance);
    partial void UpdateEmailAddresses_COUNT_BY_ABSOLUTEURI(EmailAddresses_COUNT_BY_ABSOLUTEURI instance);
    partial void DeleteEmailAddresses_COUNT_BY_ABSOLUTEURI(EmailAddresses_COUNT_BY_ABSOLUTEURI instance);
    partial void InsertEmailAddresses_MOST_POPULAR_SCHEMES_BY_SCHEME(EmailAddresses_MOST_POPULAR_SCHEMES_BY_SCHEME instance);
    partial void UpdateEmailAddresses_MOST_POPULAR_SCHEMES_BY_SCHEME(EmailAddresses_MOST_POPULAR_SCHEMES_BY_SCHEME instance);
    partial void DeleteEmailAddresses_MOST_POPULAR_SCHEMES_BY_SCHEME(EmailAddresses_MOST_POPULAR_SCHEMES_BY_SCHEME instance);
    partial void InsertEmailAddresses_COUNT_BY_DOMAIN(EmailAddresses_COUNT_BY_DOMAIN instance);
    partial void UpdateEmailAddresses_COUNT_BY_DOMAIN(EmailAddresses_COUNT_BY_DOMAIN instance);
    partial void DeleteEmailAddresses_COUNT_BY_DOMAIN(EmailAddresses_COUNT_BY_DOMAIN instance);
    partial void InsertEmailAddresses_COUNT_BY_EXTENSION(EmailAddresses_COUNT_BY_EXTENSION instance);
    partial void UpdateEmailAddresses_COUNT_BY_EXTENSION(EmailAddresses_COUNT_BY_EXTENSION instance);
    partial void DeleteEmailAddresses_COUNT_BY_EXTENSION(EmailAddresses_COUNT_BY_EXTENSION instance);
    partial void InsertEmailAddresses_COUNT_BY_HOST(EmailAddresses_COUNT_BY_HOST instance);
    partial void UpdateEmailAddresses_COUNT_BY_HOST(EmailAddresses_COUNT_BY_HOST instance);
    partial void DeleteEmailAddresses_COUNT_BY_HOST(EmailAddresses_COUNT_BY_HOST instance);
    partial void InsertEmailAddresses_COUNT_BY_SCHEME(EmailAddresses_COUNT_BY_SCHEME instance);
    partial void UpdateEmailAddresses_COUNT_BY_SCHEME(EmailAddresses_COUNT_BY_SCHEME instance);
    partial void DeleteEmailAddresses_COUNT_BY_SCHEME(EmailAddresses_COUNT_BY_SCHEME instance);
    partial void InsertEmailAddresses_MOST_POPULAR_ABSOLUTEURIS_BY_ABSOLUTEURI(EmailAddresses_MOST_POPULAR_ABSOLUTEURIS_BY_ABSOLUTEURI instance);
    partial void UpdateEmailAddresses_MOST_POPULAR_ABSOLUTEURIS_BY_ABSOLUTEURI(EmailAddresses_MOST_POPULAR_ABSOLUTEURIS_BY_ABSOLUTEURI instance);
    partial void DeleteEmailAddresses_MOST_POPULAR_ABSOLUTEURIS_BY_ABSOLUTEURI(EmailAddresses_MOST_POPULAR_ABSOLUTEURIS_BY_ABSOLUTEURI instance);
    partial void InsertEmailAddresses_MOST_POPULAR_ABSOLUTEURIS_BY_DOMAIN(EmailAddresses_MOST_POPULAR_ABSOLUTEURIS_BY_DOMAIN instance);
    partial void UpdateEmailAddresses_MOST_POPULAR_ABSOLUTEURIS_BY_DOMAIN(EmailAddresses_MOST_POPULAR_ABSOLUTEURIS_BY_DOMAIN instance);
    partial void DeleteEmailAddresses_MOST_POPULAR_ABSOLUTEURIS_BY_DOMAIN(EmailAddresses_MOST_POPULAR_ABSOLUTEURIS_BY_DOMAIN instance);
    partial void InsertEmailAddresses_MOST_POPULAR_ABSOLUTEURIS_BY_EXTENSION(EmailAddresses_MOST_POPULAR_ABSOLUTEURIS_BY_EXTENSION instance);
    partial void UpdateEmailAddresses_MOST_POPULAR_ABSOLUTEURIS_BY_EXTENSION(EmailAddresses_MOST_POPULAR_ABSOLUTEURIS_BY_EXTENSION instance);
    partial void DeleteEmailAddresses_MOST_POPULAR_ABSOLUTEURIS_BY_EXTENSION(EmailAddresses_MOST_POPULAR_ABSOLUTEURIS_BY_EXTENSION instance);
    partial void InsertEmailAddresses_MOST_POPULAR_ABSOLUTEURIS_BY_HOST(EmailAddresses_MOST_POPULAR_ABSOLUTEURIS_BY_HOST instance);
    partial void UpdateEmailAddresses_MOST_POPULAR_ABSOLUTEURIS_BY_HOST(EmailAddresses_MOST_POPULAR_ABSOLUTEURIS_BY_HOST instance);
    partial void DeleteEmailAddresses_MOST_POPULAR_ABSOLUTEURIS_BY_HOST(EmailAddresses_MOST_POPULAR_ABSOLUTEURIS_BY_HOST instance);
    partial void InsertEmailAddresses_MOST_POPULAR_ABSOLUTEURIS_BY_SCHEME(EmailAddresses_MOST_POPULAR_ABSOLUTEURIS_BY_SCHEME instance);
    partial void UpdateEmailAddresses_MOST_POPULAR_ABSOLUTEURIS_BY_SCHEME(EmailAddresses_MOST_POPULAR_ABSOLUTEURIS_BY_SCHEME instance);
    partial void DeleteEmailAddresses_MOST_POPULAR_ABSOLUTEURIS_BY_SCHEME(EmailAddresses_MOST_POPULAR_ABSOLUTEURIS_BY_SCHEME instance);
    partial void InsertEmailAddresses_MOST_POPULAR_DOMAINS_BY_ABSOLUTEURI(EmailAddresses_MOST_POPULAR_DOMAINS_BY_ABSOLUTEURI instance);
    partial void UpdateEmailAddresses_MOST_POPULAR_DOMAINS_BY_ABSOLUTEURI(EmailAddresses_MOST_POPULAR_DOMAINS_BY_ABSOLUTEURI instance);
    partial void DeleteEmailAddresses_MOST_POPULAR_DOMAINS_BY_ABSOLUTEURI(EmailAddresses_MOST_POPULAR_DOMAINS_BY_ABSOLUTEURI instance);
    partial void InsertEmailAddresses_MOST_POPULAR_DOMAINS_BY_DOMAIN(EmailAddresses_MOST_POPULAR_DOMAINS_BY_DOMAIN instance);
    partial void UpdateEmailAddresses_MOST_POPULAR_DOMAINS_BY_DOMAIN(EmailAddresses_MOST_POPULAR_DOMAINS_BY_DOMAIN instance);
    partial void DeleteEmailAddresses_MOST_POPULAR_DOMAINS_BY_DOMAIN(EmailAddresses_MOST_POPULAR_DOMAINS_BY_DOMAIN instance);
    partial void InsertEmailAddresses_MOST_POPULAR_DOMAINS_BY_EXTENSION(EmailAddresses_MOST_POPULAR_DOMAINS_BY_EXTENSION instance);
    partial void UpdateEmailAddresses_MOST_POPULAR_DOMAINS_BY_EXTENSION(EmailAddresses_MOST_POPULAR_DOMAINS_BY_EXTENSION instance);
    partial void DeleteEmailAddresses_MOST_POPULAR_DOMAINS_BY_EXTENSION(EmailAddresses_MOST_POPULAR_DOMAINS_BY_EXTENSION instance);
    partial void InsertEmailAddresses_MOST_POPULAR_DOMAINS_BY_HOST(EmailAddresses_MOST_POPULAR_DOMAINS_BY_HOST instance);
    partial void UpdateEmailAddresses_MOST_POPULAR_DOMAINS_BY_HOST(EmailAddresses_MOST_POPULAR_DOMAINS_BY_HOST instance);
    partial void DeleteEmailAddresses_MOST_POPULAR_DOMAINS_BY_HOST(EmailAddresses_MOST_POPULAR_DOMAINS_BY_HOST instance);
    partial void InsertEmailAddresses_MOST_POPULAR_DOMAINS_BY_SCHEME(EmailAddresses_MOST_POPULAR_DOMAINS_BY_SCHEME instance);
    partial void UpdateEmailAddresses_MOST_POPULAR_DOMAINS_BY_SCHEME(EmailAddresses_MOST_POPULAR_DOMAINS_BY_SCHEME instance);
    partial void DeleteEmailAddresses_MOST_POPULAR_DOMAINS_BY_SCHEME(EmailAddresses_MOST_POPULAR_DOMAINS_BY_SCHEME instance);
    partial void InsertEmailAddresses_MOST_POPULAR_EXTENSIONS_BY_ABSOLUTEURI(EmailAddresses_MOST_POPULAR_EXTENSIONS_BY_ABSOLUTEURI instance);
    partial void UpdateEmailAddresses_MOST_POPULAR_EXTENSIONS_BY_ABSOLUTEURI(EmailAddresses_MOST_POPULAR_EXTENSIONS_BY_ABSOLUTEURI instance);
    partial void DeleteEmailAddresses_MOST_POPULAR_EXTENSIONS_BY_ABSOLUTEURI(EmailAddresses_MOST_POPULAR_EXTENSIONS_BY_ABSOLUTEURI instance);
    partial void InsertEmailAddresses_MOST_POPULAR_EXTENSIONS_BY_DOMAIN(EmailAddresses_MOST_POPULAR_EXTENSIONS_BY_DOMAIN instance);
    partial void UpdateEmailAddresses_MOST_POPULAR_EXTENSIONS_BY_DOMAIN(EmailAddresses_MOST_POPULAR_EXTENSIONS_BY_DOMAIN instance);
    partial void DeleteEmailAddresses_MOST_POPULAR_EXTENSIONS_BY_DOMAIN(EmailAddresses_MOST_POPULAR_EXTENSIONS_BY_DOMAIN instance);
    partial void InsertEmailAddresses_MOST_POPULAR_EXTENSIONS_BY_EXTENSION(EmailAddresses_MOST_POPULAR_EXTENSIONS_BY_EXTENSION instance);
    partial void UpdateEmailAddresses_MOST_POPULAR_EXTENSIONS_BY_EXTENSION(EmailAddresses_MOST_POPULAR_EXTENSIONS_BY_EXTENSION instance);
    partial void DeleteEmailAddresses_MOST_POPULAR_EXTENSIONS_BY_EXTENSION(EmailAddresses_MOST_POPULAR_EXTENSIONS_BY_EXTENSION instance);
    partial void InsertEmailAddresses_MOST_POPULAR_EXTENSIONS_BY_HOST(EmailAddresses_MOST_POPULAR_EXTENSIONS_BY_HOST instance);
    partial void UpdateEmailAddresses_MOST_POPULAR_EXTENSIONS_BY_HOST(EmailAddresses_MOST_POPULAR_EXTENSIONS_BY_HOST instance);
    partial void DeleteEmailAddresses_MOST_POPULAR_EXTENSIONS_BY_HOST(EmailAddresses_MOST_POPULAR_EXTENSIONS_BY_HOST instance);
    partial void InsertEmailAddresses_MOST_POPULAR_EXTENSIONS_BY_SCHEME(EmailAddresses_MOST_POPULAR_EXTENSIONS_BY_SCHEME instance);
    partial void UpdateEmailAddresses_MOST_POPULAR_EXTENSIONS_BY_SCHEME(EmailAddresses_MOST_POPULAR_EXTENSIONS_BY_SCHEME instance);
    partial void DeleteEmailAddresses_MOST_POPULAR_EXTENSIONS_BY_SCHEME(EmailAddresses_MOST_POPULAR_EXTENSIONS_BY_SCHEME instance);
    partial void InsertEmailAddresses_MOST_POPULAR_HOSTS_BY_ABSOLUTEURI(EmailAddresses_MOST_POPULAR_HOSTS_BY_ABSOLUTEURI instance);
    partial void UpdateEmailAddresses_MOST_POPULAR_HOSTS_BY_ABSOLUTEURI(EmailAddresses_MOST_POPULAR_HOSTS_BY_ABSOLUTEURI instance);
    partial void DeleteEmailAddresses_MOST_POPULAR_HOSTS_BY_ABSOLUTEURI(EmailAddresses_MOST_POPULAR_HOSTS_BY_ABSOLUTEURI instance);
    partial void InsertEmailAddresses_MOST_POPULAR_HOSTS_BY_DOMAIN(EmailAddresses_MOST_POPULAR_HOSTS_BY_DOMAIN instance);
    partial void UpdateEmailAddresses_MOST_POPULAR_HOSTS_BY_DOMAIN(EmailAddresses_MOST_POPULAR_HOSTS_BY_DOMAIN instance);
    partial void DeleteEmailAddresses_MOST_POPULAR_HOSTS_BY_DOMAIN(EmailAddresses_MOST_POPULAR_HOSTS_BY_DOMAIN instance);
    partial void InsertEmailAddresses_MOST_POPULAR_HOSTS_BY_EXTENSION(EmailAddresses_MOST_POPULAR_HOSTS_BY_EXTENSION instance);
    partial void UpdateEmailAddresses_MOST_POPULAR_HOSTS_BY_EXTENSION(EmailAddresses_MOST_POPULAR_HOSTS_BY_EXTENSION instance);
    partial void DeleteEmailAddresses_MOST_POPULAR_HOSTS_BY_EXTENSION(EmailAddresses_MOST_POPULAR_HOSTS_BY_EXTENSION instance);
    partial void InsertEmailAddresses_MOST_POPULAR_HOSTS_BY_HOST(EmailAddresses_MOST_POPULAR_HOSTS_BY_HOST instance);
    partial void UpdateEmailAddresses_MOST_POPULAR_HOSTS_BY_HOST(EmailAddresses_MOST_POPULAR_HOSTS_BY_HOST instance);
    partial void DeleteEmailAddresses_MOST_POPULAR_HOSTS_BY_HOST(EmailAddresses_MOST_POPULAR_HOSTS_BY_HOST instance);
    partial void InsertEmailAddresses_MOST_POPULAR_HOSTS_BY_SCHEME(EmailAddresses_MOST_POPULAR_HOSTS_BY_SCHEME instance);
    partial void UpdateEmailAddresses_MOST_POPULAR_HOSTS_BY_SCHEME(EmailAddresses_MOST_POPULAR_HOSTS_BY_SCHEME instance);
    partial void DeleteEmailAddresses_MOST_POPULAR_HOSTS_BY_SCHEME(EmailAddresses_MOST_POPULAR_HOSTS_BY_SCHEME instance);
    partial void InsertEmailAddresses_MOST_POPULAR_SCHEMES_BY_ABSOLUTEURI(EmailAddresses_MOST_POPULAR_SCHEMES_BY_ABSOLUTEURI instance);
    partial void UpdateEmailAddresses_MOST_POPULAR_SCHEMES_BY_ABSOLUTEURI(EmailAddresses_MOST_POPULAR_SCHEMES_BY_ABSOLUTEURI instance);
    partial void DeleteEmailAddresses_MOST_POPULAR_SCHEMES_BY_ABSOLUTEURI(EmailAddresses_MOST_POPULAR_SCHEMES_BY_ABSOLUTEURI instance);
    partial void InsertEmailAddresses_MOST_POPULAR_SCHEMES_BY_DOMAIN(EmailAddresses_MOST_POPULAR_SCHEMES_BY_DOMAIN instance);
    partial void UpdateEmailAddresses_MOST_POPULAR_SCHEMES_BY_DOMAIN(EmailAddresses_MOST_POPULAR_SCHEMES_BY_DOMAIN instance);
    partial void DeleteEmailAddresses_MOST_POPULAR_SCHEMES_BY_DOMAIN(EmailAddresses_MOST_POPULAR_SCHEMES_BY_DOMAIN instance);
    partial void InsertEmailAddresses_MOST_POPULAR_SCHEMES_BY_EXTENSION(EmailAddresses_MOST_POPULAR_SCHEMES_BY_EXTENSION instance);
    partial void UpdateEmailAddresses_MOST_POPULAR_SCHEMES_BY_EXTENSION(EmailAddresses_MOST_POPULAR_SCHEMES_BY_EXTENSION instance);
    partial void DeleteEmailAddresses_MOST_POPULAR_SCHEMES_BY_EXTENSION(EmailAddresses_MOST_POPULAR_SCHEMES_BY_EXTENSION instance);
    partial void InsertEmailAddresses_MOST_POPULAR_SCHEMES_BY_HOST(EmailAddresses_MOST_POPULAR_SCHEMES_BY_HOST instance);
    partial void UpdateEmailAddresses_MOST_POPULAR_SCHEMES_BY_HOST(EmailAddresses_MOST_POPULAR_SCHEMES_BY_HOST instance);
    partial void DeleteEmailAddresses_MOST_POPULAR_SCHEMES_BY_HOST(EmailAddresses_MOST_POPULAR_SCHEMES_BY_HOST instance);
    partial void InsertExceptions_COUNT_BY_DOMAIN1(Exceptions_COUNT_BY_DOMAIN1 instance);
    partial void UpdateExceptions_COUNT_BY_DOMAIN1(Exceptions_COUNT_BY_DOMAIN1 instance);
    partial void DeleteExceptions_COUNT_BY_DOMAIN1(Exceptions_COUNT_BY_DOMAIN1 instance);
    partial void InsertExceptions_COUNT_BY_DOMAIN2(Exceptions_COUNT_BY_DOMAIN2 instance);
    partial void UpdateExceptions_COUNT_BY_DOMAIN2(Exceptions_COUNT_BY_DOMAIN2 instance);
    partial void DeleteExceptions_COUNT_BY_DOMAIN2(Exceptions_COUNT_BY_DOMAIN2 instance);
    partial void InsertExceptions_COUNT_BY_EXTENSION1(Exceptions_COUNT_BY_EXTENSION1 instance);
    partial void UpdateExceptions_COUNT_BY_EXTENSION1(Exceptions_COUNT_BY_EXTENSION1 instance);
    partial void DeleteExceptions_COUNT_BY_EXTENSION1(Exceptions_COUNT_BY_EXTENSION1 instance);
    partial void InsertExceptions_COUNT_BY_EXTENSION2(Exceptions_COUNT_BY_EXTENSION2 instance);
    partial void UpdateExceptions_COUNT_BY_EXTENSION2(Exceptions_COUNT_BY_EXTENSION2 instance);
    partial void DeleteExceptions_COUNT_BY_EXTENSION2(Exceptions_COUNT_BY_EXTENSION2 instance);
    partial void InsertExceptions_COUNT_BY_HOST1(Exceptions_COUNT_BY_HOST1 instance);
    partial void UpdateExceptions_COUNT_BY_HOST1(Exceptions_COUNT_BY_HOST1 instance);
    partial void DeleteExceptions_COUNT_BY_HOST1(Exceptions_COUNT_BY_HOST1 instance);
    partial void InsertExceptions_COUNT_BY_HOST2(Exceptions_COUNT_BY_HOST2 instance);
    partial void UpdateExceptions_COUNT_BY_HOST2(Exceptions_COUNT_BY_HOST2 instance);
    partial void DeleteExceptions_COUNT_BY_HOST2(Exceptions_COUNT_BY_HOST2 instance);
    partial void InsertExceptions_COUNT_BY_SCHEME1(Exceptions_COUNT_BY_SCHEME1 instance);
    partial void UpdateExceptions_COUNT_BY_SCHEME1(Exceptions_COUNT_BY_SCHEME1 instance);
    partial void DeleteExceptions_COUNT_BY_SCHEME1(Exceptions_COUNT_BY_SCHEME1 instance);
    partial void InsertExceptions_COUNT_BY_SCHEME2(Exceptions_COUNT_BY_SCHEME2 instance);
    partial void UpdateExceptions_COUNT_BY_SCHEME2(Exceptions_COUNT_BY_SCHEME2 instance);
    partial void DeleteExceptions_COUNT_BY_SCHEME2(Exceptions_COUNT_BY_SCHEME2 instance);
    partial void InsertExceptions_COUNT_BY_SOURCE(Exceptions_COUNT_BY_SOURCE instance);
    partial void UpdateExceptions_COUNT_BY_SOURCE(Exceptions_COUNT_BY_SOURCE instance);
    partial void DeleteExceptions_COUNT_BY_SOURCE(Exceptions_COUNT_BY_SOURCE instance);
    partial void InsertFiles_COUNT_BY_ABSOLUTEURI(Files_COUNT_BY_ABSOLUTEURI instance);
    partial void UpdateFiles_COUNT_BY_ABSOLUTEURI(Files_COUNT_BY_ABSOLUTEURI instance);
    partial void DeleteFiles_COUNT_BY_ABSOLUTEURI(Files_COUNT_BY_ABSOLUTEURI instance);
    partial void InsertFiles_MOST_POPULAR_SCHEMES_BY_SCHEME(Files_MOST_POPULAR_SCHEMES_BY_SCHEME instance);
    partial void UpdateFiles_MOST_POPULAR_SCHEMES_BY_SCHEME(Files_MOST_POPULAR_SCHEMES_BY_SCHEME instance);
    partial void DeleteFiles_MOST_POPULAR_SCHEMES_BY_SCHEME(Files_MOST_POPULAR_SCHEMES_BY_SCHEME instance);
    partial void InsertFiles_COUNT_BY_DOMAIN(Files_COUNT_BY_DOMAIN instance);
    partial void UpdateFiles_COUNT_BY_DOMAIN(Files_COUNT_BY_DOMAIN instance);
    partial void DeleteFiles_COUNT_BY_DOMAIN(Files_COUNT_BY_DOMAIN instance);
    partial void InsertFiles_COUNT_BY_EXTENSION(Files_COUNT_BY_EXTENSION instance);
    partial void UpdateFiles_COUNT_BY_EXTENSION(Files_COUNT_BY_EXTENSION instance);
    partial void DeleteFiles_COUNT_BY_EXTENSION(Files_COUNT_BY_EXTENSION instance);
    partial void InsertFiles_COUNT_BY_FULLTEXTINDEXTYPE(Files_COUNT_BY_FULLTEXTINDEXTYPE instance);
    partial void UpdateFiles_COUNT_BY_FULLTEXTINDEXTYPE(Files_COUNT_BY_FULLTEXTINDEXTYPE instance);
    partial void DeleteFiles_COUNT_BY_FULLTEXTINDEXTYPE(Files_COUNT_BY_FULLTEXTINDEXTYPE instance);
    partial void InsertFiles_COUNT_BY_HOST(Files_COUNT_BY_HOST instance);
    partial void UpdateFiles_COUNT_BY_HOST(Files_COUNT_BY_HOST instance);
    partial void DeleteFiles_COUNT_BY_HOST(Files_COUNT_BY_HOST instance);
    partial void InsertFiles_COUNT_BY_SCHEME(Files_COUNT_BY_SCHEME instance);
    partial void UpdateFiles_COUNT_BY_SCHEME(Files_COUNT_BY_SCHEME instance);
    partial void DeleteFiles_COUNT_BY_SCHEME(Files_COUNT_BY_SCHEME instance);
    partial void InsertFiles_MOST_POPULAR_ABSOLUTEURIS_BY_ABSOLUTEURI(Files_MOST_POPULAR_ABSOLUTEURIS_BY_ABSOLUTEURI instance);
    partial void UpdateFiles_MOST_POPULAR_ABSOLUTEURIS_BY_ABSOLUTEURI(Files_MOST_POPULAR_ABSOLUTEURIS_BY_ABSOLUTEURI instance);
    partial void DeleteFiles_MOST_POPULAR_ABSOLUTEURIS_BY_ABSOLUTEURI(Files_MOST_POPULAR_ABSOLUTEURIS_BY_ABSOLUTEURI instance);
    partial void InsertFiles_MOST_POPULAR_ABSOLUTEURIS_BY_DOMAIN(Files_MOST_POPULAR_ABSOLUTEURIS_BY_DOMAIN instance);
    partial void UpdateFiles_MOST_POPULAR_ABSOLUTEURIS_BY_DOMAIN(Files_MOST_POPULAR_ABSOLUTEURIS_BY_DOMAIN instance);
    partial void DeleteFiles_MOST_POPULAR_ABSOLUTEURIS_BY_DOMAIN(Files_MOST_POPULAR_ABSOLUTEURIS_BY_DOMAIN instance);
    partial void InsertFiles_MOST_POPULAR_ABSOLUTEURIS_BY_EXTENSION(Files_MOST_POPULAR_ABSOLUTEURIS_BY_EXTENSION instance);
    partial void UpdateFiles_MOST_POPULAR_ABSOLUTEURIS_BY_EXTENSION(Files_MOST_POPULAR_ABSOLUTEURIS_BY_EXTENSION instance);
    partial void DeleteFiles_MOST_POPULAR_ABSOLUTEURIS_BY_EXTENSION(Files_MOST_POPULAR_ABSOLUTEURIS_BY_EXTENSION instance);
    partial void InsertFiles_MOST_POPULAR_ABSOLUTEURIS_BY_HOST(Files_MOST_POPULAR_ABSOLUTEURIS_BY_HOST instance);
    partial void UpdateFiles_MOST_POPULAR_ABSOLUTEURIS_BY_HOST(Files_MOST_POPULAR_ABSOLUTEURIS_BY_HOST instance);
    partial void DeleteFiles_MOST_POPULAR_ABSOLUTEURIS_BY_HOST(Files_MOST_POPULAR_ABSOLUTEURIS_BY_HOST instance);
    partial void InsertFiles_MOST_POPULAR_ABSOLUTEURIS_BY_SCHEME(Files_MOST_POPULAR_ABSOLUTEURIS_BY_SCHEME instance);
    partial void UpdateFiles_MOST_POPULAR_ABSOLUTEURIS_BY_SCHEME(Files_MOST_POPULAR_ABSOLUTEURIS_BY_SCHEME instance);
    partial void DeleteFiles_MOST_POPULAR_ABSOLUTEURIS_BY_SCHEME(Files_MOST_POPULAR_ABSOLUTEURIS_BY_SCHEME instance);
    partial void InsertFiles_MOST_POPULAR_DOMAINS_BY_ABSOLUTEURI(Files_MOST_POPULAR_DOMAINS_BY_ABSOLUTEURI instance);
    partial void UpdateFiles_MOST_POPULAR_DOMAINS_BY_ABSOLUTEURI(Files_MOST_POPULAR_DOMAINS_BY_ABSOLUTEURI instance);
    partial void DeleteFiles_MOST_POPULAR_DOMAINS_BY_ABSOLUTEURI(Files_MOST_POPULAR_DOMAINS_BY_ABSOLUTEURI instance);
    partial void InsertFiles_MOST_POPULAR_DOMAINS_BY_DOMAIN(Files_MOST_POPULAR_DOMAINS_BY_DOMAIN instance);
    partial void UpdateFiles_MOST_POPULAR_DOMAINS_BY_DOMAIN(Files_MOST_POPULAR_DOMAINS_BY_DOMAIN instance);
    partial void DeleteFiles_MOST_POPULAR_DOMAINS_BY_DOMAIN(Files_MOST_POPULAR_DOMAINS_BY_DOMAIN instance);
    partial void InsertFiles_MOST_POPULAR_DOMAINS_BY_EXTENSION(Files_MOST_POPULAR_DOMAINS_BY_EXTENSION instance);
    partial void UpdateFiles_MOST_POPULAR_DOMAINS_BY_EXTENSION(Files_MOST_POPULAR_DOMAINS_BY_EXTENSION instance);
    partial void DeleteFiles_MOST_POPULAR_DOMAINS_BY_EXTENSION(Files_MOST_POPULAR_DOMAINS_BY_EXTENSION instance);
    partial void InsertFiles_MOST_POPULAR_DOMAINS_BY_HOST(Files_MOST_POPULAR_DOMAINS_BY_HOST instance);
    partial void UpdateFiles_MOST_POPULAR_DOMAINS_BY_HOST(Files_MOST_POPULAR_DOMAINS_BY_HOST instance);
    partial void DeleteFiles_MOST_POPULAR_DOMAINS_BY_HOST(Files_MOST_POPULAR_DOMAINS_BY_HOST instance);
    partial void InsertFiles_MOST_POPULAR_DOMAINS_BY_SCHEME(Files_MOST_POPULAR_DOMAINS_BY_SCHEME instance);
    partial void UpdateFiles_MOST_POPULAR_DOMAINS_BY_SCHEME(Files_MOST_POPULAR_DOMAINS_BY_SCHEME instance);
    partial void DeleteFiles_MOST_POPULAR_DOMAINS_BY_SCHEME(Files_MOST_POPULAR_DOMAINS_BY_SCHEME instance);
    partial void InsertFiles_MOST_POPULAR_EXTENSIONS_BY_ABSOLUTEURI(Files_MOST_POPULAR_EXTENSIONS_BY_ABSOLUTEURI instance);
    partial void UpdateFiles_MOST_POPULAR_EXTENSIONS_BY_ABSOLUTEURI(Files_MOST_POPULAR_EXTENSIONS_BY_ABSOLUTEURI instance);
    partial void DeleteFiles_MOST_POPULAR_EXTENSIONS_BY_ABSOLUTEURI(Files_MOST_POPULAR_EXTENSIONS_BY_ABSOLUTEURI instance);
    partial void InsertFiles_MOST_POPULAR_EXTENSIONS_BY_DOMAIN(Files_MOST_POPULAR_EXTENSIONS_BY_DOMAIN instance);
    partial void UpdateFiles_MOST_POPULAR_EXTENSIONS_BY_DOMAIN(Files_MOST_POPULAR_EXTENSIONS_BY_DOMAIN instance);
    partial void DeleteFiles_MOST_POPULAR_EXTENSIONS_BY_DOMAIN(Files_MOST_POPULAR_EXTENSIONS_BY_DOMAIN instance);
    partial void InsertFiles_MOST_POPULAR_EXTENSIONS_BY_EXTENSION(Files_MOST_POPULAR_EXTENSIONS_BY_EXTENSION instance);
    partial void UpdateFiles_MOST_POPULAR_EXTENSIONS_BY_EXTENSION(Files_MOST_POPULAR_EXTENSIONS_BY_EXTENSION instance);
    partial void DeleteFiles_MOST_POPULAR_EXTENSIONS_BY_EXTENSION(Files_MOST_POPULAR_EXTENSIONS_BY_EXTENSION instance);
    partial void InsertFiles_MOST_POPULAR_EXTENSIONS_BY_HOST(Files_MOST_POPULAR_EXTENSIONS_BY_HOST instance);
    partial void UpdateFiles_MOST_POPULAR_EXTENSIONS_BY_HOST(Files_MOST_POPULAR_EXTENSIONS_BY_HOST instance);
    partial void DeleteFiles_MOST_POPULAR_EXTENSIONS_BY_HOST(Files_MOST_POPULAR_EXTENSIONS_BY_HOST instance);
    partial void InsertFiles_MOST_POPULAR_EXTENSIONS_BY_SCHEME(Files_MOST_POPULAR_EXTENSIONS_BY_SCHEME instance);
    partial void UpdateFiles_MOST_POPULAR_EXTENSIONS_BY_SCHEME(Files_MOST_POPULAR_EXTENSIONS_BY_SCHEME instance);
    partial void DeleteFiles_MOST_POPULAR_EXTENSIONS_BY_SCHEME(Files_MOST_POPULAR_EXTENSIONS_BY_SCHEME instance);
    partial void InsertFiles_MOST_POPULAR_HOSTS_BY_ABSOLUTEURI(Files_MOST_POPULAR_HOSTS_BY_ABSOLUTEURI instance);
    partial void UpdateFiles_MOST_POPULAR_HOSTS_BY_ABSOLUTEURI(Files_MOST_POPULAR_HOSTS_BY_ABSOLUTEURI instance);
    partial void DeleteFiles_MOST_POPULAR_HOSTS_BY_ABSOLUTEURI(Files_MOST_POPULAR_HOSTS_BY_ABSOLUTEURI instance);
    partial void InsertFiles_MOST_POPULAR_HOSTS_BY_DOMAIN(Files_MOST_POPULAR_HOSTS_BY_DOMAIN instance);
    partial void UpdateFiles_MOST_POPULAR_HOSTS_BY_DOMAIN(Files_MOST_POPULAR_HOSTS_BY_DOMAIN instance);
    partial void DeleteFiles_MOST_POPULAR_HOSTS_BY_DOMAIN(Files_MOST_POPULAR_HOSTS_BY_DOMAIN instance);
    partial void InsertFiles_MOST_POPULAR_HOSTS_BY_EXTENSION(Files_MOST_POPULAR_HOSTS_BY_EXTENSION instance);
    partial void UpdateFiles_MOST_POPULAR_HOSTS_BY_EXTENSION(Files_MOST_POPULAR_HOSTS_BY_EXTENSION instance);
    partial void DeleteFiles_MOST_POPULAR_HOSTS_BY_EXTENSION(Files_MOST_POPULAR_HOSTS_BY_EXTENSION instance);
    partial void InsertFiles_MOST_POPULAR_HOSTS_BY_HOST(Files_MOST_POPULAR_HOSTS_BY_HOST instance);
    partial void UpdateFiles_MOST_POPULAR_HOSTS_BY_HOST(Files_MOST_POPULAR_HOSTS_BY_HOST instance);
    partial void DeleteFiles_MOST_POPULAR_HOSTS_BY_HOST(Files_MOST_POPULAR_HOSTS_BY_HOST instance);
    partial void InsertFiles_MOST_POPULAR_HOSTS_BY_SCHEME(Files_MOST_POPULAR_HOSTS_BY_SCHEME instance);
    partial void UpdateFiles_MOST_POPULAR_HOSTS_BY_SCHEME(Files_MOST_POPULAR_HOSTS_BY_SCHEME instance);
    partial void DeleteFiles_MOST_POPULAR_HOSTS_BY_SCHEME(Files_MOST_POPULAR_HOSTS_BY_SCHEME instance);
    partial void InsertFiles_MOST_POPULAR_SCHEMES_BY_ABSOLUTEURI(Files_MOST_POPULAR_SCHEMES_BY_ABSOLUTEURI instance);
    partial void UpdateFiles_MOST_POPULAR_SCHEMES_BY_ABSOLUTEURI(Files_MOST_POPULAR_SCHEMES_BY_ABSOLUTEURI instance);
    partial void DeleteFiles_MOST_POPULAR_SCHEMES_BY_ABSOLUTEURI(Files_MOST_POPULAR_SCHEMES_BY_ABSOLUTEURI instance);
    partial void InsertFiles_MOST_POPULAR_SCHEMES_BY_DOMAIN(Files_MOST_POPULAR_SCHEMES_BY_DOMAIN instance);
    partial void UpdateFiles_MOST_POPULAR_SCHEMES_BY_DOMAIN(Files_MOST_POPULAR_SCHEMES_BY_DOMAIN instance);
    partial void DeleteFiles_MOST_POPULAR_SCHEMES_BY_DOMAIN(Files_MOST_POPULAR_SCHEMES_BY_DOMAIN instance);
    partial void InsertFiles_MOST_POPULAR_SCHEMES_BY_EXTENSION(Files_MOST_POPULAR_SCHEMES_BY_EXTENSION instance);
    partial void UpdateFiles_MOST_POPULAR_SCHEMES_BY_EXTENSION(Files_MOST_POPULAR_SCHEMES_BY_EXTENSION instance);
    partial void DeleteFiles_MOST_POPULAR_SCHEMES_BY_EXTENSION(Files_MOST_POPULAR_SCHEMES_BY_EXTENSION instance);
    partial void InsertFiles_MOST_POPULAR_SCHEMES_BY_HOST(Files_MOST_POPULAR_SCHEMES_BY_HOST instance);
    partial void UpdateFiles_MOST_POPULAR_SCHEMES_BY_HOST(Files_MOST_POPULAR_SCHEMES_BY_HOST instance);
    partial void DeleteFiles_MOST_POPULAR_SCHEMES_BY_HOST(Files_MOST_POPULAR_SCHEMES_BY_HOST instance);
    partial void InsertHyperLinks_COUNT_BY_ABSOLUTEURI(HyperLinks_COUNT_BY_ABSOLUTEURI instance);
    partial void UpdateHyperLinks_COUNT_BY_ABSOLUTEURI(HyperLinks_COUNT_BY_ABSOLUTEURI instance);
    partial void DeleteHyperLinks_COUNT_BY_ABSOLUTEURI(HyperLinks_COUNT_BY_ABSOLUTEURI instance);
    partial void InsertHyperLinks_MOST_POPULAR_SCHEMES_BY_SCHEME(HyperLinks_MOST_POPULAR_SCHEMES_BY_SCHEME instance);
    partial void UpdateHyperLinks_MOST_POPULAR_SCHEMES_BY_SCHEME(HyperLinks_MOST_POPULAR_SCHEMES_BY_SCHEME instance);
    partial void DeleteHyperLinks_MOST_POPULAR_SCHEMES_BY_SCHEME(HyperLinks_MOST_POPULAR_SCHEMES_BY_SCHEME instance);
    partial void InsertHyperLinks_COUNT_BY_DOMAIN(HyperLinks_COUNT_BY_DOMAIN instance);
    partial void UpdateHyperLinks_COUNT_BY_DOMAIN(HyperLinks_COUNT_BY_DOMAIN instance);
    partial void DeleteHyperLinks_COUNT_BY_DOMAIN(HyperLinks_COUNT_BY_DOMAIN instance);
    partial void InsertHyperLinks_COUNT_BY_EXTENSION(HyperLinks_COUNT_BY_EXTENSION instance);
    partial void UpdateHyperLinks_COUNT_BY_EXTENSION(HyperLinks_COUNT_BY_EXTENSION instance);
    partial void DeleteHyperLinks_COUNT_BY_EXTENSION(HyperLinks_COUNT_BY_EXTENSION instance);
    partial void InsertHyperLinks_COUNT_BY_HOST(HyperLinks_COUNT_BY_HOST instance);
    partial void UpdateHyperLinks_COUNT_BY_HOST(HyperLinks_COUNT_BY_HOST instance);
    partial void DeleteHyperLinks_COUNT_BY_HOST(HyperLinks_COUNT_BY_HOST instance);
    partial void InsertHyperLinks_COUNT_BY_SCHEME(HyperLinks_COUNT_BY_SCHEME instance);
    partial void UpdateHyperLinks_COUNT_BY_SCHEME(HyperLinks_COUNT_BY_SCHEME instance);
    partial void DeleteHyperLinks_COUNT_BY_SCHEME(HyperLinks_COUNT_BY_SCHEME instance);
    partial void InsertHyperLinks_MOST_POPULAR_ABSOLUTEURIS_BY_ABSOLUTEURI(HyperLinks_MOST_POPULAR_ABSOLUTEURIS_BY_ABSOLUTEURI instance);
    partial void UpdateHyperLinks_MOST_POPULAR_ABSOLUTEURIS_BY_ABSOLUTEURI(HyperLinks_MOST_POPULAR_ABSOLUTEURIS_BY_ABSOLUTEURI instance);
    partial void DeleteHyperLinks_MOST_POPULAR_ABSOLUTEURIS_BY_ABSOLUTEURI(HyperLinks_MOST_POPULAR_ABSOLUTEURIS_BY_ABSOLUTEURI instance);
    partial void InsertHyperLinks_MOST_POPULAR_ABSOLUTEURIS_BY_DOMAIN(HyperLinks_MOST_POPULAR_ABSOLUTEURIS_BY_DOMAIN instance);
    partial void UpdateHyperLinks_MOST_POPULAR_ABSOLUTEURIS_BY_DOMAIN(HyperLinks_MOST_POPULAR_ABSOLUTEURIS_BY_DOMAIN instance);
    partial void DeleteHyperLinks_MOST_POPULAR_ABSOLUTEURIS_BY_DOMAIN(HyperLinks_MOST_POPULAR_ABSOLUTEURIS_BY_DOMAIN instance);
    partial void InsertHyperLinks_MOST_POPULAR_ABSOLUTEURIS_BY_EXTENSION(HyperLinks_MOST_POPULAR_ABSOLUTEURIS_BY_EXTENSION instance);
    partial void UpdateHyperLinks_MOST_POPULAR_ABSOLUTEURIS_BY_EXTENSION(HyperLinks_MOST_POPULAR_ABSOLUTEURIS_BY_EXTENSION instance);
    partial void DeleteHyperLinks_MOST_POPULAR_ABSOLUTEURIS_BY_EXTENSION(HyperLinks_MOST_POPULAR_ABSOLUTEURIS_BY_EXTENSION instance);
    partial void InsertHyperLinks_MOST_POPULAR_ABSOLUTEURIS_BY_HOST(HyperLinks_MOST_POPULAR_ABSOLUTEURIS_BY_HOST instance);
    partial void UpdateHyperLinks_MOST_POPULAR_ABSOLUTEURIS_BY_HOST(HyperLinks_MOST_POPULAR_ABSOLUTEURIS_BY_HOST instance);
    partial void DeleteHyperLinks_MOST_POPULAR_ABSOLUTEURIS_BY_HOST(HyperLinks_MOST_POPULAR_ABSOLUTEURIS_BY_HOST instance);
    partial void InsertHyperLinks_MOST_POPULAR_ABSOLUTEURIS_BY_SCHEME(HyperLinks_MOST_POPULAR_ABSOLUTEURIS_BY_SCHEME instance);
    partial void UpdateHyperLinks_MOST_POPULAR_ABSOLUTEURIS_BY_SCHEME(HyperLinks_MOST_POPULAR_ABSOLUTEURIS_BY_SCHEME instance);
    partial void DeleteHyperLinks_MOST_POPULAR_ABSOLUTEURIS_BY_SCHEME(HyperLinks_MOST_POPULAR_ABSOLUTEURIS_BY_SCHEME instance);
    partial void InsertHyperLinks_MOST_POPULAR_DOMAINS_BY_ABSOLUTEURI(HyperLinks_MOST_POPULAR_DOMAINS_BY_ABSOLUTEURI instance);
    partial void UpdateHyperLinks_MOST_POPULAR_DOMAINS_BY_ABSOLUTEURI(HyperLinks_MOST_POPULAR_DOMAINS_BY_ABSOLUTEURI instance);
    partial void DeleteHyperLinks_MOST_POPULAR_DOMAINS_BY_ABSOLUTEURI(HyperLinks_MOST_POPULAR_DOMAINS_BY_ABSOLUTEURI instance);
    partial void InsertHyperLinks_MOST_POPULAR_DOMAINS_BY_DOMAIN(HyperLinks_MOST_POPULAR_DOMAINS_BY_DOMAIN instance);
    partial void UpdateHyperLinks_MOST_POPULAR_DOMAINS_BY_DOMAIN(HyperLinks_MOST_POPULAR_DOMAINS_BY_DOMAIN instance);
    partial void DeleteHyperLinks_MOST_POPULAR_DOMAINS_BY_DOMAIN(HyperLinks_MOST_POPULAR_DOMAINS_BY_DOMAIN instance);
    partial void InsertHyperLinks_MOST_POPULAR_DOMAINS_BY_EXTENSION(HyperLinks_MOST_POPULAR_DOMAINS_BY_EXTENSION instance);
    partial void UpdateHyperLinks_MOST_POPULAR_DOMAINS_BY_EXTENSION(HyperLinks_MOST_POPULAR_DOMAINS_BY_EXTENSION instance);
    partial void DeleteHyperLinks_MOST_POPULAR_DOMAINS_BY_EXTENSION(HyperLinks_MOST_POPULAR_DOMAINS_BY_EXTENSION instance);
    partial void InsertHyperLinks_MOST_POPULAR_DOMAINS_BY_HOST(HyperLinks_MOST_POPULAR_DOMAINS_BY_HOST instance);
    partial void UpdateHyperLinks_MOST_POPULAR_DOMAINS_BY_HOST(HyperLinks_MOST_POPULAR_DOMAINS_BY_HOST instance);
    partial void DeleteHyperLinks_MOST_POPULAR_DOMAINS_BY_HOST(HyperLinks_MOST_POPULAR_DOMAINS_BY_HOST instance);
    partial void InsertHyperLinks_MOST_POPULAR_DOMAINS_BY_SCHEME(HyperLinks_MOST_POPULAR_DOMAINS_BY_SCHEME instance);
    partial void UpdateHyperLinks_MOST_POPULAR_DOMAINS_BY_SCHEME(HyperLinks_MOST_POPULAR_DOMAINS_BY_SCHEME instance);
    partial void DeleteHyperLinks_MOST_POPULAR_DOMAINS_BY_SCHEME(HyperLinks_MOST_POPULAR_DOMAINS_BY_SCHEME instance);
    partial void InsertHyperLinks_MOST_POPULAR_EXTENSIONS_BY_ABSOLUTEURI(HyperLinks_MOST_POPULAR_EXTENSIONS_BY_ABSOLUTEURI instance);
    partial void UpdateHyperLinks_MOST_POPULAR_EXTENSIONS_BY_ABSOLUTEURI(HyperLinks_MOST_POPULAR_EXTENSIONS_BY_ABSOLUTEURI instance);
    partial void DeleteHyperLinks_MOST_POPULAR_EXTENSIONS_BY_ABSOLUTEURI(HyperLinks_MOST_POPULAR_EXTENSIONS_BY_ABSOLUTEURI instance);
    partial void InsertHyperLinks_MOST_POPULAR_EXTENSIONS_BY_DOMAIN(HyperLinks_MOST_POPULAR_EXTENSIONS_BY_DOMAIN instance);
    partial void UpdateHyperLinks_MOST_POPULAR_EXTENSIONS_BY_DOMAIN(HyperLinks_MOST_POPULAR_EXTENSIONS_BY_DOMAIN instance);
    partial void DeleteHyperLinks_MOST_POPULAR_EXTENSIONS_BY_DOMAIN(HyperLinks_MOST_POPULAR_EXTENSIONS_BY_DOMAIN instance);
    partial void InsertHyperLinks_MOST_POPULAR_EXTENSIONS_BY_EXTENSION(HyperLinks_MOST_POPULAR_EXTENSIONS_BY_EXTENSION instance);
    partial void UpdateHyperLinks_MOST_POPULAR_EXTENSIONS_BY_EXTENSION(HyperLinks_MOST_POPULAR_EXTENSIONS_BY_EXTENSION instance);
    partial void DeleteHyperLinks_MOST_POPULAR_EXTENSIONS_BY_EXTENSION(HyperLinks_MOST_POPULAR_EXTENSIONS_BY_EXTENSION instance);
    partial void InsertHyperLinks_MOST_POPULAR_EXTENSIONS_BY_HOST(HyperLinks_MOST_POPULAR_EXTENSIONS_BY_HOST instance);
    partial void UpdateHyperLinks_MOST_POPULAR_EXTENSIONS_BY_HOST(HyperLinks_MOST_POPULAR_EXTENSIONS_BY_HOST instance);
    partial void DeleteHyperLinks_MOST_POPULAR_EXTENSIONS_BY_HOST(HyperLinks_MOST_POPULAR_EXTENSIONS_BY_HOST instance);
    partial void InsertHyperLinks_MOST_POPULAR_EXTENSIONS_BY_SCHEME(HyperLinks_MOST_POPULAR_EXTENSIONS_BY_SCHEME instance);
    partial void UpdateHyperLinks_MOST_POPULAR_EXTENSIONS_BY_SCHEME(HyperLinks_MOST_POPULAR_EXTENSIONS_BY_SCHEME instance);
    partial void DeleteHyperLinks_MOST_POPULAR_EXTENSIONS_BY_SCHEME(HyperLinks_MOST_POPULAR_EXTENSIONS_BY_SCHEME instance);
    partial void InsertHyperLinks_MOST_POPULAR_HOSTS_BY_ABSOLUTEURI(HyperLinks_MOST_POPULAR_HOSTS_BY_ABSOLUTEURI instance);
    partial void UpdateHyperLinks_MOST_POPULAR_HOSTS_BY_ABSOLUTEURI(HyperLinks_MOST_POPULAR_HOSTS_BY_ABSOLUTEURI instance);
    partial void DeleteHyperLinks_MOST_POPULAR_HOSTS_BY_ABSOLUTEURI(HyperLinks_MOST_POPULAR_HOSTS_BY_ABSOLUTEURI instance);
    partial void InsertHyperLinks_MOST_POPULAR_HOSTS_BY_DOMAIN(HyperLinks_MOST_POPULAR_HOSTS_BY_DOMAIN instance);
    partial void UpdateHyperLinks_MOST_POPULAR_HOSTS_BY_DOMAIN(HyperLinks_MOST_POPULAR_HOSTS_BY_DOMAIN instance);
    partial void DeleteHyperLinks_MOST_POPULAR_HOSTS_BY_DOMAIN(HyperLinks_MOST_POPULAR_HOSTS_BY_DOMAIN instance);
    partial void InsertHyperLinks_MOST_POPULAR_HOSTS_BY_EXTENSION(HyperLinks_MOST_POPULAR_HOSTS_BY_EXTENSION instance);
    partial void UpdateHyperLinks_MOST_POPULAR_HOSTS_BY_EXTENSION(HyperLinks_MOST_POPULAR_HOSTS_BY_EXTENSION instance);
    partial void DeleteHyperLinks_MOST_POPULAR_HOSTS_BY_EXTENSION(HyperLinks_MOST_POPULAR_HOSTS_BY_EXTENSION instance);
    partial void InsertHyperLinks_MOST_POPULAR_HOSTS_BY_HOST(HyperLinks_MOST_POPULAR_HOSTS_BY_HOST instance);
    partial void UpdateHyperLinks_MOST_POPULAR_HOSTS_BY_HOST(HyperLinks_MOST_POPULAR_HOSTS_BY_HOST instance);
    partial void DeleteHyperLinks_MOST_POPULAR_HOSTS_BY_HOST(HyperLinks_MOST_POPULAR_HOSTS_BY_HOST instance);
    partial void InsertHyperLinks_MOST_POPULAR_HOSTS_BY_SCHEME(HyperLinks_MOST_POPULAR_HOSTS_BY_SCHEME instance);
    partial void UpdateHyperLinks_MOST_POPULAR_HOSTS_BY_SCHEME(HyperLinks_MOST_POPULAR_HOSTS_BY_SCHEME instance);
    partial void DeleteHyperLinks_MOST_POPULAR_HOSTS_BY_SCHEME(HyperLinks_MOST_POPULAR_HOSTS_BY_SCHEME instance);
    partial void InsertHyperLinks_MOST_POPULAR_SCHEMES_BY_ABSOLUTEURI(HyperLinks_MOST_POPULAR_SCHEMES_BY_ABSOLUTEURI instance);
    partial void UpdateHyperLinks_MOST_POPULAR_SCHEMES_BY_ABSOLUTEURI(HyperLinks_MOST_POPULAR_SCHEMES_BY_ABSOLUTEURI instance);
    partial void DeleteHyperLinks_MOST_POPULAR_SCHEMES_BY_ABSOLUTEURI(HyperLinks_MOST_POPULAR_SCHEMES_BY_ABSOLUTEURI instance);
    partial void InsertHyperLinks_MOST_POPULAR_SCHEMES_BY_DOMAIN(HyperLinks_MOST_POPULAR_SCHEMES_BY_DOMAIN instance);
    partial void UpdateHyperLinks_MOST_POPULAR_SCHEMES_BY_DOMAIN(HyperLinks_MOST_POPULAR_SCHEMES_BY_DOMAIN instance);
    partial void DeleteHyperLinks_MOST_POPULAR_SCHEMES_BY_DOMAIN(HyperLinks_MOST_POPULAR_SCHEMES_BY_DOMAIN instance);
    partial void InsertHyperLinks_MOST_POPULAR_SCHEMES_BY_EXTENSION(HyperLinks_MOST_POPULAR_SCHEMES_BY_EXTENSION instance);
    partial void UpdateHyperLinks_MOST_POPULAR_SCHEMES_BY_EXTENSION(HyperLinks_MOST_POPULAR_SCHEMES_BY_EXTENSION instance);
    partial void DeleteHyperLinks_MOST_POPULAR_SCHEMES_BY_EXTENSION(HyperLinks_MOST_POPULAR_SCHEMES_BY_EXTENSION instance);
    partial void InsertHyperLinks_MOST_POPULAR_SCHEMES_BY_HOST(HyperLinks_MOST_POPULAR_SCHEMES_BY_HOST instance);
    partial void UpdateHyperLinks_MOST_POPULAR_SCHEMES_BY_HOST(HyperLinks_MOST_POPULAR_SCHEMES_BY_HOST instance);
    partial void DeleteHyperLinks_MOST_POPULAR_SCHEMES_BY_HOST(HyperLinks_MOST_POPULAR_SCHEMES_BY_HOST instance);
    partial void InsertImages_COUNT_BY_ABSOLUTEURI(Images_COUNT_BY_ABSOLUTEURI instance);
    partial void UpdateImages_COUNT_BY_ABSOLUTEURI(Images_COUNT_BY_ABSOLUTEURI instance);
    partial void DeleteImages_COUNT_BY_ABSOLUTEURI(Images_COUNT_BY_ABSOLUTEURI instance);
    partial void InsertWebPages_COUNT_BY_SCHEME(WebPages_COUNT_BY_SCHEME instance);
    partial void UpdateWebPages_COUNT_BY_SCHEME(WebPages_COUNT_BY_SCHEME instance);
    partial void DeleteWebPages_COUNT_BY_SCHEME(WebPages_COUNT_BY_SCHEME instance);
    partial void InsertImages_COUNT_BY_DOMAIN(Images_COUNT_BY_DOMAIN instance);
    partial void UpdateImages_COUNT_BY_DOMAIN(Images_COUNT_BY_DOMAIN instance);
    partial void DeleteImages_COUNT_BY_DOMAIN(Images_COUNT_BY_DOMAIN instance);
    partial void InsertImages_COUNT_BY_EXTENSION(Images_COUNT_BY_EXTENSION instance);
    partial void UpdateImages_COUNT_BY_EXTENSION(Images_COUNT_BY_EXTENSION instance);
    partial void DeleteImages_COUNT_BY_EXTENSION(Images_COUNT_BY_EXTENSION instance);
    partial void InsertImages_COUNT_BY_FULLTEXTINDEXTYPE(Images_COUNT_BY_FULLTEXTINDEXTYPE instance);
    partial void UpdateImages_COUNT_BY_FULLTEXTINDEXTYPE(Images_COUNT_BY_FULLTEXTINDEXTYPE instance);
    partial void DeleteImages_COUNT_BY_FULLTEXTINDEXTYPE(Images_COUNT_BY_FULLTEXTINDEXTYPE instance);
    partial void InsertImages_COUNT_BY_HOST(Images_COUNT_BY_HOST instance);
    partial void UpdateImages_COUNT_BY_HOST(Images_COUNT_BY_HOST instance);
    partial void DeleteImages_COUNT_BY_HOST(Images_COUNT_BY_HOST instance);
    partial void InsertImages_COUNT_BY_SCHEME(Images_COUNT_BY_SCHEME instance);
    partial void UpdateImages_COUNT_BY_SCHEME(Images_COUNT_BY_SCHEME instance);
    partial void DeleteImages_COUNT_BY_SCHEME(Images_COUNT_BY_SCHEME instance);
    partial void InsertImages_MOST_POPULAR_ABSOLUTEURIS_BY_ABSOLUTEURI(Images_MOST_POPULAR_ABSOLUTEURIS_BY_ABSOLUTEURI instance);
    partial void UpdateImages_MOST_POPULAR_ABSOLUTEURIS_BY_ABSOLUTEURI(Images_MOST_POPULAR_ABSOLUTEURIS_BY_ABSOLUTEURI instance);
    partial void DeleteImages_MOST_POPULAR_ABSOLUTEURIS_BY_ABSOLUTEURI(Images_MOST_POPULAR_ABSOLUTEURIS_BY_ABSOLUTEURI instance);
    partial void InsertImages_MOST_POPULAR_ABSOLUTEURIS_BY_DOMAIN(Images_MOST_POPULAR_ABSOLUTEURIS_BY_DOMAIN instance);
    partial void UpdateImages_MOST_POPULAR_ABSOLUTEURIS_BY_DOMAIN(Images_MOST_POPULAR_ABSOLUTEURIS_BY_DOMAIN instance);
    partial void DeleteImages_MOST_POPULAR_ABSOLUTEURIS_BY_DOMAIN(Images_MOST_POPULAR_ABSOLUTEURIS_BY_DOMAIN instance);
    partial void InsertImages_MOST_POPULAR_ABSOLUTEURIS_BY_EXTENSION(Images_MOST_POPULAR_ABSOLUTEURIS_BY_EXTENSION instance);
    partial void UpdateImages_MOST_POPULAR_ABSOLUTEURIS_BY_EXTENSION(Images_MOST_POPULAR_ABSOLUTEURIS_BY_EXTENSION instance);
    partial void DeleteImages_MOST_POPULAR_ABSOLUTEURIS_BY_EXTENSION(Images_MOST_POPULAR_ABSOLUTEURIS_BY_EXTENSION instance);
    partial void InsertImages_MOST_POPULAR_ABSOLUTEURIS_BY_HOST(Images_MOST_POPULAR_ABSOLUTEURIS_BY_HOST instance);
    partial void UpdateImages_MOST_POPULAR_ABSOLUTEURIS_BY_HOST(Images_MOST_POPULAR_ABSOLUTEURIS_BY_HOST instance);
    partial void DeleteImages_MOST_POPULAR_ABSOLUTEURIS_BY_HOST(Images_MOST_POPULAR_ABSOLUTEURIS_BY_HOST instance);
    partial void InsertImages_MOST_POPULAR_ABSOLUTEURIS_BY_SCHEME(Images_MOST_POPULAR_ABSOLUTEURIS_BY_SCHEME instance);
    partial void UpdateImages_MOST_POPULAR_ABSOLUTEURIS_BY_SCHEME(Images_MOST_POPULAR_ABSOLUTEURIS_BY_SCHEME instance);
    partial void DeleteImages_MOST_POPULAR_ABSOLUTEURIS_BY_SCHEME(Images_MOST_POPULAR_ABSOLUTEURIS_BY_SCHEME instance);
    partial void InsertImages_MOST_POPULAR_DOMAINS_BY_ABSOLUTEURI(Images_MOST_POPULAR_DOMAINS_BY_ABSOLUTEURI instance);
    partial void UpdateImages_MOST_POPULAR_DOMAINS_BY_ABSOLUTEURI(Images_MOST_POPULAR_DOMAINS_BY_ABSOLUTEURI instance);
    partial void DeleteImages_MOST_POPULAR_DOMAINS_BY_ABSOLUTEURI(Images_MOST_POPULAR_DOMAINS_BY_ABSOLUTEURI instance);
    partial void InsertImages_MOST_POPULAR_DOMAINS_BY_DOMAIN(Images_MOST_POPULAR_DOMAINS_BY_DOMAIN instance);
    partial void UpdateImages_MOST_POPULAR_DOMAINS_BY_DOMAIN(Images_MOST_POPULAR_DOMAINS_BY_DOMAIN instance);
    partial void DeleteImages_MOST_POPULAR_DOMAINS_BY_DOMAIN(Images_MOST_POPULAR_DOMAINS_BY_DOMAIN instance);
    partial void InsertImages_MOST_POPULAR_DOMAINS_BY_EXTENSION(Images_MOST_POPULAR_DOMAINS_BY_EXTENSION instance);
    partial void UpdateImages_MOST_POPULAR_DOMAINS_BY_EXTENSION(Images_MOST_POPULAR_DOMAINS_BY_EXTENSION instance);
    partial void DeleteImages_MOST_POPULAR_DOMAINS_BY_EXTENSION(Images_MOST_POPULAR_DOMAINS_BY_EXTENSION instance);
    partial void InsertImages_MOST_POPULAR_DOMAINS_BY_HOST(Images_MOST_POPULAR_DOMAINS_BY_HOST instance);
    partial void UpdateImages_MOST_POPULAR_DOMAINS_BY_HOST(Images_MOST_POPULAR_DOMAINS_BY_HOST instance);
    partial void DeleteImages_MOST_POPULAR_DOMAINS_BY_HOST(Images_MOST_POPULAR_DOMAINS_BY_HOST instance);
    partial void InsertImages_MOST_POPULAR_DOMAINS_BY_SCHEME(Images_MOST_POPULAR_DOMAINS_BY_SCHEME instance);
    partial void UpdateImages_MOST_POPULAR_DOMAINS_BY_SCHEME(Images_MOST_POPULAR_DOMAINS_BY_SCHEME instance);
    partial void DeleteImages_MOST_POPULAR_DOMAINS_BY_SCHEME(Images_MOST_POPULAR_DOMAINS_BY_SCHEME instance);
    partial void InsertImages_MOST_POPULAR_EXTENSIONS_BY_ABSOLUTEURI(Images_MOST_POPULAR_EXTENSIONS_BY_ABSOLUTEURI instance);
    partial void UpdateImages_MOST_POPULAR_EXTENSIONS_BY_ABSOLUTEURI(Images_MOST_POPULAR_EXTENSIONS_BY_ABSOLUTEURI instance);
    partial void DeleteImages_MOST_POPULAR_EXTENSIONS_BY_ABSOLUTEURI(Images_MOST_POPULAR_EXTENSIONS_BY_ABSOLUTEURI instance);
    partial void InsertImages_MOST_POPULAR_EXTENSIONS_BY_DOMAIN(Images_MOST_POPULAR_EXTENSIONS_BY_DOMAIN instance);
    partial void UpdateImages_MOST_POPULAR_EXTENSIONS_BY_DOMAIN(Images_MOST_POPULAR_EXTENSIONS_BY_DOMAIN instance);
    partial void DeleteImages_MOST_POPULAR_EXTENSIONS_BY_DOMAIN(Images_MOST_POPULAR_EXTENSIONS_BY_DOMAIN instance);
    partial void InsertImages_MOST_POPULAR_EXTENSIONS_BY_EXTENSION(Images_MOST_POPULAR_EXTENSIONS_BY_EXTENSION instance);
    partial void UpdateImages_MOST_POPULAR_EXTENSIONS_BY_EXTENSION(Images_MOST_POPULAR_EXTENSIONS_BY_EXTENSION instance);
    partial void DeleteImages_MOST_POPULAR_EXTENSIONS_BY_EXTENSION(Images_MOST_POPULAR_EXTENSIONS_BY_EXTENSION instance);
    partial void InsertImages_MOST_POPULAR_EXTENSIONS_BY_HOST(Images_MOST_POPULAR_EXTENSIONS_BY_HOST instance);
    partial void UpdateImages_MOST_POPULAR_EXTENSIONS_BY_HOST(Images_MOST_POPULAR_EXTENSIONS_BY_HOST instance);
    partial void DeleteImages_MOST_POPULAR_EXTENSIONS_BY_HOST(Images_MOST_POPULAR_EXTENSIONS_BY_HOST instance);
    partial void InsertImages_MOST_POPULAR_EXTENSIONS_BY_SCHEME(Images_MOST_POPULAR_EXTENSIONS_BY_SCHEME instance);
    partial void UpdateImages_MOST_POPULAR_EXTENSIONS_BY_SCHEME(Images_MOST_POPULAR_EXTENSIONS_BY_SCHEME instance);
    partial void DeleteImages_MOST_POPULAR_EXTENSIONS_BY_SCHEME(Images_MOST_POPULAR_EXTENSIONS_BY_SCHEME instance);
    partial void InsertImages_MOST_POPULAR_HOSTS_BY_ABSOLUTEURI(Images_MOST_POPULAR_HOSTS_BY_ABSOLUTEURI instance);
    partial void UpdateImages_MOST_POPULAR_HOSTS_BY_ABSOLUTEURI(Images_MOST_POPULAR_HOSTS_BY_ABSOLUTEURI instance);
    partial void DeleteImages_MOST_POPULAR_HOSTS_BY_ABSOLUTEURI(Images_MOST_POPULAR_HOSTS_BY_ABSOLUTEURI instance);
    partial void InsertImages_MOST_POPULAR_HOSTS_BY_DOMAIN(Images_MOST_POPULAR_HOSTS_BY_DOMAIN instance);
    partial void UpdateImages_MOST_POPULAR_HOSTS_BY_DOMAIN(Images_MOST_POPULAR_HOSTS_BY_DOMAIN instance);
    partial void DeleteImages_MOST_POPULAR_HOSTS_BY_DOMAIN(Images_MOST_POPULAR_HOSTS_BY_DOMAIN instance);
    partial void InsertImages_MOST_POPULAR_HOSTS_BY_EXTENSION(Images_MOST_POPULAR_HOSTS_BY_EXTENSION instance);
    partial void UpdateImages_MOST_POPULAR_HOSTS_BY_EXTENSION(Images_MOST_POPULAR_HOSTS_BY_EXTENSION instance);
    partial void DeleteImages_MOST_POPULAR_HOSTS_BY_EXTENSION(Images_MOST_POPULAR_HOSTS_BY_EXTENSION instance);
    partial void InsertImages_MOST_POPULAR_HOSTS_BY_HOST(Images_MOST_POPULAR_HOSTS_BY_HOST instance);
    partial void UpdateImages_MOST_POPULAR_HOSTS_BY_HOST(Images_MOST_POPULAR_HOSTS_BY_HOST instance);
    partial void DeleteImages_MOST_POPULAR_HOSTS_BY_HOST(Images_MOST_POPULAR_HOSTS_BY_HOST instance);
    partial void InsertImages_MOST_POPULAR_HOSTS_BY_SCHEME(Images_MOST_POPULAR_HOSTS_BY_SCHEME instance);
    partial void UpdateImages_MOST_POPULAR_HOSTS_BY_SCHEME(Images_MOST_POPULAR_HOSTS_BY_SCHEME instance);
    partial void DeleteImages_MOST_POPULAR_HOSTS_BY_SCHEME(Images_MOST_POPULAR_HOSTS_BY_SCHEME instance);
    partial void InsertImages_MOST_POPULAR_SCHEMES_BY_ABSOLUTEURI(Images_MOST_POPULAR_SCHEMES_BY_ABSOLUTEURI instance);
    partial void UpdateImages_MOST_POPULAR_SCHEMES_BY_ABSOLUTEURI(Images_MOST_POPULAR_SCHEMES_BY_ABSOLUTEURI instance);
    partial void DeleteImages_MOST_POPULAR_SCHEMES_BY_ABSOLUTEURI(Images_MOST_POPULAR_SCHEMES_BY_ABSOLUTEURI instance);
    partial void InsertImages_MOST_POPULAR_SCHEMES_BY_DOMAIN(Images_MOST_POPULAR_SCHEMES_BY_DOMAIN instance);
    partial void UpdateImages_MOST_POPULAR_SCHEMES_BY_DOMAIN(Images_MOST_POPULAR_SCHEMES_BY_DOMAIN instance);
    partial void DeleteImages_MOST_POPULAR_SCHEMES_BY_DOMAIN(Images_MOST_POPULAR_SCHEMES_BY_DOMAIN instance);
    partial void InsertImages_MOST_POPULAR_SCHEMES_BY_EXTENSION(Images_MOST_POPULAR_SCHEMES_BY_EXTENSION instance);
    partial void UpdateImages_MOST_POPULAR_SCHEMES_BY_EXTENSION(Images_MOST_POPULAR_SCHEMES_BY_EXTENSION instance);
    partial void DeleteImages_MOST_POPULAR_SCHEMES_BY_EXTENSION(Images_MOST_POPULAR_SCHEMES_BY_EXTENSION instance);
    partial void InsertImages_MOST_POPULAR_SCHEMES_BY_HOST(Images_MOST_POPULAR_SCHEMES_BY_HOST instance);
    partial void UpdateImages_MOST_POPULAR_SCHEMES_BY_HOST(Images_MOST_POPULAR_SCHEMES_BY_HOST instance);
    partial void DeleteImages_MOST_POPULAR_SCHEMES_BY_HOST(Images_MOST_POPULAR_SCHEMES_BY_HOST instance);
    partial void InsertImages_MOST_POPULAR_SCHEMES_BY_SCHEME(Images_MOST_POPULAR_SCHEMES_BY_SCHEME instance);
    partial void UpdateImages_MOST_POPULAR_SCHEMES_BY_SCHEME(Images_MOST_POPULAR_SCHEMES_BY_SCHEME instance);
    partial void DeleteImages_MOST_POPULAR_SCHEMES_BY_SCHEME(Images_MOST_POPULAR_SCHEMES_BY_SCHEME instance);
    partial void InsertWebPages_COUNT_BY_DOMAIN(WebPages_COUNT_BY_DOMAIN instance);
    partial void UpdateWebPages_COUNT_BY_DOMAIN(WebPages_COUNT_BY_DOMAIN instance);
    partial void DeleteWebPages_COUNT_BY_DOMAIN(WebPages_COUNT_BY_DOMAIN instance);
    partial void InsertWebPages_COUNT_BY_EXTENSION(WebPages_COUNT_BY_EXTENSION instance);
    partial void UpdateWebPages_COUNT_BY_EXTENSION(WebPages_COUNT_BY_EXTENSION instance);
    partial void DeleteWebPages_COUNT_BY_EXTENSION(WebPages_COUNT_BY_EXTENSION instance);
    partial void InsertWebPages_COUNT_BY_FULLTEXTINDEXTYPE(WebPages_COUNT_BY_FULLTEXTINDEXTYPE instance);
    partial void UpdateWebPages_COUNT_BY_FULLTEXTINDEXTYPE(WebPages_COUNT_BY_FULLTEXTINDEXTYPE instance);
    partial void DeleteWebPages_COUNT_BY_FULLTEXTINDEXTYPE(WebPages_COUNT_BY_FULLTEXTINDEXTYPE instance);
    partial void InsertWebPages_COUNT_BY_HOST(WebPages_COUNT_BY_HOST instance);
    partial void UpdateWebPages_COUNT_BY_HOST(WebPages_COUNT_BY_HOST instance);
    partial void DeleteWebPages_COUNT_BY_HOST(WebPages_COUNT_BY_HOST instance);
    partial void InsertDomains_Discovery(Domains_Discovery instance);
    partial void UpdateDomains_Discovery(Domains_Discovery instance);
    partial void DeleteDomains_Discovery(Domains_Discovery instance);
    partial void InsertDomain(Domain instance);
    partial void UpdateDomain(Domain instance);
    partial void DeleteDomain(Domain instance);
    partial void InsertExtension(Extension instance);
    partial void UpdateExtension(Extension instance);
    partial void DeleteExtension(Extension instance);
    partial void InsertExtensions_Discovery(Extensions_Discovery instance);
    partial void UpdateExtensions_Discovery(Extensions_Discovery instance);
    partial void DeleteExtensions_Discovery(Extensions_Discovery instance);
    partial void InsertFiles_Hosts_Discovery(Files_Hosts_Discovery instance);
    partial void UpdateFiles_Hosts_Discovery(Files_Hosts_Discovery instance);
    partial void DeleteFiles_Hosts_Discovery(Files_Hosts_Discovery instance);
    partial void InsertFiles_Schemes_Discovery(Files_Schemes_Discovery instance);
    partial void UpdateFiles_Schemes_Discovery(Files_Schemes_Discovery instance);
    partial void DeleteFiles_Schemes_Discovery(Files_Schemes_Discovery instance);
    partial void InsertExceptions_Hosts_Discovery(Exceptions_Hosts_Discovery instance);
    partial void UpdateExceptions_Hosts_Discovery(Exceptions_Hosts_Discovery instance);
    partial void DeleteExceptions_Hosts_Discovery(Exceptions_Hosts_Discovery instance);
    partial void InsertExceptions_Schemes_Discovery(Exceptions_Schemes_Discovery instance);
    partial void UpdateExceptions_Schemes_Discovery(Exceptions_Schemes_Discovery instance);
    partial void DeleteExceptions_Schemes_Discovery(Exceptions_Schemes_Discovery instance);
    partial void InsertEmailAddresses_Schemes_Discovery(EmailAddresses_Schemes_Discovery instance);
    partial void UpdateEmailAddresses_Schemes_Discovery(EmailAddresses_Schemes_Discovery instance);
    partial void DeleteEmailAddresses_Schemes_Discovery(EmailAddresses_Schemes_Discovery instance);
    partial void InsertEmailAddresses_Hosts_Discovery(EmailAddresses_Hosts_Discovery instance);
    partial void UpdateEmailAddresses_Hosts_Discovery(EmailAddresses_Hosts_Discovery instance);
    partial void DeleteEmailAddresses_Hosts_Discovery(EmailAddresses_Hosts_Discovery instance);
    partial void InsertDisallowedAbsoluteUris_Hosts_Discovery(DisallowedAbsoluteUris_Hosts_Discovery instance);
    partial void UpdateDisallowedAbsoluteUris_Hosts_Discovery(DisallowedAbsoluteUris_Hosts_Discovery instance);
    partial void DeleteDisallowedAbsoluteUris_Hosts_Discovery(DisallowedAbsoluteUris_Hosts_Discovery instance);
    partial void InsertDisallowedAbsoluteUris_Schemes_Discovery(DisallowedAbsoluteUris_Schemes_Discovery instance);
    partial void UpdateDisallowedAbsoluteUris_Schemes_Discovery(DisallowedAbsoluteUris_Schemes_Discovery instance);
    partial void DeleteDisallowedAbsoluteUris_Schemes_Discovery(DisallowedAbsoluteUris_Schemes_Discovery instance);
    partial void InsertHyperLinks_Hosts_Discovery(HyperLinks_Hosts_Discovery instance);
    partial void UpdateHyperLinks_Hosts_Discovery(HyperLinks_Hosts_Discovery instance);
    partial void DeleteHyperLinks_Hosts_Discovery(HyperLinks_Hosts_Discovery instance);
    partial void InsertHyperLinks_Schemes_Discovery(HyperLinks_Schemes_Discovery instance);
    partial void UpdateHyperLinks_Schemes_Discovery(HyperLinks_Schemes_Discovery instance);
    partial void DeleteHyperLinks_Schemes_Discovery(HyperLinks_Schemes_Discovery instance);
    partial void InsertHosts_Discovery(Hosts_Discovery instance);
    partial void UpdateHosts_Discovery(Hosts_Discovery instance);
    partial void DeleteHosts_Discovery(Hosts_Discovery instance);
    partial void InsertHost(Host instance);
    partial void UpdateHost(Host instance);
    partial void DeleteHost(Host instance);
    partial void InsertImages_Hosts_Discovery(Images_Hosts_Discovery instance);
    partial void UpdateImages_Hosts_Discovery(Images_Hosts_Discovery instance);
    partial void DeleteImages_Hosts_Discovery(Images_Hosts_Discovery instance);
    partial void InsertImages_Schemes_Discovery(Images_Schemes_Discovery instance);
    partial void UpdateImages_Schemes_Discovery(Images_Schemes_Discovery instance);
    partial void DeleteImages_Schemes_Discovery(Images_Schemes_Discovery instance);
    partial void InsertSchemes_Discovery(Schemes_Discovery instance);
    partial void UpdateSchemes_Discovery(Schemes_Discovery instance);
    partial void DeleteSchemes_Discovery(Schemes_Discovery instance);
    partial void InsertScheme(Scheme instance);
    partial void UpdateScheme(Scheme instance);
    partial void DeleteScheme(Scheme instance);
    partial void InsertWebPages_Hosts_Discovery(WebPages_Hosts_Discovery instance);
    partial void UpdateWebPages_Hosts_Discovery(WebPages_Hosts_Discovery instance);
    partial void DeleteWebPages_Hosts_Discovery(WebPages_Hosts_Discovery instance);
    partial void InsertWebPages_Schemes_Discovery(WebPages_Schemes_Discovery instance);
    partial void UpdateWebPages_Schemes_Discovery(WebPages_Schemes_Discovery instance);
    partial void DeleteWebPages_Schemes_Discovery(WebPages_Schemes_Discovery instance);
    #endregion
		
		public ReportingLinqToSqlDataContext() : 
				base(global::Arachnode.DataSource.Properties.Settings.Default.arachnode_netConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public ReportingLinqToSqlDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ReportingLinqToSqlDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ReportingLinqToSqlDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ReportingLinqToSqlDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<DisallowedAbsoluteUris_COUNT_BY_ABSOLUTEURI> DisallowedAbsoluteUris_COUNT_BY_ABSOLUTEURIs
		{
			get
			{
				return this.GetTable<DisallowedAbsoluteUris_COUNT_BY_ABSOLUTEURI>();
			}
		}
		
		public System.Data.Linq.Table<DisallowedAbsoluteUris_MOST_POPULAR_SCHEMES_BY_SCHEME> DisallowedAbsoluteUris_MOST_POPULAR_SCHEMES_BY_SCHEMEs
		{
			get
			{
				return this.GetTable<DisallowedAbsoluteUris_MOST_POPULAR_SCHEMES_BY_SCHEME>();
			}
		}
		
		public System.Data.Linq.Table<DisallowedAbsoluteUris_COUNT_BY_DOMAIN> DisallowedAbsoluteUris_COUNT_BY_DOMAINs
		{
			get
			{
				return this.GetTable<DisallowedAbsoluteUris_COUNT_BY_DOMAIN>();
			}
		}
		
		public System.Data.Linq.Table<DisallowedAbsoluteUris_COUNT_BY_EXTENSION> DisallowedAbsoluteUris_COUNT_BY_EXTENSIONs
		{
			get
			{
				return this.GetTable<DisallowedAbsoluteUris_COUNT_BY_EXTENSION>();
			}
		}
		
		public System.Data.Linq.Table<DisallowedAbsoluteUris_COUNT_BY_HOST> DisallowedAbsoluteUris_COUNT_BY_HOSTs
		{
			get
			{
				return this.GetTable<DisallowedAbsoluteUris_COUNT_BY_HOST>();
			}
		}
		
		public System.Data.Linq.Table<DisallowedAbsoluteUris_COUNT_BY_SCHEME> DisallowedAbsoluteUris_COUNT_BY_SCHEMEs
		{
			get
			{
				return this.GetTable<DisallowedAbsoluteUris_COUNT_BY_SCHEME>();
			}
		}
		
		public System.Data.Linq.Table<DisallowedAbsoluteUris_MOST_POPULAR_ABSOLUTEURIS_BY_ABSOLUTEURI> DisallowedAbsoluteUris_MOST_POPULAR_ABSOLUTEURIS_BY_ABSOLUTEURIs
		{
			get
			{
				return this.GetTable<DisallowedAbsoluteUris_MOST_POPULAR_ABSOLUTEURIS_BY_ABSOLUTEURI>();
			}
		}
		
		public System.Data.Linq.Table<DisallowedAbsoluteUris_MOST_POPULAR_ABSOLUTEURIS_BY_DOMAIN> DisallowedAbsoluteUris_MOST_POPULAR_ABSOLUTEURIS_BY_DOMAINs
		{
			get
			{
				return this.GetTable<DisallowedAbsoluteUris_MOST_POPULAR_ABSOLUTEURIS_BY_DOMAIN>();
			}
		}
		
		public System.Data.Linq.Table<DisallowedAbsoluteUris_MOST_POPULAR_ABSOLUTEURIS_BY_EXTENSION> DisallowedAbsoluteUris_MOST_POPULAR_ABSOLUTEURIS_BY_EXTENSIONs
		{
			get
			{
				return this.GetTable<DisallowedAbsoluteUris_MOST_POPULAR_ABSOLUTEURIS_BY_EXTENSION>();
			}
		}
		
		public System.Data.Linq.Table<DisallowedAbsoluteUris_MOST_POPULAR_ABSOLUTEURIS_BY_HOST> DisallowedAbsoluteUris_MOST_POPULAR_ABSOLUTEURIS_BY_HOSTs
		{
			get
			{
				return this.GetTable<DisallowedAbsoluteUris_MOST_POPULAR_ABSOLUTEURIS_BY_HOST>();
			}
		}
		
		public System.Data.Linq.Table<DisallowedAbsoluteUris_MOST_POPULAR_ABSOLUTEURIS_BY_SCHEME> DisallowedAbsoluteUris_MOST_POPULAR_ABSOLUTEURIS_BY_SCHEMEs
		{
			get
			{
				return this.GetTable<DisallowedAbsoluteUris_MOST_POPULAR_ABSOLUTEURIS_BY_SCHEME>();
			}
		}
		
		public System.Data.Linq.Table<DisallowedAbsoluteUris_MOST_POPULAR_DOMAINS_BY_ABSOLUTEURI> DisallowedAbsoluteUris_MOST_POPULAR_DOMAINS_BY_ABSOLUTEURIs
		{
			get
			{
				return this.GetTable<DisallowedAbsoluteUris_MOST_POPULAR_DOMAINS_BY_ABSOLUTEURI>();
			}
		}
		
		public System.Data.Linq.Table<DisallowedAbsoluteUris_MOST_POPULAR_DOMAINS_BY_DOMAIN> DisallowedAbsoluteUris_MOST_POPULAR_DOMAINS_BY_DOMAINs
		{
			get
			{
				return this.GetTable<DisallowedAbsoluteUris_MOST_POPULAR_DOMAINS_BY_DOMAIN>();
			}
		}
		
		public System.Data.Linq.Table<DisallowedAbsoluteUris_MOST_POPULAR_DOMAINS_BY_EXTENSION> DisallowedAbsoluteUris_MOST_POPULAR_DOMAINS_BY_EXTENSIONs
		{
			get
			{
				return this.GetTable<DisallowedAbsoluteUris_MOST_POPULAR_DOMAINS_BY_EXTENSION>();
			}
		}
		
		public System.Data.Linq.Table<DisallowedAbsoluteUris_MOST_POPULAR_DOMAINS_BY_HOST> DisallowedAbsoluteUris_MOST_POPULAR_DOMAINS_BY_HOSTs
		{
			get
			{
				return this.GetTable<DisallowedAbsoluteUris_MOST_POPULAR_DOMAINS_BY_HOST>();
			}
		}
		
		public System.Data.Linq.Table<DisallowedAbsoluteUris_MOST_POPULAR_DOMAINS_BY_SCHEME> DisallowedAbsoluteUris_MOST_POPULAR_DOMAINS_BY_SCHEMEs
		{
			get
			{
				return this.GetTable<DisallowedAbsoluteUris_MOST_POPULAR_DOMAINS_BY_SCHEME>();
			}
		}
		
		public System.Data.Linq.Table<DisallowedAbsoluteUris_MOST_POPULAR_EXTENSIONS_BY_ABSOLUTEURI> DisallowedAbsoluteUris_MOST_POPULAR_EXTENSIONS_BY_ABSOLUTEURIs
		{
			get
			{
				return this.GetTable<DisallowedAbsoluteUris_MOST_POPULAR_EXTENSIONS_BY_ABSOLUTEURI>();
			}
		}
		
		public System.Data.Linq.Table<DisallowedAbsoluteUris_MOST_POPULAR_EXTENSIONS_BY_DOMAIN> DisallowedAbsoluteUris_MOST_POPULAR_EXTENSIONS_BY_DOMAINs
		{
			get
			{
				return this.GetTable<DisallowedAbsoluteUris_MOST_POPULAR_EXTENSIONS_BY_DOMAIN>();
			}
		}
		
		public System.Data.Linq.Table<DisallowedAbsoluteUris_MOST_POPULAR_EXTENSIONS_BY_EXTENSION> DisallowedAbsoluteUris_MOST_POPULAR_EXTENSIONS_BY_EXTENSIONs
		{
			get
			{
				return this.GetTable<DisallowedAbsoluteUris_MOST_POPULAR_EXTENSIONS_BY_EXTENSION>();
			}
		}
		
		public System.Data.Linq.Table<DisallowedAbsoluteUris_MOST_POPULAR_EXTENSIONS_BY_HOST> DisallowedAbsoluteUris_MOST_POPULAR_EXTENSIONS_BY_HOSTs
		{
			get
			{
				return this.GetTable<DisallowedAbsoluteUris_MOST_POPULAR_EXTENSIONS_BY_HOST>();
			}
		}
		
		public System.Data.Linq.Table<DisallowedAbsoluteUris_MOST_POPULAR_EXTENSIONS_BY_SCHEME> DisallowedAbsoluteUris_MOST_POPULAR_EXTENSIONS_BY_SCHEMEs
		{
			get
			{
				return this.GetTable<DisallowedAbsoluteUris_MOST_POPULAR_EXTENSIONS_BY_SCHEME>();
			}
		}
		
		public System.Data.Linq.Table<DisallowedAbsoluteUris_MOST_POPULAR_HOSTS_BY_ABSOLUTEURI> DisallowedAbsoluteUris_MOST_POPULAR_HOSTS_BY_ABSOLUTEURIs
		{
			get
			{
				return this.GetTable<DisallowedAbsoluteUris_MOST_POPULAR_HOSTS_BY_ABSOLUTEURI>();
			}
		}
		
		public System.Data.Linq.Table<DisallowedAbsoluteUris_MOST_POPULAR_HOSTS_BY_DOMAIN> DisallowedAbsoluteUris_MOST_POPULAR_HOSTS_BY_DOMAINs
		{
			get
			{
				return this.GetTable<DisallowedAbsoluteUris_MOST_POPULAR_HOSTS_BY_DOMAIN>();
			}
		}
		
		public System.Data.Linq.Table<DisallowedAbsoluteUris_MOST_POPULAR_HOSTS_BY_EXTENSION> DisallowedAbsoluteUris_MOST_POPULAR_HOSTS_BY_EXTENSIONs
		{
			get
			{
				return this.GetTable<DisallowedAbsoluteUris_MOST_POPULAR_HOSTS_BY_EXTENSION>();
			}
		}
		
		public System.Data.Linq.Table<DisallowedAbsoluteUris_MOST_POPULAR_HOSTS_BY_HOST> DisallowedAbsoluteUris_MOST_POPULAR_HOSTS_BY_HOSTs
		{
			get
			{
				return this.GetTable<DisallowedAbsoluteUris_MOST_POPULAR_HOSTS_BY_HOST>();
			}
		}
		
		public System.Data.Linq.Table<DisallowedAbsoluteUris_MOST_POPULAR_HOSTS_BY_SCHEME> DisallowedAbsoluteUris_MOST_POPULAR_HOSTS_BY_SCHEMEs
		{
			get
			{
				return this.GetTable<DisallowedAbsoluteUris_MOST_POPULAR_HOSTS_BY_SCHEME>();
			}
		}
		
		public System.Data.Linq.Table<DisallowedAbsoluteUris_MOST_POPULAR_SCHEMES_BY_ABSOLUTEURI> DisallowedAbsoluteUris_MOST_POPULAR_SCHEMES_BY_ABSOLUTEURIs
		{
			get
			{
				return this.GetTable<DisallowedAbsoluteUris_MOST_POPULAR_SCHEMES_BY_ABSOLUTEURI>();
			}
		}
		
		public System.Data.Linq.Table<DisallowedAbsoluteUris_MOST_POPULAR_SCHEMES_BY_DOMAIN> DisallowedAbsoluteUris_MOST_POPULAR_SCHEMES_BY_DOMAINs
		{
			get
			{
				return this.GetTable<DisallowedAbsoluteUris_MOST_POPULAR_SCHEMES_BY_DOMAIN>();
			}
		}
		
		public System.Data.Linq.Table<DisallowedAbsoluteUris_MOST_POPULAR_SCHEMES_BY_EXTENSION> DisallowedAbsoluteUris_MOST_POPULAR_SCHEMES_BY_EXTENSIONs
		{
			get
			{
				return this.GetTable<DisallowedAbsoluteUris_MOST_POPULAR_SCHEMES_BY_EXTENSION>();
			}
		}
		
		public System.Data.Linq.Table<DisallowedAbsoluteUris_MOST_POPULAR_SCHEMES_BY_HOST> DisallowedAbsoluteUris_MOST_POPULAR_SCHEMES_BY_HOSTs
		{
			get
			{
				return this.GetTable<DisallowedAbsoluteUris_MOST_POPULAR_SCHEMES_BY_HOST>();
			}
		}
		
		public System.Data.Linq.Table<EmailAddresses_COUNT_BY_ABSOLUTEURI> EmailAddresses_COUNT_BY_ABSOLUTEURIs
		{
			get
			{
				return this.GetTable<EmailAddresses_COUNT_BY_ABSOLUTEURI>();
			}
		}
		
		public System.Data.Linq.Table<EmailAddresses_MOST_POPULAR_SCHEMES_BY_SCHEME> EmailAddresses_MOST_POPULAR_SCHEMES_BY_SCHEMEs
		{
			get
			{
				return this.GetTable<EmailAddresses_MOST_POPULAR_SCHEMES_BY_SCHEME>();
			}
		}
		
		public System.Data.Linq.Table<EmailAddresses_COUNT_BY_DOMAIN> EmailAddresses_COUNT_BY_DOMAINs
		{
			get
			{
				return this.GetTable<EmailAddresses_COUNT_BY_DOMAIN>();
			}
		}
		
		public System.Data.Linq.Table<EmailAddresses_COUNT_BY_EXTENSION> EmailAddresses_COUNT_BY_EXTENSIONs
		{
			get
			{
				return this.GetTable<EmailAddresses_COUNT_BY_EXTENSION>();
			}
		}
		
		public System.Data.Linq.Table<EmailAddresses_COUNT_BY_HOST> EmailAddresses_COUNT_BY_HOSTs
		{
			get
			{
				return this.GetTable<EmailAddresses_COUNT_BY_HOST>();
			}
		}
		
		public System.Data.Linq.Table<EmailAddresses_COUNT_BY_SCHEME> EmailAddresses_COUNT_BY_SCHEMEs
		{
			get
			{
				return this.GetTable<EmailAddresses_COUNT_BY_SCHEME>();
			}
		}
		
		public System.Data.Linq.Table<EmailAddresses_MOST_POPULAR_ABSOLUTEURIS_BY_ABSOLUTEURI> EmailAddresses_MOST_POPULAR_ABSOLUTEURIS_BY_ABSOLUTEURIs
		{
			get
			{
				return this.GetTable<EmailAddresses_MOST_POPULAR_ABSOLUTEURIS_BY_ABSOLUTEURI>();
			}
		}
		
		public System.Data.Linq.Table<EmailAddresses_MOST_POPULAR_ABSOLUTEURIS_BY_DOMAIN> EmailAddresses_MOST_POPULAR_ABSOLUTEURIS_BY_DOMAINs
		{
			get
			{
				return this.GetTable<EmailAddresses_MOST_POPULAR_ABSOLUTEURIS_BY_DOMAIN>();
			}
		}
		
		public System.Data.Linq.Table<EmailAddresses_MOST_POPULAR_ABSOLUTEURIS_BY_EXTENSION> EmailAddresses_MOST_POPULAR_ABSOLUTEURIS_BY_EXTENSIONs
		{
			get
			{
				return this.GetTable<EmailAddresses_MOST_POPULAR_ABSOLUTEURIS_BY_EXTENSION>();
			}
		}
		
		public System.Data.Linq.Table<EmailAddresses_MOST_POPULAR_ABSOLUTEURIS_BY_HOST> EmailAddresses_MOST_POPULAR_ABSOLUTEURIS_BY_HOSTs
		{
			get
			{
				return this.GetTable<EmailAddresses_MOST_POPULAR_ABSOLUTEURIS_BY_HOST>();
			}
		}
		
		public System.Data.Linq.Table<EmailAddresses_MOST_POPULAR_ABSOLUTEURIS_BY_SCHEME> EmailAddresses_MOST_POPULAR_ABSOLUTEURIS_BY_SCHEMEs
		{
			get
			{
				return this.GetTable<EmailAddresses_MOST_POPULAR_ABSOLUTEURIS_BY_SCHEME>();
			}
		}
		
		public System.Data.Linq.Table<EmailAddresses_MOST_POPULAR_DOMAINS_BY_ABSOLUTEURI> EmailAddresses_MOST_POPULAR_DOMAINS_BY_ABSOLUTEURIs
		{
			get
			{
				return this.GetTable<EmailAddresses_MOST_POPULAR_DOMAINS_BY_ABSOLUTEURI>();
			}
		}
		
		public System.Data.Linq.Table<EmailAddresses_MOST_POPULAR_DOMAINS_BY_DOMAIN> EmailAddresses_MOST_POPULAR_DOMAINS_BY_DOMAINs
		{
			get
			{
				return this.GetTable<EmailAddresses_MOST_POPULAR_DOMAINS_BY_DOMAIN>();
			}
		}
		
		public System.Data.Linq.Table<EmailAddresses_MOST_POPULAR_DOMAINS_BY_EXTENSION> EmailAddresses_MOST_POPULAR_DOMAINS_BY_EXTENSIONs
		{
			get
			{
				return this.GetTable<EmailAddresses_MOST_POPULAR_DOMAINS_BY_EXTENSION>();
			}
		}
		
		public System.Data.Linq.Table<EmailAddresses_MOST_POPULAR_DOMAINS_BY_HOST> EmailAddresses_MOST_POPULAR_DOMAINS_BY_HOSTs
		{
			get
			{
				return this.GetTable<EmailAddresses_MOST_POPULAR_DOMAINS_BY_HOST>();
			}
		}
		
		public System.Data.Linq.Table<EmailAddresses_MOST_POPULAR_DOMAINS_BY_SCHEME> EmailAddresses_MOST_POPULAR_DOMAINS_BY_SCHEMEs
		{
			get
			{
				return this.GetTable<EmailAddresses_MOST_POPULAR_DOMAINS_BY_SCHEME>();
			}
		}
		
		public System.Data.Linq.Table<EmailAddresses_MOST_POPULAR_EXTENSIONS_BY_ABSOLUTEURI> EmailAddresses_MOST_POPULAR_EXTENSIONS_BY_ABSOLUTEURIs
		{
			get
			{
				return this.GetTable<EmailAddresses_MOST_POPULAR_EXTENSIONS_BY_ABSOLUTEURI>();
			}
		}
		
		public System.Data.Linq.Table<EmailAddresses_MOST_POPULAR_EXTENSIONS_BY_DOMAIN> EmailAddresses_MOST_POPULAR_EXTENSIONS_BY_DOMAINs
		{
			get
			{
				return this.GetTable<EmailAddresses_MOST_POPULAR_EXTENSIONS_BY_DOMAIN>();
			}
		}
		
		public System.Data.Linq.Table<EmailAddresses_MOST_POPULAR_EXTENSIONS_BY_EXTENSION> EmailAddresses_MOST_POPULAR_EXTENSIONS_BY_EXTENSIONs
		{
			get
			{
				return this.GetTable<EmailAddresses_MOST_POPULAR_EXTENSIONS_BY_EXTENSION>();
			}
		}
		
		public System.Data.Linq.Table<EmailAddresses_MOST_POPULAR_EXTENSIONS_BY_HOST> EmailAddresses_MOST_POPULAR_EXTENSIONS_BY_HOSTs
		{
			get
			{
				return this.GetTable<EmailAddresses_MOST_POPULAR_EXTENSIONS_BY_HOST>();
			}
		}
		
		public System.Data.Linq.Table<EmailAddresses_MOST_POPULAR_EXTENSIONS_BY_SCHEME> EmailAddresses_MOST_POPULAR_EXTENSIONS_BY_SCHEMEs
		{
			get
			{
				return this.GetTable<EmailAddresses_MOST_POPULAR_EXTENSIONS_BY_SCHEME>();
			}
		}
		
		public System.Data.Linq.Table<EmailAddresses_MOST_POPULAR_HOSTS_BY_ABSOLUTEURI> EmailAddresses_MOST_POPULAR_HOSTS_BY_ABSOLUTEURIs
		{
			get
			{
				return this.GetTable<EmailAddresses_MOST_POPULAR_HOSTS_BY_ABSOLUTEURI>();
			}
		}
		
		public System.Data.Linq.Table<EmailAddresses_MOST_POPULAR_HOSTS_BY_DOMAIN> EmailAddresses_MOST_POPULAR_HOSTS_BY_DOMAINs
		{
			get
			{
				return this.GetTable<EmailAddresses_MOST_POPULAR_HOSTS_BY_DOMAIN>();
			}
		}
		
		public System.Data.Linq.Table<EmailAddresses_MOST_POPULAR_HOSTS_BY_EXTENSION> EmailAddresses_MOST_POPULAR_HOSTS_BY_EXTENSIONs
		{
			get
			{
				return this.GetTable<EmailAddresses_MOST_POPULAR_HOSTS_BY_EXTENSION>();
			}
		}
		
		public System.Data.Linq.Table<EmailAddresses_MOST_POPULAR_HOSTS_BY_HOST> EmailAddresses_MOST_POPULAR_HOSTS_BY_HOSTs
		{
			get
			{
				return this.GetTable<EmailAddresses_MOST_POPULAR_HOSTS_BY_HOST>();
			}
		}
		
		public System.Data.Linq.Table<EmailAddresses_MOST_POPULAR_HOSTS_BY_SCHEME> EmailAddresses_MOST_POPULAR_HOSTS_BY_SCHEMEs
		{
			get
			{
				return this.GetTable<EmailAddresses_MOST_POPULAR_HOSTS_BY_SCHEME>();
			}
		}
		
		public System.Data.Linq.Table<EmailAddresses_MOST_POPULAR_SCHEMES_BY_ABSOLUTEURI> EmailAddresses_MOST_POPULAR_SCHEMES_BY_ABSOLUTEURIs
		{
			get
			{
				return this.GetTable<EmailAddresses_MOST_POPULAR_SCHEMES_BY_ABSOLUTEURI>();
			}
		}
		
		public System.Data.Linq.Table<EmailAddresses_MOST_POPULAR_SCHEMES_BY_DOMAIN> EmailAddresses_MOST_POPULAR_SCHEMES_BY_DOMAINs
		{
			get
			{
				return this.GetTable<EmailAddresses_MOST_POPULAR_SCHEMES_BY_DOMAIN>();
			}
		}
		
		public System.Data.Linq.Table<EmailAddresses_MOST_POPULAR_SCHEMES_BY_EXTENSION> EmailAddresses_MOST_POPULAR_SCHEMES_BY_EXTENSIONs
		{
			get
			{
				return this.GetTable<EmailAddresses_MOST_POPULAR_SCHEMES_BY_EXTENSION>();
			}
		}
		
		public System.Data.Linq.Table<EmailAddresses_MOST_POPULAR_SCHEMES_BY_HOST> EmailAddresses_MOST_POPULAR_SCHEMES_BY_HOSTs
		{
			get
			{
				return this.GetTable<EmailAddresses_MOST_POPULAR_SCHEMES_BY_HOST>();
			}
		}
		
		public System.Data.Linq.Table<Exceptions_COUNT_BY_ABSOLUTEURI1> Exceptions_COUNT_BY_ABSOLUTEURI1s
		{
			get
			{
				return this.GetTable<Exceptions_COUNT_BY_ABSOLUTEURI1>();
			}
		}
		
		public System.Data.Linq.Table<Exceptions_COUNT_BY_STACKTRACE> Exceptions_COUNT_BY_STACKTRACEs
		{
			get
			{
				return this.GetTable<Exceptions_COUNT_BY_STACKTRACE>();
			}
		}
		
		public System.Data.Linq.Table<Exceptions_COUNT_BY_ABSOLUTEURI2> Exceptions_COUNT_BY_ABSOLUTEURI2s
		{
			get
			{
				return this.GetTable<Exceptions_COUNT_BY_ABSOLUTEURI2>();
			}
		}
		
		public System.Data.Linq.Table<Exceptions_COUNT_BY_ABSOLUTEURI> Exceptions_COUNT_BY_ABSOLUTEURIs
		{
			get
			{
				return this.GetTable<Exceptions_COUNT_BY_ABSOLUTEURI>();
			}
		}
		
		public System.Data.Linq.Table<Exceptions_COUNT_BY_DOMAIN1> Exceptions_COUNT_BY_DOMAIN1s
		{
			get
			{
				return this.GetTable<Exceptions_COUNT_BY_DOMAIN1>();
			}
		}
		
		public System.Data.Linq.Table<Exceptions_COUNT_BY_DOMAIN2> Exceptions_COUNT_BY_DOMAIN2s
		{
			get
			{
				return this.GetTable<Exceptions_COUNT_BY_DOMAIN2>();
			}
		}
		
		public System.Data.Linq.Table<Exceptions_COUNT_BY_DOMAIN> Exceptions_COUNT_BY_DOMAINs
		{
			get
			{
				return this.GetTable<Exceptions_COUNT_BY_DOMAIN>();
			}
		}
		
		public System.Data.Linq.Table<Exceptions_COUNT_BY_EXTENSION1> Exceptions_COUNT_BY_EXTENSION1s
		{
			get
			{
				return this.GetTable<Exceptions_COUNT_BY_EXTENSION1>();
			}
		}
		
		public System.Data.Linq.Table<Exceptions_COUNT_BY_EXTENSION2> Exceptions_COUNT_BY_EXTENSION2s
		{
			get
			{
				return this.GetTable<Exceptions_COUNT_BY_EXTENSION2>();
			}
		}
		
		public System.Data.Linq.Table<Exceptions_COUNT_BY_EXTENSION> Exceptions_COUNT_BY_EXTENSIONs
		{
			get
			{
				return this.GetTable<Exceptions_COUNT_BY_EXTENSION>();
			}
		}
		
		public System.Data.Linq.Table<Exceptions_COUNT_BY_HOST1> Exceptions_COUNT_BY_HOST1s
		{
			get
			{
				return this.GetTable<Exceptions_COUNT_BY_HOST1>();
			}
		}
		
		public System.Data.Linq.Table<Exceptions_COUNT_BY_HOST2> Exceptions_COUNT_BY_HOST2s
		{
			get
			{
				return this.GetTable<Exceptions_COUNT_BY_HOST2>();
			}
		}
		
		public System.Data.Linq.Table<Exceptions_COUNT_BY_HOST> Exceptions_COUNT_BY_HOSTs
		{
			get
			{
				return this.GetTable<Exceptions_COUNT_BY_HOST>();
			}
		}
		
		public System.Data.Linq.Table<Exceptions_COUNT_BY_MESSAGE> Exceptions_COUNT_BY_MESSAGEs
		{
			get
			{
				return this.GetTable<Exceptions_COUNT_BY_MESSAGE>();
			}
		}
		
		public System.Data.Linq.Table<Exceptions_COUNT_BY_SCHEME1> Exceptions_COUNT_BY_SCHEME1s
		{
			get
			{
				return this.GetTable<Exceptions_COUNT_BY_SCHEME1>();
			}
		}
		
		public System.Data.Linq.Table<Exceptions_COUNT_BY_SCHEME2> Exceptions_COUNT_BY_SCHEME2s
		{
			get
			{
				return this.GetTable<Exceptions_COUNT_BY_SCHEME2>();
			}
		}
		
		public System.Data.Linq.Table<Exceptions_COUNT_BY_SCHEME> Exceptions_COUNT_BY_SCHEMEs
		{
			get
			{
				return this.GetTable<Exceptions_COUNT_BY_SCHEME>();
			}
		}
		
		public System.Data.Linq.Table<Exceptions_COUNT_BY_SOURCE> Exceptions_COUNT_BY_SOURCEs
		{
			get
			{
				return this.GetTable<Exceptions_COUNT_BY_SOURCE>();
			}
		}
		
		public System.Data.Linq.Table<Files_COUNT_BY_ABSOLUTEURI> Files_COUNT_BY_ABSOLUTEURIs
		{
			get
			{
				return this.GetTable<Files_COUNT_BY_ABSOLUTEURI>();
			}
		}
		
		public System.Data.Linq.Table<Files_MOST_POPULAR_SCHEMES_BY_SCHEME> Files_MOST_POPULAR_SCHEMES_BY_SCHEMEs
		{
			get
			{
				return this.GetTable<Files_MOST_POPULAR_SCHEMES_BY_SCHEME>();
			}
		}
		
		public System.Data.Linq.Table<Files_COUNT_BY_DOMAIN> Files_COUNT_BY_DOMAINs
		{
			get
			{
				return this.GetTable<Files_COUNT_BY_DOMAIN>();
			}
		}
		
		public System.Data.Linq.Table<Files_COUNT_BY_EXTENSION> Files_COUNT_BY_EXTENSIONs
		{
			get
			{
				return this.GetTable<Files_COUNT_BY_EXTENSION>();
			}
		}
		
		public System.Data.Linq.Table<Files_COUNT_BY_FULLTEXTINDEXTYPE> Files_COUNT_BY_FULLTEXTINDEXTYPEs
		{
			get
			{
				return this.GetTable<Files_COUNT_BY_FULLTEXTINDEXTYPE>();
			}
		}
		
		public System.Data.Linq.Table<Files_COUNT_BY_HOST> Files_COUNT_BY_HOSTs
		{
			get
			{
				return this.GetTable<Files_COUNT_BY_HOST>();
			}
		}
		
		public System.Data.Linq.Table<Files_COUNT_BY_SCHEME> Files_COUNT_BY_SCHEMEs
		{
			get
			{
				return this.GetTable<Files_COUNT_BY_SCHEME>();
			}
		}
		
		public System.Data.Linq.Table<Files_MOST_POPULAR_ABSOLUTEURIS_BY_ABSOLUTEURI> Files_MOST_POPULAR_ABSOLUTEURIS_BY_ABSOLUTEURIs
		{
			get
			{
				return this.GetTable<Files_MOST_POPULAR_ABSOLUTEURIS_BY_ABSOLUTEURI>();
			}
		}
		
		public System.Data.Linq.Table<Files_MOST_POPULAR_ABSOLUTEURIS_BY_DOMAIN> Files_MOST_POPULAR_ABSOLUTEURIS_BY_DOMAINs
		{
			get
			{
				return this.GetTable<Files_MOST_POPULAR_ABSOLUTEURIS_BY_DOMAIN>();
			}
		}
		
		public System.Data.Linq.Table<Files_MOST_POPULAR_ABSOLUTEURIS_BY_EXTENSION> Files_MOST_POPULAR_ABSOLUTEURIS_BY_EXTENSIONs
		{
			get
			{
				return this.GetTable<Files_MOST_POPULAR_ABSOLUTEURIS_BY_EXTENSION>();
			}
		}
		
		public System.Data.Linq.Table<Files_MOST_POPULAR_ABSOLUTEURIS_BY_HOST> Files_MOST_POPULAR_ABSOLUTEURIS_BY_HOSTs
		{
			get
			{
				return this.GetTable<Files_MOST_POPULAR_ABSOLUTEURIS_BY_HOST>();
			}
		}
		
		public System.Data.Linq.Table<Files_MOST_POPULAR_ABSOLUTEURIS_BY_SCHEME> Files_MOST_POPULAR_ABSOLUTEURIS_BY_SCHEMEs
		{
			get
			{
				return this.GetTable<Files_MOST_POPULAR_ABSOLUTEURIS_BY_SCHEME>();
			}
		}
		
		public System.Data.Linq.Table<Files_MOST_POPULAR_DOMAINS_BY_ABSOLUTEURI> Files_MOST_POPULAR_DOMAINS_BY_ABSOLUTEURIs
		{
			get
			{
				return this.GetTable<Files_MOST_POPULAR_DOMAINS_BY_ABSOLUTEURI>();
			}
		}
		
		public System.Data.Linq.Table<Files_MOST_POPULAR_DOMAINS_BY_DOMAIN> Files_MOST_POPULAR_DOMAINS_BY_DOMAINs
		{
			get
			{
				return this.GetTable<Files_MOST_POPULAR_DOMAINS_BY_DOMAIN>();
			}
		}
		
		public System.Data.Linq.Table<Files_MOST_POPULAR_DOMAINS_BY_EXTENSION> Files_MOST_POPULAR_DOMAINS_BY_EXTENSIONs
		{
			get
			{
				return this.GetTable<Files_MOST_POPULAR_DOMAINS_BY_EXTENSION>();
			}
		}
		
		public System.Data.Linq.Table<Files_MOST_POPULAR_DOMAINS_BY_HOST> Files_MOST_POPULAR_DOMAINS_BY_HOSTs
		{
			get
			{
				return this.GetTable<Files_MOST_POPULAR_DOMAINS_BY_HOST>();
			}
		}
		
		public System.Data.Linq.Table<Files_MOST_POPULAR_DOMAINS_BY_SCHEME> Files_MOST_POPULAR_DOMAINS_BY_SCHEMEs
		{
			get
			{
				return this.GetTable<Files_MOST_POPULAR_DOMAINS_BY_SCHEME>();
			}
		}
		
		public System.Data.Linq.Table<Files_MOST_POPULAR_EXTENSIONS_BY_ABSOLUTEURI> Files_MOST_POPULAR_EXTENSIONS_BY_ABSOLUTEURIs
		{
			get
			{
				return this.GetTable<Files_MOST_POPULAR_EXTENSIONS_BY_ABSOLUTEURI>();
			}
		}
		
		public System.Data.Linq.Table<Files_MOST_POPULAR_EXTENSIONS_BY_DOMAIN> Files_MOST_POPULAR_EXTENSIONS_BY_DOMAINs
		{
			get
			{
				return this.GetTable<Files_MOST_POPULAR_EXTENSIONS_BY_DOMAIN>();
			}
		}
		
		public System.Data.Linq.Table<Files_MOST_POPULAR_EXTENSIONS_BY_EXTENSION> Files_MOST_POPULAR_EXTENSIONS_BY_EXTENSIONs
		{
			get
			{
				return this.GetTable<Files_MOST_POPULAR_EXTENSIONS_BY_EXTENSION>();
			}
		}
		
		public System.Data.Linq.Table<Files_MOST_POPULAR_EXTENSIONS_BY_HOST> Files_MOST_POPULAR_EXTENSIONS_BY_HOSTs
		{
			get
			{
				return this.GetTable<Files_MOST_POPULAR_EXTENSIONS_BY_HOST>();
			}
		}
		
		public System.Data.Linq.Table<Files_MOST_POPULAR_EXTENSIONS_BY_SCHEME> Files_MOST_POPULAR_EXTENSIONS_BY_SCHEMEs
		{
			get
			{
				return this.GetTable<Files_MOST_POPULAR_EXTENSIONS_BY_SCHEME>();
			}
		}
		
		public System.Data.Linq.Table<Files_MOST_POPULAR_HOSTS_BY_ABSOLUTEURI> Files_MOST_POPULAR_HOSTS_BY_ABSOLUTEURIs
		{
			get
			{
				return this.GetTable<Files_MOST_POPULAR_HOSTS_BY_ABSOLUTEURI>();
			}
		}
		
		public System.Data.Linq.Table<Files_MOST_POPULAR_HOSTS_BY_DOMAIN> Files_MOST_POPULAR_HOSTS_BY_DOMAINs
		{
			get
			{
				return this.GetTable<Files_MOST_POPULAR_HOSTS_BY_DOMAIN>();
			}
		}
		
		public System.Data.Linq.Table<Files_MOST_POPULAR_HOSTS_BY_EXTENSION> Files_MOST_POPULAR_HOSTS_BY_EXTENSIONs
		{
			get
			{
				return this.GetTable<Files_MOST_POPULAR_HOSTS_BY_EXTENSION>();
			}
		}
		
		public System.Data.Linq.Table<Files_MOST_POPULAR_HOSTS_BY_HOST> Files_MOST_POPULAR_HOSTS_BY_HOSTs
		{
			get
			{
				return this.GetTable<Files_MOST_POPULAR_HOSTS_BY_HOST>();
			}
		}
		
		public System.Data.Linq.Table<Files_MOST_POPULAR_HOSTS_BY_SCHEME> Files_MOST_POPULAR_HOSTS_BY_SCHEMEs
		{
			get
			{
				return this.GetTable<Files_MOST_POPULAR_HOSTS_BY_SCHEME>();
			}
		}
		
		public System.Data.Linq.Table<Files_MOST_POPULAR_SCHEMES_BY_ABSOLUTEURI> Files_MOST_POPULAR_SCHEMES_BY_ABSOLUTEURIs
		{
			get
			{
				return this.GetTable<Files_MOST_POPULAR_SCHEMES_BY_ABSOLUTEURI>();
			}
		}
		
		public System.Data.Linq.Table<Files_MOST_POPULAR_SCHEMES_BY_DOMAIN> Files_MOST_POPULAR_SCHEMES_BY_DOMAINs
		{
			get
			{
				return this.GetTable<Files_MOST_POPULAR_SCHEMES_BY_DOMAIN>();
			}
		}
		
		public System.Data.Linq.Table<Files_MOST_POPULAR_SCHEMES_BY_EXTENSION> Files_MOST_POPULAR_SCHEMES_BY_EXTENSIONs
		{
			get
			{
				return this.GetTable<Files_MOST_POPULAR_SCHEMES_BY_EXTENSION>();
			}
		}
		
		public System.Data.Linq.Table<Files_MOST_POPULAR_SCHEMES_BY_HOST> Files_MOST_POPULAR_SCHEMES_BY_HOSTs
		{
			get
			{
				return this.GetTable<Files_MOST_POPULAR_SCHEMES_BY_HOST>();
			}
		}
		
		public System.Data.Linq.Table<HyperLinks_COUNT_BY_ABSOLUTEURI> HyperLinks_COUNT_BY_ABSOLUTEURIs
		{
			get
			{
				return this.GetTable<HyperLinks_COUNT_BY_ABSOLUTEURI>();
			}
		}
		
		public System.Data.Linq.Table<HyperLinks_MOST_POPULAR_SCHEMES_BY_SCHEME> HyperLinks_MOST_POPULAR_SCHEMES_BY_SCHEMEs
		{
			get
			{
				return this.GetTable<HyperLinks_MOST_POPULAR_SCHEMES_BY_SCHEME>();
			}
		}
		
		public System.Data.Linq.Table<HyperLinks_COUNT_BY_DOMAIN> HyperLinks_COUNT_BY_DOMAINs
		{
			get
			{
				return this.GetTable<HyperLinks_COUNT_BY_DOMAIN>();
			}
		}
		
		public System.Data.Linq.Table<HyperLinks_COUNT_BY_EXTENSION> HyperLinks_COUNT_BY_EXTENSIONs
		{
			get
			{
				return this.GetTable<HyperLinks_COUNT_BY_EXTENSION>();
			}
		}
		
		public System.Data.Linq.Table<HyperLinks_COUNT_BY_HOST> HyperLinks_COUNT_BY_HOSTs
		{
			get
			{
				return this.GetTable<HyperLinks_COUNT_BY_HOST>();
			}
		}
		
		public System.Data.Linq.Table<HyperLinks_COUNT_BY_SCHEME> HyperLinks_COUNT_BY_SCHEMEs
		{
			get
			{
				return this.GetTable<HyperLinks_COUNT_BY_SCHEME>();
			}
		}
		
		public System.Data.Linq.Table<HyperLinks_MOST_POPULAR_ABSOLUTEURIS_BY_ABSOLUTEURI> HyperLinks_MOST_POPULAR_ABSOLUTEURIS_BY_ABSOLUTEURIs
		{
			get
			{
				return this.GetTable<HyperLinks_MOST_POPULAR_ABSOLUTEURIS_BY_ABSOLUTEURI>();
			}
		}
		
		public System.Data.Linq.Table<HyperLinks_MOST_POPULAR_ABSOLUTEURIS_BY_DOMAIN> HyperLinks_MOST_POPULAR_ABSOLUTEURIS_BY_DOMAINs
		{
			get
			{
				return this.GetTable<HyperLinks_MOST_POPULAR_ABSOLUTEURIS_BY_DOMAIN>();
			}
		}
		
		public System.Data.Linq.Table<HyperLinks_MOST_POPULAR_ABSOLUTEURIS_BY_EXTENSION> HyperLinks_MOST_POPULAR_ABSOLUTEURIS_BY_EXTENSIONs
		{
			get
			{
				return this.GetTable<HyperLinks_MOST_POPULAR_ABSOLUTEURIS_BY_EXTENSION>();
			}
		}
		
		public System.Data.Linq.Table<HyperLinks_MOST_POPULAR_ABSOLUTEURIS_BY_HOST> HyperLinks_MOST_POPULAR_ABSOLUTEURIS_BY_HOSTs
		{
			get
			{
				return this.GetTable<HyperLinks_MOST_POPULAR_ABSOLUTEURIS_BY_HOST>();
			}
		}
		
		public System.Data.Linq.Table<HyperLinks_MOST_POPULAR_ABSOLUTEURIS_BY_SCHEME> HyperLinks_MOST_POPULAR_ABSOLUTEURIS_BY_SCHEMEs
		{
			get
			{
				return this.GetTable<HyperLinks_MOST_POPULAR_ABSOLUTEURIS_BY_SCHEME>();
			}
		}
		
		public System.Data.Linq.Table<HyperLinks_MOST_POPULAR_DOMAINS_BY_ABSOLUTEURI> HyperLinks_MOST_POPULAR_DOMAINS_BY_ABSOLUTEURIs
		{
			get
			{
				return this.GetTable<HyperLinks_MOST_POPULAR_DOMAINS_BY_ABSOLUTEURI>();
			}
		}
		
		public System.Data.Linq.Table<HyperLinks_MOST_POPULAR_DOMAINS_BY_DOMAIN> HyperLinks_MOST_POPULAR_DOMAINS_BY_DOMAINs
		{
			get
			{
				return this.GetTable<HyperLinks_MOST_POPULAR_DOMAINS_BY_DOMAIN>();
			}
		}
		
		public System.Data.Linq.Table<HyperLinks_MOST_POPULAR_DOMAINS_BY_EXTENSION> HyperLinks_MOST_POPULAR_DOMAINS_BY_EXTENSIONs
		{
			get
			{
				return this.GetTable<HyperLinks_MOST_POPULAR_DOMAINS_BY_EXTENSION>();
			}
		}
		
		public System.Data.Linq.Table<HyperLinks_MOST_POPULAR_DOMAINS_BY_HOST> HyperLinks_MOST_POPULAR_DOMAINS_BY_HOSTs
		{
			get
			{
				return this.GetTable<HyperLinks_MOST_POPULAR_DOMAINS_BY_HOST>();
			}
		}
		
		public System.Data.Linq.Table<HyperLinks_MOST_POPULAR_DOMAINS_BY_SCHEME> HyperLinks_MOST_POPULAR_DOMAINS_BY_SCHEMEs
		{
			get
			{
				return this.GetTable<HyperLinks_MOST_POPULAR_DOMAINS_BY_SCHEME>();
			}
		}
		
		public System.Data.Linq.Table<HyperLinks_MOST_POPULAR_EXTENSIONS_BY_ABSOLUTEURI> HyperLinks_MOST_POPULAR_EXTENSIONS_BY_ABSOLUTEURIs
		{
			get
			{
				return this.GetTable<HyperLinks_MOST_POPULAR_EXTENSIONS_BY_ABSOLUTEURI>();
			}
		}
		
		public System.Data.Linq.Table<HyperLinks_MOST_POPULAR_EXTENSIONS_BY_DOMAIN> HyperLinks_MOST_POPULAR_EXTENSIONS_BY_DOMAINs
		{
			get
			{
				return this.GetTable<HyperLinks_MOST_POPULAR_EXTENSIONS_BY_DOMAIN>();
			}
		}
		
		public System.Data.Linq.Table<HyperLinks_MOST_POPULAR_EXTENSIONS_BY_EXTENSION> HyperLinks_MOST_POPULAR_EXTENSIONS_BY_EXTENSIONs
		{
			get
			{
				return this.GetTable<HyperLinks_MOST_POPULAR_EXTENSIONS_BY_EXTENSION>();
			}
		}
		
		public System.Data.Linq.Table<HyperLinks_MOST_POPULAR_EXTENSIONS_BY_HOST> HyperLinks_MOST_POPULAR_EXTENSIONS_BY_HOSTs
		{
			get
			{
				return this.GetTable<HyperLinks_MOST_POPULAR_EXTENSIONS_BY_HOST>();
			}
		}
		
		public System.Data.Linq.Table<HyperLinks_MOST_POPULAR_EXTENSIONS_BY_SCHEME> HyperLinks_MOST_POPULAR_EXTENSIONS_BY_SCHEMEs
		{
			get
			{
				return this.GetTable<HyperLinks_MOST_POPULAR_EXTENSIONS_BY_SCHEME>();
			}
		}
		
		public System.Data.Linq.Table<HyperLinks_MOST_POPULAR_HOSTS_BY_ABSOLUTEURI> HyperLinks_MOST_POPULAR_HOSTS_BY_ABSOLUTEURIs
		{
			get
			{
				return this.GetTable<HyperLinks_MOST_POPULAR_HOSTS_BY_ABSOLUTEURI>();
			}
		}
		
		public System.Data.Linq.Table<HyperLinks_MOST_POPULAR_HOSTS_BY_DOMAIN> HyperLinks_MOST_POPULAR_HOSTS_BY_DOMAINs
		{
			get
			{
				return this.GetTable<HyperLinks_MOST_POPULAR_HOSTS_BY_DOMAIN>();
			}
		}
		
		public System.Data.Linq.Table<HyperLinks_MOST_POPULAR_HOSTS_BY_EXTENSION> HyperLinks_MOST_POPULAR_HOSTS_BY_EXTENSIONs
		{
			get
			{
				return this.GetTable<HyperLinks_MOST_POPULAR_HOSTS_BY_EXTENSION>();
			}
		}
		
		public System.Data.Linq.Table<HyperLinks_MOST_POPULAR_HOSTS_BY_HOST> HyperLinks_MOST_POPULAR_HOSTS_BY_HOSTs
		{
			get
			{
				return this.GetTable<HyperLinks_MOST_POPULAR_HOSTS_BY_HOST>();
			}
		}
		
		public System.Data.Linq.Table<HyperLinks_MOST_POPULAR_HOSTS_BY_SCHEME> HyperLinks_MOST_POPULAR_HOSTS_BY_SCHEMEs
		{
			get
			{
				return this.GetTable<HyperLinks_MOST_POPULAR_HOSTS_BY_SCHEME>();
			}
		}
		
		public System.Data.Linq.Table<HyperLinks_MOST_POPULAR_SCHEMES_BY_ABSOLUTEURI> HyperLinks_MOST_POPULAR_SCHEMES_BY_ABSOLUTEURIs
		{
			get
			{
				return this.GetTable<HyperLinks_MOST_POPULAR_SCHEMES_BY_ABSOLUTEURI>();
			}
		}
		
		public System.Data.Linq.Table<HyperLinks_MOST_POPULAR_SCHEMES_BY_DOMAIN> HyperLinks_MOST_POPULAR_SCHEMES_BY_DOMAINs
		{
			get
			{
				return this.GetTable<HyperLinks_MOST_POPULAR_SCHEMES_BY_DOMAIN>();
			}
		}
		
		public System.Data.Linq.Table<HyperLinks_MOST_POPULAR_SCHEMES_BY_EXTENSION> HyperLinks_MOST_POPULAR_SCHEMES_BY_EXTENSIONs
		{
			get
			{
				return this.GetTable<HyperLinks_MOST_POPULAR_SCHEMES_BY_EXTENSION>();
			}
		}
		
		public System.Data.Linq.Table<HyperLinks_MOST_POPULAR_SCHEMES_BY_HOST> HyperLinks_MOST_POPULAR_SCHEMES_BY_HOSTs
		{
			get
			{
				return this.GetTable<HyperLinks_MOST_POPULAR_SCHEMES_BY_HOST>();
			}
		}
		
		public System.Data.Linq.Table<Images_COUNT_BY_ABSOLUTEURI> Images_COUNT_BY_ABSOLUTEURIs
		{
			get
			{
				return this.GetTable<Images_COUNT_BY_ABSOLUTEURI>();
			}
		}
		
		public System.Data.Linq.Table<WebPages_COUNT_BY_SCHEME> WebPages_COUNT_BY_SCHEMEs
		{
			get
			{
				return this.GetTable<WebPages_COUNT_BY_SCHEME>();
			}
		}
		
		public System.Data.Linq.Table<Images_COUNT_BY_DOMAIN> Images_COUNT_BY_DOMAINs
		{
			get
			{
				return this.GetTable<Images_COUNT_BY_DOMAIN>();
			}
		}
		
		public System.Data.Linq.Table<Images_COUNT_BY_EXTENSION> Images_COUNT_BY_EXTENSIONs
		{
			get
			{
				return this.GetTable<Images_COUNT_BY_EXTENSION>();
			}
		}
		
		public System.Data.Linq.Table<Images_COUNT_BY_FULLTEXTINDEXTYPE> Images_COUNT_BY_FULLTEXTINDEXTYPEs
		{
			get
			{
				return this.GetTable<Images_COUNT_BY_FULLTEXTINDEXTYPE>();
			}
		}
		
		public System.Data.Linq.Table<Images_COUNT_BY_HOST> Images_COUNT_BY_HOSTs
		{
			get
			{
				return this.GetTable<Images_COUNT_BY_HOST>();
			}
		}
		
		public System.Data.Linq.Table<Images_COUNT_BY_SCHEME> Images_COUNT_BY_SCHEMEs
		{
			get
			{
				return this.GetTable<Images_COUNT_BY_SCHEME>();
			}
		}
		
		public System.Data.Linq.Table<Images_MOST_POPULAR_ABSOLUTEURIS_BY_ABSOLUTEURI> Images_MOST_POPULAR_ABSOLUTEURIS_BY_ABSOLUTEURIs
		{
			get
			{
				return this.GetTable<Images_MOST_POPULAR_ABSOLUTEURIS_BY_ABSOLUTEURI>();
			}
		}
		
		public System.Data.Linq.Table<Images_MOST_POPULAR_ABSOLUTEURIS_BY_DOMAIN> Images_MOST_POPULAR_ABSOLUTEURIS_BY_DOMAINs
		{
			get
			{
				return this.GetTable<Images_MOST_POPULAR_ABSOLUTEURIS_BY_DOMAIN>();
			}
		}
		
		public System.Data.Linq.Table<Images_MOST_POPULAR_ABSOLUTEURIS_BY_EXTENSION> Images_MOST_POPULAR_ABSOLUTEURIS_BY_EXTENSIONs
		{
			get
			{
				return this.GetTable<Images_MOST_POPULAR_ABSOLUTEURIS_BY_EXTENSION>();
			}
		}
		
		public System.Data.Linq.Table<Images_MOST_POPULAR_ABSOLUTEURIS_BY_HOST> Images_MOST_POPULAR_ABSOLUTEURIS_BY_HOSTs
		{
			get
			{
				return this.GetTable<Images_MOST_POPULAR_ABSOLUTEURIS_BY_HOST>();
			}
		}
		
		public System.Data.Linq.Table<Images_MOST_POPULAR_ABSOLUTEURIS_BY_SCHEME> Images_MOST_POPULAR_ABSOLUTEURIS_BY_SCHEMEs
		{
			get
			{
				return this.GetTable<Images_MOST_POPULAR_ABSOLUTEURIS_BY_SCHEME>();
			}
		}
		
		public System.Data.Linq.Table<Images_MOST_POPULAR_DOMAINS_BY_ABSOLUTEURI> Images_MOST_POPULAR_DOMAINS_BY_ABSOLUTEURIs
		{
			get
			{
				return this.GetTable<Images_MOST_POPULAR_DOMAINS_BY_ABSOLUTEURI>();
			}
		}
		
		public System.Data.Linq.Table<Images_MOST_POPULAR_DOMAINS_BY_DOMAIN> Images_MOST_POPULAR_DOMAINS_BY_DOMAINs
		{
			get
			{
				return this.GetTable<Images_MOST_POPULAR_DOMAINS_BY_DOMAIN>();
			}
		}
		
		public System.Data.Linq.Table<Images_MOST_POPULAR_DOMAINS_BY_EXTENSION> Images_MOST_POPULAR_DOMAINS_BY_EXTENSIONs
		{
			get
			{
				return this.GetTable<Images_MOST_POPULAR_DOMAINS_BY_EXTENSION>();
			}
		}
		
		public System.Data.Linq.Table<Images_MOST_POPULAR_DOMAINS_BY_HOST> Images_MOST_POPULAR_DOMAINS_BY_HOSTs
		{
			get
			{
				return this.GetTable<Images_MOST_POPULAR_DOMAINS_BY_HOST>();
			}
		}
		
		public System.Data.Linq.Table<Images_MOST_POPULAR_DOMAINS_BY_SCHEME> Images_MOST_POPULAR_DOMAINS_BY_SCHEMEs
		{
			get
			{
				return this.GetTable<Images_MOST_POPULAR_DOMAINS_BY_SCHEME>();
			}
		}
		
		public System.Data.Linq.Table<Images_MOST_POPULAR_EXTENSIONS_BY_ABSOLUTEURI> Images_MOST_POPULAR_EXTENSIONS_BY_ABSOLUTEURIs
		{
			get
			{
				return this.GetTable<Images_MOST_POPULAR_EXTENSIONS_BY_ABSOLUTEURI>();
			}
		}
		
		public System.Data.Linq.Table<Images_MOST_POPULAR_EXTENSIONS_BY_DOMAIN> Images_MOST_POPULAR_EXTENSIONS_BY_DOMAINs
		{
			get
			{
				return this.GetTable<Images_MOST_POPULAR_EXTENSIONS_BY_DOMAIN>();
			}
		}
		
		public System.Data.Linq.Table<Images_MOST_POPULAR_EXTENSIONS_BY_EXTENSION> Images_MOST_POPULAR_EXTENSIONS_BY_EXTENSIONs
		{
			get
			{
				return this.GetTable<Images_MOST_POPULAR_EXTENSIONS_BY_EXTENSION>();
			}
		}
		
		public System.Data.Linq.Table<Images_MOST_POPULAR_EXTENSIONS_BY_HOST> Images_MOST_POPULAR_EXTENSIONS_BY_HOSTs
		{
			get
			{
				return this.GetTable<Images_MOST_POPULAR_EXTENSIONS_BY_HOST>();
			}
		}
		
		public System.Data.Linq.Table<Images_MOST_POPULAR_EXTENSIONS_BY_SCHEME> Images_MOST_POPULAR_EXTENSIONS_BY_SCHEMEs
		{
			get
			{
				return this.GetTable<Images_MOST_POPULAR_EXTENSIONS_BY_SCHEME>();
			}
		}
		
		public System.Data.Linq.Table<Images_MOST_POPULAR_HOSTS_BY_ABSOLUTEURI> Images_MOST_POPULAR_HOSTS_BY_ABSOLUTEURIs
		{
			get
			{
				return this.GetTable<Images_MOST_POPULAR_HOSTS_BY_ABSOLUTEURI>();
			}
		}
		
		public System.Data.Linq.Table<Images_MOST_POPULAR_HOSTS_BY_DOMAIN> Images_MOST_POPULAR_HOSTS_BY_DOMAINs
		{
			get
			{
				return this.GetTable<Images_MOST_POPULAR_HOSTS_BY_DOMAIN>();
			}
		}
		
		public System.Data.Linq.Table<Images_MOST_POPULAR_HOSTS_BY_EXTENSION> Images_MOST_POPULAR_HOSTS_BY_EXTENSIONs
		{
			get
			{
				return this.GetTable<Images_MOST_POPULAR_HOSTS_BY_EXTENSION>();
			}
		}
		
		public System.Data.Linq.Table<Images_MOST_POPULAR_HOSTS_BY_HOST> Images_MOST_POPULAR_HOSTS_BY_HOSTs
		{
			get
			{
				return this.GetTable<Images_MOST_POPULAR_HOSTS_BY_HOST>();
			}
		}
		
		public System.Data.Linq.Table<Images_MOST_POPULAR_HOSTS_BY_SCHEME> Images_MOST_POPULAR_HOSTS_BY_SCHEMEs
		{
			get
			{
				return this.GetTable<Images_MOST_POPULAR_HOSTS_BY_SCHEME>();
			}
		}
		
		public System.Data.Linq.Table<Images_MOST_POPULAR_SCHEMES_BY_ABSOLUTEURI> Images_MOST_POPULAR_SCHEMES_BY_ABSOLUTEURIs
		{
			get
			{
				return this.GetTable<Images_MOST_POPULAR_SCHEMES_BY_ABSOLUTEURI>();
			}
		}
		
		public System.Data.Linq.Table<Images_MOST_POPULAR_SCHEMES_BY_DOMAIN> Images_MOST_POPULAR_SCHEMES_BY_DOMAINs
		{
			get
			{
				return this.GetTable<Images_MOST_POPULAR_SCHEMES_BY_DOMAIN>();
			}
		}
		
		public System.Data.Linq.Table<Images_MOST_POPULAR_SCHEMES_BY_EXTENSION> Images_MOST_POPULAR_SCHEMES_BY_EXTENSIONs
		{
			get
			{
				return this.GetTable<Images_MOST_POPULAR_SCHEMES_BY_EXTENSION>();
			}
		}
		
		public System.Data.Linq.Table<Images_MOST_POPULAR_SCHEMES_BY_HOST> Images_MOST_POPULAR_SCHEMES_BY_HOSTs
		{
			get
			{
				return this.GetTable<Images_MOST_POPULAR_SCHEMES_BY_HOST>();
			}
		}
		
		public System.Data.Linq.Table<Images_MOST_POPULAR_SCHEMES_BY_SCHEME> Images_MOST_POPULAR_SCHEMES_BY_SCHEMEs
		{
			get
			{
				return this.GetTable<Images_MOST_POPULAR_SCHEMES_BY_SCHEME>();
			}
		}
		
		public System.Data.Linq.Table<WebPages_COUNT_BY_DOMAIN> WebPages_COUNT_BY_DOMAINs
		{
			get
			{
				return this.GetTable<WebPages_COUNT_BY_DOMAIN>();
			}
		}
		
		public System.Data.Linq.Table<WebPages_COUNT_BY_EXTENSION> WebPages_COUNT_BY_EXTENSIONs
		{
			get
			{
				return this.GetTable<WebPages_COUNT_BY_EXTENSION>();
			}
		}
		
		public System.Data.Linq.Table<WebPages_COUNT_BY_FULLTEXTINDEXTYPE> WebPages_COUNT_BY_FULLTEXTINDEXTYPEs
		{
			get
			{
				return this.GetTable<WebPages_COUNT_BY_FULLTEXTINDEXTYPE>();
			}
		}
		
		public System.Data.Linq.Table<WebPages_COUNT_BY_HOST> WebPages_COUNT_BY_HOSTs
		{
			get
			{
				return this.GetTable<WebPages_COUNT_BY_HOST>();
			}
		}
		
		public System.Data.Linq.Table<Domains_Discovery> Domains_Discoveries
		{
			get
			{
				return this.GetTable<Domains_Discovery>();
			}
		}
		
		public System.Data.Linq.Table<Domain> Domains
		{
			get
			{
				return this.GetTable<Domain>();
			}
		}
		
		public System.Data.Linq.Table<Extension> Extensions
		{
			get
			{
				return this.GetTable<Extension>();
			}
		}
		
		public System.Data.Linq.Table<Extensions_Discovery> Extensions_Discoveries
		{
			get
			{
				return this.GetTable<Extensions_Discovery>();
			}
		}
		
		public System.Data.Linq.Table<Files_Hosts_Discovery> Files_Hosts_Discoveries
		{
			get
			{
				return this.GetTable<Files_Hosts_Discovery>();
			}
		}
		
		public System.Data.Linq.Table<Files_Schemes_Discovery> Files_Schemes_Discoveries
		{
			get
			{
				return this.GetTable<Files_Schemes_Discovery>();
			}
		}
		
		public System.Data.Linq.Table<Exceptions_Hosts_Discovery> Exceptions_Hosts_Discoveries
		{
			get
			{
				return this.GetTable<Exceptions_Hosts_Discovery>();
			}
		}
		
		public System.Data.Linq.Table<Exceptions_Schemes_Discovery> Exceptions_Schemes_Discoveries
		{
			get
			{
				return this.GetTable<Exceptions_Schemes_Discovery>();
			}
		}
		
		public System.Data.Linq.Table<EmailAddresses_Schemes_Discovery> EmailAddresses_Schemes_Discoveries
		{
			get
			{
				return this.GetTable<EmailAddresses_Schemes_Discovery>();
			}
		}
		
		public System.Data.Linq.Table<EmailAddresses_Hosts_Discovery> EmailAddresses_Hosts_Discoveries
		{
			get
			{
				return this.GetTable<EmailAddresses_Hosts_Discovery>();
			}
		}
		
		public System.Data.Linq.Table<DisallowedAbsoluteUris_Hosts_Discovery> DisallowedAbsoluteUris_Hosts_Discoveries
		{
			get
			{
				return this.GetTable<DisallowedAbsoluteUris_Hosts_Discovery>();
			}
		}
		
		public System.Data.Linq.Table<DisallowedAbsoluteUris_Schemes_Discovery> DisallowedAbsoluteUris_Schemes_Discoveries
		{
			get
			{
				return this.GetTable<DisallowedAbsoluteUris_Schemes_Discovery>();
			}
		}
		
		public System.Data.Linq.Table<HyperLinks_Hosts_Discovery> HyperLinks_Hosts_Discoveries
		{
			get
			{
				return this.GetTable<HyperLinks_Hosts_Discovery>();
			}
		}
		
		public System.Data.Linq.Table<HyperLinks_Schemes_Discovery> HyperLinks_Schemes_Discoveries
		{
			get
			{
				return this.GetTable<HyperLinks_Schemes_Discovery>();
			}
		}
		
		public System.Data.Linq.Table<Hosts_Discovery> Hosts_Discoveries
		{
			get
			{
				return this.GetTable<Hosts_Discovery>();
			}
		}
		
		public System.Data.Linq.Table<Host> Hosts
		{
			get
			{
				return this.GetTable<Host>();
			}
		}
		
		public System.Data.Linq.Table<Images_Hosts_Discovery> Images_Hosts_Discoveries
		{
			get
			{
				return this.GetTable<Images_Hosts_Discovery>();
			}
		}
		
		public System.Data.Linq.Table<Images_Schemes_Discovery> Images_Schemes_Discoveries
		{
			get
			{
				return this.GetTable<Images_Schemes_Discovery>();
			}
		}
		
		public System.Data.Linq.Table<Schemes_Discovery> Schemes_Discoveries
		{
			get
			{
				return this.GetTable<Schemes_Discovery>();
			}
		}
		
		public System.Data.Linq.Table<Scheme> Schemes
		{
			get
			{
				return this.GetTable<Scheme>();
			}
		}
		
		public System.Data.Linq.Table<WebPages_Hosts_Discovery> WebPages_Hosts_Discoveries
		{
			get
			{
				return this.GetTable<WebPages_Hosts_Discovery>();
			}
		}
		
		public System.Data.Linq.Table<WebPages_Schemes_Discovery> WebPages_Schemes_Discoveries
		{
			get
			{
				return this.GetTable<WebPages_Schemes_Discovery>();
			}
		}
		
		[Function(Name="rpt.arachnode_rsp_ClassifyAbsoluteUri")]
		public int arachnode_rsp_ClassifyAbsoluteUri([Parameter(Name="AbsoluteUri", DbType="VarChar(884)")] string absoluteUri, [Parameter(Name="DiscoveryTypeID", DbType="TinyInt")] System.Nullable<byte> discoveryTypeID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), absoluteUri, discoveryTypeID);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="rpt.arachnode_rsp_CreateReportingStoredProcedures")]
		public ISingleResult<arachnode_rsp_CreateReportingStoredProceduresResult> arachnode_rsp_CreateReportingStoredProcedures([Parameter(Name="DiscoveryTypeName", DbType="VarChar(50)")] string discoveryTypeName, [Parameter(Name="UriClassificationTypeName1", DbType="VarChar(50)")] string uriClassificationTypeName1, [Parameter(Name="UriClassificationTypeName2", DbType="VarChar(50)")] string uriClassificationTypeName2, [Parameter(Name="NumberOfRecords", DbType="Int")] System.Nullable<int> numberOfRecords, [Parameter(Name="NTileGroups", DbType="Int")] System.Nullable<int> nTileGroups, [Parameter(Name="SelectFromTable", DbType="Bit")] System.Nullable<bool> selectFromTable, [Parameter(Name="CreateStoredProcedure", DbType="Bit")] System.Nullable<bool> createStoredProcedure, [Parameter(Name="ExecuteStoredProcedure", DbType="Bit")] System.Nullable<bool> executeStoredProcedure)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), discoveryTypeName, uriClassificationTypeName1, uriClassificationTypeName2, numberOfRecords, nTileGroups, selectFromTable, createStoredProcedure, executeStoredProcedure);
			return ((ISingleResult<arachnode_rsp_CreateReportingStoredProceduresResult>)(result.ReturnValue));
		}
		
		[Function(Name="rpt.arachnode_rsp_DisallowedAbsoluteUris_COUNT_BY_ABSOLUTEURI")]
		public ISingleResult<arachnode_rsp_DisallowedAbsoluteUris_COUNT_BY_ABSOLUTEURIResult> arachnode_rsp_DisallowedAbsoluteUris_COUNT_BY_ABSOLUTEURI([Parameter(Name="NumberOfRecords", DbType="Int")] System.Nullable<int> numberOfRecords, [Parameter(Name="NTileGroups", DbType="Int")] System.Nullable<int> nTileGroups, [Parameter(Name="SelectFromTable", DbType="Bit")] System.Nullable<bool> selectFromTable)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), numberOfRecords, nTileGroups, selectFromTable);
			return ((ISingleResult<arachnode_rsp_DisallowedAbsoluteUris_COUNT_BY_ABSOLUTEURIResult>)(result.ReturnValue));
		}
		
		[Function(Name="rpt.arachnode_rsp_DisallowedAbsoluteUris_COUNT_BY_DOMAIN")]
		public ISingleResult<arachnode_rsp_DisallowedAbsoluteUris_COUNT_BY_DOMAINResult> arachnode_rsp_DisallowedAbsoluteUris_COUNT_BY_DOMAIN([Parameter(Name="NumberOfRecords", DbType="Int")] System.Nullable<int> numberOfRecords, [Parameter(Name="NTileGroups", DbType="Int")] System.Nullable<int> nTileGroups, [Parameter(Name="SelectFromTable", DbType="Bit")] System.Nullable<bool> selectFromTable)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), numberOfRecords, nTileGroups, selectFromTable);
			return ((ISingleResult<arachnode_rsp_DisallowedAbsoluteUris_COUNT_BY_DOMAINResult>)(result.ReturnValue));
		}
		
		[Function(Name="rpt.arachnode_rsp_DisallowedAbsoluteUris_COUNT_BY_EXTENSION")]
		public ISingleResult<arachnode_rsp_DisallowedAbsoluteUris_COUNT_BY_EXTENSIONResult> arachnode_rsp_DisallowedAbsoluteUris_COUNT_BY_EXTENSION([Parameter(Name="NumberOfRecords", DbType="Int")] System.Nullable<int> numberOfRecords, [Parameter(Name="NTileGroups", DbType="Int")] System.Nullable<int> nTileGroups, [Parameter(Name="SelectFromTable", DbType="Bit")] System.Nullable<bool> selectFromTable)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), numberOfRecords, nTileGroups, selectFromTable);
			return ((ISingleResult<arachnode_rsp_DisallowedAbsoluteUris_COUNT_BY_EXTENSIONResult>)(result.ReturnValue));
		}
		
		[Function(Name="rpt.arachnode_rsp_DisallowedAbsoluteUris_COUNT_BY_HOST")]
		public ISingleResult<arachnode_rsp_DisallowedAbsoluteUris_COUNT_BY_HOSTResult> arachnode_rsp_DisallowedAbsoluteUris_COUNT_BY_HOST([Parameter(Name="NumberOfRecords", DbType="Int")] System.Nullable<int> numberOfRecords, [Parameter(Name="NTileGroups", DbType="Int")] System.Nullable<int> nTileGroups, [Parameter(Name="SelectFromTable", DbType="Bit")] System.Nullable<bool> selectFromTable)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), numberOfRecords, nTileGroups, selectFromTable);
			return ((ISingleResult<arachnode_rsp_DisallowedAbsoluteUris_COUNT_BY_HOSTResult>)(result.ReturnValue));
		}
		
		[Function(Name="rpt.arachnode_rsp_DisallowedAbsoluteUris_COUNT_BY_SCHEME")]
		public ISingleResult<arachnode_rsp_DisallowedAbsoluteUris_COUNT_BY_SCHEMEResult> arachnode_rsp_DisallowedAbsoluteUris_COUNT_BY_SCHEME([Parameter(Name="NumberOfRecords", DbType="Int")] System.Nullable<int> numberOfRecords, [Parameter(Name="NTileGroups", DbType="Int")] System.Nullable<int> nTileGroups, [Parameter(Name="SelectFromTable", DbType="Bit")] System.Nullable<bool> selectFromTable)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), numberOfRecords, nTileGroups, selectFromTable);
			return ((ISingleResult<arachnode_rsp_DisallowedAbsoluteUris_COUNT_BY_SCHEMEResult>)(result.ReturnValue));
		}
		
		[Function(Name="rpt.arachnode_rsp_DisallowedAbsoluteUris_Hosts_Discoveries_INSERT")]
		public int arachnode_rsp_DisallowedAbsoluteUris_Hosts_Discoveries_INSERT()
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="rpt.arachnode_rsp_DisallowedAbsoluteUris_MOST_POPULAR_ABSOLUTEURIS_BY_ABSOLUTEURI" +
			"S")]
		public int arachnode_rsp_DisallowedAbsoluteUris_MOST_POPULAR_ABSOLUTEURIS_BY_ABSOLUTEURIS([Parameter(Name="NumberOfRecords", DbType="Int")] System.Nullable<int> numberOfRecords, [Parameter(Name="NTileGroups", DbType="Int")] System.Nullable<int> nTileGroups, [Parameter(Name="SelectFromTable", DbType="Bit")] System.Nullable<bool> selectFromTable)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), numberOfRecords, nTileGroups, selectFromTable);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="rpt.arachnode_rsp_DisallowedAbsoluteUris_MOST_POPULAR_ABSOLUTEURIS_BY_DOMAINS")]
		public int arachnode_rsp_DisallowedAbsoluteUris_MOST_POPULAR_ABSOLUTEURIS_BY_DOMAINS([Parameter(Name="NumberOfRecords", DbType="Int")] System.Nullable<int> numberOfRecords, [Parameter(Name="NTileGroups", DbType="Int")] System.Nullable<int> nTileGroups, [Parameter(Name="SelectFromTable", DbType="Bit")] System.Nullable<bool> selectFromTable)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), numberOfRecords, nTileGroups, selectFromTable);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="rpt.arachnode_rsp_DisallowedAbsoluteUris_MOST_POPULAR_ABSOLUTEURIS_BY_EXTENSIONS")]
		public int arachnode_rsp_DisallowedAbsoluteUris_MOST_POPULAR_ABSOLUTEURIS_BY_EXTENSIONS([Parameter(Name="NumberOfRecords", DbType="Int")] System.Nullable<int> numberOfRecords, [Parameter(Name="NTileGroups", DbType="Int")] System.Nullable<int> nTileGroups, [Parameter(Name="SelectFromTable", DbType="Bit")] System.Nullable<bool> selectFromTable)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), numberOfRecords, nTileGroups, selectFromTable);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="rpt.arachnode_rsp_DisallowedAbsoluteUris_MOST_POPULAR_ABSOLUTEURIS_BY_HOSTS")]
		public int arachnode_rsp_DisallowedAbsoluteUris_MOST_POPULAR_ABSOLUTEURIS_BY_HOSTS([Parameter(Name="NumberOfRecords", DbType="Int")] System.Nullable<int> numberOfRecords, [Parameter(Name="NTileGroups", DbType="Int")] System.Nullable<int> nTileGroups, [Parameter(Name="SelectFromTable", DbType="Bit")] System.Nullable<bool> selectFromTable)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), numberOfRecords, nTileGroups, selectFromTable);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="rpt.arachnode_rsp_DisallowedAbsoluteUris_MOST_POPULAR_ABSOLUTEURIS_BY_SCHEMES")]
		public int arachnode_rsp_DisallowedAbsoluteUris_MOST_POPULAR_ABSOLUTEURIS_BY_SCHEMES([Parameter(Name="NumberOfRecords", DbType="Int")] System.Nullable<int> numberOfRecords, [Parameter(Name="NTileGroups", DbType="Int")] System.Nullable<int> nTileGroups, [Parameter(Name="SelectFromTable", DbType="Bit")] System.Nullable<bool> selectFromTable)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), numberOfRecords, nTileGroups, selectFromTable);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="rpt.arachnode_rsp_DisallowedAbsoluteUris_MOST_POPULAR_DOMAINS_BY_ABSOLUTEURIS")]
		public int arachnode_rsp_DisallowedAbsoluteUris_MOST_POPULAR_DOMAINS_BY_ABSOLUTEURIS([Parameter(Name="NumberOfRecords", DbType="Int")] System.Nullable<int> numberOfRecords, [Parameter(Name="NTileGroups", DbType="Int")] System.Nullable<int> nTileGroups, [Parameter(Name="SelectFromTable", DbType="Bit")] System.Nullable<bool> selectFromTable)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), numberOfRecords, nTileGroups, selectFromTable);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="rpt.arachnode_rsp_DisallowedAbsoluteUris_MOST_POPULAR_DOMAINS_BY_DOMAINS")]
		public int arachnode_rsp_DisallowedAbsoluteUris_MOST_POPULAR_DOMAINS_BY_DOMAINS([Parameter(Name="NumberOfRecords", DbType="Int")] System.Nullable<int> numberOfRecords, [Parameter(Name="NTileGroups", DbType="Int")] System.Nullable<int> nTileGroups, [Parameter(Name="SelectFromTable", DbType="Bit")] System.Nullable<bool> selectFromTable)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), numberOfRecords, nTileGroups, selectFromTable);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="rpt.arachnode_rsp_DisallowedAbsoluteUris_MOST_POPULAR_DOMAINS_BY_EXTENSIONS")]
		public int arachnode_rsp_DisallowedAbsoluteUris_MOST_POPULAR_DOMAINS_BY_EXTENSIONS([Parameter(Name="NumberOfRecords", DbType="Int")] System.Nullable<int> numberOfRecords, [Parameter(Name="NTileGroups", DbType="Int")] System.Nullable<int> nTileGroups, [Parameter(Name="SelectFromTable", DbType="Bit")] System.Nullable<bool> selectFromTable)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), numberOfRecords, nTileGroups, selectFromTable);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="rpt.arachnode_rsp_DisallowedAbsoluteUris_MOST_POPULAR_DOMAINS_BY_HOSTS")]
		public int arachnode_rsp_DisallowedAbsoluteUris_MOST_POPULAR_DOMAINS_BY_HOSTS([Parameter(Name="NumberOfRecords", DbType="Int")] System.Nullable<int> numberOfRecords, [Parameter(Name="NTileGroups", DbType="Int")] System.Nullable<int> nTileGroups, [Parameter(Name="SelectFromTable", DbType="Bit")] System.Nullable<bool> selectFromTable)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), numberOfRecords, nTileGroups, selectFromTable);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="rpt.arachnode_rsp_DisallowedAbsoluteUris_MOST_POPULAR_DOMAINS_BY_SCHEMES")]
		public int arachnode_rsp_DisallowedAbsoluteUris_MOST_POPULAR_DOMAINS_BY_SCHEMES([Parameter(Name="NumberOfRecords", DbType="Int")] System.Nullable<int> numberOfRecords, [Parameter(Name="NTileGroups", DbType="Int")] System.Nullable<int> nTileGroups, [Parameter(Name="SelectFromTable", DbType="Bit")] System.Nullable<bool> selectFromTable)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), numberOfRecords, nTileGroups, selectFromTable);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="rpt.arachnode_rsp_DisallowedAbsoluteUris_MOST_POPULAR_EXTENSIONS_BY_ABSOLUTEURIS")]
		public int arachnode_rsp_DisallowedAbsoluteUris_MOST_POPULAR_EXTENSIONS_BY_ABSOLUTEURIS([Parameter(Name="NumberOfRecords", DbType="Int")] System.Nullable<int> numberOfRecords, [Parameter(Name="NTileGroups", DbType="Int")] System.Nullable<int> nTileGroups, [Parameter(Name="SelectFromTable", DbType="Bit")] System.Nullable<bool> selectFromTable)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), numberOfRecords, nTileGroups, selectFromTable);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="rpt.arachnode_rsp_DisallowedAbsoluteUris_MOST_POPULAR_EXTENSIONS_BY_DOMAINS")]
		public int arachnode_rsp_DisallowedAbsoluteUris_MOST_POPULAR_EXTENSIONS_BY_DOMAINS([Parameter(Name="NumberOfRecords", DbType="Int")] System.Nullable<int> numberOfRecords, [Parameter(Name="NTileGroups", DbType="Int")] System.Nullable<int> nTileGroups, [Parameter(Name="SelectFromTable", DbType="Bit")] System.Nullable<bool> selectFromTable)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), numberOfRecords, nTileGroups, selectFromTable);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="rpt.arachnode_rsp_DisallowedAbsoluteUris_MOST_POPULAR_EXTENSIONS_BY_EXTENSIONS")]
		public int arachnode_rsp_DisallowedAbsoluteUris_MOST_POPULAR_EXTENSIONS_BY_EXTENSIONS([Parameter(Name="NumberOfRecords", DbType="Int")] System.Nullable<int> numberOfRecords, [Parameter(Name="NTileGroups", DbType="Int")] System.Nullable<int> nTileGroups, [Parameter(Name="SelectFromTable", DbType="Bit")] System.Nullable<bool> selectFromTable)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), numberOfRecords, nTileGroups, selectFromTable);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="rpt.arachnode_rsp_DisallowedAbsoluteUris_MOST_POPULAR_EXTENSIONS_BY_HOSTS")]
		public int arachnode_rsp_DisallowedAbsoluteUris_MOST_POPULAR_EXTENSIONS_BY_HOSTS([Parameter(Name="NumberOfRecords", DbType="Int")] System.Nullable<int> numberOfRecords, [Parameter(Name="NTileGroups", DbType="Int")] System.Nullable<int> nTileGroups, [Parameter(Name="SelectFromTable", DbType="Bit")] System.Nullable<bool> selectFromTable)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), numberOfRecords, nTileGroups, selectFromTable);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="rpt.arachnode_rsp_DisallowedAbsoluteUris_MOST_POPULAR_EXTENSIONS_BY_SCHEMES")]
		public int arachnode_rsp_DisallowedAbsoluteUris_MOST_POPULAR_EXTENSIONS_BY_SCHEMES([Parameter(Name="NumberOfRecords", DbType="Int")] System.Nullable<int> numberOfRecords, [Parameter(Name="NTileGroups", DbType="Int")] System.Nullable<int> nTileGroups, [Parameter(Name="SelectFromTable", DbType="Bit")] System.Nullable<bool> selectFromTable)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), numberOfRecords, nTileGroups, selectFromTable);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="rpt.arachnode_rsp_DisallowedAbsoluteUris_MOST_POPULAR_HOSTS_BY_ABSOLUTEURIS")]
		public int arachnode_rsp_DisallowedAbsoluteUris_MOST_POPULAR_HOSTS_BY_ABSOLUTEURIS([Parameter(Name="NumberOfRecords", DbType="Int")] System.Nullable<int> numberOfRecords, [Parameter(Name="NTileGroups", DbType="Int")] System.Nullable<int> nTileGroups, [Parameter(Name="SelectFromTable", DbType="Bit")] System.Nullable<bool> selectFromTable)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), numberOfRecords, nTileGroups, selectFromTable);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="rpt.arachnode_rsp_DisallowedAbsoluteUris_MOST_POPULAR_HOSTS_BY_DOMAINS")]
		public int arachnode_rsp_DisallowedAbsoluteUris_MOST_POPULAR_HOSTS_BY_DOMAINS([Parameter(Name="NumberOfRecords", DbType="Int")] System.Nullable<int> numberOfRecords, [Parameter(Name="NTileGroups", DbType="Int")] System.Nullable<int> nTileGroups, [Parameter(Name="SelectFromTable", DbType="Bit")] System.Nullable<bool> selectFromTable)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), numberOfRecords, nTileGroups, selectFromTable);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="rpt.arachnode_rsp_DisallowedAbsoluteUris_MOST_POPULAR_HOSTS_BY_EXTENSIONS")]
		public int arachnode_rsp_DisallowedAbsoluteUris_MOST_POPULAR_HOSTS_BY_EXTENSIONS([Parameter(Name="NumberOfRecords", DbType="Int")] System.Nullable<int> numberOfRecords, [Parameter(Name="NTileGroups", DbType="Int")] System.Nullable<int> nTileGroups, [Parameter(Name="SelectFromTable", DbType="Bit")] System.Nullable<bool> selectFromTable)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), numberOfRecords, nTileGroups, selectFromTable);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="rpt.arachnode_rsp_DisallowedAbsoluteUris_MOST_POPULAR_HOSTS_BY_HOSTS")]
		public int arachnode_rsp_DisallowedAbsoluteUris_MOST_POPULAR_HOSTS_BY_HOSTS([Parameter(Name="NumberOfRecords", DbType="Int")] System.Nullable<int> numberOfRecords, [Parameter(Name="NTileGroups", DbType="Int")] System.Nullable<int> nTileGroups, [Parameter(Name="SelectFromTable", DbType="Bit")] System.Nullable<bool> selectFromTable)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), numberOfRecords, nTileGroups, selectFromTable);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="rpt.arachnode_rsp_DisallowedAbsoluteUris_MOST_POPULAR_HOSTS_BY_SCHEMES")]
		public int arachnode_rsp_DisallowedAbsoluteUris_MOST_POPULAR_HOSTS_BY_SCHEMES([Parameter(Name="NumberOfRecords", DbType="Int")] System.Nullable<int> numberOfRecords, [Parameter(Name="NTileGroups", DbType="Int")] System.Nullable<int> nTileGroups, [Parameter(Name="SelectFromTable", DbType="Bit")] System.Nullable<bool> selectFromTable)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), numberOfRecords, nTileGroups, selectFromTable);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="rpt.arachnode_rsp_DisallowedAbsoluteUris_MOST_POPULAR_SCHEMES_BY_ABSOLUTEURIS")]
		public int arachnode_rsp_DisallowedAbsoluteUris_MOST_POPULAR_SCHEMES_BY_ABSOLUTEURIS([Parameter(Name="NumberOfRecords", DbType="Int")] System.Nullable<int> numberOfRecords, [Parameter(Name="NTileGroups", DbType="Int")] System.Nullable<int> nTileGroups, [Parameter(Name="SelectFromTable", DbType="Bit")] System.Nullable<bool> selectFromTable)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), numberOfRecords, nTileGroups, selectFromTable);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="rpt.arachnode_rsp_DisallowedAbsoluteUris_MOST_POPULAR_SCHEMES_BY_DOMAINS")]
		public int arachnode_rsp_DisallowedAbsoluteUris_MOST_POPULAR_SCHEMES_BY_DOMAINS([Parameter(Name="NumberOfRecords", DbType="Int")] System.Nullable<int> numberOfRecords, [Parameter(Name="NTileGroups", DbType="Int")] System.Nullable<int> nTileGroups, [Parameter(Name="SelectFromTable", DbType="Bit")] System.Nullable<bool> selectFromTable)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), numberOfRecords, nTileGroups, selectFromTable);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="rpt.arachnode_rsp_DisallowedAbsoluteUris_MOST_POPULAR_SCHEMES_BY_EXTENSIONS")]
		public int arachnode_rsp_DisallowedAbsoluteUris_MOST_POPULAR_SCHEMES_BY_EXTENSIONS([Parameter(Name="NumberOfRecords", DbType="Int")] System.Nullable<int> numberOfRecords, [Parameter(Name="NTileGroups", DbType="Int")] System.Nullable<int> nTileGroups, [Parameter(Name="SelectFromTable", DbType="Bit")] System.Nullable<bool> selectFromTable)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), numberOfRecords, nTileGroups, selectFromTable);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="rpt.arachnode_rsp_DisallowedAbsoluteUris_MOST_POPULAR_SCHEMES_BY_HOSTS")]
		public int arachnode_rsp_DisallowedAbsoluteUris_MOST_POPULAR_SCHEMES_BY_HOSTS([Parameter(Name="NumberOfRecords", DbType="Int")] System.Nullable<int> numberOfRecords, [Parameter(Name="NTileGroups", DbType="Int")] System.Nullable<int> nTileGroups, [Parameter(Name="SelectFromTable", DbType="Bit")] System.Nullable<bool> selectFromTable)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), numberOfRecords, nTileGroups, selectFromTable);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="rpt.arachnode_rsp_DisallowedAbsoluteUris_MOST_POPULAR_SCHEMES_BY_SCHEMES")]
		public int arachnode_rsp_DisallowedAbsoluteUris_MOST_POPULAR_SCHEMES_BY_SCHEMES([Parameter(Name="NumberOfRecords", DbType="Int")] System.Nullable<int> numberOfRecords, [Parameter(Name="NTileGroups", DbType="Int")] System.Nullable<int> nTileGroups, [Parameter(Name="SelectFromTable", DbType="Bit")] System.Nullable<bool> selectFromTable)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), numberOfRecords, nTileGroups, selectFromTable);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="rpt.arachnode_rsp_DisallowedAbsoluteUris_Schemes_Discoveries_INSERT")]
		public int arachnode_rsp_DisallowedAbsoluteUris_Schemes_Discoveries_INSERT()
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="rpt.arachnode_rsp_Domains_UPDATE")]
		public int arachnode_rsp_Domains_UPDATE([Parameter(Name="UpdateExisting", DbType="Bit")] System.Nullable<bool> updateExisting)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), updateExisting);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="rpt.arachnode_rsp_EmailAddresses_Schemes_Discoveries_INSERT")]
		public int arachnode_rsp_EmailAddresses_Schemes_Discoveries_INSERT([Parameter(Name="UpdateExisting", DbType="Bit")] System.Nullable<bool> updateExisting)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), updateExisting);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="rpt.arachnode_rsp_EmailAddresses_COUNT_BY_ABSOLUTEURI")]
		public ISingleResult<arachnode_rsp_EmailAddresses_COUNT_BY_ABSOLUTEURIResult> arachnode_rsp_EmailAddresses_COUNT_BY_ABSOLUTEURI([Parameter(Name="NumberOfRecords", DbType="Int")] System.Nullable<int> numberOfRecords, [Parameter(Name="NTileGroups", DbType="Int")] System.Nullable<int> nTileGroups, [Parameter(Name="SelectFromTable", DbType="Bit")] System.Nullable<bool> selectFromTable)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), numberOfRecords, nTileGroups, selectFromTable);
			return ((ISingleResult<arachnode_rsp_EmailAddresses_COUNT_BY_ABSOLUTEURIResult>)(result.ReturnValue));
		}
		
		[Function(Name="rpt.arachnode_rsp_EmailAddresses_COUNT_BY_DOMAIN")]
		public ISingleResult<arachnode_rsp_EmailAddresses_COUNT_BY_DOMAINResult> arachnode_rsp_EmailAddresses_COUNT_BY_DOMAIN([Parameter(Name="NumberOfRecords", DbType="Int")] System.Nullable<int> numberOfRecords, [Parameter(Name="NTileGroups", DbType="Int")] System.Nullable<int> nTileGroups, [Parameter(Name="SelectFromTable", DbType="Bit")] System.Nullable<bool> selectFromTable)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), numberOfRecords, nTileGroups, selectFromTable);
			return ((ISingleResult<arachnode_rsp_EmailAddresses_COUNT_BY_DOMAINResult>)(result.ReturnValue));
		}
		
		[Function(Name="rpt.arachnode_rsp_EmailAddresses_COUNT_BY_EXTENSION")]
		public ISingleResult<arachnode_rsp_EmailAddresses_COUNT_BY_EXTENSIONResult> arachnode_rsp_EmailAddresses_COUNT_BY_EXTENSION([Parameter(Name="NumberOfRecords", DbType="Int")] System.Nullable<int> numberOfRecords, [Parameter(Name="NTileGroups", DbType="Int")] System.Nullable<int> nTileGroups, [Parameter(Name="SelectFromTable", DbType="Bit")] System.Nullable<bool> selectFromTable)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), numberOfRecords, nTileGroups, selectFromTable);
			return ((ISingleResult<arachnode_rsp_EmailAddresses_COUNT_BY_EXTENSIONResult>)(result.ReturnValue));
		}
		
		[Function(Name="rpt.arachnode_rsp_EmailAddresses_COUNT_BY_HOST")]
		public ISingleResult<arachnode_rsp_EmailAddresses_COUNT_BY_HOSTResult> arachnode_rsp_EmailAddresses_COUNT_BY_HOST([Parameter(Name="NumberOfRecords", DbType="Int")] System.Nullable<int> numberOfRecords, [Parameter(Name="NTileGroups", DbType="Int")] System.Nullable<int> nTileGroups, [Parameter(Name="SelectFromTable", DbType="Bit")] System.Nullable<bool> selectFromTable)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), numberOfRecords, nTileGroups, selectFromTable);
			return ((ISingleResult<arachnode_rsp_EmailAddresses_COUNT_BY_HOSTResult>)(result.ReturnValue));
		}
		
		[Function(Name="rpt.arachnode_rsp_EmailAddresses_COUNT_BY_SCHEME")]
		public ISingleResult<arachnode_rsp_EmailAddresses_COUNT_BY_SCHEMEResult> arachnode_rsp_EmailAddresses_COUNT_BY_SCHEME([Parameter(Name="NumberOfRecords", DbType="Int")] System.Nullable<int> numberOfRecords, [Parameter(Name="NTileGroups", DbType="Int")] System.Nullable<int> nTileGroups, [Parameter(Name="SelectFromTable", DbType="Bit")] System.Nullable<bool> selectFromTable)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), numberOfRecords, nTileGroups, selectFromTable);
			return ((ISingleResult<arachnode_rsp_EmailAddresses_COUNT_BY_SCHEMEResult>)(result.ReturnValue));
		}
		
		[Function(Name="rpt.arachnode_rsp_EmailAddresses_Hosts_Discoveries_INSERT")]
		public int arachnode_rsp_EmailAddresses_Hosts_Discoveries_INSERT([Parameter(Name="UpdateExisting", DbType="Bit")] System.Nullable<bool> updateExisting)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), updateExisting);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="rpt.arachnode_rsp_EmailAddresses_MOST_POPULAR_ABSOLUTEURIS_BY_ABSOLUTEURIS")]
		public int arachnode_rsp_EmailAddresses_MOST_POPULAR_ABSOLUTEURIS_BY_ABSOLUTEURIS([Parameter(Name="NumberOfRecords", DbType="Int")] System.Nullable<int> numberOfRecords, [Parameter(Name="NTileGroups", DbType="Int")] System.Nullable<int> nTileGroups, [Parameter(Name="SelectFromTable", DbType="Bit")] System.Nullable<bool> selectFromTable)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), numberOfRecords, nTileGroups, selectFromTable);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="rpt.arachnode_rsp_EmailAddresses_MOST_POPULAR_ABSOLUTEURIS_BY_DOMAINS")]
		public int arachnode_rsp_EmailAddresses_MOST_POPULAR_ABSOLUTEURIS_BY_DOMAINS([Parameter(Name="NumberOfRecords", DbType="Int")] System.Nullable<int> numberOfRecords, [Parameter(Name="NTileGroups", DbType="Int")] System.Nullable<int> nTileGroups, [Parameter(Name="SelectFromTable", DbType="Bit")] System.Nullable<bool> selectFromTable)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), numberOfRecords, nTileGroups, selectFromTable);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="rpt.arachnode_rsp_EmailAddresses_MOST_POPULAR_ABSOLUTEURIS_BY_EXTENSIONS")]
		public int arachnode_rsp_EmailAddresses_MOST_POPULAR_ABSOLUTEURIS_BY_EXTENSIONS([Parameter(Name="NumberOfRecords", DbType="Int")] System.Nullable<int> numberOfRecords, [Parameter(Name="NTileGroups", DbType="Int")] System.Nullable<int> nTileGroups, [Parameter(Name="SelectFromTable", DbType="Bit")] System.Nullable<bool> selectFromTable)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), numberOfRecords, nTileGroups, selectFromTable);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="rpt.arachnode_rsp_EmailAddresses_MOST_POPULAR_ABSOLUTEURIS_BY_HOSTS")]
		public int arachnode_rsp_EmailAddresses_MOST_POPULAR_ABSOLUTEURIS_BY_HOSTS([Parameter(Name="NumberOfRecords", DbType="Int")] System.Nullable<int> numberOfRecords, [Parameter(Name="NTileGroups", DbType="Int")] System.Nullable<int> nTileGroups, [Parameter(Name="SelectFromTable", DbType="Bit")] System.Nullable<bool> selectFromTable)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), numberOfRecords, nTileGroups, selectFromTable);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="rpt.arachnode_rsp_EmailAddresses_MOST_POPULAR_ABSOLUTEURIS_BY_SCHEMES")]
		public int arachnode_rsp_EmailAddresses_MOST_POPULAR_ABSOLUTEURIS_BY_SCHEMES([Parameter(Name="NumberOfRecords", DbType="Int")] System.Nullable<int> numberOfRecords, [Parameter(Name="NTileGroups", DbType="Int")] System.Nullable<int> nTileGroups, [Parameter(Name="SelectFromTable", DbType="Bit")] System.Nullable<bool> selectFromTable)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), numberOfRecords, nTileGroups, selectFromTable);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="rpt.arachnode_rsp_EmailAddresses_MOST_POPULAR_DOMAINS_BY_ABSOLUTEURIS")]
		public int arachnode_rsp_EmailAddresses_MOST_POPULAR_DOMAINS_BY_ABSOLUTEURIS([Parameter(Name="NumberOfRecords", DbType="Int")] System.Nullable<int> numberOfRecords, [Parameter(Name="NTileGroups", DbType="Int")] System.Nullable<int> nTileGroups, [Parameter(Name="SelectFromTable", DbType="Bit")] System.Nullable<bool> selectFromTable)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), numberOfRecords, nTileGroups, selectFromTable);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="rpt.arachnode_rsp_EmailAddresses_MOST_POPULAR_DOMAINS_BY_DOMAINS")]
		public int arachnode_rsp_EmailAddresses_MOST_POPULAR_DOMAINS_BY_DOMAINS([Parameter(Name="NumberOfRecords", DbType="Int")] System.Nullable<int> numberOfRecords, [Parameter(Name="NTileGroups", DbType="Int")] System.Nullable<int> nTileGroups, [Parameter(Name="SelectFromTable", DbType="Bit")] System.Nullable<bool> selectFromTable)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), numberOfRecords, nTileGroups, selectFromTable);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="rpt.arachnode_rsp_EmailAddresses_MOST_POPULAR_DOMAINS_BY_EXTENSIONS")]
		public int arachnode_rsp_EmailAddresses_MOST_POPULAR_DOMAINS_BY_EXTENSIONS([Parameter(Name="NumberOfRecords", DbType="Int")] System.Nullable<int> numberOfRecords, [Parameter(Name="NTileGroups", DbType="Int")] System.Nullable<int> nTileGroups, [Parameter(Name="SelectFromTable", DbType="Bit")] System.Nullable<bool> selectFromTable)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), numberOfRecords, nTileGroups, selectFromTable);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="rpt.arachnode_rsp_EmailAddresses_MOST_POPULAR_DOMAINS_BY_HOSTS")]
		public int arachnode_rsp_EmailAddresses_MOST_POPULAR_DOMAINS_BY_HOSTS([Parameter(Name="NumberOfRecords", DbType="Int")] System.Nullable<int> numberOfRecords, [Parameter(Name="NTileGroups", DbType="Int")] System.Nullable<int> nTileGroups, [Parameter(Name="SelectFromTable", DbType="Bit")] System.Nullable<bool> selectFromTable)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), numberOfRecords, nTileGroups, selectFromTable);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="rpt.arachnode_rsp_EmailAddresses_MOST_POPULAR_DOMAINS_BY_SCHEMES")]
		public int arachnode_rsp_EmailAddresses_MOST_POPULAR_DOMAINS_BY_SCHEMES([Parameter(Name="NumberOfRecords", DbType="Int")] System.Nullable<int> numberOfRecords, [Parameter(Name="NTileGroups", DbType="Int")] System.Nullable<int> nTileGroups, [Parameter(Name="SelectFromTable", DbType="Bit")] System.Nullable<bool> selectFromTable)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), numberOfRecords, nTileGroups, selectFromTable);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="rpt.arachnode_rsp_EmailAddresses_MOST_POPULAR_EXTENSIONS_BY_ABSOLUTEURIS")]
		public int arachnode_rsp_EmailAddresses_MOST_POPULAR_EXTENSIONS_BY_ABSOLUTEURIS([Parameter(Name="NumberOfRecords", DbType="Int")] System.Nullable<int> numberOfRecords, [Parameter(Name="NTileGroups", DbType="Int")] System.Nullable<int> nTileGroups, [Parameter(Name="SelectFromTable", DbType="Bit")] System.Nullable<bool> selectFromTable)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), numberOfRecords, nTileGroups, selectFromTable);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="rpt.arachnode_rsp_EmailAddresses_MOST_POPULAR_EXTENSIONS_BY_DOMAINS")]
		public int arachnode_rsp_EmailAddresses_MOST_POPULAR_EXTENSIONS_BY_DOMAINS([Parameter(Name="NumberOfRecords", DbType="Int")] System.Nullable<int> numberOfRecords, [Parameter(Name="NTileGroups", DbType="Int")] System.Nullable<int> nTileGroups, [Parameter(Name="SelectFromTable", DbType="Bit")] System.Nullable<bool> selectFromTable)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), numberOfRecords, nTileGroups, selectFromTable);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="rpt.arachnode_rsp_EmailAddresses_MOST_POPULAR_EXTENSIONS_BY_EXTENSIONS")]
		public int arachnode_rsp_EmailAddresses_MOST_POPULAR_EXTENSIONS_BY_EXTENSIONS([Parameter(Name="NumberOfRecords", DbType="Int")] System.Nullable<int> numberOfRecords, [Parameter(Name="NTileGroups", DbType="Int")] System.Nullable<int> nTileGroups, [Parameter(Name="SelectFromTable", DbType="Bit")] System.Nullable<bool> selectFromTable)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), numberOfRecords, nTileGroups, selectFromTable);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="rpt.arachnode_rsp_EmailAddresses_MOST_POPULAR_EXTENSIONS_BY_HOSTS")]
		public int arachnode_rsp_EmailAddresses_MOST_POPULAR_EXTENSIONS_BY_HOSTS([Parameter(Name="NumberOfRecords", DbType="Int")] System.Nullable<int> numberOfRecords, [Parameter(Name="NTileGroups", DbType="Int")] System.Nullable<int> nTileGroups, [Parameter(Name="SelectFromTable", DbType="Bit")] System.Nullable<bool> selectFromTable)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), numberOfRecords, nTileGroups, selectFromTable);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="rpt.arachnode_rsp_EmailAddresses_MOST_POPULAR_EXTENSIONS_BY_SCHEMES")]
		public int arachnode_rsp_EmailAddresses_MOST_POPULAR_EXTENSIONS_BY_SCHEMES([Parameter(Name="NumberOfRecords", DbType="Int")] System.Nullable<int> numberOfRecords, [Parameter(Name="NTileGroups", DbType="Int")] System.Nullable<int> nTileGroups, [Parameter(Name="SelectFromTable", DbType="Bit")] System.Nullable<bool> selectFromTable)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), numberOfRecords, nTileGroups, selectFromTable);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="rpt.arachnode_rsp_EmailAddresses_MOST_POPULAR_HOSTS_BY_ABSOLUTEURIS")]
		public int arachnode_rsp_EmailAddresses_MOST_POPULAR_HOSTS_BY_ABSOLUTEURIS([Parameter(Name="NumberOfRecords", DbType="Int")] System.Nullable<int> numberOfRecords, [Parameter(Name="NTileGroups", DbType="Int")] System.Nullable<int> nTileGroups, [Parameter(Name="SelectFromTable", DbType="Bit")] System.Nullable<bool> selectFromTable)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), numberOfRecords, nTileGroups, selectFromTable);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="rpt.arachnode_rsp_EmailAddresses_MOST_POPULAR_HOSTS_BY_DOMAINS")]
		public int arachnode_rsp_EmailAddresses_MOST_POPULAR_HOSTS_BY_DOMAINS([Parameter(Name="NumberOfRecords", DbType="Int")] System.Nullable<int> numberOfRecords, [Parameter(Name="NTileGroups", DbType="Int")] System.Nullable<int> nTileGroups, [Parameter(Name="SelectFromTable", DbType="Bit")] System.Nullable<bool> selectFromTable)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), numberOfRecords, nTileGroups, selectFromTable);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="rpt.arachnode_rsp_EmailAddresses_MOST_POPULAR_HOSTS_BY_EXTENSIONS")]
		public int arachnode_rsp_EmailAddresses_MOST_POPULAR_HOSTS_BY_EXTENSIONS([Parameter(Name="NumberOfRecords", DbType="Int")] System.Nullable<int> numberOfRecords, [Parameter(Name="NTileGroups", DbType="Int")] System.Nullable<int> nTileGroups, [Parameter(Name="SelectFromTable", DbType="Bit")] System.Nullable<bool> selectFromTable)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), numberOfRecords, nTileGroups, selectFromTable);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="rpt.arachnode_rsp_EmailAddresses_MOST_POPULAR_HOSTS_BY_HOSTS")]
		public int arachnode_rsp_EmailAddresses_MOST_POPULAR_HOSTS_BY_HOSTS([Parameter(Name="NumberOfRecords", DbType="Int")] System.Nullable<int> numberOfRecords, [Parameter(Name="NTileGroups", DbType="Int")] System.Nullable<int> nTileGroups, [Parameter(Name="SelectFromTable", DbType="Bit")] System.Nullable<bool> selectFromTable)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), numberOfRecords, nTileGroups, selectFromTable);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="rpt.arachnode_rsp_EmailAddresses_MOST_POPULAR_HOSTS_BY_SCHEMES")]
		public int arachnode_rsp_EmailAddresses_MOST_POPULAR_HOSTS_BY_SCHEMES([Parameter(Name="NumberOfRecords", DbType="Int")] System.Nullable<int> numberOfRecords, [Parameter(Name="NTileGroups", DbType="Int")] System.Nullable<int> nTileGroups, [Parameter(Name="SelectFromTable", DbType="Bit")] System.Nullable<bool> selectFromTable)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), numberOfRecords, nTileGroups, selectFromTable);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="rpt.arachnode_rsp_EmailAddresses_MOST_POPULAR_SCHEMES_BY_ABSOLUTEURIS")]
		public int arachnode_rsp_EmailAddresses_MOST_POPULAR_SCHEMES_BY_ABSOLUTEURIS([Parameter(Name="NumberOfRecords", DbType="Int")] System.Nullable<int> numberOfRecords, [Parameter(Name="NTileGroups", DbType="Int")] System.Nullable<int> nTileGroups, [Parameter(Name="SelectFromTable", DbType="Bit")] System.Nullable<bool> selectFromTable)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), numberOfRecords, nTileGroups, selectFromTable);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="rpt.arachnode_rsp_EmailAddresses_MOST_POPULAR_SCHEMES_BY_DOMAINS")]
		public int arachnode_rsp_EmailAddresses_MOST_POPULAR_SCHEMES_BY_DOMAINS([Parameter(Name="NumberOfRecords", DbType="Int")] System.Nullable<int> numberOfRecords, [Parameter(Name="NTileGroups", DbType="Int")] System.Nullable<int> nTileGroups, [Parameter(Name="SelectFromTable", DbType="Bit")] System.Nullable<bool> selectFromTable)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), numberOfRecords, nTileGroups, selectFromTable);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="rpt.arachnode_rsp_EmailAddresses_MOST_POPULAR_SCHEMES_BY_EXTENSIONS")]
		public int arachnode_rsp_EmailAddresses_MOST_POPULAR_SCHEMES_BY_EXTENSIONS([Parameter(Name="NumberOfRecords", DbType="Int")] System.Nullable<int> numberOfRecords, [Parameter(Name="NTileGroups", DbType="Int")] System.Nullable<int> nTileGroups, [Parameter(Name="SelectFromTable", DbType="Bit")] System.Nullable<bool> selectFromTable)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), numberOfRecords, nTileGroups, selectFromTable);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="rpt.arachnode_rsp_EmailAddresses_MOST_POPULAR_SCHEMES_BY_HOSTS")]
		public int arachnode_rsp_EmailAddresses_MOST_POPULAR_SCHEMES_BY_HOSTS([Parameter(Name="NumberOfRecords", DbType="Int")] System.Nullable<int> numberOfRecords, [Parameter(Name="NTileGroups", DbType="Int")] System.Nullable<int> nTileGroups, [Parameter(Name="SelectFromTable", DbType="Bit")] System.Nullable<bool> selectFromTable)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), numberOfRecords, nTileGroups, selectFromTable);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="rpt.arachnode_rsp_EmailAddresses_MOST_POPULAR_SCHEMES_BY_SCHEMES")]
		public int arachnode_rsp_EmailAddresses_MOST_POPULAR_SCHEMES_BY_SCHEMES([Parameter(Name="NumberOfRecords", DbType="Int")] System.Nullable<int> numberOfRecords, [Parameter(Name="NTileGroups", DbType="Int")] System.Nullable<int> nTileGroups, [Parameter(Name="SelectFromTable", DbType="Bit")] System.Nullable<bool> selectFromTable)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), numberOfRecords, nTileGroups, selectFromTable);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="rpt.arachnode_rsp_Exceptions_COUNT_BY_ABSOLUTEURI1")]
		public ISingleResult<arachnode_rsp_Exceptions_COUNT_BY_ABSOLUTEURI1Result> arachnode_rsp_Exceptions_COUNT_BY_ABSOLUTEURI1([Parameter(Name="NumberOfRecords", DbType="Int")] System.Nullable<int> numberOfRecords, [Parameter(Name="NTileGroups", DbType="Int")] System.Nullable<int> nTileGroups, [Parameter(Name="SelectFromTable", DbType="Bit")] System.Nullable<bool> selectFromTable)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), numberOfRecords, nTileGroups, selectFromTable);
			return ((ISingleResult<arachnode_rsp_Exceptions_COUNT_BY_ABSOLUTEURI1Result>)(result.ReturnValue));
		}
		
		[Function(Name="rpt.arachnode_rsp_Extensions_UPDATE")]
		public int arachnode_rsp_Extensions_UPDATE()
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="rpt.arachnode_rsp_Exceptions_COUNT_BY_ABSOLUTEURI2")]
		public ISingleResult<arachnode_rsp_Exceptions_COUNT_BY_ABSOLUTEURI2Result> arachnode_rsp_Exceptions_COUNT_BY_ABSOLUTEURI2([Parameter(Name="NumberOfRecords", DbType="Int")] System.Nullable<int> numberOfRecords, [Parameter(Name="NTileGroups", DbType="Int")] System.Nullable<int> nTileGroups, [Parameter(Name="SelectFromTable", DbType="Bit")] System.Nullable<bool> selectFromTable)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), numberOfRecords, nTileGroups, selectFromTable);
			return ((ISingleResult<arachnode_rsp_Exceptions_COUNT_BY_ABSOLUTEURI2Result>)(result.ReturnValue));
		}
		
		[Function(Name="rpt.arachnode_rsp_Exceptions_COUNT_BY_ABSOLUTEURIS")]
		public ISingleResult<arachnode_rsp_Exceptions_COUNT_BY_ABSOLUTEURISResult> arachnode_rsp_Exceptions_COUNT_BY_ABSOLUTEURIS([Parameter(Name="NumberOfRecords", DbType="Int")] System.Nullable<int> numberOfRecords, [Parameter(Name="NTileGroups", DbType="Int")] System.Nullable<int> nTileGroups, [Parameter(Name="SelectFromTable", DbType="Bit")] System.Nullable<bool> selectFromTable)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), numberOfRecords, nTileGroups, selectFromTable);
			return ((ISingleResult<arachnode_rsp_Exceptions_COUNT_BY_ABSOLUTEURISResult>)(result.ReturnValue));
		}
		
		[Function(Name="rpt.arachnode_rsp_Exceptions_COUNT_BY_DOMAIN1")]
		public ISingleResult<arachnode_rsp_Exceptions_COUNT_BY_DOMAIN1Result> arachnode_rsp_Exceptions_COUNT_BY_DOMAIN1([Parameter(Name="NumberOfRecords", DbType="Int")] System.Nullable<int> numberOfRecords, [Parameter(Name="NTileGroups", DbType="Int")] System.Nullable<int> nTileGroups, [Parameter(Name="SelectFromTable", DbType="Bit")] System.Nullable<bool> selectFromTable)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), numberOfRecords, nTileGroups, selectFromTable);
			return ((ISingleResult<arachnode_rsp_Exceptions_COUNT_BY_DOMAIN1Result>)(result.ReturnValue));
		}
		
		[Function(Name="rpt.arachnode_rsp_Exceptions_COUNT_BY_DOMAIN2")]
		public ISingleResult<arachnode_rsp_Exceptions_COUNT_BY_DOMAIN2Result> arachnode_rsp_Exceptions_COUNT_BY_DOMAIN2([Parameter(Name="NumberOfRecords", DbType="Int")] System.Nullable<int> numberOfRecords, [Parameter(Name="NTileGroups", DbType="Int")] System.Nullable<int> nTileGroups, [Parameter(Name="SelectFromTable", DbType="Bit")] System.Nullable<bool> selectFromTable)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), numberOfRecords, nTileGroups, selectFromTable);
			return ((ISingleResult<arachnode_rsp_Exceptions_COUNT_BY_DOMAIN2Result>)(result.ReturnValue));
		}
		
		[Function(Name="rpt.arachnode_rsp_Exceptions_COUNT_BY_DOMAINS")]
		public ISingleResult<arachnode_rsp_Exceptions_COUNT_BY_DOMAINSResult> arachnode_rsp_Exceptions_COUNT_BY_DOMAINS([Parameter(Name="NumberOfRecords", DbType="Int")] System.Nullable<int> numberOfRecords, [Parameter(Name="NTileGroups", DbType="Int")] System.Nullable<int> nTileGroups, [Parameter(Name="SelectFromTable", DbType="Bit")] System.Nullable<bool> selectFromTable)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), numberOfRecords, nTileGroups, selectFromTable);
			return ((ISingleResult<arachnode_rsp_Exceptions_COUNT_BY_DOMAINSResult>)(result.ReturnValue));
		}
		
		[Function(Name="rpt.arachnode_rsp_Exceptions_COUNT_BY_EXTENSION1")]
		public ISingleResult<arachnode_rsp_Exceptions_COUNT_BY_EXTENSION1Result> arachnode_rsp_Exceptions_COUNT_BY_EXTENSION1([Parameter(Name="NumberOfRecords", DbType="Int")] System.Nullable<int> numberOfRecords, [Parameter(Name="NTileGroups", DbType="Int")] System.Nullable<int> nTileGroups, [Parameter(Name="SelectFromTable", DbType="Bit")] System.Nullable<bool> selectFromTable)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), numberOfRecords, nTileGroups, selectFromTable);
			return ((ISingleResult<arachnode_rsp_Exceptions_COUNT_BY_EXTENSION1Result>)(result.ReturnValue));
		}
		
		[Function(Name="rpt.arachnode_rsp_Exceptions_COUNT_BY_EXTENSION2")]
		public ISingleResult<arachnode_rsp_Exceptions_COUNT_BY_EXTENSION2Result> arachnode_rsp_Exceptions_COUNT_BY_EXTENSION2([Parameter(Name="NumberOfRecords", DbType="Int")] System.Nullable<int> numberOfRecords, [Parameter(Name="NTileGroups", DbType="Int")] System.Nullable<int> nTileGroups, [Parameter(Name="SelectFromTable", DbType="Bit")] System.Nullable<bool> selectFromTable)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), numberOfRecords, nTileGroups, selectFromTable);
			return ((ISingleResult<arachnode_rsp_Exceptions_COUNT_BY_EXTENSION2Result>)(result.ReturnValue));
		}
		
		[Function(Name="rpt.arachnode_rsp_Exceptions_COUNT_BY_EXTENSIONS")]
		public ISingleResult<arachnode_rsp_Exceptions_COUNT_BY_EXTENSIONSResult> arachnode_rsp_Exceptions_COUNT_BY_EXTENSIONS([Parameter(Name="NumberOfRecords", DbType="Int")] System.Nullable<int> numberOfRecords, [Parameter(Name="NTileGroups", DbType="Int")] System.Nullable<int> nTileGroups, [Parameter(Name="SelectFromTable", DbType="Bit")] System.Nullable<bool> selectFromTable)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), numberOfRecords, nTileGroups, selectFromTable);
			return ((ISingleResult<arachnode_rsp_Exceptions_COUNT_BY_EXTENSIONSResult>)(result.ReturnValue));
		}
		
		[Function(Name="rpt.arachnode_rsp_Exceptions_COUNT_BY_HOST1")]
		public ISingleResult<arachnode_rsp_Exceptions_COUNT_BY_HOST1Result> arachnode_rsp_Exceptions_COUNT_BY_HOST1([Parameter(Name="NumberOfRecords", DbType="Int")] System.Nullable<int> numberOfRecords, [Parameter(Name="NTileGroups", DbType="Int")] System.Nullable<int> nTileGroups, [Parameter(Name="SelectFromTable", DbType="Bit")] System.Nullable<bool> selectFromTable)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), numberOfRecords, nTileGroups, selectFromTable);
			return ((ISingleResult<arachnode_rsp_Exceptions_COUNT_BY_HOST1Result>)(result.ReturnValue));
		}
		
		[Function(Name="rpt.arachnode_rsp_Exceptions_COUNT_BY_HOST2")]
		public ISingleResult<arachnode_rsp_Exceptions_COUNT_BY_HOST2Result> arachnode_rsp_Exceptions_COUNT_BY_HOST2([Parameter(Name="NumberOfRecords", DbType="Int")] System.Nullable<int> numberOfRecords, [Parameter(Name="NTileGroups", DbType="Int")] System.Nullable<int> nTileGroups, [Parameter(Name="SelectFromTable", DbType="Bit")] System.Nullable<bool> selectFromTable)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), numberOfRecords, nTileGroups, selectFromTable);
			return ((ISingleResult<arachnode_rsp_Exceptions_COUNT_BY_HOST2Result>)(result.ReturnValue));
		}
		
		[Function(Name="rpt.arachnode_rsp_Exceptions_COUNT_BY_HOSTS")]
		public ISingleResult<arachnode_rsp_Exceptions_COUNT_BY_HOSTSResult> arachnode_rsp_Exceptions_COUNT_BY_HOSTS([Parameter(Name="NumberOfRecords", DbType="Int")] System.Nullable<int> numberOfRecords, [Parameter(Name="NTileGroups", DbType="Int")] System.Nullable<int> nTileGroups, [Parameter(Name="SelectFromTable", DbType="Bit")] System.Nullable<bool> selectFromTable)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), numberOfRecords, nTileGroups, selectFromTable);
			return ((ISingleResult<arachnode_rsp_Exceptions_COUNT_BY_HOSTSResult>)(result.ReturnValue));
		}
		
		[Function(Name="rpt.arachnode_rsp_Exceptions_COUNT_BY_MESSAGE")]
		public ISingleResult<arachnode_rsp_Exceptions_COUNT_BY_MESSAGEResult> arachnode_rsp_Exceptions_COUNT_BY_MESSAGE([Parameter(Name="NumberOfRecords", DbType="Int")] System.Nullable<int> numberOfRecords, [Parameter(Name="NTileGroups", DbType="Int")] System.Nullable<int> nTileGroups, [Parameter(Name="SelectFromTable", DbType="Bit")] System.Nullable<bool> selectFromTable)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), numberOfRecords, nTileGroups, selectFromTable);
			return ((ISingleResult<arachnode_rsp_Exceptions_COUNT_BY_MESSAGEResult>)(result.ReturnValue));
		}
		
		[Function(Name="rpt.arachnode_rsp_Exceptions_COUNT_BY_SCHEME1")]
		public ISingleResult<arachnode_rsp_Exceptions_COUNT_BY_SCHEME1Result> arachnode_rsp_Exceptions_COUNT_BY_SCHEME1([Parameter(Name="NumberOfRecords", DbType="Int")] System.Nullable<int> numberOfRecords, [Parameter(Name="NTileGroups", DbType="Int")] System.Nullable<int> nTileGroups, [Parameter(Name="SelectFromTable", DbType="Bit")] System.Nullable<bool> selectFromTable)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), numberOfRecords, nTileGroups, selectFromTable);
			return ((ISingleResult<arachnode_rsp_Exceptions_COUNT_BY_SCHEME1Result>)(result.ReturnValue));
		}
		
		[Function(Name="rpt.arachnode_rsp_Exceptions_COUNT_BY_SCHEME2")]
		public ISingleResult<arachnode_rsp_Exceptions_COUNT_BY_SCHEME2Result> arachnode_rsp_Exceptions_COUNT_BY_SCHEME2([Parameter(Name="NumberOfRecords", DbType="Int")] System.Nullable<int> numberOfRecords, [Parameter(Name="NTileGroups", DbType="Int")] System.Nullable<int> nTileGroups, [Parameter(Name="SelectFromTable", DbType="Bit")] System.Nullable<bool> selectFromTable)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), numberOfRecords, nTileGroups, selectFromTable);
			return ((ISingleResult<arachnode_rsp_Exceptions_COUNT_BY_SCHEME2Result>)(result.ReturnValue));
		}
		
		[Function(Name="rpt.arachnode_rsp_Exceptions_COUNT_BY_SCHEMES")]
		public ISingleResult<arachnode_rsp_Exceptions_COUNT_BY_SCHEMESResult> arachnode_rsp_Exceptions_COUNT_BY_SCHEMES([Parameter(Name="NumberOfRecords", DbType="Int")] System.Nullable<int> numberOfRecords, [Parameter(Name="NTileGroups", DbType="Int")] System.Nullable<int> nTileGroups, [Parameter(Name="SelectFromTable", DbType="Bit")] System.Nullable<bool> selectFromTable)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), numberOfRecords, nTileGroups, selectFromTable);
			return ((ISingleResult<arachnode_rsp_Exceptions_COUNT_BY_SCHEMESResult>)(result.ReturnValue));
		}
		
		[Function(Name="rpt.arachnode_rsp_Exceptions_COUNT_BY_SOURCE")]
		public ISingleResult<arachnode_rsp_Exceptions_COUNT_BY_SOURCEResult> arachnode_rsp_Exceptions_COUNT_BY_SOURCE([Parameter(Name="NumberOfRecords", DbType="Int")] System.Nullable<int> numberOfRecords, [Parameter(Name="NTileGroups", DbType="Int")] System.Nullable<int> nTileGroups, [Parameter(Name="SelectFromTable", DbType="Bit")] System.Nullable<bool> selectFromTable)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), numberOfRecords, nTileGroups, selectFromTable);
			return ((ISingleResult<arachnode_rsp_Exceptions_COUNT_BY_SOURCEResult>)(result.ReturnValue));
		}
		
		[Function(Name="rpt.arachnode_rsp_Exceptions_COUNT_BY_STACKTRACE")]
		public ISingleResult<arachnode_rsp_Exceptions_COUNT_BY_STACKTRACEResult> arachnode_rsp_Exceptions_COUNT_BY_STACKTRACE([Parameter(Name="NumberOfRecords", DbType="Int")] System.Nullable<int> numberOfRecords, [Parameter(Name="NTileGroups", DbType="Int")] System.Nullable<int> nTileGroups, [Parameter(Name="SelectFromTable", DbType="Bit")] System.Nullable<bool> selectFromTable)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), numberOfRecords, nTileGroups, selectFromTable);
			return ((ISingleResult<arachnode_rsp_Exceptions_COUNT_BY_STACKTRACEResult>)(result.ReturnValue));
		}
		
		[Function(Name="rpt.arachnode_rsp_Exceptions_Hosts_Discoveries_INSERT")]
		public int arachnode_rsp_Exceptions_Hosts_Discoveries_INSERT([Parameter(Name="UpdateExisting", DbType="Bit")] System.Nullable<bool> updateExisting)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), updateExisting);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="rpt.arachnode_rsp_Exceptions_Schemes_Discoveries_INSERT")]
		public int arachnode_rsp_Exceptions_Schemes_Discoveries_INSERT([Parameter(Name="UpdateExisting", DbType="Bit")] System.Nullable<bool> updateExisting)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), updateExisting);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="rpt.arachnode_rsp_Files_COUNT_BY_ABSOLUTEURI")]
		public ISingleResult<arachnode_rsp_Files_COUNT_BY_ABSOLUTEURIResult> arachnode_rsp_Files_COUNT_BY_ABSOLUTEURI([Parameter(Name="NumberOfRecords", DbType="Int")] System.Nullable<int> numberOfRecords, [Parameter(Name="NTileGroups", DbType="Int")] System.Nullable<int> nTileGroups, [Parameter(Name="SelectFromTable", DbType="Bit")] System.Nullable<bool> selectFromTable)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), numberOfRecords, nTileGroups, selectFromTable);
			return ((ISingleResult<arachnode_rsp_Files_COUNT_BY_ABSOLUTEURIResult>)(result.ReturnValue));
		}
		
		[Function(Name="rpt.arachnode_rsp_Files_Schemes_Discoveries_INSERT")]
		public int arachnode_rsp_Files_Schemes_Discoveries_INSERT([Parameter(Name="UpdateExisting", DbType="Bit")] System.Nullable<bool> updateExisting)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), updateExisting);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="rpt.arachnode_rsp_Files_COUNT_BY_DOMAIN")]
		public ISingleResult<arachnode_rsp_Files_COUNT_BY_DOMAINResult> arachnode_rsp_Files_COUNT_BY_DOMAIN([Parameter(Name="NumberOfRecords", DbType="Int")] System.Nullable<int> numberOfRecords, [Parameter(Name="NTileGroups", DbType="Int")] System.Nullable<int> nTileGroups, [Parameter(Name="SelectFromTable", DbType="Bit")] System.Nullable<bool> selectFromTable)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), numberOfRecords, nTileGroups, selectFromTable);
			return ((ISingleResult<arachnode_rsp_Files_COUNT_BY_DOMAINResult>)(result.ReturnValue));
		}
		
		[Function(Name="rpt.arachnode_rsp_Files_COUNT_BY_EXTENSION")]
		public ISingleResult<arachnode_rsp_Files_COUNT_BY_EXTENSIONResult> arachnode_rsp_Files_COUNT_BY_EXTENSION([Parameter(Name="NumberOfRecords", DbType="Int")] System.Nullable<int> numberOfRecords, [Parameter(Name="NTileGroups", DbType="Int")] System.Nullable<int> nTileGroups, [Parameter(Name="SelectFromTable", DbType="Bit")] System.Nullable<bool> selectFromTable)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), numberOfRecords, nTileGroups, selectFromTable);
			return ((ISingleResult<arachnode_rsp_Files_COUNT_BY_EXTENSIONResult>)(result.ReturnValue));
		}
		
		[Function(Name="rpt.arachnode_rsp_Files_COUNT_BY_FULLTEXTINDEXTYPE")]
		public ISingleResult<arachnode_rsp_Files_COUNT_BY_FULLTEXTINDEXTYPEResult> arachnode_rsp_Files_COUNT_BY_FULLTEXTINDEXTYPE([Parameter(Name="NumberOfRecords", DbType="Int")] System.Nullable<int> numberOfRecords, [Parameter(Name="NTileGroups", DbType="Int")] System.Nullable<int> nTileGroups, [Parameter(Name="SelectFromTable", DbType="Bit")] System.Nullable<bool> selectFromTable)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), numberOfRecords, nTileGroups, selectFromTable);
			return ((ISingleResult<arachnode_rsp_Files_COUNT_BY_FULLTEXTINDEXTYPEResult>)(result.ReturnValue));
		}
		
		[Function(Name="rpt.arachnode_rsp_Files_COUNT_BY_HOST")]
		public ISingleResult<arachnode_rsp_Files_COUNT_BY_HOSTResult> arachnode_rsp_Files_COUNT_BY_HOST([Parameter(Name="NumberOfRecords", DbType="Int")] System.Nullable<int> numberOfRecords, [Parameter(Name="NTileGroups", DbType="Int")] System.Nullable<int> nTileGroups, [Parameter(Name="SelectFromTable", DbType="Bit")] System.Nullable<bool> selectFromTable)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), numberOfRecords, nTileGroups, selectFromTable);
			return ((ISingleResult<arachnode_rsp_Files_COUNT_BY_HOSTResult>)(result.ReturnValue));
		}
		
		[Function(Name="rpt.arachnode_rsp_Files_COUNT_BY_SCHEME")]
		public ISingleResult<arachnode_rsp_Files_COUNT_BY_SCHEMEResult> arachnode_rsp_Files_COUNT_BY_SCHEME([Parameter(Name="NumberOfRecords", DbType="Int")] System.Nullable<int> numberOfRecords, [Parameter(Name="NTileGroups", DbType="Int")] System.Nullable<int> nTileGroups, [Parameter(Name="SelectFromTable", DbType="Bit")] System.Nullable<bool> selectFromTable)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), numberOfRecords, nTileGroups, selectFromTable);
			return ((ISingleResult<arachnode_rsp_Files_COUNT_BY_SCHEMEResult>)(result.ReturnValue));
		}
		
		[Function(Name="rpt.arachnode_rsp_Files_Hosts_Discoveries_INSERT")]
		public int arachnode_rsp_Files_Hosts_Discoveries_INSERT([Parameter(Name="UpdateExisting", DbType="Bit")] System.Nullable<bool> updateExisting)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), updateExisting);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="rpt.arachnode_rsp_Files_MOST_POPULAR_ABSOLUTEURIS_BY_ABSOLUTEURIS")]
		public int arachnode_rsp_Files_MOST_POPULAR_ABSOLUTEURIS_BY_ABSOLUTEURIS([Parameter(Name="NumberOfRecords", DbType="Int")] System.Nullable<int> numberOfRecords, [Parameter(Name="NTileGroups", DbType="Int")] System.Nullable<int> nTileGroups, [Parameter(Name="SelectFromTable", DbType="Bit")] System.Nullable<bool> selectFromTable)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), numberOfRecords, nTileGroups, selectFromTable);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="rpt.arachnode_rsp_Files_MOST_POPULAR_ABSOLUTEURIS_BY_DOMAINS")]
		public int arachnode_rsp_Files_MOST_POPULAR_ABSOLUTEURIS_BY_DOMAINS([Parameter(Name="NumberOfRecords", DbType="Int")] System.Nullable<int> numberOfRecords, [Parameter(Name="NTileGroups", DbType="Int")] System.Nullable<int> nTileGroups, [Parameter(Name="SelectFromTable", DbType="Bit")] System.Nullable<bool> selectFromTable)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), numberOfRecords, nTileGroups, selectFromTable);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="rpt.arachnode_rsp_Files_MOST_POPULAR_ABSOLUTEURIS_BY_EXTENSIONS")]
		public int arachnode_rsp_Files_MOST_POPULAR_ABSOLUTEURIS_BY_EXTENSIONS([Parameter(Name="NumberOfRecords", DbType="Int")] System.Nullable<int> numberOfRecords, [Parameter(Name="NTileGroups", DbType="Int")] System.Nullable<int> nTileGroups, [Parameter(Name="SelectFromTable", DbType="Bit")] System.Nullable<bool> selectFromTable)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), numberOfRecords, nTileGroups, selectFromTable);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="rpt.arachnode_rsp_Files_MOST_POPULAR_ABSOLUTEURIS_BY_HOSTS")]
		public int arachnode_rsp_Files_MOST_POPULAR_ABSOLUTEURIS_BY_HOSTS([Parameter(Name="NumberOfRecords", DbType="Int")] System.Nullable<int> numberOfRecords, [Parameter(Name="NTileGroups", DbType="Int")] System.Nullable<int> nTileGroups, [Parameter(Name="SelectFromTable", DbType="Bit")] System.Nullable<bool> selectFromTable)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), numberOfRecords, nTileGroups, selectFromTable);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="rpt.arachnode_rsp_Files_MOST_POPULAR_ABSOLUTEURIS_BY_SCHEMES")]
		public int arachnode_rsp_Files_MOST_POPULAR_ABSOLUTEURIS_BY_SCHEMES([Parameter(Name="NumberOfRecords", DbType="Int")] System.Nullable<int> numberOfRecords, [Parameter(Name="NTileGroups", DbType="Int")] System.Nullable<int> nTileGroups, [Parameter(Name="SelectFromTable", DbType="Bit")] System.Nullable<bool> selectFromTable)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), numberOfRecords, nTileGroups, selectFromTable);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="rpt.arachnode_rsp_Files_MOST_POPULAR_DOMAINS_BY_ABSOLUTEURIS")]
		public int arachnode_rsp_Files_MOST_POPULAR_DOMAINS_BY_ABSOLUTEURIS([Parameter(Name="NumberOfRecords", DbType="Int")] System.Nullable<int> numberOfRecords, [Parameter(Name="NTileGroups", DbType="Int")] System.Nullable<int> nTileGroups, [Parameter(Name="SelectFromTable", DbType="Bit")] System.Nullable<bool> selectFromTable)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), numberOfRecords, nTileGroups, selectFromTable);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="rpt.arachnode_rsp_Files_MOST_POPULAR_DOMAINS_BY_DOMAINS")]
		public int arachnode_rsp_Files_MOST_POPULAR_DOMAINS_BY_DOMAINS([Parameter(Name="NumberOfRecords", DbType="Int")] System.Nullable<int> numberOfRecords, [Parameter(Name="NTileGroups", DbType="Int")] System.Nullable<int> nTileGroups, [Parameter(Name="SelectFromTable", DbType="Bit")] System.Nullable<bool> selectFromTable)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), numberOfRecords, nTileGroups, selectFromTable);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="rpt.arachnode_rsp_Files_MOST_POPULAR_DOMAINS_BY_EXTENSIONS")]
		public int arachnode_rsp_Files_MOST_POPULAR_DOMAINS_BY_EXTENSIONS([Parameter(Name="NumberOfRecords", DbType="Int")] System.Nullable<int> numberOfRecords, [Parameter(Name="NTileGroups", DbType="Int")] System.Nullable<int> nTileGroups, [Parameter(Name="SelectFromTable", DbType="Bit")] System.Nullable<bool> selectFromTable)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), numberOfRecords, nTileGroups, selectFromTable);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="rpt.arachnode_rsp_Files_MOST_POPULAR_DOMAINS_BY_HOSTS")]
		public int arachnode_rsp_Files_MOST_POPULAR_DOMAINS_BY_HOSTS([Parameter(Name="NumberOfRecords", DbType="Int")] System.Nullable<int> numberOfRecords, [Parameter(Name="NTileGroups", DbType="Int")] System.Nullable<int> nTileGroups, [Parameter(Name="SelectFromTable", DbType="Bit")] System.Nullable<bool> selectFromTable)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), numberOfRecords, nTileGroups, selectFromTable);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="rpt.arachnode_rsp_Files_MOST_POPULAR_DOMAINS_BY_SCHEMES")]
		public int arachnode_rsp_Files_MOST_POPULAR_DOMAINS_BY_SCHEMES([Parameter(Name="NumberOfRecords", DbType="Int")] System.Nullable<int> numberOfRecords, [Parameter(Name="NTileGroups", DbType="Int")] System.Nullable<int> nTileGroups, [Parameter(Name="SelectFromTable", DbType="Bit")] System.Nullable<bool> selectFromTable)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), numberOfRecords, nTileGroups, selectFromTable);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="rpt.arachnode_rsp_Files_MOST_POPULAR_EXTENSIONS_BY_ABSOLUTEURIS")]
		public int arachnode_rsp_Files_MOST_POPULAR_EXTENSIONS_BY_ABSOLUTEURIS([Parameter(Name="NumberOfRecords", DbType="Int")] System.Nullable<int> numberOfRecords, [Parameter(Name="NTileGroups", DbType="Int")] System.Nullable<int> nTileGroups, [Parameter(Name="SelectFromTable", DbType="Bit")] System.Nullable<bool> selectFromTable)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), numberOfRecords, nTileGroups, selectFromTable);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="rpt.arachnode_rsp_Files_MOST_POPULAR_EXTENSIONS_BY_DOMAINS")]
		public int arachnode_rsp_Files_MOST_POPULAR_EXTENSIONS_BY_DOMAINS([Parameter(Name="NumberOfRecords", DbType="Int")] System.Nullable<int> numberOfRecords, [Parameter(Name="NTileGroups", DbType="Int")] System.Nullable<int> nTileGroups, [Parameter(Name="SelectFromTable", DbType="Bit")] System.Nullable<bool> selectFromTable)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), numberOfRecords, nTileGroups, selectFromTable);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="rpt.arachnode_rsp_Files_MOST_POPULAR_EXTENSIONS_BY_EXTENSIONS")]
		public int arachnode_rsp_Files_MOST_POPULAR_EXTENSIONS_BY_EXTENSIONS([Parameter(Name="NumberOfRecords", DbType="Int")] System.Nullable<int> numberOfRecords, [Parameter(Name="NTileGroups", DbType="Int")] System.Nullable<int> nTileGroups, [Parameter(Name="SelectFromTable", DbType="Bit")] System.Nullable<bool> selectFromTable)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), numberOfRecords, nTileGroups, selectFromTable);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="rpt.arachnode_rsp_Files_MOST_POPULAR_EXTENSIONS_BY_HOSTS")]
		public int arachnode_rsp_Files_MOST_POPULAR_EXTENSIONS_BY_HOSTS([Parameter(Name="NumberOfRecords", DbType="Int")] System.Nullable<int> numberOfRecords, [Parameter(Name="NTileGroups", DbType="Int")] System.Nullable<int> nTileGroups, [Parameter(Name="SelectFromTable", DbType="Bit")] System.Nullable<bool> selectFromTable)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), numberOfRecords, nTileGroups, selectFromTable);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="rpt.arachnode_rsp_Files_MOST_POPULAR_EXTENSIONS_BY_SCHEMES")]
		public int arachnode_rsp_Files_MOST_POPULAR_EXTENSIONS_BY_SCHEMES([Parameter(Name="NumberOfRecords", DbType="Int")] System.Nullable<int> numberOfRecords, [Parameter(Name="NTileGroups", DbType="Int")] System.Nullable<int> nTileGroups, [Parameter(Name="SelectFromTable", DbType="Bit")] System.Nullable<bool> selectFromTable)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), numberOfRecords, nTileGroups, selectFromTable);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="rpt.arachnode_rsp_Files_MOST_POPULAR_HOSTS_BY_ABSOLUTEURIS")]
		public int arachnode_rsp_Files_MOST_POPULAR_HOSTS_BY_ABSOLUTEURIS([Parameter(Name="NumberOfRecords", DbType="Int")] System.Nullable<int> numberOfRecords, [Parameter(Name="NTileGroups", DbType="Int")] System.Nullable<int> nTileGroups, [Parameter(Name="SelectFromTable", DbType="Bit")] System.Nullable<bool> selectFromTable)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), numberOfRecords, nTileGroups, selectFromTable);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="rpt.arachnode_rsp_Files_MOST_POPULAR_HOSTS_BY_DOMAINS")]
		public int arachnode_rsp_Files_MOST_POPULAR_HOSTS_BY_DOMAINS([Parameter(Name="NumberOfRecords", DbType="Int")] System.Nullable<int> numberOfRecords, [Parameter(Name="NTileGroups", DbType="Int")] System.Nullable<int> nTileGroups, [Parameter(Name="SelectFromTable", DbType="Bit")] System.Nullable<bool> selectFromTable)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), numberOfRecords, nTileGroups, selectFromTable);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="rpt.arachnode_rsp_Files_MOST_POPULAR_HOSTS_BY_EXTENSIONS")]
		public int arachnode_rsp_Files_MOST_POPULAR_HOSTS_BY_EXTENSIONS([Parameter(Name="NumberOfRecords", DbType="Int")] System.Nullable<int> numberOfRecords, [Parameter(Name="NTileGroups", DbType="Int")] System.Nullable<int> nTileGroups, [Parameter(Name="SelectFromTable", DbType="Bit")] System.Nullable<bool> selectFromTable)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), numberOfRecords, nTileGroups, selectFromTable);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="rpt.arachnode_rsp_Files_MOST_POPULAR_HOSTS_BY_HOSTS")]
		public int arachnode_rsp_Files_MOST_POPULAR_HOSTS_BY_HOSTS([Parameter(Name="NumberOfRecords", DbType="Int")] System.Nullable<int> numberOfRecords, [Parameter(Name="NTileGroups", DbType="Int")] System.Nullable<int> nTileGroups, [Parameter(Name="SelectFromTable", DbType="Bit")] System.Nullable<bool> selectFromTable)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), numberOfRecords, nTileGroups, selectFromTable);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="rpt.arachnode_rsp_Files_MOST_POPULAR_HOSTS_BY_SCHEMES")]
		public int arachnode_rsp_Files_MOST_POPULAR_HOSTS_BY_SCHEMES([Parameter(Name="NumberOfRecords", DbType="Int")] System.Nullable<int> numberOfRecords, [Parameter(Name="NTileGroups", DbType="Int")] System.Nullable<int> nTileGroups, [Parameter(Name="SelectFromTable", DbType="Bit")] System.Nullable<bool> selectFromTable)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), numberOfRecords, nTileGroups, selectFromTable);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="rpt.arachnode_rsp_Files_MOST_POPULAR_SCHEMES_BY_ABSOLUTEURIS")]
		public int arachnode_rsp_Files_MOST_POPULAR_SCHEMES_BY_ABSOLUTEURIS([Parameter(Name="NumberOfRecords", DbType="Int")] System.Nullable<int> numberOfRecords, [Parameter(Name="NTileGroups", DbType="Int")] System.Nullable<int> nTileGroups, [Parameter(Name="SelectFromTable", DbType="Bit")] System.Nullable<bool> selectFromTable)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), numberOfRecords, nTileGroups, selectFromTable);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="rpt.arachnode_rsp_Files_MOST_POPULAR_SCHEMES_BY_DOMAINS")]
		public int arachnode_rsp_Files_MOST_POPULAR_SCHEMES_BY_DOMAINS([Parameter(Name="NumberOfRecords", DbType="Int")] System.Nullable<int> numberOfRecords, [Parameter(Name="NTileGroups", DbType="Int")] System.Nullable<int> nTileGroups, [Parameter(Name="SelectFromTable", DbType="Bit")] System.Nullable<bool> selectFromTable)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), numberOfRecords, nTileGroups, selectFromTable);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="rpt.arachnode_rsp_Files_MOST_POPULAR_SCHEMES_BY_EXTENSIONS")]
		public int arachnode_rsp_Files_MOST_POPULAR_SCHEMES_BY_EXTENSIONS([Parameter(Name="NumberOfRecords", DbType="Int")] System.Nullable<int> numberOfRecords, [Parameter(Name="NTileGroups", DbType="Int")] System.Nullable<int> nTileGroups, [Parameter(Name="SelectFromTable", DbType="Bit")] System.Nullable<bool> selectFromTable)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), numberOfRecords, nTileGroups, selectFromTable);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="rpt.arachnode_rsp_Files_MOST_POPULAR_SCHEMES_BY_HOSTS")]
		public int arachnode_rsp_Files_MOST_POPULAR_SCHEMES_BY_HOSTS([Parameter(Name="NumberOfRecords", DbType="Int")] System.Nullable<int> numberOfRecords, [Parameter(Name="NTileGroups", DbType="Int")] System.Nullable<int> nTileGroups, [Parameter(Name="SelectFromTable", DbType="Bit")] System.Nullable<bool> selectFromTable)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), numberOfRecords, nTileGroups, selectFromTable);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="rpt.arachnode_rsp_Files_MOST_POPULAR_SCHEMES_BY_SCHEMES")]
		public int arachnode_rsp_Files_MOST_POPULAR_SCHEMES_BY_SCHEMES([Parameter(Name="NumberOfRecords", DbType="Int")] System.Nullable<int> numberOfRecords, [Parameter(Name="NTileGroups", DbType="Int")] System.Nullable<int> nTileGroups, [Parameter(Name="SelectFromTable", DbType="Bit")] System.Nullable<bool> selectFromTable)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), numberOfRecords, nTileGroups, selectFromTable);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="rpt.arachnode_rsp_Hosts_UPDATE")]
		public int arachnode_rsp_Hosts_UPDATE([Parameter(Name="UpdateExisting", DbType="Bit")] System.Nullable<bool> updateExisting)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), updateExisting);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="rpt.arachnode_rsp_HyperLinks_Schemes_Discoveries_INSERT")]
		public int arachnode_rsp_HyperLinks_Schemes_Discoveries_INSERT()
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="rpt.arachnode_rsp_HyperLinks_COUNT_BY_ABSOLUTEURI")]
		public ISingleResult<arachnode_rsp_HyperLinks_COUNT_BY_ABSOLUTEURIResult> arachnode_rsp_HyperLinks_COUNT_BY_ABSOLUTEURI([Parameter(Name="NumberOfRecords", DbType="Int")] System.Nullable<int> numberOfRecords, [Parameter(Name="NTileGroups", DbType="Int")] System.Nullable<int> nTileGroups, [Parameter(Name="SelectFromTable", DbType="Bit")] System.Nullable<bool> selectFromTable)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), numberOfRecords, nTileGroups, selectFromTable);
			return ((ISingleResult<arachnode_rsp_HyperLinks_COUNT_BY_ABSOLUTEURIResult>)(result.ReturnValue));
		}
		
		[Function(Name="rpt.arachnode_rsp_HyperLinks_COUNT_BY_DOMAIN")]
		public ISingleResult<arachnode_rsp_HyperLinks_COUNT_BY_DOMAINResult> arachnode_rsp_HyperLinks_COUNT_BY_DOMAIN([Parameter(Name="NumberOfRecords", DbType="Int")] System.Nullable<int> numberOfRecords, [Parameter(Name="NTileGroups", DbType="Int")] System.Nullable<int> nTileGroups, [Parameter(Name="SelectFromTable", DbType="Bit")] System.Nullable<bool> selectFromTable)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), numberOfRecords, nTileGroups, selectFromTable);
			return ((ISingleResult<arachnode_rsp_HyperLinks_COUNT_BY_DOMAINResult>)(result.ReturnValue));
		}
		
		[Function(Name="rpt.arachnode_rsp_HyperLinks_COUNT_BY_EXTENSION")]
		public ISingleResult<arachnode_rsp_HyperLinks_COUNT_BY_EXTENSIONResult> arachnode_rsp_HyperLinks_COUNT_BY_EXTENSION([Parameter(Name="NumberOfRecords", DbType="Int")] System.Nullable<int> numberOfRecords, [Parameter(Name="NTileGroups", DbType="Int")] System.Nullable<int> nTileGroups, [Parameter(Name="SelectFromTable", DbType="Bit")] System.Nullable<bool> selectFromTable)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), numberOfRecords, nTileGroups, selectFromTable);
			return ((ISingleResult<arachnode_rsp_HyperLinks_COUNT_BY_EXTENSIONResult>)(result.ReturnValue));
		}
		
		[Function(Name="rpt.arachnode_rsp_HyperLinks_COUNT_BY_HOST")]
		public ISingleResult<arachnode_rsp_HyperLinks_COUNT_BY_HOSTResult> arachnode_rsp_HyperLinks_COUNT_BY_HOST([Parameter(Name="NumberOfRecords", DbType="Int")] System.Nullable<int> numberOfRecords, [Parameter(Name="NTileGroups", DbType="Int")] System.Nullable<int> nTileGroups, [Parameter(Name="SelectFromTable", DbType="Bit")] System.Nullable<bool> selectFromTable)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), numberOfRecords, nTileGroups, selectFromTable);
			return ((ISingleResult<arachnode_rsp_HyperLinks_COUNT_BY_HOSTResult>)(result.ReturnValue));
		}
		
		[Function(Name="rpt.arachnode_rsp_HyperLinks_COUNT_BY_SCHEME")]
		public ISingleResult<arachnode_rsp_HyperLinks_COUNT_BY_SCHEMEResult> arachnode_rsp_HyperLinks_COUNT_BY_SCHEME([Parameter(Name="NumberOfRecords", DbType="Int")] System.Nullable<int> numberOfRecords, [Parameter(Name="NTileGroups", DbType="Int")] System.Nullable<int> nTileGroups, [Parameter(Name="SelectFromTable", DbType="Bit")] System.Nullable<bool> selectFromTable)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), numberOfRecords, nTileGroups, selectFromTable);
			return ((ISingleResult<arachnode_rsp_HyperLinks_COUNT_BY_SCHEMEResult>)(result.ReturnValue));
		}
		
		[Function(Name="rpt.arachnode_rsp_HyperLinks_Hosts_Discoveries_INSERT")]
		public int arachnode_rsp_HyperLinks_Hosts_Discoveries_INSERT()
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="rpt.arachnode_rsp_HyperLinks_MOST_POPULAR_ABSOLUTEURIS_BY_ABSOLUTEURIS")]
		public int arachnode_rsp_HyperLinks_MOST_POPULAR_ABSOLUTEURIS_BY_ABSOLUTEURIS([Parameter(Name="NumberOfRecords", DbType="Int")] System.Nullable<int> numberOfRecords, [Parameter(Name="NTileGroups", DbType="Int")] System.Nullable<int> nTileGroups, [Parameter(Name="SelectFromTable", DbType="Bit")] System.Nullable<bool> selectFromTable)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), numberOfRecords, nTileGroups, selectFromTable);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="rpt.arachnode_rsp_HyperLinks_MOST_POPULAR_ABSOLUTEURIS_BY_DOMAINS")]
		public int arachnode_rsp_HyperLinks_MOST_POPULAR_ABSOLUTEURIS_BY_DOMAINS([Parameter(Name="NumberOfRecords", DbType="Int")] System.Nullable<int> numberOfRecords, [Parameter(Name="NTileGroups", DbType="Int")] System.Nullable<int> nTileGroups, [Parameter(Name="SelectFromTable", DbType="Bit")] System.Nullable<bool> selectFromTable)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), numberOfRecords, nTileGroups, selectFromTable);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="rpt.arachnode_rsp_HyperLinks_MOST_POPULAR_ABSOLUTEURIS_BY_EXTENSIONS")]
		public int arachnode_rsp_HyperLinks_MOST_POPULAR_ABSOLUTEURIS_BY_EXTENSIONS([Parameter(Name="NumberOfRecords", DbType="Int")] System.Nullable<int> numberOfRecords, [Parameter(Name="NTileGroups", DbType="Int")] System.Nullable<int> nTileGroups, [Parameter(Name="SelectFromTable", DbType="Bit")] System.Nullable<bool> selectFromTable)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), numberOfRecords, nTileGroups, selectFromTable);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="rpt.arachnode_rsp_HyperLinks_MOST_POPULAR_ABSOLUTEURIS_BY_HOSTS")]
		public int arachnode_rsp_HyperLinks_MOST_POPULAR_ABSOLUTEURIS_BY_HOSTS([Parameter(Name="NumberOfRecords", DbType="Int")] System.Nullable<int> numberOfRecords, [Parameter(Name="NTileGroups", DbType="Int")] System.Nullable<int> nTileGroups, [Parameter(Name="SelectFromTable", DbType="Bit")] System.Nullable<bool> selectFromTable)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), numberOfRecords, nTileGroups, selectFromTable);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="rpt.arachnode_rsp_HyperLinks_MOST_POPULAR_ABSOLUTEURIS_BY_SCHEMES")]
		public int arachnode_rsp_HyperLinks_MOST_POPULAR_ABSOLUTEURIS_BY_SCHEMES([Parameter(Name="NumberOfRecords", DbType="Int")] System.Nullable<int> numberOfRecords, [Parameter(Name="NTileGroups", DbType="Int")] System.Nullable<int> nTileGroups, [Parameter(Name="SelectFromTable", DbType="Bit")] System.Nullable<bool> selectFromTable)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), numberOfRecords, nTileGroups, selectFromTable);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="rpt.arachnode_rsp_HyperLinks_MOST_POPULAR_DOMAINS_BY_ABSOLUTEURIS")]
		public int arachnode_rsp_HyperLinks_MOST_POPULAR_DOMAINS_BY_ABSOLUTEURIS([Parameter(Name="NumberOfRecords", DbType="Int")] System.Nullable<int> numberOfRecords, [Parameter(Name="NTileGroups", DbType="Int")] System.Nullable<int> nTileGroups, [Parameter(Name="SelectFromTable", DbType="Bit")] System.Nullable<bool> selectFromTable)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), numberOfRecords, nTileGroups, selectFromTable);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="rpt.arachnode_rsp_HyperLinks_MOST_POPULAR_DOMAINS_BY_DOMAINS")]
		public int arachnode_rsp_HyperLinks_MOST_POPULAR_DOMAINS_BY_DOMAINS([Parameter(Name="NumberOfRecords", DbType="Int")] System.Nullable<int> numberOfRecords, [Parameter(Name="NTileGroups", DbType="Int")] System.Nullable<int> nTileGroups, [Parameter(Name="SelectFromTable", DbType="Bit")] System.Nullable<bool> selectFromTable)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), numberOfRecords, nTileGroups, selectFromTable);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="rpt.arachnode_rsp_HyperLinks_MOST_POPULAR_DOMAINS_BY_EXTENSIONS")]
		public int arachnode_rsp_HyperLinks_MOST_POPULAR_DOMAINS_BY_EXTENSIONS([Parameter(Name="NumberOfRecords", DbType="Int")] System.Nullable<int> numberOfRecords, [Parameter(Name="NTileGroups", DbType="Int")] System.Nullable<int> nTileGroups, [Parameter(Name="SelectFromTable", DbType="Bit")] System.Nullable<bool> selectFromTable)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), numberOfRecords, nTileGroups, selectFromTable);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="rpt.arachnode_rsp_HyperLinks_MOST_POPULAR_DOMAINS_BY_HOSTS")]
		public int arachnode_rsp_HyperLinks_MOST_POPULAR_DOMAINS_BY_HOSTS([Parameter(Name="NumberOfRecords", DbType="Int")] System.Nullable<int> numberOfRecords, [Parameter(Name="NTileGroups", DbType="Int")] System.Nullable<int> nTileGroups, [Parameter(Name="SelectFromTable", DbType="Bit")] System.Nullable<bool> selectFromTable)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), numberOfRecords, nTileGroups, selectFromTable);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="rpt.arachnode_rsp_HyperLinks_MOST_POPULAR_DOMAINS_BY_SCHEMES")]
		public int arachnode_rsp_HyperLinks_MOST_POPULAR_DOMAINS_BY_SCHEMES([Parameter(Name="NumberOfRecords", DbType="Int")] System.Nullable<int> numberOfRecords, [Parameter(Name="NTileGroups", DbType="Int")] System.Nullable<int> nTileGroups, [Parameter(Name="SelectFromTable", DbType="Bit")] System.Nullable<bool> selectFromTable)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), numberOfRecords, nTileGroups, selectFromTable);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="rpt.arachnode_rsp_HyperLinks_MOST_POPULAR_EXTENSIONS_BY_ABSOLUTEURIS")]
		public int arachnode_rsp_HyperLinks_MOST_POPULAR_EXTENSIONS_BY_ABSOLUTEURIS([Parameter(Name="NumberOfRecords", DbType="Int")] System.Nullable<int> numberOfRecords, [Parameter(Name="NTileGroups", DbType="Int")] System.Nullable<int> nTileGroups, [Parameter(Name="SelectFromTable", DbType="Bit")] System.Nullable<bool> selectFromTable)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), numberOfRecords, nTileGroups, selectFromTable);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="rpt.arachnode_rsp_HyperLinks_MOST_POPULAR_EXTENSIONS_BY_DOMAINS")]
		public int arachnode_rsp_HyperLinks_MOST_POPULAR_EXTENSIONS_BY_DOMAINS([Parameter(Name="NumberOfRecords", DbType="Int")] System.Nullable<int> numberOfRecords, [Parameter(Name="NTileGroups", DbType="Int")] System.Nullable<int> nTileGroups, [Parameter(Name="SelectFromTable", DbType="Bit")] System.Nullable<bool> selectFromTable)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), numberOfRecords, nTileGroups, selectFromTable);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="rpt.arachnode_rsp_HyperLinks_MOST_POPULAR_EXTENSIONS_BY_EXTENSIONS")]
		public int arachnode_rsp_HyperLinks_MOST_POPULAR_EXTENSIONS_BY_EXTENSIONS([Parameter(Name="NumberOfRecords", DbType="Int")] System.Nullable<int> numberOfRecords, [Parameter(Name="NTileGroups", DbType="Int")] System.Nullable<int> nTileGroups, [Parameter(Name="SelectFromTable", DbType="Bit")] System.Nullable<bool> selectFromTable)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), numberOfRecords, nTileGroups, selectFromTable);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="rpt.arachnode_rsp_HyperLinks_MOST_POPULAR_EXTENSIONS_BY_HOSTS")]
		public int arachnode_rsp_HyperLinks_MOST_POPULAR_EXTENSIONS_BY_HOSTS([Parameter(Name="NumberOfRecords", DbType="Int")] System.Nullable<int> numberOfRecords, [Parameter(Name="NTileGroups", DbType="Int")] System.Nullable<int> nTileGroups, [Parameter(Name="SelectFromTable", DbType="Bit")] System.Nullable<bool> selectFromTable)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), numberOfRecords, nTileGroups, selectFromTable);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="rpt.arachnode_rsp_HyperLinks_MOST_POPULAR_EXTENSIONS_BY_SCHEMES")]
		public int arachnode_rsp_HyperLinks_MOST_POPULAR_EXTENSIONS_BY_SCHEMES([Parameter(Name="NumberOfRecords", DbType="Int")] System.Nullable<int> numberOfRecords, [Parameter(Name="NTileGroups", DbType="Int")] System.Nullable<int> nTileGroups, [Parameter(Name="SelectFromTable", DbType="Bit")] System.Nullable<bool> selectFromTable)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), numberOfRecords, nTileGroups, selectFromTable);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="rpt.arachnode_rsp_HyperLinks_MOST_POPULAR_HOSTS_BY_ABSOLUTEURIS")]
		public int arachnode_rsp_HyperLinks_MOST_POPULAR_HOSTS_BY_ABSOLUTEURIS([Parameter(Name="NumberOfRecords", DbType="Int")] System.Nullable<int> numberOfRecords, [Parameter(Name="NTileGroups", DbType="Int")] System.Nullable<int> nTileGroups, [Parameter(Name="SelectFromTable", DbType="Bit")] System.Nullable<bool> selectFromTable)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), numberOfRecords, nTileGroups, selectFromTable);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="rpt.arachnode_rsp_HyperLinks_MOST_POPULAR_HOSTS_BY_DOMAINS")]
		public int arachnode_rsp_HyperLinks_MOST_POPULAR_HOSTS_BY_DOMAINS([Parameter(Name="NumberOfRecords", DbType="Int")] System.Nullable<int> numberOfRecords, [Parameter(Name="NTileGroups", DbType="Int")] System.Nullable<int> nTileGroups, [Parameter(Name="SelectFromTable", DbType="Bit")] System.Nullable<bool> selectFromTable)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), numberOfRecords, nTileGroups, selectFromTable);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="rpt.arachnode_rsp_HyperLinks_MOST_POPULAR_HOSTS_BY_EXTENSIONS")]
		public int arachnode_rsp_HyperLinks_MOST_POPULAR_HOSTS_BY_EXTENSIONS([Parameter(Name="NumberOfRecords", DbType="Int")] System.Nullable<int> numberOfRecords, [Parameter(Name="NTileGroups", DbType="Int")] System.Nullable<int> nTileGroups, [Parameter(Name="SelectFromTable", DbType="Bit")] System.Nullable<bool> selectFromTable)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), numberOfRecords, nTileGroups, selectFromTable);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="rpt.arachnode_rsp_HyperLinks_MOST_POPULAR_HOSTS_BY_HOSTS")]
		public int arachnode_rsp_HyperLinks_MOST_POPULAR_HOSTS_BY_HOSTS([Parameter(Name="NumberOfRecords", DbType="Int")] System.Nullable<int> numberOfRecords, [Parameter(Name="NTileGroups", DbType="Int")] System.Nullable<int> nTileGroups, [Parameter(Name="SelectFromTable", DbType="Bit")] System.Nullable<bool> selectFromTable)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), numberOfRecords, nTileGroups, selectFromTable);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="rpt.arachnode_rsp_HyperLinks_MOST_POPULAR_HOSTS_BY_SCHEMES")]
		public int arachnode_rsp_HyperLinks_MOST_POPULAR_HOSTS_BY_SCHEMES([Parameter(Name="NumberOfRecords", DbType="Int")] System.Nullable<int> numberOfRecords, [Parameter(Name="NTileGroups", DbType="Int")] System.Nullable<int> nTileGroups, [Parameter(Name="SelectFromTable", DbType="Bit")] System.Nullable<bool> selectFromTable)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), numberOfRecords, nTileGroups, selectFromTable);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="rpt.arachnode_rsp_HyperLinks_MOST_POPULAR_SCHEMES_BY_ABSOLUTEURIS")]
		public int arachnode_rsp_HyperLinks_MOST_POPULAR_SCHEMES_BY_ABSOLUTEURIS([Parameter(Name="NumberOfRecords", DbType="Int")] System.Nullable<int> numberOfRecords, [Parameter(Name="NTileGroups", DbType="Int")] System.Nullable<int> nTileGroups, [Parameter(Name="SelectFromTable", DbType="Bit")] System.Nullable<bool> selectFromTable)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), numberOfRecords, nTileGroups, selectFromTable);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="rpt.arachnode_rsp_HyperLinks_MOST_POPULAR_SCHEMES_BY_DOMAINS")]
		public int arachnode_rsp_HyperLinks_MOST_POPULAR_SCHEMES_BY_DOMAINS([Parameter(Name="NumberOfRecords", DbType="Int")] System.Nullable<int> numberOfRecords, [Parameter(Name="NTileGroups", DbType="Int")] System.Nullable<int> nTileGroups, [Parameter(Name="SelectFromTable", DbType="Bit")] System.Nullable<bool> selectFromTable)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), numberOfRecords, nTileGroups, selectFromTable);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="rpt.arachnode_rsp_HyperLinks_MOST_POPULAR_SCHEMES_BY_EXTENSIONS")]
		public int arachnode_rsp_HyperLinks_MOST_POPULAR_SCHEMES_BY_EXTENSIONS([Parameter(Name="NumberOfRecords", DbType="Int")] System.Nullable<int> numberOfRecords, [Parameter(Name="NTileGroups", DbType="Int")] System.Nullable<int> nTileGroups, [Parameter(Name="SelectFromTable", DbType="Bit")] System.Nullable<bool> selectFromTable)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), numberOfRecords, nTileGroups, selectFromTable);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="rpt.arachnode_rsp_HyperLinks_MOST_POPULAR_SCHEMES_BY_HOSTS")]
		public int arachnode_rsp_HyperLinks_MOST_POPULAR_SCHEMES_BY_HOSTS([Parameter(Name="NumberOfRecords", DbType="Int")] System.Nullable<int> numberOfRecords, [Parameter(Name="NTileGroups", DbType="Int")] System.Nullable<int> nTileGroups, [Parameter(Name="SelectFromTable", DbType="Bit")] System.Nullable<bool> selectFromTable)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), numberOfRecords, nTileGroups, selectFromTable);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="rpt.arachnode_rsp_HyperLinks_MOST_POPULAR_SCHEMES_BY_SCHEMES")]
		public int arachnode_rsp_HyperLinks_MOST_POPULAR_SCHEMES_BY_SCHEMES([Parameter(Name="NumberOfRecords", DbType="Int")] System.Nullable<int> numberOfRecords, [Parameter(Name="NTileGroups", DbType="Int")] System.Nullable<int> nTileGroups, [Parameter(Name="SelectFromTable", DbType="Bit")] System.Nullable<bool> selectFromTable)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), numberOfRecords, nTileGroups, selectFromTable);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="rpt.arachnode_rsp_Images_COUNT_BY_ABSOLUTEURI")]
		public ISingleResult<arachnode_rsp_Images_COUNT_BY_ABSOLUTEURIResult> arachnode_rsp_Images_COUNT_BY_ABSOLUTEURI([Parameter(Name="NumberOfRecords", DbType="Int")] System.Nullable<int> numberOfRecords, [Parameter(Name="NTileGroups", DbType="Int")] System.Nullable<int> nTileGroups, [Parameter(Name="SelectFromTable", DbType="Bit")] System.Nullable<bool> selectFromTable)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), numberOfRecords, nTileGroups, selectFromTable);
			return ((ISingleResult<arachnode_rsp_Images_COUNT_BY_ABSOLUTEURIResult>)(result.ReturnValue));
		}
		
		[Function(Name="rpt.arachnode_rsp_WebPages_Schemes_Discoveries_INSERT")]
		public int arachnode_rsp_WebPages_Schemes_Discoveries_INSERT()
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="rpt.arachnode_rsp_Images_COUNT_BY_DOMAIN")]
		public ISingleResult<arachnode_rsp_Images_COUNT_BY_DOMAINResult> arachnode_rsp_Images_COUNT_BY_DOMAIN([Parameter(Name="NumberOfRecords", DbType="Int")] System.Nullable<int> numberOfRecords, [Parameter(Name="NTileGroups", DbType="Int")] System.Nullable<int> nTileGroups, [Parameter(Name="SelectFromTable", DbType="Bit")] System.Nullable<bool> selectFromTable)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), numberOfRecords, nTileGroups, selectFromTable);
			return ((ISingleResult<arachnode_rsp_Images_COUNT_BY_DOMAINResult>)(result.ReturnValue));
		}
		
		[Function(Name="rpt.arachnode_rsp_Images_COUNT_BY_EXTENSION")]
		public ISingleResult<arachnode_rsp_Images_COUNT_BY_EXTENSIONResult> arachnode_rsp_Images_COUNT_BY_EXTENSION([Parameter(Name="NumberOfRecords", DbType="Int")] System.Nullable<int> numberOfRecords, [Parameter(Name="NTileGroups", DbType="Int")] System.Nullable<int> nTileGroups, [Parameter(Name="SelectFromTable", DbType="Bit")] System.Nullable<bool> selectFromTable)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), numberOfRecords, nTileGroups, selectFromTable);
			return ((ISingleResult<arachnode_rsp_Images_COUNT_BY_EXTENSIONResult>)(result.ReturnValue));
		}
		
		[Function(Name="rpt.arachnode_rsp_Images_COUNT_BY_FULLTEXTINDEXTYPE")]
		public ISingleResult<arachnode_rsp_Images_COUNT_BY_FULLTEXTINDEXTYPEResult> arachnode_rsp_Images_COUNT_BY_FULLTEXTINDEXTYPE([Parameter(Name="NumberOfRecords", DbType="Int")] System.Nullable<int> numberOfRecords, [Parameter(Name="NTileGroups", DbType="Int")] System.Nullable<int> nTileGroups, [Parameter(Name="SelectFromTable", DbType="Bit")] System.Nullable<bool> selectFromTable)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), numberOfRecords, nTileGroups, selectFromTable);
			return ((ISingleResult<arachnode_rsp_Images_COUNT_BY_FULLTEXTINDEXTYPEResult>)(result.ReturnValue));
		}
		
		[Function(Name="rpt.arachnode_rsp_Images_COUNT_BY_HOST")]
		public ISingleResult<arachnode_rsp_Images_COUNT_BY_HOSTResult> arachnode_rsp_Images_COUNT_BY_HOST([Parameter(Name="NumberOfRecords", DbType="Int")] System.Nullable<int> numberOfRecords, [Parameter(Name="NTileGroups", DbType="Int")] System.Nullable<int> nTileGroups, [Parameter(Name="SelectFromTable", DbType="Bit")] System.Nullable<bool> selectFromTable)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), numberOfRecords, nTileGroups, selectFromTable);
			return ((ISingleResult<arachnode_rsp_Images_COUNT_BY_HOSTResult>)(result.ReturnValue));
		}
		
		[Function(Name="rpt.arachnode_rsp_Images_COUNT_BY_SCHEME")]
		public ISingleResult<arachnode_rsp_Images_COUNT_BY_SCHEMEResult> arachnode_rsp_Images_COUNT_BY_SCHEME([Parameter(Name="NumberOfRecords", DbType="Int")] System.Nullable<int> numberOfRecords, [Parameter(Name="NTileGroups", DbType="Int")] System.Nullable<int> nTileGroups, [Parameter(Name="SelectFromTable", DbType="Bit")] System.Nullable<bool> selectFromTable)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), numberOfRecords, nTileGroups, selectFromTable);
			return ((ISingleResult<arachnode_rsp_Images_COUNT_BY_SCHEMEResult>)(result.ReturnValue));
		}
		
		[Function(Name="rpt.arachnode_rsp_Images_Hosts_Discoveries_INSERT")]
		public int arachnode_rsp_Images_Hosts_Discoveries_INSERT([Parameter(Name="UpdateExisting", DbType="Bit")] System.Nullable<bool> updateExisting)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), updateExisting);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="rpt.arachnode_rsp_Images_MOST_POPULAR_ABSOLUTEURIS_BY_ABSOLUTEURIS")]
		public int arachnode_rsp_Images_MOST_POPULAR_ABSOLUTEURIS_BY_ABSOLUTEURIS([Parameter(Name="NumberOfRecords", DbType="Int")] System.Nullable<int> numberOfRecords, [Parameter(Name="NTileGroups", DbType="Int")] System.Nullable<int> nTileGroups, [Parameter(Name="SelectFromTable", DbType="Bit")] System.Nullable<bool> selectFromTable)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), numberOfRecords, nTileGroups, selectFromTable);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="rpt.arachnode_rsp_Images_MOST_POPULAR_ABSOLUTEURIS_BY_DOMAINS")]
		public int arachnode_rsp_Images_MOST_POPULAR_ABSOLUTEURIS_BY_DOMAINS([Parameter(Name="NumberOfRecords", DbType="Int")] System.Nullable<int> numberOfRecords, [Parameter(Name="NTileGroups", DbType="Int")] System.Nullable<int> nTileGroups, [Parameter(Name="SelectFromTable", DbType="Bit")] System.Nullable<bool> selectFromTable)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), numberOfRecords, nTileGroups, selectFromTable);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="rpt.arachnode_rsp_Images_MOST_POPULAR_ABSOLUTEURIS_BY_EXTENSIONS")]
		public int arachnode_rsp_Images_MOST_POPULAR_ABSOLUTEURIS_BY_EXTENSIONS([Parameter(Name="NumberOfRecords", DbType="Int")] System.Nullable<int> numberOfRecords, [Parameter(Name="NTileGroups", DbType="Int")] System.Nullable<int> nTileGroups, [Parameter(Name="SelectFromTable", DbType="Bit")] System.Nullable<bool> selectFromTable)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), numberOfRecords, nTileGroups, selectFromTable);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="rpt.arachnode_rsp_Images_MOST_POPULAR_ABSOLUTEURIS_BY_HOSTS")]
		public int arachnode_rsp_Images_MOST_POPULAR_ABSOLUTEURIS_BY_HOSTS([Parameter(Name="NumberOfRecords", DbType="Int")] System.Nullable<int> numberOfRecords, [Parameter(Name="NTileGroups", DbType="Int")] System.Nullable<int> nTileGroups, [Parameter(Name="SelectFromTable", DbType="Bit")] System.Nullable<bool> selectFromTable)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), numberOfRecords, nTileGroups, selectFromTable);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="rpt.arachnode_rsp_Images_MOST_POPULAR_ABSOLUTEURIS_BY_SCHEMES")]
		public int arachnode_rsp_Images_MOST_POPULAR_ABSOLUTEURIS_BY_SCHEMES([Parameter(Name="NumberOfRecords", DbType="Int")] System.Nullable<int> numberOfRecords, [Parameter(Name="NTileGroups", DbType="Int")] System.Nullable<int> nTileGroups, [Parameter(Name="SelectFromTable", DbType="Bit")] System.Nullable<bool> selectFromTable)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), numberOfRecords, nTileGroups, selectFromTable);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="rpt.arachnode_rsp_Images_MOST_POPULAR_DOMAINS_BY_ABSOLUTEURIS")]
		public int arachnode_rsp_Images_MOST_POPULAR_DOMAINS_BY_ABSOLUTEURIS([Parameter(Name="NumberOfRecords", DbType="Int")] System.Nullable<int> numberOfRecords, [Parameter(Name="NTileGroups", DbType="Int")] System.Nullable<int> nTileGroups, [Parameter(Name="SelectFromTable", DbType="Bit")] System.Nullable<bool> selectFromTable)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), numberOfRecords, nTileGroups, selectFromTable);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="rpt.arachnode_rsp_Images_MOST_POPULAR_DOMAINS_BY_DOMAINS")]
		public int arachnode_rsp_Images_MOST_POPULAR_DOMAINS_BY_DOMAINS([Parameter(Name="NumberOfRecords", DbType="Int")] System.Nullable<int> numberOfRecords, [Parameter(Name="NTileGroups", DbType="Int")] System.Nullable<int> nTileGroups, [Parameter(Name="SelectFromTable", DbType="Bit")] System.Nullable<bool> selectFromTable)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), numberOfRecords, nTileGroups, selectFromTable);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="rpt.arachnode_rsp_Images_MOST_POPULAR_DOMAINS_BY_EXTENSIONS")]
		public int arachnode_rsp_Images_MOST_POPULAR_DOMAINS_BY_EXTENSIONS([Parameter(Name="NumberOfRecords", DbType="Int")] System.Nullable<int> numberOfRecords, [Parameter(Name="NTileGroups", DbType="Int")] System.Nullable<int> nTileGroups, [Parameter(Name="SelectFromTable", DbType="Bit")] System.Nullable<bool> selectFromTable)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), numberOfRecords, nTileGroups, selectFromTable);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="rpt.arachnode_rsp_Images_MOST_POPULAR_DOMAINS_BY_HOSTS")]
		public int arachnode_rsp_Images_MOST_POPULAR_DOMAINS_BY_HOSTS([Parameter(Name="NumberOfRecords", DbType="Int")] System.Nullable<int> numberOfRecords, [Parameter(Name="NTileGroups", DbType="Int")] System.Nullable<int> nTileGroups, [Parameter(Name="SelectFromTable", DbType="Bit")] System.Nullable<bool> selectFromTable)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), numberOfRecords, nTileGroups, selectFromTable);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="rpt.arachnode_rsp_Images_MOST_POPULAR_DOMAINS_BY_SCHEMES")]
		public int arachnode_rsp_Images_MOST_POPULAR_DOMAINS_BY_SCHEMES([Parameter(Name="NumberOfRecords", DbType="Int")] System.Nullable<int> numberOfRecords, [Parameter(Name="NTileGroups", DbType="Int")] System.Nullable<int> nTileGroups, [Parameter(Name="SelectFromTable", DbType="Bit")] System.Nullable<bool> selectFromTable)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), numberOfRecords, nTileGroups, selectFromTable);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="rpt.arachnode_rsp_Images_MOST_POPULAR_EXTENSIONS_BY_ABSOLUTEURIS")]
		public int arachnode_rsp_Images_MOST_POPULAR_EXTENSIONS_BY_ABSOLUTEURIS([Parameter(Name="NumberOfRecords", DbType="Int")] System.Nullable<int> numberOfRecords, [Parameter(Name="NTileGroups", DbType="Int")] System.Nullable<int> nTileGroups, [Parameter(Name="SelectFromTable", DbType="Bit")] System.Nullable<bool> selectFromTable)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), numberOfRecords, nTileGroups, selectFromTable);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="rpt.arachnode_rsp_Images_MOST_POPULAR_EXTENSIONS_BY_DOMAINS")]
		public int arachnode_rsp_Images_MOST_POPULAR_EXTENSIONS_BY_DOMAINS([Parameter(Name="NumberOfRecords", DbType="Int")] System.Nullable<int> numberOfRecords, [Parameter(Name="NTileGroups", DbType="Int")] System.Nullable<int> nTileGroups, [Parameter(Name="SelectFromTable", DbType="Bit")] System.Nullable<bool> selectFromTable)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), numberOfRecords, nTileGroups, selectFromTable);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="rpt.arachnode_rsp_Images_MOST_POPULAR_EXTENSIONS_BY_EXTENSIONS")]
		public int arachnode_rsp_Images_MOST_POPULAR_EXTENSIONS_BY_EXTENSIONS([Parameter(Name="NumberOfRecords", DbType="Int")] System.Nullable<int> numberOfRecords, [Parameter(Name="NTileGroups", DbType="Int")] System.Nullable<int> nTileGroups, [Parameter(Name="SelectFromTable", DbType="Bit")] System.Nullable<bool> selectFromTable)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), numberOfRecords, nTileGroups, selectFromTable);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="rpt.arachnode_rsp_Images_MOST_POPULAR_EXTENSIONS_BY_HOSTS")]
		public int arachnode_rsp_Images_MOST_POPULAR_EXTENSIONS_BY_HOSTS([Parameter(Name="NumberOfRecords", DbType="Int")] System.Nullable<int> numberOfRecords, [Parameter(Name="NTileGroups", DbType="Int")] System.Nullable<int> nTileGroups, [Parameter(Name="SelectFromTable", DbType="Bit")] System.Nullable<bool> selectFromTable)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), numberOfRecords, nTileGroups, selectFromTable);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="rpt.arachnode_rsp_Images_MOST_POPULAR_EXTENSIONS_BY_SCHEMES")]
		public int arachnode_rsp_Images_MOST_POPULAR_EXTENSIONS_BY_SCHEMES([Parameter(Name="NumberOfRecords", DbType="Int")] System.Nullable<int> numberOfRecords, [Parameter(Name="NTileGroups", DbType="Int")] System.Nullable<int> nTileGroups, [Parameter(Name="SelectFromTable", DbType="Bit")] System.Nullable<bool> selectFromTable)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), numberOfRecords, nTileGroups, selectFromTable);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="rpt.arachnode_rsp_Images_MOST_POPULAR_HOSTS_BY_ABSOLUTEURIS")]
		public int arachnode_rsp_Images_MOST_POPULAR_HOSTS_BY_ABSOLUTEURIS([Parameter(Name="NumberOfRecords", DbType="Int")] System.Nullable<int> numberOfRecords, [Parameter(Name="NTileGroups", DbType="Int")] System.Nullable<int> nTileGroups, [Parameter(Name="SelectFromTable", DbType="Bit")] System.Nullable<bool> selectFromTable)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), numberOfRecords, nTileGroups, selectFromTable);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="rpt.arachnode_rsp_Images_MOST_POPULAR_HOSTS_BY_DOMAINS")]
		public int arachnode_rsp_Images_MOST_POPULAR_HOSTS_BY_DOMAINS([Parameter(Name="NumberOfRecords", DbType="Int")] System.Nullable<int> numberOfRecords, [Parameter(Name="NTileGroups", DbType="Int")] System.Nullable<int> nTileGroups, [Parameter(Name="SelectFromTable", DbType="Bit")] System.Nullable<bool> selectFromTable)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), numberOfRecords, nTileGroups, selectFromTable);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="rpt.arachnode_rsp_Images_MOST_POPULAR_HOSTS_BY_EXTENSIONS")]
		public int arachnode_rsp_Images_MOST_POPULAR_HOSTS_BY_EXTENSIONS([Parameter(Name="NumberOfRecords", DbType="Int")] System.Nullable<int> numberOfRecords, [Parameter(Name="NTileGroups", DbType="Int")] System.Nullable<int> nTileGroups, [Parameter(Name="SelectFromTable", DbType="Bit")] System.Nullable<bool> selectFromTable)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), numberOfRecords, nTileGroups, selectFromTable);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="rpt.arachnode_rsp_Images_MOST_POPULAR_HOSTS_BY_HOSTS")]
		public int arachnode_rsp_Images_MOST_POPULAR_HOSTS_BY_HOSTS([Parameter(Name="NumberOfRecords", DbType="Int")] System.Nullable<int> numberOfRecords, [Parameter(Name="NTileGroups", DbType="Int")] System.Nullable<int> nTileGroups, [Parameter(Name="SelectFromTable", DbType="Bit")] System.Nullable<bool> selectFromTable)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), numberOfRecords, nTileGroups, selectFromTable);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="rpt.arachnode_rsp_Images_MOST_POPULAR_HOSTS_BY_SCHEMES")]
		public int arachnode_rsp_Images_MOST_POPULAR_HOSTS_BY_SCHEMES([Parameter(Name="NumberOfRecords", DbType="Int")] System.Nullable<int> numberOfRecords, [Parameter(Name="NTileGroups", DbType="Int")] System.Nullable<int> nTileGroups, [Parameter(Name="SelectFromTable", DbType="Bit")] System.Nullable<bool> selectFromTable)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), numberOfRecords, nTileGroups, selectFromTable);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="rpt.arachnode_rsp_Images_MOST_POPULAR_SCHEMES_BY_ABSOLUTEURIS")]
		public int arachnode_rsp_Images_MOST_POPULAR_SCHEMES_BY_ABSOLUTEURIS([Parameter(Name="NumberOfRecords", DbType="Int")] System.Nullable<int> numberOfRecords, [Parameter(Name="NTileGroups", DbType="Int")] System.Nullable<int> nTileGroups, [Parameter(Name="SelectFromTable", DbType="Bit")] System.Nullable<bool> selectFromTable)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), numberOfRecords, nTileGroups, selectFromTable);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="rpt.arachnode_rsp_Images_MOST_POPULAR_SCHEMES_BY_DOMAINS")]
		public int arachnode_rsp_Images_MOST_POPULAR_SCHEMES_BY_DOMAINS([Parameter(Name="NumberOfRecords", DbType="Int")] System.Nullable<int> numberOfRecords, [Parameter(Name="NTileGroups", DbType="Int")] System.Nullable<int> nTileGroups, [Parameter(Name="SelectFromTable", DbType="Bit")] System.Nullable<bool> selectFromTable)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), numberOfRecords, nTileGroups, selectFromTable);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="rpt.arachnode_rsp_Images_MOST_POPULAR_SCHEMES_BY_EXTENSIONS")]
		public int arachnode_rsp_Images_MOST_POPULAR_SCHEMES_BY_EXTENSIONS([Parameter(Name="NumberOfRecords", DbType="Int")] System.Nullable<int> numberOfRecords, [Parameter(Name="NTileGroups", DbType="Int")] System.Nullable<int> nTileGroups, [Parameter(Name="SelectFromTable", DbType="Bit")] System.Nullable<bool> selectFromTable)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), numberOfRecords, nTileGroups, selectFromTable);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="rpt.arachnode_rsp_Images_MOST_POPULAR_SCHEMES_BY_HOSTS")]
		public int arachnode_rsp_Images_MOST_POPULAR_SCHEMES_BY_HOSTS([Parameter(Name="NumberOfRecords", DbType="Int")] System.Nullable<int> numberOfRecords, [Parameter(Name="NTileGroups", DbType="Int")] System.Nullable<int> nTileGroups, [Parameter(Name="SelectFromTable", DbType="Bit")] System.Nullable<bool> selectFromTable)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), numberOfRecords, nTileGroups, selectFromTable);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="rpt.arachnode_rsp_Images_MOST_POPULAR_SCHEMES_BY_SCHEMES")]
		public int arachnode_rsp_Images_MOST_POPULAR_SCHEMES_BY_SCHEMES([Parameter(Name="NumberOfRecords", DbType="Int")] System.Nullable<int> numberOfRecords, [Parameter(Name="NTileGroups", DbType="Int")] System.Nullable<int> nTileGroups, [Parameter(Name="SelectFromTable", DbType="Bit")] System.Nullable<bool> selectFromTable)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), numberOfRecords, nTileGroups, selectFromTable);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="rpt.arachnode_rsp_Images_Schemes_Discoveries_INSERT")]
		public int arachnode_rsp_Images_Schemes_Discoveries_INSERT([Parameter(Name="UpdateExisting", DbType="Bit")] System.Nullable<bool> updateExisting)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), updateExisting);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="rpt.arachnode_rsp_Schemes_UPDATE")]
		public int arachnode_rsp_Schemes_UPDATE([Parameter(Name="UpdateExisting", DbType="Bit")] System.Nullable<bool> updateExisting)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), updateExisting);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="rpt.arachnode_rsp_UpdateAbsoluteUriClassification")]
		public int arachnode_rsp_UpdateAbsoluteUriClassification()
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="rpt.arachnode_rsp_WebPages_COUNT_BY_DOMAIN")]
		public ISingleResult<arachnode_rsp_WebPages_COUNT_BY_DOMAINResult> arachnode_rsp_WebPages_COUNT_BY_DOMAIN([Parameter(Name="NumberOfRecords", DbType="Int")] System.Nullable<int> numberOfRecords, [Parameter(Name="NTileGroups", DbType="Int")] System.Nullable<int> nTileGroups, [Parameter(Name="SelectFromTable", DbType="Bit")] System.Nullable<bool> selectFromTable)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), numberOfRecords, nTileGroups, selectFromTable);
			return ((ISingleResult<arachnode_rsp_WebPages_COUNT_BY_DOMAINResult>)(result.ReturnValue));
		}
		
		[Function(Name="rpt.arachnode_rsp_WebPages_COUNT_BY_EXTENSION")]
		public ISingleResult<arachnode_rsp_WebPages_COUNT_BY_EXTENSIONResult> arachnode_rsp_WebPages_COUNT_BY_EXTENSION([Parameter(Name="NumberOfRecords", DbType="Int")] System.Nullable<int> numberOfRecords, [Parameter(Name="NTileGroups", DbType="Int")] System.Nullable<int> nTileGroups, [Parameter(Name="SelectFromTable", DbType="Bit")] System.Nullable<bool> selectFromTable)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), numberOfRecords, nTileGroups, selectFromTable);
			return ((ISingleResult<arachnode_rsp_WebPages_COUNT_BY_EXTENSIONResult>)(result.ReturnValue));
		}
		
		[Function(Name="rpt.arachnode_rsp_WebPages_COUNT_BY_FULLTEXTINDEXTYPE")]
		public ISingleResult<arachnode_rsp_WebPages_COUNT_BY_FULLTEXTINDEXTYPEResult> arachnode_rsp_WebPages_COUNT_BY_FULLTEXTINDEXTYPE([Parameter(Name="NumberOfRecords", DbType="Int")] System.Nullable<int> numberOfRecords, [Parameter(Name="NTileGroups", DbType="Int")] System.Nullable<int> nTileGroups, [Parameter(Name="SelectFromTable", DbType="Bit")] System.Nullable<bool> selectFromTable)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), numberOfRecords, nTileGroups, selectFromTable);
			return ((ISingleResult<arachnode_rsp_WebPages_COUNT_BY_FULLTEXTINDEXTYPEResult>)(result.ReturnValue));
		}
		
		[Function(Name="rpt.arachnode_rsp_WebPages_COUNT_BY_HOST")]
		public ISingleResult<arachnode_rsp_WebPages_COUNT_BY_HOSTResult> arachnode_rsp_WebPages_COUNT_BY_HOST([Parameter(Name="NumberOfRecords", DbType="Int")] System.Nullable<int> numberOfRecords, [Parameter(Name="NTileGroups", DbType="Int")] System.Nullable<int> nTileGroups, [Parameter(Name="SelectFromTable", DbType="Bit")] System.Nullable<bool> selectFromTable)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), numberOfRecords, nTileGroups, selectFromTable);
			return ((ISingleResult<arachnode_rsp_WebPages_COUNT_BY_HOSTResult>)(result.ReturnValue));
		}
		
		[Function(Name="rpt.arachnode_rsp_WebPages_COUNT_BY_SCHEME")]
		public ISingleResult<arachnode_rsp_WebPages_COUNT_BY_SCHEMEResult> arachnode_rsp_WebPages_COUNT_BY_SCHEME([Parameter(Name="NumberOfRecords", DbType="Int")] System.Nullable<int> numberOfRecords, [Parameter(Name="NTileGroups", DbType="Int")] System.Nullable<int> nTileGroups, [Parameter(Name="SelectFromTable", DbType="Bit")] System.Nullable<bool> selectFromTable)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), numberOfRecords, nTileGroups, selectFromTable);
			return ((ISingleResult<arachnode_rsp_WebPages_COUNT_BY_SCHEMEResult>)(result.ReturnValue));
		}
		
		[Function(Name="rpt.arachnode_rsp_WebPages_Hosts_Discoveries_INSERT")]
		public int arachnode_rsp_WebPages_Hosts_Discoveries_INSERT()
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="rpt.arachnode_rsp_UpdateReporting")]
		public int arachnode_rsp_UpdateReporting([Parameter(Name="NumberOfRecords", DbType="Int")] System.Nullable<int> numberOfRecords, [Parameter(Name="NTileGroups", DbType="Int")] System.Nullable<int> nTileGroups)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), numberOfRecords, nTileGroups);
			return ((int)(result.ReturnValue));
		}
	}
	
	[Table(Name="rpt.DisallowedAbsoluteUris_COUNT_BY_ABSOLUTEURI")]
	public partial class DisallowedAbsoluteUris_COUNT_BY_ABSOLUTEURI : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RowNumber;
		
		private long _DisallowedAbsoluteUriID;
		
		private int _Count;
		
		private int _Rank;
		
		private int _DenseRank;
		
		private byte _NTile;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRowNumberChanging(int value);
    partial void OnRowNumberChanged();
    partial void OnDisallowedAbsoluteUriIDChanging(long value);
    partial void OnDisallowedAbsoluteUriIDChanged();
    partial void OnCountChanging(int value);
    partial void OnCountChanged();
    partial void OnRankChanging(int value);
    partial void OnRankChanged();
    partial void OnDenseRankChanging(int value);
    partial void OnDenseRankChanged();
    partial void OnNTileChanging(byte value);
    partial void OnNTileChanged();
    #endregion
		
		public DisallowedAbsoluteUris_COUNT_BY_ABSOLUTEURI()
		{
			OnCreated();
		}
		
		[Column(Storage="_RowNumber", DbType="Int NOT NULL")]
		public int RowNumber
		{
			get
			{
				return this._RowNumber;
			}
			set
			{
				if ((this._RowNumber != value))
				{
					this.OnRowNumberChanging(value);
					this.SendPropertyChanging();
					this._RowNumber = value;
					this.SendPropertyChanged("RowNumber");
					this.OnRowNumberChanged();
				}
			}
		}
		
		[Column(Storage="_DisallowedAbsoluteUriID", DbType="BigInt NOT NULL", IsPrimaryKey=true)]
		public long DisallowedAbsoluteUriID
		{
			get
			{
				return this._DisallowedAbsoluteUriID;
			}
			set
			{
				if ((this._DisallowedAbsoluteUriID != value))
				{
					this.OnDisallowedAbsoluteUriIDChanging(value);
					this.SendPropertyChanging();
					this._DisallowedAbsoluteUriID = value;
					this.SendPropertyChanged("DisallowedAbsoluteUriID");
					this.OnDisallowedAbsoluteUriIDChanged();
				}
			}
		}
		
		[Column(Storage="_Count", DbType="Int NOT NULL")]
		public int Count
		{
			get
			{
				return this._Count;
			}
			set
			{
				if ((this._Count != value))
				{
					this.OnCountChanging(value);
					this.SendPropertyChanging();
					this._Count = value;
					this.SendPropertyChanged("Count");
					this.OnCountChanged();
				}
			}
		}
		
		[Column(Storage="_Rank", DbType="Int NOT NULL")]
		public int Rank
		{
			get
			{
				return this._Rank;
			}
			set
			{
				if ((this._Rank != value))
				{
					this.OnRankChanging(value);
					this.SendPropertyChanging();
					this._Rank = value;
					this.SendPropertyChanged("Rank");
					this.OnRankChanged();
				}
			}
		}
		
		[Column(Storage="_DenseRank", DbType="Int NOT NULL")]
		public int DenseRank
		{
			get
			{
				return this._DenseRank;
			}
			set
			{
				if ((this._DenseRank != value))
				{
					this.OnDenseRankChanging(value);
					this.SendPropertyChanging();
					this._DenseRank = value;
					this.SendPropertyChanged("DenseRank");
					this.OnDenseRankChanged();
				}
			}
		}
		
		[Column(Storage="_NTile", DbType="TinyInt NOT NULL")]
		public byte NTile
		{
			get
			{
				return this._NTile;
			}
			set
			{
				if ((this._NTile != value))
				{
					this.OnNTileChanging(value);
					this.SendPropertyChanging();
					this._NTile = value;
					this.SendPropertyChanged("NTile");
					this.OnNTileChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="rpt.DisallowedAbsoluteUris_MOST_POPULAR_SCHEMES_BY_SCHEMES")]
	public partial class DisallowedAbsoluteUris_MOST_POPULAR_SCHEMES_BY_SCHEME : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RowNumber;
		
		private System.Nullable<System.DateTime> _InitiallyDiscovered;
		
		private System.DateTime _LastDiscovered;
		
		private int _SchemeID;
		
		private int _Count;
		
		private System.Nullable<short> _DaysSinceInitiallyDiscovered;
		
		private short _DaysSinceLastDiscovered;
		
		private System.Nullable<double> _Strength;
		
		private int _Rank;
		
		private int _DenseRank;
		
		private short _NTile;
		
		private EntityRef<Scheme> _Scheme;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRowNumberChanging(int value);
    partial void OnRowNumberChanged();
    partial void OnInitiallyDiscoveredChanging(System.Nullable<System.DateTime> value);
    partial void OnInitiallyDiscoveredChanged();
    partial void OnLastDiscoveredChanging(System.DateTime value);
    partial void OnLastDiscoveredChanged();
    partial void OnSchemeIDChanging(int value);
    partial void OnSchemeIDChanged();
    partial void OnCountChanging(int value);
    partial void OnCountChanged();
    partial void OnDaysSinceInitiallyDiscoveredChanging(System.Nullable<short> value);
    partial void OnDaysSinceInitiallyDiscoveredChanged();
    partial void OnDaysSinceLastDiscoveredChanging(short value);
    partial void OnDaysSinceLastDiscoveredChanged();
    partial void OnStrengthChanging(System.Nullable<double> value);
    partial void OnStrengthChanged();
    partial void OnRankChanging(int value);
    partial void OnRankChanged();
    partial void OnDenseRankChanging(int value);
    partial void OnDenseRankChanged();
    partial void OnNTileChanging(short value);
    partial void OnNTileChanged();
    #endregion
		
		public DisallowedAbsoluteUris_MOST_POPULAR_SCHEMES_BY_SCHEME()
		{
			this._Scheme = default(EntityRef<Scheme>);
			OnCreated();
		}
		
		[Column(Storage="_RowNumber", DbType="Int NOT NULL")]
		public int RowNumber
		{
			get
			{
				return this._RowNumber;
			}
			set
			{
				if ((this._RowNumber != value))
				{
					this.OnRowNumberChanging(value);
					this.SendPropertyChanging();
					this._RowNumber = value;
					this.SendPropertyChanged("RowNumber");
					this.OnRowNumberChanged();
				}
			}
		}
		
		[Column(Storage="_InitiallyDiscovered", DbType="DateTime")]
		public System.Nullable<System.DateTime> InitiallyDiscovered
		{
			get
			{
				return this._InitiallyDiscovered;
			}
			set
			{
				if ((this._InitiallyDiscovered != value))
				{
					this.OnInitiallyDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._InitiallyDiscovered = value;
					this.SendPropertyChanged("InitiallyDiscovered");
					this.OnInitiallyDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_LastDiscovered", DbType="DateTime NOT NULL")]
		public System.DateTime LastDiscovered
		{
			get
			{
				return this._LastDiscovered;
			}
			set
			{
				if ((this._LastDiscovered != value))
				{
					this.OnLastDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._LastDiscovered = value;
					this.SendPropertyChanged("LastDiscovered");
					this.OnLastDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_SchemeID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int SchemeID
		{
			get
			{
				return this._SchemeID;
			}
			set
			{
				if ((this._SchemeID != value))
				{
					if (this._Scheme.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSchemeIDChanging(value);
					this.SendPropertyChanging();
					this._SchemeID = value;
					this.SendPropertyChanged("SchemeID");
					this.OnSchemeIDChanged();
				}
			}
		}
		
		[Column(Storage="_Count", DbType="Int NOT NULL")]
		public int Count
		{
			get
			{
				return this._Count;
			}
			set
			{
				if ((this._Count != value))
				{
					this.OnCountChanging(value);
					this.SendPropertyChanging();
					this._Count = value;
					this.SendPropertyChanged("Count");
					this.OnCountChanged();
				}
			}
		}
		
		[Column(Storage="_DaysSinceInitiallyDiscovered", DbType="SmallInt")]
		public System.Nullable<short> DaysSinceInitiallyDiscovered
		{
			get
			{
				return this._DaysSinceInitiallyDiscovered;
			}
			set
			{
				if ((this._DaysSinceInitiallyDiscovered != value))
				{
					this.OnDaysSinceInitiallyDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._DaysSinceInitiallyDiscovered = value;
					this.SendPropertyChanged("DaysSinceInitiallyDiscovered");
					this.OnDaysSinceInitiallyDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_DaysSinceLastDiscovered", DbType="SmallInt NOT NULL")]
		public short DaysSinceLastDiscovered
		{
			get
			{
				return this._DaysSinceLastDiscovered;
			}
			set
			{
				if ((this._DaysSinceLastDiscovered != value))
				{
					this.OnDaysSinceLastDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._DaysSinceLastDiscovered = value;
					this.SendPropertyChanged("DaysSinceLastDiscovered");
					this.OnDaysSinceLastDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_Strength", DbType="Float")]
		public System.Nullable<double> Strength
		{
			get
			{
				return this._Strength;
			}
			set
			{
				if ((this._Strength != value))
				{
					this.OnStrengthChanging(value);
					this.SendPropertyChanging();
					this._Strength = value;
					this.SendPropertyChanged("Strength");
					this.OnStrengthChanged();
				}
			}
		}
		
		[Column(Storage="_Rank", DbType="Int NOT NULL")]
		public int Rank
		{
			get
			{
				return this._Rank;
			}
			set
			{
				if ((this._Rank != value))
				{
					this.OnRankChanging(value);
					this.SendPropertyChanging();
					this._Rank = value;
					this.SendPropertyChanged("Rank");
					this.OnRankChanged();
				}
			}
		}
		
		[Column(Storage="_DenseRank", DbType="Int NOT NULL")]
		public int DenseRank
		{
			get
			{
				return this._DenseRank;
			}
			set
			{
				if ((this._DenseRank != value))
				{
					this.OnDenseRankChanging(value);
					this.SendPropertyChanging();
					this._DenseRank = value;
					this.SendPropertyChanged("DenseRank");
					this.OnDenseRankChanged();
				}
			}
		}
		
		[Column(Storage="_NTile", DbType="SmallInt NOT NULL")]
		public short NTile
		{
			get
			{
				return this._NTile;
			}
			set
			{
				if ((this._NTile != value))
				{
					this.OnNTileChanging(value);
					this.SendPropertyChanging();
					this._NTile = value;
					this.SendPropertyChanged("NTile");
					this.OnNTileChanged();
				}
			}
		}
		
		[Association(Name="Scheme_DisallowedAbsoluteUris_MOST_POPULAR_SCHEMES_BY_SCHEME", Storage="_Scheme", ThisKey="SchemeID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Scheme Scheme
		{
			get
			{
				return this._Scheme.Entity;
			}
			set
			{
				Scheme previousValue = this._Scheme.Entity;
				if (((previousValue != value) 
							|| (this._Scheme.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Scheme.Entity = null;
						previousValue.DisallowedAbsoluteUris_MOST_POPULAR_SCHEMES_BY_SCHEME = null;
					}
					this._Scheme.Entity = value;
					if ((value != null))
					{
						value.DisallowedAbsoluteUris_MOST_POPULAR_SCHEMES_BY_SCHEME = this;
						this._SchemeID = value.ID;
					}
					else
					{
						this._SchemeID = default(int);
					}
					this.SendPropertyChanged("Scheme");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="rpt.DisallowedAbsoluteUris_COUNT_BY_DOMAIN")]
	public partial class DisallowedAbsoluteUris_COUNT_BY_DOMAIN : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RowNumber;
		
		private int _DomainID;
		
		private int _Count;
		
		private int _Rank;
		
		private int _DenseRank;
		
		private byte _NTile;
		
		private EntityRef<Domain> _Domain;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRowNumberChanging(int value);
    partial void OnRowNumberChanged();
    partial void OnDomainIDChanging(int value);
    partial void OnDomainIDChanged();
    partial void OnCountChanging(int value);
    partial void OnCountChanged();
    partial void OnRankChanging(int value);
    partial void OnRankChanged();
    partial void OnDenseRankChanging(int value);
    partial void OnDenseRankChanged();
    partial void OnNTileChanging(byte value);
    partial void OnNTileChanged();
    #endregion
		
		public DisallowedAbsoluteUris_COUNT_BY_DOMAIN()
		{
			this._Domain = default(EntityRef<Domain>);
			OnCreated();
		}
		
		[Column(Storage="_RowNumber", DbType="Int NOT NULL")]
		public int RowNumber
		{
			get
			{
				return this._RowNumber;
			}
			set
			{
				if ((this._RowNumber != value))
				{
					this.OnRowNumberChanging(value);
					this.SendPropertyChanging();
					this._RowNumber = value;
					this.SendPropertyChanged("RowNumber");
					this.OnRowNumberChanged();
				}
			}
		}
		
		[Column(Storage="_DomainID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int DomainID
		{
			get
			{
				return this._DomainID;
			}
			set
			{
				if ((this._DomainID != value))
				{
					if (this._Domain.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDomainIDChanging(value);
					this.SendPropertyChanging();
					this._DomainID = value;
					this.SendPropertyChanged("DomainID");
					this.OnDomainIDChanged();
				}
			}
		}
		
		[Column(Storage="_Count", DbType="Int NOT NULL")]
		public int Count
		{
			get
			{
				return this._Count;
			}
			set
			{
				if ((this._Count != value))
				{
					this.OnCountChanging(value);
					this.SendPropertyChanging();
					this._Count = value;
					this.SendPropertyChanged("Count");
					this.OnCountChanged();
				}
			}
		}
		
		[Column(Storage="_Rank", DbType="Int NOT NULL")]
		public int Rank
		{
			get
			{
				return this._Rank;
			}
			set
			{
				if ((this._Rank != value))
				{
					this.OnRankChanging(value);
					this.SendPropertyChanging();
					this._Rank = value;
					this.SendPropertyChanged("Rank");
					this.OnRankChanged();
				}
			}
		}
		
		[Column(Storage="_DenseRank", DbType="Int NOT NULL")]
		public int DenseRank
		{
			get
			{
				return this._DenseRank;
			}
			set
			{
				if ((this._DenseRank != value))
				{
					this.OnDenseRankChanging(value);
					this.SendPropertyChanging();
					this._DenseRank = value;
					this.SendPropertyChanged("DenseRank");
					this.OnDenseRankChanged();
				}
			}
		}
		
		[Column(Storage="_NTile", DbType="TinyInt NOT NULL")]
		public byte NTile
		{
			get
			{
				return this._NTile;
			}
			set
			{
				if ((this._NTile != value))
				{
					this.OnNTileChanging(value);
					this.SendPropertyChanging();
					this._NTile = value;
					this.SendPropertyChanged("NTile");
					this.OnNTileChanged();
				}
			}
		}
		
		[Association(Name="Domain_DisallowedAbsoluteUris_COUNT_BY_DOMAIN", Storage="_Domain", ThisKey="DomainID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Domain Domain
		{
			get
			{
				return this._Domain.Entity;
			}
			set
			{
				Domain previousValue = this._Domain.Entity;
				if (((previousValue != value) 
							|| (this._Domain.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Domain.Entity = null;
						previousValue.DisallowedAbsoluteUris_COUNT_BY_DOMAIN = null;
					}
					this._Domain.Entity = value;
					if ((value != null))
					{
						value.DisallowedAbsoluteUris_COUNT_BY_DOMAIN = this;
						this._DomainID = value.ID;
					}
					else
					{
						this._DomainID = default(int);
					}
					this.SendPropertyChanged("Domain");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="rpt.DisallowedAbsoluteUris_COUNT_BY_EXTENSION")]
	public partial class DisallowedAbsoluteUris_COUNT_BY_EXTENSION : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RowNumber;
		
		private int _ExtensionID;
		
		private int _Count;
		
		private int _Rank;
		
		private int _DenseRank;
		
		private byte _NTile;
		
		private EntityRef<Extension> _Extension;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRowNumberChanging(int value);
    partial void OnRowNumberChanged();
    partial void OnExtensionIDChanging(int value);
    partial void OnExtensionIDChanged();
    partial void OnCountChanging(int value);
    partial void OnCountChanged();
    partial void OnRankChanging(int value);
    partial void OnRankChanged();
    partial void OnDenseRankChanging(int value);
    partial void OnDenseRankChanged();
    partial void OnNTileChanging(byte value);
    partial void OnNTileChanged();
    #endregion
		
		public DisallowedAbsoluteUris_COUNT_BY_EXTENSION()
		{
			this._Extension = default(EntityRef<Extension>);
			OnCreated();
		}
		
		[Column(Storage="_RowNumber", DbType="Int NOT NULL")]
		public int RowNumber
		{
			get
			{
				return this._RowNumber;
			}
			set
			{
				if ((this._RowNumber != value))
				{
					this.OnRowNumberChanging(value);
					this.SendPropertyChanging();
					this._RowNumber = value;
					this.SendPropertyChanged("RowNumber");
					this.OnRowNumberChanged();
				}
			}
		}
		
		[Column(Storage="_ExtensionID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ExtensionID
		{
			get
			{
				return this._ExtensionID;
			}
			set
			{
				if ((this._ExtensionID != value))
				{
					if (this._Extension.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnExtensionIDChanging(value);
					this.SendPropertyChanging();
					this._ExtensionID = value;
					this.SendPropertyChanged("ExtensionID");
					this.OnExtensionIDChanged();
				}
			}
		}
		
		[Column(Storage="_Count", DbType="Int NOT NULL")]
		public int Count
		{
			get
			{
				return this._Count;
			}
			set
			{
				if ((this._Count != value))
				{
					this.OnCountChanging(value);
					this.SendPropertyChanging();
					this._Count = value;
					this.SendPropertyChanged("Count");
					this.OnCountChanged();
				}
			}
		}
		
		[Column(Storage="_Rank", DbType="Int NOT NULL")]
		public int Rank
		{
			get
			{
				return this._Rank;
			}
			set
			{
				if ((this._Rank != value))
				{
					this.OnRankChanging(value);
					this.SendPropertyChanging();
					this._Rank = value;
					this.SendPropertyChanged("Rank");
					this.OnRankChanged();
				}
			}
		}
		
		[Column(Storage="_DenseRank", DbType="Int NOT NULL")]
		public int DenseRank
		{
			get
			{
				return this._DenseRank;
			}
			set
			{
				if ((this._DenseRank != value))
				{
					this.OnDenseRankChanging(value);
					this.SendPropertyChanging();
					this._DenseRank = value;
					this.SendPropertyChanged("DenseRank");
					this.OnDenseRankChanged();
				}
			}
		}
		
		[Column(Storage="_NTile", DbType="TinyInt NOT NULL")]
		public byte NTile
		{
			get
			{
				return this._NTile;
			}
			set
			{
				if ((this._NTile != value))
				{
					this.OnNTileChanging(value);
					this.SendPropertyChanging();
					this._NTile = value;
					this.SendPropertyChanged("NTile");
					this.OnNTileChanged();
				}
			}
		}
		
		[Association(Name="Extension_DisallowedAbsoluteUris_COUNT_BY_EXTENSION", Storage="_Extension", ThisKey="ExtensionID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Extension Extension
		{
			get
			{
				return this._Extension.Entity;
			}
			set
			{
				Extension previousValue = this._Extension.Entity;
				if (((previousValue != value) 
							|| (this._Extension.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Extension.Entity = null;
						previousValue.DisallowedAbsoluteUris_COUNT_BY_EXTENSION = null;
					}
					this._Extension.Entity = value;
					if ((value != null))
					{
						value.DisallowedAbsoluteUris_COUNT_BY_EXTENSION = this;
						this._ExtensionID = value.ID;
					}
					else
					{
						this._ExtensionID = default(int);
					}
					this.SendPropertyChanged("Extension");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="rpt.DisallowedAbsoluteUris_COUNT_BY_HOST")]
	public partial class DisallowedAbsoluteUris_COUNT_BY_HOST : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RowNumber;
		
		private int _HostID;
		
		private int _Count;
		
		private int _Rank;
		
		private int _DenseRank;
		
		private byte _NTile;
		
		private EntityRef<Host> _Host;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRowNumberChanging(int value);
    partial void OnRowNumberChanged();
    partial void OnHostIDChanging(int value);
    partial void OnHostIDChanged();
    partial void OnCountChanging(int value);
    partial void OnCountChanged();
    partial void OnRankChanging(int value);
    partial void OnRankChanged();
    partial void OnDenseRankChanging(int value);
    partial void OnDenseRankChanged();
    partial void OnNTileChanging(byte value);
    partial void OnNTileChanged();
    #endregion
		
		public DisallowedAbsoluteUris_COUNT_BY_HOST()
		{
			this._Host = default(EntityRef<Host>);
			OnCreated();
		}
		
		[Column(Storage="_RowNumber", DbType="Int NOT NULL")]
		public int RowNumber
		{
			get
			{
				return this._RowNumber;
			}
			set
			{
				if ((this._RowNumber != value))
				{
					this.OnRowNumberChanging(value);
					this.SendPropertyChanging();
					this._RowNumber = value;
					this.SendPropertyChanged("RowNumber");
					this.OnRowNumberChanged();
				}
			}
		}
		
		[Column(Storage="_HostID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int HostID
		{
			get
			{
				return this._HostID;
			}
			set
			{
				if ((this._HostID != value))
				{
					if (this._Host.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnHostIDChanging(value);
					this.SendPropertyChanging();
					this._HostID = value;
					this.SendPropertyChanged("HostID");
					this.OnHostIDChanged();
				}
			}
		}
		
		[Column(Storage="_Count", DbType="Int NOT NULL")]
		public int Count
		{
			get
			{
				return this._Count;
			}
			set
			{
				if ((this._Count != value))
				{
					this.OnCountChanging(value);
					this.SendPropertyChanging();
					this._Count = value;
					this.SendPropertyChanged("Count");
					this.OnCountChanged();
				}
			}
		}
		
		[Column(Storage="_Rank", DbType="Int NOT NULL")]
		public int Rank
		{
			get
			{
				return this._Rank;
			}
			set
			{
				if ((this._Rank != value))
				{
					this.OnRankChanging(value);
					this.SendPropertyChanging();
					this._Rank = value;
					this.SendPropertyChanged("Rank");
					this.OnRankChanged();
				}
			}
		}
		
		[Column(Storage="_DenseRank", DbType="Int NOT NULL")]
		public int DenseRank
		{
			get
			{
				return this._DenseRank;
			}
			set
			{
				if ((this._DenseRank != value))
				{
					this.OnDenseRankChanging(value);
					this.SendPropertyChanging();
					this._DenseRank = value;
					this.SendPropertyChanged("DenseRank");
					this.OnDenseRankChanged();
				}
			}
		}
		
		[Column(Storage="_NTile", DbType="TinyInt NOT NULL")]
		public byte NTile
		{
			get
			{
				return this._NTile;
			}
			set
			{
				if ((this._NTile != value))
				{
					this.OnNTileChanging(value);
					this.SendPropertyChanging();
					this._NTile = value;
					this.SendPropertyChanged("NTile");
					this.OnNTileChanged();
				}
			}
		}
		
		[Association(Name="Host_DisallowedAbsoluteUris_COUNT_BY_HOST", Storage="_Host", ThisKey="HostID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Host Host
		{
			get
			{
				return this._Host.Entity;
			}
			set
			{
				Host previousValue = this._Host.Entity;
				if (((previousValue != value) 
							|| (this._Host.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Host.Entity = null;
						previousValue.DisallowedAbsoluteUris_COUNT_BY_HOST = null;
					}
					this._Host.Entity = value;
					if ((value != null))
					{
						value.DisallowedAbsoluteUris_COUNT_BY_HOST = this;
						this._HostID = value.ID;
					}
					else
					{
						this._HostID = default(int);
					}
					this.SendPropertyChanged("Host");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="rpt.DisallowedAbsoluteUris_COUNT_BY_SCHEME")]
	public partial class DisallowedAbsoluteUris_COUNT_BY_SCHEME : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RowNumber;
		
		private int _SchemeID;
		
		private int _Count;
		
		private int _Rank;
		
		private int _DenseRank;
		
		private byte _NTile;
		
		private EntityRef<Scheme> _Scheme;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRowNumberChanging(int value);
    partial void OnRowNumberChanged();
    partial void OnSchemeIDChanging(int value);
    partial void OnSchemeIDChanged();
    partial void OnCountChanging(int value);
    partial void OnCountChanged();
    partial void OnRankChanging(int value);
    partial void OnRankChanged();
    partial void OnDenseRankChanging(int value);
    partial void OnDenseRankChanged();
    partial void OnNTileChanging(byte value);
    partial void OnNTileChanged();
    #endregion
		
		public DisallowedAbsoluteUris_COUNT_BY_SCHEME()
		{
			this._Scheme = default(EntityRef<Scheme>);
			OnCreated();
		}
		
		[Column(Storage="_RowNumber", DbType="Int NOT NULL")]
		public int RowNumber
		{
			get
			{
				return this._RowNumber;
			}
			set
			{
				if ((this._RowNumber != value))
				{
					this.OnRowNumberChanging(value);
					this.SendPropertyChanging();
					this._RowNumber = value;
					this.SendPropertyChanged("RowNumber");
					this.OnRowNumberChanged();
				}
			}
		}
		
		[Column(Storage="_SchemeID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int SchemeID
		{
			get
			{
				return this._SchemeID;
			}
			set
			{
				if ((this._SchemeID != value))
				{
					if (this._Scheme.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSchemeIDChanging(value);
					this.SendPropertyChanging();
					this._SchemeID = value;
					this.SendPropertyChanged("SchemeID");
					this.OnSchemeIDChanged();
				}
			}
		}
		
		[Column(Storage="_Count", DbType="Int NOT NULL")]
		public int Count
		{
			get
			{
				return this._Count;
			}
			set
			{
				if ((this._Count != value))
				{
					this.OnCountChanging(value);
					this.SendPropertyChanging();
					this._Count = value;
					this.SendPropertyChanged("Count");
					this.OnCountChanged();
				}
			}
		}
		
		[Column(Storage="_Rank", DbType="Int NOT NULL")]
		public int Rank
		{
			get
			{
				return this._Rank;
			}
			set
			{
				if ((this._Rank != value))
				{
					this.OnRankChanging(value);
					this.SendPropertyChanging();
					this._Rank = value;
					this.SendPropertyChanged("Rank");
					this.OnRankChanged();
				}
			}
		}
		
		[Column(Storage="_DenseRank", DbType="Int NOT NULL")]
		public int DenseRank
		{
			get
			{
				return this._DenseRank;
			}
			set
			{
				if ((this._DenseRank != value))
				{
					this.OnDenseRankChanging(value);
					this.SendPropertyChanging();
					this._DenseRank = value;
					this.SendPropertyChanged("DenseRank");
					this.OnDenseRankChanged();
				}
			}
		}
		
		[Column(Storage="_NTile", DbType="TinyInt NOT NULL")]
		public byte NTile
		{
			get
			{
				return this._NTile;
			}
			set
			{
				if ((this._NTile != value))
				{
					this.OnNTileChanging(value);
					this.SendPropertyChanging();
					this._NTile = value;
					this.SendPropertyChanged("NTile");
					this.OnNTileChanged();
				}
			}
		}
		
		[Association(Name="Scheme_DisallowedAbsoluteUris_COUNT_BY_SCHEME", Storage="_Scheme", ThisKey="SchemeID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Scheme Scheme
		{
			get
			{
				return this._Scheme.Entity;
			}
			set
			{
				Scheme previousValue = this._Scheme.Entity;
				if (((previousValue != value) 
							|| (this._Scheme.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Scheme.Entity = null;
						previousValue.DisallowedAbsoluteUris_COUNT_BY_SCHEME = null;
					}
					this._Scheme.Entity = value;
					if ((value != null))
					{
						value.DisallowedAbsoluteUris_COUNT_BY_SCHEME = this;
						this._SchemeID = value.ID;
					}
					else
					{
						this._SchemeID = default(int);
					}
					this.SendPropertyChanged("Scheme");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="rpt.DisallowedAbsoluteUris_MOST_POPULAR_ABSOLUTEURIS_BY_ABSOLUTEURIS")]
	public partial class DisallowedAbsoluteUris_MOST_POPULAR_ABSOLUTEURIS_BY_ABSOLUTEURI : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RowNumber;
		
		private System.Nullable<System.DateTime> _InitiallyDiscovered;
		
		private System.DateTime _LastDiscovered;
		
		private long _DisallowedAbsoluteUriID;
		
		private int _Count;
		
		private System.Nullable<short> _DaysSinceInitiallyDiscovered;
		
		private short _DaysSinceLastDiscovered;
		
		private System.Nullable<double> _Strength;
		
		private int _Rank;
		
		private int _DenseRank;
		
		private byte _NTile;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRowNumberChanging(int value);
    partial void OnRowNumberChanged();
    partial void OnInitiallyDiscoveredChanging(System.Nullable<System.DateTime> value);
    partial void OnInitiallyDiscoveredChanged();
    partial void OnLastDiscoveredChanging(System.DateTime value);
    partial void OnLastDiscoveredChanged();
    partial void OnDisallowedAbsoluteUriIDChanging(long value);
    partial void OnDisallowedAbsoluteUriIDChanged();
    partial void OnCountChanging(int value);
    partial void OnCountChanged();
    partial void OnDaysSinceInitiallyDiscoveredChanging(System.Nullable<short> value);
    partial void OnDaysSinceInitiallyDiscoveredChanged();
    partial void OnDaysSinceLastDiscoveredChanging(short value);
    partial void OnDaysSinceLastDiscoveredChanged();
    partial void OnStrengthChanging(System.Nullable<double> value);
    partial void OnStrengthChanged();
    partial void OnRankChanging(int value);
    partial void OnRankChanged();
    partial void OnDenseRankChanging(int value);
    partial void OnDenseRankChanged();
    partial void OnNTileChanging(byte value);
    partial void OnNTileChanged();
    #endregion
		
		public DisallowedAbsoluteUris_MOST_POPULAR_ABSOLUTEURIS_BY_ABSOLUTEURI()
		{
			OnCreated();
		}
		
		[Column(Storage="_RowNumber", DbType="Int NOT NULL")]
		public int RowNumber
		{
			get
			{
				return this._RowNumber;
			}
			set
			{
				if ((this._RowNumber != value))
				{
					this.OnRowNumberChanging(value);
					this.SendPropertyChanging();
					this._RowNumber = value;
					this.SendPropertyChanged("RowNumber");
					this.OnRowNumberChanged();
				}
			}
		}
		
		[Column(Storage="_InitiallyDiscovered", DbType="DateTime")]
		public System.Nullable<System.DateTime> InitiallyDiscovered
		{
			get
			{
				return this._InitiallyDiscovered;
			}
			set
			{
				if ((this._InitiallyDiscovered != value))
				{
					this.OnInitiallyDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._InitiallyDiscovered = value;
					this.SendPropertyChanged("InitiallyDiscovered");
					this.OnInitiallyDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_LastDiscovered", DbType="DateTime NOT NULL")]
		public System.DateTime LastDiscovered
		{
			get
			{
				return this._LastDiscovered;
			}
			set
			{
				if ((this._LastDiscovered != value))
				{
					this.OnLastDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._LastDiscovered = value;
					this.SendPropertyChanged("LastDiscovered");
					this.OnLastDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_DisallowedAbsoluteUriID", DbType="BigInt NOT NULL", IsPrimaryKey=true)]
		public long DisallowedAbsoluteUriID
		{
			get
			{
				return this._DisallowedAbsoluteUriID;
			}
			set
			{
				if ((this._DisallowedAbsoluteUriID != value))
				{
					this.OnDisallowedAbsoluteUriIDChanging(value);
					this.SendPropertyChanging();
					this._DisallowedAbsoluteUriID = value;
					this.SendPropertyChanged("DisallowedAbsoluteUriID");
					this.OnDisallowedAbsoluteUriIDChanged();
				}
			}
		}
		
		[Column(Storage="_Count", DbType="Int NOT NULL")]
		public int Count
		{
			get
			{
				return this._Count;
			}
			set
			{
				if ((this._Count != value))
				{
					this.OnCountChanging(value);
					this.SendPropertyChanging();
					this._Count = value;
					this.SendPropertyChanged("Count");
					this.OnCountChanged();
				}
			}
		}
		
		[Column(Storage="_DaysSinceInitiallyDiscovered", DbType="SmallInt")]
		public System.Nullable<short> DaysSinceInitiallyDiscovered
		{
			get
			{
				return this._DaysSinceInitiallyDiscovered;
			}
			set
			{
				if ((this._DaysSinceInitiallyDiscovered != value))
				{
					this.OnDaysSinceInitiallyDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._DaysSinceInitiallyDiscovered = value;
					this.SendPropertyChanged("DaysSinceInitiallyDiscovered");
					this.OnDaysSinceInitiallyDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_DaysSinceLastDiscovered", DbType="SmallInt NOT NULL")]
		public short DaysSinceLastDiscovered
		{
			get
			{
				return this._DaysSinceLastDiscovered;
			}
			set
			{
				if ((this._DaysSinceLastDiscovered != value))
				{
					this.OnDaysSinceLastDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._DaysSinceLastDiscovered = value;
					this.SendPropertyChanged("DaysSinceLastDiscovered");
					this.OnDaysSinceLastDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_Strength", DbType="Float")]
		public System.Nullable<double> Strength
		{
			get
			{
				return this._Strength;
			}
			set
			{
				if ((this._Strength != value))
				{
					this.OnStrengthChanging(value);
					this.SendPropertyChanging();
					this._Strength = value;
					this.SendPropertyChanged("Strength");
					this.OnStrengthChanged();
				}
			}
		}
		
		[Column(Storage="_Rank", DbType="Int NOT NULL")]
		public int Rank
		{
			get
			{
				return this._Rank;
			}
			set
			{
				if ((this._Rank != value))
				{
					this.OnRankChanging(value);
					this.SendPropertyChanging();
					this._Rank = value;
					this.SendPropertyChanged("Rank");
					this.OnRankChanged();
				}
			}
		}
		
		[Column(Storage="_DenseRank", DbType="Int NOT NULL")]
		public int DenseRank
		{
			get
			{
				return this._DenseRank;
			}
			set
			{
				if ((this._DenseRank != value))
				{
					this.OnDenseRankChanging(value);
					this.SendPropertyChanging();
					this._DenseRank = value;
					this.SendPropertyChanged("DenseRank");
					this.OnDenseRankChanged();
				}
			}
		}
		
		[Column(Storage="_NTile", DbType="TinyInt NOT NULL")]
		public byte NTile
		{
			get
			{
				return this._NTile;
			}
			set
			{
				if ((this._NTile != value))
				{
					this.OnNTileChanging(value);
					this.SendPropertyChanging();
					this._NTile = value;
					this.SendPropertyChanged("NTile");
					this.OnNTileChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="rpt.DisallowedAbsoluteUris_MOST_POPULAR_ABSOLUTEURIS_BY_DOMAINS")]
	public partial class DisallowedAbsoluteUris_MOST_POPULAR_ABSOLUTEURIS_BY_DOMAIN : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RowNumber;
		
		private System.Nullable<System.DateTime> _InitiallyDiscovered;
		
		private System.DateTime _LastDiscovered;
		
		private long _DisallowedAbsoluteUriID;
		
		private int _Count;
		
		private System.Nullable<short> _DaysSinceInitiallyDiscovered;
		
		private short _DaysSinceLastDiscovered;
		
		private System.Nullable<double> _Strength;
		
		private int _Rank;
		
		private int _DenseRank;
		
		private byte _NTile;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRowNumberChanging(int value);
    partial void OnRowNumberChanged();
    partial void OnInitiallyDiscoveredChanging(System.Nullable<System.DateTime> value);
    partial void OnInitiallyDiscoveredChanged();
    partial void OnLastDiscoveredChanging(System.DateTime value);
    partial void OnLastDiscoveredChanged();
    partial void OnDisallowedAbsoluteUriIDChanging(long value);
    partial void OnDisallowedAbsoluteUriIDChanged();
    partial void OnCountChanging(int value);
    partial void OnCountChanged();
    partial void OnDaysSinceInitiallyDiscoveredChanging(System.Nullable<short> value);
    partial void OnDaysSinceInitiallyDiscoveredChanged();
    partial void OnDaysSinceLastDiscoveredChanging(short value);
    partial void OnDaysSinceLastDiscoveredChanged();
    partial void OnStrengthChanging(System.Nullable<double> value);
    partial void OnStrengthChanged();
    partial void OnRankChanging(int value);
    partial void OnRankChanged();
    partial void OnDenseRankChanging(int value);
    partial void OnDenseRankChanged();
    partial void OnNTileChanging(byte value);
    partial void OnNTileChanged();
    #endregion
		
		public DisallowedAbsoluteUris_MOST_POPULAR_ABSOLUTEURIS_BY_DOMAIN()
		{
			OnCreated();
		}
		
		[Column(Storage="_RowNumber", DbType="Int NOT NULL")]
		public int RowNumber
		{
			get
			{
				return this._RowNumber;
			}
			set
			{
				if ((this._RowNumber != value))
				{
					this.OnRowNumberChanging(value);
					this.SendPropertyChanging();
					this._RowNumber = value;
					this.SendPropertyChanged("RowNumber");
					this.OnRowNumberChanged();
				}
			}
		}
		
		[Column(Storage="_InitiallyDiscovered", DbType="DateTime")]
		public System.Nullable<System.DateTime> InitiallyDiscovered
		{
			get
			{
				return this._InitiallyDiscovered;
			}
			set
			{
				if ((this._InitiallyDiscovered != value))
				{
					this.OnInitiallyDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._InitiallyDiscovered = value;
					this.SendPropertyChanged("InitiallyDiscovered");
					this.OnInitiallyDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_LastDiscovered", DbType="DateTime NOT NULL")]
		public System.DateTime LastDiscovered
		{
			get
			{
				return this._LastDiscovered;
			}
			set
			{
				if ((this._LastDiscovered != value))
				{
					this.OnLastDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._LastDiscovered = value;
					this.SendPropertyChanged("LastDiscovered");
					this.OnLastDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_DisallowedAbsoluteUriID", DbType="BigInt NOT NULL", IsPrimaryKey=true)]
		public long DisallowedAbsoluteUriID
		{
			get
			{
				return this._DisallowedAbsoluteUriID;
			}
			set
			{
				if ((this._DisallowedAbsoluteUriID != value))
				{
					this.OnDisallowedAbsoluteUriIDChanging(value);
					this.SendPropertyChanging();
					this._DisallowedAbsoluteUriID = value;
					this.SendPropertyChanged("DisallowedAbsoluteUriID");
					this.OnDisallowedAbsoluteUriIDChanged();
				}
			}
		}
		
		[Column(Storage="_Count", DbType="Int NOT NULL")]
		public int Count
		{
			get
			{
				return this._Count;
			}
			set
			{
				if ((this._Count != value))
				{
					this.OnCountChanging(value);
					this.SendPropertyChanging();
					this._Count = value;
					this.SendPropertyChanged("Count");
					this.OnCountChanged();
				}
			}
		}
		
		[Column(Storage="_DaysSinceInitiallyDiscovered", DbType="SmallInt")]
		public System.Nullable<short> DaysSinceInitiallyDiscovered
		{
			get
			{
				return this._DaysSinceInitiallyDiscovered;
			}
			set
			{
				if ((this._DaysSinceInitiallyDiscovered != value))
				{
					this.OnDaysSinceInitiallyDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._DaysSinceInitiallyDiscovered = value;
					this.SendPropertyChanged("DaysSinceInitiallyDiscovered");
					this.OnDaysSinceInitiallyDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_DaysSinceLastDiscovered", DbType="SmallInt NOT NULL")]
		public short DaysSinceLastDiscovered
		{
			get
			{
				return this._DaysSinceLastDiscovered;
			}
			set
			{
				if ((this._DaysSinceLastDiscovered != value))
				{
					this.OnDaysSinceLastDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._DaysSinceLastDiscovered = value;
					this.SendPropertyChanged("DaysSinceLastDiscovered");
					this.OnDaysSinceLastDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_Strength", DbType="Float")]
		public System.Nullable<double> Strength
		{
			get
			{
				return this._Strength;
			}
			set
			{
				if ((this._Strength != value))
				{
					this.OnStrengthChanging(value);
					this.SendPropertyChanging();
					this._Strength = value;
					this.SendPropertyChanged("Strength");
					this.OnStrengthChanged();
				}
			}
		}
		
		[Column(Storage="_Rank", DbType="Int NOT NULL")]
		public int Rank
		{
			get
			{
				return this._Rank;
			}
			set
			{
				if ((this._Rank != value))
				{
					this.OnRankChanging(value);
					this.SendPropertyChanging();
					this._Rank = value;
					this.SendPropertyChanged("Rank");
					this.OnRankChanged();
				}
			}
		}
		
		[Column(Storage="_DenseRank", DbType="Int NOT NULL")]
		public int DenseRank
		{
			get
			{
				return this._DenseRank;
			}
			set
			{
				if ((this._DenseRank != value))
				{
					this.OnDenseRankChanging(value);
					this.SendPropertyChanging();
					this._DenseRank = value;
					this.SendPropertyChanged("DenseRank");
					this.OnDenseRankChanged();
				}
			}
		}
		
		[Column(Storage="_NTile", DbType="TinyInt NOT NULL")]
		public byte NTile
		{
			get
			{
				return this._NTile;
			}
			set
			{
				if ((this._NTile != value))
				{
					this.OnNTileChanging(value);
					this.SendPropertyChanging();
					this._NTile = value;
					this.SendPropertyChanged("NTile");
					this.OnNTileChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="rpt.DisallowedAbsoluteUris_MOST_POPULAR_ABSOLUTEURIS_BY_EXTENSIONS")]
	public partial class DisallowedAbsoluteUris_MOST_POPULAR_ABSOLUTEURIS_BY_EXTENSION : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RowNumber;
		
		private System.Nullable<System.DateTime> _InitiallyDiscovered;
		
		private System.DateTime _LastDiscovered;
		
		private long _DisallowedAbsoluteUriID;
		
		private int _Count;
		
		private System.Nullable<short> _DaysSinceInitiallyDiscovered;
		
		private short _DaysSinceLastDiscovered;
		
		private System.Nullable<double> _Strength;
		
		private int _Rank;
		
		private int _DenseRank;
		
		private byte _NTile;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRowNumberChanging(int value);
    partial void OnRowNumberChanged();
    partial void OnInitiallyDiscoveredChanging(System.Nullable<System.DateTime> value);
    partial void OnInitiallyDiscoveredChanged();
    partial void OnLastDiscoveredChanging(System.DateTime value);
    partial void OnLastDiscoveredChanged();
    partial void OnDisallowedAbsoluteUriIDChanging(long value);
    partial void OnDisallowedAbsoluteUriIDChanged();
    partial void OnCountChanging(int value);
    partial void OnCountChanged();
    partial void OnDaysSinceInitiallyDiscoveredChanging(System.Nullable<short> value);
    partial void OnDaysSinceInitiallyDiscoveredChanged();
    partial void OnDaysSinceLastDiscoveredChanging(short value);
    partial void OnDaysSinceLastDiscoveredChanged();
    partial void OnStrengthChanging(System.Nullable<double> value);
    partial void OnStrengthChanged();
    partial void OnRankChanging(int value);
    partial void OnRankChanged();
    partial void OnDenseRankChanging(int value);
    partial void OnDenseRankChanged();
    partial void OnNTileChanging(byte value);
    partial void OnNTileChanged();
    #endregion
		
		public DisallowedAbsoluteUris_MOST_POPULAR_ABSOLUTEURIS_BY_EXTENSION()
		{
			OnCreated();
		}
		
		[Column(Storage="_RowNumber", DbType="Int NOT NULL")]
		public int RowNumber
		{
			get
			{
				return this._RowNumber;
			}
			set
			{
				if ((this._RowNumber != value))
				{
					this.OnRowNumberChanging(value);
					this.SendPropertyChanging();
					this._RowNumber = value;
					this.SendPropertyChanged("RowNumber");
					this.OnRowNumberChanged();
				}
			}
		}
		
		[Column(Storage="_InitiallyDiscovered", DbType="DateTime")]
		public System.Nullable<System.DateTime> InitiallyDiscovered
		{
			get
			{
				return this._InitiallyDiscovered;
			}
			set
			{
				if ((this._InitiallyDiscovered != value))
				{
					this.OnInitiallyDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._InitiallyDiscovered = value;
					this.SendPropertyChanged("InitiallyDiscovered");
					this.OnInitiallyDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_LastDiscovered", DbType="DateTime NOT NULL")]
		public System.DateTime LastDiscovered
		{
			get
			{
				return this._LastDiscovered;
			}
			set
			{
				if ((this._LastDiscovered != value))
				{
					this.OnLastDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._LastDiscovered = value;
					this.SendPropertyChanged("LastDiscovered");
					this.OnLastDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_DisallowedAbsoluteUriID", DbType="BigInt NOT NULL", IsPrimaryKey=true)]
		public long DisallowedAbsoluteUriID
		{
			get
			{
				return this._DisallowedAbsoluteUriID;
			}
			set
			{
				if ((this._DisallowedAbsoluteUriID != value))
				{
					this.OnDisallowedAbsoluteUriIDChanging(value);
					this.SendPropertyChanging();
					this._DisallowedAbsoluteUriID = value;
					this.SendPropertyChanged("DisallowedAbsoluteUriID");
					this.OnDisallowedAbsoluteUriIDChanged();
				}
			}
		}
		
		[Column(Storage="_Count", DbType="Int NOT NULL")]
		public int Count
		{
			get
			{
				return this._Count;
			}
			set
			{
				if ((this._Count != value))
				{
					this.OnCountChanging(value);
					this.SendPropertyChanging();
					this._Count = value;
					this.SendPropertyChanged("Count");
					this.OnCountChanged();
				}
			}
		}
		
		[Column(Storage="_DaysSinceInitiallyDiscovered", DbType="SmallInt")]
		public System.Nullable<short> DaysSinceInitiallyDiscovered
		{
			get
			{
				return this._DaysSinceInitiallyDiscovered;
			}
			set
			{
				if ((this._DaysSinceInitiallyDiscovered != value))
				{
					this.OnDaysSinceInitiallyDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._DaysSinceInitiallyDiscovered = value;
					this.SendPropertyChanged("DaysSinceInitiallyDiscovered");
					this.OnDaysSinceInitiallyDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_DaysSinceLastDiscovered", DbType="SmallInt NOT NULL")]
		public short DaysSinceLastDiscovered
		{
			get
			{
				return this._DaysSinceLastDiscovered;
			}
			set
			{
				if ((this._DaysSinceLastDiscovered != value))
				{
					this.OnDaysSinceLastDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._DaysSinceLastDiscovered = value;
					this.SendPropertyChanged("DaysSinceLastDiscovered");
					this.OnDaysSinceLastDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_Strength", DbType="Float")]
		public System.Nullable<double> Strength
		{
			get
			{
				return this._Strength;
			}
			set
			{
				if ((this._Strength != value))
				{
					this.OnStrengthChanging(value);
					this.SendPropertyChanging();
					this._Strength = value;
					this.SendPropertyChanged("Strength");
					this.OnStrengthChanged();
				}
			}
		}
		
		[Column(Storage="_Rank", DbType="Int NOT NULL")]
		public int Rank
		{
			get
			{
				return this._Rank;
			}
			set
			{
				if ((this._Rank != value))
				{
					this.OnRankChanging(value);
					this.SendPropertyChanging();
					this._Rank = value;
					this.SendPropertyChanged("Rank");
					this.OnRankChanged();
				}
			}
		}
		
		[Column(Storage="_DenseRank", DbType="Int NOT NULL")]
		public int DenseRank
		{
			get
			{
				return this._DenseRank;
			}
			set
			{
				if ((this._DenseRank != value))
				{
					this.OnDenseRankChanging(value);
					this.SendPropertyChanging();
					this._DenseRank = value;
					this.SendPropertyChanged("DenseRank");
					this.OnDenseRankChanged();
				}
			}
		}
		
		[Column(Storage="_NTile", DbType="TinyInt NOT NULL")]
		public byte NTile
		{
			get
			{
				return this._NTile;
			}
			set
			{
				if ((this._NTile != value))
				{
					this.OnNTileChanging(value);
					this.SendPropertyChanging();
					this._NTile = value;
					this.SendPropertyChanged("NTile");
					this.OnNTileChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="rpt.DisallowedAbsoluteUris_MOST_POPULAR_ABSOLUTEURIS_BY_HOSTS")]
	public partial class DisallowedAbsoluteUris_MOST_POPULAR_ABSOLUTEURIS_BY_HOST : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RowNumber;
		
		private System.Nullable<System.DateTime> _InitiallyDiscovered;
		
		private System.DateTime _LastDiscovered;
		
		private long _DisallowedAbsoluteUriID;
		
		private int _Count;
		
		private System.Nullable<short> _DaysSinceInitiallyDiscovered;
		
		private short _DaysSinceLastDiscovered;
		
		private System.Nullable<double> _Strength;
		
		private int _Rank;
		
		private int _DenseRank;
		
		private byte _NTile;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRowNumberChanging(int value);
    partial void OnRowNumberChanged();
    partial void OnInitiallyDiscoveredChanging(System.Nullable<System.DateTime> value);
    partial void OnInitiallyDiscoveredChanged();
    partial void OnLastDiscoveredChanging(System.DateTime value);
    partial void OnLastDiscoveredChanged();
    partial void OnDisallowedAbsoluteUriIDChanging(long value);
    partial void OnDisallowedAbsoluteUriIDChanged();
    partial void OnCountChanging(int value);
    partial void OnCountChanged();
    partial void OnDaysSinceInitiallyDiscoveredChanging(System.Nullable<short> value);
    partial void OnDaysSinceInitiallyDiscoveredChanged();
    partial void OnDaysSinceLastDiscoveredChanging(short value);
    partial void OnDaysSinceLastDiscoveredChanged();
    partial void OnStrengthChanging(System.Nullable<double> value);
    partial void OnStrengthChanged();
    partial void OnRankChanging(int value);
    partial void OnRankChanged();
    partial void OnDenseRankChanging(int value);
    partial void OnDenseRankChanged();
    partial void OnNTileChanging(byte value);
    partial void OnNTileChanged();
    #endregion
		
		public DisallowedAbsoluteUris_MOST_POPULAR_ABSOLUTEURIS_BY_HOST()
		{
			OnCreated();
		}
		
		[Column(Storage="_RowNumber", DbType="Int NOT NULL")]
		public int RowNumber
		{
			get
			{
				return this._RowNumber;
			}
			set
			{
				if ((this._RowNumber != value))
				{
					this.OnRowNumberChanging(value);
					this.SendPropertyChanging();
					this._RowNumber = value;
					this.SendPropertyChanged("RowNumber");
					this.OnRowNumberChanged();
				}
			}
		}
		
		[Column(Storage="_InitiallyDiscovered", DbType="DateTime")]
		public System.Nullable<System.DateTime> InitiallyDiscovered
		{
			get
			{
				return this._InitiallyDiscovered;
			}
			set
			{
				if ((this._InitiallyDiscovered != value))
				{
					this.OnInitiallyDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._InitiallyDiscovered = value;
					this.SendPropertyChanged("InitiallyDiscovered");
					this.OnInitiallyDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_LastDiscovered", DbType="DateTime NOT NULL")]
		public System.DateTime LastDiscovered
		{
			get
			{
				return this._LastDiscovered;
			}
			set
			{
				if ((this._LastDiscovered != value))
				{
					this.OnLastDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._LastDiscovered = value;
					this.SendPropertyChanged("LastDiscovered");
					this.OnLastDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_DisallowedAbsoluteUriID", DbType="BigInt NOT NULL", IsPrimaryKey=true)]
		public long DisallowedAbsoluteUriID
		{
			get
			{
				return this._DisallowedAbsoluteUriID;
			}
			set
			{
				if ((this._DisallowedAbsoluteUriID != value))
				{
					this.OnDisallowedAbsoluteUriIDChanging(value);
					this.SendPropertyChanging();
					this._DisallowedAbsoluteUriID = value;
					this.SendPropertyChanged("DisallowedAbsoluteUriID");
					this.OnDisallowedAbsoluteUriIDChanged();
				}
			}
		}
		
		[Column(Storage="_Count", DbType="Int NOT NULL")]
		public int Count
		{
			get
			{
				return this._Count;
			}
			set
			{
				if ((this._Count != value))
				{
					this.OnCountChanging(value);
					this.SendPropertyChanging();
					this._Count = value;
					this.SendPropertyChanged("Count");
					this.OnCountChanged();
				}
			}
		}
		
		[Column(Storage="_DaysSinceInitiallyDiscovered", DbType="SmallInt")]
		public System.Nullable<short> DaysSinceInitiallyDiscovered
		{
			get
			{
				return this._DaysSinceInitiallyDiscovered;
			}
			set
			{
				if ((this._DaysSinceInitiallyDiscovered != value))
				{
					this.OnDaysSinceInitiallyDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._DaysSinceInitiallyDiscovered = value;
					this.SendPropertyChanged("DaysSinceInitiallyDiscovered");
					this.OnDaysSinceInitiallyDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_DaysSinceLastDiscovered", DbType="SmallInt NOT NULL")]
		public short DaysSinceLastDiscovered
		{
			get
			{
				return this._DaysSinceLastDiscovered;
			}
			set
			{
				if ((this._DaysSinceLastDiscovered != value))
				{
					this.OnDaysSinceLastDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._DaysSinceLastDiscovered = value;
					this.SendPropertyChanged("DaysSinceLastDiscovered");
					this.OnDaysSinceLastDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_Strength", DbType="Float")]
		public System.Nullable<double> Strength
		{
			get
			{
				return this._Strength;
			}
			set
			{
				if ((this._Strength != value))
				{
					this.OnStrengthChanging(value);
					this.SendPropertyChanging();
					this._Strength = value;
					this.SendPropertyChanged("Strength");
					this.OnStrengthChanged();
				}
			}
		}
		
		[Column(Storage="_Rank", DbType="Int NOT NULL")]
		public int Rank
		{
			get
			{
				return this._Rank;
			}
			set
			{
				if ((this._Rank != value))
				{
					this.OnRankChanging(value);
					this.SendPropertyChanging();
					this._Rank = value;
					this.SendPropertyChanged("Rank");
					this.OnRankChanged();
				}
			}
		}
		
		[Column(Storage="_DenseRank", DbType="Int NOT NULL")]
		public int DenseRank
		{
			get
			{
				return this._DenseRank;
			}
			set
			{
				if ((this._DenseRank != value))
				{
					this.OnDenseRankChanging(value);
					this.SendPropertyChanging();
					this._DenseRank = value;
					this.SendPropertyChanged("DenseRank");
					this.OnDenseRankChanged();
				}
			}
		}
		
		[Column(Storage="_NTile", DbType="TinyInt NOT NULL")]
		public byte NTile
		{
			get
			{
				return this._NTile;
			}
			set
			{
				if ((this._NTile != value))
				{
					this.OnNTileChanging(value);
					this.SendPropertyChanging();
					this._NTile = value;
					this.SendPropertyChanged("NTile");
					this.OnNTileChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="rpt.DisallowedAbsoluteUris_MOST_POPULAR_ABSOLUTEURIS_BY_SCHEMES")]
	public partial class DisallowedAbsoluteUris_MOST_POPULAR_ABSOLUTEURIS_BY_SCHEME : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RowNumber;
		
		private System.Nullable<System.DateTime> _InitiallyDiscovered;
		
		private System.DateTime _LastDiscovered;
		
		private long _DisallowedAbsoluteUriID;
		
		private int _Count;
		
		private System.Nullable<short> _DaysSinceInitiallyDiscovered;
		
		private short _DaysSinceLastDiscovered;
		
		private System.Nullable<double> _Strength;
		
		private int _Rank;
		
		private int _DenseRank;
		
		private byte _NTile;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRowNumberChanging(int value);
    partial void OnRowNumberChanged();
    partial void OnInitiallyDiscoveredChanging(System.Nullable<System.DateTime> value);
    partial void OnInitiallyDiscoveredChanged();
    partial void OnLastDiscoveredChanging(System.DateTime value);
    partial void OnLastDiscoveredChanged();
    partial void OnDisallowedAbsoluteUriIDChanging(long value);
    partial void OnDisallowedAbsoluteUriIDChanged();
    partial void OnCountChanging(int value);
    partial void OnCountChanged();
    partial void OnDaysSinceInitiallyDiscoveredChanging(System.Nullable<short> value);
    partial void OnDaysSinceInitiallyDiscoveredChanged();
    partial void OnDaysSinceLastDiscoveredChanging(short value);
    partial void OnDaysSinceLastDiscoveredChanged();
    partial void OnStrengthChanging(System.Nullable<double> value);
    partial void OnStrengthChanged();
    partial void OnRankChanging(int value);
    partial void OnRankChanged();
    partial void OnDenseRankChanging(int value);
    partial void OnDenseRankChanged();
    partial void OnNTileChanging(byte value);
    partial void OnNTileChanged();
    #endregion
		
		public DisallowedAbsoluteUris_MOST_POPULAR_ABSOLUTEURIS_BY_SCHEME()
		{
			OnCreated();
		}
		
		[Column(Storage="_RowNumber", DbType="Int NOT NULL")]
		public int RowNumber
		{
			get
			{
				return this._RowNumber;
			}
			set
			{
				if ((this._RowNumber != value))
				{
					this.OnRowNumberChanging(value);
					this.SendPropertyChanging();
					this._RowNumber = value;
					this.SendPropertyChanged("RowNumber");
					this.OnRowNumberChanged();
				}
			}
		}
		
		[Column(Storage="_InitiallyDiscovered", DbType="DateTime")]
		public System.Nullable<System.DateTime> InitiallyDiscovered
		{
			get
			{
				return this._InitiallyDiscovered;
			}
			set
			{
				if ((this._InitiallyDiscovered != value))
				{
					this.OnInitiallyDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._InitiallyDiscovered = value;
					this.SendPropertyChanged("InitiallyDiscovered");
					this.OnInitiallyDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_LastDiscovered", DbType="DateTime NOT NULL")]
		public System.DateTime LastDiscovered
		{
			get
			{
				return this._LastDiscovered;
			}
			set
			{
				if ((this._LastDiscovered != value))
				{
					this.OnLastDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._LastDiscovered = value;
					this.SendPropertyChanged("LastDiscovered");
					this.OnLastDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_DisallowedAbsoluteUriID", DbType="BigInt NOT NULL", IsPrimaryKey=true)]
		public long DisallowedAbsoluteUriID
		{
			get
			{
				return this._DisallowedAbsoluteUriID;
			}
			set
			{
				if ((this._DisallowedAbsoluteUriID != value))
				{
					this.OnDisallowedAbsoluteUriIDChanging(value);
					this.SendPropertyChanging();
					this._DisallowedAbsoluteUriID = value;
					this.SendPropertyChanged("DisallowedAbsoluteUriID");
					this.OnDisallowedAbsoluteUriIDChanged();
				}
			}
		}
		
		[Column(Storage="_Count", DbType="Int NOT NULL")]
		public int Count
		{
			get
			{
				return this._Count;
			}
			set
			{
				if ((this._Count != value))
				{
					this.OnCountChanging(value);
					this.SendPropertyChanging();
					this._Count = value;
					this.SendPropertyChanged("Count");
					this.OnCountChanged();
				}
			}
		}
		
		[Column(Storage="_DaysSinceInitiallyDiscovered", DbType="SmallInt")]
		public System.Nullable<short> DaysSinceInitiallyDiscovered
		{
			get
			{
				return this._DaysSinceInitiallyDiscovered;
			}
			set
			{
				if ((this._DaysSinceInitiallyDiscovered != value))
				{
					this.OnDaysSinceInitiallyDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._DaysSinceInitiallyDiscovered = value;
					this.SendPropertyChanged("DaysSinceInitiallyDiscovered");
					this.OnDaysSinceInitiallyDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_DaysSinceLastDiscovered", DbType="SmallInt NOT NULL")]
		public short DaysSinceLastDiscovered
		{
			get
			{
				return this._DaysSinceLastDiscovered;
			}
			set
			{
				if ((this._DaysSinceLastDiscovered != value))
				{
					this.OnDaysSinceLastDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._DaysSinceLastDiscovered = value;
					this.SendPropertyChanged("DaysSinceLastDiscovered");
					this.OnDaysSinceLastDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_Strength", DbType="Float")]
		public System.Nullable<double> Strength
		{
			get
			{
				return this._Strength;
			}
			set
			{
				if ((this._Strength != value))
				{
					this.OnStrengthChanging(value);
					this.SendPropertyChanging();
					this._Strength = value;
					this.SendPropertyChanged("Strength");
					this.OnStrengthChanged();
				}
			}
		}
		
		[Column(Storage="_Rank", DbType="Int NOT NULL")]
		public int Rank
		{
			get
			{
				return this._Rank;
			}
			set
			{
				if ((this._Rank != value))
				{
					this.OnRankChanging(value);
					this.SendPropertyChanging();
					this._Rank = value;
					this.SendPropertyChanged("Rank");
					this.OnRankChanged();
				}
			}
		}
		
		[Column(Storage="_DenseRank", DbType="Int NOT NULL")]
		public int DenseRank
		{
			get
			{
				return this._DenseRank;
			}
			set
			{
				if ((this._DenseRank != value))
				{
					this.OnDenseRankChanging(value);
					this.SendPropertyChanging();
					this._DenseRank = value;
					this.SendPropertyChanged("DenseRank");
					this.OnDenseRankChanged();
				}
			}
		}
		
		[Column(Storage="_NTile", DbType="TinyInt NOT NULL")]
		public byte NTile
		{
			get
			{
				return this._NTile;
			}
			set
			{
				if ((this._NTile != value))
				{
					this.OnNTileChanging(value);
					this.SendPropertyChanging();
					this._NTile = value;
					this.SendPropertyChanged("NTile");
					this.OnNTileChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="rpt.DisallowedAbsoluteUris_MOST_POPULAR_DOMAINS_BY_ABSOLUTEURIS")]
	public partial class DisallowedAbsoluteUris_MOST_POPULAR_DOMAINS_BY_ABSOLUTEURI : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RowNumber;
		
		private System.Nullable<System.DateTime> _InitiallyDiscovered;
		
		private System.DateTime _LastDiscovered;
		
		private int _DomainID;
		
		private int _Count;
		
		private System.Nullable<short> _DaysSinceInitiallyDiscovered;
		
		private short _DaysSinceLastDiscovered;
		
		private System.Nullable<double> _Strength;
		
		private int _Rank;
		
		private int _DenseRank;
		
		private short _NTile;
		
		private EntityRef<Domain> _Domain;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRowNumberChanging(int value);
    partial void OnRowNumberChanged();
    partial void OnInitiallyDiscoveredChanging(System.Nullable<System.DateTime> value);
    partial void OnInitiallyDiscoveredChanged();
    partial void OnLastDiscoveredChanging(System.DateTime value);
    partial void OnLastDiscoveredChanged();
    partial void OnDomainIDChanging(int value);
    partial void OnDomainIDChanged();
    partial void OnCountChanging(int value);
    partial void OnCountChanged();
    partial void OnDaysSinceInitiallyDiscoveredChanging(System.Nullable<short> value);
    partial void OnDaysSinceInitiallyDiscoveredChanged();
    partial void OnDaysSinceLastDiscoveredChanging(short value);
    partial void OnDaysSinceLastDiscoveredChanged();
    partial void OnStrengthChanging(System.Nullable<double> value);
    partial void OnStrengthChanged();
    partial void OnRankChanging(int value);
    partial void OnRankChanged();
    partial void OnDenseRankChanging(int value);
    partial void OnDenseRankChanged();
    partial void OnNTileChanging(short value);
    partial void OnNTileChanged();
    #endregion
		
		public DisallowedAbsoluteUris_MOST_POPULAR_DOMAINS_BY_ABSOLUTEURI()
		{
			this._Domain = default(EntityRef<Domain>);
			OnCreated();
		}
		
		[Column(Storage="_RowNumber", DbType="Int NOT NULL")]
		public int RowNumber
		{
			get
			{
				return this._RowNumber;
			}
			set
			{
				if ((this._RowNumber != value))
				{
					this.OnRowNumberChanging(value);
					this.SendPropertyChanging();
					this._RowNumber = value;
					this.SendPropertyChanged("RowNumber");
					this.OnRowNumberChanged();
				}
			}
		}
		
		[Column(Storage="_InitiallyDiscovered", DbType="DateTime")]
		public System.Nullable<System.DateTime> InitiallyDiscovered
		{
			get
			{
				return this._InitiallyDiscovered;
			}
			set
			{
				if ((this._InitiallyDiscovered != value))
				{
					this.OnInitiallyDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._InitiallyDiscovered = value;
					this.SendPropertyChanged("InitiallyDiscovered");
					this.OnInitiallyDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_LastDiscovered", DbType="DateTime NOT NULL")]
		public System.DateTime LastDiscovered
		{
			get
			{
				return this._LastDiscovered;
			}
			set
			{
				if ((this._LastDiscovered != value))
				{
					this.OnLastDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._LastDiscovered = value;
					this.SendPropertyChanged("LastDiscovered");
					this.OnLastDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_DomainID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int DomainID
		{
			get
			{
				return this._DomainID;
			}
			set
			{
				if ((this._DomainID != value))
				{
					if (this._Domain.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDomainIDChanging(value);
					this.SendPropertyChanging();
					this._DomainID = value;
					this.SendPropertyChanged("DomainID");
					this.OnDomainIDChanged();
				}
			}
		}
		
		[Column(Storage="_Count", DbType="Int NOT NULL")]
		public int Count
		{
			get
			{
				return this._Count;
			}
			set
			{
				if ((this._Count != value))
				{
					this.OnCountChanging(value);
					this.SendPropertyChanging();
					this._Count = value;
					this.SendPropertyChanged("Count");
					this.OnCountChanged();
				}
			}
		}
		
		[Column(Storage="_DaysSinceInitiallyDiscovered", DbType="SmallInt")]
		public System.Nullable<short> DaysSinceInitiallyDiscovered
		{
			get
			{
				return this._DaysSinceInitiallyDiscovered;
			}
			set
			{
				if ((this._DaysSinceInitiallyDiscovered != value))
				{
					this.OnDaysSinceInitiallyDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._DaysSinceInitiallyDiscovered = value;
					this.SendPropertyChanged("DaysSinceInitiallyDiscovered");
					this.OnDaysSinceInitiallyDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_DaysSinceLastDiscovered", DbType="SmallInt NOT NULL")]
		public short DaysSinceLastDiscovered
		{
			get
			{
				return this._DaysSinceLastDiscovered;
			}
			set
			{
				if ((this._DaysSinceLastDiscovered != value))
				{
					this.OnDaysSinceLastDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._DaysSinceLastDiscovered = value;
					this.SendPropertyChanged("DaysSinceLastDiscovered");
					this.OnDaysSinceLastDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_Strength", DbType="Float")]
		public System.Nullable<double> Strength
		{
			get
			{
				return this._Strength;
			}
			set
			{
				if ((this._Strength != value))
				{
					this.OnStrengthChanging(value);
					this.SendPropertyChanging();
					this._Strength = value;
					this.SendPropertyChanged("Strength");
					this.OnStrengthChanged();
				}
			}
		}
		
		[Column(Storage="_Rank", DbType="Int NOT NULL")]
		public int Rank
		{
			get
			{
				return this._Rank;
			}
			set
			{
				if ((this._Rank != value))
				{
					this.OnRankChanging(value);
					this.SendPropertyChanging();
					this._Rank = value;
					this.SendPropertyChanged("Rank");
					this.OnRankChanged();
				}
			}
		}
		
		[Column(Storage="_DenseRank", DbType="Int NOT NULL")]
		public int DenseRank
		{
			get
			{
				return this._DenseRank;
			}
			set
			{
				if ((this._DenseRank != value))
				{
					this.OnDenseRankChanging(value);
					this.SendPropertyChanging();
					this._DenseRank = value;
					this.SendPropertyChanged("DenseRank");
					this.OnDenseRankChanged();
				}
			}
		}
		
		[Column(Storage="_NTile", DbType="SmallInt NOT NULL")]
		public short NTile
		{
			get
			{
				return this._NTile;
			}
			set
			{
				if ((this._NTile != value))
				{
					this.OnNTileChanging(value);
					this.SendPropertyChanging();
					this._NTile = value;
					this.SendPropertyChanged("NTile");
					this.OnNTileChanged();
				}
			}
		}
		
		[Association(Name="Domain_DisallowedAbsoluteUris_MOST_POPULAR_DOMAINS_BY_ABSOLUTEURI", Storage="_Domain", ThisKey="DomainID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Domain Domain
		{
			get
			{
				return this._Domain.Entity;
			}
			set
			{
				Domain previousValue = this._Domain.Entity;
				if (((previousValue != value) 
							|| (this._Domain.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Domain.Entity = null;
						previousValue.DisallowedAbsoluteUris_MOST_POPULAR_DOMAINS_BY_ABSOLUTEURI = null;
					}
					this._Domain.Entity = value;
					if ((value != null))
					{
						value.DisallowedAbsoluteUris_MOST_POPULAR_DOMAINS_BY_ABSOLUTEURI = this;
						this._DomainID = value.ID;
					}
					else
					{
						this._DomainID = default(int);
					}
					this.SendPropertyChanged("Domain");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="rpt.DisallowedAbsoluteUris_MOST_POPULAR_DOMAINS_BY_DOMAINS")]
	public partial class DisallowedAbsoluteUris_MOST_POPULAR_DOMAINS_BY_DOMAIN : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RowNumber;
		
		private System.Nullable<System.DateTime> _InitiallyDiscovered;
		
		private System.DateTime _LastDiscovered;
		
		private int _DomainID;
		
		private int _Count;
		
		private System.Nullable<short> _DaysSinceInitiallyDiscovered;
		
		private short _DaysSinceLastDiscovered;
		
		private System.Nullable<double> _Strength;
		
		private int _Rank;
		
		private int _DenseRank;
		
		private byte _NTile;
		
		private EntityRef<Domain> _Domain;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRowNumberChanging(int value);
    partial void OnRowNumberChanged();
    partial void OnInitiallyDiscoveredChanging(System.Nullable<System.DateTime> value);
    partial void OnInitiallyDiscoveredChanged();
    partial void OnLastDiscoveredChanging(System.DateTime value);
    partial void OnLastDiscoveredChanged();
    partial void OnDomainIDChanging(int value);
    partial void OnDomainIDChanged();
    partial void OnCountChanging(int value);
    partial void OnCountChanged();
    partial void OnDaysSinceInitiallyDiscoveredChanging(System.Nullable<short> value);
    partial void OnDaysSinceInitiallyDiscoveredChanged();
    partial void OnDaysSinceLastDiscoveredChanging(short value);
    partial void OnDaysSinceLastDiscoveredChanged();
    partial void OnStrengthChanging(System.Nullable<double> value);
    partial void OnStrengthChanged();
    partial void OnRankChanging(int value);
    partial void OnRankChanged();
    partial void OnDenseRankChanging(int value);
    partial void OnDenseRankChanged();
    partial void OnNTileChanging(byte value);
    partial void OnNTileChanged();
    #endregion
		
		public DisallowedAbsoluteUris_MOST_POPULAR_DOMAINS_BY_DOMAIN()
		{
			this._Domain = default(EntityRef<Domain>);
			OnCreated();
		}
		
		[Column(Storage="_RowNumber", DbType="Int NOT NULL")]
		public int RowNumber
		{
			get
			{
				return this._RowNumber;
			}
			set
			{
				if ((this._RowNumber != value))
				{
					this.OnRowNumberChanging(value);
					this.SendPropertyChanging();
					this._RowNumber = value;
					this.SendPropertyChanged("RowNumber");
					this.OnRowNumberChanged();
				}
			}
		}
		
		[Column(Storage="_InitiallyDiscovered", DbType="DateTime")]
		public System.Nullable<System.DateTime> InitiallyDiscovered
		{
			get
			{
				return this._InitiallyDiscovered;
			}
			set
			{
				if ((this._InitiallyDiscovered != value))
				{
					this.OnInitiallyDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._InitiallyDiscovered = value;
					this.SendPropertyChanged("InitiallyDiscovered");
					this.OnInitiallyDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_LastDiscovered", DbType="DateTime NOT NULL")]
		public System.DateTime LastDiscovered
		{
			get
			{
				return this._LastDiscovered;
			}
			set
			{
				if ((this._LastDiscovered != value))
				{
					this.OnLastDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._LastDiscovered = value;
					this.SendPropertyChanged("LastDiscovered");
					this.OnLastDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_DomainID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int DomainID
		{
			get
			{
				return this._DomainID;
			}
			set
			{
				if ((this._DomainID != value))
				{
					if (this._Domain.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDomainIDChanging(value);
					this.SendPropertyChanging();
					this._DomainID = value;
					this.SendPropertyChanged("DomainID");
					this.OnDomainIDChanged();
				}
			}
		}
		
		[Column(Storage="_Count", DbType="Int NOT NULL")]
		public int Count
		{
			get
			{
				return this._Count;
			}
			set
			{
				if ((this._Count != value))
				{
					this.OnCountChanging(value);
					this.SendPropertyChanging();
					this._Count = value;
					this.SendPropertyChanged("Count");
					this.OnCountChanged();
				}
			}
		}
		
		[Column(Storage="_DaysSinceInitiallyDiscovered", DbType="SmallInt")]
		public System.Nullable<short> DaysSinceInitiallyDiscovered
		{
			get
			{
				return this._DaysSinceInitiallyDiscovered;
			}
			set
			{
				if ((this._DaysSinceInitiallyDiscovered != value))
				{
					this.OnDaysSinceInitiallyDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._DaysSinceInitiallyDiscovered = value;
					this.SendPropertyChanged("DaysSinceInitiallyDiscovered");
					this.OnDaysSinceInitiallyDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_DaysSinceLastDiscovered", DbType="SmallInt NOT NULL")]
		public short DaysSinceLastDiscovered
		{
			get
			{
				return this._DaysSinceLastDiscovered;
			}
			set
			{
				if ((this._DaysSinceLastDiscovered != value))
				{
					this.OnDaysSinceLastDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._DaysSinceLastDiscovered = value;
					this.SendPropertyChanged("DaysSinceLastDiscovered");
					this.OnDaysSinceLastDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_Strength", DbType="Float")]
		public System.Nullable<double> Strength
		{
			get
			{
				return this._Strength;
			}
			set
			{
				if ((this._Strength != value))
				{
					this.OnStrengthChanging(value);
					this.SendPropertyChanging();
					this._Strength = value;
					this.SendPropertyChanged("Strength");
					this.OnStrengthChanged();
				}
			}
		}
		
		[Column(Storage="_Rank", DbType="Int NOT NULL")]
		public int Rank
		{
			get
			{
				return this._Rank;
			}
			set
			{
				if ((this._Rank != value))
				{
					this.OnRankChanging(value);
					this.SendPropertyChanging();
					this._Rank = value;
					this.SendPropertyChanged("Rank");
					this.OnRankChanged();
				}
			}
		}
		
		[Column(Storage="_DenseRank", DbType="Int NOT NULL")]
		public int DenseRank
		{
			get
			{
				return this._DenseRank;
			}
			set
			{
				if ((this._DenseRank != value))
				{
					this.OnDenseRankChanging(value);
					this.SendPropertyChanging();
					this._DenseRank = value;
					this.SendPropertyChanged("DenseRank");
					this.OnDenseRankChanged();
				}
			}
		}
		
		[Column(Storage="_NTile", DbType="TinyInt NOT NULL")]
		public byte NTile
		{
			get
			{
				return this._NTile;
			}
			set
			{
				if ((this._NTile != value))
				{
					this.OnNTileChanging(value);
					this.SendPropertyChanging();
					this._NTile = value;
					this.SendPropertyChanged("NTile");
					this.OnNTileChanged();
				}
			}
		}
		
		[Association(Name="Domain_DisallowedAbsoluteUris_MOST_POPULAR_DOMAINS_BY_DOMAIN", Storage="_Domain", ThisKey="DomainID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Domain Domain
		{
			get
			{
				return this._Domain.Entity;
			}
			set
			{
				Domain previousValue = this._Domain.Entity;
				if (((previousValue != value) 
							|| (this._Domain.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Domain.Entity = null;
						previousValue.DisallowedAbsoluteUris_MOST_POPULAR_DOMAINS_BY_DOMAIN = null;
					}
					this._Domain.Entity = value;
					if ((value != null))
					{
						value.DisallowedAbsoluteUris_MOST_POPULAR_DOMAINS_BY_DOMAIN = this;
						this._DomainID = value.ID;
					}
					else
					{
						this._DomainID = default(int);
					}
					this.SendPropertyChanged("Domain");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="rpt.DisallowedAbsoluteUris_MOST_POPULAR_DOMAINS_BY_EXTENSIONS")]
	public partial class DisallowedAbsoluteUris_MOST_POPULAR_DOMAINS_BY_EXTENSION : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RowNumber;
		
		private System.Nullable<System.DateTime> _InitiallyDiscovered;
		
		private System.DateTime _LastDiscovered;
		
		private int _DomainID;
		
		private int _Count;
		
		private System.Nullable<short> _DaysSinceInitiallyDiscovered;
		
		private short _DaysSinceLastDiscovered;
		
		private System.Nullable<double> _Strength;
		
		private int _Rank;
		
		private int _DenseRank;
		
		private byte _NTile;
		
		private EntityRef<Domain> _Domain;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRowNumberChanging(int value);
    partial void OnRowNumberChanged();
    partial void OnInitiallyDiscoveredChanging(System.Nullable<System.DateTime> value);
    partial void OnInitiallyDiscoveredChanged();
    partial void OnLastDiscoveredChanging(System.DateTime value);
    partial void OnLastDiscoveredChanged();
    partial void OnDomainIDChanging(int value);
    partial void OnDomainIDChanged();
    partial void OnCountChanging(int value);
    partial void OnCountChanged();
    partial void OnDaysSinceInitiallyDiscoveredChanging(System.Nullable<short> value);
    partial void OnDaysSinceInitiallyDiscoveredChanged();
    partial void OnDaysSinceLastDiscoveredChanging(short value);
    partial void OnDaysSinceLastDiscoveredChanged();
    partial void OnStrengthChanging(System.Nullable<double> value);
    partial void OnStrengthChanged();
    partial void OnRankChanging(int value);
    partial void OnRankChanged();
    partial void OnDenseRankChanging(int value);
    partial void OnDenseRankChanged();
    partial void OnNTileChanging(byte value);
    partial void OnNTileChanged();
    #endregion
		
		public DisallowedAbsoluteUris_MOST_POPULAR_DOMAINS_BY_EXTENSION()
		{
			this._Domain = default(EntityRef<Domain>);
			OnCreated();
		}
		
		[Column(Storage="_RowNumber", DbType="Int NOT NULL")]
		public int RowNumber
		{
			get
			{
				return this._RowNumber;
			}
			set
			{
				if ((this._RowNumber != value))
				{
					this.OnRowNumberChanging(value);
					this.SendPropertyChanging();
					this._RowNumber = value;
					this.SendPropertyChanged("RowNumber");
					this.OnRowNumberChanged();
				}
			}
		}
		
		[Column(Storage="_InitiallyDiscovered", DbType="DateTime")]
		public System.Nullable<System.DateTime> InitiallyDiscovered
		{
			get
			{
				return this._InitiallyDiscovered;
			}
			set
			{
				if ((this._InitiallyDiscovered != value))
				{
					this.OnInitiallyDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._InitiallyDiscovered = value;
					this.SendPropertyChanged("InitiallyDiscovered");
					this.OnInitiallyDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_LastDiscovered", DbType="DateTime NOT NULL")]
		public System.DateTime LastDiscovered
		{
			get
			{
				return this._LastDiscovered;
			}
			set
			{
				if ((this._LastDiscovered != value))
				{
					this.OnLastDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._LastDiscovered = value;
					this.SendPropertyChanged("LastDiscovered");
					this.OnLastDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_DomainID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int DomainID
		{
			get
			{
				return this._DomainID;
			}
			set
			{
				if ((this._DomainID != value))
				{
					if (this._Domain.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDomainIDChanging(value);
					this.SendPropertyChanging();
					this._DomainID = value;
					this.SendPropertyChanged("DomainID");
					this.OnDomainIDChanged();
				}
			}
		}
		
		[Column(Storage="_Count", DbType="Int NOT NULL")]
		public int Count
		{
			get
			{
				return this._Count;
			}
			set
			{
				if ((this._Count != value))
				{
					this.OnCountChanging(value);
					this.SendPropertyChanging();
					this._Count = value;
					this.SendPropertyChanged("Count");
					this.OnCountChanged();
				}
			}
		}
		
		[Column(Storage="_DaysSinceInitiallyDiscovered", DbType="SmallInt")]
		public System.Nullable<short> DaysSinceInitiallyDiscovered
		{
			get
			{
				return this._DaysSinceInitiallyDiscovered;
			}
			set
			{
				if ((this._DaysSinceInitiallyDiscovered != value))
				{
					this.OnDaysSinceInitiallyDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._DaysSinceInitiallyDiscovered = value;
					this.SendPropertyChanged("DaysSinceInitiallyDiscovered");
					this.OnDaysSinceInitiallyDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_DaysSinceLastDiscovered", DbType="SmallInt NOT NULL")]
		public short DaysSinceLastDiscovered
		{
			get
			{
				return this._DaysSinceLastDiscovered;
			}
			set
			{
				if ((this._DaysSinceLastDiscovered != value))
				{
					this.OnDaysSinceLastDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._DaysSinceLastDiscovered = value;
					this.SendPropertyChanged("DaysSinceLastDiscovered");
					this.OnDaysSinceLastDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_Strength", DbType="Float")]
		public System.Nullable<double> Strength
		{
			get
			{
				return this._Strength;
			}
			set
			{
				if ((this._Strength != value))
				{
					this.OnStrengthChanging(value);
					this.SendPropertyChanging();
					this._Strength = value;
					this.SendPropertyChanged("Strength");
					this.OnStrengthChanged();
				}
			}
		}
		
		[Column(Storage="_Rank", DbType="Int NOT NULL")]
		public int Rank
		{
			get
			{
				return this._Rank;
			}
			set
			{
				if ((this._Rank != value))
				{
					this.OnRankChanging(value);
					this.SendPropertyChanging();
					this._Rank = value;
					this.SendPropertyChanged("Rank");
					this.OnRankChanged();
				}
			}
		}
		
		[Column(Storage="_DenseRank", DbType="Int NOT NULL")]
		public int DenseRank
		{
			get
			{
				return this._DenseRank;
			}
			set
			{
				if ((this._DenseRank != value))
				{
					this.OnDenseRankChanging(value);
					this.SendPropertyChanging();
					this._DenseRank = value;
					this.SendPropertyChanged("DenseRank");
					this.OnDenseRankChanged();
				}
			}
		}
		
		[Column(Storage="_NTile", DbType="TinyInt NOT NULL")]
		public byte NTile
		{
			get
			{
				return this._NTile;
			}
			set
			{
				if ((this._NTile != value))
				{
					this.OnNTileChanging(value);
					this.SendPropertyChanging();
					this._NTile = value;
					this.SendPropertyChanged("NTile");
					this.OnNTileChanged();
				}
			}
		}
		
		[Association(Name="Domain_DisallowedAbsoluteUris_MOST_POPULAR_DOMAINS_BY_EXTENSION", Storage="_Domain", ThisKey="DomainID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Domain Domain
		{
			get
			{
				return this._Domain.Entity;
			}
			set
			{
				Domain previousValue = this._Domain.Entity;
				if (((previousValue != value) 
							|| (this._Domain.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Domain.Entity = null;
						previousValue.DisallowedAbsoluteUris_MOST_POPULAR_DOMAINS_BY_EXTENSION = null;
					}
					this._Domain.Entity = value;
					if ((value != null))
					{
						value.DisallowedAbsoluteUris_MOST_POPULAR_DOMAINS_BY_EXTENSION = this;
						this._DomainID = value.ID;
					}
					else
					{
						this._DomainID = default(int);
					}
					this.SendPropertyChanged("Domain");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="rpt.DisallowedAbsoluteUris_MOST_POPULAR_DOMAINS_BY_HOSTS")]
	public partial class DisallowedAbsoluteUris_MOST_POPULAR_DOMAINS_BY_HOST : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RowNumber;
		
		private System.Nullable<System.DateTime> _InitiallyDiscovered;
		
		private System.DateTime _LastDiscovered;
		
		private int _DomainID;
		
		private int _Count;
		
		private System.Nullable<short> _DaysSinceInitiallyDiscovered;
		
		private short _DaysSinceLastDiscovered;
		
		private System.Nullable<double> _Strength;
		
		private int _Rank;
		
		private int _DenseRank;
		
		private byte _NTile;
		
		private EntityRef<Domain> _Domain;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRowNumberChanging(int value);
    partial void OnRowNumberChanged();
    partial void OnInitiallyDiscoveredChanging(System.Nullable<System.DateTime> value);
    partial void OnInitiallyDiscoveredChanged();
    partial void OnLastDiscoveredChanging(System.DateTime value);
    partial void OnLastDiscoveredChanged();
    partial void OnDomainIDChanging(int value);
    partial void OnDomainIDChanged();
    partial void OnCountChanging(int value);
    partial void OnCountChanged();
    partial void OnDaysSinceInitiallyDiscoveredChanging(System.Nullable<short> value);
    partial void OnDaysSinceInitiallyDiscoveredChanged();
    partial void OnDaysSinceLastDiscoveredChanging(short value);
    partial void OnDaysSinceLastDiscoveredChanged();
    partial void OnStrengthChanging(System.Nullable<double> value);
    partial void OnStrengthChanged();
    partial void OnRankChanging(int value);
    partial void OnRankChanged();
    partial void OnDenseRankChanging(int value);
    partial void OnDenseRankChanged();
    partial void OnNTileChanging(byte value);
    partial void OnNTileChanged();
    #endregion
		
		public DisallowedAbsoluteUris_MOST_POPULAR_DOMAINS_BY_HOST()
		{
			this._Domain = default(EntityRef<Domain>);
			OnCreated();
		}
		
		[Column(Storage="_RowNumber", DbType="Int NOT NULL")]
		public int RowNumber
		{
			get
			{
				return this._RowNumber;
			}
			set
			{
				if ((this._RowNumber != value))
				{
					this.OnRowNumberChanging(value);
					this.SendPropertyChanging();
					this._RowNumber = value;
					this.SendPropertyChanged("RowNumber");
					this.OnRowNumberChanged();
				}
			}
		}
		
		[Column(Storage="_InitiallyDiscovered", DbType="DateTime")]
		public System.Nullable<System.DateTime> InitiallyDiscovered
		{
			get
			{
				return this._InitiallyDiscovered;
			}
			set
			{
				if ((this._InitiallyDiscovered != value))
				{
					this.OnInitiallyDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._InitiallyDiscovered = value;
					this.SendPropertyChanged("InitiallyDiscovered");
					this.OnInitiallyDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_LastDiscovered", DbType="DateTime NOT NULL")]
		public System.DateTime LastDiscovered
		{
			get
			{
				return this._LastDiscovered;
			}
			set
			{
				if ((this._LastDiscovered != value))
				{
					this.OnLastDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._LastDiscovered = value;
					this.SendPropertyChanged("LastDiscovered");
					this.OnLastDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_DomainID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int DomainID
		{
			get
			{
				return this._DomainID;
			}
			set
			{
				if ((this._DomainID != value))
				{
					if (this._Domain.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDomainIDChanging(value);
					this.SendPropertyChanging();
					this._DomainID = value;
					this.SendPropertyChanged("DomainID");
					this.OnDomainIDChanged();
				}
			}
		}
		
		[Column(Storage="_Count", DbType="Int NOT NULL")]
		public int Count
		{
			get
			{
				return this._Count;
			}
			set
			{
				if ((this._Count != value))
				{
					this.OnCountChanging(value);
					this.SendPropertyChanging();
					this._Count = value;
					this.SendPropertyChanged("Count");
					this.OnCountChanged();
				}
			}
		}
		
		[Column(Storage="_DaysSinceInitiallyDiscovered", DbType="SmallInt")]
		public System.Nullable<short> DaysSinceInitiallyDiscovered
		{
			get
			{
				return this._DaysSinceInitiallyDiscovered;
			}
			set
			{
				if ((this._DaysSinceInitiallyDiscovered != value))
				{
					this.OnDaysSinceInitiallyDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._DaysSinceInitiallyDiscovered = value;
					this.SendPropertyChanged("DaysSinceInitiallyDiscovered");
					this.OnDaysSinceInitiallyDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_DaysSinceLastDiscovered", DbType="SmallInt NOT NULL")]
		public short DaysSinceLastDiscovered
		{
			get
			{
				return this._DaysSinceLastDiscovered;
			}
			set
			{
				if ((this._DaysSinceLastDiscovered != value))
				{
					this.OnDaysSinceLastDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._DaysSinceLastDiscovered = value;
					this.SendPropertyChanged("DaysSinceLastDiscovered");
					this.OnDaysSinceLastDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_Strength", DbType="Float")]
		public System.Nullable<double> Strength
		{
			get
			{
				return this._Strength;
			}
			set
			{
				if ((this._Strength != value))
				{
					this.OnStrengthChanging(value);
					this.SendPropertyChanging();
					this._Strength = value;
					this.SendPropertyChanged("Strength");
					this.OnStrengthChanged();
				}
			}
		}
		
		[Column(Storage="_Rank", DbType="Int NOT NULL")]
		public int Rank
		{
			get
			{
				return this._Rank;
			}
			set
			{
				if ((this._Rank != value))
				{
					this.OnRankChanging(value);
					this.SendPropertyChanging();
					this._Rank = value;
					this.SendPropertyChanged("Rank");
					this.OnRankChanged();
				}
			}
		}
		
		[Column(Storage="_DenseRank", DbType="Int NOT NULL")]
		public int DenseRank
		{
			get
			{
				return this._DenseRank;
			}
			set
			{
				if ((this._DenseRank != value))
				{
					this.OnDenseRankChanging(value);
					this.SendPropertyChanging();
					this._DenseRank = value;
					this.SendPropertyChanged("DenseRank");
					this.OnDenseRankChanged();
				}
			}
		}
		
		[Column(Storage="_NTile", DbType="TinyInt NOT NULL")]
		public byte NTile
		{
			get
			{
				return this._NTile;
			}
			set
			{
				if ((this._NTile != value))
				{
					this.OnNTileChanging(value);
					this.SendPropertyChanging();
					this._NTile = value;
					this.SendPropertyChanged("NTile");
					this.OnNTileChanged();
				}
			}
		}
		
		[Association(Name="Domain_DisallowedAbsoluteUris_MOST_POPULAR_DOMAINS_BY_HOST", Storage="_Domain", ThisKey="DomainID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Domain Domain
		{
			get
			{
				return this._Domain.Entity;
			}
			set
			{
				Domain previousValue = this._Domain.Entity;
				if (((previousValue != value) 
							|| (this._Domain.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Domain.Entity = null;
						previousValue.DisallowedAbsoluteUris_MOST_POPULAR_DOMAINS_BY_HOST = null;
					}
					this._Domain.Entity = value;
					if ((value != null))
					{
						value.DisallowedAbsoluteUris_MOST_POPULAR_DOMAINS_BY_HOST = this;
						this._DomainID = value.ID;
					}
					else
					{
						this._DomainID = default(int);
					}
					this.SendPropertyChanged("Domain");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="rpt.DisallowedAbsoluteUris_MOST_POPULAR_DOMAINS_BY_SCHEMES")]
	public partial class DisallowedAbsoluteUris_MOST_POPULAR_DOMAINS_BY_SCHEME : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RowNumber;
		
		private System.Nullable<System.DateTime> _InitiallyDiscovered;
		
		private System.DateTime _LastDiscovered;
		
		private int _DomainID;
		
		private int _Count;
		
		private System.Nullable<short> _DaysSinceInitiallyDiscovered;
		
		private short _DaysSinceLastDiscovered;
		
		private System.Nullable<double> _Strength;
		
		private int _Rank;
		
		private int _DenseRank;
		
		private byte _NTile;
		
		private EntityRef<Domain> _Domain;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRowNumberChanging(int value);
    partial void OnRowNumberChanged();
    partial void OnInitiallyDiscoveredChanging(System.Nullable<System.DateTime> value);
    partial void OnInitiallyDiscoveredChanged();
    partial void OnLastDiscoveredChanging(System.DateTime value);
    partial void OnLastDiscoveredChanged();
    partial void OnDomainIDChanging(int value);
    partial void OnDomainIDChanged();
    partial void OnCountChanging(int value);
    partial void OnCountChanged();
    partial void OnDaysSinceInitiallyDiscoveredChanging(System.Nullable<short> value);
    partial void OnDaysSinceInitiallyDiscoveredChanged();
    partial void OnDaysSinceLastDiscoveredChanging(short value);
    partial void OnDaysSinceLastDiscoveredChanged();
    partial void OnStrengthChanging(System.Nullable<double> value);
    partial void OnStrengthChanged();
    partial void OnRankChanging(int value);
    partial void OnRankChanged();
    partial void OnDenseRankChanging(int value);
    partial void OnDenseRankChanged();
    partial void OnNTileChanging(byte value);
    partial void OnNTileChanged();
    #endregion
		
		public DisallowedAbsoluteUris_MOST_POPULAR_DOMAINS_BY_SCHEME()
		{
			this._Domain = default(EntityRef<Domain>);
			OnCreated();
		}
		
		[Column(Storage="_RowNumber", DbType="Int NOT NULL")]
		public int RowNumber
		{
			get
			{
				return this._RowNumber;
			}
			set
			{
				if ((this._RowNumber != value))
				{
					this.OnRowNumberChanging(value);
					this.SendPropertyChanging();
					this._RowNumber = value;
					this.SendPropertyChanged("RowNumber");
					this.OnRowNumberChanged();
				}
			}
		}
		
		[Column(Storage="_InitiallyDiscovered", DbType="DateTime")]
		public System.Nullable<System.DateTime> InitiallyDiscovered
		{
			get
			{
				return this._InitiallyDiscovered;
			}
			set
			{
				if ((this._InitiallyDiscovered != value))
				{
					this.OnInitiallyDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._InitiallyDiscovered = value;
					this.SendPropertyChanged("InitiallyDiscovered");
					this.OnInitiallyDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_LastDiscovered", DbType="DateTime NOT NULL")]
		public System.DateTime LastDiscovered
		{
			get
			{
				return this._LastDiscovered;
			}
			set
			{
				if ((this._LastDiscovered != value))
				{
					this.OnLastDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._LastDiscovered = value;
					this.SendPropertyChanged("LastDiscovered");
					this.OnLastDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_DomainID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int DomainID
		{
			get
			{
				return this._DomainID;
			}
			set
			{
				if ((this._DomainID != value))
				{
					if (this._Domain.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDomainIDChanging(value);
					this.SendPropertyChanging();
					this._DomainID = value;
					this.SendPropertyChanged("DomainID");
					this.OnDomainIDChanged();
				}
			}
		}
		
		[Column(Storage="_Count", DbType="Int NOT NULL")]
		public int Count
		{
			get
			{
				return this._Count;
			}
			set
			{
				if ((this._Count != value))
				{
					this.OnCountChanging(value);
					this.SendPropertyChanging();
					this._Count = value;
					this.SendPropertyChanged("Count");
					this.OnCountChanged();
				}
			}
		}
		
		[Column(Storage="_DaysSinceInitiallyDiscovered", DbType="SmallInt")]
		public System.Nullable<short> DaysSinceInitiallyDiscovered
		{
			get
			{
				return this._DaysSinceInitiallyDiscovered;
			}
			set
			{
				if ((this._DaysSinceInitiallyDiscovered != value))
				{
					this.OnDaysSinceInitiallyDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._DaysSinceInitiallyDiscovered = value;
					this.SendPropertyChanged("DaysSinceInitiallyDiscovered");
					this.OnDaysSinceInitiallyDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_DaysSinceLastDiscovered", DbType="SmallInt NOT NULL")]
		public short DaysSinceLastDiscovered
		{
			get
			{
				return this._DaysSinceLastDiscovered;
			}
			set
			{
				if ((this._DaysSinceLastDiscovered != value))
				{
					this.OnDaysSinceLastDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._DaysSinceLastDiscovered = value;
					this.SendPropertyChanged("DaysSinceLastDiscovered");
					this.OnDaysSinceLastDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_Strength", DbType="Float")]
		public System.Nullable<double> Strength
		{
			get
			{
				return this._Strength;
			}
			set
			{
				if ((this._Strength != value))
				{
					this.OnStrengthChanging(value);
					this.SendPropertyChanging();
					this._Strength = value;
					this.SendPropertyChanged("Strength");
					this.OnStrengthChanged();
				}
			}
		}
		
		[Column(Storage="_Rank", DbType="Int NOT NULL")]
		public int Rank
		{
			get
			{
				return this._Rank;
			}
			set
			{
				if ((this._Rank != value))
				{
					this.OnRankChanging(value);
					this.SendPropertyChanging();
					this._Rank = value;
					this.SendPropertyChanged("Rank");
					this.OnRankChanged();
				}
			}
		}
		
		[Column(Storage="_DenseRank", DbType="Int NOT NULL")]
		public int DenseRank
		{
			get
			{
				return this._DenseRank;
			}
			set
			{
				if ((this._DenseRank != value))
				{
					this.OnDenseRankChanging(value);
					this.SendPropertyChanging();
					this._DenseRank = value;
					this.SendPropertyChanged("DenseRank");
					this.OnDenseRankChanged();
				}
			}
		}
		
		[Column(Storage="_NTile", DbType="TinyInt NOT NULL")]
		public byte NTile
		{
			get
			{
				return this._NTile;
			}
			set
			{
				if ((this._NTile != value))
				{
					this.OnNTileChanging(value);
					this.SendPropertyChanging();
					this._NTile = value;
					this.SendPropertyChanged("NTile");
					this.OnNTileChanged();
				}
			}
		}
		
		[Association(Name="Domain_DisallowedAbsoluteUris_MOST_POPULAR_DOMAINS_BY_SCHEME", Storage="_Domain", ThisKey="DomainID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Domain Domain
		{
			get
			{
				return this._Domain.Entity;
			}
			set
			{
				Domain previousValue = this._Domain.Entity;
				if (((previousValue != value) 
							|| (this._Domain.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Domain.Entity = null;
						previousValue.DisallowedAbsoluteUris_MOST_POPULAR_DOMAINS_BY_SCHEME = null;
					}
					this._Domain.Entity = value;
					if ((value != null))
					{
						value.DisallowedAbsoluteUris_MOST_POPULAR_DOMAINS_BY_SCHEME = this;
						this._DomainID = value.ID;
					}
					else
					{
						this._DomainID = default(int);
					}
					this.SendPropertyChanged("Domain");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="rpt.DisallowedAbsoluteUris_MOST_POPULAR_EXTENSIONS_BY_ABSOLUTEURIS")]
	public partial class DisallowedAbsoluteUris_MOST_POPULAR_EXTENSIONS_BY_ABSOLUTEURI : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RowNumber;
		
		private System.Nullable<System.DateTime> _InitiallyDiscovered;
		
		private System.DateTime _LastDiscovered;
		
		private int _ExtensionID;
		
		private int _Count;
		
		private System.Nullable<short> _DaysSinceInitiallyDiscovered;
		
		private short _DaysSinceLastDiscovered;
		
		private System.Nullable<double> _Strength;
		
		private int _Rank;
		
		private int _DenseRank;
		
		private byte _NTile;
		
		private EntityRef<Extension> _Extension;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRowNumberChanging(int value);
    partial void OnRowNumberChanged();
    partial void OnInitiallyDiscoveredChanging(System.Nullable<System.DateTime> value);
    partial void OnInitiallyDiscoveredChanged();
    partial void OnLastDiscoveredChanging(System.DateTime value);
    partial void OnLastDiscoveredChanged();
    partial void OnExtensionIDChanging(int value);
    partial void OnExtensionIDChanged();
    partial void OnCountChanging(int value);
    partial void OnCountChanged();
    partial void OnDaysSinceInitiallyDiscoveredChanging(System.Nullable<short> value);
    partial void OnDaysSinceInitiallyDiscoveredChanged();
    partial void OnDaysSinceLastDiscoveredChanging(short value);
    partial void OnDaysSinceLastDiscoveredChanged();
    partial void OnStrengthChanging(System.Nullable<double> value);
    partial void OnStrengthChanged();
    partial void OnRankChanging(int value);
    partial void OnRankChanged();
    partial void OnDenseRankChanging(int value);
    partial void OnDenseRankChanged();
    partial void OnNTileChanging(byte value);
    partial void OnNTileChanged();
    #endregion
		
		public DisallowedAbsoluteUris_MOST_POPULAR_EXTENSIONS_BY_ABSOLUTEURI()
		{
			this._Extension = default(EntityRef<Extension>);
			OnCreated();
		}
		
		[Column(Storage="_RowNumber", DbType="Int NOT NULL")]
		public int RowNumber
		{
			get
			{
				return this._RowNumber;
			}
			set
			{
				if ((this._RowNumber != value))
				{
					this.OnRowNumberChanging(value);
					this.SendPropertyChanging();
					this._RowNumber = value;
					this.SendPropertyChanged("RowNumber");
					this.OnRowNumberChanged();
				}
			}
		}
		
		[Column(Storage="_InitiallyDiscovered", DbType="DateTime")]
		public System.Nullable<System.DateTime> InitiallyDiscovered
		{
			get
			{
				return this._InitiallyDiscovered;
			}
			set
			{
				if ((this._InitiallyDiscovered != value))
				{
					this.OnInitiallyDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._InitiallyDiscovered = value;
					this.SendPropertyChanged("InitiallyDiscovered");
					this.OnInitiallyDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_LastDiscovered", DbType="DateTime NOT NULL")]
		public System.DateTime LastDiscovered
		{
			get
			{
				return this._LastDiscovered;
			}
			set
			{
				if ((this._LastDiscovered != value))
				{
					this.OnLastDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._LastDiscovered = value;
					this.SendPropertyChanged("LastDiscovered");
					this.OnLastDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_ExtensionID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ExtensionID
		{
			get
			{
				return this._ExtensionID;
			}
			set
			{
				if ((this._ExtensionID != value))
				{
					if (this._Extension.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnExtensionIDChanging(value);
					this.SendPropertyChanging();
					this._ExtensionID = value;
					this.SendPropertyChanged("ExtensionID");
					this.OnExtensionIDChanged();
				}
			}
		}
		
		[Column(Storage="_Count", DbType="Int NOT NULL")]
		public int Count
		{
			get
			{
				return this._Count;
			}
			set
			{
				if ((this._Count != value))
				{
					this.OnCountChanging(value);
					this.SendPropertyChanging();
					this._Count = value;
					this.SendPropertyChanged("Count");
					this.OnCountChanged();
				}
			}
		}
		
		[Column(Storage="_DaysSinceInitiallyDiscovered", DbType="SmallInt")]
		public System.Nullable<short> DaysSinceInitiallyDiscovered
		{
			get
			{
				return this._DaysSinceInitiallyDiscovered;
			}
			set
			{
				if ((this._DaysSinceInitiallyDiscovered != value))
				{
					this.OnDaysSinceInitiallyDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._DaysSinceInitiallyDiscovered = value;
					this.SendPropertyChanged("DaysSinceInitiallyDiscovered");
					this.OnDaysSinceInitiallyDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_DaysSinceLastDiscovered", DbType="SmallInt NOT NULL")]
		public short DaysSinceLastDiscovered
		{
			get
			{
				return this._DaysSinceLastDiscovered;
			}
			set
			{
				if ((this._DaysSinceLastDiscovered != value))
				{
					this.OnDaysSinceLastDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._DaysSinceLastDiscovered = value;
					this.SendPropertyChanged("DaysSinceLastDiscovered");
					this.OnDaysSinceLastDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_Strength", DbType="Float")]
		public System.Nullable<double> Strength
		{
			get
			{
				return this._Strength;
			}
			set
			{
				if ((this._Strength != value))
				{
					this.OnStrengthChanging(value);
					this.SendPropertyChanging();
					this._Strength = value;
					this.SendPropertyChanged("Strength");
					this.OnStrengthChanged();
				}
			}
		}
		
		[Column(Storage="_Rank", DbType="Int NOT NULL")]
		public int Rank
		{
			get
			{
				return this._Rank;
			}
			set
			{
				if ((this._Rank != value))
				{
					this.OnRankChanging(value);
					this.SendPropertyChanging();
					this._Rank = value;
					this.SendPropertyChanged("Rank");
					this.OnRankChanged();
				}
			}
		}
		
		[Column(Storage="_DenseRank", DbType="Int NOT NULL")]
		public int DenseRank
		{
			get
			{
				return this._DenseRank;
			}
			set
			{
				if ((this._DenseRank != value))
				{
					this.OnDenseRankChanging(value);
					this.SendPropertyChanging();
					this._DenseRank = value;
					this.SendPropertyChanged("DenseRank");
					this.OnDenseRankChanged();
				}
			}
		}
		
		[Column(Storage="_NTile", DbType="TinyInt NOT NULL")]
		public byte NTile
		{
			get
			{
				return this._NTile;
			}
			set
			{
				if ((this._NTile != value))
				{
					this.OnNTileChanging(value);
					this.SendPropertyChanging();
					this._NTile = value;
					this.SendPropertyChanged("NTile");
					this.OnNTileChanged();
				}
			}
		}
		
		[Association(Name="Extension_DisallowedAbsoluteUris_MOST_POPULAR_EXTENSIONS_BY_ABSOLUTEURI", Storage="_Extension", ThisKey="ExtensionID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Extension Extension
		{
			get
			{
				return this._Extension.Entity;
			}
			set
			{
				Extension previousValue = this._Extension.Entity;
				if (((previousValue != value) 
							|| (this._Extension.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Extension.Entity = null;
						previousValue.DisallowedAbsoluteUris_MOST_POPULAR_EXTENSIONS_BY_ABSOLUTEURI = null;
					}
					this._Extension.Entity = value;
					if ((value != null))
					{
						value.DisallowedAbsoluteUris_MOST_POPULAR_EXTENSIONS_BY_ABSOLUTEURI = this;
						this._ExtensionID = value.ID;
					}
					else
					{
						this._ExtensionID = default(int);
					}
					this.SendPropertyChanged("Extension");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="rpt.DisallowedAbsoluteUris_MOST_POPULAR_EXTENSIONS_BY_DOMAINS")]
	public partial class DisallowedAbsoluteUris_MOST_POPULAR_EXTENSIONS_BY_DOMAIN : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RowNumber;
		
		private System.Nullable<System.DateTime> _InitiallyDiscovered;
		
		private System.DateTime _LastDiscovered;
		
		private int _ExtensionID;
		
		private int _Count;
		
		private System.Nullable<short> _DaysSinceInitiallyDiscovered;
		
		private short _DaysSinceLastDiscovered;
		
		private System.Nullable<double> _Strength;
		
		private int _Rank;
		
		private int _DenseRank;
		
		private byte _NTile;
		
		private EntityRef<Extension> _Extension;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRowNumberChanging(int value);
    partial void OnRowNumberChanged();
    partial void OnInitiallyDiscoveredChanging(System.Nullable<System.DateTime> value);
    partial void OnInitiallyDiscoveredChanged();
    partial void OnLastDiscoveredChanging(System.DateTime value);
    partial void OnLastDiscoveredChanged();
    partial void OnExtensionIDChanging(int value);
    partial void OnExtensionIDChanged();
    partial void OnCountChanging(int value);
    partial void OnCountChanged();
    partial void OnDaysSinceInitiallyDiscoveredChanging(System.Nullable<short> value);
    partial void OnDaysSinceInitiallyDiscoveredChanged();
    partial void OnDaysSinceLastDiscoveredChanging(short value);
    partial void OnDaysSinceLastDiscoveredChanged();
    partial void OnStrengthChanging(System.Nullable<double> value);
    partial void OnStrengthChanged();
    partial void OnRankChanging(int value);
    partial void OnRankChanged();
    partial void OnDenseRankChanging(int value);
    partial void OnDenseRankChanged();
    partial void OnNTileChanging(byte value);
    partial void OnNTileChanged();
    #endregion
		
		public DisallowedAbsoluteUris_MOST_POPULAR_EXTENSIONS_BY_DOMAIN()
		{
			this._Extension = default(EntityRef<Extension>);
			OnCreated();
		}
		
		[Column(Storage="_RowNumber", DbType="Int NOT NULL")]
		public int RowNumber
		{
			get
			{
				return this._RowNumber;
			}
			set
			{
				if ((this._RowNumber != value))
				{
					this.OnRowNumberChanging(value);
					this.SendPropertyChanging();
					this._RowNumber = value;
					this.SendPropertyChanged("RowNumber");
					this.OnRowNumberChanged();
				}
			}
		}
		
		[Column(Storage="_InitiallyDiscovered", DbType="DateTime")]
		public System.Nullable<System.DateTime> InitiallyDiscovered
		{
			get
			{
				return this._InitiallyDiscovered;
			}
			set
			{
				if ((this._InitiallyDiscovered != value))
				{
					this.OnInitiallyDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._InitiallyDiscovered = value;
					this.SendPropertyChanged("InitiallyDiscovered");
					this.OnInitiallyDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_LastDiscovered", DbType="DateTime NOT NULL")]
		public System.DateTime LastDiscovered
		{
			get
			{
				return this._LastDiscovered;
			}
			set
			{
				if ((this._LastDiscovered != value))
				{
					this.OnLastDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._LastDiscovered = value;
					this.SendPropertyChanged("LastDiscovered");
					this.OnLastDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_ExtensionID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ExtensionID
		{
			get
			{
				return this._ExtensionID;
			}
			set
			{
				if ((this._ExtensionID != value))
				{
					if (this._Extension.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnExtensionIDChanging(value);
					this.SendPropertyChanging();
					this._ExtensionID = value;
					this.SendPropertyChanged("ExtensionID");
					this.OnExtensionIDChanged();
				}
			}
		}
		
		[Column(Storage="_Count", DbType="Int NOT NULL")]
		public int Count
		{
			get
			{
				return this._Count;
			}
			set
			{
				if ((this._Count != value))
				{
					this.OnCountChanging(value);
					this.SendPropertyChanging();
					this._Count = value;
					this.SendPropertyChanged("Count");
					this.OnCountChanged();
				}
			}
		}
		
		[Column(Storage="_DaysSinceInitiallyDiscovered", DbType="SmallInt")]
		public System.Nullable<short> DaysSinceInitiallyDiscovered
		{
			get
			{
				return this._DaysSinceInitiallyDiscovered;
			}
			set
			{
				if ((this._DaysSinceInitiallyDiscovered != value))
				{
					this.OnDaysSinceInitiallyDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._DaysSinceInitiallyDiscovered = value;
					this.SendPropertyChanged("DaysSinceInitiallyDiscovered");
					this.OnDaysSinceInitiallyDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_DaysSinceLastDiscovered", DbType="SmallInt NOT NULL")]
		public short DaysSinceLastDiscovered
		{
			get
			{
				return this._DaysSinceLastDiscovered;
			}
			set
			{
				if ((this._DaysSinceLastDiscovered != value))
				{
					this.OnDaysSinceLastDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._DaysSinceLastDiscovered = value;
					this.SendPropertyChanged("DaysSinceLastDiscovered");
					this.OnDaysSinceLastDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_Strength", DbType="Float")]
		public System.Nullable<double> Strength
		{
			get
			{
				return this._Strength;
			}
			set
			{
				if ((this._Strength != value))
				{
					this.OnStrengthChanging(value);
					this.SendPropertyChanging();
					this._Strength = value;
					this.SendPropertyChanged("Strength");
					this.OnStrengthChanged();
				}
			}
		}
		
		[Column(Storage="_Rank", DbType="Int NOT NULL")]
		public int Rank
		{
			get
			{
				return this._Rank;
			}
			set
			{
				if ((this._Rank != value))
				{
					this.OnRankChanging(value);
					this.SendPropertyChanging();
					this._Rank = value;
					this.SendPropertyChanged("Rank");
					this.OnRankChanged();
				}
			}
		}
		
		[Column(Storage="_DenseRank", DbType="Int NOT NULL")]
		public int DenseRank
		{
			get
			{
				return this._DenseRank;
			}
			set
			{
				if ((this._DenseRank != value))
				{
					this.OnDenseRankChanging(value);
					this.SendPropertyChanging();
					this._DenseRank = value;
					this.SendPropertyChanged("DenseRank");
					this.OnDenseRankChanged();
				}
			}
		}
		
		[Column(Storage="_NTile", DbType="TinyInt NOT NULL")]
		public byte NTile
		{
			get
			{
				return this._NTile;
			}
			set
			{
				if ((this._NTile != value))
				{
					this.OnNTileChanging(value);
					this.SendPropertyChanging();
					this._NTile = value;
					this.SendPropertyChanged("NTile");
					this.OnNTileChanged();
				}
			}
		}
		
		[Association(Name="Extension_DisallowedAbsoluteUris_MOST_POPULAR_EXTENSIONS_BY_DOMAIN", Storage="_Extension", ThisKey="ExtensionID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Extension Extension
		{
			get
			{
				return this._Extension.Entity;
			}
			set
			{
				Extension previousValue = this._Extension.Entity;
				if (((previousValue != value) 
							|| (this._Extension.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Extension.Entity = null;
						previousValue.DisallowedAbsoluteUris_MOST_POPULAR_EXTENSIONS_BY_DOMAIN = null;
					}
					this._Extension.Entity = value;
					if ((value != null))
					{
						value.DisallowedAbsoluteUris_MOST_POPULAR_EXTENSIONS_BY_DOMAIN = this;
						this._ExtensionID = value.ID;
					}
					else
					{
						this._ExtensionID = default(int);
					}
					this.SendPropertyChanged("Extension");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="rpt.DisallowedAbsoluteUris_MOST_POPULAR_EXTENSIONS_BY_EXTENSIONS")]
	public partial class DisallowedAbsoluteUris_MOST_POPULAR_EXTENSIONS_BY_EXTENSION : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RowNumber;
		
		private System.Nullable<System.DateTime> _InitiallyDiscovered;
		
		private System.DateTime _LastDiscovered;
		
		private int _ExtensionID;
		
		private int _Count;
		
		private System.Nullable<short> _DaysSinceInitiallyDiscovered;
		
		private short _DaysSinceLastDiscovered;
		
		private System.Nullable<double> _Strength;
		
		private int _Rank;
		
		private int _DenseRank;
		
		private byte _NTile;
		
		private EntityRef<Extension> _Extension;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRowNumberChanging(int value);
    partial void OnRowNumberChanged();
    partial void OnInitiallyDiscoveredChanging(System.Nullable<System.DateTime> value);
    partial void OnInitiallyDiscoveredChanged();
    partial void OnLastDiscoveredChanging(System.DateTime value);
    partial void OnLastDiscoveredChanged();
    partial void OnExtensionIDChanging(int value);
    partial void OnExtensionIDChanged();
    partial void OnCountChanging(int value);
    partial void OnCountChanged();
    partial void OnDaysSinceInitiallyDiscoveredChanging(System.Nullable<short> value);
    partial void OnDaysSinceInitiallyDiscoveredChanged();
    partial void OnDaysSinceLastDiscoveredChanging(short value);
    partial void OnDaysSinceLastDiscoveredChanged();
    partial void OnStrengthChanging(System.Nullable<double> value);
    partial void OnStrengthChanged();
    partial void OnRankChanging(int value);
    partial void OnRankChanged();
    partial void OnDenseRankChanging(int value);
    partial void OnDenseRankChanged();
    partial void OnNTileChanging(byte value);
    partial void OnNTileChanged();
    #endregion
		
		public DisallowedAbsoluteUris_MOST_POPULAR_EXTENSIONS_BY_EXTENSION()
		{
			this._Extension = default(EntityRef<Extension>);
			OnCreated();
		}
		
		[Column(Storage="_RowNumber", DbType="Int NOT NULL")]
		public int RowNumber
		{
			get
			{
				return this._RowNumber;
			}
			set
			{
				if ((this._RowNumber != value))
				{
					this.OnRowNumberChanging(value);
					this.SendPropertyChanging();
					this._RowNumber = value;
					this.SendPropertyChanged("RowNumber");
					this.OnRowNumberChanged();
				}
			}
		}
		
		[Column(Storage="_InitiallyDiscovered", DbType="DateTime")]
		public System.Nullable<System.DateTime> InitiallyDiscovered
		{
			get
			{
				return this._InitiallyDiscovered;
			}
			set
			{
				if ((this._InitiallyDiscovered != value))
				{
					this.OnInitiallyDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._InitiallyDiscovered = value;
					this.SendPropertyChanged("InitiallyDiscovered");
					this.OnInitiallyDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_LastDiscovered", DbType="DateTime NOT NULL")]
		public System.DateTime LastDiscovered
		{
			get
			{
				return this._LastDiscovered;
			}
			set
			{
				if ((this._LastDiscovered != value))
				{
					this.OnLastDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._LastDiscovered = value;
					this.SendPropertyChanged("LastDiscovered");
					this.OnLastDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_ExtensionID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ExtensionID
		{
			get
			{
				return this._ExtensionID;
			}
			set
			{
				if ((this._ExtensionID != value))
				{
					if (this._Extension.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnExtensionIDChanging(value);
					this.SendPropertyChanging();
					this._ExtensionID = value;
					this.SendPropertyChanged("ExtensionID");
					this.OnExtensionIDChanged();
				}
			}
		}
		
		[Column(Storage="_Count", DbType="Int NOT NULL")]
		public int Count
		{
			get
			{
				return this._Count;
			}
			set
			{
				if ((this._Count != value))
				{
					this.OnCountChanging(value);
					this.SendPropertyChanging();
					this._Count = value;
					this.SendPropertyChanged("Count");
					this.OnCountChanged();
				}
			}
		}
		
		[Column(Storage="_DaysSinceInitiallyDiscovered", DbType="SmallInt")]
		public System.Nullable<short> DaysSinceInitiallyDiscovered
		{
			get
			{
				return this._DaysSinceInitiallyDiscovered;
			}
			set
			{
				if ((this._DaysSinceInitiallyDiscovered != value))
				{
					this.OnDaysSinceInitiallyDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._DaysSinceInitiallyDiscovered = value;
					this.SendPropertyChanged("DaysSinceInitiallyDiscovered");
					this.OnDaysSinceInitiallyDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_DaysSinceLastDiscovered", DbType="SmallInt NOT NULL")]
		public short DaysSinceLastDiscovered
		{
			get
			{
				return this._DaysSinceLastDiscovered;
			}
			set
			{
				if ((this._DaysSinceLastDiscovered != value))
				{
					this.OnDaysSinceLastDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._DaysSinceLastDiscovered = value;
					this.SendPropertyChanged("DaysSinceLastDiscovered");
					this.OnDaysSinceLastDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_Strength", DbType="Float")]
		public System.Nullable<double> Strength
		{
			get
			{
				return this._Strength;
			}
			set
			{
				if ((this._Strength != value))
				{
					this.OnStrengthChanging(value);
					this.SendPropertyChanging();
					this._Strength = value;
					this.SendPropertyChanged("Strength");
					this.OnStrengthChanged();
				}
			}
		}
		
		[Column(Storage="_Rank", DbType="Int NOT NULL")]
		public int Rank
		{
			get
			{
				return this._Rank;
			}
			set
			{
				if ((this._Rank != value))
				{
					this.OnRankChanging(value);
					this.SendPropertyChanging();
					this._Rank = value;
					this.SendPropertyChanged("Rank");
					this.OnRankChanged();
				}
			}
		}
		
		[Column(Storage="_DenseRank", DbType="Int NOT NULL")]
		public int DenseRank
		{
			get
			{
				return this._DenseRank;
			}
			set
			{
				if ((this._DenseRank != value))
				{
					this.OnDenseRankChanging(value);
					this.SendPropertyChanging();
					this._DenseRank = value;
					this.SendPropertyChanged("DenseRank");
					this.OnDenseRankChanged();
				}
			}
		}
		
		[Column(Storage="_NTile", DbType="TinyInt NOT NULL")]
		public byte NTile
		{
			get
			{
				return this._NTile;
			}
			set
			{
				if ((this._NTile != value))
				{
					this.OnNTileChanging(value);
					this.SendPropertyChanging();
					this._NTile = value;
					this.SendPropertyChanged("NTile");
					this.OnNTileChanged();
				}
			}
		}
		
		[Association(Name="Extension_DisallowedAbsoluteUris_MOST_POPULAR_EXTENSIONS_BY_EXTENSION", Storage="_Extension", ThisKey="ExtensionID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Extension Extension
		{
			get
			{
				return this._Extension.Entity;
			}
			set
			{
				Extension previousValue = this._Extension.Entity;
				if (((previousValue != value) 
							|| (this._Extension.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Extension.Entity = null;
						previousValue.DisallowedAbsoluteUris_MOST_POPULAR_EXTENSIONS_BY_EXTENSION = null;
					}
					this._Extension.Entity = value;
					if ((value != null))
					{
						value.DisallowedAbsoluteUris_MOST_POPULAR_EXTENSIONS_BY_EXTENSION = this;
						this._ExtensionID = value.ID;
					}
					else
					{
						this._ExtensionID = default(int);
					}
					this.SendPropertyChanged("Extension");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="rpt.DisallowedAbsoluteUris_MOST_POPULAR_EXTENSIONS_BY_HOSTS")]
	public partial class DisallowedAbsoluteUris_MOST_POPULAR_EXTENSIONS_BY_HOST : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RowNumber;
		
		private System.Nullable<System.DateTime> _InitiallyDiscovered;
		
		private System.DateTime _LastDiscovered;
		
		private int _ExtensionID;
		
		private int _Count;
		
		private System.Nullable<short> _DaysSinceInitiallyDiscovered;
		
		private short _DaysSinceLastDiscovered;
		
		private System.Nullable<double> _Strength;
		
		private int _Rank;
		
		private int _DenseRank;
		
		private byte _NTile;
		
		private EntityRef<Extension> _Extension;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRowNumberChanging(int value);
    partial void OnRowNumberChanged();
    partial void OnInitiallyDiscoveredChanging(System.Nullable<System.DateTime> value);
    partial void OnInitiallyDiscoveredChanged();
    partial void OnLastDiscoveredChanging(System.DateTime value);
    partial void OnLastDiscoveredChanged();
    partial void OnExtensionIDChanging(int value);
    partial void OnExtensionIDChanged();
    partial void OnCountChanging(int value);
    partial void OnCountChanged();
    partial void OnDaysSinceInitiallyDiscoveredChanging(System.Nullable<short> value);
    partial void OnDaysSinceInitiallyDiscoveredChanged();
    partial void OnDaysSinceLastDiscoveredChanging(short value);
    partial void OnDaysSinceLastDiscoveredChanged();
    partial void OnStrengthChanging(System.Nullable<double> value);
    partial void OnStrengthChanged();
    partial void OnRankChanging(int value);
    partial void OnRankChanged();
    partial void OnDenseRankChanging(int value);
    partial void OnDenseRankChanged();
    partial void OnNTileChanging(byte value);
    partial void OnNTileChanged();
    #endregion
		
		public DisallowedAbsoluteUris_MOST_POPULAR_EXTENSIONS_BY_HOST()
		{
			this._Extension = default(EntityRef<Extension>);
			OnCreated();
		}
		
		[Column(Storage="_RowNumber", DbType="Int NOT NULL")]
		public int RowNumber
		{
			get
			{
				return this._RowNumber;
			}
			set
			{
				if ((this._RowNumber != value))
				{
					this.OnRowNumberChanging(value);
					this.SendPropertyChanging();
					this._RowNumber = value;
					this.SendPropertyChanged("RowNumber");
					this.OnRowNumberChanged();
				}
			}
		}
		
		[Column(Storage="_InitiallyDiscovered", DbType="DateTime")]
		public System.Nullable<System.DateTime> InitiallyDiscovered
		{
			get
			{
				return this._InitiallyDiscovered;
			}
			set
			{
				if ((this._InitiallyDiscovered != value))
				{
					this.OnInitiallyDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._InitiallyDiscovered = value;
					this.SendPropertyChanged("InitiallyDiscovered");
					this.OnInitiallyDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_LastDiscovered", DbType="DateTime NOT NULL")]
		public System.DateTime LastDiscovered
		{
			get
			{
				return this._LastDiscovered;
			}
			set
			{
				if ((this._LastDiscovered != value))
				{
					this.OnLastDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._LastDiscovered = value;
					this.SendPropertyChanged("LastDiscovered");
					this.OnLastDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_ExtensionID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ExtensionID
		{
			get
			{
				return this._ExtensionID;
			}
			set
			{
				if ((this._ExtensionID != value))
				{
					if (this._Extension.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnExtensionIDChanging(value);
					this.SendPropertyChanging();
					this._ExtensionID = value;
					this.SendPropertyChanged("ExtensionID");
					this.OnExtensionIDChanged();
				}
			}
		}
		
		[Column(Storage="_Count", DbType="Int NOT NULL")]
		public int Count
		{
			get
			{
				return this._Count;
			}
			set
			{
				if ((this._Count != value))
				{
					this.OnCountChanging(value);
					this.SendPropertyChanging();
					this._Count = value;
					this.SendPropertyChanged("Count");
					this.OnCountChanged();
				}
			}
		}
		
		[Column(Storage="_DaysSinceInitiallyDiscovered", DbType="SmallInt")]
		public System.Nullable<short> DaysSinceInitiallyDiscovered
		{
			get
			{
				return this._DaysSinceInitiallyDiscovered;
			}
			set
			{
				if ((this._DaysSinceInitiallyDiscovered != value))
				{
					this.OnDaysSinceInitiallyDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._DaysSinceInitiallyDiscovered = value;
					this.SendPropertyChanged("DaysSinceInitiallyDiscovered");
					this.OnDaysSinceInitiallyDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_DaysSinceLastDiscovered", DbType="SmallInt NOT NULL")]
		public short DaysSinceLastDiscovered
		{
			get
			{
				return this._DaysSinceLastDiscovered;
			}
			set
			{
				if ((this._DaysSinceLastDiscovered != value))
				{
					this.OnDaysSinceLastDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._DaysSinceLastDiscovered = value;
					this.SendPropertyChanged("DaysSinceLastDiscovered");
					this.OnDaysSinceLastDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_Strength", DbType="Float")]
		public System.Nullable<double> Strength
		{
			get
			{
				return this._Strength;
			}
			set
			{
				if ((this._Strength != value))
				{
					this.OnStrengthChanging(value);
					this.SendPropertyChanging();
					this._Strength = value;
					this.SendPropertyChanged("Strength");
					this.OnStrengthChanged();
				}
			}
		}
		
		[Column(Storage="_Rank", DbType="Int NOT NULL")]
		public int Rank
		{
			get
			{
				return this._Rank;
			}
			set
			{
				if ((this._Rank != value))
				{
					this.OnRankChanging(value);
					this.SendPropertyChanging();
					this._Rank = value;
					this.SendPropertyChanged("Rank");
					this.OnRankChanged();
				}
			}
		}
		
		[Column(Storage="_DenseRank", DbType="Int NOT NULL")]
		public int DenseRank
		{
			get
			{
				return this._DenseRank;
			}
			set
			{
				if ((this._DenseRank != value))
				{
					this.OnDenseRankChanging(value);
					this.SendPropertyChanging();
					this._DenseRank = value;
					this.SendPropertyChanged("DenseRank");
					this.OnDenseRankChanged();
				}
			}
		}
		
		[Column(Storage="_NTile", DbType="TinyInt NOT NULL")]
		public byte NTile
		{
			get
			{
				return this._NTile;
			}
			set
			{
				if ((this._NTile != value))
				{
					this.OnNTileChanging(value);
					this.SendPropertyChanging();
					this._NTile = value;
					this.SendPropertyChanged("NTile");
					this.OnNTileChanged();
				}
			}
		}
		
		[Association(Name="Extension_DisallowedAbsoluteUris_MOST_POPULAR_EXTENSIONS_BY_HOST", Storage="_Extension", ThisKey="ExtensionID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Extension Extension
		{
			get
			{
				return this._Extension.Entity;
			}
			set
			{
				Extension previousValue = this._Extension.Entity;
				if (((previousValue != value) 
							|| (this._Extension.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Extension.Entity = null;
						previousValue.DisallowedAbsoluteUris_MOST_POPULAR_EXTENSIONS_BY_HOST = null;
					}
					this._Extension.Entity = value;
					if ((value != null))
					{
						value.DisallowedAbsoluteUris_MOST_POPULAR_EXTENSIONS_BY_HOST = this;
						this._ExtensionID = value.ID;
					}
					else
					{
						this._ExtensionID = default(int);
					}
					this.SendPropertyChanged("Extension");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="rpt.DisallowedAbsoluteUris_MOST_POPULAR_EXTENSIONS_BY_SCHEMES")]
	public partial class DisallowedAbsoluteUris_MOST_POPULAR_EXTENSIONS_BY_SCHEME : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RowNumber;
		
		private System.Nullable<System.DateTime> _InitiallyDiscovered;
		
		private System.DateTime _LastDiscovered;
		
		private int _ExtensionID;
		
		private int _Count;
		
		private System.Nullable<short> _DaysSinceInitiallyDiscovered;
		
		private short _DaysSinceLastDiscovered;
		
		private System.Nullable<double> _Strength;
		
		private int _Rank;
		
		private int _DenseRank;
		
		private byte _NTile;
		
		private EntityRef<Extension> _Extension;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRowNumberChanging(int value);
    partial void OnRowNumberChanged();
    partial void OnInitiallyDiscoveredChanging(System.Nullable<System.DateTime> value);
    partial void OnInitiallyDiscoveredChanged();
    partial void OnLastDiscoveredChanging(System.DateTime value);
    partial void OnLastDiscoveredChanged();
    partial void OnExtensionIDChanging(int value);
    partial void OnExtensionIDChanged();
    partial void OnCountChanging(int value);
    partial void OnCountChanged();
    partial void OnDaysSinceInitiallyDiscoveredChanging(System.Nullable<short> value);
    partial void OnDaysSinceInitiallyDiscoveredChanged();
    partial void OnDaysSinceLastDiscoveredChanging(short value);
    partial void OnDaysSinceLastDiscoveredChanged();
    partial void OnStrengthChanging(System.Nullable<double> value);
    partial void OnStrengthChanged();
    partial void OnRankChanging(int value);
    partial void OnRankChanged();
    partial void OnDenseRankChanging(int value);
    partial void OnDenseRankChanged();
    partial void OnNTileChanging(byte value);
    partial void OnNTileChanged();
    #endregion
		
		public DisallowedAbsoluteUris_MOST_POPULAR_EXTENSIONS_BY_SCHEME()
		{
			this._Extension = default(EntityRef<Extension>);
			OnCreated();
		}
		
		[Column(Storage="_RowNumber", DbType="Int NOT NULL")]
		public int RowNumber
		{
			get
			{
				return this._RowNumber;
			}
			set
			{
				if ((this._RowNumber != value))
				{
					this.OnRowNumberChanging(value);
					this.SendPropertyChanging();
					this._RowNumber = value;
					this.SendPropertyChanged("RowNumber");
					this.OnRowNumberChanged();
				}
			}
		}
		
		[Column(Storage="_InitiallyDiscovered", DbType="DateTime")]
		public System.Nullable<System.DateTime> InitiallyDiscovered
		{
			get
			{
				return this._InitiallyDiscovered;
			}
			set
			{
				if ((this._InitiallyDiscovered != value))
				{
					this.OnInitiallyDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._InitiallyDiscovered = value;
					this.SendPropertyChanged("InitiallyDiscovered");
					this.OnInitiallyDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_LastDiscovered", DbType="DateTime NOT NULL")]
		public System.DateTime LastDiscovered
		{
			get
			{
				return this._LastDiscovered;
			}
			set
			{
				if ((this._LastDiscovered != value))
				{
					this.OnLastDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._LastDiscovered = value;
					this.SendPropertyChanged("LastDiscovered");
					this.OnLastDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_ExtensionID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ExtensionID
		{
			get
			{
				return this._ExtensionID;
			}
			set
			{
				if ((this._ExtensionID != value))
				{
					if (this._Extension.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnExtensionIDChanging(value);
					this.SendPropertyChanging();
					this._ExtensionID = value;
					this.SendPropertyChanged("ExtensionID");
					this.OnExtensionIDChanged();
				}
			}
		}
		
		[Column(Storage="_Count", DbType="Int NOT NULL")]
		public int Count
		{
			get
			{
				return this._Count;
			}
			set
			{
				if ((this._Count != value))
				{
					this.OnCountChanging(value);
					this.SendPropertyChanging();
					this._Count = value;
					this.SendPropertyChanged("Count");
					this.OnCountChanged();
				}
			}
		}
		
		[Column(Storage="_DaysSinceInitiallyDiscovered", DbType="SmallInt")]
		public System.Nullable<short> DaysSinceInitiallyDiscovered
		{
			get
			{
				return this._DaysSinceInitiallyDiscovered;
			}
			set
			{
				if ((this._DaysSinceInitiallyDiscovered != value))
				{
					this.OnDaysSinceInitiallyDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._DaysSinceInitiallyDiscovered = value;
					this.SendPropertyChanged("DaysSinceInitiallyDiscovered");
					this.OnDaysSinceInitiallyDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_DaysSinceLastDiscovered", DbType="SmallInt NOT NULL")]
		public short DaysSinceLastDiscovered
		{
			get
			{
				return this._DaysSinceLastDiscovered;
			}
			set
			{
				if ((this._DaysSinceLastDiscovered != value))
				{
					this.OnDaysSinceLastDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._DaysSinceLastDiscovered = value;
					this.SendPropertyChanged("DaysSinceLastDiscovered");
					this.OnDaysSinceLastDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_Strength", DbType="Float")]
		public System.Nullable<double> Strength
		{
			get
			{
				return this._Strength;
			}
			set
			{
				if ((this._Strength != value))
				{
					this.OnStrengthChanging(value);
					this.SendPropertyChanging();
					this._Strength = value;
					this.SendPropertyChanged("Strength");
					this.OnStrengthChanged();
				}
			}
		}
		
		[Column(Storage="_Rank", DbType="Int NOT NULL")]
		public int Rank
		{
			get
			{
				return this._Rank;
			}
			set
			{
				if ((this._Rank != value))
				{
					this.OnRankChanging(value);
					this.SendPropertyChanging();
					this._Rank = value;
					this.SendPropertyChanged("Rank");
					this.OnRankChanged();
				}
			}
		}
		
		[Column(Storage="_DenseRank", DbType="Int NOT NULL")]
		public int DenseRank
		{
			get
			{
				return this._DenseRank;
			}
			set
			{
				if ((this._DenseRank != value))
				{
					this.OnDenseRankChanging(value);
					this.SendPropertyChanging();
					this._DenseRank = value;
					this.SendPropertyChanged("DenseRank");
					this.OnDenseRankChanged();
				}
			}
		}
		
		[Column(Storage="_NTile", DbType="TinyInt NOT NULL")]
		public byte NTile
		{
			get
			{
				return this._NTile;
			}
			set
			{
				if ((this._NTile != value))
				{
					this.OnNTileChanging(value);
					this.SendPropertyChanging();
					this._NTile = value;
					this.SendPropertyChanged("NTile");
					this.OnNTileChanged();
				}
			}
		}
		
		[Association(Name="Extension_DisallowedAbsoluteUris_MOST_POPULAR_EXTENSIONS_BY_SCHEME", Storage="_Extension", ThisKey="ExtensionID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Extension Extension
		{
			get
			{
				return this._Extension.Entity;
			}
			set
			{
				Extension previousValue = this._Extension.Entity;
				if (((previousValue != value) 
							|| (this._Extension.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Extension.Entity = null;
						previousValue.DisallowedAbsoluteUris_MOST_POPULAR_EXTENSIONS_BY_SCHEME = null;
					}
					this._Extension.Entity = value;
					if ((value != null))
					{
						value.DisallowedAbsoluteUris_MOST_POPULAR_EXTENSIONS_BY_SCHEME = this;
						this._ExtensionID = value.ID;
					}
					else
					{
						this._ExtensionID = default(int);
					}
					this.SendPropertyChanged("Extension");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="rpt.DisallowedAbsoluteUris_MOST_POPULAR_HOSTS_BY_ABSOLUTEURIS")]
	public partial class DisallowedAbsoluteUris_MOST_POPULAR_HOSTS_BY_ABSOLUTEURI : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RowNumber;
		
		private System.Nullable<System.DateTime> _InitiallyDiscovered;
		
		private System.DateTime _LastDiscovered;
		
		private int _HostID;
		
		private int _Count;
		
		private System.Nullable<short> _DaysSinceInitiallyDiscovered;
		
		private short _DaysSinceLastDiscovered;
		
		private System.Nullable<double> _Strength;
		
		private int _Rank;
		
		private int _DenseRank;
		
		private byte _NTile;
		
		private EntityRef<Host> _Host;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRowNumberChanging(int value);
    partial void OnRowNumberChanged();
    partial void OnInitiallyDiscoveredChanging(System.Nullable<System.DateTime> value);
    partial void OnInitiallyDiscoveredChanged();
    partial void OnLastDiscoveredChanging(System.DateTime value);
    partial void OnLastDiscoveredChanged();
    partial void OnHostIDChanging(int value);
    partial void OnHostIDChanged();
    partial void OnCountChanging(int value);
    partial void OnCountChanged();
    partial void OnDaysSinceInitiallyDiscoveredChanging(System.Nullable<short> value);
    partial void OnDaysSinceInitiallyDiscoveredChanged();
    partial void OnDaysSinceLastDiscoveredChanging(short value);
    partial void OnDaysSinceLastDiscoveredChanged();
    partial void OnStrengthChanging(System.Nullable<double> value);
    partial void OnStrengthChanged();
    partial void OnRankChanging(int value);
    partial void OnRankChanged();
    partial void OnDenseRankChanging(int value);
    partial void OnDenseRankChanged();
    partial void OnNTileChanging(byte value);
    partial void OnNTileChanged();
    #endregion
		
		public DisallowedAbsoluteUris_MOST_POPULAR_HOSTS_BY_ABSOLUTEURI()
		{
			this._Host = default(EntityRef<Host>);
			OnCreated();
		}
		
		[Column(Storage="_RowNumber", DbType="Int NOT NULL")]
		public int RowNumber
		{
			get
			{
				return this._RowNumber;
			}
			set
			{
				if ((this._RowNumber != value))
				{
					this.OnRowNumberChanging(value);
					this.SendPropertyChanging();
					this._RowNumber = value;
					this.SendPropertyChanged("RowNumber");
					this.OnRowNumberChanged();
				}
			}
		}
		
		[Column(Storage="_InitiallyDiscovered", DbType="DateTime")]
		public System.Nullable<System.DateTime> InitiallyDiscovered
		{
			get
			{
				return this._InitiallyDiscovered;
			}
			set
			{
				if ((this._InitiallyDiscovered != value))
				{
					this.OnInitiallyDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._InitiallyDiscovered = value;
					this.SendPropertyChanged("InitiallyDiscovered");
					this.OnInitiallyDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_LastDiscovered", DbType="DateTime NOT NULL")]
		public System.DateTime LastDiscovered
		{
			get
			{
				return this._LastDiscovered;
			}
			set
			{
				if ((this._LastDiscovered != value))
				{
					this.OnLastDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._LastDiscovered = value;
					this.SendPropertyChanged("LastDiscovered");
					this.OnLastDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_HostID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int HostID
		{
			get
			{
				return this._HostID;
			}
			set
			{
				if ((this._HostID != value))
				{
					if (this._Host.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnHostIDChanging(value);
					this.SendPropertyChanging();
					this._HostID = value;
					this.SendPropertyChanged("HostID");
					this.OnHostIDChanged();
				}
			}
		}
		
		[Column(Storage="_Count", DbType="Int NOT NULL")]
		public int Count
		{
			get
			{
				return this._Count;
			}
			set
			{
				if ((this._Count != value))
				{
					this.OnCountChanging(value);
					this.SendPropertyChanging();
					this._Count = value;
					this.SendPropertyChanged("Count");
					this.OnCountChanged();
				}
			}
		}
		
		[Column(Storage="_DaysSinceInitiallyDiscovered", DbType="SmallInt")]
		public System.Nullable<short> DaysSinceInitiallyDiscovered
		{
			get
			{
				return this._DaysSinceInitiallyDiscovered;
			}
			set
			{
				if ((this._DaysSinceInitiallyDiscovered != value))
				{
					this.OnDaysSinceInitiallyDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._DaysSinceInitiallyDiscovered = value;
					this.SendPropertyChanged("DaysSinceInitiallyDiscovered");
					this.OnDaysSinceInitiallyDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_DaysSinceLastDiscovered", DbType="SmallInt NOT NULL")]
		public short DaysSinceLastDiscovered
		{
			get
			{
				return this._DaysSinceLastDiscovered;
			}
			set
			{
				if ((this._DaysSinceLastDiscovered != value))
				{
					this.OnDaysSinceLastDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._DaysSinceLastDiscovered = value;
					this.SendPropertyChanged("DaysSinceLastDiscovered");
					this.OnDaysSinceLastDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_Strength", DbType="Float")]
		public System.Nullable<double> Strength
		{
			get
			{
				return this._Strength;
			}
			set
			{
				if ((this._Strength != value))
				{
					this.OnStrengthChanging(value);
					this.SendPropertyChanging();
					this._Strength = value;
					this.SendPropertyChanged("Strength");
					this.OnStrengthChanged();
				}
			}
		}
		
		[Column(Storage="_Rank", DbType="Int NOT NULL")]
		public int Rank
		{
			get
			{
				return this._Rank;
			}
			set
			{
				if ((this._Rank != value))
				{
					this.OnRankChanging(value);
					this.SendPropertyChanging();
					this._Rank = value;
					this.SendPropertyChanged("Rank");
					this.OnRankChanged();
				}
			}
		}
		
		[Column(Storage="_DenseRank", DbType="Int NOT NULL")]
		public int DenseRank
		{
			get
			{
				return this._DenseRank;
			}
			set
			{
				if ((this._DenseRank != value))
				{
					this.OnDenseRankChanging(value);
					this.SendPropertyChanging();
					this._DenseRank = value;
					this.SendPropertyChanged("DenseRank");
					this.OnDenseRankChanged();
				}
			}
		}
		
		[Column(Storage="_NTile", DbType="TinyInt NOT NULL")]
		public byte NTile
		{
			get
			{
				return this._NTile;
			}
			set
			{
				if ((this._NTile != value))
				{
					this.OnNTileChanging(value);
					this.SendPropertyChanging();
					this._NTile = value;
					this.SendPropertyChanged("NTile");
					this.OnNTileChanged();
				}
			}
		}
		
		[Association(Name="Host_DisallowedAbsoluteUris_MOST_POPULAR_HOSTS_BY_ABSOLUTEURI", Storage="_Host", ThisKey="HostID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Host Host
		{
			get
			{
				return this._Host.Entity;
			}
			set
			{
				Host previousValue = this._Host.Entity;
				if (((previousValue != value) 
							|| (this._Host.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Host.Entity = null;
						previousValue.DisallowedAbsoluteUris_MOST_POPULAR_HOSTS_BY_ABSOLUTEURI = null;
					}
					this._Host.Entity = value;
					if ((value != null))
					{
						value.DisallowedAbsoluteUris_MOST_POPULAR_HOSTS_BY_ABSOLUTEURI = this;
						this._HostID = value.ID;
					}
					else
					{
						this._HostID = default(int);
					}
					this.SendPropertyChanged("Host");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="rpt.DisallowedAbsoluteUris_MOST_POPULAR_HOSTS_BY_DOMAINS")]
	public partial class DisallowedAbsoluteUris_MOST_POPULAR_HOSTS_BY_DOMAIN : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RowNumber;
		
		private System.Nullable<System.DateTime> _InitiallyDiscovered;
		
		private System.DateTime _LastDiscovered;
		
		private int _HostID;
		
		private int _Count;
		
		private System.Nullable<short> _DaysSinceInitiallyDiscovered;
		
		private short _DaysSinceLastDiscovered;
		
		private System.Nullable<double> _Strength;
		
		private int _Rank;
		
		private int _DenseRank;
		
		private byte _NTile;
		
		private EntityRef<Host> _Host;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRowNumberChanging(int value);
    partial void OnRowNumberChanged();
    partial void OnInitiallyDiscoveredChanging(System.Nullable<System.DateTime> value);
    partial void OnInitiallyDiscoveredChanged();
    partial void OnLastDiscoveredChanging(System.DateTime value);
    partial void OnLastDiscoveredChanged();
    partial void OnHostIDChanging(int value);
    partial void OnHostIDChanged();
    partial void OnCountChanging(int value);
    partial void OnCountChanged();
    partial void OnDaysSinceInitiallyDiscoveredChanging(System.Nullable<short> value);
    partial void OnDaysSinceInitiallyDiscoveredChanged();
    partial void OnDaysSinceLastDiscoveredChanging(short value);
    partial void OnDaysSinceLastDiscoveredChanged();
    partial void OnStrengthChanging(System.Nullable<double> value);
    partial void OnStrengthChanged();
    partial void OnRankChanging(int value);
    partial void OnRankChanged();
    partial void OnDenseRankChanging(int value);
    partial void OnDenseRankChanged();
    partial void OnNTileChanging(byte value);
    partial void OnNTileChanged();
    #endregion
		
		public DisallowedAbsoluteUris_MOST_POPULAR_HOSTS_BY_DOMAIN()
		{
			this._Host = default(EntityRef<Host>);
			OnCreated();
		}
		
		[Column(Storage="_RowNumber", DbType="Int NOT NULL")]
		public int RowNumber
		{
			get
			{
				return this._RowNumber;
			}
			set
			{
				if ((this._RowNumber != value))
				{
					this.OnRowNumberChanging(value);
					this.SendPropertyChanging();
					this._RowNumber = value;
					this.SendPropertyChanged("RowNumber");
					this.OnRowNumberChanged();
				}
			}
		}
		
		[Column(Storage="_InitiallyDiscovered", DbType="DateTime")]
		public System.Nullable<System.DateTime> InitiallyDiscovered
		{
			get
			{
				return this._InitiallyDiscovered;
			}
			set
			{
				if ((this._InitiallyDiscovered != value))
				{
					this.OnInitiallyDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._InitiallyDiscovered = value;
					this.SendPropertyChanged("InitiallyDiscovered");
					this.OnInitiallyDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_LastDiscovered", DbType="DateTime NOT NULL")]
		public System.DateTime LastDiscovered
		{
			get
			{
				return this._LastDiscovered;
			}
			set
			{
				if ((this._LastDiscovered != value))
				{
					this.OnLastDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._LastDiscovered = value;
					this.SendPropertyChanged("LastDiscovered");
					this.OnLastDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_HostID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int HostID
		{
			get
			{
				return this._HostID;
			}
			set
			{
				if ((this._HostID != value))
				{
					if (this._Host.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnHostIDChanging(value);
					this.SendPropertyChanging();
					this._HostID = value;
					this.SendPropertyChanged("HostID");
					this.OnHostIDChanged();
				}
			}
		}
		
		[Column(Storage="_Count", DbType="Int NOT NULL")]
		public int Count
		{
			get
			{
				return this._Count;
			}
			set
			{
				if ((this._Count != value))
				{
					this.OnCountChanging(value);
					this.SendPropertyChanging();
					this._Count = value;
					this.SendPropertyChanged("Count");
					this.OnCountChanged();
				}
			}
		}
		
		[Column(Storage="_DaysSinceInitiallyDiscovered", DbType="SmallInt")]
		public System.Nullable<short> DaysSinceInitiallyDiscovered
		{
			get
			{
				return this._DaysSinceInitiallyDiscovered;
			}
			set
			{
				if ((this._DaysSinceInitiallyDiscovered != value))
				{
					this.OnDaysSinceInitiallyDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._DaysSinceInitiallyDiscovered = value;
					this.SendPropertyChanged("DaysSinceInitiallyDiscovered");
					this.OnDaysSinceInitiallyDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_DaysSinceLastDiscovered", DbType="SmallInt NOT NULL")]
		public short DaysSinceLastDiscovered
		{
			get
			{
				return this._DaysSinceLastDiscovered;
			}
			set
			{
				if ((this._DaysSinceLastDiscovered != value))
				{
					this.OnDaysSinceLastDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._DaysSinceLastDiscovered = value;
					this.SendPropertyChanged("DaysSinceLastDiscovered");
					this.OnDaysSinceLastDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_Strength", DbType="Float")]
		public System.Nullable<double> Strength
		{
			get
			{
				return this._Strength;
			}
			set
			{
				if ((this._Strength != value))
				{
					this.OnStrengthChanging(value);
					this.SendPropertyChanging();
					this._Strength = value;
					this.SendPropertyChanged("Strength");
					this.OnStrengthChanged();
				}
			}
		}
		
		[Column(Storage="_Rank", DbType="Int NOT NULL")]
		public int Rank
		{
			get
			{
				return this._Rank;
			}
			set
			{
				if ((this._Rank != value))
				{
					this.OnRankChanging(value);
					this.SendPropertyChanging();
					this._Rank = value;
					this.SendPropertyChanged("Rank");
					this.OnRankChanged();
				}
			}
		}
		
		[Column(Storage="_DenseRank", DbType="Int NOT NULL")]
		public int DenseRank
		{
			get
			{
				return this._DenseRank;
			}
			set
			{
				if ((this._DenseRank != value))
				{
					this.OnDenseRankChanging(value);
					this.SendPropertyChanging();
					this._DenseRank = value;
					this.SendPropertyChanged("DenseRank");
					this.OnDenseRankChanged();
				}
			}
		}
		
		[Column(Storage="_NTile", DbType="TinyInt NOT NULL")]
		public byte NTile
		{
			get
			{
				return this._NTile;
			}
			set
			{
				if ((this._NTile != value))
				{
					this.OnNTileChanging(value);
					this.SendPropertyChanging();
					this._NTile = value;
					this.SendPropertyChanged("NTile");
					this.OnNTileChanged();
				}
			}
		}
		
		[Association(Name="Host_DisallowedAbsoluteUris_MOST_POPULAR_HOSTS_BY_DOMAIN", Storage="_Host", ThisKey="HostID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Host Host
		{
			get
			{
				return this._Host.Entity;
			}
			set
			{
				Host previousValue = this._Host.Entity;
				if (((previousValue != value) 
							|| (this._Host.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Host.Entity = null;
						previousValue.DisallowedAbsoluteUris_MOST_POPULAR_HOSTS_BY_DOMAIN = null;
					}
					this._Host.Entity = value;
					if ((value != null))
					{
						value.DisallowedAbsoluteUris_MOST_POPULAR_HOSTS_BY_DOMAIN = this;
						this._HostID = value.ID;
					}
					else
					{
						this._HostID = default(int);
					}
					this.SendPropertyChanged("Host");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="rpt.DisallowedAbsoluteUris_MOST_POPULAR_HOSTS_BY_EXTENSIONS")]
	public partial class DisallowedAbsoluteUris_MOST_POPULAR_HOSTS_BY_EXTENSION : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RowNumber;
		
		private System.Nullable<System.DateTime> _InitiallyDiscovered;
		
		private System.DateTime _LastDiscovered;
		
		private int _HostID;
		
		private int _Count;
		
		private System.Nullable<short> _DaysSinceInitiallyDiscovered;
		
		private short _DaysSinceLastDiscovered;
		
		private System.Nullable<double> _Strength;
		
		private int _Rank;
		
		private int _DenseRank;
		
		private byte _NTile;
		
		private EntityRef<Host> _Host;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRowNumberChanging(int value);
    partial void OnRowNumberChanged();
    partial void OnInitiallyDiscoveredChanging(System.Nullable<System.DateTime> value);
    partial void OnInitiallyDiscoveredChanged();
    partial void OnLastDiscoveredChanging(System.DateTime value);
    partial void OnLastDiscoveredChanged();
    partial void OnHostIDChanging(int value);
    partial void OnHostIDChanged();
    partial void OnCountChanging(int value);
    partial void OnCountChanged();
    partial void OnDaysSinceInitiallyDiscoveredChanging(System.Nullable<short> value);
    partial void OnDaysSinceInitiallyDiscoveredChanged();
    partial void OnDaysSinceLastDiscoveredChanging(short value);
    partial void OnDaysSinceLastDiscoveredChanged();
    partial void OnStrengthChanging(System.Nullable<double> value);
    partial void OnStrengthChanged();
    partial void OnRankChanging(int value);
    partial void OnRankChanged();
    partial void OnDenseRankChanging(int value);
    partial void OnDenseRankChanged();
    partial void OnNTileChanging(byte value);
    partial void OnNTileChanged();
    #endregion
		
		public DisallowedAbsoluteUris_MOST_POPULAR_HOSTS_BY_EXTENSION()
		{
			this._Host = default(EntityRef<Host>);
			OnCreated();
		}
		
		[Column(Storage="_RowNumber", DbType="Int NOT NULL")]
		public int RowNumber
		{
			get
			{
				return this._RowNumber;
			}
			set
			{
				if ((this._RowNumber != value))
				{
					this.OnRowNumberChanging(value);
					this.SendPropertyChanging();
					this._RowNumber = value;
					this.SendPropertyChanged("RowNumber");
					this.OnRowNumberChanged();
				}
			}
		}
		
		[Column(Storage="_InitiallyDiscovered", DbType="DateTime")]
		public System.Nullable<System.DateTime> InitiallyDiscovered
		{
			get
			{
				return this._InitiallyDiscovered;
			}
			set
			{
				if ((this._InitiallyDiscovered != value))
				{
					this.OnInitiallyDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._InitiallyDiscovered = value;
					this.SendPropertyChanged("InitiallyDiscovered");
					this.OnInitiallyDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_LastDiscovered", DbType="DateTime NOT NULL")]
		public System.DateTime LastDiscovered
		{
			get
			{
				return this._LastDiscovered;
			}
			set
			{
				if ((this._LastDiscovered != value))
				{
					this.OnLastDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._LastDiscovered = value;
					this.SendPropertyChanged("LastDiscovered");
					this.OnLastDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_HostID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int HostID
		{
			get
			{
				return this._HostID;
			}
			set
			{
				if ((this._HostID != value))
				{
					if (this._Host.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnHostIDChanging(value);
					this.SendPropertyChanging();
					this._HostID = value;
					this.SendPropertyChanged("HostID");
					this.OnHostIDChanged();
				}
			}
		}
		
		[Column(Storage="_Count", DbType="Int NOT NULL")]
		public int Count
		{
			get
			{
				return this._Count;
			}
			set
			{
				if ((this._Count != value))
				{
					this.OnCountChanging(value);
					this.SendPropertyChanging();
					this._Count = value;
					this.SendPropertyChanged("Count");
					this.OnCountChanged();
				}
			}
		}
		
		[Column(Storage="_DaysSinceInitiallyDiscovered", DbType="SmallInt")]
		public System.Nullable<short> DaysSinceInitiallyDiscovered
		{
			get
			{
				return this._DaysSinceInitiallyDiscovered;
			}
			set
			{
				if ((this._DaysSinceInitiallyDiscovered != value))
				{
					this.OnDaysSinceInitiallyDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._DaysSinceInitiallyDiscovered = value;
					this.SendPropertyChanged("DaysSinceInitiallyDiscovered");
					this.OnDaysSinceInitiallyDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_DaysSinceLastDiscovered", DbType="SmallInt NOT NULL")]
		public short DaysSinceLastDiscovered
		{
			get
			{
				return this._DaysSinceLastDiscovered;
			}
			set
			{
				if ((this._DaysSinceLastDiscovered != value))
				{
					this.OnDaysSinceLastDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._DaysSinceLastDiscovered = value;
					this.SendPropertyChanged("DaysSinceLastDiscovered");
					this.OnDaysSinceLastDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_Strength", DbType="Float")]
		public System.Nullable<double> Strength
		{
			get
			{
				return this._Strength;
			}
			set
			{
				if ((this._Strength != value))
				{
					this.OnStrengthChanging(value);
					this.SendPropertyChanging();
					this._Strength = value;
					this.SendPropertyChanged("Strength");
					this.OnStrengthChanged();
				}
			}
		}
		
		[Column(Storage="_Rank", DbType="Int NOT NULL")]
		public int Rank
		{
			get
			{
				return this._Rank;
			}
			set
			{
				if ((this._Rank != value))
				{
					this.OnRankChanging(value);
					this.SendPropertyChanging();
					this._Rank = value;
					this.SendPropertyChanged("Rank");
					this.OnRankChanged();
				}
			}
		}
		
		[Column(Storage="_DenseRank", DbType="Int NOT NULL")]
		public int DenseRank
		{
			get
			{
				return this._DenseRank;
			}
			set
			{
				if ((this._DenseRank != value))
				{
					this.OnDenseRankChanging(value);
					this.SendPropertyChanging();
					this._DenseRank = value;
					this.SendPropertyChanged("DenseRank");
					this.OnDenseRankChanged();
				}
			}
		}
		
		[Column(Storage="_NTile", DbType="TinyInt NOT NULL")]
		public byte NTile
		{
			get
			{
				return this._NTile;
			}
			set
			{
				if ((this._NTile != value))
				{
					this.OnNTileChanging(value);
					this.SendPropertyChanging();
					this._NTile = value;
					this.SendPropertyChanged("NTile");
					this.OnNTileChanged();
				}
			}
		}
		
		[Association(Name="Host_DisallowedAbsoluteUris_MOST_POPULAR_HOSTS_BY_EXTENSION", Storage="_Host", ThisKey="HostID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Host Host
		{
			get
			{
				return this._Host.Entity;
			}
			set
			{
				Host previousValue = this._Host.Entity;
				if (((previousValue != value) 
							|| (this._Host.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Host.Entity = null;
						previousValue.DisallowedAbsoluteUris_MOST_POPULAR_HOSTS_BY_EXTENSION = null;
					}
					this._Host.Entity = value;
					if ((value != null))
					{
						value.DisallowedAbsoluteUris_MOST_POPULAR_HOSTS_BY_EXTENSION = this;
						this._HostID = value.ID;
					}
					else
					{
						this._HostID = default(int);
					}
					this.SendPropertyChanged("Host");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="rpt.DisallowedAbsoluteUris_MOST_POPULAR_HOSTS_BY_HOSTS")]
	public partial class DisallowedAbsoluteUris_MOST_POPULAR_HOSTS_BY_HOST : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RowNumber;
		
		private System.Nullable<System.DateTime> _InitiallyDiscovered;
		
		private System.DateTime _LastDiscovered;
		
		private int _HostID;
		
		private int _Count;
		
		private System.Nullable<short> _DaysSinceInitiallyDiscovered;
		
		private short _DaysSinceLastDiscovered;
		
		private System.Nullable<double> _Strength;
		
		private int _Rank;
		
		private int _DenseRank;
		
		private byte _NTile;
		
		private EntityRef<Host> _Host;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRowNumberChanging(int value);
    partial void OnRowNumberChanged();
    partial void OnInitiallyDiscoveredChanging(System.Nullable<System.DateTime> value);
    partial void OnInitiallyDiscoveredChanged();
    partial void OnLastDiscoveredChanging(System.DateTime value);
    partial void OnLastDiscoveredChanged();
    partial void OnHostIDChanging(int value);
    partial void OnHostIDChanged();
    partial void OnCountChanging(int value);
    partial void OnCountChanged();
    partial void OnDaysSinceInitiallyDiscoveredChanging(System.Nullable<short> value);
    partial void OnDaysSinceInitiallyDiscoveredChanged();
    partial void OnDaysSinceLastDiscoveredChanging(short value);
    partial void OnDaysSinceLastDiscoveredChanged();
    partial void OnStrengthChanging(System.Nullable<double> value);
    partial void OnStrengthChanged();
    partial void OnRankChanging(int value);
    partial void OnRankChanged();
    partial void OnDenseRankChanging(int value);
    partial void OnDenseRankChanged();
    partial void OnNTileChanging(byte value);
    partial void OnNTileChanged();
    #endregion
		
		public DisallowedAbsoluteUris_MOST_POPULAR_HOSTS_BY_HOST()
		{
			this._Host = default(EntityRef<Host>);
			OnCreated();
		}
		
		[Column(Storage="_RowNumber", DbType="Int NOT NULL")]
		public int RowNumber
		{
			get
			{
				return this._RowNumber;
			}
			set
			{
				if ((this._RowNumber != value))
				{
					this.OnRowNumberChanging(value);
					this.SendPropertyChanging();
					this._RowNumber = value;
					this.SendPropertyChanged("RowNumber");
					this.OnRowNumberChanged();
				}
			}
		}
		
		[Column(Storage="_InitiallyDiscovered", DbType="DateTime")]
		public System.Nullable<System.DateTime> InitiallyDiscovered
		{
			get
			{
				return this._InitiallyDiscovered;
			}
			set
			{
				if ((this._InitiallyDiscovered != value))
				{
					this.OnInitiallyDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._InitiallyDiscovered = value;
					this.SendPropertyChanged("InitiallyDiscovered");
					this.OnInitiallyDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_LastDiscovered", DbType="DateTime NOT NULL")]
		public System.DateTime LastDiscovered
		{
			get
			{
				return this._LastDiscovered;
			}
			set
			{
				if ((this._LastDiscovered != value))
				{
					this.OnLastDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._LastDiscovered = value;
					this.SendPropertyChanged("LastDiscovered");
					this.OnLastDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_HostID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int HostID
		{
			get
			{
				return this._HostID;
			}
			set
			{
				if ((this._HostID != value))
				{
					if (this._Host.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnHostIDChanging(value);
					this.SendPropertyChanging();
					this._HostID = value;
					this.SendPropertyChanged("HostID");
					this.OnHostIDChanged();
				}
			}
		}
		
		[Column(Storage="_Count", DbType="Int NOT NULL")]
		public int Count
		{
			get
			{
				return this._Count;
			}
			set
			{
				if ((this._Count != value))
				{
					this.OnCountChanging(value);
					this.SendPropertyChanging();
					this._Count = value;
					this.SendPropertyChanged("Count");
					this.OnCountChanged();
				}
			}
		}
		
		[Column(Storage="_DaysSinceInitiallyDiscovered", DbType="SmallInt")]
		public System.Nullable<short> DaysSinceInitiallyDiscovered
		{
			get
			{
				return this._DaysSinceInitiallyDiscovered;
			}
			set
			{
				if ((this._DaysSinceInitiallyDiscovered != value))
				{
					this.OnDaysSinceInitiallyDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._DaysSinceInitiallyDiscovered = value;
					this.SendPropertyChanged("DaysSinceInitiallyDiscovered");
					this.OnDaysSinceInitiallyDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_DaysSinceLastDiscovered", DbType="SmallInt NOT NULL")]
		public short DaysSinceLastDiscovered
		{
			get
			{
				return this._DaysSinceLastDiscovered;
			}
			set
			{
				if ((this._DaysSinceLastDiscovered != value))
				{
					this.OnDaysSinceLastDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._DaysSinceLastDiscovered = value;
					this.SendPropertyChanged("DaysSinceLastDiscovered");
					this.OnDaysSinceLastDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_Strength", DbType="Float")]
		public System.Nullable<double> Strength
		{
			get
			{
				return this._Strength;
			}
			set
			{
				if ((this._Strength != value))
				{
					this.OnStrengthChanging(value);
					this.SendPropertyChanging();
					this._Strength = value;
					this.SendPropertyChanged("Strength");
					this.OnStrengthChanged();
				}
			}
		}
		
		[Column(Storage="_Rank", DbType="Int NOT NULL")]
		public int Rank
		{
			get
			{
				return this._Rank;
			}
			set
			{
				if ((this._Rank != value))
				{
					this.OnRankChanging(value);
					this.SendPropertyChanging();
					this._Rank = value;
					this.SendPropertyChanged("Rank");
					this.OnRankChanged();
				}
			}
		}
		
		[Column(Storage="_DenseRank", DbType="Int NOT NULL")]
		public int DenseRank
		{
			get
			{
				return this._DenseRank;
			}
			set
			{
				if ((this._DenseRank != value))
				{
					this.OnDenseRankChanging(value);
					this.SendPropertyChanging();
					this._DenseRank = value;
					this.SendPropertyChanged("DenseRank");
					this.OnDenseRankChanged();
				}
			}
		}
		
		[Column(Storage="_NTile", DbType="TinyInt NOT NULL")]
		public byte NTile
		{
			get
			{
				return this._NTile;
			}
			set
			{
				if ((this._NTile != value))
				{
					this.OnNTileChanging(value);
					this.SendPropertyChanging();
					this._NTile = value;
					this.SendPropertyChanged("NTile");
					this.OnNTileChanged();
				}
			}
		}
		
		[Association(Name="Host_DisallowedAbsoluteUris_MOST_POPULAR_HOSTS_BY_HOST", Storage="_Host", ThisKey="HostID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Host Host
		{
			get
			{
				return this._Host.Entity;
			}
			set
			{
				Host previousValue = this._Host.Entity;
				if (((previousValue != value) 
							|| (this._Host.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Host.Entity = null;
						previousValue.DisallowedAbsoluteUris_MOST_POPULAR_HOSTS_BY_HOST = null;
					}
					this._Host.Entity = value;
					if ((value != null))
					{
						value.DisallowedAbsoluteUris_MOST_POPULAR_HOSTS_BY_HOST = this;
						this._HostID = value.ID;
					}
					else
					{
						this._HostID = default(int);
					}
					this.SendPropertyChanged("Host");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="rpt.DisallowedAbsoluteUris_MOST_POPULAR_HOSTS_BY_SCHEMES")]
	public partial class DisallowedAbsoluteUris_MOST_POPULAR_HOSTS_BY_SCHEME : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RowNumber;
		
		private System.Nullable<System.DateTime> _InitiallyDiscovered;
		
		private System.DateTime _LastDiscovered;
		
		private int _HostID;
		
		private int _Count;
		
		private System.Nullable<short> _DaysSinceInitiallyDiscovered;
		
		private short _DaysSinceLastDiscovered;
		
		private System.Nullable<double> _Strength;
		
		private int _Rank;
		
		private int _DenseRank;
		
		private byte _NTile;
		
		private EntityRef<Host> _Host;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRowNumberChanging(int value);
    partial void OnRowNumberChanged();
    partial void OnInitiallyDiscoveredChanging(System.Nullable<System.DateTime> value);
    partial void OnInitiallyDiscoveredChanged();
    partial void OnLastDiscoveredChanging(System.DateTime value);
    partial void OnLastDiscoveredChanged();
    partial void OnHostIDChanging(int value);
    partial void OnHostIDChanged();
    partial void OnCountChanging(int value);
    partial void OnCountChanged();
    partial void OnDaysSinceInitiallyDiscoveredChanging(System.Nullable<short> value);
    partial void OnDaysSinceInitiallyDiscoveredChanged();
    partial void OnDaysSinceLastDiscoveredChanging(short value);
    partial void OnDaysSinceLastDiscoveredChanged();
    partial void OnStrengthChanging(System.Nullable<double> value);
    partial void OnStrengthChanged();
    partial void OnRankChanging(int value);
    partial void OnRankChanged();
    partial void OnDenseRankChanging(int value);
    partial void OnDenseRankChanged();
    partial void OnNTileChanging(byte value);
    partial void OnNTileChanged();
    #endregion
		
		public DisallowedAbsoluteUris_MOST_POPULAR_HOSTS_BY_SCHEME()
		{
			this._Host = default(EntityRef<Host>);
			OnCreated();
		}
		
		[Column(Storage="_RowNumber", DbType="Int NOT NULL")]
		public int RowNumber
		{
			get
			{
				return this._RowNumber;
			}
			set
			{
				if ((this._RowNumber != value))
				{
					this.OnRowNumberChanging(value);
					this.SendPropertyChanging();
					this._RowNumber = value;
					this.SendPropertyChanged("RowNumber");
					this.OnRowNumberChanged();
				}
			}
		}
		
		[Column(Storage="_InitiallyDiscovered", DbType="DateTime")]
		public System.Nullable<System.DateTime> InitiallyDiscovered
		{
			get
			{
				return this._InitiallyDiscovered;
			}
			set
			{
				if ((this._InitiallyDiscovered != value))
				{
					this.OnInitiallyDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._InitiallyDiscovered = value;
					this.SendPropertyChanged("InitiallyDiscovered");
					this.OnInitiallyDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_LastDiscovered", DbType="DateTime NOT NULL")]
		public System.DateTime LastDiscovered
		{
			get
			{
				return this._LastDiscovered;
			}
			set
			{
				if ((this._LastDiscovered != value))
				{
					this.OnLastDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._LastDiscovered = value;
					this.SendPropertyChanged("LastDiscovered");
					this.OnLastDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_HostID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int HostID
		{
			get
			{
				return this._HostID;
			}
			set
			{
				if ((this._HostID != value))
				{
					if (this._Host.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnHostIDChanging(value);
					this.SendPropertyChanging();
					this._HostID = value;
					this.SendPropertyChanged("HostID");
					this.OnHostIDChanged();
				}
			}
		}
		
		[Column(Storage="_Count", DbType="Int NOT NULL")]
		public int Count
		{
			get
			{
				return this._Count;
			}
			set
			{
				if ((this._Count != value))
				{
					this.OnCountChanging(value);
					this.SendPropertyChanging();
					this._Count = value;
					this.SendPropertyChanged("Count");
					this.OnCountChanged();
				}
			}
		}
		
		[Column(Storage="_DaysSinceInitiallyDiscovered", DbType="SmallInt")]
		public System.Nullable<short> DaysSinceInitiallyDiscovered
		{
			get
			{
				return this._DaysSinceInitiallyDiscovered;
			}
			set
			{
				if ((this._DaysSinceInitiallyDiscovered != value))
				{
					this.OnDaysSinceInitiallyDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._DaysSinceInitiallyDiscovered = value;
					this.SendPropertyChanged("DaysSinceInitiallyDiscovered");
					this.OnDaysSinceInitiallyDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_DaysSinceLastDiscovered", DbType="SmallInt NOT NULL")]
		public short DaysSinceLastDiscovered
		{
			get
			{
				return this._DaysSinceLastDiscovered;
			}
			set
			{
				if ((this._DaysSinceLastDiscovered != value))
				{
					this.OnDaysSinceLastDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._DaysSinceLastDiscovered = value;
					this.SendPropertyChanged("DaysSinceLastDiscovered");
					this.OnDaysSinceLastDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_Strength", DbType="Float")]
		public System.Nullable<double> Strength
		{
			get
			{
				return this._Strength;
			}
			set
			{
				if ((this._Strength != value))
				{
					this.OnStrengthChanging(value);
					this.SendPropertyChanging();
					this._Strength = value;
					this.SendPropertyChanged("Strength");
					this.OnStrengthChanged();
				}
			}
		}
		
		[Column(Storage="_Rank", DbType="Int NOT NULL")]
		public int Rank
		{
			get
			{
				return this._Rank;
			}
			set
			{
				if ((this._Rank != value))
				{
					this.OnRankChanging(value);
					this.SendPropertyChanging();
					this._Rank = value;
					this.SendPropertyChanged("Rank");
					this.OnRankChanged();
				}
			}
		}
		
		[Column(Storage="_DenseRank", DbType="Int NOT NULL")]
		public int DenseRank
		{
			get
			{
				return this._DenseRank;
			}
			set
			{
				if ((this._DenseRank != value))
				{
					this.OnDenseRankChanging(value);
					this.SendPropertyChanging();
					this._DenseRank = value;
					this.SendPropertyChanged("DenseRank");
					this.OnDenseRankChanged();
				}
			}
		}
		
		[Column(Storage="_NTile", DbType="TinyInt NOT NULL")]
		public byte NTile
		{
			get
			{
				return this._NTile;
			}
			set
			{
				if ((this._NTile != value))
				{
					this.OnNTileChanging(value);
					this.SendPropertyChanging();
					this._NTile = value;
					this.SendPropertyChanged("NTile");
					this.OnNTileChanged();
				}
			}
		}
		
		[Association(Name="Host_DisallowedAbsoluteUris_MOST_POPULAR_HOSTS_BY_SCHEME", Storage="_Host", ThisKey="HostID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Host Host
		{
			get
			{
				return this._Host.Entity;
			}
			set
			{
				Host previousValue = this._Host.Entity;
				if (((previousValue != value) 
							|| (this._Host.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Host.Entity = null;
						previousValue.DisallowedAbsoluteUris_MOST_POPULAR_HOSTS_BY_SCHEME = null;
					}
					this._Host.Entity = value;
					if ((value != null))
					{
						value.DisallowedAbsoluteUris_MOST_POPULAR_HOSTS_BY_SCHEME = this;
						this._HostID = value.ID;
					}
					else
					{
						this._HostID = default(int);
					}
					this.SendPropertyChanged("Host");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="rpt.DisallowedAbsoluteUris_MOST_POPULAR_SCHEMES_BY_ABSOLUTEURIS")]
	public partial class DisallowedAbsoluteUris_MOST_POPULAR_SCHEMES_BY_ABSOLUTEURI : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RowNumber;
		
		private System.Nullable<System.DateTime> _InitiallyDiscovered;
		
		private System.DateTime _LastDiscovered;
		
		private int _SchemeID;
		
		private int _Count;
		
		private System.Nullable<short> _DaysSinceInitiallyDiscovered;
		
		private short _DaysSinceLastDiscovered;
		
		private System.Nullable<double> _Strength;
		
		private int _Rank;
		
		private int _DenseRank;
		
		private short _NTile;
		
		private EntityRef<Scheme> _Scheme;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRowNumberChanging(int value);
    partial void OnRowNumberChanged();
    partial void OnInitiallyDiscoveredChanging(System.Nullable<System.DateTime> value);
    partial void OnInitiallyDiscoveredChanged();
    partial void OnLastDiscoveredChanging(System.DateTime value);
    partial void OnLastDiscoveredChanged();
    partial void OnSchemeIDChanging(int value);
    partial void OnSchemeIDChanged();
    partial void OnCountChanging(int value);
    partial void OnCountChanged();
    partial void OnDaysSinceInitiallyDiscoveredChanging(System.Nullable<short> value);
    partial void OnDaysSinceInitiallyDiscoveredChanged();
    partial void OnDaysSinceLastDiscoveredChanging(short value);
    partial void OnDaysSinceLastDiscoveredChanged();
    partial void OnStrengthChanging(System.Nullable<double> value);
    partial void OnStrengthChanged();
    partial void OnRankChanging(int value);
    partial void OnRankChanged();
    partial void OnDenseRankChanging(int value);
    partial void OnDenseRankChanged();
    partial void OnNTileChanging(short value);
    partial void OnNTileChanged();
    #endregion
		
		public DisallowedAbsoluteUris_MOST_POPULAR_SCHEMES_BY_ABSOLUTEURI()
		{
			this._Scheme = default(EntityRef<Scheme>);
			OnCreated();
		}
		
		[Column(Storage="_RowNumber", DbType="Int NOT NULL")]
		public int RowNumber
		{
			get
			{
				return this._RowNumber;
			}
			set
			{
				if ((this._RowNumber != value))
				{
					this.OnRowNumberChanging(value);
					this.SendPropertyChanging();
					this._RowNumber = value;
					this.SendPropertyChanged("RowNumber");
					this.OnRowNumberChanged();
				}
			}
		}
		
		[Column(Storage="_InitiallyDiscovered", DbType="DateTime")]
		public System.Nullable<System.DateTime> InitiallyDiscovered
		{
			get
			{
				return this._InitiallyDiscovered;
			}
			set
			{
				if ((this._InitiallyDiscovered != value))
				{
					this.OnInitiallyDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._InitiallyDiscovered = value;
					this.SendPropertyChanged("InitiallyDiscovered");
					this.OnInitiallyDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_LastDiscovered", DbType="DateTime NOT NULL")]
		public System.DateTime LastDiscovered
		{
			get
			{
				return this._LastDiscovered;
			}
			set
			{
				if ((this._LastDiscovered != value))
				{
					this.OnLastDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._LastDiscovered = value;
					this.SendPropertyChanged("LastDiscovered");
					this.OnLastDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_SchemeID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int SchemeID
		{
			get
			{
				return this._SchemeID;
			}
			set
			{
				if ((this._SchemeID != value))
				{
					if (this._Scheme.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSchemeIDChanging(value);
					this.SendPropertyChanging();
					this._SchemeID = value;
					this.SendPropertyChanged("SchemeID");
					this.OnSchemeIDChanged();
				}
			}
		}
		
		[Column(Storage="_Count", DbType="Int NOT NULL")]
		public int Count
		{
			get
			{
				return this._Count;
			}
			set
			{
				if ((this._Count != value))
				{
					this.OnCountChanging(value);
					this.SendPropertyChanging();
					this._Count = value;
					this.SendPropertyChanged("Count");
					this.OnCountChanged();
				}
			}
		}
		
		[Column(Storage="_DaysSinceInitiallyDiscovered", DbType="SmallInt")]
		public System.Nullable<short> DaysSinceInitiallyDiscovered
		{
			get
			{
				return this._DaysSinceInitiallyDiscovered;
			}
			set
			{
				if ((this._DaysSinceInitiallyDiscovered != value))
				{
					this.OnDaysSinceInitiallyDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._DaysSinceInitiallyDiscovered = value;
					this.SendPropertyChanged("DaysSinceInitiallyDiscovered");
					this.OnDaysSinceInitiallyDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_DaysSinceLastDiscovered", DbType="SmallInt NOT NULL")]
		public short DaysSinceLastDiscovered
		{
			get
			{
				return this._DaysSinceLastDiscovered;
			}
			set
			{
				if ((this._DaysSinceLastDiscovered != value))
				{
					this.OnDaysSinceLastDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._DaysSinceLastDiscovered = value;
					this.SendPropertyChanged("DaysSinceLastDiscovered");
					this.OnDaysSinceLastDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_Strength", DbType="Float")]
		public System.Nullable<double> Strength
		{
			get
			{
				return this._Strength;
			}
			set
			{
				if ((this._Strength != value))
				{
					this.OnStrengthChanging(value);
					this.SendPropertyChanging();
					this._Strength = value;
					this.SendPropertyChanged("Strength");
					this.OnStrengthChanged();
				}
			}
		}
		
		[Column(Storage="_Rank", DbType="Int NOT NULL")]
		public int Rank
		{
			get
			{
				return this._Rank;
			}
			set
			{
				if ((this._Rank != value))
				{
					this.OnRankChanging(value);
					this.SendPropertyChanging();
					this._Rank = value;
					this.SendPropertyChanged("Rank");
					this.OnRankChanged();
				}
			}
		}
		
		[Column(Storage="_DenseRank", DbType="Int NOT NULL")]
		public int DenseRank
		{
			get
			{
				return this._DenseRank;
			}
			set
			{
				if ((this._DenseRank != value))
				{
					this.OnDenseRankChanging(value);
					this.SendPropertyChanging();
					this._DenseRank = value;
					this.SendPropertyChanged("DenseRank");
					this.OnDenseRankChanged();
				}
			}
		}
		
		[Column(Storage="_NTile", DbType="SmallInt NOT NULL")]
		public short NTile
		{
			get
			{
				return this._NTile;
			}
			set
			{
				if ((this._NTile != value))
				{
					this.OnNTileChanging(value);
					this.SendPropertyChanging();
					this._NTile = value;
					this.SendPropertyChanged("NTile");
					this.OnNTileChanged();
				}
			}
		}
		
		[Association(Name="Scheme_DisallowedAbsoluteUris_MOST_POPULAR_SCHEMES_BY_ABSOLUTEURI", Storage="_Scheme", ThisKey="SchemeID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Scheme Scheme
		{
			get
			{
				return this._Scheme.Entity;
			}
			set
			{
				Scheme previousValue = this._Scheme.Entity;
				if (((previousValue != value) 
							|| (this._Scheme.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Scheme.Entity = null;
						previousValue.DisallowedAbsoluteUris_MOST_POPULAR_SCHEMES_BY_ABSOLUTEURI = null;
					}
					this._Scheme.Entity = value;
					if ((value != null))
					{
						value.DisallowedAbsoluteUris_MOST_POPULAR_SCHEMES_BY_ABSOLUTEURI = this;
						this._SchemeID = value.ID;
					}
					else
					{
						this._SchemeID = default(int);
					}
					this.SendPropertyChanged("Scheme");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="rpt.DisallowedAbsoluteUris_MOST_POPULAR_SCHEMES_BY_DOMAINS")]
	public partial class DisallowedAbsoluteUris_MOST_POPULAR_SCHEMES_BY_DOMAIN : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RowNumber;
		
		private System.Nullable<System.DateTime> _InitiallyDiscovered;
		
		private System.DateTime _LastDiscovered;
		
		private int _SchemeID;
		
		private int _Count;
		
		private System.Nullable<short> _DaysSinceInitiallyDiscovered;
		
		private short _DaysSinceLastDiscovered;
		
		private System.Nullable<double> _Strength;
		
		private int _Rank;
		
		private int _DenseRank;
		
		private short _NTile;
		
		private EntityRef<Scheme> _Scheme;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRowNumberChanging(int value);
    partial void OnRowNumberChanged();
    partial void OnInitiallyDiscoveredChanging(System.Nullable<System.DateTime> value);
    partial void OnInitiallyDiscoveredChanged();
    partial void OnLastDiscoveredChanging(System.DateTime value);
    partial void OnLastDiscoveredChanged();
    partial void OnSchemeIDChanging(int value);
    partial void OnSchemeIDChanged();
    partial void OnCountChanging(int value);
    partial void OnCountChanged();
    partial void OnDaysSinceInitiallyDiscoveredChanging(System.Nullable<short> value);
    partial void OnDaysSinceInitiallyDiscoveredChanged();
    partial void OnDaysSinceLastDiscoveredChanging(short value);
    partial void OnDaysSinceLastDiscoveredChanged();
    partial void OnStrengthChanging(System.Nullable<double> value);
    partial void OnStrengthChanged();
    partial void OnRankChanging(int value);
    partial void OnRankChanged();
    partial void OnDenseRankChanging(int value);
    partial void OnDenseRankChanged();
    partial void OnNTileChanging(short value);
    partial void OnNTileChanged();
    #endregion
		
		public DisallowedAbsoluteUris_MOST_POPULAR_SCHEMES_BY_DOMAIN()
		{
			this._Scheme = default(EntityRef<Scheme>);
			OnCreated();
		}
		
		[Column(Storage="_RowNumber", DbType="Int NOT NULL")]
		public int RowNumber
		{
			get
			{
				return this._RowNumber;
			}
			set
			{
				if ((this._RowNumber != value))
				{
					this.OnRowNumberChanging(value);
					this.SendPropertyChanging();
					this._RowNumber = value;
					this.SendPropertyChanged("RowNumber");
					this.OnRowNumberChanged();
				}
			}
		}
		
		[Column(Storage="_InitiallyDiscovered", DbType="DateTime")]
		public System.Nullable<System.DateTime> InitiallyDiscovered
		{
			get
			{
				return this._InitiallyDiscovered;
			}
			set
			{
				if ((this._InitiallyDiscovered != value))
				{
					this.OnInitiallyDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._InitiallyDiscovered = value;
					this.SendPropertyChanged("InitiallyDiscovered");
					this.OnInitiallyDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_LastDiscovered", DbType="DateTime NOT NULL")]
		public System.DateTime LastDiscovered
		{
			get
			{
				return this._LastDiscovered;
			}
			set
			{
				if ((this._LastDiscovered != value))
				{
					this.OnLastDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._LastDiscovered = value;
					this.SendPropertyChanged("LastDiscovered");
					this.OnLastDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_SchemeID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int SchemeID
		{
			get
			{
				return this._SchemeID;
			}
			set
			{
				if ((this._SchemeID != value))
				{
					if (this._Scheme.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSchemeIDChanging(value);
					this.SendPropertyChanging();
					this._SchemeID = value;
					this.SendPropertyChanged("SchemeID");
					this.OnSchemeIDChanged();
				}
			}
		}
		
		[Column(Storage="_Count", DbType="Int NOT NULL")]
		public int Count
		{
			get
			{
				return this._Count;
			}
			set
			{
				if ((this._Count != value))
				{
					this.OnCountChanging(value);
					this.SendPropertyChanging();
					this._Count = value;
					this.SendPropertyChanged("Count");
					this.OnCountChanged();
				}
			}
		}
		
		[Column(Storage="_DaysSinceInitiallyDiscovered", DbType="SmallInt")]
		public System.Nullable<short> DaysSinceInitiallyDiscovered
		{
			get
			{
				return this._DaysSinceInitiallyDiscovered;
			}
			set
			{
				if ((this._DaysSinceInitiallyDiscovered != value))
				{
					this.OnDaysSinceInitiallyDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._DaysSinceInitiallyDiscovered = value;
					this.SendPropertyChanged("DaysSinceInitiallyDiscovered");
					this.OnDaysSinceInitiallyDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_DaysSinceLastDiscovered", DbType="SmallInt NOT NULL")]
		public short DaysSinceLastDiscovered
		{
			get
			{
				return this._DaysSinceLastDiscovered;
			}
			set
			{
				if ((this._DaysSinceLastDiscovered != value))
				{
					this.OnDaysSinceLastDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._DaysSinceLastDiscovered = value;
					this.SendPropertyChanged("DaysSinceLastDiscovered");
					this.OnDaysSinceLastDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_Strength", DbType="Float")]
		public System.Nullable<double> Strength
		{
			get
			{
				return this._Strength;
			}
			set
			{
				if ((this._Strength != value))
				{
					this.OnStrengthChanging(value);
					this.SendPropertyChanging();
					this._Strength = value;
					this.SendPropertyChanged("Strength");
					this.OnStrengthChanged();
				}
			}
		}
		
		[Column(Storage="_Rank", DbType="Int NOT NULL")]
		public int Rank
		{
			get
			{
				return this._Rank;
			}
			set
			{
				if ((this._Rank != value))
				{
					this.OnRankChanging(value);
					this.SendPropertyChanging();
					this._Rank = value;
					this.SendPropertyChanged("Rank");
					this.OnRankChanged();
				}
			}
		}
		
		[Column(Storage="_DenseRank", DbType="Int NOT NULL")]
		public int DenseRank
		{
			get
			{
				return this._DenseRank;
			}
			set
			{
				if ((this._DenseRank != value))
				{
					this.OnDenseRankChanging(value);
					this.SendPropertyChanging();
					this._DenseRank = value;
					this.SendPropertyChanged("DenseRank");
					this.OnDenseRankChanged();
				}
			}
		}
		
		[Column(Storage="_NTile", DbType="SmallInt NOT NULL")]
		public short NTile
		{
			get
			{
				return this._NTile;
			}
			set
			{
				if ((this._NTile != value))
				{
					this.OnNTileChanging(value);
					this.SendPropertyChanging();
					this._NTile = value;
					this.SendPropertyChanged("NTile");
					this.OnNTileChanged();
				}
			}
		}
		
		[Association(Name="Scheme_DisallowedAbsoluteUris_MOST_POPULAR_SCHEMES_BY_DOMAIN", Storage="_Scheme", ThisKey="SchemeID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Scheme Scheme
		{
			get
			{
				return this._Scheme.Entity;
			}
			set
			{
				Scheme previousValue = this._Scheme.Entity;
				if (((previousValue != value) 
							|| (this._Scheme.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Scheme.Entity = null;
						previousValue.DisallowedAbsoluteUris_MOST_POPULAR_SCHEMES_BY_DOMAIN = null;
					}
					this._Scheme.Entity = value;
					if ((value != null))
					{
						value.DisallowedAbsoluteUris_MOST_POPULAR_SCHEMES_BY_DOMAIN = this;
						this._SchemeID = value.ID;
					}
					else
					{
						this._SchemeID = default(int);
					}
					this.SendPropertyChanged("Scheme");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="rpt.DisallowedAbsoluteUris_MOST_POPULAR_SCHEMES_BY_EXTENSIONS")]
	public partial class DisallowedAbsoluteUris_MOST_POPULAR_SCHEMES_BY_EXTENSION : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RowNumber;
		
		private System.Nullable<System.DateTime> _InitiallyDiscovered;
		
		private System.DateTime _LastDiscovered;
		
		private int _SchemeID;
		
		private int _Count;
		
		private System.Nullable<short> _DaysSinceInitiallyDiscovered;
		
		private short _DaysSinceLastDiscovered;
		
		private System.Nullable<double> _Strength;
		
		private int _Rank;
		
		private int _DenseRank;
		
		private short _NTile;
		
		private EntityRef<Scheme> _Scheme;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRowNumberChanging(int value);
    partial void OnRowNumberChanged();
    partial void OnInitiallyDiscoveredChanging(System.Nullable<System.DateTime> value);
    partial void OnInitiallyDiscoveredChanged();
    partial void OnLastDiscoveredChanging(System.DateTime value);
    partial void OnLastDiscoveredChanged();
    partial void OnSchemeIDChanging(int value);
    partial void OnSchemeIDChanged();
    partial void OnCountChanging(int value);
    partial void OnCountChanged();
    partial void OnDaysSinceInitiallyDiscoveredChanging(System.Nullable<short> value);
    partial void OnDaysSinceInitiallyDiscoveredChanged();
    partial void OnDaysSinceLastDiscoveredChanging(short value);
    partial void OnDaysSinceLastDiscoveredChanged();
    partial void OnStrengthChanging(System.Nullable<double> value);
    partial void OnStrengthChanged();
    partial void OnRankChanging(int value);
    partial void OnRankChanged();
    partial void OnDenseRankChanging(int value);
    partial void OnDenseRankChanged();
    partial void OnNTileChanging(short value);
    partial void OnNTileChanged();
    #endregion
		
		public DisallowedAbsoluteUris_MOST_POPULAR_SCHEMES_BY_EXTENSION()
		{
			this._Scheme = default(EntityRef<Scheme>);
			OnCreated();
		}
		
		[Column(Storage="_RowNumber", DbType="Int NOT NULL")]
		public int RowNumber
		{
			get
			{
				return this._RowNumber;
			}
			set
			{
				if ((this._RowNumber != value))
				{
					this.OnRowNumberChanging(value);
					this.SendPropertyChanging();
					this._RowNumber = value;
					this.SendPropertyChanged("RowNumber");
					this.OnRowNumberChanged();
				}
			}
		}
		
		[Column(Storage="_InitiallyDiscovered", DbType="DateTime")]
		public System.Nullable<System.DateTime> InitiallyDiscovered
		{
			get
			{
				return this._InitiallyDiscovered;
			}
			set
			{
				if ((this._InitiallyDiscovered != value))
				{
					this.OnInitiallyDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._InitiallyDiscovered = value;
					this.SendPropertyChanged("InitiallyDiscovered");
					this.OnInitiallyDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_LastDiscovered", DbType="DateTime NOT NULL")]
		public System.DateTime LastDiscovered
		{
			get
			{
				return this._LastDiscovered;
			}
			set
			{
				if ((this._LastDiscovered != value))
				{
					this.OnLastDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._LastDiscovered = value;
					this.SendPropertyChanged("LastDiscovered");
					this.OnLastDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_SchemeID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int SchemeID
		{
			get
			{
				return this._SchemeID;
			}
			set
			{
				if ((this._SchemeID != value))
				{
					if (this._Scheme.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSchemeIDChanging(value);
					this.SendPropertyChanging();
					this._SchemeID = value;
					this.SendPropertyChanged("SchemeID");
					this.OnSchemeIDChanged();
				}
			}
		}
		
		[Column(Storage="_Count", DbType="Int NOT NULL")]
		public int Count
		{
			get
			{
				return this._Count;
			}
			set
			{
				if ((this._Count != value))
				{
					this.OnCountChanging(value);
					this.SendPropertyChanging();
					this._Count = value;
					this.SendPropertyChanged("Count");
					this.OnCountChanged();
				}
			}
		}
		
		[Column(Storage="_DaysSinceInitiallyDiscovered", DbType="SmallInt")]
		public System.Nullable<short> DaysSinceInitiallyDiscovered
		{
			get
			{
				return this._DaysSinceInitiallyDiscovered;
			}
			set
			{
				if ((this._DaysSinceInitiallyDiscovered != value))
				{
					this.OnDaysSinceInitiallyDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._DaysSinceInitiallyDiscovered = value;
					this.SendPropertyChanged("DaysSinceInitiallyDiscovered");
					this.OnDaysSinceInitiallyDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_DaysSinceLastDiscovered", DbType="SmallInt NOT NULL")]
		public short DaysSinceLastDiscovered
		{
			get
			{
				return this._DaysSinceLastDiscovered;
			}
			set
			{
				if ((this._DaysSinceLastDiscovered != value))
				{
					this.OnDaysSinceLastDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._DaysSinceLastDiscovered = value;
					this.SendPropertyChanged("DaysSinceLastDiscovered");
					this.OnDaysSinceLastDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_Strength", DbType="Float")]
		public System.Nullable<double> Strength
		{
			get
			{
				return this._Strength;
			}
			set
			{
				if ((this._Strength != value))
				{
					this.OnStrengthChanging(value);
					this.SendPropertyChanging();
					this._Strength = value;
					this.SendPropertyChanged("Strength");
					this.OnStrengthChanged();
				}
			}
		}
		
		[Column(Storage="_Rank", DbType="Int NOT NULL")]
		public int Rank
		{
			get
			{
				return this._Rank;
			}
			set
			{
				if ((this._Rank != value))
				{
					this.OnRankChanging(value);
					this.SendPropertyChanging();
					this._Rank = value;
					this.SendPropertyChanged("Rank");
					this.OnRankChanged();
				}
			}
		}
		
		[Column(Storage="_DenseRank", DbType="Int NOT NULL")]
		public int DenseRank
		{
			get
			{
				return this._DenseRank;
			}
			set
			{
				if ((this._DenseRank != value))
				{
					this.OnDenseRankChanging(value);
					this.SendPropertyChanging();
					this._DenseRank = value;
					this.SendPropertyChanged("DenseRank");
					this.OnDenseRankChanged();
				}
			}
		}
		
		[Column(Storage="_NTile", DbType="SmallInt NOT NULL")]
		public short NTile
		{
			get
			{
				return this._NTile;
			}
			set
			{
				if ((this._NTile != value))
				{
					this.OnNTileChanging(value);
					this.SendPropertyChanging();
					this._NTile = value;
					this.SendPropertyChanged("NTile");
					this.OnNTileChanged();
				}
			}
		}
		
		[Association(Name="Scheme_DisallowedAbsoluteUris_MOST_POPULAR_SCHEMES_BY_EXTENSION", Storage="_Scheme", ThisKey="SchemeID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Scheme Scheme
		{
			get
			{
				return this._Scheme.Entity;
			}
			set
			{
				Scheme previousValue = this._Scheme.Entity;
				if (((previousValue != value) 
							|| (this._Scheme.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Scheme.Entity = null;
						previousValue.DisallowedAbsoluteUris_MOST_POPULAR_SCHEMES_BY_EXTENSION = null;
					}
					this._Scheme.Entity = value;
					if ((value != null))
					{
						value.DisallowedAbsoluteUris_MOST_POPULAR_SCHEMES_BY_EXTENSION = this;
						this._SchemeID = value.ID;
					}
					else
					{
						this._SchemeID = default(int);
					}
					this.SendPropertyChanged("Scheme");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="rpt.DisallowedAbsoluteUris_MOST_POPULAR_SCHEMES_BY_HOSTS")]
	public partial class DisallowedAbsoluteUris_MOST_POPULAR_SCHEMES_BY_HOST : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RowNumber;
		
		private System.Nullable<System.DateTime> _InitiallyDiscovered;
		
		private System.DateTime _LastDiscovered;
		
		private int _SchemeID;
		
		private int _Count;
		
		private System.Nullable<short> _DaysSinceInitiallyDiscovered;
		
		private short _DaysSinceLastDiscovered;
		
		private System.Nullable<double> _Strength;
		
		private int _Rank;
		
		private int _DenseRank;
		
		private short _NTile;
		
		private EntityRef<Scheme> _Scheme;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRowNumberChanging(int value);
    partial void OnRowNumberChanged();
    partial void OnInitiallyDiscoveredChanging(System.Nullable<System.DateTime> value);
    partial void OnInitiallyDiscoveredChanged();
    partial void OnLastDiscoveredChanging(System.DateTime value);
    partial void OnLastDiscoveredChanged();
    partial void OnSchemeIDChanging(int value);
    partial void OnSchemeIDChanged();
    partial void OnCountChanging(int value);
    partial void OnCountChanged();
    partial void OnDaysSinceInitiallyDiscoveredChanging(System.Nullable<short> value);
    partial void OnDaysSinceInitiallyDiscoveredChanged();
    partial void OnDaysSinceLastDiscoveredChanging(short value);
    partial void OnDaysSinceLastDiscoveredChanged();
    partial void OnStrengthChanging(System.Nullable<double> value);
    partial void OnStrengthChanged();
    partial void OnRankChanging(int value);
    partial void OnRankChanged();
    partial void OnDenseRankChanging(int value);
    partial void OnDenseRankChanged();
    partial void OnNTileChanging(short value);
    partial void OnNTileChanged();
    #endregion
		
		public DisallowedAbsoluteUris_MOST_POPULAR_SCHEMES_BY_HOST()
		{
			this._Scheme = default(EntityRef<Scheme>);
			OnCreated();
		}
		
		[Column(Storage="_RowNumber", DbType="Int NOT NULL")]
		public int RowNumber
		{
			get
			{
				return this._RowNumber;
			}
			set
			{
				if ((this._RowNumber != value))
				{
					this.OnRowNumberChanging(value);
					this.SendPropertyChanging();
					this._RowNumber = value;
					this.SendPropertyChanged("RowNumber");
					this.OnRowNumberChanged();
				}
			}
		}
		
		[Column(Storage="_InitiallyDiscovered", DbType="DateTime")]
		public System.Nullable<System.DateTime> InitiallyDiscovered
		{
			get
			{
				return this._InitiallyDiscovered;
			}
			set
			{
				if ((this._InitiallyDiscovered != value))
				{
					this.OnInitiallyDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._InitiallyDiscovered = value;
					this.SendPropertyChanged("InitiallyDiscovered");
					this.OnInitiallyDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_LastDiscovered", DbType="DateTime NOT NULL")]
		public System.DateTime LastDiscovered
		{
			get
			{
				return this._LastDiscovered;
			}
			set
			{
				if ((this._LastDiscovered != value))
				{
					this.OnLastDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._LastDiscovered = value;
					this.SendPropertyChanged("LastDiscovered");
					this.OnLastDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_SchemeID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int SchemeID
		{
			get
			{
				return this._SchemeID;
			}
			set
			{
				if ((this._SchemeID != value))
				{
					if (this._Scheme.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSchemeIDChanging(value);
					this.SendPropertyChanging();
					this._SchemeID = value;
					this.SendPropertyChanged("SchemeID");
					this.OnSchemeIDChanged();
				}
			}
		}
		
		[Column(Storage="_Count", DbType="Int NOT NULL")]
		public int Count
		{
			get
			{
				return this._Count;
			}
			set
			{
				if ((this._Count != value))
				{
					this.OnCountChanging(value);
					this.SendPropertyChanging();
					this._Count = value;
					this.SendPropertyChanged("Count");
					this.OnCountChanged();
				}
			}
		}
		
		[Column(Storage="_DaysSinceInitiallyDiscovered", DbType="SmallInt")]
		public System.Nullable<short> DaysSinceInitiallyDiscovered
		{
			get
			{
				return this._DaysSinceInitiallyDiscovered;
			}
			set
			{
				if ((this._DaysSinceInitiallyDiscovered != value))
				{
					this.OnDaysSinceInitiallyDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._DaysSinceInitiallyDiscovered = value;
					this.SendPropertyChanged("DaysSinceInitiallyDiscovered");
					this.OnDaysSinceInitiallyDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_DaysSinceLastDiscovered", DbType="SmallInt NOT NULL")]
		public short DaysSinceLastDiscovered
		{
			get
			{
				return this._DaysSinceLastDiscovered;
			}
			set
			{
				if ((this._DaysSinceLastDiscovered != value))
				{
					this.OnDaysSinceLastDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._DaysSinceLastDiscovered = value;
					this.SendPropertyChanged("DaysSinceLastDiscovered");
					this.OnDaysSinceLastDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_Strength", DbType="Float")]
		public System.Nullable<double> Strength
		{
			get
			{
				return this._Strength;
			}
			set
			{
				if ((this._Strength != value))
				{
					this.OnStrengthChanging(value);
					this.SendPropertyChanging();
					this._Strength = value;
					this.SendPropertyChanged("Strength");
					this.OnStrengthChanged();
				}
			}
		}
		
		[Column(Storage="_Rank", DbType="Int NOT NULL")]
		public int Rank
		{
			get
			{
				return this._Rank;
			}
			set
			{
				if ((this._Rank != value))
				{
					this.OnRankChanging(value);
					this.SendPropertyChanging();
					this._Rank = value;
					this.SendPropertyChanged("Rank");
					this.OnRankChanged();
				}
			}
		}
		
		[Column(Storage="_DenseRank", DbType="Int NOT NULL")]
		public int DenseRank
		{
			get
			{
				return this._DenseRank;
			}
			set
			{
				if ((this._DenseRank != value))
				{
					this.OnDenseRankChanging(value);
					this.SendPropertyChanging();
					this._DenseRank = value;
					this.SendPropertyChanged("DenseRank");
					this.OnDenseRankChanged();
				}
			}
		}
		
		[Column(Storage="_NTile", DbType="SmallInt NOT NULL")]
		public short NTile
		{
			get
			{
				return this._NTile;
			}
			set
			{
				if ((this._NTile != value))
				{
					this.OnNTileChanging(value);
					this.SendPropertyChanging();
					this._NTile = value;
					this.SendPropertyChanged("NTile");
					this.OnNTileChanged();
				}
			}
		}
		
		[Association(Name="Scheme_DisallowedAbsoluteUris_MOST_POPULAR_SCHEMES_BY_HOST", Storage="_Scheme", ThisKey="SchemeID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Scheme Scheme
		{
			get
			{
				return this._Scheme.Entity;
			}
			set
			{
				Scheme previousValue = this._Scheme.Entity;
				if (((previousValue != value) 
							|| (this._Scheme.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Scheme.Entity = null;
						previousValue.DisallowedAbsoluteUris_MOST_POPULAR_SCHEMES_BY_HOST = null;
					}
					this._Scheme.Entity = value;
					if ((value != null))
					{
						value.DisallowedAbsoluteUris_MOST_POPULAR_SCHEMES_BY_HOST = this;
						this._SchemeID = value.ID;
					}
					else
					{
						this._SchemeID = default(int);
					}
					this.SendPropertyChanged("Scheme");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="rpt.EmailAddresses_COUNT_BY_ABSOLUTEURI")]
	public partial class EmailAddresses_COUNT_BY_ABSOLUTEURI : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RowNumber;
		
		private long _EmailAddressID;
		
		private int _Count;
		
		private int _Rank;
		
		private int _DenseRank;
		
		private byte _NTile;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRowNumberChanging(int value);
    partial void OnRowNumberChanged();
    partial void OnEmailAddressIDChanging(long value);
    partial void OnEmailAddressIDChanged();
    partial void OnCountChanging(int value);
    partial void OnCountChanged();
    partial void OnRankChanging(int value);
    partial void OnRankChanged();
    partial void OnDenseRankChanging(int value);
    partial void OnDenseRankChanged();
    partial void OnNTileChanging(byte value);
    partial void OnNTileChanged();
    #endregion
		
		public EmailAddresses_COUNT_BY_ABSOLUTEURI()
		{
			OnCreated();
		}
		
		[Column(Storage="_RowNumber", DbType="Int NOT NULL")]
		public int RowNumber
		{
			get
			{
				return this._RowNumber;
			}
			set
			{
				if ((this._RowNumber != value))
				{
					this.OnRowNumberChanging(value);
					this.SendPropertyChanging();
					this._RowNumber = value;
					this.SendPropertyChanged("RowNumber");
					this.OnRowNumberChanged();
				}
			}
		}
		
		[Column(Storage="_EmailAddressID", DbType="BigInt NOT NULL", IsPrimaryKey=true)]
		public long EmailAddressID
		{
			get
			{
				return this._EmailAddressID;
			}
			set
			{
				if ((this._EmailAddressID != value))
				{
					this.OnEmailAddressIDChanging(value);
					this.SendPropertyChanging();
					this._EmailAddressID = value;
					this.SendPropertyChanged("EmailAddressID");
					this.OnEmailAddressIDChanged();
				}
			}
		}
		
		[Column(Storage="_Count", DbType="Int NOT NULL")]
		public int Count
		{
			get
			{
				return this._Count;
			}
			set
			{
				if ((this._Count != value))
				{
					this.OnCountChanging(value);
					this.SendPropertyChanging();
					this._Count = value;
					this.SendPropertyChanged("Count");
					this.OnCountChanged();
				}
			}
		}
		
		[Column(Storage="_Rank", DbType="Int NOT NULL")]
		public int Rank
		{
			get
			{
				return this._Rank;
			}
			set
			{
				if ((this._Rank != value))
				{
					this.OnRankChanging(value);
					this.SendPropertyChanging();
					this._Rank = value;
					this.SendPropertyChanged("Rank");
					this.OnRankChanged();
				}
			}
		}
		
		[Column(Storage="_DenseRank", DbType="Int NOT NULL")]
		public int DenseRank
		{
			get
			{
				return this._DenseRank;
			}
			set
			{
				if ((this._DenseRank != value))
				{
					this.OnDenseRankChanging(value);
					this.SendPropertyChanging();
					this._DenseRank = value;
					this.SendPropertyChanged("DenseRank");
					this.OnDenseRankChanged();
				}
			}
		}
		
		[Column(Storage="_NTile", DbType="TinyInt NOT NULL")]
		public byte NTile
		{
			get
			{
				return this._NTile;
			}
			set
			{
				if ((this._NTile != value))
				{
					this.OnNTileChanging(value);
					this.SendPropertyChanging();
					this._NTile = value;
					this.SendPropertyChanged("NTile");
					this.OnNTileChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="rpt.EmailAddresses_MOST_POPULAR_SCHEMES_BY_SCHEMES")]
	public partial class EmailAddresses_MOST_POPULAR_SCHEMES_BY_SCHEME : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RowNumber;
		
		private System.Nullable<System.DateTime> _InitiallyDiscovered;
		
		private System.DateTime _LastDiscovered;
		
		private int _SchemeID;
		
		private int _Count;
		
		private System.Nullable<short> _DaysSinceInitiallyDiscovered;
		
		private short _DaysSinceLastDiscovered;
		
		private System.Nullable<double> _Strength;
		
		private int _Rank;
		
		private int _DenseRank;
		
		private short _NTile;
		
		private EntityRef<Scheme> _Scheme;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRowNumberChanging(int value);
    partial void OnRowNumberChanged();
    partial void OnInitiallyDiscoveredChanging(System.Nullable<System.DateTime> value);
    partial void OnInitiallyDiscoveredChanged();
    partial void OnLastDiscoveredChanging(System.DateTime value);
    partial void OnLastDiscoveredChanged();
    partial void OnSchemeIDChanging(int value);
    partial void OnSchemeIDChanged();
    partial void OnCountChanging(int value);
    partial void OnCountChanged();
    partial void OnDaysSinceInitiallyDiscoveredChanging(System.Nullable<short> value);
    partial void OnDaysSinceInitiallyDiscoveredChanged();
    partial void OnDaysSinceLastDiscoveredChanging(short value);
    partial void OnDaysSinceLastDiscoveredChanged();
    partial void OnStrengthChanging(System.Nullable<double> value);
    partial void OnStrengthChanged();
    partial void OnRankChanging(int value);
    partial void OnRankChanged();
    partial void OnDenseRankChanging(int value);
    partial void OnDenseRankChanged();
    partial void OnNTileChanging(short value);
    partial void OnNTileChanged();
    #endregion
		
		public EmailAddresses_MOST_POPULAR_SCHEMES_BY_SCHEME()
		{
			this._Scheme = default(EntityRef<Scheme>);
			OnCreated();
		}
		
		[Column(Storage="_RowNumber", DbType="Int NOT NULL")]
		public int RowNumber
		{
			get
			{
				return this._RowNumber;
			}
			set
			{
				if ((this._RowNumber != value))
				{
					this.OnRowNumberChanging(value);
					this.SendPropertyChanging();
					this._RowNumber = value;
					this.SendPropertyChanged("RowNumber");
					this.OnRowNumberChanged();
				}
			}
		}
		
		[Column(Storage="_InitiallyDiscovered", DbType="DateTime")]
		public System.Nullable<System.DateTime> InitiallyDiscovered
		{
			get
			{
				return this._InitiallyDiscovered;
			}
			set
			{
				if ((this._InitiallyDiscovered != value))
				{
					this.OnInitiallyDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._InitiallyDiscovered = value;
					this.SendPropertyChanged("InitiallyDiscovered");
					this.OnInitiallyDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_LastDiscovered", DbType="DateTime NOT NULL")]
		public System.DateTime LastDiscovered
		{
			get
			{
				return this._LastDiscovered;
			}
			set
			{
				if ((this._LastDiscovered != value))
				{
					this.OnLastDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._LastDiscovered = value;
					this.SendPropertyChanged("LastDiscovered");
					this.OnLastDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_SchemeID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int SchemeID
		{
			get
			{
				return this._SchemeID;
			}
			set
			{
				if ((this._SchemeID != value))
				{
					if (this._Scheme.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSchemeIDChanging(value);
					this.SendPropertyChanging();
					this._SchemeID = value;
					this.SendPropertyChanged("SchemeID");
					this.OnSchemeIDChanged();
				}
			}
		}
		
		[Column(Storage="_Count", DbType="Int NOT NULL")]
		public int Count
		{
			get
			{
				return this._Count;
			}
			set
			{
				if ((this._Count != value))
				{
					this.OnCountChanging(value);
					this.SendPropertyChanging();
					this._Count = value;
					this.SendPropertyChanged("Count");
					this.OnCountChanged();
				}
			}
		}
		
		[Column(Storage="_DaysSinceInitiallyDiscovered", DbType="SmallInt")]
		public System.Nullable<short> DaysSinceInitiallyDiscovered
		{
			get
			{
				return this._DaysSinceInitiallyDiscovered;
			}
			set
			{
				if ((this._DaysSinceInitiallyDiscovered != value))
				{
					this.OnDaysSinceInitiallyDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._DaysSinceInitiallyDiscovered = value;
					this.SendPropertyChanged("DaysSinceInitiallyDiscovered");
					this.OnDaysSinceInitiallyDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_DaysSinceLastDiscovered", DbType="SmallInt NOT NULL")]
		public short DaysSinceLastDiscovered
		{
			get
			{
				return this._DaysSinceLastDiscovered;
			}
			set
			{
				if ((this._DaysSinceLastDiscovered != value))
				{
					this.OnDaysSinceLastDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._DaysSinceLastDiscovered = value;
					this.SendPropertyChanged("DaysSinceLastDiscovered");
					this.OnDaysSinceLastDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_Strength", DbType="Float")]
		public System.Nullable<double> Strength
		{
			get
			{
				return this._Strength;
			}
			set
			{
				if ((this._Strength != value))
				{
					this.OnStrengthChanging(value);
					this.SendPropertyChanging();
					this._Strength = value;
					this.SendPropertyChanged("Strength");
					this.OnStrengthChanged();
				}
			}
		}
		
		[Column(Storage="_Rank", DbType="Int NOT NULL")]
		public int Rank
		{
			get
			{
				return this._Rank;
			}
			set
			{
				if ((this._Rank != value))
				{
					this.OnRankChanging(value);
					this.SendPropertyChanging();
					this._Rank = value;
					this.SendPropertyChanged("Rank");
					this.OnRankChanged();
				}
			}
		}
		
		[Column(Storage="_DenseRank", DbType="Int NOT NULL")]
		public int DenseRank
		{
			get
			{
				return this._DenseRank;
			}
			set
			{
				if ((this._DenseRank != value))
				{
					this.OnDenseRankChanging(value);
					this.SendPropertyChanging();
					this._DenseRank = value;
					this.SendPropertyChanged("DenseRank");
					this.OnDenseRankChanged();
				}
			}
		}
		
		[Column(Storage="_NTile", DbType="SmallInt NOT NULL")]
		public short NTile
		{
			get
			{
				return this._NTile;
			}
			set
			{
				if ((this._NTile != value))
				{
					this.OnNTileChanging(value);
					this.SendPropertyChanging();
					this._NTile = value;
					this.SendPropertyChanged("NTile");
					this.OnNTileChanged();
				}
			}
		}
		
		[Association(Name="Scheme_EmailAddresses_MOST_POPULAR_SCHEMES_BY_SCHEME", Storage="_Scheme", ThisKey="SchemeID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Scheme Scheme
		{
			get
			{
				return this._Scheme.Entity;
			}
			set
			{
				Scheme previousValue = this._Scheme.Entity;
				if (((previousValue != value) 
							|| (this._Scheme.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Scheme.Entity = null;
						previousValue.EmailAddresses_MOST_POPULAR_SCHEMES_BY_SCHEME = null;
					}
					this._Scheme.Entity = value;
					if ((value != null))
					{
						value.EmailAddresses_MOST_POPULAR_SCHEMES_BY_SCHEME = this;
						this._SchemeID = value.ID;
					}
					else
					{
						this._SchemeID = default(int);
					}
					this.SendPropertyChanged("Scheme");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="rpt.EmailAddresses_COUNT_BY_DOMAIN")]
	public partial class EmailAddresses_COUNT_BY_DOMAIN : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RowNumber;
		
		private int _DomainID;
		
		private int _Count;
		
		private int _Rank;
		
		private int _DenseRank;
		
		private byte _NTile;
		
		private EntityRef<Domain> _Domain;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRowNumberChanging(int value);
    partial void OnRowNumberChanged();
    partial void OnDomainIDChanging(int value);
    partial void OnDomainIDChanged();
    partial void OnCountChanging(int value);
    partial void OnCountChanged();
    partial void OnRankChanging(int value);
    partial void OnRankChanged();
    partial void OnDenseRankChanging(int value);
    partial void OnDenseRankChanged();
    partial void OnNTileChanging(byte value);
    partial void OnNTileChanged();
    #endregion
		
		public EmailAddresses_COUNT_BY_DOMAIN()
		{
			this._Domain = default(EntityRef<Domain>);
			OnCreated();
		}
		
		[Column(Storage="_RowNumber", DbType="Int NOT NULL")]
		public int RowNumber
		{
			get
			{
				return this._RowNumber;
			}
			set
			{
				if ((this._RowNumber != value))
				{
					this.OnRowNumberChanging(value);
					this.SendPropertyChanging();
					this._RowNumber = value;
					this.SendPropertyChanged("RowNumber");
					this.OnRowNumberChanged();
				}
			}
		}
		
		[Column(Storage="_DomainID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int DomainID
		{
			get
			{
				return this._DomainID;
			}
			set
			{
				if ((this._DomainID != value))
				{
					if (this._Domain.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDomainIDChanging(value);
					this.SendPropertyChanging();
					this._DomainID = value;
					this.SendPropertyChanged("DomainID");
					this.OnDomainIDChanged();
				}
			}
		}
		
		[Column(Storage="_Count", DbType="Int NOT NULL")]
		public int Count
		{
			get
			{
				return this._Count;
			}
			set
			{
				if ((this._Count != value))
				{
					this.OnCountChanging(value);
					this.SendPropertyChanging();
					this._Count = value;
					this.SendPropertyChanged("Count");
					this.OnCountChanged();
				}
			}
		}
		
		[Column(Storage="_Rank", DbType="Int NOT NULL")]
		public int Rank
		{
			get
			{
				return this._Rank;
			}
			set
			{
				if ((this._Rank != value))
				{
					this.OnRankChanging(value);
					this.SendPropertyChanging();
					this._Rank = value;
					this.SendPropertyChanged("Rank");
					this.OnRankChanged();
				}
			}
		}
		
		[Column(Storage="_DenseRank", DbType="Int NOT NULL")]
		public int DenseRank
		{
			get
			{
				return this._DenseRank;
			}
			set
			{
				if ((this._DenseRank != value))
				{
					this.OnDenseRankChanging(value);
					this.SendPropertyChanging();
					this._DenseRank = value;
					this.SendPropertyChanged("DenseRank");
					this.OnDenseRankChanged();
				}
			}
		}
		
		[Column(Storage="_NTile", DbType="TinyInt NOT NULL")]
		public byte NTile
		{
			get
			{
				return this._NTile;
			}
			set
			{
				if ((this._NTile != value))
				{
					this.OnNTileChanging(value);
					this.SendPropertyChanging();
					this._NTile = value;
					this.SendPropertyChanged("NTile");
					this.OnNTileChanged();
				}
			}
		}
		
		[Association(Name="Domain_EmailAddresses_COUNT_BY_DOMAIN", Storage="_Domain", ThisKey="DomainID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Domain Domain
		{
			get
			{
				return this._Domain.Entity;
			}
			set
			{
				Domain previousValue = this._Domain.Entity;
				if (((previousValue != value) 
							|| (this._Domain.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Domain.Entity = null;
						previousValue.EmailAddresses_COUNT_BY_DOMAIN = null;
					}
					this._Domain.Entity = value;
					if ((value != null))
					{
						value.EmailAddresses_COUNT_BY_DOMAIN = this;
						this._DomainID = value.ID;
					}
					else
					{
						this._DomainID = default(int);
					}
					this.SendPropertyChanged("Domain");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="rpt.EmailAddresses_COUNT_BY_EXTENSION")]
	public partial class EmailAddresses_COUNT_BY_EXTENSION : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RowNumber;
		
		private int _ExtensionID;
		
		private int _Count;
		
		private int _Rank;
		
		private int _DenseRank;
		
		private byte _NTile;
		
		private EntityRef<Extension> _Extension;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRowNumberChanging(int value);
    partial void OnRowNumberChanged();
    partial void OnExtensionIDChanging(int value);
    partial void OnExtensionIDChanged();
    partial void OnCountChanging(int value);
    partial void OnCountChanged();
    partial void OnRankChanging(int value);
    partial void OnRankChanged();
    partial void OnDenseRankChanging(int value);
    partial void OnDenseRankChanged();
    partial void OnNTileChanging(byte value);
    partial void OnNTileChanged();
    #endregion
		
		public EmailAddresses_COUNT_BY_EXTENSION()
		{
			this._Extension = default(EntityRef<Extension>);
			OnCreated();
		}
		
		[Column(Storage="_RowNumber", DbType="Int NOT NULL")]
		public int RowNumber
		{
			get
			{
				return this._RowNumber;
			}
			set
			{
				if ((this._RowNumber != value))
				{
					this.OnRowNumberChanging(value);
					this.SendPropertyChanging();
					this._RowNumber = value;
					this.SendPropertyChanged("RowNumber");
					this.OnRowNumberChanged();
				}
			}
		}
		
		[Column(Storage="_ExtensionID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ExtensionID
		{
			get
			{
				return this._ExtensionID;
			}
			set
			{
				if ((this._ExtensionID != value))
				{
					if (this._Extension.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnExtensionIDChanging(value);
					this.SendPropertyChanging();
					this._ExtensionID = value;
					this.SendPropertyChanged("ExtensionID");
					this.OnExtensionIDChanged();
				}
			}
		}
		
		[Column(Storage="_Count", DbType="Int NOT NULL")]
		public int Count
		{
			get
			{
				return this._Count;
			}
			set
			{
				if ((this._Count != value))
				{
					this.OnCountChanging(value);
					this.SendPropertyChanging();
					this._Count = value;
					this.SendPropertyChanged("Count");
					this.OnCountChanged();
				}
			}
		}
		
		[Column(Storage="_Rank", DbType="Int NOT NULL")]
		public int Rank
		{
			get
			{
				return this._Rank;
			}
			set
			{
				if ((this._Rank != value))
				{
					this.OnRankChanging(value);
					this.SendPropertyChanging();
					this._Rank = value;
					this.SendPropertyChanged("Rank");
					this.OnRankChanged();
				}
			}
		}
		
		[Column(Storage="_DenseRank", DbType="Int NOT NULL")]
		public int DenseRank
		{
			get
			{
				return this._DenseRank;
			}
			set
			{
				if ((this._DenseRank != value))
				{
					this.OnDenseRankChanging(value);
					this.SendPropertyChanging();
					this._DenseRank = value;
					this.SendPropertyChanged("DenseRank");
					this.OnDenseRankChanged();
				}
			}
		}
		
		[Column(Storage="_NTile", DbType="TinyInt NOT NULL")]
		public byte NTile
		{
			get
			{
				return this._NTile;
			}
			set
			{
				if ((this._NTile != value))
				{
					this.OnNTileChanging(value);
					this.SendPropertyChanging();
					this._NTile = value;
					this.SendPropertyChanged("NTile");
					this.OnNTileChanged();
				}
			}
		}
		
		[Association(Name="Extension_EmailAddresses_COUNT_BY_EXTENSION", Storage="_Extension", ThisKey="ExtensionID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Extension Extension
		{
			get
			{
				return this._Extension.Entity;
			}
			set
			{
				Extension previousValue = this._Extension.Entity;
				if (((previousValue != value) 
							|| (this._Extension.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Extension.Entity = null;
						previousValue.EmailAddresses_COUNT_BY_EXTENSION = null;
					}
					this._Extension.Entity = value;
					if ((value != null))
					{
						value.EmailAddresses_COUNT_BY_EXTENSION = this;
						this._ExtensionID = value.ID;
					}
					else
					{
						this._ExtensionID = default(int);
					}
					this.SendPropertyChanged("Extension");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="rpt.EmailAddresses_COUNT_BY_HOST")]
	public partial class EmailAddresses_COUNT_BY_HOST : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RowNumber;
		
		private int _HostID;
		
		private int _Count;
		
		private int _Rank;
		
		private int _DenseRank;
		
		private byte _NTile;
		
		private EntityRef<Host> _Host;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRowNumberChanging(int value);
    partial void OnRowNumberChanged();
    partial void OnHostIDChanging(int value);
    partial void OnHostIDChanged();
    partial void OnCountChanging(int value);
    partial void OnCountChanged();
    partial void OnRankChanging(int value);
    partial void OnRankChanged();
    partial void OnDenseRankChanging(int value);
    partial void OnDenseRankChanged();
    partial void OnNTileChanging(byte value);
    partial void OnNTileChanged();
    #endregion
		
		public EmailAddresses_COUNT_BY_HOST()
		{
			this._Host = default(EntityRef<Host>);
			OnCreated();
		}
		
		[Column(Storage="_RowNumber", DbType="Int NOT NULL")]
		public int RowNumber
		{
			get
			{
				return this._RowNumber;
			}
			set
			{
				if ((this._RowNumber != value))
				{
					this.OnRowNumberChanging(value);
					this.SendPropertyChanging();
					this._RowNumber = value;
					this.SendPropertyChanged("RowNumber");
					this.OnRowNumberChanged();
				}
			}
		}
		
		[Column(Storage="_HostID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int HostID
		{
			get
			{
				return this._HostID;
			}
			set
			{
				if ((this._HostID != value))
				{
					if (this._Host.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnHostIDChanging(value);
					this.SendPropertyChanging();
					this._HostID = value;
					this.SendPropertyChanged("HostID");
					this.OnHostIDChanged();
				}
			}
		}
		
		[Column(Storage="_Count", DbType="Int NOT NULL")]
		public int Count
		{
			get
			{
				return this._Count;
			}
			set
			{
				if ((this._Count != value))
				{
					this.OnCountChanging(value);
					this.SendPropertyChanging();
					this._Count = value;
					this.SendPropertyChanged("Count");
					this.OnCountChanged();
				}
			}
		}
		
		[Column(Storage="_Rank", DbType="Int NOT NULL")]
		public int Rank
		{
			get
			{
				return this._Rank;
			}
			set
			{
				if ((this._Rank != value))
				{
					this.OnRankChanging(value);
					this.SendPropertyChanging();
					this._Rank = value;
					this.SendPropertyChanged("Rank");
					this.OnRankChanged();
				}
			}
		}
		
		[Column(Storage="_DenseRank", DbType="Int NOT NULL")]
		public int DenseRank
		{
			get
			{
				return this._DenseRank;
			}
			set
			{
				if ((this._DenseRank != value))
				{
					this.OnDenseRankChanging(value);
					this.SendPropertyChanging();
					this._DenseRank = value;
					this.SendPropertyChanged("DenseRank");
					this.OnDenseRankChanged();
				}
			}
		}
		
		[Column(Storage="_NTile", DbType="TinyInt NOT NULL")]
		public byte NTile
		{
			get
			{
				return this._NTile;
			}
			set
			{
				if ((this._NTile != value))
				{
					this.OnNTileChanging(value);
					this.SendPropertyChanging();
					this._NTile = value;
					this.SendPropertyChanged("NTile");
					this.OnNTileChanged();
				}
			}
		}
		
		[Association(Name="Host_EmailAddresses_COUNT_BY_HOST", Storage="_Host", ThisKey="HostID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Host Host
		{
			get
			{
				return this._Host.Entity;
			}
			set
			{
				Host previousValue = this._Host.Entity;
				if (((previousValue != value) 
							|| (this._Host.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Host.Entity = null;
						previousValue.EmailAddresses_COUNT_BY_HOST = null;
					}
					this._Host.Entity = value;
					if ((value != null))
					{
						value.EmailAddresses_COUNT_BY_HOST = this;
						this._HostID = value.ID;
					}
					else
					{
						this._HostID = default(int);
					}
					this.SendPropertyChanged("Host");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="rpt.EmailAddresses_COUNT_BY_SCHEME")]
	public partial class EmailAddresses_COUNT_BY_SCHEME : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RowNumber;
		
		private int _SchemeID;
		
		private int _Count;
		
		private int _Rank;
		
		private int _DenseRank;
		
		private byte _NTile;
		
		private EntityRef<Scheme> _Scheme;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRowNumberChanging(int value);
    partial void OnRowNumberChanged();
    partial void OnSchemeIDChanging(int value);
    partial void OnSchemeIDChanged();
    partial void OnCountChanging(int value);
    partial void OnCountChanged();
    partial void OnRankChanging(int value);
    partial void OnRankChanged();
    partial void OnDenseRankChanging(int value);
    partial void OnDenseRankChanged();
    partial void OnNTileChanging(byte value);
    partial void OnNTileChanged();
    #endregion
		
		public EmailAddresses_COUNT_BY_SCHEME()
		{
			this._Scheme = default(EntityRef<Scheme>);
			OnCreated();
		}
		
		[Column(Storage="_RowNumber", DbType="Int NOT NULL")]
		public int RowNumber
		{
			get
			{
				return this._RowNumber;
			}
			set
			{
				if ((this._RowNumber != value))
				{
					this.OnRowNumberChanging(value);
					this.SendPropertyChanging();
					this._RowNumber = value;
					this.SendPropertyChanged("RowNumber");
					this.OnRowNumberChanged();
				}
			}
		}
		
		[Column(Storage="_SchemeID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int SchemeID
		{
			get
			{
				return this._SchemeID;
			}
			set
			{
				if ((this._SchemeID != value))
				{
					if (this._Scheme.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSchemeIDChanging(value);
					this.SendPropertyChanging();
					this._SchemeID = value;
					this.SendPropertyChanged("SchemeID");
					this.OnSchemeIDChanged();
				}
			}
		}
		
		[Column(Storage="_Count", DbType="Int NOT NULL")]
		public int Count
		{
			get
			{
				return this._Count;
			}
			set
			{
				if ((this._Count != value))
				{
					this.OnCountChanging(value);
					this.SendPropertyChanging();
					this._Count = value;
					this.SendPropertyChanged("Count");
					this.OnCountChanged();
				}
			}
		}
		
		[Column(Storage="_Rank", DbType="Int NOT NULL")]
		public int Rank
		{
			get
			{
				return this._Rank;
			}
			set
			{
				if ((this._Rank != value))
				{
					this.OnRankChanging(value);
					this.SendPropertyChanging();
					this._Rank = value;
					this.SendPropertyChanged("Rank");
					this.OnRankChanged();
				}
			}
		}
		
		[Column(Storage="_DenseRank", DbType="Int NOT NULL")]
		public int DenseRank
		{
			get
			{
				return this._DenseRank;
			}
			set
			{
				if ((this._DenseRank != value))
				{
					this.OnDenseRankChanging(value);
					this.SendPropertyChanging();
					this._DenseRank = value;
					this.SendPropertyChanged("DenseRank");
					this.OnDenseRankChanged();
				}
			}
		}
		
		[Column(Storage="_NTile", DbType="TinyInt NOT NULL")]
		public byte NTile
		{
			get
			{
				return this._NTile;
			}
			set
			{
				if ((this._NTile != value))
				{
					this.OnNTileChanging(value);
					this.SendPropertyChanging();
					this._NTile = value;
					this.SendPropertyChanged("NTile");
					this.OnNTileChanged();
				}
			}
		}
		
		[Association(Name="Scheme_EmailAddresses_COUNT_BY_SCHEME", Storage="_Scheme", ThisKey="SchemeID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Scheme Scheme
		{
			get
			{
				return this._Scheme.Entity;
			}
			set
			{
				Scheme previousValue = this._Scheme.Entity;
				if (((previousValue != value) 
							|| (this._Scheme.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Scheme.Entity = null;
						previousValue.EmailAddresses_COUNT_BY_SCHEME = null;
					}
					this._Scheme.Entity = value;
					if ((value != null))
					{
						value.EmailAddresses_COUNT_BY_SCHEME = this;
						this._SchemeID = value.ID;
					}
					else
					{
						this._SchemeID = default(int);
					}
					this.SendPropertyChanged("Scheme");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="rpt.EmailAddresses_MOST_POPULAR_ABSOLUTEURIS_BY_ABSOLUTEURIS")]
	public partial class EmailAddresses_MOST_POPULAR_ABSOLUTEURIS_BY_ABSOLUTEURI : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RowNumber;
		
		private System.Nullable<System.DateTime> _InitiallyDiscovered;
		
		private System.DateTime _LastDiscovered;
		
		private long _EmailAddressID;
		
		private int _Count;
		
		private System.Nullable<short> _DaysSinceInitiallyDiscovered;
		
		private short _DaysSinceLastDiscovered;
		
		private System.Nullable<double> _Strength;
		
		private int _Rank;
		
		private int _DenseRank;
		
		private byte _NTile;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRowNumberChanging(int value);
    partial void OnRowNumberChanged();
    partial void OnInitiallyDiscoveredChanging(System.Nullable<System.DateTime> value);
    partial void OnInitiallyDiscoveredChanged();
    partial void OnLastDiscoveredChanging(System.DateTime value);
    partial void OnLastDiscoveredChanged();
    partial void OnEmailAddressIDChanging(long value);
    partial void OnEmailAddressIDChanged();
    partial void OnCountChanging(int value);
    partial void OnCountChanged();
    partial void OnDaysSinceInitiallyDiscoveredChanging(System.Nullable<short> value);
    partial void OnDaysSinceInitiallyDiscoveredChanged();
    partial void OnDaysSinceLastDiscoveredChanging(short value);
    partial void OnDaysSinceLastDiscoveredChanged();
    partial void OnStrengthChanging(System.Nullable<double> value);
    partial void OnStrengthChanged();
    partial void OnRankChanging(int value);
    partial void OnRankChanged();
    partial void OnDenseRankChanging(int value);
    partial void OnDenseRankChanged();
    partial void OnNTileChanging(byte value);
    partial void OnNTileChanged();
    #endregion
		
		public EmailAddresses_MOST_POPULAR_ABSOLUTEURIS_BY_ABSOLUTEURI()
		{
			OnCreated();
		}
		
		[Column(Storage="_RowNumber", DbType="Int NOT NULL")]
		public int RowNumber
		{
			get
			{
				return this._RowNumber;
			}
			set
			{
				if ((this._RowNumber != value))
				{
					this.OnRowNumberChanging(value);
					this.SendPropertyChanging();
					this._RowNumber = value;
					this.SendPropertyChanged("RowNumber");
					this.OnRowNumberChanged();
				}
			}
		}
		
		[Column(Storage="_InitiallyDiscovered", DbType="DateTime")]
		public System.Nullable<System.DateTime> InitiallyDiscovered
		{
			get
			{
				return this._InitiallyDiscovered;
			}
			set
			{
				if ((this._InitiallyDiscovered != value))
				{
					this.OnInitiallyDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._InitiallyDiscovered = value;
					this.SendPropertyChanged("InitiallyDiscovered");
					this.OnInitiallyDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_LastDiscovered", DbType="DateTime NOT NULL")]
		public System.DateTime LastDiscovered
		{
			get
			{
				return this._LastDiscovered;
			}
			set
			{
				if ((this._LastDiscovered != value))
				{
					this.OnLastDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._LastDiscovered = value;
					this.SendPropertyChanged("LastDiscovered");
					this.OnLastDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_EmailAddressID", DbType="BigInt NOT NULL", IsPrimaryKey=true)]
		public long EmailAddressID
		{
			get
			{
				return this._EmailAddressID;
			}
			set
			{
				if ((this._EmailAddressID != value))
				{
					this.OnEmailAddressIDChanging(value);
					this.SendPropertyChanging();
					this._EmailAddressID = value;
					this.SendPropertyChanged("EmailAddressID");
					this.OnEmailAddressIDChanged();
				}
			}
		}
		
		[Column(Storage="_Count", DbType="Int NOT NULL")]
		public int Count
		{
			get
			{
				return this._Count;
			}
			set
			{
				if ((this._Count != value))
				{
					this.OnCountChanging(value);
					this.SendPropertyChanging();
					this._Count = value;
					this.SendPropertyChanged("Count");
					this.OnCountChanged();
				}
			}
		}
		
		[Column(Storage="_DaysSinceInitiallyDiscovered", DbType="SmallInt")]
		public System.Nullable<short> DaysSinceInitiallyDiscovered
		{
			get
			{
				return this._DaysSinceInitiallyDiscovered;
			}
			set
			{
				if ((this._DaysSinceInitiallyDiscovered != value))
				{
					this.OnDaysSinceInitiallyDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._DaysSinceInitiallyDiscovered = value;
					this.SendPropertyChanged("DaysSinceInitiallyDiscovered");
					this.OnDaysSinceInitiallyDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_DaysSinceLastDiscovered", DbType="SmallInt NOT NULL")]
		public short DaysSinceLastDiscovered
		{
			get
			{
				return this._DaysSinceLastDiscovered;
			}
			set
			{
				if ((this._DaysSinceLastDiscovered != value))
				{
					this.OnDaysSinceLastDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._DaysSinceLastDiscovered = value;
					this.SendPropertyChanged("DaysSinceLastDiscovered");
					this.OnDaysSinceLastDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_Strength", DbType="Float")]
		public System.Nullable<double> Strength
		{
			get
			{
				return this._Strength;
			}
			set
			{
				if ((this._Strength != value))
				{
					this.OnStrengthChanging(value);
					this.SendPropertyChanging();
					this._Strength = value;
					this.SendPropertyChanged("Strength");
					this.OnStrengthChanged();
				}
			}
		}
		
		[Column(Storage="_Rank", DbType="Int NOT NULL")]
		public int Rank
		{
			get
			{
				return this._Rank;
			}
			set
			{
				if ((this._Rank != value))
				{
					this.OnRankChanging(value);
					this.SendPropertyChanging();
					this._Rank = value;
					this.SendPropertyChanged("Rank");
					this.OnRankChanged();
				}
			}
		}
		
		[Column(Storage="_DenseRank", DbType="Int NOT NULL")]
		public int DenseRank
		{
			get
			{
				return this._DenseRank;
			}
			set
			{
				if ((this._DenseRank != value))
				{
					this.OnDenseRankChanging(value);
					this.SendPropertyChanging();
					this._DenseRank = value;
					this.SendPropertyChanged("DenseRank");
					this.OnDenseRankChanged();
				}
			}
		}
		
		[Column(Storage="_NTile", DbType="TinyInt NOT NULL")]
		public byte NTile
		{
			get
			{
				return this._NTile;
			}
			set
			{
				if ((this._NTile != value))
				{
					this.OnNTileChanging(value);
					this.SendPropertyChanging();
					this._NTile = value;
					this.SendPropertyChanged("NTile");
					this.OnNTileChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="rpt.EmailAddresses_MOST_POPULAR_ABSOLUTEURIS_BY_DOMAINS")]
	public partial class EmailAddresses_MOST_POPULAR_ABSOLUTEURIS_BY_DOMAIN : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RowNumber;
		
		private System.Nullable<System.DateTime> _InitiallyDiscovered;
		
		private System.DateTime _LastDiscovered;
		
		private long _EmailAddressID;
		
		private int _Count;
		
		private System.Nullable<short> _DaysSinceInitiallyDiscovered;
		
		private short _DaysSinceLastDiscovered;
		
		private System.Nullable<double> _Strength;
		
		private int _Rank;
		
		private int _DenseRank;
		
		private byte _NTile;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRowNumberChanging(int value);
    partial void OnRowNumberChanged();
    partial void OnInitiallyDiscoveredChanging(System.Nullable<System.DateTime> value);
    partial void OnInitiallyDiscoveredChanged();
    partial void OnLastDiscoveredChanging(System.DateTime value);
    partial void OnLastDiscoveredChanged();
    partial void OnEmailAddressIDChanging(long value);
    partial void OnEmailAddressIDChanged();
    partial void OnCountChanging(int value);
    partial void OnCountChanged();
    partial void OnDaysSinceInitiallyDiscoveredChanging(System.Nullable<short> value);
    partial void OnDaysSinceInitiallyDiscoveredChanged();
    partial void OnDaysSinceLastDiscoveredChanging(short value);
    partial void OnDaysSinceLastDiscoveredChanged();
    partial void OnStrengthChanging(System.Nullable<double> value);
    partial void OnStrengthChanged();
    partial void OnRankChanging(int value);
    partial void OnRankChanged();
    partial void OnDenseRankChanging(int value);
    partial void OnDenseRankChanged();
    partial void OnNTileChanging(byte value);
    partial void OnNTileChanged();
    #endregion
		
		public EmailAddresses_MOST_POPULAR_ABSOLUTEURIS_BY_DOMAIN()
		{
			OnCreated();
		}
		
		[Column(Storage="_RowNumber", DbType="Int NOT NULL")]
		public int RowNumber
		{
			get
			{
				return this._RowNumber;
			}
			set
			{
				if ((this._RowNumber != value))
				{
					this.OnRowNumberChanging(value);
					this.SendPropertyChanging();
					this._RowNumber = value;
					this.SendPropertyChanged("RowNumber");
					this.OnRowNumberChanged();
				}
			}
		}
		
		[Column(Storage="_InitiallyDiscovered", DbType="DateTime")]
		public System.Nullable<System.DateTime> InitiallyDiscovered
		{
			get
			{
				return this._InitiallyDiscovered;
			}
			set
			{
				if ((this._InitiallyDiscovered != value))
				{
					this.OnInitiallyDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._InitiallyDiscovered = value;
					this.SendPropertyChanged("InitiallyDiscovered");
					this.OnInitiallyDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_LastDiscovered", DbType="DateTime NOT NULL")]
		public System.DateTime LastDiscovered
		{
			get
			{
				return this._LastDiscovered;
			}
			set
			{
				if ((this._LastDiscovered != value))
				{
					this.OnLastDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._LastDiscovered = value;
					this.SendPropertyChanged("LastDiscovered");
					this.OnLastDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_EmailAddressID", DbType="BigInt NOT NULL", IsPrimaryKey=true)]
		public long EmailAddressID
		{
			get
			{
				return this._EmailAddressID;
			}
			set
			{
				if ((this._EmailAddressID != value))
				{
					this.OnEmailAddressIDChanging(value);
					this.SendPropertyChanging();
					this._EmailAddressID = value;
					this.SendPropertyChanged("EmailAddressID");
					this.OnEmailAddressIDChanged();
				}
			}
		}
		
		[Column(Storage="_Count", DbType="Int NOT NULL")]
		public int Count
		{
			get
			{
				return this._Count;
			}
			set
			{
				if ((this._Count != value))
				{
					this.OnCountChanging(value);
					this.SendPropertyChanging();
					this._Count = value;
					this.SendPropertyChanged("Count");
					this.OnCountChanged();
				}
			}
		}
		
		[Column(Storage="_DaysSinceInitiallyDiscovered", DbType="SmallInt")]
		public System.Nullable<short> DaysSinceInitiallyDiscovered
		{
			get
			{
				return this._DaysSinceInitiallyDiscovered;
			}
			set
			{
				if ((this._DaysSinceInitiallyDiscovered != value))
				{
					this.OnDaysSinceInitiallyDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._DaysSinceInitiallyDiscovered = value;
					this.SendPropertyChanged("DaysSinceInitiallyDiscovered");
					this.OnDaysSinceInitiallyDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_DaysSinceLastDiscovered", DbType="SmallInt NOT NULL")]
		public short DaysSinceLastDiscovered
		{
			get
			{
				return this._DaysSinceLastDiscovered;
			}
			set
			{
				if ((this._DaysSinceLastDiscovered != value))
				{
					this.OnDaysSinceLastDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._DaysSinceLastDiscovered = value;
					this.SendPropertyChanged("DaysSinceLastDiscovered");
					this.OnDaysSinceLastDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_Strength", DbType="Float")]
		public System.Nullable<double> Strength
		{
			get
			{
				return this._Strength;
			}
			set
			{
				if ((this._Strength != value))
				{
					this.OnStrengthChanging(value);
					this.SendPropertyChanging();
					this._Strength = value;
					this.SendPropertyChanged("Strength");
					this.OnStrengthChanged();
				}
			}
		}
		
		[Column(Storage="_Rank", DbType="Int NOT NULL")]
		public int Rank
		{
			get
			{
				return this._Rank;
			}
			set
			{
				if ((this._Rank != value))
				{
					this.OnRankChanging(value);
					this.SendPropertyChanging();
					this._Rank = value;
					this.SendPropertyChanged("Rank");
					this.OnRankChanged();
				}
			}
		}
		
		[Column(Storage="_DenseRank", DbType="Int NOT NULL")]
		public int DenseRank
		{
			get
			{
				return this._DenseRank;
			}
			set
			{
				if ((this._DenseRank != value))
				{
					this.OnDenseRankChanging(value);
					this.SendPropertyChanging();
					this._DenseRank = value;
					this.SendPropertyChanged("DenseRank");
					this.OnDenseRankChanged();
				}
			}
		}
		
		[Column(Storage="_NTile", DbType="TinyInt NOT NULL")]
		public byte NTile
		{
			get
			{
				return this._NTile;
			}
			set
			{
				if ((this._NTile != value))
				{
					this.OnNTileChanging(value);
					this.SendPropertyChanging();
					this._NTile = value;
					this.SendPropertyChanged("NTile");
					this.OnNTileChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="rpt.EmailAddresses_MOST_POPULAR_ABSOLUTEURIS_BY_EXTENSIONS")]
	public partial class EmailAddresses_MOST_POPULAR_ABSOLUTEURIS_BY_EXTENSION : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RowNumber;
		
		private System.Nullable<System.DateTime> _InitiallyDiscovered;
		
		private System.DateTime _LastDiscovered;
		
		private long _EmailAddressID;
		
		private int _Count;
		
		private System.Nullable<short> _DaysSinceInitiallyDiscovered;
		
		private short _DaysSinceLastDiscovered;
		
		private System.Nullable<double> _Strength;
		
		private int _Rank;
		
		private int _DenseRank;
		
		private byte _NTile;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRowNumberChanging(int value);
    partial void OnRowNumberChanged();
    partial void OnInitiallyDiscoveredChanging(System.Nullable<System.DateTime> value);
    partial void OnInitiallyDiscoveredChanged();
    partial void OnLastDiscoveredChanging(System.DateTime value);
    partial void OnLastDiscoveredChanged();
    partial void OnEmailAddressIDChanging(long value);
    partial void OnEmailAddressIDChanged();
    partial void OnCountChanging(int value);
    partial void OnCountChanged();
    partial void OnDaysSinceInitiallyDiscoveredChanging(System.Nullable<short> value);
    partial void OnDaysSinceInitiallyDiscoveredChanged();
    partial void OnDaysSinceLastDiscoveredChanging(short value);
    partial void OnDaysSinceLastDiscoveredChanged();
    partial void OnStrengthChanging(System.Nullable<double> value);
    partial void OnStrengthChanged();
    partial void OnRankChanging(int value);
    partial void OnRankChanged();
    partial void OnDenseRankChanging(int value);
    partial void OnDenseRankChanged();
    partial void OnNTileChanging(byte value);
    partial void OnNTileChanged();
    #endregion
		
		public EmailAddresses_MOST_POPULAR_ABSOLUTEURIS_BY_EXTENSION()
		{
			OnCreated();
		}
		
		[Column(Storage="_RowNumber", DbType="Int NOT NULL")]
		public int RowNumber
		{
			get
			{
				return this._RowNumber;
			}
			set
			{
				if ((this._RowNumber != value))
				{
					this.OnRowNumberChanging(value);
					this.SendPropertyChanging();
					this._RowNumber = value;
					this.SendPropertyChanged("RowNumber");
					this.OnRowNumberChanged();
				}
			}
		}
		
		[Column(Storage="_InitiallyDiscovered", DbType="DateTime")]
		public System.Nullable<System.DateTime> InitiallyDiscovered
		{
			get
			{
				return this._InitiallyDiscovered;
			}
			set
			{
				if ((this._InitiallyDiscovered != value))
				{
					this.OnInitiallyDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._InitiallyDiscovered = value;
					this.SendPropertyChanged("InitiallyDiscovered");
					this.OnInitiallyDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_LastDiscovered", DbType="DateTime NOT NULL")]
		public System.DateTime LastDiscovered
		{
			get
			{
				return this._LastDiscovered;
			}
			set
			{
				if ((this._LastDiscovered != value))
				{
					this.OnLastDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._LastDiscovered = value;
					this.SendPropertyChanged("LastDiscovered");
					this.OnLastDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_EmailAddressID", DbType="BigInt NOT NULL", IsPrimaryKey=true)]
		public long EmailAddressID
		{
			get
			{
				return this._EmailAddressID;
			}
			set
			{
				if ((this._EmailAddressID != value))
				{
					this.OnEmailAddressIDChanging(value);
					this.SendPropertyChanging();
					this._EmailAddressID = value;
					this.SendPropertyChanged("EmailAddressID");
					this.OnEmailAddressIDChanged();
				}
			}
		}
		
		[Column(Storage="_Count", DbType="Int NOT NULL")]
		public int Count
		{
			get
			{
				return this._Count;
			}
			set
			{
				if ((this._Count != value))
				{
					this.OnCountChanging(value);
					this.SendPropertyChanging();
					this._Count = value;
					this.SendPropertyChanged("Count");
					this.OnCountChanged();
				}
			}
		}
		
		[Column(Storage="_DaysSinceInitiallyDiscovered", DbType="SmallInt")]
		public System.Nullable<short> DaysSinceInitiallyDiscovered
		{
			get
			{
				return this._DaysSinceInitiallyDiscovered;
			}
			set
			{
				if ((this._DaysSinceInitiallyDiscovered != value))
				{
					this.OnDaysSinceInitiallyDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._DaysSinceInitiallyDiscovered = value;
					this.SendPropertyChanged("DaysSinceInitiallyDiscovered");
					this.OnDaysSinceInitiallyDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_DaysSinceLastDiscovered", DbType="SmallInt NOT NULL")]
		public short DaysSinceLastDiscovered
		{
			get
			{
				return this._DaysSinceLastDiscovered;
			}
			set
			{
				if ((this._DaysSinceLastDiscovered != value))
				{
					this.OnDaysSinceLastDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._DaysSinceLastDiscovered = value;
					this.SendPropertyChanged("DaysSinceLastDiscovered");
					this.OnDaysSinceLastDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_Strength", DbType="Float")]
		public System.Nullable<double> Strength
		{
			get
			{
				return this._Strength;
			}
			set
			{
				if ((this._Strength != value))
				{
					this.OnStrengthChanging(value);
					this.SendPropertyChanging();
					this._Strength = value;
					this.SendPropertyChanged("Strength");
					this.OnStrengthChanged();
				}
			}
		}
		
		[Column(Storage="_Rank", DbType="Int NOT NULL")]
		public int Rank
		{
			get
			{
				return this._Rank;
			}
			set
			{
				if ((this._Rank != value))
				{
					this.OnRankChanging(value);
					this.SendPropertyChanging();
					this._Rank = value;
					this.SendPropertyChanged("Rank");
					this.OnRankChanged();
				}
			}
		}
		
		[Column(Storage="_DenseRank", DbType="Int NOT NULL")]
		public int DenseRank
		{
			get
			{
				return this._DenseRank;
			}
			set
			{
				if ((this._DenseRank != value))
				{
					this.OnDenseRankChanging(value);
					this.SendPropertyChanging();
					this._DenseRank = value;
					this.SendPropertyChanged("DenseRank");
					this.OnDenseRankChanged();
				}
			}
		}
		
		[Column(Storage="_NTile", DbType="TinyInt NOT NULL")]
		public byte NTile
		{
			get
			{
				return this._NTile;
			}
			set
			{
				if ((this._NTile != value))
				{
					this.OnNTileChanging(value);
					this.SendPropertyChanging();
					this._NTile = value;
					this.SendPropertyChanged("NTile");
					this.OnNTileChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="rpt.EmailAddresses_MOST_POPULAR_ABSOLUTEURIS_BY_HOSTS")]
	public partial class EmailAddresses_MOST_POPULAR_ABSOLUTEURIS_BY_HOST : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RowNumber;
		
		private System.Nullable<System.DateTime> _InitiallyDiscovered;
		
		private System.DateTime _LastDiscovered;
		
		private long _EmailAddressID;
		
		private int _Count;
		
		private System.Nullable<short> _DaysSinceInitiallyDiscovered;
		
		private short _DaysSinceLastDiscovered;
		
		private System.Nullable<double> _Strength;
		
		private int _Rank;
		
		private int _DenseRank;
		
		private byte _NTile;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRowNumberChanging(int value);
    partial void OnRowNumberChanged();
    partial void OnInitiallyDiscoveredChanging(System.Nullable<System.DateTime> value);
    partial void OnInitiallyDiscoveredChanged();
    partial void OnLastDiscoveredChanging(System.DateTime value);
    partial void OnLastDiscoveredChanged();
    partial void OnEmailAddressIDChanging(long value);
    partial void OnEmailAddressIDChanged();
    partial void OnCountChanging(int value);
    partial void OnCountChanged();
    partial void OnDaysSinceInitiallyDiscoveredChanging(System.Nullable<short> value);
    partial void OnDaysSinceInitiallyDiscoveredChanged();
    partial void OnDaysSinceLastDiscoveredChanging(short value);
    partial void OnDaysSinceLastDiscoveredChanged();
    partial void OnStrengthChanging(System.Nullable<double> value);
    partial void OnStrengthChanged();
    partial void OnRankChanging(int value);
    partial void OnRankChanged();
    partial void OnDenseRankChanging(int value);
    partial void OnDenseRankChanged();
    partial void OnNTileChanging(byte value);
    partial void OnNTileChanged();
    #endregion
		
		public EmailAddresses_MOST_POPULAR_ABSOLUTEURIS_BY_HOST()
		{
			OnCreated();
		}
		
		[Column(Storage="_RowNumber", DbType="Int NOT NULL")]
		public int RowNumber
		{
			get
			{
				return this._RowNumber;
			}
			set
			{
				if ((this._RowNumber != value))
				{
					this.OnRowNumberChanging(value);
					this.SendPropertyChanging();
					this._RowNumber = value;
					this.SendPropertyChanged("RowNumber");
					this.OnRowNumberChanged();
				}
			}
		}
		
		[Column(Storage="_InitiallyDiscovered", DbType="DateTime")]
		public System.Nullable<System.DateTime> InitiallyDiscovered
		{
			get
			{
				return this._InitiallyDiscovered;
			}
			set
			{
				if ((this._InitiallyDiscovered != value))
				{
					this.OnInitiallyDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._InitiallyDiscovered = value;
					this.SendPropertyChanged("InitiallyDiscovered");
					this.OnInitiallyDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_LastDiscovered", DbType="DateTime NOT NULL")]
		public System.DateTime LastDiscovered
		{
			get
			{
				return this._LastDiscovered;
			}
			set
			{
				if ((this._LastDiscovered != value))
				{
					this.OnLastDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._LastDiscovered = value;
					this.SendPropertyChanged("LastDiscovered");
					this.OnLastDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_EmailAddressID", DbType="BigInt NOT NULL", IsPrimaryKey=true)]
		public long EmailAddressID
		{
			get
			{
				return this._EmailAddressID;
			}
			set
			{
				if ((this._EmailAddressID != value))
				{
					this.OnEmailAddressIDChanging(value);
					this.SendPropertyChanging();
					this._EmailAddressID = value;
					this.SendPropertyChanged("EmailAddressID");
					this.OnEmailAddressIDChanged();
				}
			}
		}
		
		[Column(Storage="_Count", DbType="Int NOT NULL")]
		public int Count
		{
			get
			{
				return this._Count;
			}
			set
			{
				if ((this._Count != value))
				{
					this.OnCountChanging(value);
					this.SendPropertyChanging();
					this._Count = value;
					this.SendPropertyChanged("Count");
					this.OnCountChanged();
				}
			}
		}
		
		[Column(Storage="_DaysSinceInitiallyDiscovered", DbType="SmallInt")]
		public System.Nullable<short> DaysSinceInitiallyDiscovered
		{
			get
			{
				return this._DaysSinceInitiallyDiscovered;
			}
			set
			{
				if ((this._DaysSinceInitiallyDiscovered != value))
				{
					this.OnDaysSinceInitiallyDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._DaysSinceInitiallyDiscovered = value;
					this.SendPropertyChanged("DaysSinceInitiallyDiscovered");
					this.OnDaysSinceInitiallyDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_DaysSinceLastDiscovered", DbType="SmallInt NOT NULL")]
		public short DaysSinceLastDiscovered
		{
			get
			{
				return this._DaysSinceLastDiscovered;
			}
			set
			{
				if ((this._DaysSinceLastDiscovered != value))
				{
					this.OnDaysSinceLastDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._DaysSinceLastDiscovered = value;
					this.SendPropertyChanged("DaysSinceLastDiscovered");
					this.OnDaysSinceLastDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_Strength", DbType="Float")]
		public System.Nullable<double> Strength
		{
			get
			{
				return this._Strength;
			}
			set
			{
				if ((this._Strength != value))
				{
					this.OnStrengthChanging(value);
					this.SendPropertyChanging();
					this._Strength = value;
					this.SendPropertyChanged("Strength");
					this.OnStrengthChanged();
				}
			}
		}
		
		[Column(Storage="_Rank", DbType="Int NOT NULL")]
		public int Rank
		{
			get
			{
				return this._Rank;
			}
			set
			{
				if ((this._Rank != value))
				{
					this.OnRankChanging(value);
					this.SendPropertyChanging();
					this._Rank = value;
					this.SendPropertyChanged("Rank");
					this.OnRankChanged();
				}
			}
		}
		
		[Column(Storage="_DenseRank", DbType="Int NOT NULL")]
		public int DenseRank
		{
			get
			{
				return this._DenseRank;
			}
			set
			{
				if ((this._DenseRank != value))
				{
					this.OnDenseRankChanging(value);
					this.SendPropertyChanging();
					this._DenseRank = value;
					this.SendPropertyChanged("DenseRank");
					this.OnDenseRankChanged();
				}
			}
		}
		
		[Column(Storage="_NTile", DbType="TinyInt NOT NULL")]
		public byte NTile
		{
			get
			{
				return this._NTile;
			}
			set
			{
				if ((this._NTile != value))
				{
					this.OnNTileChanging(value);
					this.SendPropertyChanging();
					this._NTile = value;
					this.SendPropertyChanged("NTile");
					this.OnNTileChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="rpt.EmailAddresses_MOST_POPULAR_ABSOLUTEURIS_BY_SCHEMES")]
	public partial class EmailAddresses_MOST_POPULAR_ABSOLUTEURIS_BY_SCHEME : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RowNumber;
		
		private System.Nullable<System.DateTime> _InitiallyDiscovered;
		
		private System.DateTime _LastDiscovered;
		
		private long _EmailAddressID;
		
		private int _Count;
		
		private System.Nullable<short> _DaysSinceInitiallyDiscovered;
		
		private short _DaysSinceLastDiscovered;
		
		private System.Nullable<double> _Strength;
		
		private int _Rank;
		
		private int _DenseRank;
		
		private byte _NTile;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRowNumberChanging(int value);
    partial void OnRowNumberChanged();
    partial void OnInitiallyDiscoveredChanging(System.Nullable<System.DateTime> value);
    partial void OnInitiallyDiscoveredChanged();
    partial void OnLastDiscoveredChanging(System.DateTime value);
    partial void OnLastDiscoveredChanged();
    partial void OnEmailAddressIDChanging(long value);
    partial void OnEmailAddressIDChanged();
    partial void OnCountChanging(int value);
    partial void OnCountChanged();
    partial void OnDaysSinceInitiallyDiscoveredChanging(System.Nullable<short> value);
    partial void OnDaysSinceInitiallyDiscoveredChanged();
    partial void OnDaysSinceLastDiscoveredChanging(short value);
    partial void OnDaysSinceLastDiscoveredChanged();
    partial void OnStrengthChanging(System.Nullable<double> value);
    partial void OnStrengthChanged();
    partial void OnRankChanging(int value);
    partial void OnRankChanged();
    partial void OnDenseRankChanging(int value);
    partial void OnDenseRankChanged();
    partial void OnNTileChanging(byte value);
    partial void OnNTileChanged();
    #endregion
		
		public EmailAddresses_MOST_POPULAR_ABSOLUTEURIS_BY_SCHEME()
		{
			OnCreated();
		}
		
		[Column(Storage="_RowNumber", DbType="Int NOT NULL")]
		public int RowNumber
		{
			get
			{
				return this._RowNumber;
			}
			set
			{
				if ((this._RowNumber != value))
				{
					this.OnRowNumberChanging(value);
					this.SendPropertyChanging();
					this._RowNumber = value;
					this.SendPropertyChanged("RowNumber");
					this.OnRowNumberChanged();
				}
			}
		}
		
		[Column(Storage="_InitiallyDiscovered", DbType="DateTime")]
		public System.Nullable<System.DateTime> InitiallyDiscovered
		{
			get
			{
				return this._InitiallyDiscovered;
			}
			set
			{
				if ((this._InitiallyDiscovered != value))
				{
					this.OnInitiallyDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._InitiallyDiscovered = value;
					this.SendPropertyChanged("InitiallyDiscovered");
					this.OnInitiallyDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_LastDiscovered", DbType="DateTime NOT NULL")]
		public System.DateTime LastDiscovered
		{
			get
			{
				return this._LastDiscovered;
			}
			set
			{
				if ((this._LastDiscovered != value))
				{
					this.OnLastDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._LastDiscovered = value;
					this.SendPropertyChanged("LastDiscovered");
					this.OnLastDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_EmailAddressID", DbType="BigInt NOT NULL", IsPrimaryKey=true)]
		public long EmailAddressID
		{
			get
			{
				return this._EmailAddressID;
			}
			set
			{
				if ((this._EmailAddressID != value))
				{
					this.OnEmailAddressIDChanging(value);
					this.SendPropertyChanging();
					this._EmailAddressID = value;
					this.SendPropertyChanged("EmailAddressID");
					this.OnEmailAddressIDChanged();
				}
			}
		}
		
		[Column(Storage="_Count", DbType="Int NOT NULL")]
		public int Count
		{
			get
			{
				return this._Count;
			}
			set
			{
				if ((this._Count != value))
				{
					this.OnCountChanging(value);
					this.SendPropertyChanging();
					this._Count = value;
					this.SendPropertyChanged("Count");
					this.OnCountChanged();
				}
			}
		}
		
		[Column(Storage="_DaysSinceInitiallyDiscovered", DbType="SmallInt")]
		public System.Nullable<short> DaysSinceInitiallyDiscovered
		{
			get
			{
				return this._DaysSinceInitiallyDiscovered;
			}
			set
			{
				if ((this._DaysSinceInitiallyDiscovered != value))
				{
					this.OnDaysSinceInitiallyDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._DaysSinceInitiallyDiscovered = value;
					this.SendPropertyChanged("DaysSinceInitiallyDiscovered");
					this.OnDaysSinceInitiallyDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_DaysSinceLastDiscovered", DbType="SmallInt NOT NULL")]
		public short DaysSinceLastDiscovered
		{
			get
			{
				return this._DaysSinceLastDiscovered;
			}
			set
			{
				if ((this._DaysSinceLastDiscovered != value))
				{
					this.OnDaysSinceLastDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._DaysSinceLastDiscovered = value;
					this.SendPropertyChanged("DaysSinceLastDiscovered");
					this.OnDaysSinceLastDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_Strength", DbType="Float")]
		public System.Nullable<double> Strength
		{
			get
			{
				return this._Strength;
			}
			set
			{
				if ((this._Strength != value))
				{
					this.OnStrengthChanging(value);
					this.SendPropertyChanging();
					this._Strength = value;
					this.SendPropertyChanged("Strength");
					this.OnStrengthChanged();
				}
			}
		}
		
		[Column(Storage="_Rank", DbType="Int NOT NULL")]
		public int Rank
		{
			get
			{
				return this._Rank;
			}
			set
			{
				if ((this._Rank != value))
				{
					this.OnRankChanging(value);
					this.SendPropertyChanging();
					this._Rank = value;
					this.SendPropertyChanged("Rank");
					this.OnRankChanged();
				}
			}
		}
		
		[Column(Storage="_DenseRank", DbType="Int NOT NULL")]
		public int DenseRank
		{
			get
			{
				return this._DenseRank;
			}
			set
			{
				if ((this._DenseRank != value))
				{
					this.OnDenseRankChanging(value);
					this.SendPropertyChanging();
					this._DenseRank = value;
					this.SendPropertyChanged("DenseRank");
					this.OnDenseRankChanged();
				}
			}
		}
		
		[Column(Storage="_NTile", DbType="TinyInt NOT NULL")]
		public byte NTile
		{
			get
			{
				return this._NTile;
			}
			set
			{
				if ((this._NTile != value))
				{
					this.OnNTileChanging(value);
					this.SendPropertyChanging();
					this._NTile = value;
					this.SendPropertyChanged("NTile");
					this.OnNTileChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="rpt.EmailAddresses_MOST_POPULAR_DOMAINS_BY_ABSOLUTEURIS")]
	public partial class EmailAddresses_MOST_POPULAR_DOMAINS_BY_ABSOLUTEURI : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RowNumber;
		
		private System.Nullable<System.DateTime> _InitiallyDiscovered;
		
		private System.DateTime _LastDiscovered;
		
		private int _DomainID;
		
		private int _Count;
		
		private System.Nullable<short> _DaysSinceInitiallyDiscovered;
		
		private short _DaysSinceLastDiscovered;
		
		private System.Nullable<double> _Strength;
		
		private int _Rank;
		
		private int _DenseRank;
		
		private short _NTile;
		
		private EntityRef<Domain> _Domain;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRowNumberChanging(int value);
    partial void OnRowNumberChanged();
    partial void OnInitiallyDiscoveredChanging(System.Nullable<System.DateTime> value);
    partial void OnInitiallyDiscoveredChanged();
    partial void OnLastDiscoveredChanging(System.DateTime value);
    partial void OnLastDiscoveredChanged();
    partial void OnDomainIDChanging(int value);
    partial void OnDomainIDChanged();
    partial void OnCountChanging(int value);
    partial void OnCountChanged();
    partial void OnDaysSinceInitiallyDiscoveredChanging(System.Nullable<short> value);
    partial void OnDaysSinceInitiallyDiscoveredChanged();
    partial void OnDaysSinceLastDiscoveredChanging(short value);
    partial void OnDaysSinceLastDiscoveredChanged();
    partial void OnStrengthChanging(System.Nullable<double> value);
    partial void OnStrengthChanged();
    partial void OnRankChanging(int value);
    partial void OnRankChanged();
    partial void OnDenseRankChanging(int value);
    partial void OnDenseRankChanged();
    partial void OnNTileChanging(short value);
    partial void OnNTileChanged();
    #endregion
		
		public EmailAddresses_MOST_POPULAR_DOMAINS_BY_ABSOLUTEURI()
		{
			this._Domain = default(EntityRef<Domain>);
			OnCreated();
		}
		
		[Column(Storage="_RowNumber", DbType="Int NOT NULL")]
		public int RowNumber
		{
			get
			{
				return this._RowNumber;
			}
			set
			{
				if ((this._RowNumber != value))
				{
					this.OnRowNumberChanging(value);
					this.SendPropertyChanging();
					this._RowNumber = value;
					this.SendPropertyChanged("RowNumber");
					this.OnRowNumberChanged();
				}
			}
		}
		
		[Column(Storage="_InitiallyDiscovered", DbType="DateTime")]
		public System.Nullable<System.DateTime> InitiallyDiscovered
		{
			get
			{
				return this._InitiallyDiscovered;
			}
			set
			{
				if ((this._InitiallyDiscovered != value))
				{
					this.OnInitiallyDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._InitiallyDiscovered = value;
					this.SendPropertyChanged("InitiallyDiscovered");
					this.OnInitiallyDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_LastDiscovered", DbType="DateTime NOT NULL")]
		public System.DateTime LastDiscovered
		{
			get
			{
				return this._LastDiscovered;
			}
			set
			{
				if ((this._LastDiscovered != value))
				{
					this.OnLastDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._LastDiscovered = value;
					this.SendPropertyChanged("LastDiscovered");
					this.OnLastDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_DomainID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int DomainID
		{
			get
			{
				return this._DomainID;
			}
			set
			{
				if ((this._DomainID != value))
				{
					if (this._Domain.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDomainIDChanging(value);
					this.SendPropertyChanging();
					this._DomainID = value;
					this.SendPropertyChanged("DomainID");
					this.OnDomainIDChanged();
				}
			}
		}
		
		[Column(Storage="_Count", DbType="Int NOT NULL")]
		public int Count
		{
			get
			{
				return this._Count;
			}
			set
			{
				if ((this._Count != value))
				{
					this.OnCountChanging(value);
					this.SendPropertyChanging();
					this._Count = value;
					this.SendPropertyChanged("Count");
					this.OnCountChanged();
				}
			}
		}
		
		[Column(Storage="_DaysSinceInitiallyDiscovered", DbType="SmallInt")]
		public System.Nullable<short> DaysSinceInitiallyDiscovered
		{
			get
			{
				return this._DaysSinceInitiallyDiscovered;
			}
			set
			{
				if ((this._DaysSinceInitiallyDiscovered != value))
				{
					this.OnDaysSinceInitiallyDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._DaysSinceInitiallyDiscovered = value;
					this.SendPropertyChanged("DaysSinceInitiallyDiscovered");
					this.OnDaysSinceInitiallyDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_DaysSinceLastDiscovered", DbType="SmallInt NOT NULL")]
		public short DaysSinceLastDiscovered
		{
			get
			{
				return this._DaysSinceLastDiscovered;
			}
			set
			{
				if ((this._DaysSinceLastDiscovered != value))
				{
					this.OnDaysSinceLastDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._DaysSinceLastDiscovered = value;
					this.SendPropertyChanged("DaysSinceLastDiscovered");
					this.OnDaysSinceLastDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_Strength", DbType="Float")]
		public System.Nullable<double> Strength
		{
			get
			{
				return this._Strength;
			}
			set
			{
				if ((this._Strength != value))
				{
					this.OnStrengthChanging(value);
					this.SendPropertyChanging();
					this._Strength = value;
					this.SendPropertyChanged("Strength");
					this.OnStrengthChanged();
				}
			}
		}
		
		[Column(Storage="_Rank", DbType="Int NOT NULL")]
		public int Rank
		{
			get
			{
				return this._Rank;
			}
			set
			{
				if ((this._Rank != value))
				{
					this.OnRankChanging(value);
					this.SendPropertyChanging();
					this._Rank = value;
					this.SendPropertyChanged("Rank");
					this.OnRankChanged();
				}
			}
		}
		
		[Column(Storage="_DenseRank", DbType="Int NOT NULL")]
		public int DenseRank
		{
			get
			{
				return this._DenseRank;
			}
			set
			{
				if ((this._DenseRank != value))
				{
					this.OnDenseRankChanging(value);
					this.SendPropertyChanging();
					this._DenseRank = value;
					this.SendPropertyChanged("DenseRank");
					this.OnDenseRankChanged();
				}
			}
		}
		
		[Column(Storage="_NTile", DbType="SmallInt NOT NULL")]
		public short NTile
		{
			get
			{
				return this._NTile;
			}
			set
			{
				if ((this._NTile != value))
				{
					this.OnNTileChanging(value);
					this.SendPropertyChanging();
					this._NTile = value;
					this.SendPropertyChanged("NTile");
					this.OnNTileChanged();
				}
			}
		}
		
		[Association(Name="Domain_EmailAddresses_MOST_POPULAR_DOMAINS_BY_ABSOLUTEURI", Storage="_Domain", ThisKey="DomainID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Domain Domain
		{
			get
			{
				return this._Domain.Entity;
			}
			set
			{
				Domain previousValue = this._Domain.Entity;
				if (((previousValue != value) 
							|| (this._Domain.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Domain.Entity = null;
						previousValue.EmailAddresses_MOST_POPULAR_DOMAINS_BY_ABSOLUTEURI = null;
					}
					this._Domain.Entity = value;
					if ((value != null))
					{
						value.EmailAddresses_MOST_POPULAR_DOMAINS_BY_ABSOLUTEURI = this;
						this._DomainID = value.ID;
					}
					else
					{
						this._DomainID = default(int);
					}
					this.SendPropertyChanged("Domain");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="rpt.EmailAddresses_MOST_POPULAR_DOMAINS_BY_DOMAINS")]
	public partial class EmailAddresses_MOST_POPULAR_DOMAINS_BY_DOMAIN : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RowNumber;
		
		private System.Nullable<System.DateTime> _InitiallyDiscovered;
		
		private System.DateTime _LastDiscovered;
		
		private int _DomainID;
		
		private int _Count;
		
		private System.Nullable<short> _DaysSinceInitiallyDiscovered;
		
		private short _DaysSinceLastDiscovered;
		
		private System.Nullable<double> _Strength;
		
		private int _Rank;
		
		private int _DenseRank;
		
		private byte _NTile;
		
		private EntityRef<Domain> _Domain;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRowNumberChanging(int value);
    partial void OnRowNumberChanged();
    partial void OnInitiallyDiscoveredChanging(System.Nullable<System.DateTime> value);
    partial void OnInitiallyDiscoveredChanged();
    partial void OnLastDiscoveredChanging(System.DateTime value);
    partial void OnLastDiscoveredChanged();
    partial void OnDomainIDChanging(int value);
    partial void OnDomainIDChanged();
    partial void OnCountChanging(int value);
    partial void OnCountChanged();
    partial void OnDaysSinceInitiallyDiscoveredChanging(System.Nullable<short> value);
    partial void OnDaysSinceInitiallyDiscoveredChanged();
    partial void OnDaysSinceLastDiscoveredChanging(short value);
    partial void OnDaysSinceLastDiscoveredChanged();
    partial void OnStrengthChanging(System.Nullable<double> value);
    partial void OnStrengthChanged();
    partial void OnRankChanging(int value);
    partial void OnRankChanged();
    partial void OnDenseRankChanging(int value);
    partial void OnDenseRankChanged();
    partial void OnNTileChanging(byte value);
    partial void OnNTileChanged();
    #endregion
		
		public EmailAddresses_MOST_POPULAR_DOMAINS_BY_DOMAIN()
		{
			this._Domain = default(EntityRef<Domain>);
			OnCreated();
		}
		
		[Column(Storage="_RowNumber", DbType="Int NOT NULL")]
		public int RowNumber
		{
			get
			{
				return this._RowNumber;
			}
			set
			{
				if ((this._RowNumber != value))
				{
					this.OnRowNumberChanging(value);
					this.SendPropertyChanging();
					this._RowNumber = value;
					this.SendPropertyChanged("RowNumber");
					this.OnRowNumberChanged();
				}
			}
		}
		
		[Column(Storage="_InitiallyDiscovered", DbType="DateTime")]
		public System.Nullable<System.DateTime> InitiallyDiscovered
		{
			get
			{
				return this._InitiallyDiscovered;
			}
			set
			{
				if ((this._InitiallyDiscovered != value))
				{
					this.OnInitiallyDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._InitiallyDiscovered = value;
					this.SendPropertyChanged("InitiallyDiscovered");
					this.OnInitiallyDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_LastDiscovered", DbType="DateTime NOT NULL")]
		public System.DateTime LastDiscovered
		{
			get
			{
				return this._LastDiscovered;
			}
			set
			{
				if ((this._LastDiscovered != value))
				{
					this.OnLastDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._LastDiscovered = value;
					this.SendPropertyChanged("LastDiscovered");
					this.OnLastDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_DomainID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int DomainID
		{
			get
			{
				return this._DomainID;
			}
			set
			{
				if ((this._DomainID != value))
				{
					if (this._Domain.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDomainIDChanging(value);
					this.SendPropertyChanging();
					this._DomainID = value;
					this.SendPropertyChanged("DomainID");
					this.OnDomainIDChanged();
				}
			}
		}
		
		[Column(Storage="_Count", DbType="Int NOT NULL")]
		public int Count
		{
			get
			{
				return this._Count;
			}
			set
			{
				if ((this._Count != value))
				{
					this.OnCountChanging(value);
					this.SendPropertyChanging();
					this._Count = value;
					this.SendPropertyChanged("Count");
					this.OnCountChanged();
				}
			}
		}
		
		[Column(Storage="_DaysSinceInitiallyDiscovered", DbType="SmallInt")]
		public System.Nullable<short> DaysSinceInitiallyDiscovered
		{
			get
			{
				return this._DaysSinceInitiallyDiscovered;
			}
			set
			{
				if ((this._DaysSinceInitiallyDiscovered != value))
				{
					this.OnDaysSinceInitiallyDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._DaysSinceInitiallyDiscovered = value;
					this.SendPropertyChanged("DaysSinceInitiallyDiscovered");
					this.OnDaysSinceInitiallyDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_DaysSinceLastDiscovered", DbType="SmallInt NOT NULL")]
		public short DaysSinceLastDiscovered
		{
			get
			{
				return this._DaysSinceLastDiscovered;
			}
			set
			{
				if ((this._DaysSinceLastDiscovered != value))
				{
					this.OnDaysSinceLastDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._DaysSinceLastDiscovered = value;
					this.SendPropertyChanged("DaysSinceLastDiscovered");
					this.OnDaysSinceLastDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_Strength", DbType="Float")]
		public System.Nullable<double> Strength
		{
			get
			{
				return this._Strength;
			}
			set
			{
				if ((this._Strength != value))
				{
					this.OnStrengthChanging(value);
					this.SendPropertyChanging();
					this._Strength = value;
					this.SendPropertyChanged("Strength");
					this.OnStrengthChanged();
				}
			}
		}
		
		[Column(Storage="_Rank", DbType="Int NOT NULL")]
		public int Rank
		{
			get
			{
				return this._Rank;
			}
			set
			{
				if ((this._Rank != value))
				{
					this.OnRankChanging(value);
					this.SendPropertyChanging();
					this._Rank = value;
					this.SendPropertyChanged("Rank");
					this.OnRankChanged();
				}
			}
		}
		
		[Column(Storage="_DenseRank", DbType="Int NOT NULL")]
		public int DenseRank
		{
			get
			{
				return this._DenseRank;
			}
			set
			{
				if ((this._DenseRank != value))
				{
					this.OnDenseRankChanging(value);
					this.SendPropertyChanging();
					this._DenseRank = value;
					this.SendPropertyChanged("DenseRank");
					this.OnDenseRankChanged();
				}
			}
		}
		
		[Column(Storage="_NTile", DbType="TinyInt NOT NULL")]
		public byte NTile
		{
			get
			{
				return this._NTile;
			}
			set
			{
				if ((this._NTile != value))
				{
					this.OnNTileChanging(value);
					this.SendPropertyChanging();
					this._NTile = value;
					this.SendPropertyChanged("NTile");
					this.OnNTileChanged();
				}
			}
		}
		
		[Association(Name="Domain_EmailAddresses_MOST_POPULAR_DOMAINS_BY_DOMAIN", Storage="_Domain", ThisKey="DomainID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Domain Domain
		{
			get
			{
				return this._Domain.Entity;
			}
			set
			{
				Domain previousValue = this._Domain.Entity;
				if (((previousValue != value) 
							|| (this._Domain.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Domain.Entity = null;
						previousValue.EmailAddresses_MOST_POPULAR_DOMAINS_BY_DOMAIN = null;
					}
					this._Domain.Entity = value;
					if ((value != null))
					{
						value.EmailAddresses_MOST_POPULAR_DOMAINS_BY_DOMAIN = this;
						this._DomainID = value.ID;
					}
					else
					{
						this._DomainID = default(int);
					}
					this.SendPropertyChanged("Domain");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="rpt.EmailAddresses_MOST_POPULAR_DOMAINS_BY_EXTENSIONS")]
	public partial class EmailAddresses_MOST_POPULAR_DOMAINS_BY_EXTENSION : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RowNumber;
		
		private System.Nullable<System.DateTime> _InitiallyDiscovered;
		
		private System.DateTime _LastDiscovered;
		
		private int _DomainID;
		
		private int _Count;
		
		private System.Nullable<short> _DaysSinceInitiallyDiscovered;
		
		private short _DaysSinceLastDiscovered;
		
		private System.Nullable<double> _Strength;
		
		private int _Rank;
		
		private int _DenseRank;
		
		private byte _NTile;
		
		private EntityRef<Domain> _Domain;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRowNumberChanging(int value);
    partial void OnRowNumberChanged();
    partial void OnInitiallyDiscoveredChanging(System.Nullable<System.DateTime> value);
    partial void OnInitiallyDiscoveredChanged();
    partial void OnLastDiscoveredChanging(System.DateTime value);
    partial void OnLastDiscoveredChanged();
    partial void OnDomainIDChanging(int value);
    partial void OnDomainIDChanged();
    partial void OnCountChanging(int value);
    partial void OnCountChanged();
    partial void OnDaysSinceInitiallyDiscoveredChanging(System.Nullable<short> value);
    partial void OnDaysSinceInitiallyDiscoveredChanged();
    partial void OnDaysSinceLastDiscoveredChanging(short value);
    partial void OnDaysSinceLastDiscoveredChanged();
    partial void OnStrengthChanging(System.Nullable<double> value);
    partial void OnStrengthChanged();
    partial void OnRankChanging(int value);
    partial void OnRankChanged();
    partial void OnDenseRankChanging(int value);
    partial void OnDenseRankChanged();
    partial void OnNTileChanging(byte value);
    partial void OnNTileChanged();
    #endregion
		
		public EmailAddresses_MOST_POPULAR_DOMAINS_BY_EXTENSION()
		{
			this._Domain = default(EntityRef<Domain>);
			OnCreated();
		}
		
		[Column(Storage="_RowNumber", DbType="Int NOT NULL")]
		public int RowNumber
		{
			get
			{
				return this._RowNumber;
			}
			set
			{
				if ((this._RowNumber != value))
				{
					this.OnRowNumberChanging(value);
					this.SendPropertyChanging();
					this._RowNumber = value;
					this.SendPropertyChanged("RowNumber");
					this.OnRowNumberChanged();
				}
			}
		}
		
		[Column(Storage="_InitiallyDiscovered", DbType="DateTime")]
		public System.Nullable<System.DateTime> InitiallyDiscovered
		{
			get
			{
				return this._InitiallyDiscovered;
			}
			set
			{
				if ((this._InitiallyDiscovered != value))
				{
					this.OnInitiallyDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._InitiallyDiscovered = value;
					this.SendPropertyChanged("InitiallyDiscovered");
					this.OnInitiallyDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_LastDiscovered", DbType="DateTime NOT NULL")]
		public System.DateTime LastDiscovered
		{
			get
			{
				return this._LastDiscovered;
			}
			set
			{
				if ((this._LastDiscovered != value))
				{
					this.OnLastDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._LastDiscovered = value;
					this.SendPropertyChanged("LastDiscovered");
					this.OnLastDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_DomainID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int DomainID
		{
			get
			{
				return this._DomainID;
			}
			set
			{
				if ((this._DomainID != value))
				{
					if (this._Domain.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDomainIDChanging(value);
					this.SendPropertyChanging();
					this._DomainID = value;
					this.SendPropertyChanged("DomainID");
					this.OnDomainIDChanged();
				}
			}
		}
		
		[Column(Storage="_Count", DbType="Int NOT NULL")]
		public int Count
		{
			get
			{
				return this._Count;
			}
			set
			{
				if ((this._Count != value))
				{
					this.OnCountChanging(value);
					this.SendPropertyChanging();
					this._Count = value;
					this.SendPropertyChanged("Count");
					this.OnCountChanged();
				}
			}
		}
		
		[Column(Storage="_DaysSinceInitiallyDiscovered", DbType="SmallInt")]
		public System.Nullable<short> DaysSinceInitiallyDiscovered
		{
			get
			{
				return this._DaysSinceInitiallyDiscovered;
			}
			set
			{
				if ((this._DaysSinceInitiallyDiscovered != value))
				{
					this.OnDaysSinceInitiallyDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._DaysSinceInitiallyDiscovered = value;
					this.SendPropertyChanged("DaysSinceInitiallyDiscovered");
					this.OnDaysSinceInitiallyDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_DaysSinceLastDiscovered", DbType="SmallInt NOT NULL")]
		public short DaysSinceLastDiscovered
		{
			get
			{
				return this._DaysSinceLastDiscovered;
			}
			set
			{
				if ((this._DaysSinceLastDiscovered != value))
				{
					this.OnDaysSinceLastDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._DaysSinceLastDiscovered = value;
					this.SendPropertyChanged("DaysSinceLastDiscovered");
					this.OnDaysSinceLastDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_Strength", DbType="Float")]
		public System.Nullable<double> Strength
		{
			get
			{
				return this._Strength;
			}
			set
			{
				if ((this._Strength != value))
				{
					this.OnStrengthChanging(value);
					this.SendPropertyChanging();
					this._Strength = value;
					this.SendPropertyChanged("Strength");
					this.OnStrengthChanged();
				}
			}
		}
		
		[Column(Storage="_Rank", DbType="Int NOT NULL")]
		public int Rank
		{
			get
			{
				return this._Rank;
			}
			set
			{
				if ((this._Rank != value))
				{
					this.OnRankChanging(value);
					this.SendPropertyChanging();
					this._Rank = value;
					this.SendPropertyChanged("Rank");
					this.OnRankChanged();
				}
			}
		}
		
		[Column(Storage="_DenseRank", DbType="Int NOT NULL")]
		public int DenseRank
		{
			get
			{
				return this._DenseRank;
			}
			set
			{
				if ((this._DenseRank != value))
				{
					this.OnDenseRankChanging(value);
					this.SendPropertyChanging();
					this._DenseRank = value;
					this.SendPropertyChanged("DenseRank");
					this.OnDenseRankChanged();
				}
			}
		}
		
		[Column(Storage="_NTile", DbType="TinyInt NOT NULL")]
		public byte NTile
		{
			get
			{
				return this._NTile;
			}
			set
			{
				if ((this._NTile != value))
				{
					this.OnNTileChanging(value);
					this.SendPropertyChanging();
					this._NTile = value;
					this.SendPropertyChanged("NTile");
					this.OnNTileChanged();
				}
			}
		}
		
		[Association(Name="Domain_EmailAddresses_MOST_POPULAR_DOMAINS_BY_EXTENSION", Storage="_Domain", ThisKey="DomainID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Domain Domain
		{
			get
			{
				return this._Domain.Entity;
			}
			set
			{
				Domain previousValue = this._Domain.Entity;
				if (((previousValue != value) 
							|| (this._Domain.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Domain.Entity = null;
						previousValue.EmailAddresses_MOST_POPULAR_DOMAINS_BY_EXTENSION = null;
					}
					this._Domain.Entity = value;
					if ((value != null))
					{
						value.EmailAddresses_MOST_POPULAR_DOMAINS_BY_EXTENSION = this;
						this._DomainID = value.ID;
					}
					else
					{
						this._DomainID = default(int);
					}
					this.SendPropertyChanged("Domain");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="rpt.EmailAddresses_MOST_POPULAR_DOMAINS_BY_HOSTS")]
	public partial class EmailAddresses_MOST_POPULAR_DOMAINS_BY_HOST : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RowNumber;
		
		private System.Nullable<System.DateTime> _InitiallyDiscovered;
		
		private System.DateTime _LastDiscovered;
		
		private int _DomainID;
		
		private int _Count;
		
		private System.Nullable<short> _DaysSinceInitiallyDiscovered;
		
		private short _DaysSinceLastDiscovered;
		
		private System.Nullable<double> _Strength;
		
		private int _Rank;
		
		private int _DenseRank;
		
		private byte _NTile;
		
		private EntityRef<Domain> _Domain;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRowNumberChanging(int value);
    partial void OnRowNumberChanged();
    partial void OnInitiallyDiscoveredChanging(System.Nullable<System.DateTime> value);
    partial void OnInitiallyDiscoveredChanged();
    partial void OnLastDiscoveredChanging(System.DateTime value);
    partial void OnLastDiscoveredChanged();
    partial void OnDomainIDChanging(int value);
    partial void OnDomainIDChanged();
    partial void OnCountChanging(int value);
    partial void OnCountChanged();
    partial void OnDaysSinceInitiallyDiscoveredChanging(System.Nullable<short> value);
    partial void OnDaysSinceInitiallyDiscoveredChanged();
    partial void OnDaysSinceLastDiscoveredChanging(short value);
    partial void OnDaysSinceLastDiscoveredChanged();
    partial void OnStrengthChanging(System.Nullable<double> value);
    partial void OnStrengthChanged();
    partial void OnRankChanging(int value);
    partial void OnRankChanged();
    partial void OnDenseRankChanging(int value);
    partial void OnDenseRankChanged();
    partial void OnNTileChanging(byte value);
    partial void OnNTileChanged();
    #endregion
		
		public EmailAddresses_MOST_POPULAR_DOMAINS_BY_HOST()
		{
			this._Domain = default(EntityRef<Domain>);
			OnCreated();
		}
		
		[Column(Storage="_RowNumber", DbType="Int NOT NULL")]
		public int RowNumber
		{
			get
			{
				return this._RowNumber;
			}
			set
			{
				if ((this._RowNumber != value))
				{
					this.OnRowNumberChanging(value);
					this.SendPropertyChanging();
					this._RowNumber = value;
					this.SendPropertyChanged("RowNumber");
					this.OnRowNumberChanged();
				}
			}
		}
		
		[Column(Storage="_InitiallyDiscovered", DbType="DateTime")]
		public System.Nullable<System.DateTime> InitiallyDiscovered
		{
			get
			{
				return this._InitiallyDiscovered;
			}
			set
			{
				if ((this._InitiallyDiscovered != value))
				{
					this.OnInitiallyDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._InitiallyDiscovered = value;
					this.SendPropertyChanged("InitiallyDiscovered");
					this.OnInitiallyDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_LastDiscovered", DbType="DateTime NOT NULL")]
		public System.DateTime LastDiscovered
		{
			get
			{
				return this._LastDiscovered;
			}
			set
			{
				if ((this._LastDiscovered != value))
				{
					this.OnLastDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._LastDiscovered = value;
					this.SendPropertyChanged("LastDiscovered");
					this.OnLastDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_DomainID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int DomainID
		{
			get
			{
				return this._DomainID;
			}
			set
			{
				if ((this._DomainID != value))
				{
					if (this._Domain.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDomainIDChanging(value);
					this.SendPropertyChanging();
					this._DomainID = value;
					this.SendPropertyChanged("DomainID");
					this.OnDomainIDChanged();
				}
			}
		}
		
		[Column(Storage="_Count", DbType="Int NOT NULL")]
		public int Count
		{
			get
			{
				return this._Count;
			}
			set
			{
				if ((this._Count != value))
				{
					this.OnCountChanging(value);
					this.SendPropertyChanging();
					this._Count = value;
					this.SendPropertyChanged("Count");
					this.OnCountChanged();
				}
			}
		}
		
		[Column(Storage="_DaysSinceInitiallyDiscovered", DbType="SmallInt")]
		public System.Nullable<short> DaysSinceInitiallyDiscovered
		{
			get
			{
				return this._DaysSinceInitiallyDiscovered;
			}
			set
			{
				if ((this._DaysSinceInitiallyDiscovered != value))
				{
					this.OnDaysSinceInitiallyDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._DaysSinceInitiallyDiscovered = value;
					this.SendPropertyChanged("DaysSinceInitiallyDiscovered");
					this.OnDaysSinceInitiallyDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_DaysSinceLastDiscovered", DbType="SmallInt NOT NULL")]
		public short DaysSinceLastDiscovered
		{
			get
			{
				return this._DaysSinceLastDiscovered;
			}
			set
			{
				if ((this._DaysSinceLastDiscovered != value))
				{
					this.OnDaysSinceLastDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._DaysSinceLastDiscovered = value;
					this.SendPropertyChanged("DaysSinceLastDiscovered");
					this.OnDaysSinceLastDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_Strength", DbType="Float")]
		public System.Nullable<double> Strength
		{
			get
			{
				return this._Strength;
			}
			set
			{
				if ((this._Strength != value))
				{
					this.OnStrengthChanging(value);
					this.SendPropertyChanging();
					this._Strength = value;
					this.SendPropertyChanged("Strength");
					this.OnStrengthChanged();
				}
			}
		}
		
		[Column(Storage="_Rank", DbType="Int NOT NULL")]
		public int Rank
		{
			get
			{
				return this._Rank;
			}
			set
			{
				if ((this._Rank != value))
				{
					this.OnRankChanging(value);
					this.SendPropertyChanging();
					this._Rank = value;
					this.SendPropertyChanged("Rank");
					this.OnRankChanged();
				}
			}
		}
		
		[Column(Storage="_DenseRank", DbType="Int NOT NULL")]
		public int DenseRank
		{
			get
			{
				return this._DenseRank;
			}
			set
			{
				if ((this._DenseRank != value))
				{
					this.OnDenseRankChanging(value);
					this.SendPropertyChanging();
					this._DenseRank = value;
					this.SendPropertyChanged("DenseRank");
					this.OnDenseRankChanged();
				}
			}
		}
		
		[Column(Storage="_NTile", DbType="TinyInt NOT NULL")]
		public byte NTile
		{
			get
			{
				return this._NTile;
			}
			set
			{
				if ((this._NTile != value))
				{
					this.OnNTileChanging(value);
					this.SendPropertyChanging();
					this._NTile = value;
					this.SendPropertyChanged("NTile");
					this.OnNTileChanged();
				}
			}
		}
		
		[Association(Name="Domain_EmailAddresses_MOST_POPULAR_DOMAINS_BY_HOST", Storage="_Domain", ThisKey="DomainID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Domain Domain
		{
			get
			{
				return this._Domain.Entity;
			}
			set
			{
				Domain previousValue = this._Domain.Entity;
				if (((previousValue != value) 
							|| (this._Domain.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Domain.Entity = null;
						previousValue.EmailAddresses_MOST_POPULAR_DOMAINS_BY_HOST = null;
					}
					this._Domain.Entity = value;
					if ((value != null))
					{
						value.EmailAddresses_MOST_POPULAR_DOMAINS_BY_HOST = this;
						this._DomainID = value.ID;
					}
					else
					{
						this._DomainID = default(int);
					}
					this.SendPropertyChanged("Domain");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="rpt.EmailAddresses_MOST_POPULAR_DOMAINS_BY_SCHEMES")]
	public partial class EmailAddresses_MOST_POPULAR_DOMAINS_BY_SCHEME : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RowNumber;
		
		private System.Nullable<System.DateTime> _InitiallyDiscovered;
		
		private System.DateTime _LastDiscovered;
		
		private int _DomainID;
		
		private int _Count;
		
		private System.Nullable<short> _DaysSinceInitiallyDiscovered;
		
		private short _DaysSinceLastDiscovered;
		
		private System.Nullable<double> _Strength;
		
		private int _Rank;
		
		private int _DenseRank;
		
		private byte _NTile;
		
		private EntityRef<Domain> _Domain;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRowNumberChanging(int value);
    partial void OnRowNumberChanged();
    partial void OnInitiallyDiscoveredChanging(System.Nullable<System.DateTime> value);
    partial void OnInitiallyDiscoveredChanged();
    partial void OnLastDiscoveredChanging(System.DateTime value);
    partial void OnLastDiscoveredChanged();
    partial void OnDomainIDChanging(int value);
    partial void OnDomainIDChanged();
    partial void OnCountChanging(int value);
    partial void OnCountChanged();
    partial void OnDaysSinceInitiallyDiscoveredChanging(System.Nullable<short> value);
    partial void OnDaysSinceInitiallyDiscoveredChanged();
    partial void OnDaysSinceLastDiscoveredChanging(short value);
    partial void OnDaysSinceLastDiscoveredChanged();
    partial void OnStrengthChanging(System.Nullable<double> value);
    partial void OnStrengthChanged();
    partial void OnRankChanging(int value);
    partial void OnRankChanged();
    partial void OnDenseRankChanging(int value);
    partial void OnDenseRankChanged();
    partial void OnNTileChanging(byte value);
    partial void OnNTileChanged();
    #endregion
		
		public EmailAddresses_MOST_POPULAR_DOMAINS_BY_SCHEME()
		{
			this._Domain = default(EntityRef<Domain>);
			OnCreated();
		}
		
		[Column(Storage="_RowNumber", DbType="Int NOT NULL")]
		public int RowNumber
		{
			get
			{
				return this._RowNumber;
			}
			set
			{
				if ((this._RowNumber != value))
				{
					this.OnRowNumberChanging(value);
					this.SendPropertyChanging();
					this._RowNumber = value;
					this.SendPropertyChanged("RowNumber");
					this.OnRowNumberChanged();
				}
			}
		}
		
		[Column(Storage="_InitiallyDiscovered", DbType="DateTime")]
		public System.Nullable<System.DateTime> InitiallyDiscovered
		{
			get
			{
				return this._InitiallyDiscovered;
			}
			set
			{
				if ((this._InitiallyDiscovered != value))
				{
					this.OnInitiallyDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._InitiallyDiscovered = value;
					this.SendPropertyChanged("InitiallyDiscovered");
					this.OnInitiallyDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_LastDiscovered", DbType="DateTime NOT NULL")]
		public System.DateTime LastDiscovered
		{
			get
			{
				return this._LastDiscovered;
			}
			set
			{
				if ((this._LastDiscovered != value))
				{
					this.OnLastDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._LastDiscovered = value;
					this.SendPropertyChanged("LastDiscovered");
					this.OnLastDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_DomainID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int DomainID
		{
			get
			{
				return this._DomainID;
			}
			set
			{
				if ((this._DomainID != value))
				{
					if (this._Domain.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDomainIDChanging(value);
					this.SendPropertyChanging();
					this._DomainID = value;
					this.SendPropertyChanged("DomainID");
					this.OnDomainIDChanged();
				}
			}
		}
		
		[Column(Storage="_Count", DbType="Int NOT NULL")]
		public int Count
		{
			get
			{
				return this._Count;
			}
			set
			{
				if ((this._Count != value))
				{
					this.OnCountChanging(value);
					this.SendPropertyChanging();
					this._Count = value;
					this.SendPropertyChanged("Count");
					this.OnCountChanged();
				}
			}
		}
		
		[Column(Storage="_DaysSinceInitiallyDiscovered", DbType="SmallInt")]
		public System.Nullable<short> DaysSinceInitiallyDiscovered
		{
			get
			{
				return this._DaysSinceInitiallyDiscovered;
			}
			set
			{
				if ((this._DaysSinceInitiallyDiscovered != value))
				{
					this.OnDaysSinceInitiallyDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._DaysSinceInitiallyDiscovered = value;
					this.SendPropertyChanged("DaysSinceInitiallyDiscovered");
					this.OnDaysSinceInitiallyDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_DaysSinceLastDiscovered", DbType="SmallInt NOT NULL")]
		public short DaysSinceLastDiscovered
		{
			get
			{
				return this._DaysSinceLastDiscovered;
			}
			set
			{
				if ((this._DaysSinceLastDiscovered != value))
				{
					this.OnDaysSinceLastDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._DaysSinceLastDiscovered = value;
					this.SendPropertyChanged("DaysSinceLastDiscovered");
					this.OnDaysSinceLastDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_Strength", DbType="Float")]
		public System.Nullable<double> Strength
		{
			get
			{
				return this._Strength;
			}
			set
			{
				if ((this._Strength != value))
				{
					this.OnStrengthChanging(value);
					this.SendPropertyChanging();
					this._Strength = value;
					this.SendPropertyChanged("Strength");
					this.OnStrengthChanged();
				}
			}
		}
		
		[Column(Storage="_Rank", DbType="Int NOT NULL")]
		public int Rank
		{
			get
			{
				return this._Rank;
			}
			set
			{
				if ((this._Rank != value))
				{
					this.OnRankChanging(value);
					this.SendPropertyChanging();
					this._Rank = value;
					this.SendPropertyChanged("Rank");
					this.OnRankChanged();
				}
			}
		}
		
		[Column(Storage="_DenseRank", DbType="Int NOT NULL")]
		public int DenseRank
		{
			get
			{
				return this._DenseRank;
			}
			set
			{
				if ((this._DenseRank != value))
				{
					this.OnDenseRankChanging(value);
					this.SendPropertyChanging();
					this._DenseRank = value;
					this.SendPropertyChanged("DenseRank");
					this.OnDenseRankChanged();
				}
			}
		}
		
		[Column(Storage="_NTile", DbType="TinyInt NOT NULL")]
		public byte NTile
		{
			get
			{
				return this._NTile;
			}
			set
			{
				if ((this._NTile != value))
				{
					this.OnNTileChanging(value);
					this.SendPropertyChanging();
					this._NTile = value;
					this.SendPropertyChanged("NTile");
					this.OnNTileChanged();
				}
			}
		}
		
		[Association(Name="Domain_EmailAddresses_MOST_POPULAR_DOMAINS_BY_SCHEME", Storage="_Domain", ThisKey="DomainID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Domain Domain
		{
			get
			{
				return this._Domain.Entity;
			}
			set
			{
				Domain previousValue = this._Domain.Entity;
				if (((previousValue != value) 
							|| (this._Domain.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Domain.Entity = null;
						previousValue.EmailAddresses_MOST_POPULAR_DOMAINS_BY_SCHEME = null;
					}
					this._Domain.Entity = value;
					if ((value != null))
					{
						value.EmailAddresses_MOST_POPULAR_DOMAINS_BY_SCHEME = this;
						this._DomainID = value.ID;
					}
					else
					{
						this._DomainID = default(int);
					}
					this.SendPropertyChanged("Domain");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="rpt.EmailAddresses_MOST_POPULAR_EXTENSIONS_BY_ABSOLUTEURIS")]
	public partial class EmailAddresses_MOST_POPULAR_EXTENSIONS_BY_ABSOLUTEURI : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RowNumber;
		
		private System.Nullable<System.DateTime> _InitiallyDiscovered;
		
		private System.DateTime _LastDiscovered;
		
		private int _ExtensionID;
		
		private int _Count;
		
		private System.Nullable<short> _DaysSinceInitiallyDiscovered;
		
		private short _DaysSinceLastDiscovered;
		
		private System.Nullable<double> _Strength;
		
		private int _Rank;
		
		private int _DenseRank;
		
		private byte _NTile;
		
		private EntityRef<Extension> _Extension;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRowNumberChanging(int value);
    partial void OnRowNumberChanged();
    partial void OnInitiallyDiscoveredChanging(System.Nullable<System.DateTime> value);
    partial void OnInitiallyDiscoveredChanged();
    partial void OnLastDiscoveredChanging(System.DateTime value);
    partial void OnLastDiscoveredChanged();
    partial void OnExtensionIDChanging(int value);
    partial void OnExtensionIDChanged();
    partial void OnCountChanging(int value);
    partial void OnCountChanged();
    partial void OnDaysSinceInitiallyDiscoveredChanging(System.Nullable<short> value);
    partial void OnDaysSinceInitiallyDiscoveredChanged();
    partial void OnDaysSinceLastDiscoveredChanging(short value);
    partial void OnDaysSinceLastDiscoveredChanged();
    partial void OnStrengthChanging(System.Nullable<double> value);
    partial void OnStrengthChanged();
    partial void OnRankChanging(int value);
    partial void OnRankChanged();
    partial void OnDenseRankChanging(int value);
    partial void OnDenseRankChanged();
    partial void OnNTileChanging(byte value);
    partial void OnNTileChanged();
    #endregion
		
		public EmailAddresses_MOST_POPULAR_EXTENSIONS_BY_ABSOLUTEURI()
		{
			this._Extension = default(EntityRef<Extension>);
			OnCreated();
		}
		
		[Column(Storage="_RowNumber", DbType="Int NOT NULL")]
		public int RowNumber
		{
			get
			{
				return this._RowNumber;
			}
			set
			{
				if ((this._RowNumber != value))
				{
					this.OnRowNumberChanging(value);
					this.SendPropertyChanging();
					this._RowNumber = value;
					this.SendPropertyChanged("RowNumber");
					this.OnRowNumberChanged();
				}
			}
		}
		
		[Column(Storage="_InitiallyDiscovered", DbType="DateTime")]
		public System.Nullable<System.DateTime> InitiallyDiscovered
		{
			get
			{
				return this._InitiallyDiscovered;
			}
			set
			{
				if ((this._InitiallyDiscovered != value))
				{
					this.OnInitiallyDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._InitiallyDiscovered = value;
					this.SendPropertyChanged("InitiallyDiscovered");
					this.OnInitiallyDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_LastDiscovered", DbType="DateTime NOT NULL")]
		public System.DateTime LastDiscovered
		{
			get
			{
				return this._LastDiscovered;
			}
			set
			{
				if ((this._LastDiscovered != value))
				{
					this.OnLastDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._LastDiscovered = value;
					this.SendPropertyChanged("LastDiscovered");
					this.OnLastDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_ExtensionID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ExtensionID
		{
			get
			{
				return this._ExtensionID;
			}
			set
			{
				if ((this._ExtensionID != value))
				{
					if (this._Extension.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnExtensionIDChanging(value);
					this.SendPropertyChanging();
					this._ExtensionID = value;
					this.SendPropertyChanged("ExtensionID");
					this.OnExtensionIDChanged();
				}
			}
		}
		
		[Column(Storage="_Count", DbType="Int NOT NULL")]
		public int Count
		{
			get
			{
				return this._Count;
			}
			set
			{
				if ((this._Count != value))
				{
					this.OnCountChanging(value);
					this.SendPropertyChanging();
					this._Count = value;
					this.SendPropertyChanged("Count");
					this.OnCountChanged();
				}
			}
		}
		
		[Column(Storage="_DaysSinceInitiallyDiscovered", DbType="SmallInt")]
		public System.Nullable<short> DaysSinceInitiallyDiscovered
		{
			get
			{
				return this._DaysSinceInitiallyDiscovered;
			}
			set
			{
				if ((this._DaysSinceInitiallyDiscovered != value))
				{
					this.OnDaysSinceInitiallyDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._DaysSinceInitiallyDiscovered = value;
					this.SendPropertyChanged("DaysSinceInitiallyDiscovered");
					this.OnDaysSinceInitiallyDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_DaysSinceLastDiscovered", DbType="SmallInt NOT NULL")]
		public short DaysSinceLastDiscovered
		{
			get
			{
				return this._DaysSinceLastDiscovered;
			}
			set
			{
				if ((this._DaysSinceLastDiscovered != value))
				{
					this.OnDaysSinceLastDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._DaysSinceLastDiscovered = value;
					this.SendPropertyChanged("DaysSinceLastDiscovered");
					this.OnDaysSinceLastDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_Strength", DbType="Float")]
		public System.Nullable<double> Strength
		{
			get
			{
				return this._Strength;
			}
			set
			{
				if ((this._Strength != value))
				{
					this.OnStrengthChanging(value);
					this.SendPropertyChanging();
					this._Strength = value;
					this.SendPropertyChanged("Strength");
					this.OnStrengthChanged();
				}
			}
		}
		
		[Column(Storage="_Rank", DbType="Int NOT NULL")]
		public int Rank
		{
			get
			{
				return this._Rank;
			}
			set
			{
				if ((this._Rank != value))
				{
					this.OnRankChanging(value);
					this.SendPropertyChanging();
					this._Rank = value;
					this.SendPropertyChanged("Rank");
					this.OnRankChanged();
				}
			}
		}
		
		[Column(Storage="_DenseRank", DbType="Int NOT NULL")]
		public int DenseRank
		{
			get
			{
				return this._DenseRank;
			}
			set
			{
				if ((this._DenseRank != value))
				{
					this.OnDenseRankChanging(value);
					this.SendPropertyChanging();
					this._DenseRank = value;
					this.SendPropertyChanged("DenseRank");
					this.OnDenseRankChanged();
				}
			}
		}
		
		[Column(Storage="_NTile", DbType="TinyInt NOT NULL")]
		public byte NTile
		{
			get
			{
				return this._NTile;
			}
			set
			{
				if ((this._NTile != value))
				{
					this.OnNTileChanging(value);
					this.SendPropertyChanging();
					this._NTile = value;
					this.SendPropertyChanged("NTile");
					this.OnNTileChanged();
				}
			}
		}
		
		[Association(Name="Extension_EmailAddresses_MOST_POPULAR_EXTENSIONS_BY_ABSOLUTEURI", Storage="_Extension", ThisKey="ExtensionID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Extension Extension
		{
			get
			{
				return this._Extension.Entity;
			}
			set
			{
				Extension previousValue = this._Extension.Entity;
				if (((previousValue != value) 
							|| (this._Extension.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Extension.Entity = null;
						previousValue.EmailAddresses_MOST_POPULAR_EXTENSIONS_BY_ABSOLUTEURI = null;
					}
					this._Extension.Entity = value;
					if ((value != null))
					{
						value.EmailAddresses_MOST_POPULAR_EXTENSIONS_BY_ABSOLUTEURI = this;
						this._ExtensionID = value.ID;
					}
					else
					{
						this._ExtensionID = default(int);
					}
					this.SendPropertyChanged("Extension");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="rpt.EmailAddresses_MOST_POPULAR_EXTENSIONS_BY_DOMAINS")]
	public partial class EmailAddresses_MOST_POPULAR_EXTENSIONS_BY_DOMAIN : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RowNumber;
		
		private System.Nullable<System.DateTime> _InitiallyDiscovered;
		
		private System.DateTime _LastDiscovered;
		
		private int _ExtensionID;
		
		private int _Count;
		
		private System.Nullable<short> _DaysSinceInitiallyDiscovered;
		
		private short _DaysSinceLastDiscovered;
		
		private System.Nullable<double> _Strength;
		
		private int _Rank;
		
		private int _DenseRank;
		
		private byte _NTile;
		
		private EntityRef<Extension> _Extension;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRowNumberChanging(int value);
    partial void OnRowNumberChanged();
    partial void OnInitiallyDiscoveredChanging(System.Nullable<System.DateTime> value);
    partial void OnInitiallyDiscoveredChanged();
    partial void OnLastDiscoveredChanging(System.DateTime value);
    partial void OnLastDiscoveredChanged();
    partial void OnExtensionIDChanging(int value);
    partial void OnExtensionIDChanged();
    partial void OnCountChanging(int value);
    partial void OnCountChanged();
    partial void OnDaysSinceInitiallyDiscoveredChanging(System.Nullable<short> value);
    partial void OnDaysSinceInitiallyDiscoveredChanged();
    partial void OnDaysSinceLastDiscoveredChanging(short value);
    partial void OnDaysSinceLastDiscoveredChanged();
    partial void OnStrengthChanging(System.Nullable<double> value);
    partial void OnStrengthChanged();
    partial void OnRankChanging(int value);
    partial void OnRankChanged();
    partial void OnDenseRankChanging(int value);
    partial void OnDenseRankChanged();
    partial void OnNTileChanging(byte value);
    partial void OnNTileChanged();
    #endregion
		
		public EmailAddresses_MOST_POPULAR_EXTENSIONS_BY_DOMAIN()
		{
			this._Extension = default(EntityRef<Extension>);
			OnCreated();
		}
		
		[Column(Storage="_RowNumber", DbType="Int NOT NULL")]
		public int RowNumber
		{
			get
			{
				return this._RowNumber;
			}
			set
			{
				if ((this._RowNumber != value))
				{
					this.OnRowNumberChanging(value);
					this.SendPropertyChanging();
					this._RowNumber = value;
					this.SendPropertyChanged("RowNumber");
					this.OnRowNumberChanged();
				}
			}
		}
		
		[Column(Storage="_InitiallyDiscovered", DbType="DateTime")]
		public System.Nullable<System.DateTime> InitiallyDiscovered
		{
			get
			{
				return this._InitiallyDiscovered;
			}
			set
			{
				if ((this._InitiallyDiscovered != value))
				{
					this.OnInitiallyDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._InitiallyDiscovered = value;
					this.SendPropertyChanged("InitiallyDiscovered");
					this.OnInitiallyDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_LastDiscovered", DbType="DateTime NOT NULL")]
		public System.DateTime LastDiscovered
		{
			get
			{
				return this._LastDiscovered;
			}
			set
			{
				if ((this._LastDiscovered != value))
				{
					this.OnLastDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._LastDiscovered = value;
					this.SendPropertyChanged("LastDiscovered");
					this.OnLastDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_ExtensionID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ExtensionID
		{
			get
			{
				return this._ExtensionID;
			}
			set
			{
				if ((this._ExtensionID != value))
				{
					if (this._Extension.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnExtensionIDChanging(value);
					this.SendPropertyChanging();
					this._ExtensionID = value;
					this.SendPropertyChanged("ExtensionID");
					this.OnExtensionIDChanged();
				}
			}
		}
		
		[Column(Storage="_Count", DbType="Int NOT NULL")]
		public int Count
		{
			get
			{
				return this._Count;
			}
			set
			{
				if ((this._Count != value))
				{
					this.OnCountChanging(value);
					this.SendPropertyChanging();
					this._Count = value;
					this.SendPropertyChanged("Count");
					this.OnCountChanged();
				}
			}
		}
		
		[Column(Storage="_DaysSinceInitiallyDiscovered", DbType="SmallInt")]
		public System.Nullable<short> DaysSinceInitiallyDiscovered
		{
			get
			{
				return this._DaysSinceInitiallyDiscovered;
			}
			set
			{
				if ((this._DaysSinceInitiallyDiscovered != value))
				{
					this.OnDaysSinceInitiallyDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._DaysSinceInitiallyDiscovered = value;
					this.SendPropertyChanged("DaysSinceInitiallyDiscovered");
					this.OnDaysSinceInitiallyDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_DaysSinceLastDiscovered", DbType="SmallInt NOT NULL")]
		public short DaysSinceLastDiscovered
		{
			get
			{
				return this._DaysSinceLastDiscovered;
			}
			set
			{
				if ((this._DaysSinceLastDiscovered != value))
				{
					this.OnDaysSinceLastDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._DaysSinceLastDiscovered = value;
					this.SendPropertyChanged("DaysSinceLastDiscovered");
					this.OnDaysSinceLastDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_Strength", DbType="Float")]
		public System.Nullable<double> Strength
		{
			get
			{
				return this._Strength;
			}
			set
			{
				if ((this._Strength != value))
				{
					this.OnStrengthChanging(value);
					this.SendPropertyChanging();
					this._Strength = value;
					this.SendPropertyChanged("Strength");
					this.OnStrengthChanged();
				}
			}
		}
		
		[Column(Storage="_Rank", DbType="Int NOT NULL")]
		public int Rank
		{
			get
			{
				return this._Rank;
			}
			set
			{
				if ((this._Rank != value))
				{
					this.OnRankChanging(value);
					this.SendPropertyChanging();
					this._Rank = value;
					this.SendPropertyChanged("Rank");
					this.OnRankChanged();
				}
			}
		}
		
		[Column(Storage="_DenseRank", DbType="Int NOT NULL")]
		public int DenseRank
		{
			get
			{
				return this._DenseRank;
			}
			set
			{
				if ((this._DenseRank != value))
				{
					this.OnDenseRankChanging(value);
					this.SendPropertyChanging();
					this._DenseRank = value;
					this.SendPropertyChanged("DenseRank");
					this.OnDenseRankChanged();
				}
			}
		}
		
		[Column(Storage="_NTile", DbType="TinyInt NOT NULL")]
		public byte NTile
		{
			get
			{
				return this._NTile;
			}
			set
			{
				if ((this._NTile != value))
				{
					this.OnNTileChanging(value);
					this.SendPropertyChanging();
					this._NTile = value;
					this.SendPropertyChanged("NTile");
					this.OnNTileChanged();
				}
			}
		}
		
		[Association(Name="Extension_EmailAddresses_MOST_POPULAR_EXTENSIONS_BY_DOMAIN", Storage="_Extension", ThisKey="ExtensionID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Extension Extension
		{
			get
			{
				return this._Extension.Entity;
			}
			set
			{
				Extension previousValue = this._Extension.Entity;
				if (((previousValue != value) 
							|| (this._Extension.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Extension.Entity = null;
						previousValue.EmailAddresses_MOST_POPULAR_EXTENSIONS_BY_DOMAIN = null;
					}
					this._Extension.Entity = value;
					if ((value != null))
					{
						value.EmailAddresses_MOST_POPULAR_EXTENSIONS_BY_DOMAIN = this;
						this._ExtensionID = value.ID;
					}
					else
					{
						this._ExtensionID = default(int);
					}
					this.SendPropertyChanged("Extension");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="rpt.EmailAddresses_MOST_POPULAR_EXTENSIONS_BY_EXTENSIONS")]
	public partial class EmailAddresses_MOST_POPULAR_EXTENSIONS_BY_EXTENSION : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RowNumber;
		
		private System.Nullable<System.DateTime> _InitiallyDiscovered;
		
		private System.DateTime _LastDiscovered;
		
		private int _ExtensionID;
		
		private int _Count;
		
		private System.Nullable<short> _DaysSinceInitiallyDiscovered;
		
		private short _DaysSinceLastDiscovered;
		
		private System.Nullable<double> _Strength;
		
		private int _Rank;
		
		private int _DenseRank;
		
		private byte _NTile;
		
		private EntityRef<Extension> _Extension;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRowNumberChanging(int value);
    partial void OnRowNumberChanged();
    partial void OnInitiallyDiscoveredChanging(System.Nullable<System.DateTime> value);
    partial void OnInitiallyDiscoveredChanged();
    partial void OnLastDiscoveredChanging(System.DateTime value);
    partial void OnLastDiscoveredChanged();
    partial void OnExtensionIDChanging(int value);
    partial void OnExtensionIDChanged();
    partial void OnCountChanging(int value);
    partial void OnCountChanged();
    partial void OnDaysSinceInitiallyDiscoveredChanging(System.Nullable<short> value);
    partial void OnDaysSinceInitiallyDiscoveredChanged();
    partial void OnDaysSinceLastDiscoveredChanging(short value);
    partial void OnDaysSinceLastDiscoveredChanged();
    partial void OnStrengthChanging(System.Nullable<double> value);
    partial void OnStrengthChanged();
    partial void OnRankChanging(int value);
    partial void OnRankChanged();
    partial void OnDenseRankChanging(int value);
    partial void OnDenseRankChanged();
    partial void OnNTileChanging(byte value);
    partial void OnNTileChanged();
    #endregion
		
		public EmailAddresses_MOST_POPULAR_EXTENSIONS_BY_EXTENSION()
		{
			this._Extension = default(EntityRef<Extension>);
			OnCreated();
		}
		
		[Column(Storage="_RowNumber", DbType="Int NOT NULL")]
		public int RowNumber
		{
			get
			{
				return this._RowNumber;
			}
			set
			{
				if ((this._RowNumber != value))
				{
					this.OnRowNumberChanging(value);
					this.SendPropertyChanging();
					this._RowNumber = value;
					this.SendPropertyChanged("RowNumber");
					this.OnRowNumberChanged();
				}
			}
		}
		
		[Column(Storage="_InitiallyDiscovered", DbType="DateTime")]
		public System.Nullable<System.DateTime> InitiallyDiscovered
		{
			get
			{
				return this._InitiallyDiscovered;
			}
			set
			{
				if ((this._InitiallyDiscovered != value))
				{
					this.OnInitiallyDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._InitiallyDiscovered = value;
					this.SendPropertyChanged("InitiallyDiscovered");
					this.OnInitiallyDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_LastDiscovered", DbType="DateTime NOT NULL")]
		public System.DateTime LastDiscovered
		{
			get
			{
				return this._LastDiscovered;
			}
			set
			{
				if ((this._LastDiscovered != value))
				{
					this.OnLastDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._LastDiscovered = value;
					this.SendPropertyChanged("LastDiscovered");
					this.OnLastDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_ExtensionID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ExtensionID
		{
			get
			{
				return this._ExtensionID;
			}
			set
			{
				if ((this._ExtensionID != value))
				{
					if (this._Extension.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnExtensionIDChanging(value);
					this.SendPropertyChanging();
					this._ExtensionID = value;
					this.SendPropertyChanged("ExtensionID");
					this.OnExtensionIDChanged();
				}
			}
		}
		
		[Column(Storage="_Count", DbType="Int NOT NULL")]
		public int Count
		{
			get
			{
				return this._Count;
			}
			set
			{
				if ((this._Count != value))
				{
					this.OnCountChanging(value);
					this.SendPropertyChanging();
					this._Count = value;
					this.SendPropertyChanged("Count");
					this.OnCountChanged();
				}
			}
		}
		
		[Column(Storage="_DaysSinceInitiallyDiscovered", DbType="SmallInt")]
		public System.Nullable<short> DaysSinceInitiallyDiscovered
		{
			get
			{
				return this._DaysSinceInitiallyDiscovered;
			}
			set
			{
				if ((this._DaysSinceInitiallyDiscovered != value))
				{
					this.OnDaysSinceInitiallyDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._DaysSinceInitiallyDiscovered = value;
					this.SendPropertyChanged("DaysSinceInitiallyDiscovered");
					this.OnDaysSinceInitiallyDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_DaysSinceLastDiscovered", DbType="SmallInt NOT NULL")]
		public short DaysSinceLastDiscovered
		{
			get
			{
				return this._DaysSinceLastDiscovered;
			}
			set
			{
				if ((this._DaysSinceLastDiscovered != value))
				{
					this.OnDaysSinceLastDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._DaysSinceLastDiscovered = value;
					this.SendPropertyChanged("DaysSinceLastDiscovered");
					this.OnDaysSinceLastDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_Strength", DbType="Float")]
		public System.Nullable<double> Strength
		{
			get
			{
				return this._Strength;
			}
			set
			{
				if ((this._Strength != value))
				{
					this.OnStrengthChanging(value);
					this.SendPropertyChanging();
					this._Strength = value;
					this.SendPropertyChanged("Strength");
					this.OnStrengthChanged();
				}
			}
		}
		
		[Column(Storage="_Rank", DbType="Int NOT NULL")]
		public int Rank
		{
			get
			{
				return this._Rank;
			}
			set
			{
				if ((this._Rank != value))
				{
					this.OnRankChanging(value);
					this.SendPropertyChanging();
					this._Rank = value;
					this.SendPropertyChanged("Rank");
					this.OnRankChanged();
				}
			}
		}
		
		[Column(Storage="_DenseRank", DbType="Int NOT NULL")]
		public int DenseRank
		{
			get
			{
				return this._DenseRank;
			}
			set
			{
				if ((this._DenseRank != value))
				{
					this.OnDenseRankChanging(value);
					this.SendPropertyChanging();
					this._DenseRank = value;
					this.SendPropertyChanged("DenseRank");
					this.OnDenseRankChanged();
				}
			}
		}
		
		[Column(Storage="_NTile", DbType="TinyInt NOT NULL")]
		public byte NTile
		{
			get
			{
				return this._NTile;
			}
			set
			{
				if ((this._NTile != value))
				{
					this.OnNTileChanging(value);
					this.SendPropertyChanging();
					this._NTile = value;
					this.SendPropertyChanged("NTile");
					this.OnNTileChanged();
				}
			}
		}
		
		[Association(Name="Extension_EmailAddresses_MOST_POPULAR_EXTENSIONS_BY_EXTENSION", Storage="_Extension", ThisKey="ExtensionID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Extension Extension
		{
			get
			{
				return this._Extension.Entity;
			}
			set
			{
				Extension previousValue = this._Extension.Entity;
				if (((previousValue != value) 
							|| (this._Extension.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Extension.Entity = null;
						previousValue.EmailAddresses_MOST_POPULAR_EXTENSIONS_BY_EXTENSION = null;
					}
					this._Extension.Entity = value;
					if ((value != null))
					{
						value.EmailAddresses_MOST_POPULAR_EXTENSIONS_BY_EXTENSION = this;
						this._ExtensionID = value.ID;
					}
					else
					{
						this._ExtensionID = default(int);
					}
					this.SendPropertyChanged("Extension");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="rpt.EmailAddresses_MOST_POPULAR_EXTENSIONS_BY_HOSTS")]
	public partial class EmailAddresses_MOST_POPULAR_EXTENSIONS_BY_HOST : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RowNumber;
		
		private System.Nullable<System.DateTime> _InitiallyDiscovered;
		
		private System.DateTime _LastDiscovered;
		
		private int _ExtensionID;
		
		private int _Count;
		
		private System.Nullable<short> _DaysSinceInitiallyDiscovered;
		
		private short _DaysSinceLastDiscovered;
		
		private System.Nullable<double> _Strength;
		
		private int _Rank;
		
		private int _DenseRank;
		
		private byte _NTile;
		
		private EntityRef<Extension> _Extension;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRowNumberChanging(int value);
    partial void OnRowNumberChanged();
    partial void OnInitiallyDiscoveredChanging(System.Nullable<System.DateTime> value);
    partial void OnInitiallyDiscoveredChanged();
    partial void OnLastDiscoveredChanging(System.DateTime value);
    partial void OnLastDiscoveredChanged();
    partial void OnExtensionIDChanging(int value);
    partial void OnExtensionIDChanged();
    partial void OnCountChanging(int value);
    partial void OnCountChanged();
    partial void OnDaysSinceInitiallyDiscoveredChanging(System.Nullable<short> value);
    partial void OnDaysSinceInitiallyDiscoveredChanged();
    partial void OnDaysSinceLastDiscoveredChanging(short value);
    partial void OnDaysSinceLastDiscoveredChanged();
    partial void OnStrengthChanging(System.Nullable<double> value);
    partial void OnStrengthChanged();
    partial void OnRankChanging(int value);
    partial void OnRankChanged();
    partial void OnDenseRankChanging(int value);
    partial void OnDenseRankChanged();
    partial void OnNTileChanging(byte value);
    partial void OnNTileChanged();
    #endregion
		
		public EmailAddresses_MOST_POPULAR_EXTENSIONS_BY_HOST()
		{
			this._Extension = default(EntityRef<Extension>);
			OnCreated();
		}
		
		[Column(Storage="_RowNumber", DbType="Int NOT NULL")]
		public int RowNumber
		{
			get
			{
				return this._RowNumber;
			}
			set
			{
				if ((this._RowNumber != value))
				{
					this.OnRowNumberChanging(value);
					this.SendPropertyChanging();
					this._RowNumber = value;
					this.SendPropertyChanged("RowNumber");
					this.OnRowNumberChanged();
				}
			}
		}
		
		[Column(Storage="_InitiallyDiscovered", DbType="DateTime")]
		public System.Nullable<System.DateTime> InitiallyDiscovered
		{
			get
			{
				return this._InitiallyDiscovered;
			}
			set
			{
				if ((this._InitiallyDiscovered != value))
				{
					this.OnInitiallyDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._InitiallyDiscovered = value;
					this.SendPropertyChanged("InitiallyDiscovered");
					this.OnInitiallyDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_LastDiscovered", DbType="DateTime NOT NULL")]
		public System.DateTime LastDiscovered
		{
			get
			{
				return this._LastDiscovered;
			}
			set
			{
				if ((this._LastDiscovered != value))
				{
					this.OnLastDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._LastDiscovered = value;
					this.SendPropertyChanged("LastDiscovered");
					this.OnLastDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_ExtensionID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ExtensionID
		{
			get
			{
				return this._ExtensionID;
			}
			set
			{
				if ((this._ExtensionID != value))
				{
					if (this._Extension.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnExtensionIDChanging(value);
					this.SendPropertyChanging();
					this._ExtensionID = value;
					this.SendPropertyChanged("ExtensionID");
					this.OnExtensionIDChanged();
				}
			}
		}
		
		[Column(Storage="_Count", DbType="Int NOT NULL")]
		public int Count
		{
			get
			{
				return this._Count;
			}
			set
			{
				if ((this._Count != value))
				{
					this.OnCountChanging(value);
					this.SendPropertyChanging();
					this._Count = value;
					this.SendPropertyChanged("Count");
					this.OnCountChanged();
				}
			}
		}
		
		[Column(Storage="_DaysSinceInitiallyDiscovered", DbType="SmallInt")]
		public System.Nullable<short> DaysSinceInitiallyDiscovered
		{
			get
			{
				return this._DaysSinceInitiallyDiscovered;
			}
			set
			{
				if ((this._DaysSinceInitiallyDiscovered != value))
				{
					this.OnDaysSinceInitiallyDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._DaysSinceInitiallyDiscovered = value;
					this.SendPropertyChanged("DaysSinceInitiallyDiscovered");
					this.OnDaysSinceInitiallyDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_DaysSinceLastDiscovered", DbType="SmallInt NOT NULL")]
		public short DaysSinceLastDiscovered
		{
			get
			{
				return this._DaysSinceLastDiscovered;
			}
			set
			{
				if ((this._DaysSinceLastDiscovered != value))
				{
					this.OnDaysSinceLastDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._DaysSinceLastDiscovered = value;
					this.SendPropertyChanged("DaysSinceLastDiscovered");
					this.OnDaysSinceLastDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_Strength", DbType="Float")]
		public System.Nullable<double> Strength
		{
			get
			{
				return this._Strength;
			}
			set
			{
				if ((this._Strength != value))
				{
					this.OnStrengthChanging(value);
					this.SendPropertyChanging();
					this._Strength = value;
					this.SendPropertyChanged("Strength");
					this.OnStrengthChanged();
				}
			}
		}
		
		[Column(Storage="_Rank", DbType="Int NOT NULL")]
		public int Rank
		{
			get
			{
				return this._Rank;
			}
			set
			{
				if ((this._Rank != value))
				{
					this.OnRankChanging(value);
					this.SendPropertyChanging();
					this._Rank = value;
					this.SendPropertyChanged("Rank");
					this.OnRankChanged();
				}
			}
		}
		
		[Column(Storage="_DenseRank", DbType="Int NOT NULL")]
		public int DenseRank
		{
			get
			{
				return this._DenseRank;
			}
			set
			{
				if ((this._DenseRank != value))
				{
					this.OnDenseRankChanging(value);
					this.SendPropertyChanging();
					this._DenseRank = value;
					this.SendPropertyChanged("DenseRank");
					this.OnDenseRankChanged();
				}
			}
		}
		
		[Column(Storage="_NTile", DbType="TinyInt NOT NULL")]
		public byte NTile
		{
			get
			{
				return this._NTile;
			}
			set
			{
				if ((this._NTile != value))
				{
					this.OnNTileChanging(value);
					this.SendPropertyChanging();
					this._NTile = value;
					this.SendPropertyChanged("NTile");
					this.OnNTileChanged();
				}
			}
		}
		
		[Association(Name="Extension_EmailAddresses_MOST_POPULAR_EXTENSIONS_BY_HOST", Storage="_Extension", ThisKey="ExtensionID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Extension Extension
		{
			get
			{
				return this._Extension.Entity;
			}
			set
			{
				Extension previousValue = this._Extension.Entity;
				if (((previousValue != value) 
							|| (this._Extension.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Extension.Entity = null;
						previousValue.EmailAddresses_MOST_POPULAR_EXTENSIONS_BY_HOST = null;
					}
					this._Extension.Entity = value;
					if ((value != null))
					{
						value.EmailAddresses_MOST_POPULAR_EXTENSIONS_BY_HOST = this;
						this._ExtensionID = value.ID;
					}
					else
					{
						this._ExtensionID = default(int);
					}
					this.SendPropertyChanged("Extension");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="rpt.EmailAddresses_MOST_POPULAR_EXTENSIONS_BY_SCHEMES")]
	public partial class EmailAddresses_MOST_POPULAR_EXTENSIONS_BY_SCHEME : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RowNumber;
		
		private System.Nullable<System.DateTime> _InitiallyDiscovered;
		
		private System.DateTime _LastDiscovered;
		
		private int _ExtensionID;
		
		private int _Count;
		
		private System.Nullable<short> _DaysSinceInitiallyDiscovered;
		
		private short _DaysSinceLastDiscovered;
		
		private System.Nullable<double> _Strength;
		
		private int _Rank;
		
		private int _DenseRank;
		
		private byte _NTile;
		
		private EntityRef<Extension> _Extension;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRowNumberChanging(int value);
    partial void OnRowNumberChanged();
    partial void OnInitiallyDiscoveredChanging(System.Nullable<System.DateTime> value);
    partial void OnInitiallyDiscoveredChanged();
    partial void OnLastDiscoveredChanging(System.DateTime value);
    partial void OnLastDiscoveredChanged();
    partial void OnExtensionIDChanging(int value);
    partial void OnExtensionIDChanged();
    partial void OnCountChanging(int value);
    partial void OnCountChanged();
    partial void OnDaysSinceInitiallyDiscoveredChanging(System.Nullable<short> value);
    partial void OnDaysSinceInitiallyDiscoveredChanged();
    partial void OnDaysSinceLastDiscoveredChanging(short value);
    partial void OnDaysSinceLastDiscoveredChanged();
    partial void OnStrengthChanging(System.Nullable<double> value);
    partial void OnStrengthChanged();
    partial void OnRankChanging(int value);
    partial void OnRankChanged();
    partial void OnDenseRankChanging(int value);
    partial void OnDenseRankChanged();
    partial void OnNTileChanging(byte value);
    partial void OnNTileChanged();
    #endregion
		
		public EmailAddresses_MOST_POPULAR_EXTENSIONS_BY_SCHEME()
		{
			this._Extension = default(EntityRef<Extension>);
			OnCreated();
		}
		
		[Column(Storage="_RowNumber", DbType="Int NOT NULL")]
		public int RowNumber
		{
			get
			{
				return this._RowNumber;
			}
			set
			{
				if ((this._RowNumber != value))
				{
					this.OnRowNumberChanging(value);
					this.SendPropertyChanging();
					this._RowNumber = value;
					this.SendPropertyChanged("RowNumber");
					this.OnRowNumberChanged();
				}
			}
		}
		
		[Column(Storage="_InitiallyDiscovered", DbType="DateTime")]
		public System.Nullable<System.DateTime> InitiallyDiscovered
		{
			get
			{
				return this._InitiallyDiscovered;
			}
			set
			{
				if ((this._InitiallyDiscovered != value))
				{
					this.OnInitiallyDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._InitiallyDiscovered = value;
					this.SendPropertyChanged("InitiallyDiscovered");
					this.OnInitiallyDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_LastDiscovered", DbType="DateTime NOT NULL")]
		public System.DateTime LastDiscovered
		{
			get
			{
				return this._LastDiscovered;
			}
			set
			{
				if ((this._LastDiscovered != value))
				{
					this.OnLastDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._LastDiscovered = value;
					this.SendPropertyChanged("LastDiscovered");
					this.OnLastDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_ExtensionID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ExtensionID
		{
			get
			{
				return this._ExtensionID;
			}
			set
			{
				if ((this._ExtensionID != value))
				{
					if (this._Extension.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnExtensionIDChanging(value);
					this.SendPropertyChanging();
					this._ExtensionID = value;
					this.SendPropertyChanged("ExtensionID");
					this.OnExtensionIDChanged();
				}
			}
		}
		
		[Column(Storage="_Count", DbType="Int NOT NULL")]
		public int Count
		{
			get
			{
				return this._Count;
			}
			set
			{
				if ((this._Count != value))
				{
					this.OnCountChanging(value);
					this.SendPropertyChanging();
					this._Count = value;
					this.SendPropertyChanged("Count");
					this.OnCountChanged();
				}
			}
		}
		
		[Column(Storage="_DaysSinceInitiallyDiscovered", DbType="SmallInt")]
		public System.Nullable<short> DaysSinceInitiallyDiscovered
		{
			get
			{
				return this._DaysSinceInitiallyDiscovered;
			}
			set
			{
				if ((this._DaysSinceInitiallyDiscovered != value))
				{
					this.OnDaysSinceInitiallyDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._DaysSinceInitiallyDiscovered = value;
					this.SendPropertyChanged("DaysSinceInitiallyDiscovered");
					this.OnDaysSinceInitiallyDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_DaysSinceLastDiscovered", DbType="SmallInt NOT NULL")]
		public short DaysSinceLastDiscovered
		{
			get
			{
				return this._DaysSinceLastDiscovered;
			}
			set
			{
				if ((this._DaysSinceLastDiscovered != value))
				{
					this.OnDaysSinceLastDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._DaysSinceLastDiscovered = value;
					this.SendPropertyChanged("DaysSinceLastDiscovered");
					this.OnDaysSinceLastDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_Strength", DbType="Float")]
		public System.Nullable<double> Strength
		{
			get
			{
				return this._Strength;
			}
			set
			{
				if ((this._Strength != value))
				{
					this.OnStrengthChanging(value);
					this.SendPropertyChanging();
					this._Strength = value;
					this.SendPropertyChanged("Strength");
					this.OnStrengthChanged();
				}
			}
		}
		
		[Column(Storage="_Rank", DbType="Int NOT NULL")]
		public int Rank
		{
			get
			{
				return this._Rank;
			}
			set
			{
				if ((this._Rank != value))
				{
					this.OnRankChanging(value);
					this.SendPropertyChanging();
					this._Rank = value;
					this.SendPropertyChanged("Rank");
					this.OnRankChanged();
				}
			}
		}
		
		[Column(Storage="_DenseRank", DbType="Int NOT NULL")]
		public int DenseRank
		{
			get
			{
				return this._DenseRank;
			}
			set
			{
				if ((this._DenseRank != value))
				{
					this.OnDenseRankChanging(value);
					this.SendPropertyChanging();
					this._DenseRank = value;
					this.SendPropertyChanged("DenseRank");
					this.OnDenseRankChanged();
				}
			}
		}
		
		[Column(Storage="_NTile", DbType="TinyInt NOT NULL")]
		public byte NTile
		{
			get
			{
				return this._NTile;
			}
			set
			{
				if ((this._NTile != value))
				{
					this.OnNTileChanging(value);
					this.SendPropertyChanging();
					this._NTile = value;
					this.SendPropertyChanged("NTile");
					this.OnNTileChanged();
				}
			}
		}
		
		[Association(Name="Extension_EmailAddresses_MOST_POPULAR_EXTENSIONS_BY_SCHEME", Storage="_Extension", ThisKey="ExtensionID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Extension Extension
		{
			get
			{
				return this._Extension.Entity;
			}
			set
			{
				Extension previousValue = this._Extension.Entity;
				if (((previousValue != value) 
							|| (this._Extension.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Extension.Entity = null;
						previousValue.EmailAddresses_MOST_POPULAR_EXTENSIONS_BY_SCHEME = null;
					}
					this._Extension.Entity = value;
					if ((value != null))
					{
						value.EmailAddresses_MOST_POPULAR_EXTENSIONS_BY_SCHEME = this;
						this._ExtensionID = value.ID;
					}
					else
					{
						this._ExtensionID = default(int);
					}
					this.SendPropertyChanged("Extension");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="rpt.EmailAddresses_MOST_POPULAR_HOSTS_BY_ABSOLUTEURIS")]
	public partial class EmailAddresses_MOST_POPULAR_HOSTS_BY_ABSOLUTEURI : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RowNumber;
		
		private System.Nullable<System.DateTime> _InitiallyDiscovered;
		
		private System.DateTime _LastDiscovered;
		
		private int _HostID;
		
		private int _Count;
		
		private System.Nullable<short> _DaysSinceInitiallyDiscovered;
		
		private short _DaysSinceLastDiscovered;
		
		private System.Nullable<double> _Strength;
		
		private int _Rank;
		
		private int _DenseRank;
		
		private byte _NTile;
		
		private EntityRef<Host> _Host;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRowNumberChanging(int value);
    partial void OnRowNumberChanged();
    partial void OnInitiallyDiscoveredChanging(System.Nullable<System.DateTime> value);
    partial void OnInitiallyDiscoveredChanged();
    partial void OnLastDiscoveredChanging(System.DateTime value);
    partial void OnLastDiscoveredChanged();
    partial void OnHostIDChanging(int value);
    partial void OnHostIDChanged();
    partial void OnCountChanging(int value);
    partial void OnCountChanged();
    partial void OnDaysSinceInitiallyDiscoveredChanging(System.Nullable<short> value);
    partial void OnDaysSinceInitiallyDiscoveredChanged();
    partial void OnDaysSinceLastDiscoveredChanging(short value);
    partial void OnDaysSinceLastDiscoveredChanged();
    partial void OnStrengthChanging(System.Nullable<double> value);
    partial void OnStrengthChanged();
    partial void OnRankChanging(int value);
    partial void OnRankChanged();
    partial void OnDenseRankChanging(int value);
    partial void OnDenseRankChanged();
    partial void OnNTileChanging(byte value);
    partial void OnNTileChanged();
    #endregion
		
		public EmailAddresses_MOST_POPULAR_HOSTS_BY_ABSOLUTEURI()
		{
			this._Host = default(EntityRef<Host>);
			OnCreated();
		}
		
		[Column(Storage="_RowNumber", DbType="Int NOT NULL")]
		public int RowNumber
		{
			get
			{
				return this._RowNumber;
			}
			set
			{
				if ((this._RowNumber != value))
				{
					this.OnRowNumberChanging(value);
					this.SendPropertyChanging();
					this._RowNumber = value;
					this.SendPropertyChanged("RowNumber");
					this.OnRowNumberChanged();
				}
			}
		}
		
		[Column(Storage="_InitiallyDiscovered", DbType="DateTime")]
		public System.Nullable<System.DateTime> InitiallyDiscovered
		{
			get
			{
				return this._InitiallyDiscovered;
			}
			set
			{
				if ((this._InitiallyDiscovered != value))
				{
					this.OnInitiallyDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._InitiallyDiscovered = value;
					this.SendPropertyChanged("InitiallyDiscovered");
					this.OnInitiallyDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_LastDiscovered", DbType="DateTime NOT NULL")]
		public System.DateTime LastDiscovered
		{
			get
			{
				return this._LastDiscovered;
			}
			set
			{
				if ((this._LastDiscovered != value))
				{
					this.OnLastDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._LastDiscovered = value;
					this.SendPropertyChanged("LastDiscovered");
					this.OnLastDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_HostID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int HostID
		{
			get
			{
				return this._HostID;
			}
			set
			{
				if ((this._HostID != value))
				{
					if (this._Host.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnHostIDChanging(value);
					this.SendPropertyChanging();
					this._HostID = value;
					this.SendPropertyChanged("HostID");
					this.OnHostIDChanged();
				}
			}
		}
		
		[Column(Storage="_Count", DbType="Int NOT NULL")]
		public int Count
		{
			get
			{
				return this._Count;
			}
			set
			{
				if ((this._Count != value))
				{
					this.OnCountChanging(value);
					this.SendPropertyChanging();
					this._Count = value;
					this.SendPropertyChanged("Count");
					this.OnCountChanged();
				}
			}
		}
		
		[Column(Storage="_DaysSinceInitiallyDiscovered", DbType="SmallInt")]
		public System.Nullable<short> DaysSinceInitiallyDiscovered
		{
			get
			{
				return this._DaysSinceInitiallyDiscovered;
			}
			set
			{
				if ((this._DaysSinceInitiallyDiscovered != value))
				{
					this.OnDaysSinceInitiallyDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._DaysSinceInitiallyDiscovered = value;
					this.SendPropertyChanged("DaysSinceInitiallyDiscovered");
					this.OnDaysSinceInitiallyDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_DaysSinceLastDiscovered", DbType="SmallInt NOT NULL")]
		public short DaysSinceLastDiscovered
		{
			get
			{
				return this._DaysSinceLastDiscovered;
			}
			set
			{
				if ((this._DaysSinceLastDiscovered != value))
				{
					this.OnDaysSinceLastDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._DaysSinceLastDiscovered = value;
					this.SendPropertyChanged("DaysSinceLastDiscovered");
					this.OnDaysSinceLastDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_Strength", DbType="Float")]
		public System.Nullable<double> Strength
		{
			get
			{
				return this._Strength;
			}
			set
			{
				if ((this._Strength != value))
				{
					this.OnStrengthChanging(value);
					this.SendPropertyChanging();
					this._Strength = value;
					this.SendPropertyChanged("Strength");
					this.OnStrengthChanged();
				}
			}
		}
		
		[Column(Storage="_Rank", DbType="Int NOT NULL")]
		public int Rank
		{
			get
			{
				return this._Rank;
			}
			set
			{
				if ((this._Rank != value))
				{
					this.OnRankChanging(value);
					this.SendPropertyChanging();
					this._Rank = value;
					this.SendPropertyChanged("Rank");
					this.OnRankChanged();
				}
			}
		}
		
		[Column(Storage="_DenseRank", DbType="Int NOT NULL")]
		public int DenseRank
		{
			get
			{
				return this._DenseRank;
			}
			set
			{
				if ((this._DenseRank != value))
				{
					this.OnDenseRankChanging(value);
					this.SendPropertyChanging();
					this._DenseRank = value;
					this.SendPropertyChanged("DenseRank");
					this.OnDenseRankChanged();
				}
			}
		}
		
		[Column(Storage="_NTile", DbType="TinyInt NOT NULL")]
		public byte NTile
		{
			get
			{
				return this._NTile;
			}
			set
			{
				if ((this._NTile != value))
				{
					this.OnNTileChanging(value);
					this.SendPropertyChanging();
					this._NTile = value;
					this.SendPropertyChanged("NTile");
					this.OnNTileChanged();
				}
			}
		}
		
		[Association(Name="Host_EmailAddresses_MOST_POPULAR_HOSTS_BY_ABSOLUTEURI", Storage="_Host", ThisKey="HostID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Host Host
		{
			get
			{
				return this._Host.Entity;
			}
			set
			{
				Host previousValue = this._Host.Entity;
				if (((previousValue != value) 
							|| (this._Host.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Host.Entity = null;
						previousValue.EmailAddresses_MOST_POPULAR_HOSTS_BY_ABSOLUTEURI = null;
					}
					this._Host.Entity = value;
					if ((value != null))
					{
						value.EmailAddresses_MOST_POPULAR_HOSTS_BY_ABSOLUTEURI = this;
						this._HostID = value.ID;
					}
					else
					{
						this._HostID = default(int);
					}
					this.SendPropertyChanged("Host");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="rpt.EmailAddresses_MOST_POPULAR_HOSTS_BY_DOMAINS")]
	public partial class EmailAddresses_MOST_POPULAR_HOSTS_BY_DOMAIN : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RowNumber;
		
		private System.Nullable<System.DateTime> _InitiallyDiscovered;
		
		private System.DateTime _LastDiscovered;
		
		private int _HostID;
		
		private int _Count;
		
		private System.Nullable<short> _DaysSinceInitiallyDiscovered;
		
		private short _DaysSinceLastDiscovered;
		
		private System.Nullable<double> _Strength;
		
		private int _Rank;
		
		private int _DenseRank;
		
		private byte _NTile;
		
		private EntityRef<Host> _Host;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRowNumberChanging(int value);
    partial void OnRowNumberChanged();
    partial void OnInitiallyDiscoveredChanging(System.Nullable<System.DateTime> value);
    partial void OnInitiallyDiscoveredChanged();
    partial void OnLastDiscoveredChanging(System.DateTime value);
    partial void OnLastDiscoveredChanged();
    partial void OnHostIDChanging(int value);
    partial void OnHostIDChanged();
    partial void OnCountChanging(int value);
    partial void OnCountChanged();
    partial void OnDaysSinceInitiallyDiscoveredChanging(System.Nullable<short> value);
    partial void OnDaysSinceInitiallyDiscoveredChanged();
    partial void OnDaysSinceLastDiscoveredChanging(short value);
    partial void OnDaysSinceLastDiscoveredChanged();
    partial void OnStrengthChanging(System.Nullable<double> value);
    partial void OnStrengthChanged();
    partial void OnRankChanging(int value);
    partial void OnRankChanged();
    partial void OnDenseRankChanging(int value);
    partial void OnDenseRankChanged();
    partial void OnNTileChanging(byte value);
    partial void OnNTileChanged();
    #endregion
		
		public EmailAddresses_MOST_POPULAR_HOSTS_BY_DOMAIN()
		{
			this._Host = default(EntityRef<Host>);
			OnCreated();
		}
		
		[Column(Storage="_RowNumber", DbType="Int NOT NULL")]
		public int RowNumber
		{
			get
			{
				return this._RowNumber;
			}
			set
			{
				if ((this._RowNumber != value))
				{
					this.OnRowNumberChanging(value);
					this.SendPropertyChanging();
					this._RowNumber = value;
					this.SendPropertyChanged("RowNumber");
					this.OnRowNumberChanged();
				}
			}
		}
		
		[Column(Storage="_InitiallyDiscovered", DbType="DateTime")]
		public System.Nullable<System.DateTime> InitiallyDiscovered
		{
			get
			{
				return this._InitiallyDiscovered;
			}
			set
			{
				if ((this._InitiallyDiscovered != value))
				{
					this.OnInitiallyDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._InitiallyDiscovered = value;
					this.SendPropertyChanged("InitiallyDiscovered");
					this.OnInitiallyDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_LastDiscovered", DbType="DateTime NOT NULL")]
		public System.DateTime LastDiscovered
		{
			get
			{
				return this._LastDiscovered;
			}
			set
			{
				if ((this._LastDiscovered != value))
				{
					this.OnLastDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._LastDiscovered = value;
					this.SendPropertyChanged("LastDiscovered");
					this.OnLastDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_HostID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int HostID
		{
			get
			{
				return this._HostID;
			}
			set
			{
				if ((this._HostID != value))
				{
					if (this._Host.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnHostIDChanging(value);
					this.SendPropertyChanging();
					this._HostID = value;
					this.SendPropertyChanged("HostID");
					this.OnHostIDChanged();
				}
			}
		}
		
		[Column(Storage="_Count", DbType="Int NOT NULL")]
		public int Count
		{
			get
			{
				return this._Count;
			}
			set
			{
				if ((this._Count != value))
				{
					this.OnCountChanging(value);
					this.SendPropertyChanging();
					this._Count = value;
					this.SendPropertyChanged("Count");
					this.OnCountChanged();
				}
			}
		}
		
		[Column(Storage="_DaysSinceInitiallyDiscovered", DbType="SmallInt")]
		public System.Nullable<short> DaysSinceInitiallyDiscovered
		{
			get
			{
				return this._DaysSinceInitiallyDiscovered;
			}
			set
			{
				if ((this._DaysSinceInitiallyDiscovered != value))
				{
					this.OnDaysSinceInitiallyDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._DaysSinceInitiallyDiscovered = value;
					this.SendPropertyChanged("DaysSinceInitiallyDiscovered");
					this.OnDaysSinceInitiallyDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_DaysSinceLastDiscovered", DbType="SmallInt NOT NULL")]
		public short DaysSinceLastDiscovered
		{
			get
			{
				return this._DaysSinceLastDiscovered;
			}
			set
			{
				if ((this._DaysSinceLastDiscovered != value))
				{
					this.OnDaysSinceLastDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._DaysSinceLastDiscovered = value;
					this.SendPropertyChanged("DaysSinceLastDiscovered");
					this.OnDaysSinceLastDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_Strength", DbType="Float")]
		public System.Nullable<double> Strength
		{
			get
			{
				return this._Strength;
			}
			set
			{
				if ((this._Strength != value))
				{
					this.OnStrengthChanging(value);
					this.SendPropertyChanging();
					this._Strength = value;
					this.SendPropertyChanged("Strength");
					this.OnStrengthChanged();
				}
			}
		}
		
		[Column(Storage="_Rank", DbType="Int NOT NULL")]
		public int Rank
		{
			get
			{
				return this._Rank;
			}
			set
			{
				if ((this._Rank != value))
				{
					this.OnRankChanging(value);
					this.SendPropertyChanging();
					this._Rank = value;
					this.SendPropertyChanged("Rank");
					this.OnRankChanged();
				}
			}
		}
		
		[Column(Storage="_DenseRank", DbType="Int NOT NULL")]
		public int DenseRank
		{
			get
			{
				return this._DenseRank;
			}
			set
			{
				if ((this._DenseRank != value))
				{
					this.OnDenseRankChanging(value);
					this.SendPropertyChanging();
					this._DenseRank = value;
					this.SendPropertyChanged("DenseRank");
					this.OnDenseRankChanged();
				}
			}
		}
		
		[Column(Storage="_NTile", DbType="TinyInt NOT NULL")]
		public byte NTile
		{
			get
			{
				return this._NTile;
			}
			set
			{
				if ((this._NTile != value))
				{
					this.OnNTileChanging(value);
					this.SendPropertyChanging();
					this._NTile = value;
					this.SendPropertyChanged("NTile");
					this.OnNTileChanged();
				}
			}
		}
		
		[Association(Name="Host_EmailAddresses_MOST_POPULAR_HOSTS_BY_DOMAIN", Storage="_Host", ThisKey="HostID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Host Host
		{
			get
			{
				return this._Host.Entity;
			}
			set
			{
				Host previousValue = this._Host.Entity;
				if (((previousValue != value) 
							|| (this._Host.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Host.Entity = null;
						previousValue.EmailAddresses_MOST_POPULAR_HOSTS_BY_DOMAIN = null;
					}
					this._Host.Entity = value;
					if ((value != null))
					{
						value.EmailAddresses_MOST_POPULAR_HOSTS_BY_DOMAIN = this;
						this._HostID = value.ID;
					}
					else
					{
						this._HostID = default(int);
					}
					this.SendPropertyChanged("Host");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="rpt.EmailAddresses_MOST_POPULAR_HOSTS_BY_EXTENSIONS")]
	public partial class EmailAddresses_MOST_POPULAR_HOSTS_BY_EXTENSION : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RowNumber;
		
		private System.Nullable<System.DateTime> _InitiallyDiscovered;
		
		private System.DateTime _LastDiscovered;
		
		private int _HostID;
		
		private int _Count;
		
		private System.Nullable<short> _DaysSinceInitiallyDiscovered;
		
		private short _DaysSinceLastDiscovered;
		
		private System.Nullable<double> _Strength;
		
		private int _Rank;
		
		private int _DenseRank;
		
		private byte _NTile;
		
		private EntityRef<Host> _Host;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRowNumberChanging(int value);
    partial void OnRowNumberChanged();
    partial void OnInitiallyDiscoveredChanging(System.Nullable<System.DateTime> value);
    partial void OnInitiallyDiscoveredChanged();
    partial void OnLastDiscoveredChanging(System.DateTime value);
    partial void OnLastDiscoveredChanged();
    partial void OnHostIDChanging(int value);
    partial void OnHostIDChanged();
    partial void OnCountChanging(int value);
    partial void OnCountChanged();
    partial void OnDaysSinceInitiallyDiscoveredChanging(System.Nullable<short> value);
    partial void OnDaysSinceInitiallyDiscoveredChanged();
    partial void OnDaysSinceLastDiscoveredChanging(short value);
    partial void OnDaysSinceLastDiscoveredChanged();
    partial void OnStrengthChanging(System.Nullable<double> value);
    partial void OnStrengthChanged();
    partial void OnRankChanging(int value);
    partial void OnRankChanged();
    partial void OnDenseRankChanging(int value);
    partial void OnDenseRankChanged();
    partial void OnNTileChanging(byte value);
    partial void OnNTileChanged();
    #endregion
		
		public EmailAddresses_MOST_POPULAR_HOSTS_BY_EXTENSION()
		{
			this._Host = default(EntityRef<Host>);
			OnCreated();
		}
		
		[Column(Storage="_RowNumber", DbType="Int NOT NULL")]
		public int RowNumber
		{
			get
			{
				return this._RowNumber;
			}
			set
			{
				if ((this._RowNumber != value))
				{
					this.OnRowNumberChanging(value);
					this.SendPropertyChanging();
					this._RowNumber = value;
					this.SendPropertyChanged("RowNumber");
					this.OnRowNumberChanged();
				}
			}
		}
		
		[Column(Storage="_InitiallyDiscovered", DbType="DateTime")]
		public System.Nullable<System.DateTime> InitiallyDiscovered
		{
			get
			{
				return this._InitiallyDiscovered;
			}
			set
			{
				if ((this._InitiallyDiscovered != value))
				{
					this.OnInitiallyDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._InitiallyDiscovered = value;
					this.SendPropertyChanged("InitiallyDiscovered");
					this.OnInitiallyDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_LastDiscovered", DbType="DateTime NOT NULL")]
		public System.DateTime LastDiscovered
		{
			get
			{
				return this._LastDiscovered;
			}
			set
			{
				if ((this._LastDiscovered != value))
				{
					this.OnLastDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._LastDiscovered = value;
					this.SendPropertyChanged("LastDiscovered");
					this.OnLastDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_HostID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int HostID
		{
			get
			{
				return this._HostID;
			}
			set
			{
				if ((this._HostID != value))
				{
					if (this._Host.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnHostIDChanging(value);
					this.SendPropertyChanging();
					this._HostID = value;
					this.SendPropertyChanged("HostID");
					this.OnHostIDChanged();
				}
			}
		}
		
		[Column(Storage="_Count", DbType="Int NOT NULL")]
		public int Count
		{
			get
			{
				return this._Count;
			}
			set
			{
				if ((this._Count != value))
				{
					this.OnCountChanging(value);
					this.SendPropertyChanging();
					this._Count = value;
					this.SendPropertyChanged("Count");
					this.OnCountChanged();
				}
			}
		}
		
		[Column(Storage="_DaysSinceInitiallyDiscovered", DbType="SmallInt")]
		public System.Nullable<short> DaysSinceInitiallyDiscovered
		{
			get
			{
				return this._DaysSinceInitiallyDiscovered;
			}
			set
			{
				if ((this._DaysSinceInitiallyDiscovered != value))
				{
					this.OnDaysSinceInitiallyDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._DaysSinceInitiallyDiscovered = value;
					this.SendPropertyChanged("DaysSinceInitiallyDiscovered");
					this.OnDaysSinceInitiallyDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_DaysSinceLastDiscovered", DbType="SmallInt NOT NULL")]
		public short DaysSinceLastDiscovered
		{
			get
			{
				return this._DaysSinceLastDiscovered;
			}
			set
			{
				if ((this._DaysSinceLastDiscovered != value))
				{
					this.OnDaysSinceLastDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._DaysSinceLastDiscovered = value;
					this.SendPropertyChanged("DaysSinceLastDiscovered");
					this.OnDaysSinceLastDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_Strength", DbType="Float")]
		public System.Nullable<double> Strength
		{
			get
			{
				return this._Strength;
			}
			set
			{
				if ((this._Strength != value))
				{
					this.OnStrengthChanging(value);
					this.SendPropertyChanging();
					this._Strength = value;
					this.SendPropertyChanged("Strength");
					this.OnStrengthChanged();
				}
			}
		}
		
		[Column(Storage="_Rank", DbType="Int NOT NULL")]
		public int Rank
		{
			get
			{
				return this._Rank;
			}
			set
			{
				if ((this._Rank != value))
				{
					this.OnRankChanging(value);
					this.SendPropertyChanging();
					this._Rank = value;
					this.SendPropertyChanged("Rank");
					this.OnRankChanged();
				}
			}
		}
		
		[Column(Storage="_DenseRank", DbType="Int NOT NULL")]
		public int DenseRank
		{
			get
			{
				return this._DenseRank;
			}
			set
			{
				if ((this._DenseRank != value))
				{
					this.OnDenseRankChanging(value);
					this.SendPropertyChanging();
					this._DenseRank = value;
					this.SendPropertyChanged("DenseRank");
					this.OnDenseRankChanged();
				}
			}
		}
		
		[Column(Storage="_NTile", DbType="TinyInt NOT NULL")]
		public byte NTile
		{
			get
			{
				return this._NTile;
			}
			set
			{
				if ((this._NTile != value))
				{
					this.OnNTileChanging(value);
					this.SendPropertyChanging();
					this._NTile = value;
					this.SendPropertyChanged("NTile");
					this.OnNTileChanged();
				}
			}
		}
		
		[Association(Name="Host_EmailAddresses_MOST_POPULAR_HOSTS_BY_EXTENSION", Storage="_Host", ThisKey="HostID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Host Host
		{
			get
			{
				return this._Host.Entity;
			}
			set
			{
				Host previousValue = this._Host.Entity;
				if (((previousValue != value) 
							|| (this._Host.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Host.Entity = null;
						previousValue.EmailAddresses_MOST_POPULAR_HOSTS_BY_EXTENSION = null;
					}
					this._Host.Entity = value;
					if ((value != null))
					{
						value.EmailAddresses_MOST_POPULAR_HOSTS_BY_EXTENSION = this;
						this._HostID = value.ID;
					}
					else
					{
						this._HostID = default(int);
					}
					this.SendPropertyChanged("Host");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="rpt.EmailAddresses_MOST_POPULAR_HOSTS_BY_HOSTS")]
	public partial class EmailAddresses_MOST_POPULAR_HOSTS_BY_HOST : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RowNumber;
		
		private System.Nullable<System.DateTime> _InitiallyDiscovered;
		
		private System.DateTime _LastDiscovered;
		
		private int _HostID;
		
		private int _Count;
		
		private System.Nullable<short> _DaysSinceInitiallyDiscovered;
		
		private short _DaysSinceLastDiscovered;
		
		private System.Nullable<double> _Strength;
		
		private int _Rank;
		
		private int _DenseRank;
		
		private byte _NTile;
		
		private EntityRef<Host> _Host;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRowNumberChanging(int value);
    partial void OnRowNumberChanged();
    partial void OnInitiallyDiscoveredChanging(System.Nullable<System.DateTime> value);
    partial void OnInitiallyDiscoveredChanged();
    partial void OnLastDiscoveredChanging(System.DateTime value);
    partial void OnLastDiscoveredChanged();
    partial void OnHostIDChanging(int value);
    partial void OnHostIDChanged();
    partial void OnCountChanging(int value);
    partial void OnCountChanged();
    partial void OnDaysSinceInitiallyDiscoveredChanging(System.Nullable<short> value);
    partial void OnDaysSinceInitiallyDiscoveredChanged();
    partial void OnDaysSinceLastDiscoveredChanging(short value);
    partial void OnDaysSinceLastDiscoveredChanged();
    partial void OnStrengthChanging(System.Nullable<double> value);
    partial void OnStrengthChanged();
    partial void OnRankChanging(int value);
    partial void OnRankChanged();
    partial void OnDenseRankChanging(int value);
    partial void OnDenseRankChanged();
    partial void OnNTileChanging(byte value);
    partial void OnNTileChanged();
    #endregion
		
		public EmailAddresses_MOST_POPULAR_HOSTS_BY_HOST()
		{
			this._Host = default(EntityRef<Host>);
			OnCreated();
		}
		
		[Column(Storage="_RowNumber", DbType="Int NOT NULL")]
		public int RowNumber
		{
			get
			{
				return this._RowNumber;
			}
			set
			{
				if ((this._RowNumber != value))
				{
					this.OnRowNumberChanging(value);
					this.SendPropertyChanging();
					this._RowNumber = value;
					this.SendPropertyChanged("RowNumber");
					this.OnRowNumberChanged();
				}
			}
		}
		
		[Column(Storage="_InitiallyDiscovered", DbType="DateTime")]
		public System.Nullable<System.DateTime> InitiallyDiscovered
		{
			get
			{
				return this._InitiallyDiscovered;
			}
			set
			{
				if ((this._InitiallyDiscovered != value))
				{
					this.OnInitiallyDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._InitiallyDiscovered = value;
					this.SendPropertyChanged("InitiallyDiscovered");
					this.OnInitiallyDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_LastDiscovered", DbType="DateTime NOT NULL")]
		public System.DateTime LastDiscovered
		{
			get
			{
				return this._LastDiscovered;
			}
			set
			{
				if ((this._LastDiscovered != value))
				{
					this.OnLastDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._LastDiscovered = value;
					this.SendPropertyChanged("LastDiscovered");
					this.OnLastDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_HostID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int HostID
		{
			get
			{
				return this._HostID;
			}
			set
			{
				if ((this._HostID != value))
				{
					if (this._Host.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnHostIDChanging(value);
					this.SendPropertyChanging();
					this._HostID = value;
					this.SendPropertyChanged("HostID");
					this.OnHostIDChanged();
				}
			}
		}
		
		[Column(Storage="_Count", DbType="Int NOT NULL")]
		public int Count
		{
			get
			{
				return this._Count;
			}
			set
			{
				if ((this._Count != value))
				{
					this.OnCountChanging(value);
					this.SendPropertyChanging();
					this._Count = value;
					this.SendPropertyChanged("Count");
					this.OnCountChanged();
				}
			}
		}
		
		[Column(Storage="_DaysSinceInitiallyDiscovered", DbType="SmallInt")]
		public System.Nullable<short> DaysSinceInitiallyDiscovered
		{
			get
			{
				return this._DaysSinceInitiallyDiscovered;
			}
			set
			{
				if ((this._DaysSinceInitiallyDiscovered != value))
				{
					this.OnDaysSinceInitiallyDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._DaysSinceInitiallyDiscovered = value;
					this.SendPropertyChanged("DaysSinceInitiallyDiscovered");
					this.OnDaysSinceInitiallyDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_DaysSinceLastDiscovered", DbType="SmallInt NOT NULL")]
		public short DaysSinceLastDiscovered
		{
			get
			{
				return this._DaysSinceLastDiscovered;
			}
			set
			{
				if ((this._DaysSinceLastDiscovered != value))
				{
					this.OnDaysSinceLastDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._DaysSinceLastDiscovered = value;
					this.SendPropertyChanged("DaysSinceLastDiscovered");
					this.OnDaysSinceLastDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_Strength", DbType="Float")]
		public System.Nullable<double> Strength
		{
			get
			{
				return this._Strength;
			}
			set
			{
				if ((this._Strength != value))
				{
					this.OnStrengthChanging(value);
					this.SendPropertyChanging();
					this._Strength = value;
					this.SendPropertyChanged("Strength");
					this.OnStrengthChanged();
				}
			}
		}
		
		[Column(Storage="_Rank", DbType="Int NOT NULL")]
		public int Rank
		{
			get
			{
				return this._Rank;
			}
			set
			{
				if ((this._Rank != value))
				{
					this.OnRankChanging(value);
					this.SendPropertyChanging();
					this._Rank = value;
					this.SendPropertyChanged("Rank");
					this.OnRankChanged();
				}
			}
		}
		
		[Column(Storage="_DenseRank", DbType="Int NOT NULL")]
		public int DenseRank
		{
			get
			{
				return this._DenseRank;
			}
			set
			{
				if ((this._DenseRank != value))
				{
					this.OnDenseRankChanging(value);
					this.SendPropertyChanging();
					this._DenseRank = value;
					this.SendPropertyChanged("DenseRank");
					this.OnDenseRankChanged();
				}
			}
		}
		
		[Column(Storage="_NTile", DbType="TinyInt NOT NULL")]
		public byte NTile
		{
			get
			{
				return this._NTile;
			}
			set
			{
				if ((this._NTile != value))
				{
					this.OnNTileChanging(value);
					this.SendPropertyChanging();
					this._NTile = value;
					this.SendPropertyChanged("NTile");
					this.OnNTileChanged();
				}
			}
		}
		
		[Association(Name="Host_EmailAddresses_MOST_POPULAR_HOSTS_BY_HOST", Storage="_Host", ThisKey="HostID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Host Host
		{
			get
			{
				return this._Host.Entity;
			}
			set
			{
				Host previousValue = this._Host.Entity;
				if (((previousValue != value) 
							|| (this._Host.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Host.Entity = null;
						previousValue.EmailAddresses_MOST_POPULAR_HOSTS_BY_HOST = null;
					}
					this._Host.Entity = value;
					if ((value != null))
					{
						value.EmailAddresses_MOST_POPULAR_HOSTS_BY_HOST = this;
						this._HostID = value.ID;
					}
					else
					{
						this._HostID = default(int);
					}
					this.SendPropertyChanged("Host");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="rpt.EmailAddresses_MOST_POPULAR_HOSTS_BY_SCHEMES")]
	public partial class EmailAddresses_MOST_POPULAR_HOSTS_BY_SCHEME : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RowNumber;
		
		private System.Nullable<System.DateTime> _InitiallyDiscovered;
		
		private System.DateTime _LastDiscovered;
		
		private int _HostID;
		
		private int _Count;
		
		private System.Nullable<short> _DaysSinceInitiallyDiscovered;
		
		private short _DaysSinceLastDiscovered;
		
		private System.Nullable<double> _Strength;
		
		private int _Rank;
		
		private int _DenseRank;
		
		private byte _NTile;
		
		private EntityRef<Host> _Host;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRowNumberChanging(int value);
    partial void OnRowNumberChanged();
    partial void OnInitiallyDiscoveredChanging(System.Nullable<System.DateTime> value);
    partial void OnInitiallyDiscoveredChanged();
    partial void OnLastDiscoveredChanging(System.DateTime value);
    partial void OnLastDiscoveredChanged();
    partial void OnHostIDChanging(int value);
    partial void OnHostIDChanged();
    partial void OnCountChanging(int value);
    partial void OnCountChanged();
    partial void OnDaysSinceInitiallyDiscoveredChanging(System.Nullable<short> value);
    partial void OnDaysSinceInitiallyDiscoveredChanged();
    partial void OnDaysSinceLastDiscoveredChanging(short value);
    partial void OnDaysSinceLastDiscoveredChanged();
    partial void OnStrengthChanging(System.Nullable<double> value);
    partial void OnStrengthChanged();
    partial void OnRankChanging(int value);
    partial void OnRankChanged();
    partial void OnDenseRankChanging(int value);
    partial void OnDenseRankChanged();
    partial void OnNTileChanging(byte value);
    partial void OnNTileChanged();
    #endregion
		
		public EmailAddresses_MOST_POPULAR_HOSTS_BY_SCHEME()
		{
			this._Host = default(EntityRef<Host>);
			OnCreated();
		}
		
		[Column(Storage="_RowNumber", DbType="Int NOT NULL")]
		public int RowNumber
		{
			get
			{
				return this._RowNumber;
			}
			set
			{
				if ((this._RowNumber != value))
				{
					this.OnRowNumberChanging(value);
					this.SendPropertyChanging();
					this._RowNumber = value;
					this.SendPropertyChanged("RowNumber");
					this.OnRowNumberChanged();
				}
			}
		}
		
		[Column(Storage="_InitiallyDiscovered", DbType="DateTime")]
		public System.Nullable<System.DateTime> InitiallyDiscovered
		{
			get
			{
				return this._InitiallyDiscovered;
			}
			set
			{
				if ((this._InitiallyDiscovered != value))
				{
					this.OnInitiallyDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._InitiallyDiscovered = value;
					this.SendPropertyChanged("InitiallyDiscovered");
					this.OnInitiallyDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_LastDiscovered", DbType="DateTime NOT NULL")]
		public System.DateTime LastDiscovered
		{
			get
			{
				return this._LastDiscovered;
			}
			set
			{
				if ((this._LastDiscovered != value))
				{
					this.OnLastDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._LastDiscovered = value;
					this.SendPropertyChanged("LastDiscovered");
					this.OnLastDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_HostID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int HostID
		{
			get
			{
				return this._HostID;
			}
			set
			{
				if ((this._HostID != value))
				{
					if (this._Host.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnHostIDChanging(value);
					this.SendPropertyChanging();
					this._HostID = value;
					this.SendPropertyChanged("HostID");
					this.OnHostIDChanged();
				}
			}
		}
		
		[Column(Storage="_Count", DbType="Int NOT NULL")]
		public int Count
		{
			get
			{
				return this._Count;
			}
			set
			{
				if ((this._Count != value))
				{
					this.OnCountChanging(value);
					this.SendPropertyChanging();
					this._Count = value;
					this.SendPropertyChanged("Count");
					this.OnCountChanged();
				}
			}
		}
		
		[Column(Storage="_DaysSinceInitiallyDiscovered", DbType="SmallInt")]
		public System.Nullable<short> DaysSinceInitiallyDiscovered
		{
			get
			{
				return this._DaysSinceInitiallyDiscovered;
			}
			set
			{
				if ((this._DaysSinceInitiallyDiscovered != value))
				{
					this.OnDaysSinceInitiallyDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._DaysSinceInitiallyDiscovered = value;
					this.SendPropertyChanged("DaysSinceInitiallyDiscovered");
					this.OnDaysSinceInitiallyDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_DaysSinceLastDiscovered", DbType="SmallInt NOT NULL")]
		public short DaysSinceLastDiscovered
		{
			get
			{
				return this._DaysSinceLastDiscovered;
			}
			set
			{
				if ((this._DaysSinceLastDiscovered != value))
				{
					this.OnDaysSinceLastDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._DaysSinceLastDiscovered = value;
					this.SendPropertyChanged("DaysSinceLastDiscovered");
					this.OnDaysSinceLastDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_Strength", DbType="Float")]
		public System.Nullable<double> Strength
		{
			get
			{
				return this._Strength;
			}
			set
			{
				if ((this._Strength != value))
				{
					this.OnStrengthChanging(value);
					this.SendPropertyChanging();
					this._Strength = value;
					this.SendPropertyChanged("Strength");
					this.OnStrengthChanged();
				}
			}
		}
		
		[Column(Storage="_Rank", DbType="Int NOT NULL")]
		public int Rank
		{
			get
			{
				return this._Rank;
			}
			set
			{
				if ((this._Rank != value))
				{
					this.OnRankChanging(value);
					this.SendPropertyChanging();
					this._Rank = value;
					this.SendPropertyChanged("Rank");
					this.OnRankChanged();
				}
			}
		}
		
		[Column(Storage="_DenseRank", DbType="Int NOT NULL")]
		public int DenseRank
		{
			get
			{
				return this._DenseRank;
			}
			set
			{
				if ((this._DenseRank != value))
				{
					this.OnDenseRankChanging(value);
					this.SendPropertyChanging();
					this._DenseRank = value;
					this.SendPropertyChanged("DenseRank");
					this.OnDenseRankChanged();
				}
			}
		}
		
		[Column(Storage="_NTile", DbType="TinyInt NOT NULL")]
		public byte NTile
		{
			get
			{
				return this._NTile;
			}
			set
			{
				if ((this._NTile != value))
				{
					this.OnNTileChanging(value);
					this.SendPropertyChanging();
					this._NTile = value;
					this.SendPropertyChanged("NTile");
					this.OnNTileChanged();
				}
			}
		}
		
		[Association(Name="Host_EmailAddresses_MOST_POPULAR_HOSTS_BY_SCHEME", Storage="_Host", ThisKey="HostID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Host Host
		{
			get
			{
				return this._Host.Entity;
			}
			set
			{
				Host previousValue = this._Host.Entity;
				if (((previousValue != value) 
							|| (this._Host.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Host.Entity = null;
						previousValue.EmailAddresses_MOST_POPULAR_HOSTS_BY_SCHEME = null;
					}
					this._Host.Entity = value;
					if ((value != null))
					{
						value.EmailAddresses_MOST_POPULAR_HOSTS_BY_SCHEME = this;
						this._HostID = value.ID;
					}
					else
					{
						this._HostID = default(int);
					}
					this.SendPropertyChanged("Host");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="rpt.EmailAddresses_MOST_POPULAR_SCHEMES_BY_ABSOLUTEURIS")]
	public partial class EmailAddresses_MOST_POPULAR_SCHEMES_BY_ABSOLUTEURI : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RowNumber;
		
		private System.Nullable<System.DateTime> _InitiallyDiscovered;
		
		private System.DateTime _LastDiscovered;
		
		private int _SchemeID;
		
		private int _Count;
		
		private System.Nullable<short> _DaysSinceInitiallyDiscovered;
		
		private short _DaysSinceLastDiscovered;
		
		private System.Nullable<double> _Strength;
		
		private int _Rank;
		
		private int _DenseRank;
		
		private short _NTile;
		
		private EntityRef<Scheme> _Scheme;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRowNumberChanging(int value);
    partial void OnRowNumberChanged();
    partial void OnInitiallyDiscoveredChanging(System.Nullable<System.DateTime> value);
    partial void OnInitiallyDiscoveredChanged();
    partial void OnLastDiscoveredChanging(System.DateTime value);
    partial void OnLastDiscoveredChanged();
    partial void OnSchemeIDChanging(int value);
    partial void OnSchemeIDChanged();
    partial void OnCountChanging(int value);
    partial void OnCountChanged();
    partial void OnDaysSinceInitiallyDiscoveredChanging(System.Nullable<short> value);
    partial void OnDaysSinceInitiallyDiscoveredChanged();
    partial void OnDaysSinceLastDiscoveredChanging(short value);
    partial void OnDaysSinceLastDiscoveredChanged();
    partial void OnStrengthChanging(System.Nullable<double> value);
    partial void OnStrengthChanged();
    partial void OnRankChanging(int value);
    partial void OnRankChanged();
    partial void OnDenseRankChanging(int value);
    partial void OnDenseRankChanged();
    partial void OnNTileChanging(short value);
    partial void OnNTileChanged();
    #endregion
		
		public EmailAddresses_MOST_POPULAR_SCHEMES_BY_ABSOLUTEURI()
		{
			this._Scheme = default(EntityRef<Scheme>);
			OnCreated();
		}
		
		[Column(Storage="_RowNumber", DbType="Int NOT NULL")]
		public int RowNumber
		{
			get
			{
				return this._RowNumber;
			}
			set
			{
				if ((this._RowNumber != value))
				{
					this.OnRowNumberChanging(value);
					this.SendPropertyChanging();
					this._RowNumber = value;
					this.SendPropertyChanged("RowNumber");
					this.OnRowNumberChanged();
				}
			}
		}
		
		[Column(Storage="_InitiallyDiscovered", DbType="DateTime")]
		public System.Nullable<System.DateTime> InitiallyDiscovered
		{
			get
			{
				return this._InitiallyDiscovered;
			}
			set
			{
				if ((this._InitiallyDiscovered != value))
				{
					this.OnInitiallyDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._InitiallyDiscovered = value;
					this.SendPropertyChanged("InitiallyDiscovered");
					this.OnInitiallyDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_LastDiscovered", DbType="DateTime NOT NULL")]
		public System.DateTime LastDiscovered
		{
			get
			{
				return this._LastDiscovered;
			}
			set
			{
				if ((this._LastDiscovered != value))
				{
					this.OnLastDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._LastDiscovered = value;
					this.SendPropertyChanged("LastDiscovered");
					this.OnLastDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_SchemeID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int SchemeID
		{
			get
			{
				return this._SchemeID;
			}
			set
			{
				if ((this._SchemeID != value))
				{
					if (this._Scheme.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSchemeIDChanging(value);
					this.SendPropertyChanging();
					this._SchemeID = value;
					this.SendPropertyChanged("SchemeID");
					this.OnSchemeIDChanged();
				}
			}
		}
		
		[Column(Storage="_Count", DbType="Int NOT NULL")]
		public int Count
		{
			get
			{
				return this._Count;
			}
			set
			{
				if ((this._Count != value))
				{
					this.OnCountChanging(value);
					this.SendPropertyChanging();
					this._Count = value;
					this.SendPropertyChanged("Count");
					this.OnCountChanged();
				}
			}
		}
		
		[Column(Storage="_DaysSinceInitiallyDiscovered", DbType="SmallInt")]
		public System.Nullable<short> DaysSinceInitiallyDiscovered
		{
			get
			{
				return this._DaysSinceInitiallyDiscovered;
			}
			set
			{
				if ((this._DaysSinceInitiallyDiscovered != value))
				{
					this.OnDaysSinceInitiallyDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._DaysSinceInitiallyDiscovered = value;
					this.SendPropertyChanged("DaysSinceInitiallyDiscovered");
					this.OnDaysSinceInitiallyDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_DaysSinceLastDiscovered", DbType="SmallInt NOT NULL")]
		public short DaysSinceLastDiscovered
		{
			get
			{
				return this._DaysSinceLastDiscovered;
			}
			set
			{
				if ((this._DaysSinceLastDiscovered != value))
				{
					this.OnDaysSinceLastDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._DaysSinceLastDiscovered = value;
					this.SendPropertyChanged("DaysSinceLastDiscovered");
					this.OnDaysSinceLastDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_Strength", DbType="Float")]
		public System.Nullable<double> Strength
		{
			get
			{
				return this._Strength;
			}
			set
			{
				if ((this._Strength != value))
				{
					this.OnStrengthChanging(value);
					this.SendPropertyChanging();
					this._Strength = value;
					this.SendPropertyChanged("Strength");
					this.OnStrengthChanged();
				}
			}
		}
		
		[Column(Storage="_Rank", DbType="Int NOT NULL")]
		public int Rank
		{
			get
			{
				return this._Rank;
			}
			set
			{
				if ((this._Rank != value))
				{
					this.OnRankChanging(value);
					this.SendPropertyChanging();
					this._Rank = value;
					this.SendPropertyChanged("Rank");
					this.OnRankChanged();
				}
			}
		}
		
		[Column(Storage="_DenseRank", DbType="Int NOT NULL")]
		public int DenseRank
		{
			get
			{
				return this._DenseRank;
			}
			set
			{
				if ((this._DenseRank != value))
				{
					this.OnDenseRankChanging(value);
					this.SendPropertyChanging();
					this._DenseRank = value;
					this.SendPropertyChanged("DenseRank");
					this.OnDenseRankChanged();
				}
			}
		}
		
		[Column(Storage="_NTile", DbType="SmallInt NOT NULL")]
		public short NTile
		{
			get
			{
				return this._NTile;
			}
			set
			{
				if ((this._NTile != value))
				{
					this.OnNTileChanging(value);
					this.SendPropertyChanging();
					this._NTile = value;
					this.SendPropertyChanged("NTile");
					this.OnNTileChanged();
				}
			}
		}
		
		[Association(Name="Scheme_EmailAddresses_MOST_POPULAR_SCHEMES_BY_ABSOLUTEURI", Storage="_Scheme", ThisKey="SchemeID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Scheme Scheme
		{
			get
			{
				return this._Scheme.Entity;
			}
			set
			{
				Scheme previousValue = this._Scheme.Entity;
				if (((previousValue != value) 
							|| (this._Scheme.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Scheme.Entity = null;
						previousValue.EmailAddresses_MOST_POPULAR_SCHEMES_BY_ABSOLUTEURI = null;
					}
					this._Scheme.Entity = value;
					if ((value != null))
					{
						value.EmailAddresses_MOST_POPULAR_SCHEMES_BY_ABSOLUTEURI = this;
						this._SchemeID = value.ID;
					}
					else
					{
						this._SchemeID = default(int);
					}
					this.SendPropertyChanged("Scheme");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="rpt.EmailAddresses_MOST_POPULAR_SCHEMES_BY_DOMAINS")]
	public partial class EmailAddresses_MOST_POPULAR_SCHEMES_BY_DOMAIN : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RowNumber;
		
		private System.Nullable<System.DateTime> _InitiallyDiscovered;
		
		private System.DateTime _LastDiscovered;
		
		private int _SchemeID;
		
		private int _Count;
		
		private System.Nullable<short> _DaysSinceInitiallyDiscovered;
		
		private short _DaysSinceLastDiscovered;
		
		private System.Nullable<double> _Strength;
		
		private int _Rank;
		
		private int _DenseRank;
		
		private short _NTile;
		
		private EntityRef<Scheme> _Scheme;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRowNumberChanging(int value);
    partial void OnRowNumberChanged();
    partial void OnInitiallyDiscoveredChanging(System.Nullable<System.DateTime> value);
    partial void OnInitiallyDiscoveredChanged();
    partial void OnLastDiscoveredChanging(System.DateTime value);
    partial void OnLastDiscoveredChanged();
    partial void OnSchemeIDChanging(int value);
    partial void OnSchemeIDChanged();
    partial void OnCountChanging(int value);
    partial void OnCountChanged();
    partial void OnDaysSinceInitiallyDiscoveredChanging(System.Nullable<short> value);
    partial void OnDaysSinceInitiallyDiscoveredChanged();
    partial void OnDaysSinceLastDiscoveredChanging(short value);
    partial void OnDaysSinceLastDiscoveredChanged();
    partial void OnStrengthChanging(System.Nullable<double> value);
    partial void OnStrengthChanged();
    partial void OnRankChanging(int value);
    partial void OnRankChanged();
    partial void OnDenseRankChanging(int value);
    partial void OnDenseRankChanged();
    partial void OnNTileChanging(short value);
    partial void OnNTileChanged();
    #endregion
		
		public EmailAddresses_MOST_POPULAR_SCHEMES_BY_DOMAIN()
		{
			this._Scheme = default(EntityRef<Scheme>);
			OnCreated();
		}
		
		[Column(Storage="_RowNumber", DbType="Int NOT NULL")]
		public int RowNumber
		{
			get
			{
				return this._RowNumber;
			}
			set
			{
				if ((this._RowNumber != value))
				{
					this.OnRowNumberChanging(value);
					this.SendPropertyChanging();
					this._RowNumber = value;
					this.SendPropertyChanged("RowNumber");
					this.OnRowNumberChanged();
				}
			}
		}
		
		[Column(Storage="_InitiallyDiscovered", DbType="DateTime")]
		public System.Nullable<System.DateTime> InitiallyDiscovered
		{
			get
			{
				return this._InitiallyDiscovered;
			}
			set
			{
				if ((this._InitiallyDiscovered != value))
				{
					this.OnInitiallyDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._InitiallyDiscovered = value;
					this.SendPropertyChanged("InitiallyDiscovered");
					this.OnInitiallyDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_LastDiscovered", DbType="DateTime NOT NULL")]
		public System.DateTime LastDiscovered
		{
			get
			{
				return this._LastDiscovered;
			}
			set
			{
				if ((this._LastDiscovered != value))
				{
					this.OnLastDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._LastDiscovered = value;
					this.SendPropertyChanged("LastDiscovered");
					this.OnLastDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_SchemeID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int SchemeID
		{
			get
			{
				return this._SchemeID;
			}
			set
			{
				if ((this._SchemeID != value))
				{
					if (this._Scheme.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSchemeIDChanging(value);
					this.SendPropertyChanging();
					this._SchemeID = value;
					this.SendPropertyChanged("SchemeID");
					this.OnSchemeIDChanged();
				}
			}
		}
		
		[Column(Storage="_Count", DbType="Int NOT NULL")]
		public int Count
		{
			get
			{
				return this._Count;
			}
			set
			{
				if ((this._Count != value))
				{
					this.OnCountChanging(value);
					this.SendPropertyChanging();
					this._Count = value;
					this.SendPropertyChanged("Count");
					this.OnCountChanged();
				}
			}
		}
		
		[Column(Storage="_DaysSinceInitiallyDiscovered", DbType="SmallInt")]
		public System.Nullable<short> DaysSinceInitiallyDiscovered
		{
			get
			{
				return this._DaysSinceInitiallyDiscovered;
			}
			set
			{
				if ((this._DaysSinceInitiallyDiscovered != value))
				{
					this.OnDaysSinceInitiallyDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._DaysSinceInitiallyDiscovered = value;
					this.SendPropertyChanged("DaysSinceInitiallyDiscovered");
					this.OnDaysSinceInitiallyDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_DaysSinceLastDiscovered", DbType="SmallInt NOT NULL")]
		public short DaysSinceLastDiscovered
		{
			get
			{
				return this._DaysSinceLastDiscovered;
			}
			set
			{
				if ((this._DaysSinceLastDiscovered != value))
				{
					this.OnDaysSinceLastDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._DaysSinceLastDiscovered = value;
					this.SendPropertyChanged("DaysSinceLastDiscovered");
					this.OnDaysSinceLastDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_Strength", DbType="Float")]
		public System.Nullable<double> Strength
		{
			get
			{
				return this._Strength;
			}
			set
			{
				if ((this._Strength != value))
				{
					this.OnStrengthChanging(value);
					this.SendPropertyChanging();
					this._Strength = value;
					this.SendPropertyChanged("Strength");
					this.OnStrengthChanged();
				}
			}
		}
		
		[Column(Storage="_Rank", DbType="Int NOT NULL")]
		public int Rank
		{
			get
			{
				return this._Rank;
			}
			set
			{
				if ((this._Rank != value))
				{
					this.OnRankChanging(value);
					this.SendPropertyChanging();
					this._Rank = value;
					this.SendPropertyChanged("Rank");
					this.OnRankChanged();
				}
			}
		}
		
		[Column(Storage="_DenseRank", DbType="Int NOT NULL")]
		public int DenseRank
		{
			get
			{
				return this._DenseRank;
			}
			set
			{
				if ((this._DenseRank != value))
				{
					this.OnDenseRankChanging(value);
					this.SendPropertyChanging();
					this._DenseRank = value;
					this.SendPropertyChanged("DenseRank");
					this.OnDenseRankChanged();
				}
			}
		}
		
		[Column(Storage="_NTile", DbType="SmallInt NOT NULL")]
		public short NTile
		{
			get
			{
				return this._NTile;
			}
			set
			{
				if ((this._NTile != value))
				{
					this.OnNTileChanging(value);
					this.SendPropertyChanging();
					this._NTile = value;
					this.SendPropertyChanged("NTile");
					this.OnNTileChanged();
				}
			}
		}
		
		[Association(Name="Scheme_EmailAddresses_MOST_POPULAR_SCHEMES_BY_DOMAIN", Storage="_Scheme", ThisKey="SchemeID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Scheme Scheme
		{
			get
			{
				return this._Scheme.Entity;
			}
			set
			{
				Scheme previousValue = this._Scheme.Entity;
				if (((previousValue != value) 
							|| (this._Scheme.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Scheme.Entity = null;
						previousValue.EmailAddresses_MOST_POPULAR_SCHEMES_BY_DOMAIN = null;
					}
					this._Scheme.Entity = value;
					if ((value != null))
					{
						value.EmailAddresses_MOST_POPULAR_SCHEMES_BY_DOMAIN = this;
						this._SchemeID = value.ID;
					}
					else
					{
						this._SchemeID = default(int);
					}
					this.SendPropertyChanged("Scheme");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="rpt.EmailAddresses_MOST_POPULAR_SCHEMES_BY_EXTENSIONS")]
	public partial class EmailAddresses_MOST_POPULAR_SCHEMES_BY_EXTENSION : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RowNumber;
		
		private System.Nullable<System.DateTime> _InitiallyDiscovered;
		
		private System.DateTime _LastDiscovered;
		
		private int _SchemeID;
		
		private int _Count;
		
		private System.Nullable<short> _DaysSinceInitiallyDiscovered;
		
		private short _DaysSinceLastDiscovered;
		
		private System.Nullable<double> _Strength;
		
		private int _Rank;
		
		private int _DenseRank;
		
		private short _NTile;
		
		private EntityRef<Scheme> _Scheme;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRowNumberChanging(int value);
    partial void OnRowNumberChanged();
    partial void OnInitiallyDiscoveredChanging(System.Nullable<System.DateTime> value);
    partial void OnInitiallyDiscoveredChanged();
    partial void OnLastDiscoveredChanging(System.DateTime value);
    partial void OnLastDiscoveredChanged();
    partial void OnSchemeIDChanging(int value);
    partial void OnSchemeIDChanged();
    partial void OnCountChanging(int value);
    partial void OnCountChanged();
    partial void OnDaysSinceInitiallyDiscoveredChanging(System.Nullable<short> value);
    partial void OnDaysSinceInitiallyDiscoveredChanged();
    partial void OnDaysSinceLastDiscoveredChanging(short value);
    partial void OnDaysSinceLastDiscoveredChanged();
    partial void OnStrengthChanging(System.Nullable<double> value);
    partial void OnStrengthChanged();
    partial void OnRankChanging(int value);
    partial void OnRankChanged();
    partial void OnDenseRankChanging(int value);
    partial void OnDenseRankChanged();
    partial void OnNTileChanging(short value);
    partial void OnNTileChanged();
    #endregion
		
		public EmailAddresses_MOST_POPULAR_SCHEMES_BY_EXTENSION()
		{
			this._Scheme = default(EntityRef<Scheme>);
			OnCreated();
		}
		
		[Column(Storage="_RowNumber", DbType="Int NOT NULL")]
		public int RowNumber
		{
			get
			{
				return this._RowNumber;
			}
			set
			{
				if ((this._RowNumber != value))
				{
					this.OnRowNumberChanging(value);
					this.SendPropertyChanging();
					this._RowNumber = value;
					this.SendPropertyChanged("RowNumber");
					this.OnRowNumberChanged();
				}
			}
		}
		
		[Column(Storage="_InitiallyDiscovered", DbType="DateTime")]
		public System.Nullable<System.DateTime> InitiallyDiscovered
		{
			get
			{
				return this._InitiallyDiscovered;
			}
			set
			{
				if ((this._InitiallyDiscovered != value))
				{
					this.OnInitiallyDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._InitiallyDiscovered = value;
					this.SendPropertyChanged("InitiallyDiscovered");
					this.OnInitiallyDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_LastDiscovered", DbType="DateTime NOT NULL")]
		public System.DateTime LastDiscovered
		{
			get
			{
				return this._LastDiscovered;
			}
			set
			{
				if ((this._LastDiscovered != value))
				{
					this.OnLastDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._LastDiscovered = value;
					this.SendPropertyChanged("LastDiscovered");
					this.OnLastDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_SchemeID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int SchemeID
		{
			get
			{
				return this._SchemeID;
			}
			set
			{
				if ((this._SchemeID != value))
				{
					if (this._Scheme.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSchemeIDChanging(value);
					this.SendPropertyChanging();
					this._SchemeID = value;
					this.SendPropertyChanged("SchemeID");
					this.OnSchemeIDChanged();
				}
			}
		}
		
		[Column(Storage="_Count", DbType="Int NOT NULL")]
		public int Count
		{
			get
			{
				return this._Count;
			}
			set
			{
				if ((this._Count != value))
				{
					this.OnCountChanging(value);
					this.SendPropertyChanging();
					this._Count = value;
					this.SendPropertyChanged("Count");
					this.OnCountChanged();
				}
			}
		}
		
		[Column(Storage="_DaysSinceInitiallyDiscovered", DbType="SmallInt")]
		public System.Nullable<short> DaysSinceInitiallyDiscovered
		{
			get
			{
				return this._DaysSinceInitiallyDiscovered;
			}
			set
			{
				if ((this._DaysSinceInitiallyDiscovered != value))
				{
					this.OnDaysSinceInitiallyDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._DaysSinceInitiallyDiscovered = value;
					this.SendPropertyChanged("DaysSinceInitiallyDiscovered");
					this.OnDaysSinceInitiallyDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_DaysSinceLastDiscovered", DbType="SmallInt NOT NULL")]
		public short DaysSinceLastDiscovered
		{
			get
			{
				return this._DaysSinceLastDiscovered;
			}
			set
			{
				if ((this._DaysSinceLastDiscovered != value))
				{
					this.OnDaysSinceLastDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._DaysSinceLastDiscovered = value;
					this.SendPropertyChanged("DaysSinceLastDiscovered");
					this.OnDaysSinceLastDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_Strength", DbType="Float")]
		public System.Nullable<double> Strength
		{
			get
			{
				return this._Strength;
			}
			set
			{
				if ((this._Strength != value))
				{
					this.OnStrengthChanging(value);
					this.SendPropertyChanging();
					this._Strength = value;
					this.SendPropertyChanged("Strength");
					this.OnStrengthChanged();
				}
			}
		}
		
		[Column(Storage="_Rank", DbType="Int NOT NULL")]
		public int Rank
		{
			get
			{
				return this._Rank;
			}
			set
			{
				if ((this._Rank != value))
				{
					this.OnRankChanging(value);
					this.SendPropertyChanging();
					this._Rank = value;
					this.SendPropertyChanged("Rank");
					this.OnRankChanged();
				}
			}
		}
		
		[Column(Storage="_DenseRank", DbType="Int NOT NULL")]
		public int DenseRank
		{
			get
			{
				return this._DenseRank;
			}
			set
			{
				if ((this._DenseRank != value))
				{
					this.OnDenseRankChanging(value);
					this.SendPropertyChanging();
					this._DenseRank = value;
					this.SendPropertyChanged("DenseRank");
					this.OnDenseRankChanged();
				}
			}
		}
		
		[Column(Storage="_NTile", DbType="SmallInt NOT NULL")]
		public short NTile
		{
			get
			{
				return this._NTile;
			}
			set
			{
				if ((this._NTile != value))
				{
					this.OnNTileChanging(value);
					this.SendPropertyChanging();
					this._NTile = value;
					this.SendPropertyChanged("NTile");
					this.OnNTileChanged();
				}
			}
		}
		
		[Association(Name="Scheme_EmailAddresses_MOST_POPULAR_SCHEMES_BY_EXTENSION", Storage="_Scheme", ThisKey="SchemeID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Scheme Scheme
		{
			get
			{
				return this._Scheme.Entity;
			}
			set
			{
				Scheme previousValue = this._Scheme.Entity;
				if (((previousValue != value) 
							|| (this._Scheme.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Scheme.Entity = null;
						previousValue.EmailAddresses_MOST_POPULAR_SCHEMES_BY_EXTENSION = null;
					}
					this._Scheme.Entity = value;
					if ((value != null))
					{
						value.EmailAddresses_MOST_POPULAR_SCHEMES_BY_EXTENSION = this;
						this._SchemeID = value.ID;
					}
					else
					{
						this._SchemeID = default(int);
					}
					this.SendPropertyChanged("Scheme");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="rpt.EmailAddresses_MOST_POPULAR_SCHEMES_BY_HOSTS")]
	public partial class EmailAddresses_MOST_POPULAR_SCHEMES_BY_HOST : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RowNumber;
		
		private System.Nullable<System.DateTime> _InitiallyDiscovered;
		
		private System.DateTime _LastDiscovered;
		
		private int _SchemeID;
		
		private int _Count;
		
		private System.Nullable<short> _DaysSinceInitiallyDiscovered;
		
		private short _DaysSinceLastDiscovered;
		
		private System.Nullable<double> _Strength;
		
		private int _Rank;
		
		private int _DenseRank;
		
		private short _NTile;
		
		private EntityRef<Scheme> _Scheme;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRowNumberChanging(int value);
    partial void OnRowNumberChanged();
    partial void OnInitiallyDiscoveredChanging(System.Nullable<System.DateTime> value);
    partial void OnInitiallyDiscoveredChanged();
    partial void OnLastDiscoveredChanging(System.DateTime value);
    partial void OnLastDiscoveredChanged();
    partial void OnSchemeIDChanging(int value);
    partial void OnSchemeIDChanged();
    partial void OnCountChanging(int value);
    partial void OnCountChanged();
    partial void OnDaysSinceInitiallyDiscoveredChanging(System.Nullable<short> value);
    partial void OnDaysSinceInitiallyDiscoveredChanged();
    partial void OnDaysSinceLastDiscoveredChanging(short value);
    partial void OnDaysSinceLastDiscoveredChanged();
    partial void OnStrengthChanging(System.Nullable<double> value);
    partial void OnStrengthChanged();
    partial void OnRankChanging(int value);
    partial void OnRankChanged();
    partial void OnDenseRankChanging(int value);
    partial void OnDenseRankChanged();
    partial void OnNTileChanging(short value);
    partial void OnNTileChanged();
    #endregion
		
		public EmailAddresses_MOST_POPULAR_SCHEMES_BY_HOST()
		{
			this._Scheme = default(EntityRef<Scheme>);
			OnCreated();
		}
		
		[Column(Storage="_RowNumber", DbType="Int NOT NULL")]
		public int RowNumber
		{
			get
			{
				return this._RowNumber;
			}
			set
			{
				if ((this._RowNumber != value))
				{
					this.OnRowNumberChanging(value);
					this.SendPropertyChanging();
					this._RowNumber = value;
					this.SendPropertyChanged("RowNumber");
					this.OnRowNumberChanged();
				}
			}
		}
		
		[Column(Storage="_InitiallyDiscovered", DbType="DateTime")]
		public System.Nullable<System.DateTime> InitiallyDiscovered
		{
			get
			{
				return this._InitiallyDiscovered;
			}
			set
			{
				if ((this._InitiallyDiscovered != value))
				{
					this.OnInitiallyDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._InitiallyDiscovered = value;
					this.SendPropertyChanged("InitiallyDiscovered");
					this.OnInitiallyDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_LastDiscovered", DbType="DateTime NOT NULL")]
		public System.DateTime LastDiscovered
		{
			get
			{
				return this._LastDiscovered;
			}
			set
			{
				if ((this._LastDiscovered != value))
				{
					this.OnLastDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._LastDiscovered = value;
					this.SendPropertyChanged("LastDiscovered");
					this.OnLastDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_SchemeID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int SchemeID
		{
			get
			{
				return this._SchemeID;
			}
			set
			{
				if ((this._SchemeID != value))
				{
					if (this._Scheme.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSchemeIDChanging(value);
					this.SendPropertyChanging();
					this._SchemeID = value;
					this.SendPropertyChanged("SchemeID");
					this.OnSchemeIDChanged();
				}
			}
		}
		
		[Column(Storage="_Count", DbType="Int NOT NULL")]
		public int Count
		{
			get
			{
				return this._Count;
			}
			set
			{
				if ((this._Count != value))
				{
					this.OnCountChanging(value);
					this.SendPropertyChanging();
					this._Count = value;
					this.SendPropertyChanged("Count");
					this.OnCountChanged();
				}
			}
		}
		
		[Column(Storage="_DaysSinceInitiallyDiscovered", DbType="SmallInt")]
		public System.Nullable<short> DaysSinceInitiallyDiscovered
		{
			get
			{
				return this._DaysSinceInitiallyDiscovered;
			}
			set
			{
				if ((this._DaysSinceInitiallyDiscovered != value))
				{
					this.OnDaysSinceInitiallyDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._DaysSinceInitiallyDiscovered = value;
					this.SendPropertyChanged("DaysSinceInitiallyDiscovered");
					this.OnDaysSinceInitiallyDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_DaysSinceLastDiscovered", DbType="SmallInt NOT NULL")]
		public short DaysSinceLastDiscovered
		{
			get
			{
				return this._DaysSinceLastDiscovered;
			}
			set
			{
				if ((this._DaysSinceLastDiscovered != value))
				{
					this.OnDaysSinceLastDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._DaysSinceLastDiscovered = value;
					this.SendPropertyChanged("DaysSinceLastDiscovered");
					this.OnDaysSinceLastDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_Strength", DbType="Float")]
		public System.Nullable<double> Strength
		{
			get
			{
				return this._Strength;
			}
			set
			{
				if ((this._Strength != value))
				{
					this.OnStrengthChanging(value);
					this.SendPropertyChanging();
					this._Strength = value;
					this.SendPropertyChanged("Strength");
					this.OnStrengthChanged();
				}
			}
		}
		
		[Column(Storage="_Rank", DbType="Int NOT NULL")]
		public int Rank
		{
			get
			{
				return this._Rank;
			}
			set
			{
				if ((this._Rank != value))
				{
					this.OnRankChanging(value);
					this.SendPropertyChanging();
					this._Rank = value;
					this.SendPropertyChanged("Rank");
					this.OnRankChanged();
				}
			}
		}
		
		[Column(Storage="_DenseRank", DbType="Int NOT NULL")]
		public int DenseRank
		{
			get
			{
				return this._DenseRank;
			}
			set
			{
				if ((this._DenseRank != value))
				{
					this.OnDenseRankChanging(value);
					this.SendPropertyChanging();
					this._DenseRank = value;
					this.SendPropertyChanged("DenseRank");
					this.OnDenseRankChanged();
				}
			}
		}
		
		[Column(Storage="_NTile", DbType="SmallInt NOT NULL")]
		public short NTile
		{
			get
			{
				return this._NTile;
			}
			set
			{
				if ((this._NTile != value))
				{
					this.OnNTileChanging(value);
					this.SendPropertyChanging();
					this._NTile = value;
					this.SendPropertyChanged("NTile");
					this.OnNTileChanged();
				}
			}
		}
		
		[Association(Name="Scheme_EmailAddresses_MOST_POPULAR_SCHEMES_BY_HOST", Storage="_Scheme", ThisKey="SchemeID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Scheme Scheme
		{
			get
			{
				return this._Scheme.Entity;
			}
			set
			{
				Scheme previousValue = this._Scheme.Entity;
				if (((previousValue != value) 
							|| (this._Scheme.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Scheme.Entity = null;
						previousValue.EmailAddresses_MOST_POPULAR_SCHEMES_BY_HOST = null;
					}
					this._Scheme.Entity = value;
					if ((value != null))
					{
						value.EmailAddresses_MOST_POPULAR_SCHEMES_BY_HOST = this;
						this._SchemeID = value.ID;
					}
					else
					{
						this._SchemeID = default(int);
					}
					this.SendPropertyChanged("Scheme");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="rpt.Exceptions_COUNT_BY_ABSOLUTEURI1")]
	public partial class Exceptions_COUNT_BY_ABSOLUTEURI1
	{
		
		private int _RowNumber;
		
		private System.DateTime _InitiallyCreated;
		
		private System.DateTime _LastCreated;
		
		private string _AbsoluteUri1;
		
		private int _Count;
		
		private short _DaysSinceInitiallyDiscovered;
		
		private short _DaysSinceLastDiscovered;
		
		private double _Strength;
		
		private int _Rank;
		
		private int _DenseRank;
		
		private byte _NTile;
		
		public Exceptions_COUNT_BY_ABSOLUTEURI1()
		{
		}
		
		[Column(Storage="_RowNumber", DbType="Int NOT NULL")]
		public int RowNumber
		{
			get
			{
				return this._RowNumber;
			}
			set
			{
				if ((this._RowNumber != value))
				{
					this._RowNumber = value;
				}
			}
		}
		
		[Column(Storage="_InitiallyCreated", DbType="DateTime NOT NULL")]
		public System.DateTime InitiallyCreated
		{
			get
			{
				return this._InitiallyCreated;
			}
			set
			{
				if ((this._InitiallyCreated != value))
				{
					this._InitiallyCreated = value;
				}
			}
		}
		
		[Column(Storage="_LastCreated", DbType="DateTime NOT NULL")]
		public System.DateTime LastCreated
		{
			get
			{
				return this._LastCreated;
			}
			set
			{
				if ((this._LastCreated != value))
				{
					this._LastCreated = value;
				}
			}
		}
		
		[Column(Storage="_AbsoluteUri1", DbType="VarChar(884)")]
		public string AbsoluteUri1
		{
			get
			{
				return this._AbsoluteUri1;
			}
			set
			{
				if ((this._AbsoluteUri1 != value))
				{
					this._AbsoluteUri1 = value;
				}
			}
		}
		
		[Column(Storage="_Count", DbType="Int NOT NULL")]
		public int Count
		{
			get
			{
				return this._Count;
			}
			set
			{
				if ((this._Count != value))
				{
					this._Count = value;
				}
			}
		}
		
		[Column(Storage="_DaysSinceInitiallyDiscovered", DbType="SmallInt NOT NULL")]
		public short DaysSinceInitiallyDiscovered
		{
			get
			{
				return this._DaysSinceInitiallyDiscovered;
			}
			set
			{
				if ((this._DaysSinceInitiallyDiscovered != value))
				{
					this._DaysSinceInitiallyDiscovered = value;
				}
			}
		}
		
		[Column(Storage="_DaysSinceLastDiscovered", DbType="SmallInt NOT NULL")]
		public short DaysSinceLastDiscovered
		{
			get
			{
				return this._DaysSinceLastDiscovered;
			}
			set
			{
				if ((this._DaysSinceLastDiscovered != value))
				{
					this._DaysSinceLastDiscovered = value;
				}
			}
		}
		
		[Column(Storage="_Strength", DbType="Float NOT NULL")]
		public double Strength
		{
			get
			{
				return this._Strength;
			}
			set
			{
				if ((this._Strength != value))
				{
					this._Strength = value;
				}
			}
		}
		
		[Column(Storage="_Rank", DbType="Int NOT NULL")]
		public int Rank
		{
			get
			{
				return this._Rank;
			}
			set
			{
				if ((this._Rank != value))
				{
					this._Rank = value;
				}
			}
		}
		
		[Column(Storage="_DenseRank", DbType="Int NOT NULL")]
		public int DenseRank
		{
			get
			{
				return this._DenseRank;
			}
			set
			{
				if ((this._DenseRank != value))
				{
					this._DenseRank = value;
				}
			}
		}
		
		[Column(Storage="_NTile", DbType="TinyInt NOT NULL")]
		public byte NTile
		{
			get
			{
				return this._NTile;
			}
			set
			{
				if ((this._NTile != value))
				{
					this._NTile = value;
				}
			}
		}
	}
	
	[Table(Name="rpt.Exceptions_COUNT_BY_STACKTRACE")]
	public partial class Exceptions_COUNT_BY_STACKTRACE
	{
		
		private short _RowNumber;
		
		private System.DateTime _InitiallyCreated;
		
		private System.DateTime _LastCreated;
		
		private string _StackTrace;
		
		private int _Count;
		
		private short _DaysSinceInitiallyDiscovered;
		
		private short _DaysSinceLastDiscovered;
		
		private double _Strength;
		
		private short _Rank;
		
		private short _DenseRank;
		
		private byte _NTile;
		
		public Exceptions_COUNT_BY_STACKTRACE()
		{
		}
		
		[Column(Storage="_RowNumber", DbType="SmallInt NOT NULL")]
		public short RowNumber
		{
			get
			{
				return this._RowNumber;
			}
			set
			{
				if ((this._RowNumber != value))
				{
					this._RowNumber = value;
				}
			}
		}
		
		[Column(Storage="_InitiallyCreated", DbType="DateTime NOT NULL")]
		public System.DateTime InitiallyCreated
		{
			get
			{
				return this._InitiallyCreated;
			}
			set
			{
				if ((this._InitiallyCreated != value))
				{
					this._InitiallyCreated = value;
				}
			}
		}
		
		[Column(Storage="_LastCreated", DbType="DateTime NOT NULL")]
		public System.DateTime LastCreated
		{
			get
			{
				return this._LastCreated;
			}
			set
			{
				if ((this._LastCreated != value))
				{
					this._LastCreated = value;
				}
			}
		}
		
		[Column(Storage="_StackTrace", DbType="VarChar(4000) NOT NULL", CanBeNull=false)]
		public string StackTrace
		{
			get
			{
				return this._StackTrace;
			}
			set
			{
				if ((this._StackTrace != value))
				{
					this._StackTrace = value;
				}
			}
		}
		
		[Column(Storage="_Count", DbType="Int NOT NULL")]
		public int Count
		{
			get
			{
				return this._Count;
			}
			set
			{
				if ((this._Count != value))
				{
					this._Count = value;
				}
			}
		}
		
		[Column(Storage="_DaysSinceInitiallyDiscovered", DbType="SmallInt NOT NULL")]
		public short DaysSinceInitiallyDiscovered
		{
			get
			{
				return this._DaysSinceInitiallyDiscovered;
			}
			set
			{
				if ((this._DaysSinceInitiallyDiscovered != value))
				{
					this._DaysSinceInitiallyDiscovered = value;
				}
			}
		}
		
		[Column(Storage="_DaysSinceLastDiscovered", DbType="SmallInt NOT NULL")]
		public short DaysSinceLastDiscovered
		{
			get
			{
				return this._DaysSinceLastDiscovered;
			}
			set
			{
				if ((this._DaysSinceLastDiscovered != value))
				{
					this._DaysSinceLastDiscovered = value;
				}
			}
		}
		
		[Column(Storage="_Strength", DbType="Float NOT NULL")]
		public double Strength
		{
			get
			{
				return this._Strength;
			}
			set
			{
				if ((this._Strength != value))
				{
					this._Strength = value;
				}
			}
		}
		
		[Column(Storage="_Rank", DbType="SmallInt NOT NULL")]
		public short Rank
		{
			get
			{
				return this._Rank;
			}
			set
			{
				if ((this._Rank != value))
				{
					this._Rank = value;
				}
			}
		}
		
		[Column(Storage="_DenseRank", DbType="SmallInt NOT NULL")]
		public short DenseRank
		{
			get
			{
				return this._DenseRank;
			}
			set
			{
				if ((this._DenseRank != value))
				{
					this._DenseRank = value;
				}
			}
		}
		
		[Column(Storage="_NTile", DbType="TinyInt NOT NULL")]
		public byte NTile
		{
			get
			{
				return this._NTile;
			}
			set
			{
				if ((this._NTile != value))
				{
					this._NTile = value;
				}
			}
		}
	}
	
	[Table(Name="rpt.Exceptions_COUNT_BY_ABSOLUTEURI2")]
	public partial class Exceptions_COUNT_BY_ABSOLUTEURI2
	{
		
		private int _RowNumber;
		
		private System.DateTime _InitiallyCreated;
		
		private System.DateTime _LastCreated;
		
		private string _AbsoluteUri2;
		
		private int _Count;
		
		private short _DaysSinceInitiallyDiscovered;
		
		private short _DaysSinceLastDiscovered;
		
		private double _Strength;
		
		private int _Rank;
		
		private int _DenseRank;
		
		private byte _NTile;
		
		public Exceptions_COUNT_BY_ABSOLUTEURI2()
		{
		}
		
		[Column(Storage="_RowNumber", DbType="Int NOT NULL")]
		public int RowNumber
		{
			get
			{
				return this._RowNumber;
			}
			set
			{
				if ((this._RowNumber != value))
				{
					this._RowNumber = value;
				}
			}
		}
		
		[Column(Storage="_InitiallyCreated", DbType="DateTime NOT NULL")]
		public System.DateTime InitiallyCreated
		{
			get
			{
				return this._InitiallyCreated;
			}
			set
			{
				if ((this._InitiallyCreated != value))
				{
					this._InitiallyCreated = value;
				}
			}
		}
		
		[Column(Storage="_LastCreated", DbType="DateTime NOT NULL")]
		public System.DateTime LastCreated
		{
			get
			{
				return this._LastCreated;
			}
			set
			{
				if ((this._LastCreated != value))
				{
					this._LastCreated = value;
				}
			}
		}
		
		[Column(Storage="_AbsoluteUri2", DbType="VarChar(884)")]
		public string AbsoluteUri2
		{
			get
			{
				return this._AbsoluteUri2;
			}
			set
			{
				if ((this._AbsoluteUri2 != value))
				{
					this._AbsoluteUri2 = value;
				}
			}
		}
		
		[Column(Storage="_Count", DbType="Int NOT NULL")]
		public int Count
		{
			get
			{
				return this._Count;
			}
			set
			{
				if ((this._Count != value))
				{
					this._Count = value;
				}
			}
		}
		
		[Column(Storage="_DaysSinceInitiallyDiscovered", DbType="SmallInt NOT NULL")]
		public short DaysSinceInitiallyDiscovered
		{
			get
			{
				return this._DaysSinceInitiallyDiscovered;
			}
			set
			{
				if ((this._DaysSinceInitiallyDiscovered != value))
				{
					this._DaysSinceInitiallyDiscovered = value;
				}
			}
		}
		
		[Column(Storage="_DaysSinceLastDiscovered", DbType="SmallInt NOT NULL")]
		public short DaysSinceLastDiscovered
		{
			get
			{
				return this._DaysSinceLastDiscovered;
			}
			set
			{
				if ((this._DaysSinceLastDiscovered != value))
				{
					this._DaysSinceLastDiscovered = value;
				}
			}
		}
		
		[Column(Storage="_Strength", DbType="Float NOT NULL")]
		public double Strength
		{
			get
			{
				return this._Strength;
			}
			set
			{
				if ((this._Strength != value))
				{
					this._Strength = value;
				}
			}
		}
		
		[Column(Storage="_Rank", DbType="Int NOT NULL")]
		public int Rank
		{
			get
			{
				return this._Rank;
			}
			set
			{
				if ((this._Rank != value))
				{
					this._Rank = value;
				}
			}
		}
		
		[Column(Storage="_DenseRank", DbType="Int NOT NULL")]
		public int DenseRank
		{
			get
			{
				return this._DenseRank;
			}
			set
			{
				if ((this._DenseRank != value))
				{
					this._DenseRank = value;
				}
			}
		}
		
		[Column(Storage="_NTile", DbType="TinyInt NOT NULL")]
		public byte NTile
		{
			get
			{
				return this._NTile;
			}
			set
			{
				if ((this._NTile != value))
				{
					this._NTile = value;
				}
			}
		}
	}
	
	[Table(Name="rpt.Exceptions_COUNT_BY_ABSOLUTEURIS")]
	public partial class Exceptions_COUNT_BY_ABSOLUTEURI
	{
		
		private int _RowNumber;
		
		private System.DateTime _InitiallyCreated;
		
		private System.DateTime _LastCreated;
		
		private string _AbsoluteUri1;
		
		private string _AbsoluteUri2;
		
		private int _Count;
		
		private short _DaysSinceInitiallyDiscovered;
		
		private short _DaysSinceLastDiscovered;
		
		private double _Strength;
		
		private int _Rank;
		
		private int _DenseRank;
		
		private byte _NTile;
		
		public Exceptions_COUNT_BY_ABSOLUTEURI()
		{
		}
		
		[Column(Storage="_RowNumber", DbType="Int NOT NULL")]
		public int RowNumber
		{
			get
			{
				return this._RowNumber;
			}
			set
			{
				if ((this._RowNumber != value))
				{
					this._RowNumber = value;
				}
			}
		}
		
		[Column(Storage="_InitiallyCreated", DbType="DateTime NOT NULL")]
		public System.DateTime InitiallyCreated
		{
			get
			{
				return this._InitiallyCreated;
			}
			set
			{
				if ((this._InitiallyCreated != value))
				{
					this._InitiallyCreated = value;
				}
			}
		}
		
		[Column(Storage="_LastCreated", DbType="DateTime NOT NULL")]
		public System.DateTime LastCreated
		{
			get
			{
				return this._LastCreated;
			}
			set
			{
				if ((this._LastCreated != value))
				{
					this._LastCreated = value;
				}
			}
		}
		
		[Column(Storage="_AbsoluteUri1", DbType="VarChar(884)")]
		public string AbsoluteUri1
		{
			get
			{
				return this._AbsoluteUri1;
			}
			set
			{
				if ((this._AbsoluteUri1 != value))
				{
					this._AbsoluteUri1 = value;
				}
			}
		}
		
		[Column(Storage="_AbsoluteUri2", DbType="VarChar(884)")]
		public string AbsoluteUri2
		{
			get
			{
				return this._AbsoluteUri2;
			}
			set
			{
				if ((this._AbsoluteUri2 != value))
				{
					this._AbsoluteUri2 = value;
				}
			}
		}
		
		[Column(Storage="_Count", DbType="Int NOT NULL")]
		public int Count
		{
			get
			{
				return this._Count;
			}
			set
			{
				if ((this._Count != value))
				{
					this._Count = value;
				}
			}
		}
		
		[Column(Storage="_DaysSinceInitiallyDiscovered", DbType="SmallInt NOT NULL")]
		public short DaysSinceInitiallyDiscovered
		{
			get
			{
				return this._DaysSinceInitiallyDiscovered;
			}
			set
			{
				if ((this._DaysSinceInitiallyDiscovered != value))
				{
					this._DaysSinceInitiallyDiscovered = value;
				}
			}
		}
		
		[Column(Storage="_DaysSinceLastDiscovered", DbType="SmallInt NOT NULL")]
		public short DaysSinceLastDiscovered
		{
			get
			{
				return this._DaysSinceLastDiscovered;
			}
			set
			{
				if ((this._DaysSinceLastDiscovered != value))
				{
					this._DaysSinceLastDiscovered = value;
				}
			}
		}
		
		[Column(Storage="_Strength", DbType="Float NOT NULL")]
		public double Strength
		{
			get
			{
				return this._Strength;
			}
			set
			{
				if ((this._Strength != value))
				{
					this._Strength = value;
				}
			}
		}
		
		[Column(Storage="_Rank", DbType="Int NOT NULL")]
		public int Rank
		{
			get
			{
				return this._Rank;
			}
			set
			{
				if ((this._Rank != value))
				{
					this._Rank = value;
				}
			}
		}
		
		[Column(Storage="_DenseRank", DbType="Int NOT NULL")]
		public int DenseRank
		{
			get
			{
				return this._DenseRank;
			}
			set
			{
				if ((this._DenseRank != value))
				{
					this._DenseRank = value;
				}
			}
		}
		
		[Column(Storage="_NTile", DbType="TinyInt NOT NULL")]
		public byte NTile
		{
			get
			{
				return this._NTile;
			}
			set
			{
				if ((this._NTile != value))
				{
					this._NTile = value;
				}
			}
		}
	}
	
	[Table(Name="rpt.Exceptions_COUNT_BY_DOMAIN1")]
	public partial class Exceptions_COUNT_BY_DOMAIN1 : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private short _RowNumber;
		
		private System.DateTime _InitiallyCreated;
		
		private System.DateTime _LastCreated;
		
		private string _Domain1;
		
		private int _Count;
		
		private short _DaysSinceInitiallyDiscovered;
		
		private short _DaysSinceLastDiscovered;
		
		private double _Strength;
		
		private short _Rank;
		
		private short _DenseRank;
		
		private byte _NTile;
		
		private EntityRef<Domain> _Domain;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRowNumberChanging(short value);
    partial void OnRowNumberChanged();
    partial void OnInitiallyCreatedChanging(System.DateTime value);
    partial void OnInitiallyCreatedChanged();
    partial void OnLastCreatedChanging(System.DateTime value);
    partial void OnLastCreatedChanged();
    partial void OnDomain1Changing(string value);
    partial void OnDomain1Changed();
    partial void OnCountChanging(int value);
    partial void OnCountChanged();
    partial void OnDaysSinceInitiallyDiscoveredChanging(short value);
    partial void OnDaysSinceInitiallyDiscoveredChanged();
    partial void OnDaysSinceLastDiscoveredChanging(short value);
    partial void OnDaysSinceLastDiscoveredChanged();
    partial void OnStrengthChanging(double value);
    partial void OnStrengthChanged();
    partial void OnRankChanging(short value);
    partial void OnRankChanged();
    partial void OnDenseRankChanging(short value);
    partial void OnDenseRankChanged();
    partial void OnNTileChanging(byte value);
    partial void OnNTileChanged();
    #endregion
		
		public Exceptions_COUNT_BY_DOMAIN1()
		{
			this._Domain = default(EntityRef<Domain>);
			OnCreated();
		}
		
		[Column(Storage="_RowNumber", DbType="SmallInt NOT NULL")]
		public short RowNumber
		{
			get
			{
				return this._RowNumber;
			}
			set
			{
				if ((this._RowNumber != value))
				{
					this.OnRowNumberChanging(value);
					this.SendPropertyChanging();
					this._RowNumber = value;
					this.SendPropertyChanged("RowNumber");
					this.OnRowNumberChanged();
				}
			}
		}
		
		[Column(Storage="_InitiallyCreated", DbType="DateTime NOT NULL")]
		public System.DateTime InitiallyCreated
		{
			get
			{
				return this._InitiallyCreated;
			}
			set
			{
				if ((this._InitiallyCreated != value))
				{
					this.OnInitiallyCreatedChanging(value);
					this.SendPropertyChanging();
					this._InitiallyCreated = value;
					this.SendPropertyChanged("InitiallyCreated");
					this.OnInitiallyCreatedChanged();
				}
			}
		}
		
		[Column(Storage="_LastCreated", DbType="DateTime NOT NULL")]
		public System.DateTime LastCreated
		{
			get
			{
				return this._LastCreated;
			}
			set
			{
				if ((this._LastCreated != value))
				{
					this.OnLastCreatedChanging(value);
					this.SendPropertyChanging();
					this._LastCreated = value;
					this.SendPropertyChanged("LastCreated");
					this.OnLastCreatedChanged();
				}
			}
		}
		
		[Column(Storage="_Domain1", DbType="VarChar(884) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Domain1
		{
			get
			{
				return this._Domain1;
			}
			set
			{
				if ((this._Domain1 != value))
				{
					if (this._Domain.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDomain1Changing(value);
					this.SendPropertyChanging();
					this._Domain1 = value;
					this.SendPropertyChanged("Domain1");
					this.OnDomain1Changed();
				}
			}
		}
		
		[Column(Storage="_Count", DbType="Int NOT NULL")]
		public int Count
		{
			get
			{
				return this._Count;
			}
			set
			{
				if ((this._Count != value))
				{
					this.OnCountChanging(value);
					this.SendPropertyChanging();
					this._Count = value;
					this.SendPropertyChanged("Count");
					this.OnCountChanged();
				}
			}
		}
		
		[Column(Storage="_DaysSinceInitiallyDiscovered", DbType="SmallInt NOT NULL")]
		public short DaysSinceInitiallyDiscovered
		{
			get
			{
				return this._DaysSinceInitiallyDiscovered;
			}
			set
			{
				if ((this._DaysSinceInitiallyDiscovered != value))
				{
					this.OnDaysSinceInitiallyDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._DaysSinceInitiallyDiscovered = value;
					this.SendPropertyChanged("DaysSinceInitiallyDiscovered");
					this.OnDaysSinceInitiallyDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_DaysSinceLastDiscovered", DbType="SmallInt NOT NULL")]
		public short DaysSinceLastDiscovered
		{
			get
			{
				return this._DaysSinceLastDiscovered;
			}
			set
			{
				if ((this._DaysSinceLastDiscovered != value))
				{
					this.OnDaysSinceLastDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._DaysSinceLastDiscovered = value;
					this.SendPropertyChanged("DaysSinceLastDiscovered");
					this.OnDaysSinceLastDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_Strength", DbType="Float NOT NULL")]
		public double Strength
		{
			get
			{
				return this._Strength;
			}
			set
			{
				if ((this._Strength != value))
				{
					this.OnStrengthChanging(value);
					this.SendPropertyChanging();
					this._Strength = value;
					this.SendPropertyChanged("Strength");
					this.OnStrengthChanged();
				}
			}
		}
		
		[Column(Storage="_Rank", DbType="SmallInt NOT NULL")]
		public short Rank
		{
			get
			{
				return this._Rank;
			}
			set
			{
				if ((this._Rank != value))
				{
					this.OnRankChanging(value);
					this.SendPropertyChanging();
					this._Rank = value;
					this.SendPropertyChanged("Rank");
					this.OnRankChanged();
				}
			}
		}
		
		[Column(Storage="_DenseRank", DbType="SmallInt NOT NULL")]
		public short DenseRank
		{
			get
			{
				return this._DenseRank;
			}
			set
			{
				if ((this._DenseRank != value))
				{
					this.OnDenseRankChanging(value);
					this.SendPropertyChanging();
					this._DenseRank = value;
					this.SendPropertyChanged("DenseRank");
					this.OnDenseRankChanged();
				}
			}
		}
		
		[Column(Storage="_NTile", DbType="TinyInt NOT NULL")]
		public byte NTile
		{
			get
			{
				return this._NTile;
			}
			set
			{
				if ((this._NTile != value))
				{
					this.OnNTileChanging(value);
					this.SendPropertyChanging();
					this._NTile = value;
					this.SendPropertyChanged("NTile");
					this.OnNTileChanged();
				}
			}
		}
		
		[Association(Name="Domain_Exceptions_COUNT_BY_DOMAIN1", Storage="_Domain", ThisKey="Domain1", OtherKey="Domain1", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Domain Domain
		{
			get
			{
				return this._Domain.Entity;
			}
			set
			{
				Domain previousValue = this._Domain.Entity;
				if (((previousValue != value) 
							|| (this._Domain.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Domain.Entity = null;
						previousValue.Exceptions_COUNT_BY_DOMAIN1 = null;
					}
					this._Domain.Entity = value;
					if ((value != null))
					{
						value.Exceptions_COUNT_BY_DOMAIN1 = this;
						this._Domain1 = value.Domain1;
					}
					else
					{
						this._Domain1 = default(string);
					}
					this.SendPropertyChanged("Domain");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="rpt.Exceptions_COUNT_BY_DOMAIN2")]
	public partial class Exceptions_COUNT_BY_DOMAIN2 : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private short _RowNumber;
		
		private System.DateTime _InitiallyCreated;
		
		private System.DateTime _LastCreated;
		
		private string _Domain2;
		
		private int _Count;
		
		private short _DaysSinceInitiallyDiscovered;
		
		private short _DaysSinceLastDiscovered;
		
		private double _Strength;
		
		private short _Rank;
		
		private short _DenseRank;
		
		private byte _NTile;
		
		private EntityRef<Domain> _Domain;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRowNumberChanging(short value);
    partial void OnRowNumberChanged();
    partial void OnInitiallyCreatedChanging(System.DateTime value);
    partial void OnInitiallyCreatedChanged();
    partial void OnLastCreatedChanging(System.DateTime value);
    partial void OnLastCreatedChanged();
    partial void OnDomain2Changing(string value);
    partial void OnDomain2Changed();
    partial void OnCountChanging(int value);
    partial void OnCountChanged();
    partial void OnDaysSinceInitiallyDiscoveredChanging(short value);
    partial void OnDaysSinceInitiallyDiscoveredChanged();
    partial void OnDaysSinceLastDiscoveredChanging(short value);
    partial void OnDaysSinceLastDiscoveredChanged();
    partial void OnStrengthChanging(double value);
    partial void OnStrengthChanged();
    partial void OnRankChanging(short value);
    partial void OnRankChanged();
    partial void OnDenseRankChanging(short value);
    partial void OnDenseRankChanged();
    partial void OnNTileChanging(byte value);
    partial void OnNTileChanged();
    #endregion
		
		public Exceptions_COUNT_BY_DOMAIN2()
		{
			this._Domain = default(EntityRef<Domain>);
			OnCreated();
		}
		
		[Column(Storage="_RowNumber", DbType="SmallInt NOT NULL")]
		public short RowNumber
		{
			get
			{
				return this._RowNumber;
			}
			set
			{
				if ((this._RowNumber != value))
				{
					this.OnRowNumberChanging(value);
					this.SendPropertyChanging();
					this._RowNumber = value;
					this.SendPropertyChanged("RowNumber");
					this.OnRowNumberChanged();
				}
			}
		}
		
		[Column(Storage="_InitiallyCreated", DbType="DateTime NOT NULL")]
		public System.DateTime InitiallyCreated
		{
			get
			{
				return this._InitiallyCreated;
			}
			set
			{
				if ((this._InitiallyCreated != value))
				{
					this.OnInitiallyCreatedChanging(value);
					this.SendPropertyChanging();
					this._InitiallyCreated = value;
					this.SendPropertyChanged("InitiallyCreated");
					this.OnInitiallyCreatedChanged();
				}
			}
		}
		
		[Column(Storage="_LastCreated", DbType="DateTime NOT NULL")]
		public System.DateTime LastCreated
		{
			get
			{
				return this._LastCreated;
			}
			set
			{
				if ((this._LastCreated != value))
				{
					this.OnLastCreatedChanging(value);
					this.SendPropertyChanging();
					this._LastCreated = value;
					this.SendPropertyChanged("LastCreated");
					this.OnLastCreatedChanged();
				}
			}
		}
		
		[Column(Storage="_Domain2", DbType="VarChar(884) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Domain2
		{
			get
			{
				return this._Domain2;
			}
			set
			{
				if ((this._Domain2 != value))
				{
					if (this._Domain.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDomain2Changing(value);
					this.SendPropertyChanging();
					this._Domain2 = value;
					this.SendPropertyChanged("Domain2");
					this.OnDomain2Changed();
				}
			}
		}
		
		[Column(Storage="_Count", DbType="Int NOT NULL")]
		public int Count
		{
			get
			{
				return this._Count;
			}
			set
			{
				if ((this._Count != value))
				{
					this.OnCountChanging(value);
					this.SendPropertyChanging();
					this._Count = value;
					this.SendPropertyChanged("Count");
					this.OnCountChanged();
				}
			}
		}
		
		[Column(Storage="_DaysSinceInitiallyDiscovered", DbType="SmallInt NOT NULL")]
		public short DaysSinceInitiallyDiscovered
		{
			get
			{
				return this._DaysSinceInitiallyDiscovered;
			}
			set
			{
				if ((this._DaysSinceInitiallyDiscovered != value))
				{
					this.OnDaysSinceInitiallyDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._DaysSinceInitiallyDiscovered = value;
					this.SendPropertyChanged("DaysSinceInitiallyDiscovered");
					this.OnDaysSinceInitiallyDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_DaysSinceLastDiscovered", DbType="SmallInt NOT NULL")]
		public short DaysSinceLastDiscovered
		{
			get
			{
				return this._DaysSinceLastDiscovered;
			}
			set
			{
				if ((this._DaysSinceLastDiscovered != value))
				{
					this.OnDaysSinceLastDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._DaysSinceLastDiscovered = value;
					this.SendPropertyChanged("DaysSinceLastDiscovered");
					this.OnDaysSinceLastDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_Strength", DbType="Float NOT NULL")]
		public double Strength
		{
			get
			{
				return this._Strength;
			}
			set
			{
				if ((this._Strength != value))
				{
					this.OnStrengthChanging(value);
					this.SendPropertyChanging();
					this._Strength = value;
					this.SendPropertyChanged("Strength");
					this.OnStrengthChanged();
				}
			}
		}
		
		[Column(Storage="_Rank", DbType="SmallInt NOT NULL")]
		public short Rank
		{
			get
			{
				return this._Rank;
			}
			set
			{
				if ((this._Rank != value))
				{
					this.OnRankChanging(value);
					this.SendPropertyChanging();
					this._Rank = value;
					this.SendPropertyChanged("Rank");
					this.OnRankChanged();
				}
			}
		}
		
		[Column(Storage="_DenseRank", DbType="SmallInt NOT NULL")]
		public short DenseRank
		{
			get
			{
				return this._DenseRank;
			}
			set
			{
				if ((this._DenseRank != value))
				{
					this.OnDenseRankChanging(value);
					this.SendPropertyChanging();
					this._DenseRank = value;
					this.SendPropertyChanged("DenseRank");
					this.OnDenseRankChanged();
				}
			}
		}
		
		[Column(Storage="_NTile", DbType="TinyInt NOT NULL")]
		public byte NTile
		{
			get
			{
				return this._NTile;
			}
			set
			{
				if ((this._NTile != value))
				{
					this.OnNTileChanging(value);
					this.SendPropertyChanging();
					this._NTile = value;
					this.SendPropertyChanged("NTile");
					this.OnNTileChanged();
				}
			}
		}
		
		[Association(Name="Domain_Exceptions_COUNT_BY_DOMAIN2", Storage="_Domain", ThisKey="Domain2", OtherKey="Domain1", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Domain Domain
		{
			get
			{
				return this._Domain.Entity;
			}
			set
			{
				Domain previousValue = this._Domain.Entity;
				if (((previousValue != value) 
							|| (this._Domain.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Domain.Entity = null;
						previousValue.Exceptions_COUNT_BY_DOMAIN2 = null;
					}
					this._Domain.Entity = value;
					if ((value != null))
					{
						value.Exceptions_COUNT_BY_DOMAIN2 = this;
						this._Domain2 = value.Domain1;
					}
					else
					{
						this._Domain2 = default(string);
					}
					this.SendPropertyChanged("Domain");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="rpt.Exceptions_COUNT_BY_DOMAINS")]
	public partial class Exceptions_COUNT_BY_DOMAIN
	{
		
		private short _RowNumber;
		
		private System.DateTime _InitiallyCreated;
		
		private System.DateTime _LastCreated;
		
		private string _Domain1;
		
		private string _Domain2;
		
		private int _Count;
		
		private short _DaysSinceInitiallyDiscovered;
		
		private short _DaysSinceLastDiscovered;
		
		private double _Strength;
		
		private short _Rank;
		
		private short _DenseRank;
		
		private byte _NTile;
		
		public Exceptions_COUNT_BY_DOMAIN()
		{
		}
		
		[Column(Storage="_RowNumber", DbType="SmallInt NOT NULL")]
		public short RowNumber
		{
			get
			{
				return this._RowNumber;
			}
			set
			{
				if ((this._RowNumber != value))
				{
					this._RowNumber = value;
				}
			}
		}
		
		[Column(Storage="_InitiallyCreated", DbType="DateTime NOT NULL")]
		public System.DateTime InitiallyCreated
		{
			get
			{
				return this._InitiallyCreated;
			}
			set
			{
				if ((this._InitiallyCreated != value))
				{
					this._InitiallyCreated = value;
				}
			}
		}
		
		[Column(Storage="_LastCreated", DbType="DateTime NOT NULL")]
		public System.DateTime LastCreated
		{
			get
			{
				return this._LastCreated;
			}
			set
			{
				if ((this._LastCreated != value))
				{
					this._LastCreated = value;
				}
			}
		}
		
		[Column(Storage="_Domain1", DbType="VarChar(884) NOT NULL", CanBeNull=false)]
		public string Domain1
		{
			get
			{
				return this._Domain1;
			}
			set
			{
				if ((this._Domain1 != value))
				{
					this._Domain1 = value;
				}
			}
		}
		
		[Column(Storage="_Domain2", DbType="VarChar(884) NOT NULL", CanBeNull=false)]
		public string Domain2
		{
			get
			{
				return this._Domain2;
			}
			set
			{
				if ((this._Domain2 != value))
				{
					this._Domain2 = value;
				}
			}
		}
		
		[Column(Storage="_Count", DbType="Int NOT NULL")]
		public int Count
		{
			get
			{
				return this._Count;
			}
			set
			{
				if ((this._Count != value))
				{
					this._Count = value;
				}
			}
		}
		
		[Column(Storage="_DaysSinceInitiallyDiscovered", DbType="SmallInt NOT NULL")]
		public short DaysSinceInitiallyDiscovered
		{
			get
			{
				return this._DaysSinceInitiallyDiscovered;
			}
			set
			{
				if ((this._DaysSinceInitiallyDiscovered != value))
				{
					this._DaysSinceInitiallyDiscovered = value;
				}
			}
		}
		
		[Column(Storage="_DaysSinceLastDiscovered", DbType="SmallInt NOT NULL")]
		public short DaysSinceLastDiscovered
		{
			get
			{
				return this._DaysSinceLastDiscovered;
			}
			set
			{
				if ((this._DaysSinceLastDiscovered != value))
				{
					this._DaysSinceLastDiscovered = value;
				}
			}
		}
		
		[Column(Storage="_Strength", DbType="Float NOT NULL")]
		public double Strength
		{
			get
			{
				return this._Strength;
			}
			set
			{
				if ((this._Strength != value))
				{
					this._Strength = value;
				}
			}
		}
		
		[Column(Storage="_Rank", DbType="SmallInt NOT NULL")]
		public short Rank
		{
			get
			{
				return this._Rank;
			}
			set
			{
				if ((this._Rank != value))
				{
					this._Rank = value;
				}
			}
		}
		
		[Column(Storage="_DenseRank", DbType="SmallInt NOT NULL")]
		public short DenseRank
		{
			get
			{
				return this._DenseRank;
			}
			set
			{
				if ((this._DenseRank != value))
				{
					this._DenseRank = value;
				}
			}
		}
		
		[Column(Storage="_NTile", DbType="TinyInt NOT NULL")]
		public byte NTile
		{
			get
			{
				return this._NTile;
			}
			set
			{
				if ((this._NTile != value))
				{
					this._NTile = value;
				}
			}
		}
	}
	
	[Table(Name="rpt.Exceptions_COUNT_BY_EXTENSION1")]
	public partial class Exceptions_COUNT_BY_EXTENSION1 : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private short _RowNumber;
		
		private System.DateTime _InitiallyCreated;
		
		private System.DateTime _LastCreated;
		
		private string _Extension1;
		
		private int _Count;
		
		private short _DaysSinceInitiallyDiscovered;
		
		private short _DaysSinceLastDiscovered;
		
		private double _Strength;
		
		private short _Rank;
		
		private short _DenseRank;
		
		private byte _NTile;
		
		private EntityRef<Extension> _Extension;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRowNumberChanging(short value);
    partial void OnRowNumberChanged();
    partial void OnInitiallyCreatedChanging(System.DateTime value);
    partial void OnInitiallyCreatedChanged();
    partial void OnLastCreatedChanging(System.DateTime value);
    partial void OnLastCreatedChanged();
    partial void OnExtension1Changing(string value);
    partial void OnExtension1Changed();
    partial void OnCountChanging(int value);
    partial void OnCountChanged();
    partial void OnDaysSinceInitiallyDiscoveredChanging(short value);
    partial void OnDaysSinceInitiallyDiscoveredChanged();
    partial void OnDaysSinceLastDiscoveredChanging(short value);
    partial void OnDaysSinceLastDiscoveredChanged();
    partial void OnStrengthChanging(double value);
    partial void OnStrengthChanged();
    partial void OnRankChanging(short value);
    partial void OnRankChanged();
    partial void OnDenseRankChanging(short value);
    partial void OnDenseRankChanged();
    partial void OnNTileChanging(byte value);
    partial void OnNTileChanged();
    #endregion
		
		public Exceptions_COUNT_BY_EXTENSION1()
		{
			this._Extension = default(EntityRef<Extension>);
			OnCreated();
		}
		
		[Column(Storage="_RowNumber", DbType="SmallInt NOT NULL")]
		public short RowNumber
		{
			get
			{
				return this._RowNumber;
			}
			set
			{
				if ((this._RowNumber != value))
				{
					this.OnRowNumberChanging(value);
					this.SendPropertyChanging();
					this._RowNumber = value;
					this.SendPropertyChanged("RowNumber");
					this.OnRowNumberChanged();
				}
			}
		}
		
		[Column(Storage="_InitiallyCreated", DbType="DateTime NOT NULL")]
		public System.DateTime InitiallyCreated
		{
			get
			{
				return this._InitiallyCreated;
			}
			set
			{
				if ((this._InitiallyCreated != value))
				{
					this.OnInitiallyCreatedChanging(value);
					this.SendPropertyChanging();
					this._InitiallyCreated = value;
					this.SendPropertyChanged("InitiallyCreated");
					this.OnInitiallyCreatedChanged();
				}
			}
		}
		
		[Column(Storage="_LastCreated", DbType="DateTime NOT NULL")]
		public System.DateTime LastCreated
		{
			get
			{
				return this._LastCreated;
			}
			set
			{
				if ((this._LastCreated != value))
				{
					this.OnLastCreatedChanging(value);
					this.SendPropertyChanging();
					this._LastCreated = value;
					this.SendPropertyChanged("LastCreated");
					this.OnLastCreatedChanged();
				}
			}
		}
		
		[Column(Storage="_Extension1", DbType="VarChar(884) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Extension1
		{
			get
			{
				return this._Extension1;
			}
			set
			{
				if ((this._Extension1 != value))
				{
					if (this._Extension.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnExtension1Changing(value);
					this.SendPropertyChanging();
					this._Extension1 = value;
					this.SendPropertyChanged("Extension1");
					this.OnExtension1Changed();
				}
			}
		}
		
		[Column(Storage="_Count", DbType="Int NOT NULL")]
		public int Count
		{
			get
			{
				return this._Count;
			}
			set
			{
				if ((this._Count != value))
				{
					this.OnCountChanging(value);
					this.SendPropertyChanging();
					this._Count = value;
					this.SendPropertyChanged("Count");
					this.OnCountChanged();
				}
			}
		}
		
		[Column(Storage="_DaysSinceInitiallyDiscovered", DbType="SmallInt NOT NULL")]
		public short DaysSinceInitiallyDiscovered
		{
			get
			{
				return this._DaysSinceInitiallyDiscovered;
			}
			set
			{
				if ((this._DaysSinceInitiallyDiscovered != value))
				{
					this.OnDaysSinceInitiallyDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._DaysSinceInitiallyDiscovered = value;
					this.SendPropertyChanged("DaysSinceInitiallyDiscovered");
					this.OnDaysSinceInitiallyDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_DaysSinceLastDiscovered", DbType="SmallInt NOT NULL")]
		public short DaysSinceLastDiscovered
		{
			get
			{
				return this._DaysSinceLastDiscovered;
			}
			set
			{
				if ((this._DaysSinceLastDiscovered != value))
				{
					this.OnDaysSinceLastDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._DaysSinceLastDiscovered = value;
					this.SendPropertyChanged("DaysSinceLastDiscovered");
					this.OnDaysSinceLastDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_Strength", DbType="Float NOT NULL")]
		public double Strength
		{
			get
			{
				return this._Strength;
			}
			set
			{
				if ((this._Strength != value))
				{
					this.OnStrengthChanging(value);
					this.SendPropertyChanging();
					this._Strength = value;
					this.SendPropertyChanged("Strength");
					this.OnStrengthChanged();
				}
			}
		}
		
		[Column(Storage="_Rank", DbType="SmallInt NOT NULL")]
		public short Rank
		{
			get
			{
				return this._Rank;
			}
			set
			{
				if ((this._Rank != value))
				{
					this.OnRankChanging(value);
					this.SendPropertyChanging();
					this._Rank = value;
					this.SendPropertyChanged("Rank");
					this.OnRankChanged();
				}
			}
		}
		
		[Column(Storage="_DenseRank", DbType="SmallInt NOT NULL")]
		public short DenseRank
		{
			get
			{
				return this._DenseRank;
			}
			set
			{
				if ((this._DenseRank != value))
				{
					this.OnDenseRankChanging(value);
					this.SendPropertyChanging();
					this._DenseRank = value;
					this.SendPropertyChanged("DenseRank");
					this.OnDenseRankChanged();
				}
			}
		}
		
		[Column(Storage="_NTile", DbType="TinyInt NOT NULL")]
		public byte NTile
		{
			get
			{
				return this._NTile;
			}
			set
			{
				if ((this._NTile != value))
				{
					this.OnNTileChanging(value);
					this.SendPropertyChanging();
					this._NTile = value;
					this.SendPropertyChanged("NTile");
					this.OnNTileChanged();
				}
			}
		}
		
		[Association(Name="Extension_Exceptions_COUNT_BY_EXTENSION1", Storage="_Extension", ThisKey="Extension1", OtherKey="Extension1", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Extension Extension
		{
			get
			{
				return this._Extension.Entity;
			}
			set
			{
				Extension previousValue = this._Extension.Entity;
				if (((previousValue != value) 
							|| (this._Extension.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Extension.Entity = null;
						previousValue.Exceptions_COUNT_BY_EXTENSION1 = null;
					}
					this._Extension.Entity = value;
					if ((value != null))
					{
						value.Exceptions_COUNT_BY_EXTENSION1 = this;
						this._Extension1 = value.Extension1;
					}
					else
					{
						this._Extension1 = default(string);
					}
					this.SendPropertyChanged("Extension");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="rpt.Exceptions_COUNT_BY_EXTENSION2")]
	public partial class Exceptions_COUNT_BY_EXTENSION2 : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private short _RowNumber;
		
		private System.DateTime _InitiallyCreated;
		
		private System.DateTime _LastCreated;
		
		private string _Extension2;
		
		private int _Count;
		
		private short _DaysSinceInitiallyDiscovered;
		
		private short _DaysSinceLastDiscovered;
		
		private double _Strength;
		
		private short _Rank;
		
		private short _DenseRank;
		
		private byte _NTile;
		
		private EntityRef<Extension> _Extension;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRowNumberChanging(short value);
    partial void OnRowNumberChanged();
    partial void OnInitiallyCreatedChanging(System.DateTime value);
    partial void OnInitiallyCreatedChanged();
    partial void OnLastCreatedChanging(System.DateTime value);
    partial void OnLastCreatedChanged();
    partial void OnExtension2Changing(string value);
    partial void OnExtension2Changed();
    partial void OnCountChanging(int value);
    partial void OnCountChanged();
    partial void OnDaysSinceInitiallyDiscoveredChanging(short value);
    partial void OnDaysSinceInitiallyDiscoveredChanged();
    partial void OnDaysSinceLastDiscoveredChanging(short value);
    partial void OnDaysSinceLastDiscoveredChanged();
    partial void OnStrengthChanging(double value);
    partial void OnStrengthChanged();
    partial void OnRankChanging(short value);
    partial void OnRankChanged();
    partial void OnDenseRankChanging(short value);
    partial void OnDenseRankChanged();
    partial void OnNTileChanging(byte value);
    partial void OnNTileChanged();
    #endregion
		
		public Exceptions_COUNT_BY_EXTENSION2()
		{
			this._Extension = default(EntityRef<Extension>);
			OnCreated();
		}
		
		[Column(Storage="_RowNumber", DbType="SmallInt NOT NULL")]
		public short RowNumber
		{
			get
			{
				return this._RowNumber;
			}
			set
			{
				if ((this._RowNumber != value))
				{
					this.OnRowNumberChanging(value);
					this.SendPropertyChanging();
					this._RowNumber = value;
					this.SendPropertyChanged("RowNumber");
					this.OnRowNumberChanged();
				}
			}
		}
		
		[Column(Storage="_InitiallyCreated", DbType="DateTime NOT NULL")]
		public System.DateTime InitiallyCreated
		{
			get
			{
				return this._InitiallyCreated;
			}
			set
			{
				if ((this._InitiallyCreated != value))
				{
					this.OnInitiallyCreatedChanging(value);
					this.SendPropertyChanging();
					this._InitiallyCreated = value;
					this.SendPropertyChanged("InitiallyCreated");
					this.OnInitiallyCreatedChanged();
				}
			}
		}
		
		[Column(Storage="_LastCreated", DbType="DateTime NOT NULL")]
		public System.DateTime LastCreated
		{
			get
			{
				return this._LastCreated;
			}
			set
			{
				if ((this._LastCreated != value))
				{
					this.OnLastCreatedChanging(value);
					this.SendPropertyChanging();
					this._LastCreated = value;
					this.SendPropertyChanged("LastCreated");
					this.OnLastCreatedChanged();
				}
			}
		}
		
		[Column(Storage="_Extension2", DbType="VarChar(884) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Extension2
		{
			get
			{
				return this._Extension2;
			}
			set
			{
				if ((this._Extension2 != value))
				{
					if (this._Extension.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnExtension2Changing(value);
					this.SendPropertyChanging();
					this._Extension2 = value;
					this.SendPropertyChanged("Extension2");
					this.OnExtension2Changed();
				}
			}
		}
		
		[Column(Storage="_Count", DbType="Int NOT NULL")]
		public int Count
		{
			get
			{
				return this._Count;
			}
			set
			{
				if ((this._Count != value))
				{
					this.OnCountChanging(value);
					this.SendPropertyChanging();
					this._Count = value;
					this.SendPropertyChanged("Count");
					this.OnCountChanged();
				}
			}
		}
		
		[Column(Storage="_DaysSinceInitiallyDiscovered", DbType="SmallInt NOT NULL")]
		public short DaysSinceInitiallyDiscovered
		{
			get
			{
				return this._DaysSinceInitiallyDiscovered;
			}
			set
			{
				if ((this._DaysSinceInitiallyDiscovered != value))
				{
					this.OnDaysSinceInitiallyDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._DaysSinceInitiallyDiscovered = value;
					this.SendPropertyChanged("DaysSinceInitiallyDiscovered");
					this.OnDaysSinceInitiallyDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_DaysSinceLastDiscovered", DbType="SmallInt NOT NULL")]
		public short DaysSinceLastDiscovered
		{
			get
			{
				return this._DaysSinceLastDiscovered;
			}
			set
			{
				if ((this._DaysSinceLastDiscovered != value))
				{
					this.OnDaysSinceLastDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._DaysSinceLastDiscovered = value;
					this.SendPropertyChanged("DaysSinceLastDiscovered");
					this.OnDaysSinceLastDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_Strength", DbType="Float NOT NULL")]
		public double Strength
		{
			get
			{
				return this._Strength;
			}
			set
			{
				if ((this._Strength != value))
				{
					this.OnStrengthChanging(value);
					this.SendPropertyChanging();
					this._Strength = value;
					this.SendPropertyChanged("Strength");
					this.OnStrengthChanged();
				}
			}
		}
		
		[Column(Storage="_Rank", DbType="SmallInt NOT NULL")]
		public short Rank
		{
			get
			{
				return this._Rank;
			}
			set
			{
				if ((this._Rank != value))
				{
					this.OnRankChanging(value);
					this.SendPropertyChanging();
					this._Rank = value;
					this.SendPropertyChanged("Rank");
					this.OnRankChanged();
				}
			}
		}
		
		[Column(Storage="_DenseRank", DbType="SmallInt NOT NULL")]
		public short DenseRank
		{
			get
			{
				return this._DenseRank;
			}
			set
			{
				if ((this._DenseRank != value))
				{
					this.OnDenseRankChanging(value);
					this.SendPropertyChanging();
					this._DenseRank = value;
					this.SendPropertyChanged("DenseRank");
					this.OnDenseRankChanged();
				}
			}
		}
		
		[Column(Storage="_NTile", DbType="TinyInt NOT NULL")]
		public byte NTile
		{
			get
			{
				return this._NTile;
			}
			set
			{
				if ((this._NTile != value))
				{
					this.OnNTileChanging(value);
					this.SendPropertyChanging();
					this._NTile = value;
					this.SendPropertyChanged("NTile");
					this.OnNTileChanged();
				}
			}
		}
		
		[Association(Name="Extension_Exceptions_COUNT_BY_EXTENSION2", Storage="_Extension", ThisKey="Extension2", OtherKey="Extension1", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Extension Extension
		{
			get
			{
				return this._Extension.Entity;
			}
			set
			{
				Extension previousValue = this._Extension.Entity;
				if (((previousValue != value) 
							|| (this._Extension.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Extension.Entity = null;
						previousValue.Exceptions_COUNT_BY_EXTENSION2 = null;
					}
					this._Extension.Entity = value;
					if ((value != null))
					{
						value.Exceptions_COUNT_BY_EXTENSION2 = this;
						this._Extension2 = value.Extension1;
					}
					else
					{
						this._Extension2 = default(string);
					}
					this.SendPropertyChanged("Extension");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="rpt.Exceptions_COUNT_BY_EXTENSIONS")]
	public partial class Exceptions_COUNT_BY_EXTENSION
	{
		
		private short _RowNumber;
		
		private System.DateTime _InitiallyCreated;
		
		private System.DateTime _LastCreated;
		
		private string _Extension1;
		
		private string _Extension2;
		
		private int _Count;
		
		private short _DaysSinceInitiallyDiscovered;
		
		private short _DaysSinceLastDiscovered;
		
		private double _Strength;
		
		private short _Rank;
		
		private short _DenseRank;
		
		private byte _NTile;
		
		public Exceptions_COUNT_BY_EXTENSION()
		{
		}
		
		[Column(Storage="_RowNumber", DbType="SmallInt NOT NULL")]
		public short RowNumber
		{
			get
			{
				return this._RowNumber;
			}
			set
			{
				if ((this._RowNumber != value))
				{
					this._RowNumber = value;
				}
			}
		}
		
		[Column(Storage="_InitiallyCreated", DbType="DateTime NOT NULL")]
		public System.DateTime InitiallyCreated
		{
			get
			{
				return this._InitiallyCreated;
			}
			set
			{
				if ((this._InitiallyCreated != value))
				{
					this._InitiallyCreated = value;
				}
			}
		}
		
		[Column(Storage="_LastCreated", DbType="DateTime NOT NULL")]
		public System.DateTime LastCreated
		{
			get
			{
				return this._LastCreated;
			}
			set
			{
				if ((this._LastCreated != value))
				{
					this._LastCreated = value;
				}
			}
		}
		
		[Column(Storage="_Extension1", DbType="VarChar(884) NOT NULL", CanBeNull=false)]
		public string Extension1
		{
			get
			{
				return this._Extension1;
			}
			set
			{
				if ((this._Extension1 != value))
				{
					this._Extension1 = value;
				}
			}
		}
		
		[Column(Storage="_Extension2", DbType="VarChar(884) NOT NULL", CanBeNull=false)]
		public string Extension2
		{
			get
			{
				return this._Extension2;
			}
			set
			{
				if ((this._Extension2 != value))
				{
					this._Extension2 = value;
				}
			}
		}
		
		[Column(Storage="_Count", DbType="Int NOT NULL")]
		public int Count
		{
			get
			{
				return this._Count;
			}
			set
			{
				if ((this._Count != value))
				{
					this._Count = value;
				}
			}
		}
		
		[Column(Storage="_DaysSinceInitiallyDiscovered", DbType="SmallInt NOT NULL")]
		public short DaysSinceInitiallyDiscovered
		{
			get
			{
				return this._DaysSinceInitiallyDiscovered;
			}
			set
			{
				if ((this._DaysSinceInitiallyDiscovered != value))
				{
					this._DaysSinceInitiallyDiscovered = value;
				}
			}
		}
		
		[Column(Storage="_DaysSinceLastDiscovered", DbType="SmallInt NOT NULL")]
		public short DaysSinceLastDiscovered
		{
			get
			{
				return this._DaysSinceLastDiscovered;
			}
			set
			{
				if ((this._DaysSinceLastDiscovered != value))
				{
					this._DaysSinceLastDiscovered = value;
				}
			}
		}
		
		[Column(Storage="_Strength", DbType="Float NOT NULL")]
		public double Strength
		{
			get
			{
				return this._Strength;
			}
			set
			{
				if ((this._Strength != value))
				{
					this._Strength = value;
				}
			}
		}
		
		[Column(Storage="_Rank", DbType="SmallInt NOT NULL")]
		public short Rank
		{
			get
			{
				return this._Rank;
			}
			set
			{
				if ((this._Rank != value))
				{
					this._Rank = value;
				}
			}
		}
		
		[Column(Storage="_DenseRank", DbType="SmallInt NOT NULL")]
		public short DenseRank
		{
			get
			{
				return this._DenseRank;
			}
			set
			{
				if ((this._DenseRank != value))
				{
					this._DenseRank = value;
				}
			}
		}
		
		[Column(Storage="_NTile", DbType="TinyInt NOT NULL")]
		public byte NTile
		{
			get
			{
				return this._NTile;
			}
			set
			{
				if ((this._NTile != value))
				{
					this._NTile = value;
				}
			}
		}
	}
	
	[Table(Name="rpt.Exceptions_COUNT_BY_HOST1")]
	public partial class Exceptions_COUNT_BY_HOST1 : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private short _RowNumber;
		
		private System.DateTime _InitiallyCreated;
		
		private System.DateTime _LastCreated;
		
		private string _Host1;
		
		private int _Count;
		
		private short _DaysSinceInitiallyDiscovered;
		
		private short _DaysSinceLastDiscovered;
		
		private double _Strength;
		
		private short _Rank;
		
		private short _DenseRank;
		
		private byte _NTile;
		
		private EntityRef<Host> _Host;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRowNumberChanging(short value);
    partial void OnRowNumberChanged();
    partial void OnInitiallyCreatedChanging(System.DateTime value);
    partial void OnInitiallyCreatedChanged();
    partial void OnLastCreatedChanging(System.DateTime value);
    partial void OnLastCreatedChanged();
    partial void OnHost1Changing(string value);
    partial void OnHost1Changed();
    partial void OnCountChanging(int value);
    partial void OnCountChanged();
    partial void OnDaysSinceInitiallyDiscoveredChanging(short value);
    partial void OnDaysSinceInitiallyDiscoveredChanged();
    partial void OnDaysSinceLastDiscoveredChanging(short value);
    partial void OnDaysSinceLastDiscoveredChanged();
    partial void OnStrengthChanging(double value);
    partial void OnStrengthChanged();
    partial void OnRankChanging(short value);
    partial void OnRankChanged();
    partial void OnDenseRankChanging(short value);
    partial void OnDenseRankChanged();
    partial void OnNTileChanging(byte value);
    partial void OnNTileChanged();
    #endregion
		
		public Exceptions_COUNT_BY_HOST1()
		{
			this._Host = default(EntityRef<Host>);
			OnCreated();
		}
		
		[Column(Storage="_RowNumber", DbType="SmallInt NOT NULL")]
		public short RowNumber
		{
			get
			{
				return this._RowNumber;
			}
			set
			{
				if ((this._RowNumber != value))
				{
					this.OnRowNumberChanging(value);
					this.SendPropertyChanging();
					this._RowNumber = value;
					this.SendPropertyChanged("RowNumber");
					this.OnRowNumberChanged();
				}
			}
		}
		
		[Column(Storage="_InitiallyCreated", DbType="DateTime NOT NULL")]
		public System.DateTime InitiallyCreated
		{
			get
			{
				return this._InitiallyCreated;
			}
			set
			{
				if ((this._InitiallyCreated != value))
				{
					this.OnInitiallyCreatedChanging(value);
					this.SendPropertyChanging();
					this._InitiallyCreated = value;
					this.SendPropertyChanged("InitiallyCreated");
					this.OnInitiallyCreatedChanged();
				}
			}
		}
		
		[Column(Storage="_LastCreated", DbType="DateTime NOT NULL")]
		public System.DateTime LastCreated
		{
			get
			{
				return this._LastCreated;
			}
			set
			{
				if ((this._LastCreated != value))
				{
					this.OnLastCreatedChanging(value);
					this.SendPropertyChanging();
					this._LastCreated = value;
					this.SendPropertyChanged("LastCreated");
					this.OnLastCreatedChanged();
				}
			}
		}
		
		[Column(Storage="_Host1", DbType="VarChar(884) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Host1
		{
			get
			{
				return this._Host1;
			}
			set
			{
				if ((this._Host1 != value))
				{
					if (this._Host.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnHost1Changing(value);
					this.SendPropertyChanging();
					this._Host1 = value;
					this.SendPropertyChanged("Host1");
					this.OnHost1Changed();
				}
			}
		}
		
		[Column(Storage="_Count", DbType="Int NOT NULL")]
		public int Count
		{
			get
			{
				return this._Count;
			}
			set
			{
				if ((this._Count != value))
				{
					this.OnCountChanging(value);
					this.SendPropertyChanging();
					this._Count = value;
					this.SendPropertyChanged("Count");
					this.OnCountChanged();
				}
			}
		}
		
		[Column(Storage="_DaysSinceInitiallyDiscovered", DbType="SmallInt NOT NULL")]
		public short DaysSinceInitiallyDiscovered
		{
			get
			{
				return this._DaysSinceInitiallyDiscovered;
			}
			set
			{
				if ((this._DaysSinceInitiallyDiscovered != value))
				{
					this.OnDaysSinceInitiallyDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._DaysSinceInitiallyDiscovered = value;
					this.SendPropertyChanged("DaysSinceInitiallyDiscovered");
					this.OnDaysSinceInitiallyDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_DaysSinceLastDiscovered", DbType="SmallInt NOT NULL")]
		public short DaysSinceLastDiscovered
		{
			get
			{
				return this._DaysSinceLastDiscovered;
			}
			set
			{
				if ((this._DaysSinceLastDiscovered != value))
				{
					this.OnDaysSinceLastDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._DaysSinceLastDiscovered = value;
					this.SendPropertyChanged("DaysSinceLastDiscovered");
					this.OnDaysSinceLastDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_Strength", DbType="Float NOT NULL")]
		public double Strength
		{
			get
			{
				return this._Strength;
			}
			set
			{
				if ((this._Strength != value))
				{
					this.OnStrengthChanging(value);
					this.SendPropertyChanging();
					this._Strength = value;
					this.SendPropertyChanged("Strength");
					this.OnStrengthChanged();
				}
			}
		}
		
		[Column(Storage="_Rank", DbType="SmallInt NOT NULL")]
		public short Rank
		{
			get
			{
				return this._Rank;
			}
			set
			{
				if ((this._Rank != value))
				{
					this.OnRankChanging(value);
					this.SendPropertyChanging();
					this._Rank = value;
					this.SendPropertyChanged("Rank");
					this.OnRankChanged();
				}
			}
		}
		
		[Column(Storage="_DenseRank", DbType="SmallInt NOT NULL")]
		public short DenseRank
		{
			get
			{
				return this._DenseRank;
			}
			set
			{
				if ((this._DenseRank != value))
				{
					this.OnDenseRankChanging(value);
					this.SendPropertyChanging();
					this._DenseRank = value;
					this.SendPropertyChanged("DenseRank");
					this.OnDenseRankChanged();
				}
			}
		}
		
		[Column(Storage="_NTile", DbType="TinyInt NOT NULL")]
		public byte NTile
		{
			get
			{
				return this._NTile;
			}
			set
			{
				if ((this._NTile != value))
				{
					this.OnNTileChanging(value);
					this.SendPropertyChanging();
					this._NTile = value;
					this.SendPropertyChanged("NTile");
					this.OnNTileChanged();
				}
			}
		}
		
		[Association(Name="Host_Exceptions_COUNT_BY_HOST1", Storage="_Host", ThisKey="Host1", OtherKey="Host1", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Host Host
		{
			get
			{
				return this._Host.Entity;
			}
			set
			{
				Host previousValue = this._Host.Entity;
				if (((previousValue != value) 
							|| (this._Host.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Host.Entity = null;
						previousValue.Exceptions_COUNT_BY_HOST1 = null;
					}
					this._Host.Entity = value;
					if ((value != null))
					{
						value.Exceptions_COUNT_BY_HOST1 = this;
						this._Host1 = value.Host1;
					}
					else
					{
						this._Host1 = default(string);
					}
					this.SendPropertyChanged("Host");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="rpt.Exceptions_COUNT_BY_HOST2")]
	public partial class Exceptions_COUNT_BY_HOST2 : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private short _RowNumber;
		
		private System.DateTime _InitiallyCreated;
		
		private System.DateTime _LastCreated;
		
		private string _Host2;
		
		private int _Count;
		
		private short _DaysSinceInitiallyDiscovered;
		
		private short _DaysSinceLastDiscovered;
		
		private double _Strength;
		
		private short _Rank;
		
		private short _DenseRank;
		
		private byte _NTile;
		
		private EntityRef<Host> _Host;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRowNumberChanging(short value);
    partial void OnRowNumberChanged();
    partial void OnInitiallyCreatedChanging(System.DateTime value);
    partial void OnInitiallyCreatedChanged();
    partial void OnLastCreatedChanging(System.DateTime value);
    partial void OnLastCreatedChanged();
    partial void OnHost2Changing(string value);
    partial void OnHost2Changed();
    partial void OnCountChanging(int value);
    partial void OnCountChanged();
    partial void OnDaysSinceInitiallyDiscoveredChanging(short value);
    partial void OnDaysSinceInitiallyDiscoveredChanged();
    partial void OnDaysSinceLastDiscoveredChanging(short value);
    partial void OnDaysSinceLastDiscoveredChanged();
    partial void OnStrengthChanging(double value);
    partial void OnStrengthChanged();
    partial void OnRankChanging(short value);
    partial void OnRankChanged();
    partial void OnDenseRankChanging(short value);
    partial void OnDenseRankChanged();
    partial void OnNTileChanging(byte value);
    partial void OnNTileChanged();
    #endregion
		
		public Exceptions_COUNT_BY_HOST2()
		{
			this._Host = default(EntityRef<Host>);
			OnCreated();
		}
		
		[Column(Storage="_RowNumber", DbType="SmallInt NOT NULL")]
		public short RowNumber
		{
			get
			{
				return this._RowNumber;
			}
			set
			{
				if ((this._RowNumber != value))
				{
					this.OnRowNumberChanging(value);
					this.SendPropertyChanging();
					this._RowNumber = value;
					this.SendPropertyChanged("RowNumber");
					this.OnRowNumberChanged();
				}
			}
		}
		
		[Column(Storage="_InitiallyCreated", DbType="DateTime NOT NULL")]
		public System.DateTime InitiallyCreated
		{
			get
			{
				return this._InitiallyCreated;
			}
			set
			{
				if ((this._InitiallyCreated != value))
				{
					this.OnInitiallyCreatedChanging(value);
					this.SendPropertyChanging();
					this._InitiallyCreated = value;
					this.SendPropertyChanged("InitiallyCreated");
					this.OnInitiallyCreatedChanged();
				}
			}
		}
		
		[Column(Storage="_LastCreated", DbType="DateTime NOT NULL")]
		public System.DateTime LastCreated
		{
			get
			{
				return this._LastCreated;
			}
			set
			{
				if ((this._LastCreated != value))
				{
					this.OnLastCreatedChanging(value);
					this.SendPropertyChanging();
					this._LastCreated = value;
					this.SendPropertyChanged("LastCreated");
					this.OnLastCreatedChanged();
				}
			}
		}
		
		[Column(Storage="_Host2", DbType="VarChar(884) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Host2
		{
			get
			{
				return this._Host2;
			}
			set
			{
				if ((this._Host2 != value))
				{
					if (this._Host.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnHost2Changing(value);
					this.SendPropertyChanging();
					this._Host2 = value;
					this.SendPropertyChanged("Host2");
					this.OnHost2Changed();
				}
			}
		}
		
		[Column(Storage="_Count", DbType="Int NOT NULL")]
		public int Count
		{
			get
			{
				return this._Count;
			}
			set
			{
				if ((this._Count != value))
				{
					this.OnCountChanging(value);
					this.SendPropertyChanging();
					this._Count = value;
					this.SendPropertyChanged("Count");
					this.OnCountChanged();
				}
			}
		}
		
		[Column(Storage="_DaysSinceInitiallyDiscovered", DbType="SmallInt NOT NULL")]
		public short DaysSinceInitiallyDiscovered
		{
			get
			{
				return this._DaysSinceInitiallyDiscovered;
			}
			set
			{
				if ((this._DaysSinceInitiallyDiscovered != value))
				{
					this.OnDaysSinceInitiallyDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._DaysSinceInitiallyDiscovered = value;
					this.SendPropertyChanged("DaysSinceInitiallyDiscovered");
					this.OnDaysSinceInitiallyDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_DaysSinceLastDiscovered", DbType="SmallInt NOT NULL")]
		public short DaysSinceLastDiscovered
		{
			get
			{
				return this._DaysSinceLastDiscovered;
			}
			set
			{
				if ((this._DaysSinceLastDiscovered != value))
				{
					this.OnDaysSinceLastDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._DaysSinceLastDiscovered = value;
					this.SendPropertyChanged("DaysSinceLastDiscovered");
					this.OnDaysSinceLastDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_Strength", DbType="Float NOT NULL")]
		public double Strength
		{
			get
			{
				return this._Strength;
			}
			set
			{
				if ((this._Strength != value))
				{
					this.OnStrengthChanging(value);
					this.SendPropertyChanging();
					this._Strength = value;
					this.SendPropertyChanged("Strength");
					this.OnStrengthChanged();
				}
			}
		}
		
		[Column(Storage="_Rank", DbType="SmallInt NOT NULL")]
		public short Rank
		{
			get
			{
				return this._Rank;
			}
			set
			{
				if ((this._Rank != value))
				{
					this.OnRankChanging(value);
					this.SendPropertyChanging();
					this._Rank = value;
					this.SendPropertyChanged("Rank");
					this.OnRankChanged();
				}
			}
		}
		
		[Column(Storage="_DenseRank", DbType="SmallInt NOT NULL")]
		public short DenseRank
		{
			get
			{
				return this._DenseRank;
			}
			set
			{
				if ((this._DenseRank != value))
				{
					this.OnDenseRankChanging(value);
					this.SendPropertyChanging();
					this._DenseRank = value;
					this.SendPropertyChanged("DenseRank");
					this.OnDenseRankChanged();
				}
			}
		}
		
		[Column(Storage="_NTile", DbType="TinyInt NOT NULL")]
		public byte NTile
		{
			get
			{
				return this._NTile;
			}
			set
			{
				if ((this._NTile != value))
				{
					this.OnNTileChanging(value);
					this.SendPropertyChanging();
					this._NTile = value;
					this.SendPropertyChanged("NTile");
					this.OnNTileChanged();
				}
			}
		}
		
		[Association(Name="Host_Exceptions_COUNT_BY_HOST2", Storage="_Host", ThisKey="Host2", OtherKey="Host1", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Host Host
		{
			get
			{
				return this._Host.Entity;
			}
			set
			{
				Host previousValue = this._Host.Entity;
				if (((previousValue != value) 
							|| (this._Host.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Host.Entity = null;
						previousValue.Exceptions_COUNT_BY_HOST2 = null;
					}
					this._Host.Entity = value;
					if ((value != null))
					{
						value.Exceptions_COUNT_BY_HOST2 = this;
						this._Host2 = value.Host1;
					}
					else
					{
						this._Host2 = default(string);
					}
					this.SendPropertyChanged("Host");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="rpt.Exceptions_COUNT_BY_HOSTS")]
	public partial class Exceptions_COUNT_BY_HOST
	{
		
		private short _RowNumber;
		
		private System.DateTime _InitiallyCreated;
		
		private System.DateTime _LastCreated;
		
		private string _Host1;
		
		private string _Host2;
		
		private int _Count;
		
		private short _DaysSinceInitiallyDiscovered;
		
		private short _DaysSinceLastDiscovered;
		
		private double _Strength;
		
		private short _Rank;
		
		private short _DenseRank;
		
		private byte _NTile;
		
		public Exceptions_COUNT_BY_HOST()
		{
		}
		
		[Column(Storage="_RowNumber", DbType="SmallInt NOT NULL")]
		public short RowNumber
		{
			get
			{
				return this._RowNumber;
			}
			set
			{
				if ((this._RowNumber != value))
				{
					this._RowNumber = value;
				}
			}
		}
		
		[Column(Storage="_InitiallyCreated", DbType="DateTime NOT NULL")]
		public System.DateTime InitiallyCreated
		{
			get
			{
				return this._InitiallyCreated;
			}
			set
			{
				if ((this._InitiallyCreated != value))
				{
					this._InitiallyCreated = value;
				}
			}
		}
		
		[Column(Storage="_LastCreated", DbType="DateTime NOT NULL")]
		public System.DateTime LastCreated
		{
			get
			{
				return this._LastCreated;
			}
			set
			{
				if ((this._LastCreated != value))
				{
					this._LastCreated = value;
				}
			}
		}
		
		[Column(Storage="_Host1", DbType="VarChar(884) NOT NULL", CanBeNull=false)]
		public string Host1
		{
			get
			{
				return this._Host1;
			}
			set
			{
				if ((this._Host1 != value))
				{
					this._Host1 = value;
				}
			}
		}
		
		[Column(Storage="_Host2", DbType="VarChar(884) NOT NULL", CanBeNull=false)]
		public string Host2
		{
			get
			{
				return this._Host2;
			}
			set
			{
				if ((this._Host2 != value))
				{
					this._Host2 = value;
				}
			}
		}
		
		[Column(Storage="_Count", DbType="Int NOT NULL")]
		public int Count
		{
			get
			{
				return this._Count;
			}
			set
			{
				if ((this._Count != value))
				{
					this._Count = value;
				}
			}
		}
		
		[Column(Storage="_DaysSinceInitiallyDiscovered", DbType="SmallInt NOT NULL")]
		public short DaysSinceInitiallyDiscovered
		{
			get
			{
				return this._DaysSinceInitiallyDiscovered;
			}
			set
			{
				if ((this._DaysSinceInitiallyDiscovered != value))
				{
					this._DaysSinceInitiallyDiscovered = value;
				}
			}
		}
		
		[Column(Storage="_DaysSinceLastDiscovered", DbType="SmallInt NOT NULL")]
		public short DaysSinceLastDiscovered
		{
			get
			{
				return this._DaysSinceLastDiscovered;
			}
			set
			{
				if ((this._DaysSinceLastDiscovered != value))
				{
					this._DaysSinceLastDiscovered = value;
				}
			}
		}
		
		[Column(Storage="_Strength", DbType="Float NOT NULL")]
		public double Strength
		{
			get
			{
				return this._Strength;
			}
			set
			{
				if ((this._Strength != value))
				{
					this._Strength = value;
				}
			}
		}
		
		[Column(Storage="_Rank", DbType="SmallInt NOT NULL")]
		public short Rank
		{
			get
			{
				return this._Rank;
			}
			set
			{
				if ((this._Rank != value))
				{
					this._Rank = value;
				}
			}
		}
		
		[Column(Storage="_DenseRank", DbType="SmallInt NOT NULL")]
		public short DenseRank
		{
			get
			{
				return this._DenseRank;
			}
			set
			{
				if ((this._DenseRank != value))
				{
					this._DenseRank = value;
				}
			}
		}
		
		[Column(Storage="_NTile", DbType="TinyInt NOT NULL")]
		public byte NTile
		{
			get
			{
				return this._NTile;
			}
			set
			{
				if ((this._NTile != value))
				{
					this._NTile = value;
				}
			}
		}
	}
	
	[Table(Name="rpt.Exceptions_COUNT_BY_MESSAGE")]
	public partial class Exceptions_COUNT_BY_MESSAGE
	{
		
		private int _RowNumber;
		
		private System.DateTime _InitiallyCreated;
		
		private System.DateTime _LastCreated;
		
		private string _Message;
		
		private int _Count;
		
		private short _DaysSinceInitiallyDiscovered;
		
		private short _DaysSinceLastDiscovered;
		
		private double _Strength;
		
		private int _Rank;
		
		private int _DenseRank;
		
		private short _NTile;
		
		public Exceptions_COUNT_BY_MESSAGE()
		{
		}
		
		[Column(Storage="_RowNumber", DbType="Int NOT NULL")]
		public int RowNumber
		{
			get
			{
				return this._RowNumber;
			}
			set
			{
				if ((this._RowNumber != value))
				{
					this._RowNumber = value;
				}
			}
		}
		
		[Column(Storage="_InitiallyCreated", DbType="DateTime NOT NULL")]
		public System.DateTime InitiallyCreated
		{
			get
			{
				return this._InitiallyCreated;
			}
			set
			{
				if ((this._InitiallyCreated != value))
				{
					this._InitiallyCreated = value;
				}
			}
		}
		
		[Column(Storage="_LastCreated", DbType="DateTime NOT NULL")]
		public System.DateTime LastCreated
		{
			get
			{
				return this._LastCreated;
			}
			set
			{
				if ((this._LastCreated != value))
				{
					this._LastCreated = value;
				}
			}
		}
		
		[Column(Storage="_Message", DbType="VarChar(2000) NOT NULL", CanBeNull=false)]
		public string Message
		{
			get
			{
				return this._Message;
			}
			set
			{
				if ((this._Message != value))
				{
					this._Message = value;
				}
			}
		}
		
		[Column(Storage="_Count", DbType="Int NOT NULL")]
		public int Count
		{
			get
			{
				return this._Count;
			}
			set
			{
				if ((this._Count != value))
				{
					this._Count = value;
				}
			}
		}
		
		[Column(Storage="_DaysSinceInitiallyDiscovered", DbType="SmallInt NOT NULL")]
		public short DaysSinceInitiallyDiscovered
		{
			get
			{
				return this._DaysSinceInitiallyDiscovered;
			}
			set
			{
				if ((this._DaysSinceInitiallyDiscovered != value))
				{
					this._DaysSinceInitiallyDiscovered = value;
				}
			}
		}
		
		[Column(Storage="_DaysSinceLastDiscovered", DbType="SmallInt NOT NULL")]
		public short DaysSinceLastDiscovered
		{
			get
			{
				return this._DaysSinceLastDiscovered;
			}
			set
			{
				if ((this._DaysSinceLastDiscovered != value))
				{
					this._DaysSinceLastDiscovered = value;
				}
			}
		}
		
		[Column(Storage="_Strength", DbType="Float NOT NULL")]
		public double Strength
		{
			get
			{
				return this._Strength;
			}
			set
			{
				if ((this._Strength != value))
				{
					this._Strength = value;
				}
			}
		}
		
		[Column(Storage="_Rank", DbType="Int NOT NULL")]
		public int Rank
		{
			get
			{
				return this._Rank;
			}
			set
			{
				if ((this._Rank != value))
				{
					this._Rank = value;
				}
			}
		}
		
		[Column(Storage="_DenseRank", DbType="Int NOT NULL")]
		public int DenseRank
		{
			get
			{
				return this._DenseRank;
			}
			set
			{
				if ((this._DenseRank != value))
				{
					this._DenseRank = value;
				}
			}
		}
		
		[Column(Storage="_NTile", DbType="SmallInt NOT NULL")]
		public short NTile
		{
			get
			{
				return this._NTile;
			}
			set
			{
				if ((this._NTile != value))
				{
					this._NTile = value;
				}
			}
		}
	}
	
	[Table(Name="rpt.Exceptions_COUNT_BY_SCHEME1")]
	public partial class Exceptions_COUNT_BY_SCHEME1 : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private short _RowNumber;
		
		private System.DateTime _InitiallyCreated;
		
		private System.DateTime _LastCreated;
		
		private string _Scheme1;
		
		private int _Count;
		
		private short _DaysSinceInitiallyDiscovered;
		
		private short _DaysSinceLastDiscovered;
		
		private double _Strength;
		
		private short _Rank;
		
		private short _DenseRank;
		
		private byte _NTile;
		
		private EntityRef<Scheme> _Scheme;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRowNumberChanging(short value);
    partial void OnRowNumberChanged();
    partial void OnInitiallyCreatedChanging(System.DateTime value);
    partial void OnInitiallyCreatedChanged();
    partial void OnLastCreatedChanging(System.DateTime value);
    partial void OnLastCreatedChanged();
    partial void OnScheme1Changing(string value);
    partial void OnScheme1Changed();
    partial void OnCountChanging(int value);
    partial void OnCountChanged();
    partial void OnDaysSinceInitiallyDiscoveredChanging(short value);
    partial void OnDaysSinceInitiallyDiscoveredChanged();
    partial void OnDaysSinceLastDiscoveredChanging(short value);
    partial void OnDaysSinceLastDiscoveredChanged();
    partial void OnStrengthChanging(double value);
    partial void OnStrengthChanged();
    partial void OnRankChanging(short value);
    partial void OnRankChanged();
    partial void OnDenseRankChanging(short value);
    partial void OnDenseRankChanged();
    partial void OnNTileChanging(byte value);
    partial void OnNTileChanged();
    #endregion
		
		public Exceptions_COUNT_BY_SCHEME1()
		{
			this._Scheme = default(EntityRef<Scheme>);
			OnCreated();
		}
		
		[Column(Storage="_RowNumber", DbType="SmallInt NOT NULL")]
		public short RowNumber
		{
			get
			{
				return this._RowNumber;
			}
			set
			{
				if ((this._RowNumber != value))
				{
					this.OnRowNumberChanging(value);
					this.SendPropertyChanging();
					this._RowNumber = value;
					this.SendPropertyChanged("RowNumber");
					this.OnRowNumberChanged();
				}
			}
		}
		
		[Column(Storage="_InitiallyCreated", DbType="DateTime NOT NULL")]
		public System.DateTime InitiallyCreated
		{
			get
			{
				return this._InitiallyCreated;
			}
			set
			{
				if ((this._InitiallyCreated != value))
				{
					this.OnInitiallyCreatedChanging(value);
					this.SendPropertyChanging();
					this._InitiallyCreated = value;
					this.SendPropertyChanged("InitiallyCreated");
					this.OnInitiallyCreatedChanged();
				}
			}
		}
		
		[Column(Storage="_LastCreated", DbType="DateTime NOT NULL")]
		public System.DateTime LastCreated
		{
			get
			{
				return this._LastCreated;
			}
			set
			{
				if ((this._LastCreated != value))
				{
					this.OnLastCreatedChanging(value);
					this.SendPropertyChanging();
					this._LastCreated = value;
					this.SendPropertyChanged("LastCreated");
					this.OnLastCreatedChanged();
				}
			}
		}
		
		[Column(Storage="_Scheme1", DbType="VarChar(884) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Scheme1
		{
			get
			{
				return this._Scheme1;
			}
			set
			{
				if ((this._Scheme1 != value))
				{
					if (this._Scheme.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnScheme1Changing(value);
					this.SendPropertyChanging();
					this._Scheme1 = value;
					this.SendPropertyChanged("Scheme1");
					this.OnScheme1Changed();
				}
			}
		}
		
		[Column(Storage="_Count", DbType="Int NOT NULL")]
		public int Count
		{
			get
			{
				return this._Count;
			}
			set
			{
				if ((this._Count != value))
				{
					this.OnCountChanging(value);
					this.SendPropertyChanging();
					this._Count = value;
					this.SendPropertyChanged("Count");
					this.OnCountChanged();
				}
			}
		}
		
		[Column(Storage="_DaysSinceInitiallyDiscovered", DbType="SmallInt NOT NULL")]
		public short DaysSinceInitiallyDiscovered
		{
			get
			{
				return this._DaysSinceInitiallyDiscovered;
			}
			set
			{
				if ((this._DaysSinceInitiallyDiscovered != value))
				{
					this.OnDaysSinceInitiallyDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._DaysSinceInitiallyDiscovered = value;
					this.SendPropertyChanged("DaysSinceInitiallyDiscovered");
					this.OnDaysSinceInitiallyDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_DaysSinceLastDiscovered", DbType="SmallInt NOT NULL")]
		public short DaysSinceLastDiscovered
		{
			get
			{
				return this._DaysSinceLastDiscovered;
			}
			set
			{
				if ((this._DaysSinceLastDiscovered != value))
				{
					this.OnDaysSinceLastDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._DaysSinceLastDiscovered = value;
					this.SendPropertyChanged("DaysSinceLastDiscovered");
					this.OnDaysSinceLastDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_Strength", DbType="Float NOT NULL")]
		public double Strength
		{
			get
			{
				return this._Strength;
			}
			set
			{
				if ((this._Strength != value))
				{
					this.OnStrengthChanging(value);
					this.SendPropertyChanging();
					this._Strength = value;
					this.SendPropertyChanged("Strength");
					this.OnStrengthChanged();
				}
			}
		}
		
		[Column(Storage="_Rank", DbType="SmallInt NOT NULL")]
		public short Rank
		{
			get
			{
				return this._Rank;
			}
			set
			{
				if ((this._Rank != value))
				{
					this.OnRankChanging(value);
					this.SendPropertyChanging();
					this._Rank = value;
					this.SendPropertyChanged("Rank");
					this.OnRankChanged();
				}
			}
		}
		
		[Column(Storage="_DenseRank", DbType="SmallInt NOT NULL")]
		public short DenseRank
		{
			get
			{
				return this._DenseRank;
			}
			set
			{
				if ((this._DenseRank != value))
				{
					this.OnDenseRankChanging(value);
					this.SendPropertyChanging();
					this._DenseRank = value;
					this.SendPropertyChanged("DenseRank");
					this.OnDenseRankChanged();
				}
			}
		}
		
		[Column(Storage="_NTile", DbType="TinyInt NOT NULL")]
		public byte NTile
		{
			get
			{
				return this._NTile;
			}
			set
			{
				if ((this._NTile != value))
				{
					this.OnNTileChanging(value);
					this.SendPropertyChanging();
					this._NTile = value;
					this.SendPropertyChanged("NTile");
					this.OnNTileChanged();
				}
			}
		}
		
		[Association(Name="Scheme_Exceptions_COUNT_BY_SCHEME1", Storage="_Scheme", ThisKey="Scheme1", OtherKey="Scheme1", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Scheme Scheme
		{
			get
			{
				return this._Scheme.Entity;
			}
			set
			{
				Scheme previousValue = this._Scheme.Entity;
				if (((previousValue != value) 
							|| (this._Scheme.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Scheme.Entity = null;
						previousValue.Exceptions_COUNT_BY_SCHEME1 = null;
					}
					this._Scheme.Entity = value;
					if ((value != null))
					{
						value.Exceptions_COUNT_BY_SCHEME1 = this;
						this._Scheme1 = value.Scheme1;
					}
					else
					{
						this._Scheme1 = default(string);
					}
					this.SendPropertyChanged("Scheme");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="rpt.Exceptions_COUNT_BY_SCHEME2")]
	public partial class Exceptions_COUNT_BY_SCHEME2 : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private short _RowNumber;
		
		private System.DateTime _InitiallyCreated;
		
		private System.DateTime _LastCreated;
		
		private string _Scheme2;
		
		private int _Count;
		
		private short _DaysSinceInitiallyDiscovered;
		
		private short _DaysSinceLastDiscovered;
		
		private double _Strength;
		
		private short _Rank;
		
		private short _DenseRank;
		
		private byte _NTile;
		
		private EntityRef<Scheme> _Scheme;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRowNumberChanging(short value);
    partial void OnRowNumberChanged();
    partial void OnInitiallyCreatedChanging(System.DateTime value);
    partial void OnInitiallyCreatedChanged();
    partial void OnLastCreatedChanging(System.DateTime value);
    partial void OnLastCreatedChanged();
    partial void OnScheme2Changing(string value);
    partial void OnScheme2Changed();
    partial void OnCountChanging(int value);
    partial void OnCountChanged();
    partial void OnDaysSinceInitiallyDiscoveredChanging(short value);
    partial void OnDaysSinceInitiallyDiscoveredChanged();
    partial void OnDaysSinceLastDiscoveredChanging(short value);
    partial void OnDaysSinceLastDiscoveredChanged();
    partial void OnStrengthChanging(double value);
    partial void OnStrengthChanged();
    partial void OnRankChanging(short value);
    partial void OnRankChanged();
    partial void OnDenseRankChanging(short value);
    partial void OnDenseRankChanged();
    partial void OnNTileChanging(byte value);
    partial void OnNTileChanged();
    #endregion
		
		public Exceptions_COUNT_BY_SCHEME2()
		{
			this._Scheme = default(EntityRef<Scheme>);
			OnCreated();
		}
		
		[Column(Storage="_RowNumber", DbType="SmallInt NOT NULL")]
		public short RowNumber
		{
			get
			{
				return this._RowNumber;
			}
			set
			{
				if ((this._RowNumber != value))
				{
					this.OnRowNumberChanging(value);
					this.SendPropertyChanging();
					this._RowNumber = value;
					this.SendPropertyChanged("RowNumber");
					this.OnRowNumberChanged();
				}
			}
		}
		
		[Column(Storage="_InitiallyCreated", DbType="DateTime NOT NULL")]
		public System.DateTime InitiallyCreated
		{
			get
			{
				return this._InitiallyCreated;
			}
			set
			{
				if ((this._InitiallyCreated != value))
				{
					this.OnInitiallyCreatedChanging(value);
					this.SendPropertyChanging();
					this._InitiallyCreated = value;
					this.SendPropertyChanged("InitiallyCreated");
					this.OnInitiallyCreatedChanged();
				}
			}
		}
		
		[Column(Storage="_LastCreated", DbType="DateTime NOT NULL")]
		public System.DateTime LastCreated
		{
			get
			{
				return this._LastCreated;
			}
			set
			{
				if ((this._LastCreated != value))
				{
					this.OnLastCreatedChanging(value);
					this.SendPropertyChanging();
					this._LastCreated = value;
					this.SendPropertyChanged("LastCreated");
					this.OnLastCreatedChanged();
				}
			}
		}
		
		[Column(Storage="_Scheme2", DbType="VarChar(884) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Scheme2
		{
			get
			{
				return this._Scheme2;
			}
			set
			{
				if ((this._Scheme2 != value))
				{
					if (this._Scheme.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnScheme2Changing(value);
					this.SendPropertyChanging();
					this._Scheme2 = value;
					this.SendPropertyChanged("Scheme2");
					this.OnScheme2Changed();
				}
			}
		}
		
		[Column(Storage="_Count", DbType="Int NOT NULL")]
		public int Count
		{
			get
			{
				return this._Count;
			}
			set
			{
				if ((this._Count != value))
				{
					this.OnCountChanging(value);
					this.SendPropertyChanging();
					this._Count = value;
					this.SendPropertyChanged("Count");
					this.OnCountChanged();
				}
			}
		}
		
		[Column(Storage="_DaysSinceInitiallyDiscovered", DbType="SmallInt NOT NULL")]
		public short DaysSinceInitiallyDiscovered
		{
			get
			{
				return this._DaysSinceInitiallyDiscovered;
			}
			set
			{
				if ((this._DaysSinceInitiallyDiscovered != value))
				{
					this.OnDaysSinceInitiallyDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._DaysSinceInitiallyDiscovered = value;
					this.SendPropertyChanged("DaysSinceInitiallyDiscovered");
					this.OnDaysSinceInitiallyDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_DaysSinceLastDiscovered", DbType="SmallInt NOT NULL")]
		public short DaysSinceLastDiscovered
		{
			get
			{
				return this._DaysSinceLastDiscovered;
			}
			set
			{
				if ((this._DaysSinceLastDiscovered != value))
				{
					this.OnDaysSinceLastDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._DaysSinceLastDiscovered = value;
					this.SendPropertyChanged("DaysSinceLastDiscovered");
					this.OnDaysSinceLastDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_Strength", DbType="Float NOT NULL")]
		public double Strength
		{
			get
			{
				return this._Strength;
			}
			set
			{
				if ((this._Strength != value))
				{
					this.OnStrengthChanging(value);
					this.SendPropertyChanging();
					this._Strength = value;
					this.SendPropertyChanged("Strength");
					this.OnStrengthChanged();
				}
			}
		}
		
		[Column(Storage="_Rank", DbType="SmallInt NOT NULL")]
		public short Rank
		{
			get
			{
				return this._Rank;
			}
			set
			{
				if ((this._Rank != value))
				{
					this.OnRankChanging(value);
					this.SendPropertyChanging();
					this._Rank = value;
					this.SendPropertyChanged("Rank");
					this.OnRankChanged();
				}
			}
		}
		
		[Column(Storage="_DenseRank", DbType="SmallInt NOT NULL")]
		public short DenseRank
		{
			get
			{
				return this._DenseRank;
			}
			set
			{
				if ((this._DenseRank != value))
				{
					this.OnDenseRankChanging(value);
					this.SendPropertyChanging();
					this._DenseRank = value;
					this.SendPropertyChanged("DenseRank");
					this.OnDenseRankChanged();
				}
			}
		}
		
		[Column(Storage="_NTile", DbType="TinyInt NOT NULL")]
		public byte NTile
		{
			get
			{
				return this._NTile;
			}
			set
			{
				if ((this._NTile != value))
				{
					this.OnNTileChanging(value);
					this.SendPropertyChanging();
					this._NTile = value;
					this.SendPropertyChanged("NTile");
					this.OnNTileChanged();
				}
			}
		}
		
		[Association(Name="Scheme_Exceptions_COUNT_BY_SCHEME2", Storage="_Scheme", ThisKey="Scheme2", OtherKey="Scheme1", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Scheme Scheme
		{
			get
			{
				return this._Scheme.Entity;
			}
			set
			{
				Scheme previousValue = this._Scheme.Entity;
				if (((previousValue != value) 
							|| (this._Scheme.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Scheme.Entity = null;
						previousValue.Exceptions_COUNT_BY_SCHEME2 = null;
					}
					this._Scheme.Entity = value;
					if ((value != null))
					{
						value.Exceptions_COUNT_BY_SCHEME2 = this;
						this._Scheme2 = value.Scheme1;
					}
					else
					{
						this._Scheme2 = default(string);
					}
					this.SendPropertyChanged("Scheme");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="rpt.Exceptions_COUNT_BY_SCHEMES")]
	public partial class Exceptions_COUNT_BY_SCHEME
	{
		
		private short _RowNumber;
		
		private System.DateTime _InitiallyCreated;
		
		private System.DateTime _LastCreated;
		
		private string _Scheme1;
		
		private string _Scheme2;
		
		private int _Count;
		
		private short _DaysSinceInitiallyDiscovered;
		
		private short _DaysSinceLastDiscovered;
		
		private double _Strength;
		
		private short _Rank;
		
		private short _DenseRank;
		
		private byte _NTile;
		
		public Exceptions_COUNT_BY_SCHEME()
		{
		}
		
		[Column(Storage="_RowNumber", DbType="SmallInt NOT NULL")]
		public short RowNumber
		{
			get
			{
				return this._RowNumber;
			}
			set
			{
				if ((this._RowNumber != value))
				{
					this._RowNumber = value;
				}
			}
		}
		
		[Column(Storage="_InitiallyCreated", DbType="DateTime NOT NULL")]
		public System.DateTime InitiallyCreated
		{
			get
			{
				return this._InitiallyCreated;
			}
			set
			{
				if ((this._InitiallyCreated != value))
				{
					this._InitiallyCreated = value;
				}
			}
		}
		
		[Column(Storage="_LastCreated", DbType="DateTime NOT NULL")]
		public System.DateTime LastCreated
		{
			get
			{
				return this._LastCreated;
			}
			set
			{
				if ((this._LastCreated != value))
				{
					this._LastCreated = value;
				}
			}
		}
		
		[Column(Storage="_Scheme1", DbType="VarChar(884) NOT NULL", CanBeNull=false)]
		public string Scheme1
		{
			get
			{
				return this._Scheme1;
			}
			set
			{
				if ((this._Scheme1 != value))
				{
					this._Scheme1 = value;
				}
			}
		}
		
		[Column(Storage="_Scheme2", DbType="VarChar(884) NOT NULL", CanBeNull=false)]
		public string Scheme2
		{
			get
			{
				return this._Scheme2;
			}
			set
			{
				if ((this._Scheme2 != value))
				{
					this._Scheme2 = value;
				}
			}
		}
		
		[Column(Storage="_Count", DbType="Int NOT NULL")]
		public int Count
		{
			get
			{
				return this._Count;
			}
			set
			{
				if ((this._Count != value))
				{
					this._Count = value;
				}
			}
		}
		
		[Column(Storage="_DaysSinceInitiallyDiscovered", DbType="SmallInt NOT NULL")]
		public short DaysSinceInitiallyDiscovered
		{
			get
			{
				return this._DaysSinceInitiallyDiscovered;
			}
			set
			{
				if ((this._DaysSinceInitiallyDiscovered != value))
				{
					this._DaysSinceInitiallyDiscovered = value;
				}
			}
		}
		
		[Column(Storage="_DaysSinceLastDiscovered", DbType="SmallInt NOT NULL")]
		public short DaysSinceLastDiscovered
		{
			get
			{
				return this._DaysSinceLastDiscovered;
			}
			set
			{
				if ((this._DaysSinceLastDiscovered != value))
				{
					this._DaysSinceLastDiscovered = value;
				}
			}
		}
		
		[Column(Storage="_Strength", DbType="Float NOT NULL")]
		public double Strength
		{
			get
			{
				return this._Strength;
			}
			set
			{
				if ((this._Strength != value))
				{
					this._Strength = value;
				}
			}
		}
		
		[Column(Storage="_Rank", DbType="SmallInt NOT NULL")]
		public short Rank
		{
			get
			{
				return this._Rank;
			}
			set
			{
				if ((this._Rank != value))
				{
					this._Rank = value;
				}
			}
		}
		
		[Column(Storage="_DenseRank", DbType="SmallInt NOT NULL")]
		public short DenseRank
		{
			get
			{
				return this._DenseRank;
			}
			set
			{
				if ((this._DenseRank != value))
				{
					this._DenseRank = value;
				}
			}
		}
		
		[Column(Storage="_NTile", DbType="TinyInt NOT NULL")]
		public byte NTile
		{
			get
			{
				return this._NTile;
			}
			set
			{
				if ((this._NTile != value))
				{
					this._NTile = value;
				}
			}
		}
	}
	
	[Table(Name="rpt.Exceptions_COUNT_BY_SOURCE")]
	public partial class Exceptions_COUNT_BY_SOURCE : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private short _RowNumber;
		
		private System.DateTime _InitiallyCreated;
		
		private System.DateTime _LastCreated;
		
		private string _Source;
		
		private int _Count;
		
		private short _DaysSinceInitiallyDiscovered;
		
		private short _DaysSinceLastDiscovered;
		
		private double _Strength;
		
		private short _Rank;
		
		private short _DenseRank;
		
		private byte _NTile;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRowNumberChanging(short value);
    partial void OnRowNumberChanged();
    partial void OnInitiallyCreatedChanging(System.DateTime value);
    partial void OnInitiallyCreatedChanged();
    partial void OnLastCreatedChanging(System.DateTime value);
    partial void OnLastCreatedChanged();
    partial void OnSourceChanging(string value);
    partial void OnSourceChanged();
    partial void OnCountChanging(int value);
    partial void OnCountChanged();
    partial void OnDaysSinceInitiallyDiscoveredChanging(short value);
    partial void OnDaysSinceInitiallyDiscoveredChanged();
    partial void OnDaysSinceLastDiscoveredChanging(short value);
    partial void OnDaysSinceLastDiscoveredChanged();
    partial void OnStrengthChanging(double value);
    partial void OnStrengthChanged();
    partial void OnRankChanging(short value);
    partial void OnRankChanged();
    partial void OnDenseRankChanging(short value);
    partial void OnDenseRankChanged();
    partial void OnNTileChanging(byte value);
    partial void OnNTileChanged();
    #endregion
		
		public Exceptions_COUNT_BY_SOURCE()
		{
			OnCreated();
		}
		
		[Column(Storage="_RowNumber", DbType="SmallInt NOT NULL")]
		public short RowNumber
		{
			get
			{
				return this._RowNumber;
			}
			set
			{
				if ((this._RowNumber != value))
				{
					this.OnRowNumberChanging(value);
					this.SendPropertyChanging();
					this._RowNumber = value;
					this.SendPropertyChanged("RowNumber");
					this.OnRowNumberChanged();
				}
			}
		}
		
		[Column(Storage="_InitiallyCreated", DbType="DateTime NOT NULL")]
		public System.DateTime InitiallyCreated
		{
			get
			{
				return this._InitiallyCreated;
			}
			set
			{
				if ((this._InitiallyCreated != value))
				{
					this.OnInitiallyCreatedChanging(value);
					this.SendPropertyChanging();
					this._InitiallyCreated = value;
					this.SendPropertyChanged("InitiallyCreated");
					this.OnInitiallyCreatedChanged();
				}
			}
		}
		
		[Column(Storage="_LastCreated", DbType="DateTime NOT NULL")]
		public System.DateTime LastCreated
		{
			get
			{
				return this._LastCreated;
			}
			set
			{
				if ((this._LastCreated != value))
				{
					this.OnLastCreatedChanging(value);
					this.SendPropertyChanging();
					this._LastCreated = value;
					this.SendPropertyChanged("LastCreated");
					this.OnLastCreatedChanged();
				}
			}
		}
		
		[Column(Storage="_Source", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Source
		{
			get
			{
				return this._Source;
			}
			set
			{
				if ((this._Source != value))
				{
					this.OnSourceChanging(value);
					this.SendPropertyChanging();
					this._Source = value;
					this.SendPropertyChanged("Source");
					this.OnSourceChanged();
				}
			}
		}
		
		[Column(Storage="_Count", DbType="Int NOT NULL")]
		public int Count
		{
			get
			{
				return this._Count;
			}
			set
			{
				if ((this._Count != value))
				{
					this.OnCountChanging(value);
					this.SendPropertyChanging();
					this._Count = value;
					this.SendPropertyChanged("Count");
					this.OnCountChanged();
				}
			}
		}
		
		[Column(Storage="_DaysSinceInitiallyDiscovered", DbType="SmallInt NOT NULL")]
		public short DaysSinceInitiallyDiscovered
		{
			get
			{
				return this._DaysSinceInitiallyDiscovered;
			}
			set
			{
				if ((this._DaysSinceInitiallyDiscovered != value))
				{
					this.OnDaysSinceInitiallyDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._DaysSinceInitiallyDiscovered = value;
					this.SendPropertyChanged("DaysSinceInitiallyDiscovered");
					this.OnDaysSinceInitiallyDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_DaysSinceLastDiscovered", DbType="SmallInt NOT NULL")]
		public short DaysSinceLastDiscovered
		{
			get
			{
				return this._DaysSinceLastDiscovered;
			}
			set
			{
				if ((this._DaysSinceLastDiscovered != value))
				{
					this.OnDaysSinceLastDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._DaysSinceLastDiscovered = value;
					this.SendPropertyChanged("DaysSinceLastDiscovered");
					this.OnDaysSinceLastDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_Strength", DbType="Float NOT NULL")]
		public double Strength
		{
			get
			{
				return this._Strength;
			}
			set
			{
				if ((this._Strength != value))
				{
					this.OnStrengthChanging(value);
					this.SendPropertyChanging();
					this._Strength = value;
					this.SendPropertyChanged("Strength");
					this.OnStrengthChanged();
				}
			}
		}
		
		[Column(Storage="_Rank", DbType="SmallInt NOT NULL")]
		public short Rank
		{
			get
			{
				return this._Rank;
			}
			set
			{
				if ((this._Rank != value))
				{
					this.OnRankChanging(value);
					this.SendPropertyChanging();
					this._Rank = value;
					this.SendPropertyChanged("Rank");
					this.OnRankChanged();
				}
			}
		}
		
		[Column(Storage="_DenseRank", DbType="SmallInt NOT NULL")]
		public short DenseRank
		{
			get
			{
				return this._DenseRank;
			}
			set
			{
				if ((this._DenseRank != value))
				{
					this.OnDenseRankChanging(value);
					this.SendPropertyChanging();
					this._DenseRank = value;
					this.SendPropertyChanged("DenseRank");
					this.OnDenseRankChanged();
				}
			}
		}
		
		[Column(Storage="_NTile", DbType="TinyInt NOT NULL")]
		public byte NTile
		{
			get
			{
				return this._NTile;
			}
			set
			{
				if ((this._NTile != value))
				{
					this.OnNTileChanging(value);
					this.SendPropertyChanging();
					this._NTile = value;
					this.SendPropertyChanged("NTile");
					this.OnNTileChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="rpt.Files_COUNT_BY_ABSOLUTEURI")]
	public partial class Files_COUNT_BY_ABSOLUTEURI : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RowNumber;
		
		private long _FileID;
		
		private int _Count;
		
		private int _Rank;
		
		private int _DenseRank;
		
		private byte _NTile;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRowNumberChanging(int value);
    partial void OnRowNumberChanged();
    partial void OnFileIDChanging(long value);
    partial void OnFileIDChanged();
    partial void OnCountChanging(int value);
    partial void OnCountChanged();
    partial void OnRankChanging(int value);
    partial void OnRankChanged();
    partial void OnDenseRankChanging(int value);
    partial void OnDenseRankChanged();
    partial void OnNTileChanging(byte value);
    partial void OnNTileChanged();
    #endregion
		
		public Files_COUNT_BY_ABSOLUTEURI()
		{
			OnCreated();
		}
		
		[Column(Storage="_RowNumber", DbType="Int NOT NULL")]
		public int RowNumber
		{
			get
			{
				return this._RowNumber;
			}
			set
			{
				if ((this._RowNumber != value))
				{
					this.OnRowNumberChanging(value);
					this.SendPropertyChanging();
					this._RowNumber = value;
					this.SendPropertyChanged("RowNumber");
					this.OnRowNumberChanged();
				}
			}
		}
		
		[Column(Storage="_FileID", DbType="BigInt NOT NULL", IsPrimaryKey=true)]
		public long FileID
		{
			get
			{
				return this._FileID;
			}
			set
			{
				if ((this._FileID != value))
				{
					this.OnFileIDChanging(value);
					this.SendPropertyChanging();
					this._FileID = value;
					this.SendPropertyChanged("FileID");
					this.OnFileIDChanged();
				}
			}
		}
		
		[Column(Storage="_Count", DbType="Int NOT NULL")]
		public int Count
		{
			get
			{
				return this._Count;
			}
			set
			{
				if ((this._Count != value))
				{
					this.OnCountChanging(value);
					this.SendPropertyChanging();
					this._Count = value;
					this.SendPropertyChanged("Count");
					this.OnCountChanged();
				}
			}
		}
		
		[Column(Storage="_Rank", DbType="Int NOT NULL")]
		public int Rank
		{
			get
			{
				return this._Rank;
			}
			set
			{
				if ((this._Rank != value))
				{
					this.OnRankChanging(value);
					this.SendPropertyChanging();
					this._Rank = value;
					this.SendPropertyChanged("Rank");
					this.OnRankChanged();
				}
			}
		}
		
		[Column(Storage="_DenseRank", DbType="Int NOT NULL")]
		public int DenseRank
		{
			get
			{
				return this._DenseRank;
			}
			set
			{
				if ((this._DenseRank != value))
				{
					this.OnDenseRankChanging(value);
					this.SendPropertyChanging();
					this._DenseRank = value;
					this.SendPropertyChanged("DenseRank");
					this.OnDenseRankChanged();
				}
			}
		}
		
		[Column(Storage="_NTile", DbType="TinyInt NOT NULL")]
		public byte NTile
		{
			get
			{
				return this._NTile;
			}
			set
			{
				if ((this._NTile != value))
				{
					this.OnNTileChanging(value);
					this.SendPropertyChanging();
					this._NTile = value;
					this.SendPropertyChanged("NTile");
					this.OnNTileChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="rpt.Files_MOST_POPULAR_SCHEMES_BY_SCHEMES")]
	public partial class Files_MOST_POPULAR_SCHEMES_BY_SCHEME : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RowNumber;
		
		private System.Nullable<System.DateTime> _InitiallyDiscovered;
		
		private System.DateTime _LastDiscovered;
		
		private int _SchemeID;
		
		private int _Count;
		
		private System.Nullable<short> _DaysSinceInitiallyDiscovered;
		
		private short _DaysSinceLastDiscovered;
		
		private System.Nullable<double> _Strength;
		
		private int _Rank;
		
		private int _DenseRank;
		
		private short _NTile;
		
		private EntityRef<Scheme> _Scheme;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRowNumberChanging(int value);
    partial void OnRowNumberChanged();
    partial void OnInitiallyDiscoveredChanging(System.Nullable<System.DateTime> value);
    partial void OnInitiallyDiscoveredChanged();
    partial void OnLastDiscoveredChanging(System.DateTime value);
    partial void OnLastDiscoveredChanged();
    partial void OnSchemeIDChanging(int value);
    partial void OnSchemeIDChanged();
    partial void OnCountChanging(int value);
    partial void OnCountChanged();
    partial void OnDaysSinceInitiallyDiscoveredChanging(System.Nullable<short> value);
    partial void OnDaysSinceInitiallyDiscoveredChanged();
    partial void OnDaysSinceLastDiscoveredChanging(short value);
    partial void OnDaysSinceLastDiscoveredChanged();
    partial void OnStrengthChanging(System.Nullable<double> value);
    partial void OnStrengthChanged();
    partial void OnRankChanging(int value);
    partial void OnRankChanged();
    partial void OnDenseRankChanging(int value);
    partial void OnDenseRankChanged();
    partial void OnNTileChanging(short value);
    partial void OnNTileChanged();
    #endregion
		
		public Files_MOST_POPULAR_SCHEMES_BY_SCHEME()
		{
			this._Scheme = default(EntityRef<Scheme>);
			OnCreated();
		}
		
		[Column(Storage="_RowNumber", DbType="Int NOT NULL")]
		public int RowNumber
		{
			get
			{
				return this._RowNumber;
			}
			set
			{
				if ((this._RowNumber != value))
				{
					this.OnRowNumberChanging(value);
					this.SendPropertyChanging();
					this._RowNumber = value;
					this.SendPropertyChanged("RowNumber");
					this.OnRowNumberChanged();
				}
			}
		}
		
		[Column(Storage="_InitiallyDiscovered", DbType="DateTime")]
		public System.Nullable<System.DateTime> InitiallyDiscovered
		{
			get
			{
				return this._InitiallyDiscovered;
			}
			set
			{
				if ((this._InitiallyDiscovered != value))
				{
					this.OnInitiallyDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._InitiallyDiscovered = value;
					this.SendPropertyChanged("InitiallyDiscovered");
					this.OnInitiallyDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_LastDiscovered", DbType="DateTime NOT NULL")]
		public System.DateTime LastDiscovered
		{
			get
			{
				return this._LastDiscovered;
			}
			set
			{
				if ((this._LastDiscovered != value))
				{
					this.OnLastDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._LastDiscovered = value;
					this.SendPropertyChanged("LastDiscovered");
					this.OnLastDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_SchemeID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int SchemeID
		{
			get
			{
				return this._SchemeID;
			}
			set
			{
				if ((this._SchemeID != value))
				{
					if (this._Scheme.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSchemeIDChanging(value);
					this.SendPropertyChanging();
					this._SchemeID = value;
					this.SendPropertyChanged("SchemeID");
					this.OnSchemeIDChanged();
				}
			}
		}
		
		[Column(Storage="_Count", DbType="Int NOT NULL")]
		public int Count
		{
			get
			{
				return this._Count;
			}
			set
			{
				if ((this._Count != value))
				{
					this.OnCountChanging(value);
					this.SendPropertyChanging();
					this._Count = value;
					this.SendPropertyChanged("Count");
					this.OnCountChanged();
				}
			}
		}
		
		[Column(Storage="_DaysSinceInitiallyDiscovered", DbType="SmallInt")]
		public System.Nullable<short> DaysSinceInitiallyDiscovered
		{
			get
			{
				return this._DaysSinceInitiallyDiscovered;
			}
			set
			{
				if ((this._DaysSinceInitiallyDiscovered != value))
				{
					this.OnDaysSinceInitiallyDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._DaysSinceInitiallyDiscovered = value;
					this.SendPropertyChanged("DaysSinceInitiallyDiscovered");
					this.OnDaysSinceInitiallyDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_DaysSinceLastDiscovered", DbType="SmallInt NOT NULL")]
		public short DaysSinceLastDiscovered
		{
			get
			{
				return this._DaysSinceLastDiscovered;
			}
			set
			{
				if ((this._DaysSinceLastDiscovered != value))
				{
					this.OnDaysSinceLastDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._DaysSinceLastDiscovered = value;
					this.SendPropertyChanged("DaysSinceLastDiscovered");
					this.OnDaysSinceLastDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_Strength", DbType="Float")]
		public System.Nullable<double> Strength
		{
			get
			{
				return this._Strength;
			}
			set
			{
				if ((this._Strength != value))
				{
					this.OnStrengthChanging(value);
					this.SendPropertyChanging();
					this._Strength = value;
					this.SendPropertyChanged("Strength");
					this.OnStrengthChanged();
				}
			}
		}
		
		[Column(Storage="_Rank", DbType="Int NOT NULL")]
		public int Rank
		{
			get
			{
				return this._Rank;
			}
			set
			{
				if ((this._Rank != value))
				{
					this.OnRankChanging(value);
					this.SendPropertyChanging();
					this._Rank = value;
					this.SendPropertyChanged("Rank");
					this.OnRankChanged();
				}
			}
		}
		
		[Column(Storage="_DenseRank", DbType="Int NOT NULL")]
		public int DenseRank
		{
			get
			{
				return this._DenseRank;
			}
			set
			{
				if ((this._DenseRank != value))
				{
					this.OnDenseRankChanging(value);
					this.SendPropertyChanging();
					this._DenseRank = value;
					this.SendPropertyChanged("DenseRank");
					this.OnDenseRankChanged();
				}
			}
		}
		
		[Column(Storage="_NTile", DbType="SmallInt NOT NULL")]
		public short NTile
		{
			get
			{
				return this._NTile;
			}
			set
			{
				if ((this._NTile != value))
				{
					this.OnNTileChanging(value);
					this.SendPropertyChanging();
					this._NTile = value;
					this.SendPropertyChanged("NTile");
					this.OnNTileChanged();
				}
			}
		}
		
		[Association(Name="Scheme_Files_MOST_POPULAR_SCHEMES_BY_SCHEME", Storage="_Scheme", ThisKey="SchemeID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Scheme Scheme
		{
			get
			{
				return this._Scheme.Entity;
			}
			set
			{
				Scheme previousValue = this._Scheme.Entity;
				if (((previousValue != value) 
							|| (this._Scheme.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Scheme.Entity = null;
						previousValue.Files_MOST_POPULAR_SCHEMES_BY_SCHEME = null;
					}
					this._Scheme.Entity = value;
					if ((value != null))
					{
						value.Files_MOST_POPULAR_SCHEMES_BY_SCHEME = this;
						this._SchemeID = value.ID;
					}
					else
					{
						this._SchemeID = default(int);
					}
					this.SendPropertyChanged("Scheme");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="rpt.Files_COUNT_BY_DOMAIN")]
	public partial class Files_COUNT_BY_DOMAIN : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RowNumber;
		
		private int _DomainID;
		
		private int _Count;
		
		private int _Rank;
		
		private int _DenseRank;
		
		private byte _NTile;
		
		private EntityRef<Domain> _Domain;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRowNumberChanging(int value);
    partial void OnRowNumberChanged();
    partial void OnDomainIDChanging(int value);
    partial void OnDomainIDChanged();
    partial void OnCountChanging(int value);
    partial void OnCountChanged();
    partial void OnRankChanging(int value);
    partial void OnRankChanged();
    partial void OnDenseRankChanging(int value);
    partial void OnDenseRankChanged();
    partial void OnNTileChanging(byte value);
    partial void OnNTileChanged();
    #endregion
		
		public Files_COUNT_BY_DOMAIN()
		{
			this._Domain = default(EntityRef<Domain>);
			OnCreated();
		}
		
		[Column(Storage="_RowNumber", DbType="Int NOT NULL")]
		public int RowNumber
		{
			get
			{
				return this._RowNumber;
			}
			set
			{
				if ((this._RowNumber != value))
				{
					this.OnRowNumberChanging(value);
					this.SendPropertyChanging();
					this._RowNumber = value;
					this.SendPropertyChanged("RowNumber");
					this.OnRowNumberChanged();
				}
			}
		}
		
		[Column(Storage="_DomainID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int DomainID
		{
			get
			{
				return this._DomainID;
			}
			set
			{
				if ((this._DomainID != value))
				{
					if (this._Domain.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDomainIDChanging(value);
					this.SendPropertyChanging();
					this._DomainID = value;
					this.SendPropertyChanged("DomainID");
					this.OnDomainIDChanged();
				}
			}
		}
		
		[Column(Storage="_Count", DbType="Int NOT NULL")]
		public int Count
		{
			get
			{
				return this._Count;
			}
			set
			{
				if ((this._Count != value))
				{
					this.OnCountChanging(value);
					this.SendPropertyChanging();
					this._Count = value;
					this.SendPropertyChanged("Count");
					this.OnCountChanged();
				}
			}
		}
		
		[Column(Storage="_Rank", DbType="Int NOT NULL")]
		public int Rank
		{
			get
			{
				return this._Rank;
			}
			set
			{
				if ((this._Rank != value))
				{
					this.OnRankChanging(value);
					this.SendPropertyChanging();
					this._Rank = value;
					this.SendPropertyChanged("Rank");
					this.OnRankChanged();
				}
			}
		}
		
		[Column(Storage="_DenseRank", DbType="Int NOT NULL")]
		public int DenseRank
		{
			get
			{
				return this._DenseRank;
			}
			set
			{
				if ((this._DenseRank != value))
				{
					this.OnDenseRankChanging(value);
					this.SendPropertyChanging();
					this._DenseRank = value;
					this.SendPropertyChanged("DenseRank");
					this.OnDenseRankChanged();
				}
			}
		}
		
		[Column(Storage="_NTile", DbType="TinyInt NOT NULL")]
		public byte NTile
		{
			get
			{
				return this._NTile;
			}
			set
			{
				if ((this._NTile != value))
				{
					this.OnNTileChanging(value);
					this.SendPropertyChanging();
					this._NTile = value;
					this.SendPropertyChanged("NTile");
					this.OnNTileChanged();
				}
			}
		}
		
		[Association(Name="Domain_Files_COUNT_BY_DOMAIN", Storage="_Domain", ThisKey="DomainID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Domain Domain
		{
			get
			{
				return this._Domain.Entity;
			}
			set
			{
				Domain previousValue = this._Domain.Entity;
				if (((previousValue != value) 
							|| (this._Domain.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Domain.Entity = null;
						previousValue.Files_COUNT_BY_DOMAIN = null;
					}
					this._Domain.Entity = value;
					if ((value != null))
					{
						value.Files_COUNT_BY_DOMAIN = this;
						this._DomainID = value.ID;
					}
					else
					{
						this._DomainID = default(int);
					}
					this.SendPropertyChanged("Domain");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="rpt.Files_COUNT_BY_EXTENSION")]
	public partial class Files_COUNT_BY_EXTENSION : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RowNumber;
		
		private int _ExtensionID;
		
		private int _Count;
		
		private int _Rank;
		
		private int _DenseRank;
		
		private byte _NTile;
		
		private EntityRef<Extension> _Extension;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRowNumberChanging(int value);
    partial void OnRowNumberChanged();
    partial void OnExtensionIDChanging(int value);
    partial void OnExtensionIDChanged();
    partial void OnCountChanging(int value);
    partial void OnCountChanged();
    partial void OnRankChanging(int value);
    partial void OnRankChanged();
    partial void OnDenseRankChanging(int value);
    partial void OnDenseRankChanged();
    partial void OnNTileChanging(byte value);
    partial void OnNTileChanged();
    #endregion
		
		public Files_COUNT_BY_EXTENSION()
		{
			this._Extension = default(EntityRef<Extension>);
			OnCreated();
		}
		
		[Column(Storage="_RowNumber", DbType="Int NOT NULL")]
		public int RowNumber
		{
			get
			{
				return this._RowNumber;
			}
			set
			{
				if ((this._RowNumber != value))
				{
					this.OnRowNumberChanging(value);
					this.SendPropertyChanging();
					this._RowNumber = value;
					this.SendPropertyChanged("RowNumber");
					this.OnRowNumberChanged();
				}
			}
		}
		
		[Column(Storage="_ExtensionID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ExtensionID
		{
			get
			{
				return this._ExtensionID;
			}
			set
			{
				if ((this._ExtensionID != value))
				{
					if (this._Extension.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnExtensionIDChanging(value);
					this.SendPropertyChanging();
					this._ExtensionID = value;
					this.SendPropertyChanged("ExtensionID");
					this.OnExtensionIDChanged();
				}
			}
		}
		
		[Column(Storage="_Count", DbType="Int NOT NULL")]
		public int Count
		{
			get
			{
				return this._Count;
			}
			set
			{
				if ((this._Count != value))
				{
					this.OnCountChanging(value);
					this.SendPropertyChanging();
					this._Count = value;
					this.SendPropertyChanged("Count");
					this.OnCountChanged();
				}
			}
		}
		
		[Column(Storage="_Rank", DbType="Int NOT NULL")]
		public int Rank
		{
			get
			{
				return this._Rank;
			}
			set
			{
				if ((this._Rank != value))
				{
					this.OnRankChanging(value);
					this.SendPropertyChanging();
					this._Rank = value;
					this.SendPropertyChanged("Rank");
					this.OnRankChanged();
				}
			}
		}
		
		[Column(Storage="_DenseRank", DbType="Int NOT NULL")]
		public int DenseRank
		{
			get
			{
				return this._DenseRank;
			}
			set
			{
				if ((this._DenseRank != value))
				{
					this.OnDenseRankChanging(value);
					this.SendPropertyChanging();
					this._DenseRank = value;
					this.SendPropertyChanged("DenseRank");
					this.OnDenseRankChanged();
				}
			}
		}
		
		[Column(Storage="_NTile", DbType="TinyInt NOT NULL")]
		public byte NTile
		{
			get
			{
				return this._NTile;
			}
			set
			{
				if ((this._NTile != value))
				{
					this.OnNTileChanging(value);
					this.SendPropertyChanging();
					this._NTile = value;
					this.SendPropertyChanged("NTile");
					this.OnNTileChanged();
				}
			}
		}
		
		[Association(Name="Extension_Files_COUNT_BY_EXTENSION", Storage="_Extension", ThisKey="ExtensionID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Extension Extension
		{
			get
			{
				return this._Extension.Entity;
			}
			set
			{
				Extension previousValue = this._Extension.Entity;
				if (((previousValue != value) 
							|| (this._Extension.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Extension.Entity = null;
						previousValue.Files_COUNT_BY_EXTENSION = null;
					}
					this._Extension.Entity = value;
					if ((value != null))
					{
						value.Files_COUNT_BY_EXTENSION = this;
						this._ExtensionID = value.ID;
					}
					else
					{
						this._ExtensionID = default(int);
					}
					this.SendPropertyChanged("Extension");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="rpt.Files_COUNT_BY_FULLTEXTINDEXTYPE")]
	public partial class Files_COUNT_BY_FULLTEXTINDEXTYPE : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RowNumber;
		
		private string _FullTextIndexType;
		
		private int _Count;
		
		private int _Rank;
		
		private int _DenseRank;
		
		private byte _NTile;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRowNumberChanging(int value);
    partial void OnRowNumberChanged();
    partial void OnFullTextIndexTypeChanging(string value);
    partial void OnFullTextIndexTypeChanged();
    partial void OnCountChanging(int value);
    partial void OnCountChanged();
    partial void OnRankChanging(int value);
    partial void OnRankChanged();
    partial void OnDenseRankChanging(int value);
    partial void OnDenseRankChanged();
    partial void OnNTileChanging(byte value);
    partial void OnNTileChanged();
    #endregion
		
		public Files_COUNT_BY_FULLTEXTINDEXTYPE()
		{
			OnCreated();
		}
		
		[Column(Storage="_RowNumber", DbType="Int NOT NULL")]
		public int RowNumber
		{
			get
			{
				return this._RowNumber;
			}
			set
			{
				if ((this._RowNumber != value))
				{
					this.OnRowNumberChanging(value);
					this.SendPropertyChanging();
					this._RowNumber = value;
					this.SendPropertyChanged("RowNumber");
					this.OnRowNumberChanged();
				}
			}
		}
		
		[Column(Storage="_FullTextIndexType", DbType="VarChar(20) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string FullTextIndexType
		{
			get
			{
				return this._FullTextIndexType;
			}
			set
			{
				if ((this._FullTextIndexType != value))
				{
					this.OnFullTextIndexTypeChanging(value);
					this.SendPropertyChanging();
					this._FullTextIndexType = value;
					this.SendPropertyChanged("FullTextIndexType");
					this.OnFullTextIndexTypeChanged();
				}
			}
		}
		
		[Column(Storage="_Count", DbType="Int NOT NULL")]
		public int Count
		{
			get
			{
				return this._Count;
			}
			set
			{
				if ((this._Count != value))
				{
					this.OnCountChanging(value);
					this.SendPropertyChanging();
					this._Count = value;
					this.SendPropertyChanged("Count");
					this.OnCountChanged();
				}
			}
		}
		
		[Column(Storage="_Rank", DbType="Int NOT NULL")]
		public int Rank
		{
			get
			{
				return this._Rank;
			}
			set
			{
				if ((this._Rank != value))
				{
					this.OnRankChanging(value);
					this.SendPropertyChanging();
					this._Rank = value;
					this.SendPropertyChanged("Rank");
					this.OnRankChanged();
				}
			}
		}
		
		[Column(Storage="_DenseRank", DbType="Int NOT NULL")]
		public int DenseRank
		{
			get
			{
				return this._DenseRank;
			}
			set
			{
				if ((this._DenseRank != value))
				{
					this.OnDenseRankChanging(value);
					this.SendPropertyChanging();
					this._DenseRank = value;
					this.SendPropertyChanged("DenseRank");
					this.OnDenseRankChanged();
				}
			}
		}
		
		[Column(Storage="_NTile", DbType="TinyInt NOT NULL")]
		public byte NTile
		{
			get
			{
				return this._NTile;
			}
			set
			{
				if ((this._NTile != value))
				{
					this.OnNTileChanging(value);
					this.SendPropertyChanging();
					this._NTile = value;
					this.SendPropertyChanged("NTile");
					this.OnNTileChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="rpt.Files_COUNT_BY_HOST")]
	public partial class Files_COUNT_BY_HOST : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RowNumber;
		
		private int _HostID;
		
		private int _Count;
		
		private int _Rank;
		
		private int _DenseRank;
		
		private byte _NTile;
		
		private EntityRef<Host> _Host;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRowNumberChanging(int value);
    partial void OnRowNumberChanged();
    partial void OnHostIDChanging(int value);
    partial void OnHostIDChanged();
    partial void OnCountChanging(int value);
    partial void OnCountChanged();
    partial void OnRankChanging(int value);
    partial void OnRankChanged();
    partial void OnDenseRankChanging(int value);
    partial void OnDenseRankChanged();
    partial void OnNTileChanging(byte value);
    partial void OnNTileChanged();
    #endregion
		
		public Files_COUNT_BY_HOST()
		{
			this._Host = default(EntityRef<Host>);
			OnCreated();
		}
		
		[Column(Storage="_RowNumber", DbType="Int NOT NULL")]
		public int RowNumber
		{
			get
			{
				return this._RowNumber;
			}
			set
			{
				if ((this._RowNumber != value))
				{
					this.OnRowNumberChanging(value);
					this.SendPropertyChanging();
					this._RowNumber = value;
					this.SendPropertyChanged("RowNumber");
					this.OnRowNumberChanged();
				}
			}
		}
		
		[Column(Storage="_HostID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int HostID
		{
			get
			{
				return this._HostID;
			}
			set
			{
				if ((this._HostID != value))
				{
					if (this._Host.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnHostIDChanging(value);
					this.SendPropertyChanging();
					this._HostID = value;
					this.SendPropertyChanged("HostID");
					this.OnHostIDChanged();
				}
			}
		}
		
		[Column(Storage="_Count", DbType="Int NOT NULL")]
		public int Count
		{
			get
			{
				return this._Count;
			}
			set
			{
				if ((this._Count != value))
				{
					this.OnCountChanging(value);
					this.SendPropertyChanging();
					this._Count = value;
					this.SendPropertyChanged("Count");
					this.OnCountChanged();
				}
			}
		}
		
		[Column(Storage="_Rank", DbType="Int NOT NULL")]
		public int Rank
		{
			get
			{
				return this._Rank;
			}
			set
			{
				if ((this._Rank != value))
				{
					this.OnRankChanging(value);
					this.SendPropertyChanging();
					this._Rank = value;
					this.SendPropertyChanged("Rank");
					this.OnRankChanged();
				}
			}
		}
		
		[Column(Storage="_DenseRank", DbType="Int NOT NULL")]
		public int DenseRank
		{
			get
			{
				return this._DenseRank;
			}
			set
			{
				if ((this._DenseRank != value))
				{
					this.OnDenseRankChanging(value);
					this.SendPropertyChanging();
					this._DenseRank = value;
					this.SendPropertyChanged("DenseRank");
					this.OnDenseRankChanged();
				}
			}
		}
		
		[Column(Storage="_NTile", DbType="TinyInt NOT NULL")]
		public byte NTile
		{
			get
			{
				return this._NTile;
			}
			set
			{
				if ((this._NTile != value))
				{
					this.OnNTileChanging(value);
					this.SendPropertyChanging();
					this._NTile = value;
					this.SendPropertyChanged("NTile");
					this.OnNTileChanged();
				}
			}
		}
		
		[Association(Name="Host_Files_COUNT_BY_HOST", Storage="_Host", ThisKey="HostID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Host Host
		{
			get
			{
				return this._Host.Entity;
			}
			set
			{
				Host previousValue = this._Host.Entity;
				if (((previousValue != value) 
							|| (this._Host.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Host.Entity = null;
						previousValue.Files_COUNT_BY_HOST = null;
					}
					this._Host.Entity = value;
					if ((value != null))
					{
						value.Files_COUNT_BY_HOST = this;
						this._HostID = value.ID;
					}
					else
					{
						this._HostID = default(int);
					}
					this.SendPropertyChanged("Host");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="rpt.Files_COUNT_BY_SCHEME")]
	public partial class Files_COUNT_BY_SCHEME : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RowNumber;
		
		private int _SchemeID;
		
		private int _Count;
		
		private int _Rank;
		
		private int _DenseRank;
		
		private byte _NTile;
		
		private EntityRef<Scheme> _Scheme;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRowNumberChanging(int value);
    partial void OnRowNumberChanged();
    partial void OnSchemeIDChanging(int value);
    partial void OnSchemeIDChanged();
    partial void OnCountChanging(int value);
    partial void OnCountChanged();
    partial void OnRankChanging(int value);
    partial void OnRankChanged();
    partial void OnDenseRankChanging(int value);
    partial void OnDenseRankChanged();
    partial void OnNTileChanging(byte value);
    partial void OnNTileChanged();
    #endregion
		
		public Files_COUNT_BY_SCHEME()
		{
			this._Scheme = default(EntityRef<Scheme>);
			OnCreated();
		}
		
		[Column(Storage="_RowNumber", DbType="Int NOT NULL")]
		public int RowNumber
		{
			get
			{
				return this._RowNumber;
			}
			set
			{
				if ((this._RowNumber != value))
				{
					this.OnRowNumberChanging(value);
					this.SendPropertyChanging();
					this._RowNumber = value;
					this.SendPropertyChanged("RowNumber");
					this.OnRowNumberChanged();
				}
			}
		}
		
		[Column(Storage="_SchemeID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int SchemeID
		{
			get
			{
				return this._SchemeID;
			}
			set
			{
				if ((this._SchemeID != value))
				{
					if (this._Scheme.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSchemeIDChanging(value);
					this.SendPropertyChanging();
					this._SchemeID = value;
					this.SendPropertyChanged("SchemeID");
					this.OnSchemeIDChanged();
				}
			}
		}
		
		[Column(Storage="_Count", DbType="Int NOT NULL")]
		public int Count
		{
			get
			{
				return this._Count;
			}
			set
			{
				if ((this._Count != value))
				{
					this.OnCountChanging(value);
					this.SendPropertyChanging();
					this._Count = value;
					this.SendPropertyChanged("Count");
					this.OnCountChanged();
				}
			}
		}
		
		[Column(Storage="_Rank", DbType="Int NOT NULL")]
		public int Rank
		{
			get
			{
				return this._Rank;
			}
			set
			{
				if ((this._Rank != value))
				{
					this.OnRankChanging(value);
					this.SendPropertyChanging();
					this._Rank = value;
					this.SendPropertyChanged("Rank");
					this.OnRankChanged();
				}
			}
		}
		
		[Column(Storage="_DenseRank", DbType="Int NOT NULL")]
		public int DenseRank
		{
			get
			{
				return this._DenseRank;
			}
			set
			{
				if ((this._DenseRank != value))
				{
					this.OnDenseRankChanging(value);
					this.SendPropertyChanging();
					this._DenseRank = value;
					this.SendPropertyChanged("DenseRank");
					this.OnDenseRankChanged();
				}
			}
		}
		
		[Column(Storage="_NTile", DbType="TinyInt NOT NULL")]
		public byte NTile
		{
			get
			{
				return this._NTile;
			}
			set
			{
				if ((this._NTile != value))
				{
					this.OnNTileChanging(value);
					this.SendPropertyChanging();
					this._NTile = value;
					this.SendPropertyChanged("NTile");
					this.OnNTileChanged();
				}
			}
		}
		
		[Association(Name="Scheme_Files_COUNT_BY_SCHEME", Storage="_Scheme", ThisKey="SchemeID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Scheme Scheme
		{
			get
			{
				return this._Scheme.Entity;
			}
			set
			{
				Scheme previousValue = this._Scheme.Entity;
				if (((previousValue != value) 
							|| (this._Scheme.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Scheme.Entity = null;
						previousValue.Files_COUNT_BY_SCHEME = null;
					}
					this._Scheme.Entity = value;
					if ((value != null))
					{
						value.Files_COUNT_BY_SCHEME = this;
						this._SchemeID = value.ID;
					}
					else
					{
						this._SchemeID = default(int);
					}
					this.SendPropertyChanged("Scheme");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="rpt.Files_MOST_POPULAR_ABSOLUTEURIS_BY_ABSOLUTEURIS")]
	public partial class Files_MOST_POPULAR_ABSOLUTEURIS_BY_ABSOLUTEURI : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RowNumber;
		
		private System.Nullable<System.DateTime> _InitiallyDiscovered;
		
		private System.DateTime _LastDiscovered;
		
		private long _FileID;
		
		private int _Count;
		
		private System.Nullable<short> _DaysSinceInitiallyDiscovered;
		
		private short _DaysSinceLastDiscovered;
		
		private System.Nullable<double> _Strength;
		
		private int _Rank;
		
		private int _DenseRank;
		
		private byte _NTile;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRowNumberChanging(int value);
    partial void OnRowNumberChanged();
    partial void OnInitiallyDiscoveredChanging(System.Nullable<System.DateTime> value);
    partial void OnInitiallyDiscoveredChanged();
    partial void OnLastDiscoveredChanging(System.DateTime value);
    partial void OnLastDiscoveredChanged();
    partial void OnFileIDChanging(long value);
    partial void OnFileIDChanged();
    partial void OnCountChanging(int value);
    partial void OnCountChanged();
    partial void OnDaysSinceInitiallyDiscoveredChanging(System.Nullable<short> value);
    partial void OnDaysSinceInitiallyDiscoveredChanged();
    partial void OnDaysSinceLastDiscoveredChanging(short value);
    partial void OnDaysSinceLastDiscoveredChanged();
    partial void OnStrengthChanging(System.Nullable<double> value);
    partial void OnStrengthChanged();
    partial void OnRankChanging(int value);
    partial void OnRankChanged();
    partial void OnDenseRankChanging(int value);
    partial void OnDenseRankChanged();
    partial void OnNTileChanging(byte value);
    partial void OnNTileChanged();
    #endregion
		
		public Files_MOST_POPULAR_ABSOLUTEURIS_BY_ABSOLUTEURI()
		{
			OnCreated();
		}
		
		[Column(Storage="_RowNumber", DbType="Int NOT NULL")]
		public int RowNumber
		{
			get
			{
				return this._RowNumber;
			}
			set
			{
				if ((this._RowNumber != value))
				{
					this.OnRowNumberChanging(value);
					this.SendPropertyChanging();
					this._RowNumber = value;
					this.SendPropertyChanged("RowNumber");
					this.OnRowNumberChanged();
				}
			}
		}
		
		[Column(Storage="_InitiallyDiscovered", DbType="DateTime")]
		public System.Nullable<System.DateTime> InitiallyDiscovered
		{
			get
			{
				return this._InitiallyDiscovered;
			}
			set
			{
				if ((this._InitiallyDiscovered != value))
				{
					this.OnInitiallyDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._InitiallyDiscovered = value;
					this.SendPropertyChanged("InitiallyDiscovered");
					this.OnInitiallyDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_LastDiscovered", DbType="DateTime NOT NULL")]
		public System.DateTime LastDiscovered
		{
			get
			{
				return this._LastDiscovered;
			}
			set
			{
				if ((this._LastDiscovered != value))
				{
					this.OnLastDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._LastDiscovered = value;
					this.SendPropertyChanged("LastDiscovered");
					this.OnLastDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_FileID", DbType="BigInt NOT NULL", IsPrimaryKey=true)]
		public long FileID
		{
			get
			{
				return this._FileID;
			}
			set
			{
				if ((this._FileID != value))
				{
					this.OnFileIDChanging(value);
					this.SendPropertyChanging();
					this._FileID = value;
					this.SendPropertyChanged("FileID");
					this.OnFileIDChanged();
				}
			}
		}
		
		[Column(Storage="_Count", DbType="Int NOT NULL")]
		public int Count
		{
			get
			{
				return this._Count;
			}
			set
			{
				if ((this._Count != value))
				{
					this.OnCountChanging(value);
					this.SendPropertyChanging();
					this._Count = value;
					this.SendPropertyChanged("Count");
					this.OnCountChanged();
				}
			}
		}
		
		[Column(Storage="_DaysSinceInitiallyDiscovered", DbType="SmallInt")]
		public System.Nullable<short> DaysSinceInitiallyDiscovered
		{
			get
			{
				return this._DaysSinceInitiallyDiscovered;
			}
			set
			{
				if ((this._DaysSinceInitiallyDiscovered != value))
				{
					this.OnDaysSinceInitiallyDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._DaysSinceInitiallyDiscovered = value;
					this.SendPropertyChanged("DaysSinceInitiallyDiscovered");
					this.OnDaysSinceInitiallyDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_DaysSinceLastDiscovered", DbType="SmallInt NOT NULL")]
		public short DaysSinceLastDiscovered
		{
			get
			{
				return this._DaysSinceLastDiscovered;
			}
			set
			{
				if ((this._DaysSinceLastDiscovered != value))
				{
					this.OnDaysSinceLastDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._DaysSinceLastDiscovered = value;
					this.SendPropertyChanged("DaysSinceLastDiscovered");
					this.OnDaysSinceLastDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_Strength", DbType="Float")]
		public System.Nullable<double> Strength
		{
			get
			{
				return this._Strength;
			}
			set
			{
				if ((this._Strength != value))
				{
					this.OnStrengthChanging(value);
					this.SendPropertyChanging();
					this._Strength = value;
					this.SendPropertyChanged("Strength");
					this.OnStrengthChanged();
				}
			}
		}
		
		[Column(Storage="_Rank", DbType="Int NOT NULL")]
		public int Rank
		{
			get
			{
				return this._Rank;
			}
			set
			{
				if ((this._Rank != value))
				{
					this.OnRankChanging(value);
					this.SendPropertyChanging();
					this._Rank = value;
					this.SendPropertyChanged("Rank");
					this.OnRankChanged();
				}
			}
		}
		
		[Column(Storage="_DenseRank", DbType="Int NOT NULL")]
		public int DenseRank
		{
			get
			{
				return this._DenseRank;
			}
			set
			{
				if ((this._DenseRank != value))
				{
					this.OnDenseRankChanging(value);
					this.SendPropertyChanging();
					this._DenseRank = value;
					this.SendPropertyChanged("DenseRank");
					this.OnDenseRankChanged();
				}
			}
		}
		
		[Column(Storage="_NTile", DbType="TinyInt NOT NULL")]
		public byte NTile
		{
			get
			{
				return this._NTile;
			}
			set
			{
				if ((this._NTile != value))
				{
					this.OnNTileChanging(value);
					this.SendPropertyChanging();
					this._NTile = value;
					this.SendPropertyChanged("NTile");
					this.OnNTileChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="rpt.Files_MOST_POPULAR_ABSOLUTEURIS_BY_DOMAINS")]
	public partial class Files_MOST_POPULAR_ABSOLUTEURIS_BY_DOMAIN : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RowNumber;
		
		private System.Nullable<System.DateTime> _InitiallyDiscovered;
		
		private System.DateTime _LastDiscovered;
		
		private long _FileID;
		
		private int _Count;
		
		private System.Nullable<short> _DaysSinceInitiallyDiscovered;
		
		private short _DaysSinceLastDiscovered;
		
		private System.Nullable<double> _Strength;
		
		private int _Rank;
		
		private int _DenseRank;
		
		private byte _NTile;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRowNumberChanging(int value);
    partial void OnRowNumberChanged();
    partial void OnInitiallyDiscoveredChanging(System.Nullable<System.DateTime> value);
    partial void OnInitiallyDiscoveredChanged();
    partial void OnLastDiscoveredChanging(System.DateTime value);
    partial void OnLastDiscoveredChanged();
    partial void OnFileIDChanging(long value);
    partial void OnFileIDChanged();
    partial void OnCountChanging(int value);
    partial void OnCountChanged();
    partial void OnDaysSinceInitiallyDiscoveredChanging(System.Nullable<short> value);
    partial void OnDaysSinceInitiallyDiscoveredChanged();
    partial void OnDaysSinceLastDiscoveredChanging(short value);
    partial void OnDaysSinceLastDiscoveredChanged();
    partial void OnStrengthChanging(System.Nullable<double> value);
    partial void OnStrengthChanged();
    partial void OnRankChanging(int value);
    partial void OnRankChanged();
    partial void OnDenseRankChanging(int value);
    partial void OnDenseRankChanged();
    partial void OnNTileChanging(byte value);
    partial void OnNTileChanged();
    #endregion
		
		public Files_MOST_POPULAR_ABSOLUTEURIS_BY_DOMAIN()
		{
			OnCreated();
		}
		
		[Column(Storage="_RowNumber", DbType="Int NOT NULL")]
		public int RowNumber
		{
			get
			{
				return this._RowNumber;
			}
			set
			{
				if ((this._RowNumber != value))
				{
					this.OnRowNumberChanging(value);
					this.SendPropertyChanging();
					this._RowNumber = value;
					this.SendPropertyChanged("RowNumber");
					this.OnRowNumberChanged();
				}
			}
		}
		
		[Column(Storage="_InitiallyDiscovered", DbType="DateTime")]
		public System.Nullable<System.DateTime> InitiallyDiscovered
		{
			get
			{
				return this._InitiallyDiscovered;
			}
			set
			{
				if ((this._InitiallyDiscovered != value))
				{
					this.OnInitiallyDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._InitiallyDiscovered = value;
					this.SendPropertyChanged("InitiallyDiscovered");
					this.OnInitiallyDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_LastDiscovered", DbType="DateTime NOT NULL")]
		public System.DateTime LastDiscovered
		{
			get
			{
				return this._LastDiscovered;
			}
			set
			{
				if ((this._LastDiscovered != value))
				{
					this.OnLastDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._LastDiscovered = value;
					this.SendPropertyChanged("LastDiscovered");
					this.OnLastDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_FileID", DbType="BigInt NOT NULL", IsPrimaryKey=true)]
		public long FileID
		{
			get
			{
				return this._FileID;
			}
			set
			{
				if ((this._FileID != value))
				{
					this.OnFileIDChanging(value);
					this.SendPropertyChanging();
					this._FileID = value;
					this.SendPropertyChanged("FileID");
					this.OnFileIDChanged();
				}
			}
		}
		
		[Column(Storage="_Count", DbType="Int NOT NULL")]
		public int Count
		{
			get
			{
				return this._Count;
			}
			set
			{
				if ((this._Count != value))
				{
					this.OnCountChanging(value);
					this.SendPropertyChanging();
					this._Count = value;
					this.SendPropertyChanged("Count");
					this.OnCountChanged();
				}
			}
		}
		
		[Column(Storage="_DaysSinceInitiallyDiscovered", DbType="SmallInt")]
		public System.Nullable<short> DaysSinceInitiallyDiscovered
		{
			get
			{
				return this._DaysSinceInitiallyDiscovered;
			}
			set
			{
				if ((this._DaysSinceInitiallyDiscovered != value))
				{
					this.OnDaysSinceInitiallyDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._DaysSinceInitiallyDiscovered = value;
					this.SendPropertyChanged("DaysSinceInitiallyDiscovered");
					this.OnDaysSinceInitiallyDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_DaysSinceLastDiscovered", DbType="SmallInt NOT NULL")]
		public short DaysSinceLastDiscovered
		{
			get
			{
				return this._DaysSinceLastDiscovered;
			}
			set
			{
				if ((this._DaysSinceLastDiscovered != value))
				{
					this.OnDaysSinceLastDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._DaysSinceLastDiscovered = value;
					this.SendPropertyChanged("DaysSinceLastDiscovered");
					this.OnDaysSinceLastDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_Strength", DbType="Float")]
		public System.Nullable<double> Strength
		{
			get
			{
				return this._Strength;
			}
			set
			{
				if ((this._Strength != value))
				{
					this.OnStrengthChanging(value);
					this.SendPropertyChanging();
					this._Strength = value;
					this.SendPropertyChanged("Strength");
					this.OnStrengthChanged();
				}
			}
		}
		
		[Column(Storage="_Rank", DbType="Int NOT NULL")]
		public int Rank
		{
			get
			{
				return this._Rank;
			}
			set
			{
				if ((this._Rank != value))
				{
					this.OnRankChanging(value);
					this.SendPropertyChanging();
					this._Rank = value;
					this.SendPropertyChanged("Rank");
					this.OnRankChanged();
				}
			}
		}
		
		[Column(Storage="_DenseRank", DbType="Int NOT NULL")]
		public int DenseRank
		{
			get
			{
				return this._DenseRank;
			}
			set
			{
				if ((this._DenseRank != value))
				{
					this.OnDenseRankChanging(value);
					this.SendPropertyChanging();
					this._DenseRank = value;
					this.SendPropertyChanged("DenseRank");
					this.OnDenseRankChanged();
				}
			}
		}
		
		[Column(Storage="_NTile", DbType="TinyInt NOT NULL")]
		public byte NTile
		{
			get
			{
				return this._NTile;
			}
			set
			{
				if ((this._NTile != value))
				{
					this.OnNTileChanging(value);
					this.SendPropertyChanging();
					this._NTile = value;
					this.SendPropertyChanged("NTile");
					this.OnNTileChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="rpt.Files_MOST_POPULAR_ABSOLUTEURIS_BY_EXTENSIONS")]
	public partial class Files_MOST_POPULAR_ABSOLUTEURIS_BY_EXTENSION : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RowNumber;
		
		private System.Nullable<System.DateTime> _InitiallyDiscovered;
		
		private System.DateTime _LastDiscovered;
		
		private long _FileID;
		
		private int _Count;
		
		private System.Nullable<short> _DaysSinceInitiallyDiscovered;
		
		private short _DaysSinceLastDiscovered;
		
		private System.Nullable<double> _Strength;
		
		private int _Rank;
		
		private int _DenseRank;
		
		private byte _NTile;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRowNumberChanging(int value);
    partial void OnRowNumberChanged();
    partial void OnInitiallyDiscoveredChanging(System.Nullable<System.DateTime> value);
    partial void OnInitiallyDiscoveredChanged();
    partial void OnLastDiscoveredChanging(System.DateTime value);
    partial void OnLastDiscoveredChanged();
    partial void OnFileIDChanging(long value);
    partial void OnFileIDChanged();
    partial void OnCountChanging(int value);
    partial void OnCountChanged();
    partial void OnDaysSinceInitiallyDiscoveredChanging(System.Nullable<short> value);
    partial void OnDaysSinceInitiallyDiscoveredChanged();
    partial void OnDaysSinceLastDiscoveredChanging(short value);
    partial void OnDaysSinceLastDiscoveredChanged();
    partial void OnStrengthChanging(System.Nullable<double> value);
    partial void OnStrengthChanged();
    partial void OnRankChanging(int value);
    partial void OnRankChanged();
    partial void OnDenseRankChanging(int value);
    partial void OnDenseRankChanged();
    partial void OnNTileChanging(byte value);
    partial void OnNTileChanged();
    #endregion
		
		public Files_MOST_POPULAR_ABSOLUTEURIS_BY_EXTENSION()
		{
			OnCreated();
		}
		
		[Column(Storage="_RowNumber", DbType="Int NOT NULL")]
		public int RowNumber
		{
			get
			{
				return this._RowNumber;
			}
			set
			{
				if ((this._RowNumber != value))
				{
					this.OnRowNumberChanging(value);
					this.SendPropertyChanging();
					this._RowNumber = value;
					this.SendPropertyChanged("RowNumber");
					this.OnRowNumberChanged();
				}
			}
		}
		
		[Column(Storage="_InitiallyDiscovered", DbType="DateTime")]
		public System.Nullable<System.DateTime> InitiallyDiscovered
		{
			get
			{
				return this._InitiallyDiscovered;
			}
			set
			{
				if ((this._InitiallyDiscovered != value))
				{
					this.OnInitiallyDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._InitiallyDiscovered = value;
					this.SendPropertyChanged("InitiallyDiscovered");
					this.OnInitiallyDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_LastDiscovered", DbType="DateTime NOT NULL")]
		public System.DateTime LastDiscovered
		{
			get
			{
				return this._LastDiscovered;
			}
			set
			{
				if ((this._LastDiscovered != value))
				{
					this.OnLastDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._LastDiscovered = value;
					this.SendPropertyChanged("LastDiscovered");
					this.OnLastDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_FileID", DbType="BigInt NOT NULL", IsPrimaryKey=true)]
		public long FileID
		{
			get
			{
				return this._FileID;
			}
			set
			{
				if ((this._FileID != value))
				{
					this.OnFileIDChanging(value);
					this.SendPropertyChanging();
					this._FileID = value;
					this.SendPropertyChanged("FileID");
					this.OnFileIDChanged();
				}
			}
		}
		
		[Column(Storage="_Count", DbType="Int NOT NULL")]
		public int Count
		{
			get
			{
				return this._Count;
			}
			set
			{
				if ((this._Count != value))
				{
					this.OnCountChanging(value);
					this.SendPropertyChanging();
					this._Count = value;
					this.SendPropertyChanged("Count");
					this.OnCountChanged();
				}
			}
		}
		
		[Column(Storage="_DaysSinceInitiallyDiscovered", DbType="SmallInt")]
		public System.Nullable<short> DaysSinceInitiallyDiscovered
		{
			get
			{
				return this._DaysSinceInitiallyDiscovered;
			}
			set
			{
				if ((this._DaysSinceInitiallyDiscovered != value))
				{
					this.OnDaysSinceInitiallyDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._DaysSinceInitiallyDiscovered = value;
					this.SendPropertyChanged("DaysSinceInitiallyDiscovered");
					this.OnDaysSinceInitiallyDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_DaysSinceLastDiscovered", DbType="SmallInt NOT NULL")]
		public short DaysSinceLastDiscovered
		{
			get
			{
				return this._DaysSinceLastDiscovered;
			}
			set
			{
				if ((this._DaysSinceLastDiscovered != value))
				{
					this.OnDaysSinceLastDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._DaysSinceLastDiscovered = value;
					this.SendPropertyChanged("DaysSinceLastDiscovered");
					this.OnDaysSinceLastDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_Strength", DbType="Float")]
		public System.Nullable<double> Strength
		{
			get
			{
				return this._Strength;
			}
			set
			{
				if ((this._Strength != value))
				{
					this.OnStrengthChanging(value);
					this.SendPropertyChanging();
					this._Strength = value;
					this.SendPropertyChanged("Strength");
					this.OnStrengthChanged();
				}
			}
		}
		
		[Column(Storage="_Rank", DbType="Int NOT NULL")]
		public int Rank
		{
			get
			{
				return this._Rank;
			}
			set
			{
				if ((this._Rank != value))
				{
					this.OnRankChanging(value);
					this.SendPropertyChanging();
					this._Rank = value;
					this.SendPropertyChanged("Rank");
					this.OnRankChanged();
				}
			}
		}
		
		[Column(Storage="_DenseRank", DbType="Int NOT NULL")]
		public int DenseRank
		{
			get
			{
				return this._DenseRank;
			}
			set
			{
				if ((this._DenseRank != value))
				{
					this.OnDenseRankChanging(value);
					this.SendPropertyChanging();
					this._DenseRank = value;
					this.SendPropertyChanged("DenseRank");
					this.OnDenseRankChanged();
				}
			}
		}
		
		[Column(Storage="_NTile", DbType="TinyInt NOT NULL")]
		public byte NTile
		{
			get
			{
				return this._NTile;
			}
			set
			{
				if ((this._NTile != value))
				{
					this.OnNTileChanging(value);
					this.SendPropertyChanging();
					this._NTile = value;
					this.SendPropertyChanged("NTile");
					this.OnNTileChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="rpt.Files_MOST_POPULAR_ABSOLUTEURIS_BY_HOSTS")]
	public partial class Files_MOST_POPULAR_ABSOLUTEURIS_BY_HOST : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RowNumber;
		
		private System.Nullable<System.DateTime> _InitiallyDiscovered;
		
		private System.DateTime _LastDiscovered;
		
		private long _FileID;
		
		private int _Count;
		
		private System.Nullable<short> _DaysSinceInitiallyDiscovered;
		
		private short _DaysSinceLastDiscovered;
		
		private System.Nullable<double> _Strength;
		
		private int _Rank;
		
		private int _DenseRank;
		
		private byte _NTile;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRowNumberChanging(int value);
    partial void OnRowNumberChanged();
    partial void OnInitiallyDiscoveredChanging(System.Nullable<System.DateTime> value);
    partial void OnInitiallyDiscoveredChanged();
    partial void OnLastDiscoveredChanging(System.DateTime value);
    partial void OnLastDiscoveredChanged();
    partial void OnFileIDChanging(long value);
    partial void OnFileIDChanged();
    partial void OnCountChanging(int value);
    partial void OnCountChanged();
    partial void OnDaysSinceInitiallyDiscoveredChanging(System.Nullable<short> value);
    partial void OnDaysSinceInitiallyDiscoveredChanged();
    partial void OnDaysSinceLastDiscoveredChanging(short value);
    partial void OnDaysSinceLastDiscoveredChanged();
    partial void OnStrengthChanging(System.Nullable<double> value);
    partial void OnStrengthChanged();
    partial void OnRankChanging(int value);
    partial void OnRankChanged();
    partial void OnDenseRankChanging(int value);
    partial void OnDenseRankChanged();
    partial void OnNTileChanging(byte value);
    partial void OnNTileChanged();
    #endregion
		
		public Files_MOST_POPULAR_ABSOLUTEURIS_BY_HOST()
		{
			OnCreated();
		}
		
		[Column(Storage="_RowNumber", DbType="Int NOT NULL")]
		public int RowNumber
		{
			get
			{
				return this._RowNumber;
			}
			set
			{
				if ((this._RowNumber != value))
				{
					this.OnRowNumberChanging(value);
					this.SendPropertyChanging();
					this._RowNumber = value;
					this.SendPropertyChanged("RowNumber");
					this.OnRowNumberChanged();
				}
			}
		}
		
		[Column(Storage="_InitiallyDiscovered", DbType="DateTime")]
		public System.Nullable<System.DateTime> InitiallyDiscovered
		{
			get
			{
				return this._InitiallyDiscovered;
			}
			set
			{
				if ((this._InitiallyDiscovered != value))
				{
					this.OnInitiallyDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._InitiallyDiscovered = value;
					this.SendPropertyChanged("InitiallyDiscovered");
					this.OnInitiallyDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_LastDiscovered", DbType="DateTime NOT NULL")]
		public System.DateTime LastDiscovered
		{
			get
			{
				return this._LastDiscovered;
			}
			set
			{
				if ((this._LastDiscovered != value))
				{
					this.OnLastDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._LastDiscovered = value;
					this.SendPropertyChanged("LastDiscovered");
					this.OnLastDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_FileID", DbType="BigInt NOT NULL", IsPrimaryKey=true)]
		public long FileID
		{
			get
			{
				return this._FileID;
			}
			set
			{
				if ((this._FileID != value))
				{
					this.OnFileIDChanging(value);
					this.SendPropertyChanging();
					this._FileID = value;
					this.SendPropertyChanged("FileID");
					this.OnFileIDChanged();
				}
			}
		}
		
		[Column(Storage="_Count", DbType="Int NOT NULL")]
		public int Count
		{
			get
			{
				return this._Count;
			}
			set
			{
				if ((this._Count != value))
				{
					this.OnCountChanging(value);
					this.SendPropertyChanging();
					this._Count = value;
					this.SendPropertyChanged("Count");
					this.OnCountChanged();
				}
			}
		}
		
		[Column(Storage="_DaysSinceInitiallyDiscovered", DbType="SmallInt")]
		public System.Nullable<short> DaysSinceInitiallyDiscovered
		{
			get
			{
				return this._DaysSinceInitiallyDiscovered;
			}
			set
			{
				if ((this._DaysSinceInitiallyDiscovered != value))
				{
					this.OnDaysSinceInitiallyDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._DaysSinceInitiallyDiscovered = value;
					this.SendPropertyChanged("DaysSinceInitiallyDiscovered");
					this.OnDaysSinceInitiallyDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_DaysSinceLastDiscovered", DbType="SmallInt NOT NULL")]
		public short DaysSinceLastDiscovered
		{
			get
			{
				return this._DaysSinceLastDiscovered;
			}
			set
			{
				if ((this._DaysSinceLastDiscovered != value))
				{
					this.OnDaysSinceLastDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._DaysSinceLastDiscovered = value;
					this.SendPropertyChanged("DaysSinceLastDiscovered");
					this.OnDaysSinceLastDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_Strength", DbType="Float")]
		public System.Nullable<double> Strength
		{
			get
			{
				return this._Strength;
			}
			set
			{
				if ((this._Strength != value))
				{
					this.OnStrengthChanging(value);
					this.SendPropertyChanging();
					this._Strength = value;
					this.SendPropertyChanged("Strength");
					this.OnStrengthChanged();
				}
			}
		}
		
		[Column(Storage="_Rank", DbType="Int NOT NULL")]
		public int Rank
		{
			get
			{
				return this._Rank;
			}
			set
			{
				if ((this._Rank != value))
				{
					this.OnRankChanging(value);
					this.SendPropertyChanging();
					this._Rank = value;
					this.SendPropertyChanged("Rank");
					this.OnRankChanged();
				}
			}
		}
		
		[Column(Storage="_DenseRank", DbType="Int NOT NULL")]
		public int DenseRank
		{
			get
			{
				return this._DenseRank;
			}
			set
			{
				if ((this._DenseRank != value))
				{
					this.OnDenseRankChanging(value);
					this.SendPropertyChanging();
					this._DenseRank = value;
					this.SendPropertyChanged("DenseRank");
					this.OnDenseRankChanged();
				}
			}
		}
		
		[Column(Storage="_NTile", DbType="TinyInt NOT NULL")]
		public byte NTile
		{
			get
			{
				return this._NTile;
			}
			set
			{
				if ((this._NTile != value))
				{
					this.OnNTileChanging(value);
					this.SendPropertyChanging();
					this._NTile = value;
					this.SendPropertyChanged("NTile");
					this.OnNTileChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="rpt.Files_MOST_POPULAR_ABSOLUTEURIS_BY_SCHEMES")]
	public partial class Files_MOST_POPULAR_ABSOLUTEURIS_BY_SCHEME : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RowNumber;
		
		private System.Nullable<System.DateTime> _InitiallyDiscovered;
		
		private System.DateTime _LastDiscovered;
		
		private long _FileID;
		
		private int _Count;
		
		private System.Nullable<short> _DaysSinceInitiallyDiscovered;
		
		private short _DaysSinceLastDiscovered;
		
		private System.Nullable<double> _Strength;
		
		private int _Rank;
		
		private int _DenseRank;
		
		private byte _NTile;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRowNumberChanging(int value);
    partial void OnRowNumberChanged();
    partial void OnInitiallyDiscoveredChanging(System.Nullable<System.DateTime> value);
    partial void OnInitiallyDiscoveredChanged();
    partial void OnLastDiscoveredChanging(System.DateTime value);
    partial void OnLastDiscoveredChanged();
    partial void OnFileIDChanging(long value);
    partial void OnFileIDChanged();
    partial void OnCountChanging(int value);
    partial void OnCountChanged();
    partial void OnDaysSinceInitiallyDiscoveredChanging(System.Nullable<short> value);
    partial void OnDaysSinceInitiallyDiscoveredChanged();
    partial void OnDaysSinceLastDiscoveredChanging(short value);
    partial void OnDaysSinceLastDiscoveredChanged();
    partial void OnStrengthChanging(System.Nullable<double> value);
    partial void OnStrengthChanged();
    partial void OnRankChanging(int value);
    partial void OnRankChanged();
    partial void OnDenseRankChanging(int value);
    partial void OnDenseRankChanged();
    partial void OnNTileChanging(byte value);
    partial void OnNTileChanged();
    #endregion
		
		public Files_MOST_POPULAR_ABSOLUTEURIS_BY_SCHEME()
		{
			OnCreated();
		}
		
		[Column(Storage="_RowNumber", DbType="Int NOT NULL")]
		public int RowNumber
		{
			get
			{
				return this._RowNumber;
			}
			set
			{
				if ((this._RowNumber != value))
				{
					this.OnRowNumberChanging(value);
					this.SendPropertyChanging();
					this._RowNumber = value;
					this.SendPropertyChanged("RowNumber");
					this.OnRowNumberChanged();
				}
			}
		}
		
		[Column(Storage="_InitiallyDiscovered", DbType="DateTime")]
		public System.Nullable<System.DateTime> InitiallyDiscovered
		{
			get
			{
				return this._InitiallyDiscovered;
			}
			set
			{
				if ((this._InitiallyDiscovered != value))
				{
					this.OnInitiallyDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._InitiallyDiscovered = value;
					this.SendPropertyChanged("InitiallyDiscovered");
					this.OnInitiallyDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_LastDiscovered", DbType="DateTime NOT NULL")]
		public System.DateTime LastDiscovered
		{
			get
			{
				return this._LastDiscovered;
			}
			set
			{
				if ((this._LastDiscovered != value))
				{
					this.OnLastDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._LastDiscovered = value;
					this.SendPropertyChanged("LastDiscovered");
					this.OnLastDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_FileID", DbType="BigInt NOT NULL", IsPrimaryKey=true)]
		public long FileID
		{
			get
			{
				return this._FileID;
			}
			set
			{
				if ((this._FileID != value))
				{
					this.OnFileIDChanging(value);
					this.SendPropertyChanging();
					this._FileID = value;
					this.SendPropertyChanged("FileID");
					this.OnFileIDChanged();
				}
			}
		}
		
		[Column(Storage="_Count", DbType="Int NOT NULL")]
		public int Count
		{
			get
			{
				return this._Count;
			}
			set
			{
				if ((this._Count != value))
				{
					this.OnCountChanging(value);
					this.SendPropertyChanging();
					this._Count = value;
					this.SendPropertyChanged("Count");
					this.OnCountChanged();
				}
			}
		}
		
		[Column(Storage="_DaysSinceInitiallyDiscovered", DbType="SmallInt")]
		public System.Nullable<short> DaysSinceInitiallyDiscovered
		{
			get
			{
				return this._DaysSinceInitiallyDiscovered;
			}
			set
			{
				if ((this._DaysSinceInitiallyDiscovered != value))
				{
					this.OnDaysSinceInitiallyDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._DaysSinceInitiallyDiscovered = value;
					this.SendPropertyChanged("DaysSinceInitiallyDiscovered");
					this.OnDaysSinceInitiallyDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_DaysSinceLastDiscovered", DbType="SmallInt NOT NULL")]
		public short DaysSinceLastDiscovered
		{
			get
			{
				return this._DaysSinceLastDiscovered;
			}
			set
			{
				if ((this._DaysSinceLastDiscovered != value))
				{
					this.OnDaysSinceLastDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._DaysSinceLastDiscovered = value;
					this.SendPropertyChanged("DaysSinceLastDiscovered");
					this.OnDaysSinceLastDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_Strength", DbType="Float")]
		public System.Nullable<double> Strength
		{
			get
			{
				return this._Strength;
			}
			set
			{
				if ((this._Strength != value))
				{
					this.OnStrengthChanging(value);
					this.SendPropertyChanging();
					this._Strength = value;
					this.SendPropertyChanged("Strength");
					this.OnStrengthChanged();
				}
			}
		}
		
		[Column(Storage="_Rank", DbType="Int NOT NULL")]
		public int Rank
		{
			get
			{
				return this._Rank;
			}
			set
			{
				if ((this._Rank != value))
				{
					this.OnRankChanging(value);
					this.SendPropertyChanging();
					this._Rank = value;
					this.SendPropertyChanged("Rank");
					this.OnRankChanged();
				}
			}
		}
		
		[Column(Storage="_DenseRank", DbType="Int NOT NULL")]
		public int DenseRank
		{
			get
			{
				return this._DenseRank;
			}
			set
			{
				if ((this._DenseRank != value))
				{
					this.OnDenseRankChanging(value);
					this.SendPropertyChanging();
					this._DenseRank = value;
					this.SendPropertyChanged("DenseRank");
					this.OnDenseRankChanged();
				}
			}
		}
		
		[Column(Storage="_NTile", DbType="TinyInt NOT NULL")]
		public byte NTile
		{
			get
			{
				return this._NTile;
			}
			set
			{
				if ((this._NTile != value))
				{
					this.OnNTileChanging(value);
					this.SendPropertyChanging();
					this._NTile = value;
					this.SendPropertyChanged("NTile");
					this.OnNTileChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="rpt.Files_MOST_POPULAR_DOMAINS_BY_ABSOLUTEURIS")]
	public partial class Files_MOST_POPULAR_DOMAINS_BY_ABSOLUTEURI : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RowNumber;
		
		private System.Nullable<System.DateTime> _InitiallyDiscovered;
		
		private System.DateTime _LastDiscovered;
		
		private int _DomainID;
		
		private int _Count;
		
		private System.Nullable<short> _DaysSinceInitiallyDiscovered;
		
		private short _DaysSinceLastDiscovered;
		
		private System.Nullable<double> _Strength;
		
		private int _Rank;
		
		private int _DenseRank;
		
		private short _NTile;
		
		private EntityRef<Domain> _Domain;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRowNumberChanging(int value);
    partial void OnRowNumberChanged();
    partial void OnInitiallyDiscoveredChanging(System.Nullable<System.DateTime> value);
    partial void OnInitiallyDiscoveredChanged();
    partial void OnLastDiscoveredChanging(System.DateTime value);
    partial void OnLastDiscoveredChanged();
    partial void OnDomainIDChanging(int value);
    partial void OnDomainIDChanged();
    partial void OnCountChanging(int value);
    partial void OnCountChanged();
    partial void OnDaysSinceInitiallyDiscoveredChanging(System.Nullable<short> value);
    partial void OnDaysSinceInitiallyDiscoveredChanged();
    partial void OnDaysSinceLastDiscoveredChanging(short value);
    partial void OnDaysSinceLastDiscoveredChanged();
    partial void OnStrengthChanging(System.Nullable<double> value);
    partial void OnStrengthChanged();
    partial void OnRankChanging(int value);
    partial void OnRankChanged();
    partial void OnDenseRankChanging(int value);
    partial void OnDenseRankChanged();
    partial void OnNTileChanging(short value);
    partial void OnNTileChanged();
    #endregion
		
		public Files_MOST_POPULAR_DOMAINS_BY_ABSOLUTEURI()
		{
			this._Domain = default(EntityRef<Domain>);
			OnCreated();
		}
		
		[Column(Storage="_RowNumber", DbType="Int NOT NULL")]
		public int RowNumber
		{
			get
			{
				return this._RowNumber;
			}
			set
			{
				if ((this._RowNumber != value))
				{
					this.OnRowNumberChanging(value);
					this.SendPropertyChanging();
					this._RowNumber = value;
					this.SendPropertyChanged("RowNumber");
					this.OnRowNumberChanged();
				}
			}
		}
		
		[Column(Storage="_InitiallyDiscovered", DbType="DateTime")]
		public System.Nullable<System.DateTime> InitiallyDiscovered
		{
			get
			{
				return this._InitiallyDiscovered;
			}
			set
			{
				if ((this._InitiallyDiscovered != value))
				{
					this.OnInitiallyDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._InitiallyDiscovered = value;
					this.SendPropertyChanged("InitiallyDiscovered");
					this.OnInitiallyDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_LastDiscovered", DbType="DateTime NOT NULL")]
		public System.DateTime LastDiscovered
		{
			get
			{
				return this._LastDiscovered;
			}
			set
			{
				if ((this._LastDiscovered != value))
				{
					this.OnLastDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._LastDiscovered = value;
					this.SendPropertyChanged("LastDiscovered");
					this.OnLastDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_DomainID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int DomainID
		{
			get
			{
				return this._DomainID;
			}
			set
			{
				if ((this._DomainID != value))
				{
					if (this._Domain.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDomainIDChanging(value);
					this.SendPropertyChanging();
					this._DomainID = value;
					this.SendPropertyChanged("DomainID");
					this.OnDomainIDChanged();
				}
			}
		}
		
		[Column(Storage="_Count", DbType="Int NOT NULL")]
		public int Count
		{
			get
			{
				return this._Count;
			}
			set
			{
				if ((this._Count != value))
				{
					this.OnCountChanging(value);
					this.SendPropertyChanging();
					this._Count = value;
					this.SendPropertyChanged("Count");
					this.OnCountChanged();
				}
			}
		}
		
		[Column(Storage="_DaysSinceInitiallyDiscovered", DbType="SmallInt")]
		public System.Nullable<short> DaysSinceInitiallyDiscovered
		{
			get
			{
				return this._DaysSinceInitiallyDiscovered;
			}
			set
			{
				if ((this._DaysSinceInitiallyDiscovered != value))
				{
					this.OnDaysSinceInitiallyDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._DaysSinceInitiallyDiscovered = value;
					this.SendPropertyChanged("DaysSinceInitiallyDiscovered");
					this.OnDaysSinceInitiallyDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_DaysSinceLastDiscovered", DbType="SmallInt NOT NULL")]
		public short DaysSinceLastDiscovered
		{
			get
			{
				return this._DaysSinceLastDiscovered;
			}
			set
			{
				if ((this._DaysSinceLastDiscovered != value))
				{
					this.OnDaysSinceLastDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._DaysSinceLastDiscovered = value;
					this.SendPropertyChanged("DaysSinceLastDiscovered");
					this.OnDaysSinceLastDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_Strength", DbType="Float")]
		public System.Nullable<double> Strength
		{
			get
			{
				return this._Strength;
			}
			set
			{
				if ((this._Strength != value))
				{
					this.OnStrengthChanging(value);
					this.SendPropertyChanging();
					this._Strength = value;
					this.SendPropertyChanged("Strength");
					this.OnStrengthChanged();
				}
			}
		}
		
		[Column(Storage="_Rank", DbType="Int NOT NULL")]
		public int Rank
		{
			get
			{
				return this._Rank;
			}
			set
			{
				if ((this._Rank != value))
				{
					this.OnRankChanging(value);
					this.SendPropertyChanging();
					this._Rank = value;
					this.SendPropertyChanged("Rank");
					this.OnRankChanged();
				}
			}
		}
		
		[Column(Storage="_DenseRank", DbType="Int NOT NULL")]
		public int DenseRank
		{
			get
			{
				return this._DenseRank;
			}
			set
			{
				if ((this._DenseRank != value))
				{
					this.OnDenseRankChanging(value);
					this.SendPropertyChanging();
					this._DenseRank = value;
					this.SendPropertyChanged("DenseRank");
					this.OnDenseRankChanged();
				}
			}
		}
		
		[Column(Storage="_NTile", DbType="SmallInt NOT NULL")]
		public short NTile
		{
			get
			{
				return this._NTile;
			}
			set
			{
				if ((this._NTile != value))
				{
					this.OnNTileChanging(value);
					this.SendPropertyChanging();
					this._NTile = value;
					this.SendPropertyChanged("NTile");
					this.OnNTileChanged();
				}
			}
		}
		
		[Association(Name="Domain_Files_MOST_POPULAR_DOMAINS_BY_ABSOLUTEURI", Storage="_Domain", ThisKey="DomainID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Domain Domain
		{
			get
			{
				return this._Domain.Entity;
			}
			set
			{
				Domain previousValue = this._Domain.Entity;
				if (((previousValue != value) 
							|| (this._Domain.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Domain.Entity = null;
						previousValue.Files_MOST_POPULAR_DOMAINS_BY_ABSOLUTEURI = null;
					}
					this._Domain.Entity = value;
					if ((value != null))
					{
						value.Files_MOST_POPULAR_DOMAINS_BY_ABSOLUTEURI = this;
						this._DomainID = value.ID;
					}
					else
					{
						this._DomainID = default(int);
					}
					this.SendPropertyChanged("Domain");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="rpt.Files_MOST_POPULAR_DOMAINS_BY_DOMAINS")]
	public partial class Files_MOST_POPULAR_DOMAINS_BY_DOMAIN : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RowNumber;
		
		private System.Nullable<System.DateTime> _InitiallyDiscovered;
		
		private System.DateTime _LastDiscovered;
		
		private int _DomainID;
		
		private int _Count;
		
		private System.Nullable<short> _DaysSinceInitiallyDiscovered;
		
		private short _DaysSinceLastDiscovered;
		
		private System.Nullable<double> _Strength;
		
		private int _Rank;
		
		private int _DenseRank;
		
		private byte _NTile;
		
		private EntityRef<Domain> _Domain;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRowNumberChanging(int value);
    partial void OnRowNumberChanged();
    partial void OnInitiallyDiscoveredChanging(System.Nullable<System.DateTime> value);
    partial void OnInitiallyDiscoveredChanged();
    partial void OnLastDiscoveredChanging(System.DateTime value);
    partial void OnLastDiscoveredChanged();
    partial void OnDomainIDChanging(int value);
    partial void OnDomainIDChanged();
    partial void OnCountChanging(int value);
    partial void OnCountChanged();
    partial void OnDaysSinceInitiallyDiscoveredChanging(System.Nullable<short> value);
    partial void OnDaysSinceInitiallyDiscoveredChanged();
    partial void OnDaysSinceLastDiscoveredChanging(short value);
    partial void OnDaysSinceLastDiscoveredChanged();
    partial void OnStrengthChanging(System.Nullable<double> value);
    partial void OnStrengthChanged();
    partial void OnRankChanging(int value);
    partial void OnRankChanged();
    partial void OnDenseRankChanging(int value);
    partial void OnDenseRankChanged();
    partial void OnNTileChanging(byte value);
    partial void OnNTileChanged();
    #endregion
		
		public Files_MOST_POPULAR_DOMAINS_BY_DOMAIN()
		{
			this._Domain = default(EntityRef<Domain>);
			OnCreated();
		}
		
		[Column(Storage="_RowNumber", DbType="Int NOT NULL")]
		public int RowNumber
		{
			get
			{
				return this._RowNumber;
			}
			set
			{
				if ((this._RowNumber != value))
				{
					this.OnRowNumberChanging(value);
					this.SendPropertyChanging();
					this._RowNumber = value;
					this.SendPropertyChanged("RowNumber");
					this.OnRowNumberChanged();
				}
			}
		}
		
		[Column(Storage="_InitiallyDiscovered", DbType="DateTime")]
		public System.Nullable<System.DateTime> InitiallyDiscovered
		{
			get
			{
				return this._InitiallyDiscovered;
			}
			set
			{
				if ((this._InitiallyDiscovered != value))
				{
					this.OnInitiallyDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._InitiallyDiscovered = value;
					this.SendPropertyChanged("InitiallyDiscovered");
					this.OnInitiallyDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_LastDiscovered", DbType="DateTime NOT NULL")]
		public System.DateTime LastDiscovered
		{
			get
			{
				return this._LastDiscovered;
			}
			set
			{
				if ((this._LastDiscovered != value))
				{
					this.OnLastDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._LastDiscovered = value;
					this.SendPropertyChanged("LastDiscovered");
					this.OnLastDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_DomainID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int DomainID
		{
			get
			{
				return this._DomainID;
			}
			set
			{
				if ((this._DomainID != value))
				{
					if (this._Domain.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDomainIDChanging(value);
					this.SendPropertyChanging();
					this._DomainID = value;
					this.SendPropertyChanged("DomainID");
					this.OnDomainIDChanged();
				}
			}
		}
		
		[Column(Storage="_Count", DbType="Int NOT NULL")]
		public int Count
		{
			get
			{
				return this._Count;
			}
			set
			{
				if ((this._Count != value))
				{
					this.OnCountChanging(value);
					this.SendPropertyChanging();
					this._Count = value;
					this.SendPropertyChanged("Count");
					this.OnCountChanged();
				}
			}
		}
		
		[Column(Storage="_DaysSinceInitiallyDiscovered", DbType="SmallInt")]
		public System.Nullable<short> DaysSinceInitiallyDiscovered
		{
			get
			{
				return this._DaysSinceInitiallyDiscovered;
			}
			set
			{
				if ((this._DaysSinceInitiallyDiscovered != value))
				{
					this.OnDaysSinceInitiallyDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._DaysSinceInitiallyDiscovered = value;
					this.SendPropertyChanged("DaysSinceInitiallyDiscovered");
					this.OnDaysSinceInitiallyDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_DaysSinceLastDiscovered", DbType="SmallInt NOT NULL")]
		public short DaysSinceLastDiscovered
		{
			get
			{
				return this._DaysSinceLastDiscovered;
			}
			set
			{
				if ((this._DaysSinceLastDiscovered != value))
				{
					this.OnDaysSinceLastDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._DaysSinceLastDiscovered = value;
					this.SendPropertyChanged("DaysSinceLastDiscovered");
					this.OnDaysSinceLastDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_Strength", DbType="Float")]
		public System.Nullable<double> Strength
		{
			get
			{
				return this._Strength;
			}
			set
			{
				if ((this._Strength != value))
				{
					this.OnStrengthChanging(value);
					this.SendPropertyChanging();
					this._Strength = value;
					this.SendPropertyChanged("Strength");
					this.OnStrengthChanged();
				}
			}
		}
		
		[Column(Storage="_Rank", DbType="Int NOT NULL")]
		public int Rank
		{
			get
			{
				return this._Rank;
			}
			set
			{
				if ((this._Rank != value))
				{
					this.OnRankChanging(value);
					this.SendPropertyChanging();
					this._Rank = value;
					this.SendPropertyChanged("Rank");
					this.OnRankChanged();
				}
			}
		}
		
		[Column(Storage="_DenseRank", DbType="Int NOT NULL")]
		public int DenseRank
		{
			get
			{
				return this._DenseRank;
			}
			set
			{
				if ((this._DenseRank != value))
				{
					this.OnDenseRankChanging(value);
					this.SendPropertyChanging();
					this._DenseRank = value;
					this.SendPropertyChanged("DenseRank");
					this.OnDenseRankChanged();
				}
			}
		}
		
		[Column(Storage="_NTile", DbType="TinyInt NOT NULL")]
		public byte NTile
		{
			get
			{
				return this._NTile;
			}
			set
			{
				if ((this._NTile != value))
				{
					this.OnNTileChanging(value);
					this.SendPropertyChanging();
					this._NTile = value;
					this.SendPropertyChanged("NTile");
					this.OnNTileChanged();
				}
			}
		}
		
		[Association(Name="Domain_Files_MOST_POPULAR_DOMAINS_BY_DOMAIN", Storage="_Domain", ThisKey="DomainID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Domain Domain
		{
			get
			{
				return this._Domain.Entity;
			}
			set
			{
				Domain previousValue = this._Domain.Entity;
				if (((previousValue != value) 
							|| (this._Domain.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Domain.Entity = null;
						previousValue.Files_MOST_POPULAR_DOMAINS_BY_DOMAIN = null;
					}
					this._Domain.Entity = value;
					if ((value != null))
					{
						value.Files_MOST_POPULAR_DOMAINS_BY_DOMAIN = this;
						this._DomainID = value.ID;
					}
					else
					{
						this._DomainID = default(int);
					}
					this.SendPropertyChanged("Domain");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="rpt.Files_MOST_POPULAR_DOMAINS_BY_EXTENSIONS")]
	public partial class Files_MOST_POPULAR_DOMAINS_BY_EXTENSION : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RowNumber;
		
		private System.Nullable<System.DateTime> _InitiallyDiscovered;
		
		private System.DateTime _LastDiscovered;
		
		private int _DomainID;
		
		private int _Count;
		
		private System.Nullable<short> _DaysSinceInitiallyDiscovered;
		
		private short _DaysSinceLastDiscovered;
		
		private System.Nullable<double> _Strength;
		
		private int _Rank;
		
		private int _DenseRank;
		
		private byte _NTile;
		
		private EntityRef<Domain> _Domain;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRowNumberChanging(int value);
    partial void OnRowNumberChanged();
    partial void OnInitiallyDiscoveredChanging(System.Nullable<System.DateTime> value);
    partial void OnInitiallyDiscoveredChanged();
    partial void OnLastDiscoveredChanging(System.DateTime value);
    partial void OnLastDiscoveredChanged();
    partial void OnDomainIDChanging(int value);
    partial void OnDomainIDChanged();
    partial void OnCountChanging(int value);
    partial void OnCountChanged();
    partial void OnDaysSinceInitiallyDiscoveredChanging(System.Nullable<short> value);
    partial void OnDaysSinceInitiallyDiscoveredChanged();
    partial void OnDaysSinceLastDiscoveredChanging(short value);
    partial void OnDaysSinceLastDiscoveredChanged();
    partial void OnStrengthChanging(System.Nullable<double> value);
    partial void OnStrengthChanged();
    partial void OnRankChanging(int value);
    partial void OnRankChanged();
    partial void OnDenseRankChanging(int value);
    partial void OnDenseRankChanged();
    partial void OnNTileChanging(byte value);
    partial void OnNTileChanged();
    #endregion
		
		public Files_MOST_POPULAR_DOMAINS_BY_EXTENSION()
		{
			this._Domain = default(EntityRef<Domain>);
			OnCreated();
		}
		
		[Column(Storage="_RowNumber", DbType="Int NOT NULL")]
		public int RowNumber
		{
			get
			{
				return this._RowNumber;
			}
			set
			{
				if ((this._RowNumber != value))
				{
					this.OnRowNumberChanging(value);
					this.SendPropertyChanging();
					this._RowNumber = value;
					this.SendPropertyChanged("RowNumber");
					this.OnRowNumberChanged();
				}
			}
		}
		
		[Column(Storage="_InitiallyDiscovered", DbType="DateTime")]
		public System.Nullable<System.DateTime> InitiallyDiscovered
		{
			get
			{
				return this._InitiallyDiscovered;
			}
			set
			{
				if ((this._InitiallyDiscovered != value))
				{
					this.OnInitiallyDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._InitiallyDiscovered = value;
					this.SendPropertyChanged("InitiallyDiscovered");
					this.OnInitiallyDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_LastDiscovered", DbType="DateTime NOT NULL")]
		public System.DateTime LastDiscovered
		{
			get
			{
				return this._LastDiscovered;
			}
			set
			{
				if ((this._LastDiscovered != value))
				{
					this.OnLastDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._LastDiscovered = value;
					this.SendPropertyChanged("LastDiscovered");
					this.OnLastDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_DomainID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int DomainID
		{
			get
			{
				return this._DomainID;
			}
			set
			{
				if ((this._DomainID != value))
				{
					if (this._Domain.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDomainIDChanging(value);
					this.SendPropertyChanging();
					this._DomainID = value;
					this.SendPropertyChanged("DomainID");
					this.OnDomainIDChanged();
				}
			}
		}
		
		[Column(Storage="_Count", DbType="Int NOT NULL")]
		public int Count
		{
			get
			{
				return this._Count;
			}
			set
			{
				if ((this._Count != value))
				{
					this.OnCountChanging(value);
					this.SendPropertyChanging();
					this._Count = value;
					this.SendPropertyChanged("Count");
					this.OnCountChanged();
				}
			}
		}
		
		[Column(Storage="_DaysSinceInitiallyDiscovered", DbType="SmallInt")]
		public System.Nullable<short> DaysSinceInitiallyDiscovered
		{
			get
			{
				return this._DaysSinceInitiallyDiscovered;
			}
			set
			{
				if ((this._DaysSinceInitiallyDiscovered != value))
				{
					this.OnDaysSinceInitiallyDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._DaysSinceInitiallyDiscovered = value;
					this.SendPropertyChanged("DaysSinceInitiallyDiscovered");
					this.OnDaysSinceInitiallyDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_DaysSinceLastDiscovered", DbType="SmallInt NOT NULL")]
		public short DaysSinceLastDiscovered
		{
			get
			{
				return this._DaysSinceLastDiscovered;
			}
			set
			{
				if ((this._DaysSinceLastDiscovered != value))
				{
					this.OnDaysSinceLastDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._DaysSinceLastDiscovered = value;
					this.SendPropertyChanged("DaysSinceLastDiscovered");
					this.OnDaysSinceLastDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_Strength", DbType="Float")]
		public System.Nullable<double> Strength
		{
			get
			{
				return this._Strength;
			}
			set
			{
				if ((this._Strength != value))
				{
					this.OnStrengthChanging(value);
					this.SendPropertyChanging();
					this._Strength = value;
					this.SendPropertyChanged("Strength");
					this.OnStrengthChanged();
				}
			}
		}
		
		[Column(Storage="_Rank", DbType="Int NOT NULL")]
		public int Rank
		{
			get
			{
				return this._Rank;
			}
			set
			{
				if ((this._Rank != value))
				{
					this.OnRankChanging(value);
					this.SendPropertyChanging();
					this._Rank = value;
					this.SendPropertyChanged("Rank");
					this.OnRankChanged();
				}
			}
		}
		
		[Column(Storage="_DenseRank", DbType="Int NOT NULL")]
		public int DenseRank
		{
			get
			{
				return this._DenseRank;
			}
			set
			{
				if ((this._DenseRank != value))
				{
					this.OnDenseRankChanging(value);
					this.SendPropertyChanging();
					this._DenseRank = value;
					this.SendPropertyChanged("DenseRank");
					this.OnDenseRankChanged();
				}
			}
		}
		
		[Column(Storage="_NTile", DbType="TinyInt NOT NULL")]
		public byte NTile
		{
			get
			{
				return this._NTile;
			}
			set
			{
				if ((this._NTile != value))
				{
					this.OnNTileChanging(value);
					this.SendPropertyChanging();
					this._NTile = value;
					this.SendPropertyChanged("NTile");
					this.OnNTileChanged();
				}
			}
		}
		
		[Association(Name="Domain_Files_MOST_POPULAR_DOMAINS_BY_EXTENSION", Storage="_Domain", ThisKey="DomainID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Domain Domain
		{
			get
			{
				return this._Domain.Entity;
			}
			set
			{
				Domain previousValue = this._Domain.Entity;
				if (((previousValue != value) 
							|| (this._Domain.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Domain.Entity = null;
						previousValue.Files_MOST_POPULAR_DOMAINS_BY_EXTENSION = null;
					}
					this._Domain.Entity = value;
					if ((value != null))
					{
						value.Files_MOST_POPULAR_DOMAINS_BY_EXTENSION = this;
						this._DomainID = value.ID;
					}
					else
					{
						this._DomainID = default(int);
					}
					this.SendPropertyChanged("Domain");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="rpt.Files_MOST_POPULAR_DOMAINS_BY_HOSTS")]
	public partial class Files_MOST_POPULAR_DOMAINS_BY_HOST : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RowNumber;
		
		private System.Nullable<System.DateTime> _InitiallyDiscovered;
		
		private System.DateTime _LastDiscovered;
		
		private int _DomainID;
		
		private int _Count;
		
		private System.Nullable<short> _DaysSinceInitiallyDiscovered;
		
		private short _DaysSinceLastDiscovered;
		
		private System.Nullable<double> _Strength;
		
		private int _Rank;
		
		private int _DenseRank;
		
		private byte _NTile;
		
		private EntityRef<Domain> _Domain;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRowNumberChanging(int value);
    partial void OnRowNumberChanged();
    partial void OnInitiallyDiscoveredChanging(System.Nullable<System.DateTime> value);
    partial void OnInitiallyDiscoveredChanged();
    partial void OnLastDiscoveredChanging(System.DateTime value);
    partial void OnLastDiscoveredChanged();
    partial void OnDomainIDChanging(int value);
    partial void OnDomainIDChanged();
    partial void OnCountChanging(int value);
    partial void OnCountChanged();
    partial void OnDaysSinceInitiallyDiscoveredChanging(System.Nullable<short> value);
    partial void OnDaysSinceInitiallyDiscoveredChanged();
    partial void OnDaysSinceLastDiscoveredChanging(short value);
    partial void OnDaysSinceLastDiscoveredChanged();
    partial void OnStrengthChanging(System.Nullable<double> value);
    partial void OnStrengthChanged();
    partial void OnRankChanging(int value);
    partial void OnRankChanged();
    partial void OnDenseRankChanging(int value);
    partial void OnDenseRankChanged();
    partial void OnNTileChanging(byte value);
    partial void OnNTileChanged();
    #endregion
		
		public Files_MOST_POPULAR_DOMAINS_BY_HOST()
		{
			this._Domain = default(EntityRef<Domain>);
			OnCreated();
		}
		
		[Column(Storage="_RowNumber", DbType="Int NOT NULL")]
		public int RowNumber
		{
			get
			{
				return this._RowNumber;
			}
			set
			{
				if ((this._RowNumber != value))
				{
					this.OnRowNumberChanging(value);
					this.SendPropertyChanging();
					this._RowNumber = value;
					this.SendPropertyChanged("RowNumber");
					this.OnRowNumberChanged();
				}
			}
		}
		
		[Column(Storage="_InitiallyDiscovered", DbType="DateTime")]
		public System.Nullable<System.DateTime> InitiallyDiscovered
		{
			get
			{
				return this._InitiallyDiscovered;
			}
			set
			{
				if ((this._InitiallyDiscovered != value))
				{
					this.OnInitiallyDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._InitiallyDiscovered = value;
					this.SendPropertyChanged("InitiallyDiscovered");
					this.OnInitiallyDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_LastDiscovered", DbType="DateTime NOT NULL")]
		public System.DateTime LastDiscovered
		{
			get
			{
				return this._LastDiscovered;
			}
			set
			{
				if ((this._LastDiscovered != value))
				{
					this.OnLastDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._LastDiscovered = value;
					this.SendPropertyChanged("LastDiscovered");
					this.OnLastDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_DomainID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int DomainID
		{
			get
			{
				return this._DomainID;
			}
			set
			{
				if ((this._DomainID != value))
				{
					if (this._Domain.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDomainIDChanging(value);
					this.SendPropertyChanging();
					this._DomainID = value;
					this.SendPropertyChanged("DomainID");
					this.OnDomainIDChanged();
				}
			}
		}
		
		[Column(Storage="_Count", DbType="Int NOT NULL")]
		public int Count
		{
			get
			{
				return this._Count;
			}
			set
			{
				if ((this._Count != value))
				{
					this.OnCountChanging(value);
					this.SendPropertyChanging();
					this._Count = value;
					this.SendPropertyChanged("Count");
					this.OnCountChanged();
				}
			}
		}
		
		[Column(Storage="_DaysSinceInitiallyDiscovered", DbType="SmallInt")]
		public System.Nullable<short> DaysSinceInitiallyDiscovered
		{
			get
			{
				return this._DaysSinceInitiallyDiscovered;
			}
			set
			{
				if ((this._DaysSinceInitiallyDiscovered != value))
				{
					this.OnDaysSinceInitiallyDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._DaysSinceInitiallyDiscovered = value;
					this.SendPropertyChanged("DaysSinceInitiallyDiscovered");
					this.OnDaysSinceInitiallyDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_DaysSinceLastDiscovered", DbType="SmallInt NOT NULL")]
		public short DaysSinceLastDiscovered
		{
			get
			{
				return this._DaysSinceLastDiscovered;
			}
			set
			{
				if ((this._DaysSinceLastDiscovered != value))
				{
					this.OnDaysSinceLastDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._DaysSinceLastDiscovered = value;
					this.SendPropertyChanged("DaysSinceLastDiscovered");
					this.OnDaysSinceLastDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_Strength", DbType="Float")]
		public System.Nullable<double> Strength
		{
			get
			{
				return this._Strength;
			}
			set
			{
				if ((this._Strength != value))
				{
					this.OnStrengthChanging(value);
					this.SendPropertyChanging();
					this._Strength = value;
					this.SendPropertyChanged("Strength");
					this.OnStrengthChanged();
				}
			}
		}
		
		[Column(Storage="_Rank", DbType="Int NOT NULL")]
		public int Rank
		{
			get
			{
				return this._Rank;
			}
			set
			{
				if ((this._Rank != value))
				{
					this.OnRankChanging(value);
					this.SendPropertyChanging();
					this._Rank = value;
					this.SendPropertyChanged("Rank");
					this.OnRankChanged();
				}
			}
		}
		
		[Column(Storage="_DenseRank", DbType="Int NOT NULL")]
		public int DenseRank
		{
			get
			{
				return this._DenseRank;
			}
			set
			{
				if ((this._DenseRank != value))
				{
					this.OnDenseRankChanging(value);
					this.SendPropertyChanging();
					this._DenseRank = value;
					this.SendPropertyChanged("DenseRank");
					this.OnDenseRankChanged();
				}
			}
		}
		
		[Column(Storage="_NTile", DbType="TinyInt NOT NULL")]
		public byte NTile
		{
			get
			{
				return this._NTile;
			}
			set
			{
				if ((this._NTile != value))
				{
					this.OnNTileChanging(value);
					this.SendPropertyChanging();
					this._NTile = value;
					this.SendPropertyChanged("NTile");
					this.OnNTileChanged();
				}
			}
		}
		
		[Association(Name="Domain_Files_MOST_POPULAR_DOMAINS_BY_HOST", Storage="_Domain", ThisKey="DomainID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Domain Domain
		{
			get
			{
				return this._Domain.Entity;
			}
			set
			{
				Domain previousValue = this._Domain.Entity;
				if (((previousValue != value) 
							|| (this._Domain.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Domain.Entity = null;
						previousValue.Files_MOST_POPULAR_DOMAINS_BY_HOST = null;
					}
					this._Domain.Entity = value;
					if ((value != null))
					{
						value.Files_MOST_POPULAR_DOMAINS_BY_HOST = this;
						this._DomainID = value.ID;
					}
					else
					{
						this._DomainID = default(int);
					}
					this.SendPropertyChanged("Domain");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="rpt.Files_MOST_POPULAR_DOMAINS_BY_SCHEMES")]
	public partial class Files_MOST_POPULAR_DOMAINS_BY_SCHEME : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RowNumber;
		
		private System.Nullable<System.DateTime> _InitiallyDiscovered;
		
		private System.DateTime _LastDiscovered;
		
		private int _DomainID;
		
		private int _Count;
		
		private System.Nullable<short> _DaysSinceInitiallyDiscovered;
		
		private short _DaysSinceLastDiscovered;
		
		private System.Nullable<double> _Strength;
		
		private int _Rank;
		
		private int _DenseRank;
		
		private byte _NTile;
		
		private EntityRef<Domain> _Domain;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRowNumberChanging(int value);
    partial void OnRowNumberChanged();
    partial void OnInitiallyDiscoveredChanging(System.Nullable<System.DateTime> value);
    partial void OnInitiallyDiscoveredChanged();
    partial void OnLastDiscoveredChanging(System.DateTime value);
    partial void OnLastDiscoveredChanged();
    partial void OnDomainIDChanging(int value);
    partial void OnDomainIDChanged();
    partial void OnCountChanging(int value);
    partial void OnCountChanged();
    partial void OnDaysSinceInitiallyDiscoveredChanging(System.Nullable<short> value);
    partial void OnDaysSinceInitiallyDiscoveredChanged();
    partial void OnDaysSinceLastDiscoveredChanging(short value);
    partial void OnDaysSinceLastDiscoveredChanged();
    partial void OnStrengthChanging(System.Nullable<double> value);
    partial void OnStrengthChanged();
    partial void OnRankChanging(int value);
    partial void OnRankChanged();
    partial void OnDenseRankChanging(int value);
    partial void OnDenseRankChanged();
    partial void OnNTileChanging(byte value);
    partial void OnNTileChanged();
    #endregion
		
		public Files_MOST_POPULAR_DOMAINS_BY_SCHEME()
		{
			this._Domain = default(EntityRef<Domain>);
			OnCreated();
		}
		
		[Column(Storage="_RowNumber", DbType="Int NOT NULL")]
		public int RowNumber
		{
			get
			{
				return this._RowNumber;
			}
			set
			{
				if ((this._RowNumber != value))
				{
					this.OnRowNumberChanging(value);
					this.SendPropertyChanging();
					this._RowNumber = value;
					this.SendPropertyChanged("RowNumber");
					this.OnRowNumberChanged();
				}
			}
		}
		
		[Column(Storage="_InitiallyDiscovered", DbType="DateTime")]
		public System.Nullable<System.DateTime> InitiallyDiscovered
		{
			get
			{
				return this._InitiallyDiscovered;
			}
			set
			{
				if ((this._InitiallyDiscovered != value))
				{
					this.OnInitiallyDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._InitiallyDiscovered = value;
					this.SendPropertyChanged("InitiallyDiscovered");
					this.OnInitiallyDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_LastDiscovered", DbType="DateTime NOT NULL")]
		public System.DateTime LastDiscovered
		{
			get
			{
				return this._LastDiscovered;
			}
			set
			{
				if ((this._LastDiscovered != value))
				{
					this.OnLastDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._LastDiscovered = value;
					this.SendPropertyChanged("LastDiscovered");
					this.OnLastDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_DomainID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int DomainID
		{
			get
			{
				return this._DomainID;
			}
			set
			{
				if ((this._DomainID != value))
				{
					if (this._Domain.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDomainIDChanging(value);
					this.SendPropertyChanging();
					this._DomainID = value;
					this.SendPropertyChanged("DomainID");
					this.OnDomainIDChanged();
				}
			}
		}
		
		[Column(Storage="_Count", DbType="Int NOT NULL")]
		public int Count
		{
			get
			{
				return this._Count;
			}
			set
			{
				if ((this._Count != value))
				{
					this.OnCountChanging(value);
					this.SendPropertyChanging();
					this._Count = value;
					this.SendPropertyChanged("Count");
					this.OnCountChanged();
				}
			}
		}
		
		[Column(Storage="_DaysSinceInitiallyDiscovered", DbType="SmallInt")]
		public System.Nullable<short> DaysSinceInitiallyDiscovered
		{
			get
			{
				return this._DaysSinceInitiallyDiscovered;
			}
			set
			{
				if ((this._DaysSinceInitiallyDiscovered != value))
				{
					this.OnDaysSinceInitiallyDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._DaysSinceInitiallyDiscovered = value;
					this.SendPropertyChanged("DaysSinceInitiallyDiscovered");
					this.OnDaysSinceInitiallyDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_DaysSinceLastDiscovered", DbType="SmallInt NOT NULL")]
		public short DaysSinceLastDiscovered
		{
			get
			{
				return this._DaysSinceLastDiscovered;
			}
			set
			{
				if ((this._DaysSinceLastDiscovered != value))
				{
					this.OnDaysSinceLastDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._DaysSinceLastDiscovered = value;
					this.SendPropertyChanged("DaysSinceLastDiscovered");
					this.OnDaysSinceLastDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_Strength", DbType="Float")]
		public System.Nullable<double> Strength
		{
			get
			{
				return this._Strength;
			}
			set
			{
				if ((this._Strength != value))
				{
					this.OnStrengthChanging(value);
					this.SendPropertyChanging();
					this._Strength = value;
					this.SendPropertyChanged("Strength");
					this.OnStrengthChanged();
				}
			}
		}
		
		[Column(Storage="_Rank", DbType="Int NOT NULL")]
		public int Rank
		{
			get
			{
				return this._Rank;
			}
			set
			{
				if ((this._Rank != value))
				{
					this.OnRankChanging(value);
					this.SendPropertyChanging();
					this._Rank = value;
					this.SendPropertyChanged("Rank");
					this.OnRankChanged();
				}
			}
		}
		
		[Column(Storage="_DenseRank", DbType="Int NOT NULL")]
		public int DenseRank
		{
			get
			{
				return this._DenseRank;
			}
			set
			{
				if ((this._DenseRank != value))
				{
					this.OnDenseRankChanging(value);
					this.SendPropertyChanging();
					this._DenseRank = value;
					this.SendPropertyChanged("DenseRank");
					this.OnDenseRankChanged();
				}
			}
		}
		
		[Column(Storage="_NTile", DbType="TinyInt NOT NULL")]
		public byte NTile
		{
			get
			{
				return this._NTile;
			}
			set
			{
				if ((this._NTile != value))
				{
					this.OnNTileChanging(value);
					this.SendPropertyChanging();
					this._NTile = value;
					this.SendPropertyChanged("NTile");
					this.OnNTileChanged();
				}
			}
		}
		
		[Association(Name="Domain_Files_MOST_POPULAR_DOMAINS_BY_SCHEME", Storage="_Domain", ThisKey="DomainID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Domain Domain
		{
			get
			{
				return this._Domain.Entity;
			}
			set
			{
				Domain previousValue = this._Domain.Entity;
				if (((previousValue != value) 
							|| (this._Domain.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Domain.Entity = null;
						previousValue.Files_MOST_POPULAR_DOMAINS_BY_SCHEME = null;
					}
					this._Domain.Entity = value;
					if ((value != null))
					{
						value.Files_MOST_POPULAR_DOMAINS_BY_SCHEME = this;
						this._DomainID = value.ID;
					}
					else
					{
						this._DomainID = default(int);
					}
					this.SendPropertyChanged("Domain");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="rpt.Files_MOST_POPULAR_EXTENSIONS_BY_ABSOLUTEURIS")]
	public partial class Files_MOST_POPULAR_EXTENSIONS_BY_ABSOLUTEURI : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RowNumber;
		
		private System.Nullable<System.DateTime> _InitiallyDiscovered;
		
		private System.DateTime _LastDiscovered;
		
		private int _ExtensionID;
		
		private int _Count;
		
		private System.Nullable<short> _DaysSinceInitiallyDiscovered;
		
		private short _DaysSinceLastDiscovered;
		
		private System.Nullable<double> _Strength;
		
		private int _Rank;
		
		private int _DenseRank;
		
		private byte _NTile;
		
		private EntityRef<Extension> _Extension;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRowNumberChanging(int value);
    partial void OnRowNumberChanged();
    partial void OnInitiallyDiscoveredChanging(System.Nullable<System.DateTime> value);
    partial void OnInitiallyDiscoveredChanged();
    partial void OnLastDiscoveredChanging(System.DateTime value);
    partial void OnLastDiscoveredChanged();
    partial void OnExtensionIDChanging(int value);
    partial void OnExtensionIDChanged();
    partial void OnCountChanging(int value);
    partial void OnCountChanged();
    partial void OnDaysSinceInitiallyDiscoveredChanging(System.Nullable<short> value);
    partial void OnDaysSinceInitiallyDiscoveredChanged();
    partial void OnDaysSinceLastDiscoveredChanging(short value);
    partial void OnDaysSinceLastDiscoveredChanged();
    partial void OnStrengthChanging(System.Nullable<double> value);
    partial void OnStrengthChanged();
    partial void OnRankChanging(int value);
    partial void OnRankChanged();
    partial void OnDenseRankChanging(int value);
    partial void OnDenseRankChanged();
    partial void OnNTileChanging(byte value);
    partial void OnNTileChanged();
    #endregion
		
		public Files_MOST_POPULAR_EXTENSIONS_BY_ABSOLUTEURI()
		{
			this._Extension = default(EntityRef<Extension>);
			OnCreated();
		}
		
		[Column(Storage="_RowNumber", DbType="Int NOT NULL")]
		public int RowNumber
		{
			get
			{
				return this._RowNumber;
			}
			set
			{
				if ((this._RowNumber != value))
				{
					this.OnRowNumberChanging(value);
					this.SendPropertyChanging();
					this._RowNumber = value;
					this.SendPropertyChanged("RowNumber");
					this.OnRowNumberChanged();
				}
			}
		}
		
		[Column(Storage="_InitiallyDiscovered", DbType="DateTime")]
		public System.Nullable<System.DateTime> InitiallyDiscovered
		{
			get
			{
				return this._InitiallyDiscovered;
			}
			set
			{
				if ((this._InitiallyDiscovered != value))
				{
					this.OnInitiallyDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._InitiallyDiscovered = value;
					this.SendPropertyChanged("InitiallyDiscovered");
					this.OnInitiallyDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_LastDiscovered", DbType="DateTime NOT NULL")]
		public System.DateTime LastDiscovered
		{
			get
			{
				return this._LastDiscovered;
			}
			set
			{
				if ((this._LastDiscovered != value))
				{
					this.OnLastDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._LastDiscovered = value;
					this.SendPropertyChanged("LastDiscovered");
					this.OnLastDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_ExtensionID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ExtensionID
		{
			get
			{
				return this._ExtensionID;
			}
			set
			{
				if ((this._ExtensionID != value))
				{
					if (this._Extension.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnExtensionIDChanging(value);
					this.SendPropertyChanging();
					this._ExtensionID = value;
					this.SendPropertyChanged("ExtensionID");
					this.OnExtensionIDChanged();
				}
			}
		}
		
		[Column(Storage="_Count", DbType="Int NOT NULL")]
		public int Count
		{
			get
			{
				return this._Count;
			}
			set
			{
				if ((this._Count != value))
				{
					this.OnCountChanging(value);
					this.SendPropertyChanging();
					this._Count = value;
					this.SendPropertyChanged("Count");
					this.OnCountChanged();
				}
			}
		}
		
		[Column(Storage="_DaysSinceInitiallyDiscovered", DbType="SmallInt")]
		public System.Nullable<short> DaysSinceInitiallyDiscovered
		{
			get
			{
				return this._DaysSinceInitiallyDiscovered;
			}
			set
			{
				if ((this._DaysSinceInitiallyDiscovered != value))
				{
					this.OnDaysSinceInitiallyDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._DaysSinceInitiallyDiscovered = value;
					this.SendPropertyChanged("DaysSinceInitiallyDiscovered");
					this.OnDaysSinceInitiallyDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_DaysSinceLastDiscovered", DbType="SmallInt NOT NULL")]
		public short DaysSinceLastDiscovered
		{
			get
			{
				return this._DaysSinceLastDiscovered;
			}
			set
			{
				if ((this._DaysSinceLastDiscovered != value))
				{
					this.OnDaysSinceLastDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._DaysSinceLastDiscovered = value;
					this.SendPropertyChanged("DaysSinceLastDiscovered");
					this.OnDaysSinceLastDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_Strength", DbType="Float")]
		public System.Nullable<double> Strength
		{
			get
			{
				return this._Strength;
			}
			set
			{
				if ((this._Strength != value))
				{
					this.OnStrengthChanging(value);
					this.SendPropertyChanging();
					this._Strength = value;
					this.SendPropertyChanged("Strength");
					this.OnStrengthChanged();
				}
			}
		}
		
		[Column(Storage="_Rank", DbType="Int NOT NULL")]
		public int Rank
		{
			get
			{
				return this._Rank;
			}
			set
			{
				if ((this._Rank != value))
				{
					this.OnRankChanging(value);
					this.SendPropertyChanging();
					this._Rank = value;
					this.SendPropertyChanged("Rank");
					this.OnRankChanged();
				}
			}
		}
		
		[Column(Storage="_DenseRank", DbType="Int NOT NULL")]
		public int DenseRank
		{
			get
			{
				return this._DenseRank;
			}
			set
			{
				if ((this._DenseRank != value))
				{
					this.OnDenseRankChanging(value);
					this.SendPropertyChanging();
					this._DenseRank = value;
					this.SendPropertyChanged("DenseRank");
					this.OnDenseRankChanged();
				}
			}
		}
		
		[Column(Storage="_NTile", DbType="TinyInt NOT NULL")]
		public byte NTile
		{
			get
			{
				return this._NTile;
			}
			set
			{
				if ((this._NTile != value))
				{
					this.OnNTileChanging(value);
					this.SendPropertyChanging();
					this._NTile = value;
					this.SendPropertyChanged("NTile");
					this.OnNTileChanged();
				}
			}
		}
		
		[Association(Name="Extension_Files_MOST_POPULAR_EXTENSIONS_BY_ABSOLUTEURI", Storage="_Extension", ThisKey="ExtensionID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Extension Extension
		{
			get
			{
				return this._Extension.Entity;
			}
			set
			{
				Extension previousValue = this._Extension.Entity;
				if (((previousValue != value) 
							|| (this._Extension.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Extension.Entity = null;
						previousValue.Files_MOST_POPULAR_EXTENSIONS_BY_ABSOLUTEURI = null;
					}
					this._Extension.Entity = value;
					if ((value != null))
					{
						value.Files_MOST_POPULAR_EXTENSIONS_BY_ABSOLUTEURI = this;
						this._ExtensionID = value.ID;
					}
					else
					{
						this._ExtensionID = default(int);
					}
					this.SendPropertyChanged("Extension");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="rpt.Files_MOST_POPULAR_EXTENSIONS_BY_DOMAINS")]
	public partial class Files_MOST_POPULAR_EXTENSIONS_BY_DOMAIN : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RowNumber;
		
		private System.Nullable<System.DateTime> _InitiallyDiscovered;
		
		private System.DateTime _LastDiscovered;
		
		private int _ExtensionID;
		
		private int _Count;
		
		private System.Nullable<short> _DaysSinceInitiallyDiscovered;
		
		private short _DaysSinceLastDiscovered;
		
		private System.Nullable<double> _Strength;
		
		private int _Rank;
		
		private int _DenseRank;
		
		private byte _NTile;
		
		private EntityRef<Extension> _Extension;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRowNumberChanging(int value);
    partial void OnRowNumberChanged();
    partial void OnInitiallyDiscoveredChanging(System.Nullable<System.DateTime> value);
    partial void OnInitiallyDiscoveredChanged();
    partial void OnLastDiscoveredChanging(System.DateTime value);
    partial void OnLastDiscoveredChanged();
    partial void OnExtensionIDChanging(int value);
    partial void OnExtensionIDChanged();
    partial void OnCountChanging(int value);
    partial void OnCountChanged();
    partial void OnDaysSinceInitiallyDiscoveredChanging(System.Nullable<short> value);
    partial void OnDaysSinceInitiallyDiscoveredChanged();
    partial void OnDaysSinceLastDiscoveredChanging(short value);
    partial void OnDaysSinceLastDiscoveredChanged();
    partial void OnStrengthChanging(System.Nullable<double> value);
    partial void OnStrengthChanged();
    partial void OnRankChanging(int value);
    partial void OnRankChanged();
    partial void OnDenseRankChanging(int value);
    partial void OnDenseRankChanged();
    partial void OnNTileChanging(byte value);
    partial void OnNTileChanged();
    #endregion
		
		public Files_MOST_POPULAR_EXTENSIONS_BY_DOMAIN()
		{
			this._Extension = default(EntityRef<Extension>);
			OnCreated();
		}
		
		[Column(Storage="_RowNumber", DbType="Int NOT NULL")]
		public int RowNumber
		{
			get
			{
				return this._RowNumber;
			}
			set
			{
				if ((this._RowNumber != value))
				{
					this.OnRowNumberChanging(value);
					this.SendPropertyChanging();
					this._RowNumber = value;
					this.SendPropertyChanged("RowNumber");
					this.OnRowNumberChanged();
				}
			}
		}
		
		[Column(Storage="_InitiallyDiscovered", DbType="DateTime")]
		public System.Nullable<System.DateTime> InitiallyDiscovered
		{
			get
			{
				return this._InitiallyDiscovered;
			}
			set
			{
				if ((this._InitiallyDiscovered != value))
				{
					this.OnInitiallyDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._InitiallyDiscovered = value;
					this.SendPropertyChanged("InitiallyDiscovered");
					this.OnInitiallyDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_LastDiscovered", DbType="DateTime NOT NULL")]
		public System.DateTime LastDiscovered
		{
			get
			{
				return this._LastDiscovered;
			}
			set
			{
				if ((this._LastDiscovered != value))
				{
					this.OnLastDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._LastDiscovered = value;
					this.SendPropertyChanged("LastDiscovered");
					this.OnLastDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_ExtensionID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ExtensionID
		{
			get
			{
				return this._ExtensionID;
			}
			set
			{
				if ((this._ExtensionID != value))
				{
					if (this._Extension.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnExtensionIDChanging(value);
					this.SendPropertyChanging();
					this._ExtensionID = value;
					this.SendPropertyChanged("ExtensionID");
					this.OnExtensionIDChanged();
				}
			}
		}
		
		[Column(Storage="_Count", DbType="Int NOT NULL")]
		public int Count
		{
			get
			{
				return this._Count;
			}
			set
			{
				if ((this._Count != value))
				{
					this.OnCountChanging(value);
					this.SendPropertyChanging();
					this._Count = value;
					this.SendPropertyChanged("Count");
					this.OnCountChanged();
				}
			}
		}
		
		[Column(Storage="_DaysSinceInitiallyDiscovered", DbType="SmallInt")]
		public System.Nullable<short> DaysSinceInitiallyDiscovered
		{
			get
			{
				return this._DaysSinceInitiallyDiscovered;
			}
			set
			{
				if ((this._DaysSinceInitiallyDiscovered != value))
				{
					this.OnDaysSinceInitiallyDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._DaysSinceInitiallyDiscovered = value;
					this.SendPropertyChanged("DaysSinceInitiallyDiscovered");
					this.OnDaysSinceInitiallyDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_DaysSinceLastDiscovered", DbType="SmallInt NOT NULL")]
		public short DaysSinceLastDiscovered
		{
			get
			{
				return this._DaysSinceLastDiscovered;
			}
			set
			{
				if ((this._DaysSinceLastDiscovered != value))
				{
					this.OnDaysSinceLastDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._DaysSinceLastDiscovered = value;
					this.SendPropertyChanged("DaysSinceLastDiscovered");
					this.OnDaysSinceLastDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_Strength", DbType="Float")]
		public System.Nullable<double> Strength
		{
			get
			{
				return this._Strength;
			}
			set
			{
				if ((this._Strength != value))
				{
					this.OnStrengthChanging(value);
					this.SendPropertyChanging();
					this._Strength = value;
					this.SendPropertyChanged("Strength");
					this.OnStrengthChanged();
				}
			}
		}
		
		[Column(Storage="_Rank", DbType="Int NOT NULL")]
		public int Rank
		{
			get
			{
				return this._Rank;
			}
			set
			{
				if ((this._Rank != value))
				{
					this.OnRankChanging(value);
					this.SendPropertyChanging();
					this._Rank = value;
					this.SendPropertyChanged("Rank");
					this.OnRankChanged();
				}
			}
		}
		
		[Column(Storage="_DenseRank", DbType="Int NOT NULL")]
		public int DenseRank
		{
			get
			{
				return this._DenseRank;
			}
			set
			{
				if ((this._DenseRank != value))
				{
					this.OnDenseRankChanging(value);
					this.SendPropertyChanging();
					this._DenseRank = value;
					this.SendPropertyChanged("DenseRank");
					this.OnDenseRankChanged();
				}
			}
		}
		
		[Column(Storage="_NTile", DbType="TinyInt NOT NULL")]
		public byte NTile
		{
			get
			{
				return this._NTile;
			}
			set
			{
				if ((this._NTile != value))
				{
					this.OnNTileChanging(value);
					this.SendPropertyChanging();
					this._NTile = value;
					this.SendPropertyChanged("NTile");
					this.OnNTileChanged();
				}
			}
		}
		
		[Association(Name="Extension_Files_MOST_POPULAR_EXTENSIONS_BY_DOMAIN", Storage="_Extension", ThisKey="ExtensionID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Extension Extension
		{
			get
			{
				return this._Extension.Entity;
			}
			set
			{
				Extension previousValue = this._Extension.Entity;
				if (((previousValue != value) 
							|| (this._Extension.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Extension.Entity = null;
						previousValue.Files_MOST_POPULAR_EXTENSIONS_BY_DOMAIN = null;
					}
					this._Extension.Entity = value;
					if ((value != null))
					{
						value.Files_MOST_POPULAR_EXTENSIONS_BY_DOMAIN = this;
						this._ExtensionID = value.ID;
					}
					else
					{
						this._ExtensionID = default(int);
					}
					this.SendPropertyChanged("Extension");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="rpt.Files_MOST_POPULAR_EXTENSIONS_BY_EXTENSIONS")]
	public partial class Files_MOST_POPULAR_EXTENSIONS_BY_EXTENSION : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RowNumber;
		
		private System.Nullable<System.DateTime> _InitiallyDiscovered;
		
		private System.DateTime _LastDiscovered;
		
		private int _ExtensionID;
		
		private int _Count;
		
		private System.Nullable<short> _DaysSinceInitiallyDiscovered;
		
		private short _DaysSinceLastDiscovered;
		
		private System.Nullable<double> _Strength;
		
		private int _Rank;
		
		private int _DenseRank;
		
		private byte _NTile;
		
		private EntityRef<Extension> _Extension;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRowNumberChanging(int value);
    partial void OnRowNumberChanged();
    partial void OnInitiallyDiscoveredChanging(System.Nullable<System.DateTime> value);
    partial void OnInitiallyDiscoveredChanged();
    partial void OnLastDiscoveredChanging(System.DateTime value);
    partial void OnLastDiscoveredChanged();
    partial void OnExtensionIDChanging(int value);
    partial void OnExtensionIDChanged();
    partial void OnCountChanging(int value);
    partial void OnCountChanged();
    partial void OnDaysSinceInitiallyDiscoveredChanging(System.Nullable<short> value);
    partial void OnDaysSinceInitiallyDiscoveredChanged();
    partial void OnDaysSinceLastDiscoveredChanging(short value);
    partial void OnDaysSinceLastDiscoveredChanged();
    partial void OnStrengthChanging(System.Nullable<double> value);
    partial void OnStrengthChanged();
    partial void OnRankChanging(int value);
    partial void OnRankChanged();
    partial void OnDenseRankChanging(int value);
    partial void OnDenseRankChanged();
    partial void OnNTileChanging(byte value);
    partial void OnNTileChanged();
    #endregion
		
		public Files_MOST_POPULAR_EXTENSIONS_BY_EXTENSION()
		{
			this._Extension = default(EntityRef<Extension>);
			OnCreated();
		}
		
		[Column(Storage="_RowNumber", DbType="Int NOT NULL")]
		public int RowNumber
		{
			get
			{
				return this._RowNumber;
			}
			set
			{
				if ((this._RowNumber != value))
				{
					this.OnRowNumberChanging(value);
					this.SendPropertyChanging();
					this._RowNumber = value;
					this.SendPropertyChanged("RowNumber");
					this.OnRowNumberChanged();
				}
			}
		}
		
		[Column(Storage="_InitiallyDiscovered", DbType="DateTime")]
		public System.Nullable<System.DateTime> InitiallyDiscovered
		{
			get
			{
				return this._InitiallyDiscovered;
			}
			set
			{
				if ((this._InitiallyDiscovered != value))
				{
					this.OnInitiallyDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._InitiallyDiscovered = value;
					this.SendPropertyChanged("InitiallyDiscovered");
					this.OnInitiallyDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_LastDiscovered", DbType="DateTime NOT NULL")]
		public System.DateTime LastDiscovered
		{
			get
			{
				return this._LastDiscovered;
			}
			set
			{
				if ((this._LastDiscovered != value))
				{
					this.OnLastDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._LastDiscovered = value;
					this.SendPropertyChanged("LastDiscovered");
					this.OnLastDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_ExtensionID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ExtensionID
		{
			get
			{
				return this._ExtensionID;
			}
			set
			{
				if ((this._ExtensionID != value))
				{
					if (this._Extension.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnExtensionIDChanging(value);
					this.SendPropertyChanging();
					this._ExtensionID = value;
					this.SendPropertyChanged("ExtensionID");
					this.OnExtensionIDChanged();
				}
			}
		}
		
		[Column(Storage="_Count", DbType="Int NOT NULL")]
		public int Count
		{
			get
			{
				return this._Count;
			}
			set
			{
				if ((this._Count != value))
				{
					this.OnCountChanging(value);
					this.SendPropertyChanging();
					this._Count = value;
					this.SendPropertyChanged("Count");
					this.OnCountChanged();
				}
			}
		}
		
		[Column(Storage="_DaysSinceInitiallyDiscovered", DbType="SmallInt")]
		public System.Nullable<short> DaysSinceInitiallyDiscovered
		{
			get
			{
				return this._DaysSinceInitiallyDiscovered;
			}
			set
			{
				if ((this._DaysSinceInitiallyDiscovered != value))
				{
					this.OnDaysSinceInitiallyDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._DaysSinceInitiallyDiscovered = value;
					this.SendPropertyChanged("DaysSinceInitiallyDiscovered");
					this.OnDaysSinceInitiallyDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_DaysSinceLastDiscovered", DbType="SmallInt NOT NULL")]
		public short DaysSinceLastDiscovered
		{
			get
			{
				return this._DaysSinceLastDiscovered;
			}
			set
			{
				if ((this._DaysSinceLastDiscovered != value))
				{
					this.OnDaysSinceLastDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._DaysSinceLastDiscovered = value;
					this.SendPropertyChanged("DaysSinceLastDiscovered");
					this.OnDaysSinceLastDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_Strength", DbType="Float")]
		public System.Nullable<double> Strength
		{
			get
			{
				return this._Strength;
			}
			set
			{
				if ((this._Strength != value))
				{
					this.OnStrengthChanging(value);
					this.SendPropertyChanging();
					this._Strength = value;
					this.SendPropertyChanged("Strength");
					this.OnStrengthChanged();
				}
			}
		}
		
		[Column(Storage="_Rank", DbType="Int NOT NULL")]
		public int Rank
		{
			get
			{
				return this._Rank;
			}
			set
			{
				if ((this._Rank != value))
				{
					this.OnRankChanging(value);
					this.SendPropertyChanging();
					this._Rank = value;
					this.SendPropertyChanged("Rank");
					this.OnRankChanged();
				}
			}
		}
		
		[Column(Storage="_DenseRank", DbType="Int NOT NULL")]
		public int DenseRank
		{
			get
			{
				return this._DenseRank;
			}
			set
			{
				if ((this._DenseRank != value))
				{
					this.OnDenseRankChanging(value);
					this.SendPropertyChanging();
					this._DenseRank = value;
					this.SendPropertyChanged("DenseRank");
					this.OnDenseRankChanged();
				}
			}
		}
		
		[Column(Storage="_NTile", DbType="TinyInt NOT NULL")]
		public byte NTile
		{
			get
			{
				return this._NTile;
			}
			set
			{
				if ((this._NTile != value))
				{
					this.OnNTileChanging(value);
					this.SendPropertyChanging();
					this._NTile = value;
					this.SendPropertyChanged("NTile");
					this.OnNTileChanged();
				}
			}
		}
		
		[Association(Name="Extension_Files_MOST_POPULAR_EXTENSIONS_BY_EXTENSION", Storage="_Extension", ThisKey="ExtensionID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Extension Extension
		{
			get
			{
				return this._Extension.Entity;
			}
			set
			{
				Extension previousValue = this._Extension.Entity;
				if (((previousValue != value) 
							|| (this._Extension.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Extension.Entity = null;
						previousValue.Files_MOST_POPULAR_EXTENSIONS_BY_EXTENSION = null;
					}
					this._Extension.Entity = value;
					if ((value != null))
					{
						value.Files_MOST_POPULAR_EXTENSIONS_BY_EXTENSION = this;
						this._ExtensionID = value.ID;
					}
					else
					{
						this._ExtensionID = default(int);
					}
					this.SendPropertyChanged("Extension");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="rpt.Files_MOST_POPULAR_EXTENSIONS_BY_HOSTS")]
	public partial class Files_MOST_POPULAR_EXTENSIONS_BY_HOST : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RowNumber;
		
		private System.Nullable<System.DateTime> _InitiallyDiscovered;
		
		private System.DateTime _LastDiscovered;
		
		private int _ExtensionID;
		
		private int _Count;
		
		private System.Nullable<short> _DaysSinceInitiallyDiscovered;
		
		private short _DaysSinceLastDiscovered;
		
		private System.Nullable<double> _Strength;
		
		private int _Rank;
		
		private int _DenseRank;
		
		private byte _NTile;
		
		private EntityRef<Extension> _Extension;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRowNumberChanging(int value);
    partial void OnRowNumberChanged();
    partial void OnInitiallyDiscoveredChanging(System.Nullable<System.DateTime> value);
    partial void OnInitiallyDiscoveredChanged();
    partial void OnLastDiscoveredChanging(System.DateTime value);
    partial void OnLastDiscoveredChanged();
    partial void OnExtensionIDChanging(int value);
    partial void OnExtensionIDChanged();
    partial void OnCountChanging(int value);
    partial void OnCountChanged();
    partial void OnDaysSinceInitiallyDiscoveredChanging(System.Nullable<short> value);
    partial void OnDaysSinceInitiallyDiscoveredChanged();
    partial void OnDaysSinceLastDiscoveredChanging(short value);
    partial void OnDaysSinceLastDiscoveredChanged();
    partial void OnStrengthChanging(System.Nullable<double> value);
    partial void OnStrengthChanged();
    partial void OnRankChanging(int value);
    partial void OnRankChanged();
    partial void OnDenseRankChanging(int value);
    partial void OnDenseRankChanged();
    partial void OnNTileChanging(byte value);
    partial void OnNTileChanged();
    #endregion
		
		public Files_MOST_POPULAR_EXTENSIONS_BY_HOST()
		{
			this._Extension = default(EntityRef<Extension>);
			OnCreated();
		}
		
		[Column(Storage="_RowNumber", DbType="Int NOT NULL")]
		public int RowNumber
		{
			get
			{
				return this._RowNumber;
			}
			set
			{
				if ((this._RowNumber != value))
				{
					this.OnRowNumberChanging(value);
					this.SendPropertyChanging();
					this._RowNumber = value;
					this.SendPropertyChanged("RowNumber");
					this.OnRowNumberChanged();
				}
			}
		}
		
		[Column(Storage="_InitiallyDiscovered", DbType="DateTime")]
		public System.Nullable<System.DateTime> InitiallyDiscovered
		{
			get
			{
				return this._InitiallyDiscovered;
			}
			set
			{
				if ((this._InitiallyDiscovered != value))
				{
					this.OnInitiallyDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._InitiallyDiscovered = value;
					this.SendPropertyChanged("InitiallyDiscovered");
					this.OnInitiallyDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_LastDiscovered", DbType="DateTime NOT NULL")]
		public System.DateTime LastDiscovered
		{
			get
			{
				return this._LastDiscovered;
			}
			set
			{
				if ((this._LastDiscovered != value))
				{
					this.OnLastDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._LastDiscovered = value;
					this.SendPropertyChanged("LastDiscovered");
					this.OnLastDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_ExtensionID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ExtensionID
		{
			get
			{
				return this._ExtensionID;
			}
			set
			{
				if ((this._ExtensionID != value))
				{
					if (this._Extension.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnExtensionIDChanging(value);
					this.SendPropertyChanging();
					this._ExtensionID = value;
					this.SendPropertyChanged("ExtensionID");
					this.OnExtensionIDChanged();
				}
			}
		}
		
		[Column(Storage="_Count", DbType="Int NOT NULL")]
		public int Count
		{
			get
			{
				return this._Count;
			}
			set
			{
				if ((this._Count != value))
				{
					this.OnCountChanging(value);
					this.SendPropertyChanging();
					this._Count = value;
					this.SendPropertyChanged("Count");
					this.OnCountChanged();
				}
			}
		}
		
		[Column(Storage="_DaysSinceInitiallyDiscovered", DbType="SmallInt")]
		public System.Nullable<short> DaysSinceInitiallyDiscovered
		{
			get
			{
				return this._DaysSinceInitiallyDiscovered;
			}
			set
			{
				if ((this._DaysSinceInitiallyDiscovered != value))
				{
					this.OnDaysSinceInitiallyDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._DaysSinceInitiallyDiscovered = value;
					this.SendPropertyChanged("DaysSinceInitiallyDiscovered");
					this.OnDaysSinceInitiallyDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_DaysSinceLastDiscovered", DbType="SmallInt NOT NULL")]
		public short DaysSinceLastDiscovered
		{
			get
			{
				return this._DaysSinceLastDiscovered;
			}
			set
			{
				if ((this._DaysSinceLastDiscovered != value))
				{
					this.OnDaysSinceLastDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._DaysSinceLastDiscovered = value;
					this.SendPropertyChanged("DaysSinceLastDiscovered");
					this.OnDaysSinceLastDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_Strength", DbType="Float")]
		public System.Nullable<double> Strength
		{
			get
			{
				return this._Strength;
			}
			set
			{
				if ((this._Strength != value))
				{
					this.OnStrengthChanging(value);
					this.SendPropertyChanging();
					this._Strength = value;
					this.SendPropertyChanged("Strength");
					this.OnStrengthChanged();
				}
			}
		}
		
		[Column(Storage="_Rank", DbType="Int NOT NULL")]
		public int Rank
		{
			get
			{
				return this._Rank;
			}
			set
			{
				if ((this._Rank != value))
				{
					this.OnRankChanging(value);
					this.SendPropertyChanging();
					this._Rank = value;
					this.SendPropertyChanged("Rank");
					this.OnRankChanged();
				}
			}
		}
		
		[Column(Storage="_DenseRank", DbType="Int NOT NULL")]
		public int DenseRank
		{
			get
			{
				return this._DenseRank;
			}
			set
			{
				if ((this._DenseRank != value))
				{
					this.OnDenseRankChanging(value);
					this.SendPropertyChanging();
					this._DenseRank = value;
					this.SendPropertyChanged("DenseRank");
					this.OnDenseRankChanged();
				}
			}
		}
		
		[Column(Storage="_NTile", DbType="TinyInt NOT NULL")]
		public byte NTile
		{
			get
			{
				return this._NTile;
			}
			set
			{
				if ((this._NTile != value))
				{
					this.OnNTileChanging(value);
					this.SendPropertyChanging();
					this._NTile = value;
					this.SendPropertyChanged("NTile");
					this.OnNTileChanged();
				}
			}
		}
		
		[Association(Name="Extension_Files_MOST_POPULAR_EXTENSIONS_BY_HOST", Storage="_Extension", ThisKey="ExtensionID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Extension Extension
		{
			get
			{
				return this._Extension.Entity;
			}
			set
			{
				Extension previousValue = this._Extension.Entity;
				if (((previousValue != value) 
							|| (this._Extension.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Extension.Entity = null;
						previousValue.Files_MOST_POPULAR_EXTENSIONS_BY_HOST = null;
					}
					this._Extension.Entity = value;
					if ((value != null))
					{
						value.Files_MOST_POPULAR_EXTENSIONS_BY_HOST = this;
						this._ExtensionID = value.ID;
					}
					else
					{
						this._ExtensionID = default(int);
					}
					this.SendPropertyChanged("Extension");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="rpt.Files_MOST_POPULAR_EXTENSIONS_BY_SCHEMES")]
	public partial class Files_MOST_POPULAR_EXTENSIONS_BY_SCHEME : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RowNumber;
		
		private System.Nullable<System.DateTime> _InitiallyDiscovered;
		
		private System.DateTime _LastDiscovered;
		
		private int _ExtensionID;
		
		private int _Count;
		
		private System.Nullable<short> _DaysSinceInitiallyDiscovered;
		
		private short _DaysSinceLastDiscovered;
		
		private System.Nullable<double> _Strength;
		
		private int _Rank;
		
		private int _DenseRank;
		
		private byte _NTile;
		
		private EntityRef<Extension> _Extension;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRowNumberChanging(int value);
    partial void OnRowNumberChanged();
    partial void OnInitiallyDiscoveredChanging(System.Nullable<System.DateTime> value);
    partial void OnInitiallyDiscoveredChanged();
    partial void OnLastDiscoveredChanging(System.DateTime value);
    partial void OnLastDiscoveredChanged();
    partial void OnExtensionIDChanging(int value);
    partial void OnExtensionIDChanged();
    partial void OnCountChanging(int value);
    partial void OnCountChanged();
    partial void OnDaysSinceInitiallyDiscoveredChanging(System.Nullable<short> value);
    partial void OnDaysSinceInitiallyDiscoveredChanged();
    partial void OnDaysSinceLastDiscoveredChanging(short value);
    partial void OnDaysSinceLastDiscoveredChanged();
    partial void OnStrengthChanging(System.Nullable<double> value);
    partial void OnStrengthChanged();
    partial void OnRankChanging(int value);
    partial void OnRankChanged();
    partial void OnDenseRankChanging(int value);
    partial void OnDenseRankChanged();
    partial void OnNTileChanging(byte value);
    partial void OnNTileChanged();
    #endregion
		
		public Files_MOST_POPULAR_EXTENSIONS_BY_SCHEME()
		{
			this._Extension = default(EntityRef<Extension>);
			OnCreated();
		}
		
		[Column(Storage="_RowNumber", DbType="Int NOT NULL")]
		public int RowNumber
		{
			get
			{
				return this._RowNumber;
			}
			set
			{
				if ((this._RowNumber != value))
				{
					this.OnRowNumberChanging(value);
					this.SendPropertyChanging();
					this._RowNumber = value;
					this.SendPropertyChanged("RowNumber");
					this.OnRowNumberChanged();
				}
			}
		}
		
		[Column(Storage="_InitiallyDiscovered", DbType="DateTime")]
		public System.Nullable<System.DateTime> InitiallyDiscovered
		{
			get
			{
				return this._InitiallyDiscovered;
			}
			set
			{
				if ((this._InitiallyDiscovered != value))
				{
					this.OnInitiallyDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._InitiallyDiscovered = value;
					this.SendPropertyChanged("InitiallyDiscovered");
					this.OnInitiallyDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_LastDiscovered", DbType="DateTime NOT NULL")]
		public System.DateTime LastDiscovered
		{
			get
			{
				return this._LastDiscovered;
			}
			set
			{
				if ((this._LastDiscovered != value))
				{
					this.OnLastDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._LastDiscovered = value;
					this.SendPropertyChanged("LastDiscovered");
					this.OnLastDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_ExtensionID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ExtensionID
		{
			get
			{
				return this._ExtensionID;
			}
			set
			{
				if ((this._ExtensionID != value))
				{
					if (this._Extension.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnExtensionIDChanging(value);
					this.SendPropertyChanging();
					this._ExtensionID = value;
					this.SendPropertyChanged("ExtensionID");
					this.OnExtensionIDChanged();
				}
			}
		}
		
		[Column(Storage="_Count", DbType="Int NOT NULL")]
		public int Count
		{
			get
			{
				return this._Count;
			}
			set
			{
				if ((this._Count != value))
				{
					this.OnCountChanging(value);
					this.SendPropertyChanging();
					this._Count = value;
					this.SendPropertyChanged("Count");
					this.OnCountChanged();
				}
			}
		}
		
		[Column(Storage="_DaysSinceInitiallyDiscovered", DbType="SmallInt")]
		public System.Nullable<short> DaysSinceInitiallyDiscovered
		{
			get
			{
				return this._DaysSinceInitiallyDiscovered;
			}
			set
			{
				if ((this._DaysSinceInitiallyDiscovered != value))
				{
					this.OnDaysSinceInitiallyDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._DaysSinceInitiallyDiscovered = value;
					this.SendPropertyChanged("DaysSinceInitiallyDiscovered");
					this.OnDaysSinceInitiallyDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_DaysSinceLastDiscovered", DbType="SmallInt NOT NULL")]
		public short DaysSinceLastDiscovered
		{
			get
			{
				return this._DaysSinceLastDiscovered;
			}
			set
			{
				if ((this._DaysSinceLastDiscovered != value))
				{
					this.OnDaysSinceLastDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._DaysSinceLastDiscovered = value;
					this.SendPropertyChanged("DaysSinceLastDiscovered");
					this.OnDaysSinceLastDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_Strength", DbType="Float")]
		public System.Nullable<double> Strength
		{
			get
			{
				return this._Strength;
			}
			set
			{
				if ((this._Strength != value))
				{
					this.OnStrengthChanging(value);
					this.SendPropertyChanging();
					this._Strength = value;
					this.SendPropertyChanged("Strength");
					this.OnStrengthChanged();
				}
			}
		}
		
		[Column(Storage="_Rank", DbType="Int NOT NULL")]
		public int Rank
		{
			get
			{
				return this._Rank;
			}
			set
			{
				if ((this._Rank != value))
				{
					this.OnRankChanging(value);
					this.SendPropertyChanging();
					this._Rank = value;
					this.SendPropertyChanged("Rank");
					this.OnRankChanged();
				}
			}
		}
		
		[Column(Storage="_DenseRank", DbType="Int NOT NULL")]
		public int DenseRank
		{
			get
			{
				return this._DenseRank;
			}
			set
			{
				if ((this._DenseRank != value))
				{
					this.OnDenseRankChanging(value);
					this.SendPropertyChanging();
					this._DenseRank = value;
					this.SendPropertyChanged("DenseRank");
					this.OnDenseRankChanged();
				}
			}
		}
		
		[Column(Storage="_NTile", DbType="TinyInt NOT NULL")]
		public byte NTile
		{
			get
			{
				return this._NTile;
			}
			set
			{
				if ((this._NTile != value))
				{
					this.OnNTileChanging(value);
					this.SendPropertyChanging();
					this._NTile = value;
					this.SendPropertyChanged("NTile");
					this.OnNTileChanged();
				}
			}
		}
		
		[Association(Name="Extension_Files_MOST_POPULAR_EXTENSIONS_BY_SCHEME", Storage="_Extension", ThisKey="ExtensionID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Extension Extension
		{
			get
			{
				return this._Extension.Entity;
			}
			set
			{
				Extension previousValue = this._Extension.Entity;
				if (((previousValue != value) 
							|| (this._Extension.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Extension.Entity = null;
						previousValue.Files_MOST_POPULAR_EXTENSIONS_BY_SCHEME = null;
					}
					this._Extension.Entity = value;
					if ((value != null))
					{
						value.Files_MOST_POPULAR_EXTENSIONS_BY_SCHEME = this;
						this._ExtensionID = value.ID;
					}
					else
					{
						this._ExtensionID = default(int);
					}
					this.SendPropertyChanged("Extension");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="rpt.Files_MOST_POPULAR_HOSTS_BY_ABSOLUTEURIS")]
	public partial class Files_MOST_POPULAR_HOSTS_BY_ABSOLUTEURI : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RowNumber;
		
		private System.Nullable<System.DateTime> _InitiallyDiscovered;
		
		private System.DateTime _LastDiscovered;
		
		private int _HostID;
		
		private int _Count;
		
		private System.Nullable<short> _DaysSinceInitiallyDiscovered;
		
		private short _DaysSinceLastDiscovered;
		
		private System.Nullable<double> _Strength;
		
		private int _Rank;
		
		private int _DenseRank;
		
		private byte _NTile;
		
		private EntityRef<Host> _Host;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRowNumberChanging(int value);
    partial void OnRowNumberChanged();
    partial void OnInitiallyDiscoveredChanging(System.Nullable<System.DateTime> value);
    partial void OnInitiallyDiscoveredChanged();
    partial void OnLastDiscoveredChanging(System.DateTime value);
    partial void OnLastDiscoveredChanged();
    partial void OnHostIDChanging(int value);
    partial void OnHostIDChanged();
    partial void OnCountChanging(int value);
    partial void OnCountChanged();
    partial void OnDaysSinceInitiallyDiscoveredChanging(System.Nullable<short> value);
    partial void OnDaysSinceInitiallyDiscoveredChanged();
    partial void OnDaysSinceLastDiscoveredChanging(short value);
    partial void OnDaysSinceLastDiscoveredChanged();
    partial void OnStrengthChanging(System.Nullable<double> value);
    partial void OnStrengthChanged();
    partial void OnRankChanging(int value);
    partial void OnRankChanged();
    partial void OnDenseRankChanging(int value);
    partial void OnDenseRankChanged();
    partial void OnNTileChanging(byte value);
    partial void OnNTileChanged();
    #endregion
		
		public Files_MOST_POPULAR_HOSTS_BY_ABSOLUTEURI()
		{
			this._Host = default(EntityRef<Host>);
			OnCreated();
		}
		
		[Column(Storage="_RowNumber", DbType="Int NOT NULL")]
		public int RowNumber
		{
			get
			{
				return this._RowNumber;
			}
			set
			{
				if ((this._RowNumber != value))
				{
					this.OnRowNumberChanging(value);
					this.SendPropertyChanging();
					this._RowNumber = value;
					this.SendPropertyChanged("RowNumber");
					this.OnRowNumberChanged();
				}
			}
		}
		
		[Column(Storage="_InitiallyDiscovered", DbType="DateTime")]
		public System.Nullable<System.DateTime> InitiallyDiscovered
		{
			get
			{
				return this._InitiallyDiscovered;
			}
			set
			{
				if ((this._InitiallyDiscovered != value))
				{
					this.OnInitiallyDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._InitiallyDiscovered = value;
					this.SendPropertyChanged("InitiallyDiscovered");
					this.OnInitiallyDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_LastDiscovered", DbType="DateTime NOT NULL")]
		public System.DateTime LastDiscovered
		{
			get
			{
				return this._LastDiscovered;
			}
			set
			{
				if ((this._LastDiscovered != value))
				{
					this.OnLastDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._LastDiscovered = value;
					this.SendPropertyChanged("LastDiscovered");
					this.OnLastDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_HostID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int HostID
		{
			get
			{
				return this._HostID;
			}
			set
			{
				if ((this._HostID != value))
				{
					if (this._Host.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnHostIDChanging(value);
					this.SendPropertyChanging();
					this._HostID = value;
					this.SendPropertyChanged("HostID");
					this.OnHostIDChanged();
				}
			}
		}
		
		[Column(Storage="_Count", DbType="Int NOT NULL")]
		public int Count
		{
			get
			{
				return this._Count;
			}
			set
			{
				if ((this._Count != value))
				{
					this.OnCountChanging(value);
					this.SendPropertyChanging();
					this._Count = value;
					this.SendPropertyChanged("Count");
					this.OnCountChanged();
				}
			}
		}
		
		[Column(Storage="_DaysSinceInitiallyDiscovered", DbType="SmallInt")]
		public System.Nullable<short> DaysSinceInitiallyDiscovered
		{
			get
			{
				return this._DaysSinceInitiallyDiscovered;
			}
			set
			{
				if ((this._DaysSinceInitiallyDiscovered != value))
				{
					this.OnDaysSinceInitiallyDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._DaysSinceInitiallyDiscovered = value;
					this.SendPropertyChanged("DaysSinceInitiallyDiscovered");
					this.OnDaysSinceInitiallyDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_DaysSinceLastDiscovered", DbType="SmallInt NOT NULL")]
		public short DaysSinceLastDiscovered
		{
			get
			{
				return this._DaysSinceLastDiscovered;
			}
			set
			{
				if ((this._DaysSinceLastDiscovered != value))
				{
					this.OnDaysSinceLastDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._DaysSinceLastDiscovered = value;
					this.SendPropertyChanged("DaysSinceLastDiscovered");
					this.OnDaysSinceLastDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_Strength", DbType="Float")]
		public System.Nullable<double> Strength
		{
			get
			{
				return this._Strength;
			}
			set
			{
				if ((this._Strength != value))
				{
					this.OnStrengthChanging(value);
					this.SendPropertyChanging();
					this._Strength = value;
					this.SendPropertyChanged("Strength");
					this.OnStrengthChanged();
				}
			}
		}
		
		[Column(Storage="_Rank", DbType="Int NOT NULL")]
		public int Rank
		{
			get
			{
				return this._Rank;
			}
			set
			{
				if ((this._Rank != value))
				{
					this.OnRankChanging(value);
					this.SendPropertyChanging();
					this._Rank = value;
					this.SendPropertyChanged("Rank");
					this.OnRankChanged();
				}
			}
		}
		
		[Column(Storage="_DenseRank", DbType="Int NOT NULL")]
		public int DenseRank
		{
			get
			{
				return this._DenseRank;
			}
			set
			{
				if ((this._DenseRank != value))
				{
					this.OnDenseRankChanging(value);
					this.SendPropertyChanging();
					this._DenseRank = value;
					this.SendPropertyChanged("DenseRank");
					this.OnDenseRankChanged();
				}
			}
		}
		
		[Column(Storage="_NTile", DbType="TinyInt NOT NULL")]
		public byte NTile
		{
			get
			{
				return this._NTile;
			}
			set
			{
				if ((this._NTile != value))
				{
					this.OnNTileChanging(value);
					this.SendPropertyChanging();
					this._NTile = value;
					this.SendPropertyChanged("NTile");
					this.OnNTileChanged();
				}
			}
		}
		
		[Association(Name="Host_Files_MOST_POPULAR_HOSTS_BY_ABSOLUTEURI", Storage="_Host", ThisKey="HostID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Host Host
		{
			get
			{
				return this._Host.Entity;
			}
			set
			{
				Host previousValue = this._Host.Entity;
				if (((previousValue != value) 
							|| (this._Host.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Host.Entity = null;
						previousValue.Files_MOST_POPULAR_HOSTS_BY_ABSOLUTEURI = null;
					}
					this._Host.Entity = value;
					if ((value != null))
					{
						value.Files_MOST_POPULAR_HOSTS_BY_ABSOLUTEURI = this;
						this._HostID = value.ID;
					}
					else
					{
						this._HostID = default(int);
					}
					this.SendPropertyChanged("Host");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="rpt.Files_MOST_POPULAR_HOSTS_BY_DOMAINS")]
	public partial class Files_MOST_POPULAR_HOSTS_BY_DOMAIN : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RowNumber;
		
		private System.Nullable<System.DateTime> _InitiallyDiscovered;
		
		private System.DateTime _LastDiscovered;
		
		private int _HostID;
		
		private int _Count;
		
		private System.Nullable<short> _DaysSinceInitiallyDiscovered;
		
		private short _DaysSinceLastDiscovered;
		
		private System.Nullable<double> _Strength;
		
		private int _Rank;
		
		private int _DenseRank;
		
		private byte _NTile;
		
		private EntityRef<Host> _Host;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRowNumberChanging(int value);
    partial void OnRowNumberChanged();
    partial void OnInitiallyDiscoveredChanging(System.Nullable<System.DateTime> value);
    partial void OnInitiallyDiscoveredChanged();
    partial void OnLastDiscoveredChanging(System.DateTime value);
    partial void OnLastDiscoveredChanged();
    partial void OnHostIDChanging(int value);
    partial void OnHostIDChanged();
    partial void OnCountChanging(int value);
    partial void OnCountChanged();
    partial void OnDaysSinceInitiallyDiscoveredChanging(System.Nullable<short> value);
    partial void OnDaysSinceInitiallyDiscoveredChanged();
    partial void OnDaysSinceLastDiscoveredChanging(short value);
    partial void OnDaysSinceLastDiscoveredChanged();
    partial void OnStrengthChanging(System.Nullable<double> value);
    partial void OnStrengthChanged();
    partial void OnRankChanging(int value);
    partial void OnRankChanged();
    partial void OnDenseRankChanging(int value);
    partial void OnDenseRankChanged();
    partial void OnNTileChanging(byte value);
    partial void OnNTileChanged();
    #endregion
		
		public Files_MOST_POPULAR_HOSTS_BY_DOMAIN()
		{
			this._Host = default(EntityRef<Host>);
			OnCreated();
		}
		
		[Column(Storage="_RowNumber", DbType="Int NOT NULL")]
		public int RowNumber
		{
			get
			{
				return this._RowNumber;
			}
			set
			{
				if ((this._RowNumber != value))
				{
					this.OnRowNumberChanging(value);
					this.SendPropertyChanging();
					this._RowNumber = value;
					this.SendPropertyChanged("RowNumber");
					this.OnRowNumberChanged();
				}
			}
		}
		
		[Column(Storage="_InitiallyDiscovered", DbType="DateTime")]
		public System.Nullable<System.DateTime> InitiallyDiscovered
		{
			get
			{
				return this._InitiallyDiscovered;
			}
			set
			{
				if ((this._InitiallyDiscovered != value))
				{
					this.OnInitiallyDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._InitiallyDiscovered = value;
					this.SendPropertyChanged("InitiallyDiscovered");
					this.OnInitiallyDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_LastDiscovered", DbType="DateTime NOT NULL")]
		public System.DateTime LastDiscovered
		{
			get
			{
				return this._LastDiscovered;
			}
			set
			{
				if ((this._LastDiscovered != value))
				{
					this.OnLastDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._LastDiscovered = value;
					this.SendPropertyChanged("LastDiscovered");
					this.OnLastDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_HostID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int HostID
		{
			get
			{
				return this._HostID;
			}
			set
			{
				if ((this._HostID != value))
				{
					if (this._Host.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnHostIDChanging(value);
					this.SendPropertyChanging();
					this._HostID = value;
					this.SendPropertyChanged("HostID");
					this.OnHostIDChanged();
				}
			}
		}
		
		[Column(Storage="_Count", DbType="Int NOT NULL")]
		public int Count
		{
			get
			{
				return this._Count;
			}
			set
			{
				if ((this._Count != value))
				{
					this.OnCountChanging(value);
					this.SendPropertyChanging();
					this._Count = value;
					this.SendPropertyChanged("Count");
					this.OnCountChanged();
				}
			}
		}
		
		[Column(Storage="_DaysSinceInitiallyDiscovered", DbType="SmallInt")]
		public System.Nullable<short> DaysSinceInitiallyDiscovered
		{
			get
			{
				return this._DaysSinceInitiallyDiscovered;
			}
			set
			{
				if ((this._DaysSinceInitiallyDiscovered != value))
				{
					this.OnDaysSinceInitiallyDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._DaysSinceInitiallyDiscovered = value;
					this.SendPropertyChanged("DaysSinceInitiallyDiscovered");
					this.OnDaysSinceInitiallyDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_DaysSinceLastDiscovered", DbType="SmallInt NOT NULL")]
		public short DaysSinceLastDiscovered
		{
			get
			{
				return this._DaysSinceLastDiscovered;
			}
			set
			{
				if ((this._DaysSinceLastDiscovered != value))
				{
					this.OnDaysSinceLastDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._DaysSinceLastDiscovered = value;
					this.SendPropertyChanged("DaysSinceLastDiscovered");
					this.OnDaysSinceLastDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_Strength", DbType="Float")]
		public System.Nullable<double> Strength
		{
			get
			{
				return this._Strength;
			}
			set
			{
				if ((this._Strength != value))
				{
					this.OnStrengthChanging(value);
					this.SendPropertyChanging();
					this._Strength = value;
					this.SendPropertyChanged("Strength");
					this.OnStrengthChanged();
				}
			}
		}
		
		[Column(Storage="_Rank", DbType="Int NOT NULL")]
		public int Rank
		{
			get
			{
				return this._Rank;
			}
			set
			{
				if ((this._Rank != value))
				{
					this.OnRankChanging(value);
					this.SendPropertyChanging();
					this._Rank = value;
					this.SendPropertyChanged("Rank");
					this.OnRankChanged();
				}
			}
		}
		
		[Column(Storage="_DenseRank", DbType="Int NOT NULL")]
		public int DenseRank
		{
			get
			{
				return this._DenseRank;
			}
			set
			{
				if ((this._DenseRank != value))
				{
					this.OnDenseRankChanging(value);
					this.SendPropertyChanging();
					this._DenseRank = value;
					this.SendPropertyChanged("DenseRank");
					this.OnDenseRankChanged();
				}
			}
		}
		
		[Column(Storage="_NTile", DbType="TinyInt NOT NULL")]
		public byte NTile
		{
			get
			{
				return this._NTile;
			}
			set
			{
				if ((this._NTile != value))
				{
					this.OnNTileChanging(value);
					this.SendPropertyChanging();
					this._NTile = value;
					this.SendPropertyChanged("NTile");
					this.OnNTileChanged();
				}
			}
		}
		
		[Association(Name="Host_Files_MOST_POPULAR_HOSTS_BY_DOMAIN", Storage="_Host", ThisKey="HostID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Host Host
		{
			get
			{
				return this._Host.Entity;
			}
			set
			{
				Host previousValue = this._Host.Entity;
				if (((previousValue != value) 
							|| (this._Host.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Host.Entity = null;
						previousValue.Files_MOST_POPULAR_HOSTS_BY_DOMAIN = null;
					}
					this._Host.Entity = value;
					if ((value != null))
					{
						value.Files_MOST_POPULAR_HOSTS_BY_DOMAIN = this;
						this._HostID = value.ID;
					}
					else
					{
						this._HostID = default(int);
					}
					this.SendPropertyChanged("Host");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="rpt.Files_MOST_POPULAR_HOSTS_BY_EXTENSIONS")]
	public partial class Files_MOST_POPULAR_HOSTS_BY_EXTENSION : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RowNumber;
		
		private System.Nullable<System.DateTime> _InitiallyDiscovered;
		
		private System.DateTime _LastDiscovered;
		
		private int _HostID;
		
		private int _Count;
		
		private System.Nullable<short> _DaysSinceInitiallyDiscovered;
		
		private short _DaysSinceLastDiscovered;
		
		private System.Nullable<double> _Strength;
		
		private int _Rank;
		
		private int _DenseRank;
		
		private byte _NTile;
		
		private EntityRef<Host> _Host;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRowNumberChanging(int value);
    partial void OnRowNumberChanged();
    partial void OnInitiallyDiscoveredChanging(System.Nullable<System.DateTime> value);
    partial void OnInitiallyDiscoveredChanged();
    partial void OnLastDiscoveredChanging(System.DateTime value);
    partial void OnLastDiscoveredChanged();
    partial void OnHostIDChanging(int value);
    partial void OnHostIDChanged();
    partial void OnCountChanging(int value);
    partial void OnCountChanged();
    partial void OnDaysSinceInitiallyDiscoveredChanging(System.Nullable<short> value);
    partial void OnDaysSinceInitiallyDiscoveredChanged();
    partial void OnDaysSinceLastDiscoveredChanging(short value);
    partial void OnDaysSinceLastDiscoveredChanged();
    partial void OnStrengthChanging(System.Nullable<double> value);
    partial void OnStrengthChanged();
    partial void OnRankChanging(int value);
    partial void OnRankChanged();
    partial void OnDenseRankChanging(int value);
    partial void OnDenseRankChanged();
    partial void OnNTileChanging(byte value);
    partial void OnNTileChanged();
    #endregion
		
		public Files_MOST_POPULAR_HOSTS_BY_EXTENSION()
		{
			this._Host = default(EntityRef<Host>);
			OnCreated();
		}
		
		[Column(Storage="_RowNumber", DbType="Int NOT NULL")]
		public int RowNumber
		{
			get
			{
				return this._RowNumber;
			}
			set
			{
				if ((this._RowNumber != value))
				{
					this.OnRowNumberChanging(value);
					this.SendPropertyChanging();
					this._RowNumber = value;
					this.SendPropertyChanged("RowNumber");
					this.OnRowNumberChanged();
				}
			}
		}
		
		[Column(Storage="_InitiallyDiscovered", DbType="DateTime")]
		public System.Nullable<System.DateTime> InitiallyDiscovered
		{
			get
			{
				return this._InitiallyDiscovered;
			}
			set
			{
				if ((this._InitiallyDiscovered != value))
				{
					this.OnInitiallyDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._InitiallyDiscovered = value;
					this.SendPropertyChanged("InitiallyDiscovered");
					this.OnInitiallyDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_LastDiscovered", DbType="DateTime NOT NULL")]
		public System.DateTime LastDiscovered
		{
			get
			{
				return this._LastDiscovered;
			}
			set
			{
				if ((this._LastDiscovered != value))
				{
					this.OnLastDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._LastDiscovered = value;
					this.SendPropertyChanged("LastDiscovered");
					this.OnLastDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_HostID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int HostID
		{
			get
			{
				return this._HostID;
			}
			set
			{
				if ((this._HostID != value))
				{
					if (this._Host.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnHostIDChanging(value);
					this.SendPropertyChanging();
					this._HostID = value;
					this.SendPropertyChanged("HostID");
					this.OnHostIDChanged();
				}
			}
		}
		
		[Column(Storage="_Count", DbType="Int NOT NULL")]
		public int Count
		{
			get
			{
				return this._Count;
			}
			set
			{
				if ((this._Count != value))
				{
					this.OnCountChanging(value);
					this.SendPropertyChanging();
					this._Count = value;
					this.SendPropertyChanged("Count");
					this.OnCountChanged();
				}
			}
		}
		
		[Column(Storage="_DaysSinceInitiallyDiscovered", DbType="SmallInt")]
		public System.Nullable<short> DaysSinceInitiallyDiscovered
		{
			get
			{
				return this._DaysSinceInitiallyDiscovered;
			}
			set
			{
				if ((this._DaysSinceInitiallyDiscovered != value))
				{
					this.OnDaysSinceInitiallyDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._DaysSinceInitiallyDiscovered = value;
					this.SendPropertyChanged("DaysSinceInitiallyDiscovered");
					this.OnDaysSinceInitiallyDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_DaysSinceLastDiscovered", DbType="SmallInt NOT NULL")]
		public short DaysSinceLastDiscovered
		{
			get
			{
				return this._DaysSinceLastDiscovered;
			}
			set
			{
				if ((this._DaysSinceLastDiscovered != value))
				{
					this.OnDaysSinceLastDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._DaysSinceLastDiscovered = value;
					this.SendPropertyChanged("DaysSinceLastDiscovered");
					this.OnDaysSinceLastDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_Strength", DbType="Float")]
		public System.Nullable<double> Strength
		{
			get
			{
				return this._Strength;
			}
			set
			{
				if ((this._Strength != value))
				{
					this.OnStrengthChanging(value);
					this.SendPropertyChanging();
					this._Strength = value;
					this.SendPropertyChanged("Strength");
					this.OnStrengthChanged();
				}
			}
		}
		
		[Column(Storage="_Rank", DbType="Int NOT NULL")]
		public int Rank
		{
			get
			{
				return this._Rank;
			}
			set
			{
				if ((this._Rank != value))
				{
					this.OnRankChanging(value);
					this.SendPropertyChanging();
					this._Rank = value;
					this.SendPropertyChanged("Rank");
					this.OnRankChanged();
				}
			}
		}
		
		[Column(Storage="_DenseRank", DbType="Int NOT NULL")]
		public int DenseRank
		{
			get
			{
				return this._DenseRank;
			}
			set
			{
				if ((this._DenseRank != value))
				{
					this.OnDenseRankChanging(value);
					this.SendPropertyChanging();
					this._DenseRank = value;
					this.SendPropertyChanged("DenseRank");
					this.OnDenseRankChanged();
				}
			}
		}
		
		[Column(Storage="_NTile", DbType="TinyInt NOT NULL")]
		public byte NTile
		{
			get
			{
				return this._NTile;
			}
			set
			{
				if ((this._NTile != value))
				{
					this.OnNTileChanging(value);
					this.SendPropertyChanging();
					this._NTile = value;
					this.SendPropertyChanged("NTile");
					this.OnNTileChanged();
				}
			}
		}
		
		[Association(Name="Host_Files_MOST_POPULAR_HOSTS_BY_EXTENSION", Storage="_Host", ThisKey="HostID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Host Host
		{
			get
			{
				return this._Host.Entity;
			}
			set
			{
				Host previousValue = this._Host.Entity;
				if (((previousValue != value) 
							|| (this._Host.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Host.Entity = null;
						previousValue.Files_MOST_POPULAR_HOSTS_BY_EXTENSION = null;
					}
					this._Host.Entity = value;
					if ((value != null))
					{
						value.Files_MOST_POPULAR_HOSTS_BY_EXTENSION = this;
						this._HostID = value.ID;
					}
					else
					{
						this._HostID = default(int);
					}
					this.SendPropertyChanged("Host");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="rpt.Files_MOST_POPULAR_HOSTS_BY_HOSTS")]
	public partial class Files_MOST_POPULAR_HOSTS_BY_HOST : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RowNumber;
		
		private System.Nullable<System.DateTime> _InitiallyDiscovered;
		
		private System.DateTime _LastDiscovered;
		
		private int _HostID;
		
		private int _Count;
		
		private System.Nullable<short> _DaysSinceInitiallyDiscovered;
		
		private short _DaysSinceLastDiscovered;
		
		private System.Nullable<double> _Strength;
		
		private int _Rank;
		
		private int _DenseRank;
		
		private byte _NTile;
		
		private EntityRef<Host> _Host;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRowNumberChanging(int value);
    partial void OnRowNumberChanged();
    partial void OnInitiallyDiscoveredChanging(System.Nullable<System.DateTime> value);
    partial void OnInitiallyDiscoveredChanged();
    partial void OnLastDiscoveredChanging(System.DateTime value);
    partial void OnLastDiscoveredChanged();
    partial void OnHostIDChanging(int value);
    partial void OnHostIDChanged();
    partial void OnCountChanging(int value);
    partial void OnCountChanged();
    partial void OnDaysSinceInitiallyDiscoveredChanging(System.Nullable<short> value);
    partial void OnDaysSinceInitiallyDiscoveredChanged();
    partial void OnDaysSinceLastDiscoveredChanging(short value);
    partial void OnDaysSinceLastDiscoveredChanged();
    partial void OnStrengthChanging(System.Nullable<double> value);
    partial void OnStrengthChanged();
    partial void OnRankChanging(int value);
    partial void OnRankChanged();
    partial void OnDenseRankChanging(int value);
    partial void OnDenseRankChanged();
    partial void OnNTileChanging(byte value);
    partial void OnNTileChanged();
    #endregion
		
		public Files_MOST_POPULAR_HOSTS_BY_HOST()
		{
			this._Host = default(EntityRef<Host>);
			OnCreated();
		}
		
		[Column(Storage="_RowNumber", DbType="Int NOT NULL")]
		public int RowNumber
		{
			get
			{
				return this._RowNumber;
			}
			set
			{
				if ((this._RowNumber != value))
				{
					this.OnRowNumberChanging(value);
					this.SendPropertyChanging();
					this._RowNumber = value;
					this.SendPropertyChanged("RowNumber");
					this.OnRowNumberChanged();
				}
			}
		}
		
		[Column(Storage="_InitiallyDiscovered", DbType="DateTime")]
		public System.Nullable<System.DateTime> InitiallyDiscovered
		{
			get
			{
				return this._InitiallyDiscovered;
			}
			set
			{
				if ((this._InitiallyDiscovered != value))
				{
					this.OnInitiallyDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._InitiallyDiscovered = value;
					this.SendPropertyChanged("InitiallyDiscovered");
					this.OnInitiallyDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_LastDiscovered", DbType="DateTime NOT NULL")]
		public System.DateTime LastDiscovered
		{
			get
			{
				return this._LastDiscovered;
			}
			set
			{
				if ((this._LastDiscovered != value))
				{
					this.OnLastDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._LastDiscovered = value;
					this.SendPropertyChanged("LastDiscovered");
					this.OnLastDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_HostID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int HostID
		{
			get
			{
				return this._HostID;
			}
			set
			{
				if ((this._HostID != value))
				{
					if (this._Host.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnHostIDChanging(value);
					this.SendPropertyChanging();
					this._HostID = value;
					this.SendPropertyChanged("HostID");
					this.OnHostIDChanged();
				}
			}
		}
		
		[Column(Storage="_Count", DbType="Int NOT NULL")]
		public int Count
		{
			get
			{
				return this._Count;
			}
			set
			{
				if ((this._Count != value))
				{
					this.OnCountChanging(value);
					this.SendPropertyChanging();
					this._Count = value;
					this.SendPropertyChanged("Count");
					this.OnCountChanged();
				}
			}
		}
		
		[Column(Storage="_DaysSinceInitiallyDiscovered", DbType="SmallInt")]
		public System.Nullable<short> DaysSinceInitiallyDiscovered
		{
			get
			{
				return this._DaysSinceInitiallyDiscovered;
			}
			set
			{
				if ((this._DaysSinceInitiallyDiscovered != value))
				{
					this.OnDaysSinceInitiallyDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._DaysSinceInitiallyDiscovered = value;
					this.SendPropertyChanged("DaysSinceInitiallyDiscovered");
					this.OnDaysSinceInitiallyDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_DaysSinceLastDiscovered", DbType="SmallInt NOT NULL")]
		public short DaysSinceLastDiscovered
		{
			get
			{
				return this._DaysSinceLastDiscovered;
			}
			set
			{
				if ((this._DaysSinceLastDiscovered != value))
				{
					this.OnDaysSinceLastDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._DaysSinceLastDiscovered = value;
					this.SendPropertyChanged("DaysSinceLastDiscovered");
					this.OnDaysSinceLastDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_Strength", DbType="Float")]
		public System.Nullable<double> Strength
		{
			get
			{
				return this._Strength;
			}
			set
			{
				if ((this._Strength != value))
				{
					this.OnStrengthChanging(value);
					this.SendPropertyChanging();
					this._Strength = value;
					this.SendPropertyChanged("Strength");
					this.OnStrengthChanged();
				}
			}
		}
		
		[Column(Storage="_Rank", DbType="Int NOT NULL")]
		public int Rank
		{
			get
			{
				return this._Rank;
			}
			set
			{
				if ((this._Rank != value))
				{
					this.OnRankChanging(value);
					this.SendPropertyChanging();
					this._Rank = value;
					this.SendPropertyChanged("Rank");
					this.OnRankChanged();
				}
			}
		}
		
		[Column(Storage="_DenseRank", DbType="Int NOT NULL")]
		public int DenseRank
		{
			get
			{
				return this._DenseRank;
			}
			set
			{
				if ((this._DenseRank != value))
				{
					this.OnDenseRankChanging(value);
					this.SendPropertyChanging();
					this._DenseRank = value;
					this.SendPropertyChanged("DenseRank");
					this.OnDenseRankChanged();
				}
			}
		}
		
		[Column(Storage="_NTile", DbType="TinyInt NOT NULL")]
		public byte NTile
		{
			get
			{
				return this._NTile;
			}
			set
			{
				if ((this._NTile != value))
				{
					this.OnNTileChanging(value);
					this.SendPropertyChanging();
					this._NTile = value;
					this.SendPropertyChanged("NTile");
					this.OnNTileChanged();
				}
			}
		}
		
		[Association(Name="Host_Files_MOST_POPULAR_HOSTS_BY_HOST", Storage="_Host", ThisKey="HostID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Host Host
		{
			get
			{
				return this._Host.Entity;
			}
			set
			{
				Host previousValue = this._Host.Entity;
				if (((previousValue != value) 
							|| (this._Host.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Host.Entity = null;
						previousValue.Files_MOST_POPULAR_HOSTS_BY_HOST = null;
					}
					this._Host.Entity = value;
					if ((value != null))
					{
						value.Files_MOST_POPULAR_HOSTS_BY_HOST = this;
						this._HostID = value.ID;
					}
					else
					{
						this._HostID = default(int);
					}
					this.SendPropertyChanged("Host");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="rpt.Files_MOST_POPULAR_HOSTS_BY_SCHEMES")]
	public partial class Files_MOST_POPULAR_HOSTS_BY_SCHEME : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RowNumber;
		
		private System.Nullable<System.DateTime> _InitiallyDiscovered;
		
		private System.DateTime _LastDiscovered;
		
		private int _HostID;
		
		private int _Count;
		
		private System.Nullable<short> _DaysSinceInitiallyDiscovered;
		
		private short _DaysSinceLastDiscovered;
		
		private System.Nullable<double> _Strength;
		
		private int _Rank;
		
		private int _DenseRank;
		
		private byte _NTile;
		
		private EntityRef<Host> _Host;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRowNumberChanging(int value);
    partial void OnRowNumberChanged();
    partial void OnInitiallyDiscoveredChanging(System.Nullable<System.DateTime> value);
    partial void OnInitiallyDiscoveredChanged();
    partial void OnLastDiscoveredChanging(System.DateTime value);
    partial void OnLastDiscoveredChanged();
    partial void OnHostIDChanging(int value);
    partial void OnHostIDChanged();
    partial void OnCountChanging(int value);
    partial void OnCountChanged();
    partial void OnDaysSinceInitiallyDiscoveredChanging(System.Nullable<short> value);
    partial void OnDaysSinceInitiallyDiscoveredChanged();
    partial void OnDaysSinceLastDiscoveredChanging(short value);
    partial void OnDaysSinceLastDiscoveredChanged();
    partial void OnStrengthChanging(System.Nullable<double> value);
    partial void OnStrengthChanged();
    partial void OnRankChanging(int value);
    partial void OnRankChanged();
    partial void OnDenseRankChanging(int value);
    partial void OnDenseRankChanged();
    partial void OnNTileChanging(byte value);
    partial void OnNTileChanged();
    #endregion
		
		public Files_MOST_POPULAR_HOSTS_BY_SCHEME()
		{
			this._Host = default(EntityRef<Host>);
			OnCreated();
		}
		
		[Column(Storage="_RowNumber", DbType="Int NOT NULL")]
		public int RowNumber
		{
			get
			{
				return this._RowNumber;
			}
			set
			{
				if ((this._RowNumber != value))
				{
					this.OnRowNumberChanging(value);
					this.SendPropertyChanging();
					this._RowNumber = value;
					this.SendPropertyChanged("RowNumber");
					this.OnRowNumberChanged();
				}
			}
		}
		
		[Column(Storage="_InitiallyDiscovered", DbType="DateTime")]
		public System.Nullable<System.DateTime> InitiallyDiscovered
		{
			get
			{
				return this._InitiallyDiscovered;
			}
			set
			{
				if ((this._InitiallyDiscovered != value))
				{
					this.OnInitiallyDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._InitiallyDiscovered = value;
					this.SendPropertyChanged("InitiallyDiscovered");
					this.OnInitiallyDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_LastDiscovered", DbType="DateTime NOT NULL")]
		public System.DateTime LastDiscovered
		{
			get
			{
				return this._LastDiscovered;
			}
			set
			{
				if ((this._LastDiscovered != value))
				{
					this.OnLastDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._LastDiscovered = value;
					this.SendPropertyChanged("LastDiscovered");
					this.OnLastDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_HostID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int HostID
		{
			get
			{
				return this._HostID;
			}
			set
			{
				if ((this._HostID != value))
				{
					if (this._Host.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnHostIDChanging(value);
					this.SendPropertyChanging();
					this._HostID = value;
					this.SendPropertyChanged("HostID");
					this.OnHostIDChanged();
				}
			}
		}
		
		[Column(Storage="_Count", DbType="Int NOT NULL")]
		public int Count
		{
			get
			{
				return this._Count;
			}
			set
			{
				if ((this._Count != value))
				{
					this.OnCountChanging(value);
					this.SendPropertyChanging();
					this._Count = value;
					this.SendPropertyChanged("Count");
					this.OnCountChanged();
				}
			}
		}
		
		[Column(Storage="_DaysSinceInitiallyDiscovered", DbType="SmallInt")]
		public System.Nullable<short> DaysSinceInitiallyDiscovered
		{
			get
			{
				return this._DaysSinceInitiallyDiscovered;
			}
			set
			{
				if ((this._DaysSinceInitiallyDiscovered != value))
				{
					this.OnDaysSinceInitiallyDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._DaysSinceInitiallyDiscovered = value;
					this.SendPropertyChanged("DaysSinceInitiallyDiscovered");
					this.OnDaysSinceInitiallyDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_DaysSinceLastDiscovered", DbType="SmallInt NOT NULL")]
		public short DaysSinceLastDiscovered
		{
			get
			{
				return this._DaysSinceLastDiscovered;
			}
			set
			{
				if ((this._DaysSinceLastDiscovered != value))
				{
					this.OnDaysSinceLastDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._DaysSinceLastDiscovered = value;
					this.SendPropertyChanged("DaysSinceLastDiscovered");
					this.OnDaysSinceLastDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_Strength", DbType="Float")]
		public System.Nullable<double> Strength
		{
			get
			{
				return this._Strength;
			}
			set
			{
				if ((this._Strength != value))
				{
					this.OnStrengthChanging(value);
					this.SendPropertyChanging();
					this._Strength = value;
					this.SendPropertyChanged("Strength");
					this.OnStrengthChanged();
				}
			}
		}
		
		[Column(Storage="_Rank", DbType="Int NOT NULL")]
		public int Rank
		{
			get
			{
				return this._Rank;
			}
			set
			{
				if ((this._Rank != value))
				{
					this.OnRankChanging(value);
					this.SendPropertyChanging();
					this._Rank = value;
					this.SendPropertyChanged("Rank");
					this.OnRankChanged();
				}
			}
		}
		
		[Column(Storage="_DenseRank", DbType="Int NOT NULL")]
		public int DenseRank
		{
			get
			{
				return this._DenseRank;
			}
			set
			{
				if ((this._DenseRank != value))
				{
					this.OnDenseRankChanging(value);
					this.SendPropertyChanging();
					this._DenseRank = value;
					this.SendPropertyChanged("DenseRank");
					this.OnDenseRankChanged();
				}
			}
		}
		
		[Column(Storage="_NTile", DbType="TinyInt NOT NULL")]
		public byte NTile
		{
			get
			{
				return this._NTile;
			}
			set
			{
				if ((this._NTile != value))
				{
					this.OnNTileChanging(value);
					this.SendPropertyChanging();
					this._NTile = value;
					this.SendPropertyChanged("NTile");
					this.OnNTileChanged();
				}
			}
		}
		
		[Association(Name="Host_Files_MOST_POPULAR_HOSTS_BY_SCHEME", Storage="_Host", ThisKey="HostID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Host Host
		{
			get
			{
				return this._Host.Entity;
			}
			set
			{
				Host previousValue = this._Host.Entity;
				if (((previousValue != value) 
							|| (this._Host.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Host.Entity = null;
						previousValue.Files_MOST_POPULAR_HOSTS_BY_SCHEME = null;
					}
					this._Host.Entity = value;
					if ((value != null))
					{
						value.Files_MOST_POPULAR_HOSTS_BY_SCHEME = this;
						this._HostID = value.ID;
					}
					else
					{
						this._HostID = default(int);
					}
					this.SendPropertyChanged("Host");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="rpt.Files_MOST_POPULAR_SCHEMES_BY_ABSOLUTEURIS")]
	public partial class Files_MOST_POPULAR_SCHEMES_BY_ABSOLUTEURI : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RowNumber;
		
		private System.Nullable<System.DateTime> _InitiallyDiscovered;
		
		private System.DateTime _LastDiscovered;
		
		private int _SchemeID;
		
		private int _Count;
		
		private System.Nullable<short> _DaysSinceInitiallyDiscovered;
		
		private short _DaysSinceLastDiscovered;
		
		private System.Nullable<double> _Strength;
		
		private int _Rank;
		
		private int _DenseRank;
		
		private short _NTile;
		
		private EntityRef<Scheme> _Scheme;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRowNumberChanging(int value);
    partial void OnRowNumberChanged();
    partial void OnInitiallyDiscoveredChanging(System.Nullable<System.DateTime> value);
    partial void OnInitiallyDiscoveredChanged();
    partial void OnLastDiscoveredChanging(System.DateTime value);
    partial void OnLastDiscoveredChanged();
    partial void OnSchemeIDChanging(int value);
    partial void OnSchemeIDChanged();
    partial void OnCountChanging(int value);
    partial void OnCountChanged();
    partial void OnDaysSinceInitiallyDiscoveredChanging(System.Nullable<short> value);
    partial void OnDaysSinceInitiallyDiscoveredChanged();
    partial void OnDaysSinceLastDiscoveredChanging(short value);
    partial void OnDaysSinceLastDiscoveredChanged();
    partial void OnStrengthChanging(System.Nullable<double> value);
    partial void OnStrengthChanged();
    partial void OnRankChanging(int value);
    partial void OnRankChanged();
    partial void OnDenseRankChanging(int value);
    partial void OnDenseRankChanged();
    partial void OnNTileChanging(short value);
    partial void OnNTileChanged();
    #endregion
		
		public Files_MOST_POPULAR_SCHEMES_BY_ABSOLUTEURI()
		{
			this._Scheme = default(EntityRef<Scheme>);
			OnCreated();
		}
		
		[Column(Storage="_RowNumber", DbType="Int NOT NULL")]
		public int RowNumber
		{
			get
			{
				return this._RowNumber;
			}
			set
			{
				if ((this._RowNumber != value))
				{
					this.OnRowNumberChanging(value);
					this.SendPropertyChanging();
					this._RowNumber = value;
					this.SendPropertyChanged("RowNumber");
					this.OnRowNumberChanged();
				}
			}
		}
		
		[Column(Storage="_InitiallyDiscovered", DbType="DateTime")]
		public System.Nullable<System.DateTime> InitiallyDiscovered
		{
			get
			{
				return this._InitiallyDiscovered;
			}
			set
			{
				if ((this._InitiallyDiscovered != value))
				{
					this.OnInitiallyDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._InitiallyDiscovered = value;
					this.SendPropertyChanged("InitiallyDiscovered");
					this.OnInitiallyDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_LastDiscovered", DbType="DateTime NOT NULL")]
		public System.DateTime LastDiscovered
		{
			get
			{
				return this._LastDiscovered;
			}
			set
			{
				if ((this._LastDiscovered != value))
				{
					this.OnLastDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._LastDiscovered = value;
					this.SendPropertyChanged("LastDiscovered");
					this.OnLastDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_SchemeID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int SchemeID
		{
			get
			{
				return this._SchemeID;
			}
			set
			{
				if ((this._SchemeID != value))
				{
					if (this._Scheme.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSchemeIDChanging(value);
					this.SendPropertyChanging();
					this._SchemeID = value;
					this.SendPropertyChanged("SchemeID");
					this.OnSchemeIDChanged();
				}
			}
		}
		
		[Column(Storage="_Count", DbType="Int NOT NULL")]
		public int Count
		{
			get
			{
				return this._Count;
			}
			set
			{
				if ((this._Count != value))
				{
					this.OnCountChanging(value);
					this.SendPropertyChanging();
					this._Count = value;
					this.SendPropertyChanged("Count");
					this.OnCountChanged();
				}
			}
		}
		
		[Column(Storage="_DaysSinceInitiallyDiscovered", DbType="SmallInt")]
		public System.Nullable<short> DaysSinceInitiallyDiscovered
		{
			get
			{
				return this._DaysSinceInitiallyDiscovered;
			}
			set
			{
				if ((this._DaysSinceInitiallyDiscovered != value))
				{
					this.OnDaysSinceInitiallyDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._DaysSinceInitiallyDiscovered = value;
					this.SendPropertyChanged("DaysSinceInitiallyDiscovered");
					this.OnDaysSinceInitiallyDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_DaysSinceLastDiscovered", DbType="SmallInt NOT NULL")]
		public short DaysSinceLastDiscovered
		{
			get
			{
				return this._DaysSinceLastDiscovered;
			}
			set
			{
				if ((this._DaysSinceLastDiscovered != value))
				{
					this.OnDaysSinceLastDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._DaysSinceLastDiscovered = value;
					this.SendPropertyChanged("DaysSinceLastDiscovered");
					this.OnDaysSinceLastDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_Strength", DbType="Float")]
		public System.Nullable<double> Strength
		{
			get
			{
				return this._Strength;
			}
			set
			{
				if ((this._Strength != value))
				{
					this.OnStrengthChanging(value);
					this.SendPropertyChanging();
					this._Strength = value;
					this.SendPropertyChanged("Strength");
					this.OnStrengthChanged();
				}
			}
		}
		
		[Column(Storage="_Rank", DbType="Int NOT NULL")]
		public int Rank
		{
			get
			{
				return this._Rank;
			}
			set
			{
				if ((this._Rank != value))
				{
					this.OnRankChanging(value);
					this.SendPropertyChanging();
					this._Rank = value;
					this.SendPropertyChanged("Rank");
					this.OnRankChanged();
				}
			}
		}
		
		[Column(Storage="_DenseRank", DbType="Int NOT NULL")]
		public int DenseRank
		{
			get
			{
				return this._DenseRank;
			}
			set
			{
				if ((this._DenseRank != value))
				{
					this.OnDenseRankChanging(value);
					this.SendPropertyChanging();
					this._DenseRank = value;
					this.SendPropertyChanged("DenseRank");
					this.OnDenseRankChanged();
				}
			}
		}
		
		[Column(Storage="_NTile", DbType="SmallInt NOT NULL")]
		public short NTile
		{
			get
			{
				return this._NTile;
			}
			set
			{
				if ((this._NTile != value))
				{
					this.OnNTileChanging(value);
					this.SendPropertyChanging();
					this._NTile = value;
					this.SendPropertyChanged("NTile");
					this.OnNTileChanged();
				}
			}
		}
		
		[Association(Name="Scheme_Files_MOST_POPULAR_SCHEMES_BY_ABSOLUTEURI", Storage="_Scheme", ThisKey="SchemeID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Scheme Scheme
		{
			get
			{
				return this._Scheme.Entity;
			}
			set
			{
				Scheme previousValue = this._Scheme.Entity;
				if (((previousValue != value) 
							|| (this._Scheme.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Scheme.Entity = null;
						previousValue.Files_MOST_POPULAR_SCHEMES_BY_ABSOLUTEURI = null;
					}
					this._Scheme.Entity = value;
					if ((value != null))
					{
						value.Files_MOST_POPULAR_SCHEMES_BY_ABSOLUTEURI = this;
						this._SchemeID = value.ID;
					}
					else
					{
						this._SchemeID = default(int);
					}
					this.SendPropertyChanged("Scheme");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="rpt.Files_MOST_POPULAR_SCHEMES_BY_DOMAINS")]
	public partial class Files_MOST_POPULAR_SCHEMES_BY_DOMAIN : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RowNumber;
		
		private System.Nullable<System.DateTime> _InitiallyDiscovered;
		
		private System.DateTime _LastDiscovered;
		
		private int _SchemeID;
		
		private int _Count;
		
		private System.Nullable<short> _DaysSinceInitiallyDiscovered;
		
		private short _DaysSinceLastDiscovered;
		
		private System.Nullable<double> _Strength;
		
		private int _Rank;
		
		private int _DenseRank;
		
		private short _NTile;
		
		private EntityRef<Scheme> _Scheme;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRowNumberChanging(int value);
    partial void OnRowNumberChanged();
    partial void OnInitiallyDiscoveredChanging(System.Nullable<System.DateTime> value);
    partial void OnInitiallyDiscoveredChanged();
    partial void OnLastDiscoveredChanging(System.DateTime value);
    partial void OnLastDiscoveredChanged();
    partial void OnSchemeIDChanging(int value);
    partial void OnSchemeIDChanged();
    partial void OnCountChanging(int value);
    partial void OnCountChanged();
    partial void OnDaysSinceInitiallyDiscoveredChanging(System.Nullable<short> value);
    partial void OnDaysSinceInitiallyDiscoveredChanged();
    partial void OnDaysSinceLastDiscoveredChanging(short value);
    partial void OnDaysSinceLastDiscoveredChanged();
    partial void OnStrengthChanging(System.Nullable<double> value);
    partial void OnStrengthChanged();
    partial void OnRankChanging(int value);
    partial void OnRankChanged();
    partial void OnDenseRankChanging(int value);
    partial void OnDenseRankChanged();
    partial void OnNTileChanging(short value);
    partial void OnNTileChanged();
    #endregion
		
		public Files_MOST_POPULAR_SCHEMES_BY_DOMAIN()
		{
			this._Scheme = default(EntityRef<Scheme>);
			OnCreated();
		}
		
		[Column(Storage="_RowNumber", DbType="Int NOT NULL")]
		public int RowNumber
		{
			get
			{
				return this._RowNumber;
			}
			set
			{
				if ((this._RowNumber != value))
				{
					this.OnRowNumberChanging(value);
					this.SendPropertyChanging();
					this._RowNumber = value;
					this.SendPropertyChanged("RowNumber");
					this.OnRowNumberChanged();
				}
			}
		}
		
		[Column(Storage="_InitiallyDiscovered", DbType="DateTime")]
		public System.Nullable<System.DateTime> InitiallyDiscovered
		{
			get
			{
				return this._InitiallyDiscovered;
			}
			set
			{
				if ((this._InitiallyDiscovered != value))
				{
					this.OnInitiallyDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._InitiallyDiscovered = value;
					this.SendPropertyChanged("InitiallyDiscovered");
					this.OnInitiallyDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_LastDiscovered", DbType="DateTime NOT NULL")]
		public System.DateTime LastDiscovered
		{
			get
			{
				return this._LastDiscovered;
			}
			set
			{
				if ((this._LastDiscovered != value))
				{
					this.OnLastDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._LastDiscovered = value;
					this.SendPropertyChanged("LastDiscovered");
					this.OnLastDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_SchemeID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int SchemeID
		{
			get
			{
				return this._SchemeID;
			}
			set
			{
				if ((this._SchemeID != value))
				{
					if (this._Scheme.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSchemeIDChanging(value);
					this.SendPropertyChanging();
					this._SchemeID = value;
					this.SendPropertyChanged("SchemeID");
					this.OnSchemeIDChanged();
				}
			}
		}
		
		[Column(Storage="_Count", DbType="Int NOT NULL")]
		public int Count
		{
			get
			{
				return this._Count;
			}
			set
			{
				if ((this._Count != value))
				{
					this.OnCountChanging(value);
					this.SendPropertyChanging();
					this._Count = value;
					this.SendPropertyChanged("Count");
					this.OnCountChanged();
				}
			}
		}
		
		[Column(Storage="_DaysSinceInitiallyDiscovered", DbType="SmallInt")]
		public System.Nullable<short> DaysSinceInitiallyDiscovered
		{
			get
			{
				return this._DaysSinceInitiallyDiscovered;
			}
			set
			{
				if ((this._DaysSinceInitiallyDiscovered != value))
				{
					this.OnDaysSinceInitiallyDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._DaysSinceInitiallyDiscovered = value;
					this.SendPropertyChanged("DaysSinceInitiallyDiscovered");
					this.OnDaysSinceInitiallyDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_DaysSinceLastDiscovered", DbType="SmallInt NOT NULL")]
		public short DaysSinceLastDiscovered
		{
			get
			{
				return this._DaysSinceLastDiscovered;
			}
			set
			{
				if ((this._DaysSinceLastDiscovered != value))
				{
					this.OnDaysSinceLastDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._DaysSinceLastDiscovered = value;
					this.SendPropertyChanged("DaysSinceLastDiscovered");
					this.OnDaysSinceLastDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_Strength", DbType="Float")]
		public System.Nullable<double> Strength
		{
			get
			{
				return this._Strength;
			}
			set
			{
				if ((this._Strength != value))
				{
					this.OnStrengthChanging(value);
					this.SendPropertyChanging();
					this._Strength = value;
					this.SendPropertyChanged("Strength");
					this.OnStrengthChanged();
				}
			}
		}
		
		[Column(Storage="_Rank", DbType="Int NOT NULL")]
		public int Rank
		{
			get
			{
				return this._Rank;
			}
			set
			{
				if ((this._Rank != value))
				{
					this.OnRankChanging(value);
					this.SendPropertyChanging();
					this._Rank = value;
					this.SendPropertyChanged("Rank");
					this.OnRankChanged();
				}
			}
		}
		
		[Column(Storage="_DenseRank", DbType="Int NOT NULL")]
		public int DenseRank
		{
			get
			{
				return this._DenseRank;
			}
			set
			{
				if ((this._DenseRank != value))
				{
					this.OnDenseRankChanging(value);
					this.SendPropertyChanging();
					this._DenseRank = value;
					this.SendPropertyChanged("DenseRank");
					this.OnDenseRankChanged();
				}
			}
		}
		
		[Column(Storage="_NTile", DbType="SmallInt NOT NULL")]
		public short NTile
		{
			get
			{
				return this._NTile;
			}
			set
			{
				if ((this._NTile != value))
				{
					this.OnNTileChanging(value);
					this.SendPropertyChanging();
					this._NTile = value;
					this.SendPropertyChanged("NTile");
					this.OnNTileChanged();
				}
			}
		}
		
		[Association(Name="Scheme_Files_MOST_POPULAR_SCHEMES_BY_DOMAIN", Storage="_Scheme", ThisKey="SchemeID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Scheme Scheme
		{
			get
			{
				return this._Scheme.Entity;
			}
			set
			{
				Scheme previousValue = this._Scheme.Entity;
				if (((previousValue != value) 
							|| (this._Scheme.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Scheme.Entity = null;
						previousValue.Files_MOST_POPULAR_SCHEMES_BY_DOMAIN = null;
					}
					this._Scheme.Entity = value;
					if ((value != null))
					{
						value.Files_MOST_POPULAR_SCHEMES_BY_DOMAIN = this;
						this._SchemeID = value.ID;
					}
					else
					{
						this._SchemeID = default(int);
					}
					this.SendPropertyChanged("Scheme");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="rpt.Files_MOST_POPULAR_SCHEMES_BY_EXTENSIONS")]
	public partial class Files_MOST_POPULAR_SCHEMES_BY_EXTENSION : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RowNumber;
		
		private System.Nullable<System.DateTime> _InitiallyDiscovered;
		
		private System.DateTime _LastDiscovered;
		
		private int _SchemeID;
		
		private int _Count;
		
		private System.Nullable<short> _DaysSinceInitiallyDiscovered;
		
		private short _DaysSinceLastDiscovered;
		
		private System.Nullable<double> _Strength;
		
		private int _Rank;
		
		private int _DenseRank;
		
		private short _NTile;
		
		private EntityRef<Scheme> _Scheme;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRowNumberChanging(int value);
    partial void OnRowNumberChanged();
    partial void OnInitiallyDiscoveredChanging(System.Nullable<System.DateTime> value);
    partial void OnInitiallyDiscoveredChanged();
    partial void OnLastDiscoveredChanging(System.DateTime value);
    partial void OnLastDiscoveredChanged();
    partial void OnSchemeIDChanging(int value);
    partial void OnSchemeIDChanged();
    partial void OnCountChanging(int value);
    partial void OnCountChanged();
    partial void OnDaysSinceInitiallyDiscoveredChanging(System.Nullable<short> value);
    partial void OnDaysSinceInitiallyDiscoveredChanged();
    partial void OnDaysSinceLastDiscoveredChanging(short value);
    partial void OnDaysSinceLastDiscoveredChanged();
    partial void OnStrengthChanging(System.Nullable<double> value);
    partial void OnStrengthChanged();
    partial void OnRankChanging(int value);
    partial void OnRankChanged();
    partial void OnDenseRankChanging(int value);
    partial void OnDenseRankChanged();
    partial void OnNTileChanging(short value);
    partial void OnNTileChanged();
    #endregion
		
		public Files_MOST_POPULAR_SCHEMES_BY_EXTENSION()
		{
			this._Scheme = default(EntityRef<Scheme>);
			OnCreated();
		}
		
		[Column(Storage="_RowNumber", DbType="Int NOT NULL")]
		public int RowNumber
		{
			get
			{
				return this._RowNumber;
			}
			set
			{
				if ((this._RowNumber != value))
				{
					this.OnRowNumberChanging(value);
					this.SendPropertyChanging();
					this._RowNumber = value;
					this.SendPropertyChanged("RowNumber");
					this.OnRowNumberChanged();
				}
			}
		}
		
		[Column(Storage="_InitiallyDiscovered", DbType="DateTime")]
		public System.Nullable<System.DateTime> InitiallyDiscovered
		{
			get
			{
				return this._InitiallyDiscovered;
			}
			set
			{
				if ((this._InitiallyDiscovered != value))
				{
					this.OnInitiallyDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._InitiallyDiscovered = value;
					this.SendPropertyChanged("InitiallyDiscovered");
					this.OnInitiallyDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_LastDiscovered", DbType="DateTime NOT NULL")]
		public System.DateTime LastDiscovered
		{
			get
			{
				return this._LastDiscovered;
			}
			set
			{
				if ((this._LastDiscovered != value))
				{
					this.OnLastDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._LastDiscovered = value;
					this.SendPropertyChanged("LastDiscovered");
					this.OnLastDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_SchemeID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int SchemeID
		{
			get
			{
				return this._SchemeID;
			}
			set
			{
				if ((this._SchemeID != value))
				{
					if (this._Scheme.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSchemeIDChanging(value);
					this.SendPropertyChanging();
					this._SchemeID = value;
					this.SendPropertyChanged("SchemeID");
					this.OnSchemeIDChanged();
				}
			}
		}
		
		[Column(Storage="_Count", DbType="Int NOT NULL")]
		public int Count
		{
			get
			{
				return this._Count;
			}
			set
			{
				if ((this._Count != value))
				{
					this.OnCountChanging(value);
					this.SendPropertyChanging();
					this._Count = value;
					this.SendPropertyChanged("Count");
					this.OnCountChanged();
				}
			}
		}
		
		[Column(Storage="_DaysSinceInitiallyDiscovered", DbType="SmallInt")]
		public System.Nullable<short> DaysSinceInitiallyDiscovered
		{
			get
			{
				return this._DaysSinceInitiallyDiscovered;
			}
			set
			{
				if ((this._DaysSinceInitiallyDiscovered != value))
				{
					this.OnDaysSinceInitiallyDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._DaysSinceInitiallyDiscovered = value;
					this.SendPropertyChanged("DaysSinceInitiallyDiscovered");
					this.OnDaysSinceInitiallyDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_DaysSinceLastDiscovered", DbType="SmallInt NOT NULL")]
		public short DaysSinceLastDiscovered
		{
			get
			{
				return this._DaysSinceLastDiscovered;
			}
			set
			{
				if ((this._DaysSinceLastDiscovered != value))
				{
					this.OnDaysSinceLastDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._DaysSinceLastDiscovered = value;
					this.SendPropertyChanged("DaysSinceLastDiscovered");
					this.OnDaysSinceLastDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_Strength", DbType="Float")]
		public System.Nullable<double> Strength
		{
			get
			{
				return this._Strength;
			}
			set
			{
				if ((this._Strength != value))
				{
					this.OnStrengthChanging(value);
					this.SendPropertyChanging();
					this._Strength = value;
					this.SendPropertyChanged("Strength");
					this.OnStrengthChanged();
				}
			}
		}
		
		[Column(Storage="_Rank", DbType="Int NOT NULL")]
		public int Rank
		{
			get
			{
				return this._Rank;
			}
			set
			{
				if ((this._Rank != value))
				{
					this.OnRankChanging(value);
					this.SendPropertyChanging();
					this._Rank = value;
					this.SendPropertyChanged("Rank");
					this.OnRankChanged();
				}
			}
		}
		
		[Column(Storage="_DenseRank", DbType="Int NOT NULL")]
		public int DenseRank
		{
			get
			{
				return this._DenseRank;
			}
			set
			{
				if ((this._DenseRank != value))
				{
					this.OnDenseRankChanging(value);
					this.SendPropertyChanging();
					this._DenseRank = value;
					this.SendPropertyChanged("DenseRank");
					this.OnDenseRankChanged();
				}
			}
		}
		
		[Column(Storage="_NTile", DbType="SmallInt NOT NULL")]
		public short NTile
		{
			get
			{
				return this._NTile;
			}
			set
			{
				if ((this._NTile != value))
				{
					this.OnNTileChanging(value);
					this.SendPropertyChanging();
					this._NTile = value;
					this.SendPropertyChanged("NTile");
					this.OnNTileChanged();
				}
			}
		}
		
		[Association(Name="Scheme_Files_MOST_POPULAR_SCHEMES_BY_EXTENSION", Storage="_Scheme", ThisKey="SchemeID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Scheme Scheme
		{
			get
			{
				return this._Scheme.Entity;
			}
			set
			{
				Scheme previousValue = this._Scheme.Entity;
				if (((previousValue != value) 
							|| (this._Scheme.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Scheme.Entity = null;
						previousValue.Files_MOST_POPULAR_SCHEMES_BY_EXTENSION = null;
					}
					this._Scheme.Entity = value;
					if ((value != null))
					{
						value.Files_MOST_POPULAR_SCHEMES_BY_EXTENSION = this;
						this._SchemeID = value.ID;
					}
					else
					{
						this._SchemeID = default(int);
					}
					this.SendPropertyChanged("Scheme");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="rpt.Files_MOST_POPULAR_SCHEMES_BY_HOSTS")]
	public partial class Files_MOST_POPULAR_SCHEMES_BY_HOST : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RowNumber;
		
		private System.Nullable<System.DateTime> _InitiallyDiscovered;
		
		private System.DateTime _LastDiscovered;
		
		private int _SchemeID;
		
		private int _Count;
		
		private System.Nullable<short> _DaysSinceInitiallyDiscovered;
		
		private short _DaysSinceLastDiscovered;
		
		private System.Nullable<double> _Strength;
		
		private int _Rank;
		
		private int _DenseRank;
		
		private short _NTile;
		
		private EntityRef<Scheme> _Scheme;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRowNumberChanging(int value);
    partial void OnRowNumberChanged();
    partial void OnInitiallyDiscoveredChanging(System.Nullable<System.DateTime> value);
    partial void OnInitiallyDiscoveredChanged();
    partial void OnLastDiscoveredChanging(System.DateTime value);
    partial void OnLastDiscoveredChanged();
    partial void OnSchemeIDChanging(int value);
    partial void OnSchemeIDChanged();
    partial void OnCountChanging(int value);
    partial void OnCountChanged();
    partial void OnDaysSinceInitiallyDiscoveredChanging(System.Nullable<short> value);
    partial void OnDaysSinceInitiallyDiscoveredChanged();
    partial void OnDaysSinceLastDiscoveredChanging(short value);
    partial void OnDaysSinceLastDiscoveredChanged();
    partial void OnStrengthChanging(System.Nullable<double> value);
    partial void OnStrengthChanged();
    partial void OnRankChanging(int value);
    partial void OnRankChanged();
    partial void OnDenseRankChanging(int value);
    partial void OnDenseRankChanged();
    partial void OnNTileChanging(short value);
    partial void OnNTileChanged();
    #endregion
		
		public Files_MOST_POPULAR_SCHEMES_BY_HOST()
		{
			this._Scheme = default(EntityRef<Scheme>);
			OnCreated();
		}
		
		[Column(Storage="_RowNumber", DbType="Int NOT NULL")]
		public int RowNumber
		{
			get
			{
				return this._RowNumber;
			}
			set
			{
				if ((this._RowNumber != value))
				{
					this.OnRowNumberChanging(value);
					this.SendPropertyChanging();
					this._RowNumber = value;
					this.SendPropertyChanged("RowNumber");
					this.OnRowNumberChanged();
				}
			}
		}
		
		[Column(Storage="_InitiallyDiscovered", DbType="DateTime")]
		public System.Nullable<System.DateTime> InitiallyDiscovered
		{
			get
			{
				return this._InitiallyDiscovered;
			}
			set
			{
				if ((this._InitiallyDiscovered != value))
				{
					this.OnInitiallyDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._InitiallyDiscovered = value;
					this.SendPropertyChanged("InitiallyDiscovered");
					this.OnInitiallyDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_LastDiscovered", DbType="DateTime NOT NULL")]
		public System.DateTime LastDiscovered
		{
			get
			{
				return this._LastDiscovered;
			}
			set
			{
				if ((this._LastDiscovered != value))
				{
					this.OnLastDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._LastDiscovered = value;
					this.SendPropertyChanged("LastDiscovered");
					this.OnLastDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_SchemeID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int SchemeID
		{
			get
			{
				return this._SchemeID;
			}
			set
			{
				if ((this._SchemeID != value))
				{
					if (this._Scheme.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSchemeIDChanging(value);
					this.SendPropertyChanging();
					this._SchemeID = value;
					this.SendPropertyChanged("SchemeID");
					this.OnSchemeIDChanged();
				}
			}
		}
		
		[Column(Storage="_Count", DbType="Int NOT NULL")]
		public int Count
		{
			get
			{
				return this._Count;
			}
			set
			{
				if ((this._Count != value))
				{
					this.OnCountChanging(value);
					this.SendPropertyChanging();
					this._Count = value;
					this.SendPropertyChanged("Count");
					this.OnCountChanged();
				}
			}
		}
		
		[Column(Storage="_DaysSinceInitiallyDiscovered", DbType="SmallInt")]
		public System.Nullable<short> DaysSinceInitiallyDiscovered
		{
			get
			{
				return this._DaysSinceInitiallyDiscovered;
			}
			set
			{
				if ((this._DaysSinceInitiallyDiscovered != value))
				{
					this.OnDaysSinceInitiallyDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._DaysSinceInitiallyDiscovered = value;
					this.SendPropertyChanged("DaysSinceInitiallyDiscovered");
					this.OnDaysSinceInitiallyDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_DaysSinceLastDiscovered", DbType="SmallInt NOT NULL")]
		public short DaysSinceLastDiscovered
		{
			get
			{
				return this._DaysSinceLastDiscovered;
			}
			set
			{
				if ((this._DaysSinceLastDiscovered != value))
				{
					this.OnDaysSinceLastDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._DaysSinceLastDiscovered = value;
					this.SendPropertyChanged("DaysSinceLastDiscovered");
					this.OnDaysSinceLastDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_Strength", DbType="Float")]
		public System.Nullable<double> Strength
		{
			get
			{
				return this._Strength;
			}
			set
			{
				if ((this._Strength != value))
				{
					this.OnStrengthChanging(value);
					this.SendPropertyChanging();
					this._Strength = value;
					this.SendPropertyChanged("Strength");
					this.OnStrengthChanged();
				}
			}
		}
		
		[Column(Storage="_Rank", DbType="Int NOT NULL")]
		public int Rank
		{
			get
			{
				return this._Rank;
			}
			set
			{
				if ((this._Rank != value))
				{
					this.OnRankChanging(value);
					this.SendPropertyChanging();
					this._Rank = value;
					this.SendPropertyChanged("Rank");
					this.OnRankChanged();
				}
			}
		}
		
		[Column(Storage="_DenseRank", DbType="Int NOT NULL")]
		public int DenseRank
		{
			get
			{
				return this._DenseRank;
			}
			set
			{
				if ((this._DenseRank != value))
				{
					this.OnDenseRankChanging(value);
					this.SendPropertyChanging();
					this._DenseRank = value;
					this.SendPropertyChanged("DenseRank");
					this.OnDenseRankChanged();
				}
			}
		}
		
		[Column(Storage="_NTile", DbType="SmallInt NOT NULL")]
		public short NTile
		{
			get
			{
				return this._NTile;
			}
			set
			{
				if ((this._NTile != value))
				{
					this.OnNTileChanging(value);
					this.SendPropertyChanging();
					this._NTile = value;
					this.SendPropertyChanged("NTile");
					this.OnNTileChanged();
				}
			}
		}
		
		[Association(Name="Scheme_Files_MOST_POPULAR_SCHEMES_BY_HOST", Storage="_Scheme", ThisKey="SchemeID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Scheme Scheme
		{
			get
			{
				return this._Scheme.Entity;
			}
			set
			{
				Scheme previousValue = this._Scheme.Entity;
				if (((previousValue != value) 
							|| (this._Scheme.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Scheme.Entity = null;
						previousValue.Files_MOST_POPULAR_SCHEMES_BY_HOST = null;
					}
					this._Scheme.Entity = value;
					if ((value != null))
					{
						value.Files_MOST_POPULAR_SCHEMES_BY_HOST = this;
						this._SchemeID = value.ID;
					}
					else
					{
						this._SchemeID = default(int);
					}
					this.SendPropertyChanged("Scheme");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="rpt.HyperLinks_COUNT_BY_ABSOLUTEURI")]
	public partial class HyperLinks_COUNT_BY_ABSOLUTEURI : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RowNumber;
		
		private long _HyperLinkID;
		
		private int _Count;
		
		private int _Rank;
		
		private int _DenseRank;
		
		private byte _NTile;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRowNumberChanging(int value);
    partial void OnRowNumberChanged();
    partial void OnHyperLinkIDChanging(long value);
    partial void OnHyperLinkIDChanged();
    partial void OnCountChanging(int value);
    partial void OnCountChanged();
    partial void OnRankChanging(int value);
    partial void OnRankChanged();
    partial void OnDenseRankChanging(int value);
    partial void OnDenseRankChanged();
    partial void OnNTileChanging(byte value);
    partial void OnNTileChanged();
    #endregion
		
		public HyperLinks_COUNT_BY_ABSOLUTEURI()
		{
			OnCreated();
		}
		
		[Column(Storage="_RowNumber", DbType="Int NOT NULL")]
		public int RowNumber
		{
			get
			{
				return this._RowNumber;
			}
			set
			{
				if ((this._RowNumber != value))
				{
					this.OnRowNumberChanging(value);
					this.SendPropertyChanging();
					this._RowNumber = value;
					this.SendPropertyChanged("RowNumber");
					this.OnRowNumberChanged();
				}
			}
		}
		
		[Column(Storage="_HyperLinkID", DbType="BigInt NOT NULL", IsPrimaryKey=true)]
		public long HyperLinkID
		{
			get
			{
				return this._HyperLinkID;
			}
			set
			{
				if ((this._HyperLinkID != value))
				{
					this.OnHyperLinkIDChanging(value);
					this.SendPropertyChanging();
					this._HyperLinkID = value;
					this.SendPropertyChanged("HyperLinkID");
					this.OnHyperLinkIDChanged();
				}
			}
		}
		
		[Column(Storage="_Count", DbType="Int NOT NULL")]
		public int Count
		{
			get
			{
				return this._Count;
			}
			set
			{
				if ((this._Count != value))
				{
					this.OnCountChanging(value);
					this.SendPropertyChanging();
					this._Count = value;
					this.SendPropertyChanged("Count");
					this.OnCountChanged();
				}
			}
		}
		
		[Column(Storage="_Rank", DbType="Int NOT NULL")]
		public int Rank
		{
			get
			{
				return this._Rank;
			}
			set
			{
				if ((this._Rank != value))
				{
					this.OnRankChanging(value);
					this.SendPropertyChanging();
					this._Rank = value;
					this.SendPropertyChanged("Rank");
					this.OnRankChanged();
				}
			}
		}
		
		[Column(Storage="_DenseRank", DbType="Int NOT NULL")]
		public int DenseRank
		{
			get
			{
				return this._DenseRank;
			}
			set
			{
				if ((this._DenseRank != value))
				{
					this.OnDenseRankChanging(value);
					this.SendPropertyChanging();
					this._DenseRank = value;
					this.SendPropertyChanged("DenseRank");
					this.OnDenseRankChanged();
				}
			}
		}
		
		[Column(Storage="_NTile", DbType="TinyInt NOT NULL")]
		public byte NTile
		{
			get
			{
				return this._NTile;
			}
			set
			{
				if ((this._NTile != value))
				{
					this.OnNTileChanging(value);
					this.SendPropertyChanging();
					this._NTile = value;
					this.SendPropertyChanged("NTile");
					this.OnNTileChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="rpt.HyperLinks_MOST_POPULAR_SCHEMES_BY_SCHEMES")]
	public partial class HyperLinks_MOST_POPULAR_SCHEMES_BY_SCHEME : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RowNumber;
		
		private System.Nullable<System.DateTime> _InitiallyDiscovered;
		
		private System.DateTime _LastDiscovered;
		
		private int _SchemeID;
		
		private int _Count;
		
		private System.Nullable<short> _DaysSinceInitiallyDiscovered;
		
		private short _DaysSinceLastDiscovered;
		
		private System.Nullable<double> _Strength;
		
		private int _Rank;
		
		private int _DenseRank;
		
		private short _NTile;
		
		private EntityRef<Scheme> _Scheme;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRowNumberChanging(int value);
    partial void OnRowNumberChanged();
    partial void OnInitiallyDiscoveredChanging(System.Nullable<System.DateTime> value);
    partial void OnInitiallyDiscoveredChanged();
    partial void OnLastDiscoveredChanging(System.DateTime value);
    partial void OnLastDiscoveredChanged();
    partial void OnSchemeIDChanging(int value);
    partial void OnSchemeIDChanged();
    partial void OnCountChanging(int value);
    partial void OnCountChanged();
    partial void OnDaysSinceInitiallyDiscoveredChanging(System.Nullable<short> value);
    partial void OnDaysSinceInitiallyDiscoveredChanged();
    partial void OnDaysSinceLastDiscoveredChanging(short value);
    partial void OnDaysSinceLastDiscoveredChanged();
    partial void OnStrengthChanging(System.Nullable<double> value);
    partial void OnStrengthChanged();
    partial void OnRankChanging(int value);
    partial void OnRankChanged();
    partial void OnDenseRankChanging(int value);
    partial void OnDenseRankChanged();
    partial void OnNTileChanging(short value);
    partial void OnNTileChanged();
    #endregion
		
		public HyperLinks_MOST_POPULAR_SCHEMES_BY_SCHEME()
		{
			this._Scheme = default(EntityRef<Scheme>);
			OnCreated();
		}
		
		[Column(Storage="_RowNumber", DbType="Int NOT NULL")]
		public int RowNumber
		{
			get
			{
				return this._RowNumber;
			}
			set
			{
				if ((this._RowNumber != value))
				{
					this.OnRowNumberChanging(value);
					this.SendPropertyChanging();
					this._RowNumber = value;
					this.SendPropertyChanged("RowNumber");
					this.OnRowNumberChanged();
				}
			}
		}
		
		[Column(Storage="_InitiallyDiscovered", DbType="DateTime")]
		public System.Nullable<System.DateTime> InitiallyDiscovered
		{
			get
			{
				return this._InitiallyDiscovered;
			}
			set
			{
				if ((this._InitiallyDiscovered != value))
				{
					this.OnInitiallyDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._InitiallyDiscovered = value;
					this.SendPropertyChanged("InitiallyDiscovered");
					this.OnInitiallyDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_LastDiscovered", DbType="DateTime NOT NULL")]
		public System.DateTime LastDiscovered
		{
			get
			{
				return this._LastDiscovered;
			}
			set
			{
				if ((this._LastDiscovered != value))
				{
					this.OnLastDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._LastDiscovered = value;
					this.SendPropertyChanged("LastDiscovered");
					this.OnLastDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_SchemeID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int SchemeID
		{
			get
			{
				return this._SchemeID;
			}
			set
			{
				if ((this._SchemeID != value))
				{
					if (this._Scheme.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSchemeIDChanging(value);
					this.SendPropertyChanging();
					this._SchemeID = value;
					this.SendPropertyChanged("SchemeID");
					this.OnSchemeIDChanged();
				}
			}
		}
		
		[Column(Storage="_Count", DbType="Int NOT NULL")]
		public int Count
		{
			get
			{
				return this._Count;
			}
			set
			{
				if ((this._Count != value))
				{
					this.OnCountChanging(value);
					this.SendPropertyChanging();
					this._Count = value;
					this.SendPropertyChanged("Count");
					this.OnCountChanged();
				}
			}
		}
		
		[Column(Storage="_DaysSinceInitiallyDiscovered", DbType="SmallInt")]
		public System.Nullable<short> DaysSinceInitiallyDiscovered
		{
			get
			{
				return this._DaysSinceInitiallyDiscovered;
			}
			set
			{
				if ((this._DaysSinceInitiallyDiscovered != value))
				{
					this.OnDaysSinceInitiallyDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._DaysSinceInitiallyDiscovered = value;
					this.SendPropertyChanged("DaysSinceInitiallyDiscovered");
					this.OnDaysSinceInitiallyDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_DaysSinceLastDiscovered", DbType="SmallInt NOT NULL")]
		public short DaysSinceLastDiscovered
		{
			get
			{
				return this._DaysSinceLastDiscovered;
			}
			set
			{
				if ((this._DaysSinceLastDiscovered != value))
				{
					this.OnDaysSinceLastDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._DaysSinceLastDiscovered = value;
					this.SendPropertyChanged("DaysSinceLastDiscovered");
					this.OnDaysSinceLastDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_Strength", DbType="Float")]
		public System.Nullable<double> Strength
		{
			get
			{
				return this._Strength;
			}
			set
			{
				if ((this._Strength != value))
				{
					this.OnStrengthChanging(value);
					this.SendPropertyChanging();
					this._Strength = value;
					this.SendPropertyChanged("Strength");
					this.OnStrengthChanged();
				}
			}
		}
		
		[Column(Storage="_Rank", DbType="Int NOT NULL")]
		public int Rank
		{
			get
			{
				return this._Rank;
			}
			set
			{
				if ((this._Rank != value))
				{
					this.OnRankChanging(value);
					this.SendPropertyChanging();
					this._Rank = value;
					this.SendPropertyChanged("Rank");
					this.OnRankChanged();
				}
			}
		}
		
		[Column(Storage="_DenseRank", DbType="Int NOT NULL")]
		public int DenseRank
		{
			get
			{
				return this._DenseRank;
			}
			set
			{
				if ((this._DenseRank != value))
				{
					this.OnDenseRankChanging(value);
					this.SendPropertyChanging();
					this._DenseRank = value;
					this.SendPropertyChanged("DenseRank");
					this.OnDenseRankChanged();
				}
			}
		}
		
		[Column(Storage="_NTile", DbType="SmallInt NOT NULL")]
		public short NTile
		{
			get
			{
				return this._NTile;
			}
			set
			{
				if ((this._NTile != value))
				{
					this.OnNTileChanging(value);
					this.SendPropertyChanging();
					this._NTile = value;
					this.SendPropertyChanged("NTile");
					this.OnNTileChanged();
				}
			}
		}
		
		[Association(Name="Scheme_HyperLinks_MOST_POPULAR_SCHEMES_BY_SCHEME", Storage="_Scheme", ThisKey="SchemeID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Scheme Scheme
		{
			get
			{
				return this._Scheme.Entity;
			}
			set
			{
				Scheme previousValue = this._Scheme.Entity;
				if (((previousValue != value) 
							|| (this._Scheme.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Scheme.Entity = null;
						previousValue.HyperLinks_MOST_POPULAR_SCHEMES_BY_SCHEME = null;
					}
					this._Scheme.Entity = value;
					if ((value != null))
					{
						value.HyperLinks_MOST_POPULAR_SCHEMES_BY_SCHEME = this;
						this._SchemeID = value.ID;
					}
					else
					{
						this._SchemeID = default(int);
					}
					this.SendPropertyChanged("Scheme");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="rpt.HyperLinks_COUNT_BY_DOMAIN")]
	public partial class HyperLinks_COUNT_BY_DOMAIN : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RowNumber;
		
		private int _DomainID;
		
		private int _Count;
		
		private int _Rank;
		
		private int _DenseRank;
		
		private byte _NTile;
		
		private EntityRef<Domain> _Domain;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRowNumberChanging(int value);
    partial void OnRowNumberChanged();
    partial void OnDomainIDChanging(int value);
    partial void OnDomainIDChanged();
    partial void OnCountChanging(int value);
    partial void OnCountChanged();
    partial void OnRankChanging(int value);
    partial void OnRankChanged();
    partial void OnDenseRankChanging(int value);
    partial void OnDenseRankChanged();
    partial void OnNTileChanging(byte value);
    partial void OnNTileChanged();
    #endregion
		
		public HyperLinks_COUNT_BY_DOMAIN()
		{
			this._Domain = default(EntityRef<Domain>);
			OnCreated();
		}
		
		[Column(Storage="_RowNumber", DbType="Int NOT NULL")]
		public int RowNumber
		{
			get
			{
				return this._RowNumber;
			}
			set
			{
				if ((this._RowNumber != value))
				{
					this.OnRowNumberChanging(value);
					this.SendPropertyChanging();
					this._RowNumber = value;
					this.SendPropertyChanged("RowNumber");
					this.OnRowNumberChanged();
				}
			}
		}
		
		[Column(Storage="_DomainID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int DomainID
		{
			get
			{
				return this._DomainID;
			}
			set
			{
				if ((this._DomainID != value))
				{
					if (this._Domain.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDomainIDChanging(value);
					this.SendPropertyChanging();
					this._DomainID = value;
					this.SendPropertyChanged("DomainID");
					this.OnDomainIDChanged();
				}
			}
		}
		
		[Column(Storage="_Count", DbType="Int NOT NULL")]
		public int Count
		{
			get
			{
				return this._Count;
			}
			set
			{
				if ((this._Count != value))
				{
					this.OnCountChanging(value);
					this.SendPropertyChanging();
					this._Count = value;
					this.SendPropertyChanged("Count");
					this.OnCountChanged();
				}
			}
		}
		
		[Column(Storage="_Rank", DbType="Int NOT NULL")]
		public int Rank
		{
			get
			{
				return this._Rank;
			}
			set
			{
				if ((this._Rank != value))
				{
					this.OnRankChanging(value);
					this.SendPropertyChanging();
					this._Rank = value;
					this.SendPropertyChanged("Rank");
					this.OnRankChanged();
				}
			}
		}
		
		[Column(Storage="_DenseRank", DbType="Int NOT NULL")]
		public int DenseRank
		{
			get
			{
				return this._DenseRank;
			}
			set
			{
				if ((this._DenseRank != value))
				{
					this.OnDenseRankChanging(value);
					this.SendPropertyChanging();
					this._DenseRank = value;
					this.SendPropertyChanged("DenseRank");
					this.OnDenseRankChanged();
				}
			}
		}
		
		[Column(Storage="_NTile", DbType="TinyInt NOT NULL")]
		public byte NTile
		{
			get
			{
				return this._NTile;
			}
			set
			{
				if ((this._NTile != value))
				{
					this.OnNTileChanging(value);
					this.SendPropertyChanging();
					this._NTile = value;
					this.SendPropertyChanged("NTile");
					this.OnNTileChanged();
				}
			}
		}
		
		[Association(Name="Domain_HyperLinks_COUNT_BY_DOMAIN", Storage="_Domain", ThisKey="DomainID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Domain Domain
		{
			get
			{
				return this._Domain.Entity;
			}
			set
			{
				Domain previousValue = this._Domain.Entity;
				if (((previousValue != value) 
							|| (this._Domain.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Domain.Entity = null;
						previousValue.HyperLinks_COUNT_BY_DOMAIN = null;
					}
					this._Domain.Entity = value;
					if ((value != null))
					{
						value.HyperLinks_COUNT_BY_DOMAIN = this;
						this._DomainID = value.ID;
					}
					else
					{
						this._DomainID = default(int);
					}
					this.SendPropertyChanged("Domain");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="rpt.HyperLinks_COUNT_BY_EXTENSION")]
	public partial class HyperLinks_COUNT_BY_EXTENSION : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RowNumber;
		
		private int _ExtensionID;
		
		private int _Count;
		
		private int _Rank;
		
		private int _DenseRank;
		
		private byte _NTile;
		
		private EntityRef<Extension> _Extension;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRowNumberChanging(int value);
    partial void OnRowNumberChanged();
    partial void OnExtensionIDChanging(int value);
    partial void OnExtensionIDChanged();
    partial void OnCountChanging(int value);
    partial void OnCountChanged();
    partial void OnRankChanging(int value);
    partial void OnRankChanged();
    partial void OnDenseRankChanging(int value);
    partial void OnDenseRankChanged();
    partial void OnNTileChanging(byte value);
    partial void OnNTileChanged();
    #endregion
		
		public HyperLinks_COUNT_BY_EXTENSION()
		{
			this._Extension = default(EntityRef<Extension>);
			OnCreated();
		}
		
		[Column(Storage="_RowNumber", DbType="Int NOT NULL")]
		public int RowNumber
		{
			get
			{
				return this._RowNumber;
			}
			set
			{
				if ((this._RowNumber != value))
				{
					this.OnRowNumberChanging(value);
					this.SendPropertyChanging();
					this._RowNumber = value;
					this.SendPropertyChanged("RowNumber");
					this.OnRowNumberChanged();
				}
			}
		}
		
		[Column(Storage="_ExtensionID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ExtensionID
		{
			get
			{
				return this._ExtensionID;
			}
			set
			{
				if ((this._ExtensionID != value))
				{
					if (this._Extension.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnExtensionIDChanging(value);
					this.SendPropertyChanging();
					this._ExtensionID = value;
					this.SendPropertyChanged("ExtensionID");
					this.OnExtensionIDChanged();
				}
			}
		}
		
		[Column(Storage="_Count", DbType="Int NOT NULL")]
		public int Count
		{
			get
			{
				return this._Count;
			}
			set
			{
				if ((this._Count != value))
				{
					this.OnCountChanging(value);
					this.SendPropertyChanging();
					this._Count = value;
					this.SendPropertyChanged("Count");
					this.OnCountChanged();
				}
			}
		}
		
		[Column(Storage="_Rank", DbType="Int NOT NULL")]
		public int Rank
		{
			get
			{
				return this._Rank;
			}
			set
			{
				if ((this._Rank != value))
				{
					this.OnRankChanging(value);
					this.SendPropertyChanging();
					this._Rank = value;
					this.SendPropertyChanged("Rank");
					this.OnRankChanged();
				}
			}
		}
		
		[Column(Storage="_DenseRank", DbType="Int NOT NULL")]
		public int DenseRank
		{
			get
			{
				return this._DenseRank;
			}
			set
			{
				if ((this._DenseRank != value))
				{
					this.OnDenseRankChanging(value);
					this.SendPropertyChanging();
					this._DenseRank = value;
					this.SendPropertyChanged("DenseRank");
					this.OnDenseRankChanged();
				}
			}
		}
		
		[Column(Storage="_NTile", DbType="TinyInt NOT NULL")]
		public byte NTile
		{
			get
			{
				return this._NTile;
			}
			set
			{
				if ((this._NTile != value))
				{
					this.OnNTileChanging(value);
					this.SendPropertyChanging();
					this._NTile = value;
					this.SendPropertyChanged("NTile");
					this.OnNTileChanged();
				}
			}
		}
		
		[Association(Name="Extension_HyperLinks_COUNT_BY_EXTENSION", Storage="_Extension", ThisKey="ExtensionID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Extension Extension
		{
			get
			{
				return this._Extension.Entity;
			}
			set
			{
				Extension previousValue = this._Extension.Entity;
				if (((previousValue != value) 
							|| (this._Extension.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Extension.Entity = null;
						previousValue.HyperLinks_COUNT_BY_EXTENSION = null;
					}
					this._Extension.Entity = value;
					if ((value != null))
					{
						value.HyperLinks_COUNT_BY_EXTENSION = this;
						this._ExtensionID = value.ID;
					}
					else
					{
						this._ExtensionID = default(int);
					}
					this.SendPropertyChanged("Extension");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="rpt.HyperLinks_COUNT_BY_HOST")]
	public partial class HyperLinks_COUNT_BY_HOST : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RowNumber;
		
		private int _HostID;
		
		private int _Count;
		
		private int _Rank;
		
		private int _DenseRank;
		
		private byte _NTile;
		
		private EntityRef<Host> _Host;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRowNumberChanging(int value);
    partial void OnRowNumberChanged();
    partial void OnHostIDChanging(int value);
    partial void OnHostIDChanged();
    partial void OnCountChanging(int value);
    partial void OnCountChanged();
    partial void OnRankChanging(int value);
    partial void OnRankChanged();
    partial void OnDenseRankChanging(int value);
    partial void OnDenseRankChanged();
    partial void OnNTileChanging(byte value);
    partial void OnNTileChanged();
    #endregion
		
		public HyperLinks_COUNT_BY_HOST()
		{
			this._Host = default(EntityRef<Host>);
			OnCreated();
		}
		
		[Column(Storage="_RowNumber", DbType="Int NOT NULL")]
		public int RowNumber
		{
			get
			{
				return this._RowNumber;
			}
			set
			{
				if ((this._RowNumber != value))
				{
					this.OnRowNumberChanging(value);
					this.SendPropertyChanging();
					this._RowNumber = value;
					this.SendPropertyChanged("RowNumber");
					this.OnRowNumberChanged();
				}
			}
		}
		
		[Column(Storage="_HostID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int HostID
		{
			get
			{
				return this._HostID;
			}
			set
			{
				if ((this._HostID != value))
				{
					if (this._Host.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnHostIDChanging(value);
					this.SendPropertyChanging();
					this._HostID = value;
					this.SendPropertyChanged("HostID");
					this.OnHostIDChanged();
				}
			}
		}
		
		[Column(Storage="_Count", DbType="Int NOT NULL")]
		public int Count
		{
			get
			{
				return this._Count;
			}
			set
			{
				if ((this._Count != value))
				{
					this.OnCountChanging(value);
					this.SendPropertyChanging();
					this._Count = value;
					this.SendPropertyChanged("Count");
					this.OnCountChanged();
				}
			}
		}
		
		[Column(Storage="_Rank", DbType="Int NOT NULL")]
		public int Rank
		{
			get
			{
				return this._Rank;
			}
			set
			{
				if ((this._Rank != value))
				{
					this.OnRankChanging(value);
					this.SendPropertyChanging();
					this._Rank = value;
					this.SendPropertyChanged("Rank");
					this.OnRankChanged();
				}
			}
		}
		
		[Column(Storage="_DenseRank", DbType="Int NOT NULL")]
		public int DenseRank
		{
			get
			{
				return this._DenseRank;
			}
			set
			{
				if ((this._DenseRank != value))
				{
					this.OnDenseRankChanging(value);
					this.SendPropertyChanging();
					this._DenseRank = value;
					this.SendPropertyChanged("DenseRank");
					this.OnDenseRankChanged();
				}
			}
		}
		
		[Column(Storage="_NTile", DbType="TinyInt NOT NULL")]
		public byte NTile
		{
			get
			{
				return this._NTile;
			}
			set
			{
				if ((this._NTile != value))
				{
					this.OnNTileChanging(value);
					this.SendPropertyChanging();
					this._NTile = value;
					this.SendPropertyChanged("NTile");
					this.OnNTileChanged();
				}
			}
		}
		
		[Association(Name="Host_HyperLinks_COUNT_BY_HOST", Storage="_Host", ThisKey="HostID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Host Host
		{
			get
			{
				return this._Host.Entity;
			}
			set
			{
				Host previousValue = this._Host.Entity;
				if (((previousValue != value) 
							|| (this._Host.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Host.Entity = null;
						previousValue.HyperLinks_COUNT_BY_HOST = null;
					}
					this._Host.Entity = value;
					if ((value != null))
					{
						value.HyperLinks_COUNT_BY_HOST = this;
						this._HostID = value.ID;
					}
					else
					{
						this._HostID = default(int);
					}
					this.SendPropertyChanged("Host");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="rpt.HyperLinks_COUNT_BY_SCHEME")]
	public partial class HyperLinks_COUNT_BY_SCHEME : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RowNumber;
		
		private int _SchemeID;
		
		private int _Count;
		
		private int _Rank;
		
		private int _DenseRank;
		
		private byte _NTile;
		
		private EntityRef<Scheme> _Scheme;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRowNumberChanging(int value);
    partial void OnRowNumberChanged();
    partial void OnSchemeIDChanging(int value);
    partial void OnSchemeIDChanged();
    partial void OnCountChanging(int value);
    partial void OnCountChanged();
    partial void OnRankChanging(int value);
    partial void OnRankChanged();
    partial void OnDenseRankChanging(int value);
    partial void OnDenseRankChanged();
    partial void OnNTileChanging(byte value);
    partial void OnNTileChanged();
    #endregion
		
		public HyperLinks_COUNT_BY_SCHEME()
		{
			this._Scheme = default(EntityRef<Scheme>);
			OnCreated();
		}
		
		[Column(Storage="_RowNumber", DbType="Int NOT NULL")]
		public int RowNumber
		{
			get
			{
				return this._RowNumber;
			}
			set
			{
				if ((this._RowNumber != value))
				{
					this.OnRowNumberChanging(value);
					this.SendPropertyChanging();
					this._RowNumber = value;
					this.SendPropertyChanged("RowNumber");
					this.OnRowNumberChanged();
				}
			}
		}
		
		[Column(Storage="_SchemeID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int SchemeID
		{
			get
			{
				return this._SchemeID;
			}
			set
			{
				if ((this._SchemeID != value))
				{
					if (this._Scheme.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSchemeIDChanging(value);
					this.SendPropertyChanging();
					this._SchemeID = value;
					this.SendPropertyChanged("SchemeID");
					this.OnSchemeIDChanged();
				}
			}
		}
		
		[Column(Storage="_Count", DbType="Int NOT NULL")]
		public int Count
		{
			get
			{
				return this._Count;
			}
			set
			{
				if ((this._Count != value))
				{
					this.OnCountChanging(value);
					this.SendPropertyChanging();
					this._Count = value;
					this.SendPropertyChanged("Count");
					this.OnCountChanged();
				}
			}
		}
		
		[Column(Storage="_Rank", DbType="Int NOT NULL")]
		public int Rank
		{
			get
			{
				return this._Rank;
			}
			set
			{
				if ((this._Rank != value))
				{
					this.OnRankChanging(value);
					this.SendPropertyChanging();
					this._Rank = value;
					this.SendPropertyChanged("Rank");
					this.OnRankChanged();
				}
			}
		}
		
		[Column(Storage="_DenseRank", DbType="Int NOT NULL")]
		public int DenseRank
		{
			get
			{
				return this._DenseRank;
			}
			set
			{
				if ((this._DenseRank != value))
				{
					this.OnDenseRankChanging(value);
					this.SendPropertyChanging();
					this._DenseRank = value;
					this.SendPropertyChanged("DenseRank");
					this.OnDenseRankChanged();
				}
			}
		}
		
		[Column(Storage="_NTile", DbType="TinyInt NOT NULL")]
		public byte NTile
		{
			get
			{
				return this._NTile;
			}
			set
			{
				if ((this._NTile != value))
				{
					this.OnNTileChanging(value);
					this.SendPropertyChanging();
					this._NTile = value;
					this.SendPropertyChanged("NTile");
					this.OnNTileChanged();
				}
			}
		}
		
		[Association(Name="Scheme_HyperLinks_COUNT_BY_SCHEME", Storage="_Scheme", ThisKey="SchemeID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Scheme Scheme
		{
			get
			{
				return this._Scheme.Entity;
			}
			set
			{
				Scheme previousValue = this._Scheme.Entity;
				if (((previousValue != value) 
							|| (this._Scheme.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Scheme.Entity = null;
						previousValue.HyperLinks_COUNT_BY_SCHEME = null;
					}
					this._Scheme.Entity = value;
					if ((value != null))
					{
						value.HyperLinks_COUNT_BY_SCHEME = this;
						this._SchemeID = value.ID;
					}
					else
					{
						this._SchemeID = default(int);
					}
					this.SendPropertyChanged("Scheme");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="rpt.HyperLinks_MOST_POPULAR_ABSOLUTEURIS_BY_ABSOLUTEURIS")]
	public partial class HyperLinks_MOST_POPULAR_ABSOLUTEURIS_BY_ABSOLUTEURI : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RowNumber;
		
		private System.Nullable<System.DateTime> _InitiallyDiscovered;
		
		private System.DateTime _LastDiscovered;
		
		private long _HyperLinkID;
		
		private int _Count;
		
		private System.Nullable<short> _DaysSinceInitiallyDiscovered;
		
		private short _DaysSinceLastDiscovered;
		
		private System.Nullable<double> _Strength;
		
		private int _Rank;
		
		private int _DenseRank;
		
		private byte _NTile;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRowNumberChanging(int value);
    partial void OnRowNumberChanged();
    partial void OnInitiallyDiscoveredChanging(System.Nullable<System.DateTime> value);
    partial void OnInitiallyDiscoveredChanged();
    partial void OnLastDiscoveredChanging(System.DateTime value);
    partial void OnLastDiscoveredChanged();
    partial void OnHyperLinkIDChanging(long value);
    partial void OnHyperLinkIDChanged();
    partial void OnCountChanging(int value);
    partial void OnCountChanged();
    partial void OnDaysSinceInitiallyDiscoveredChanging(System.Nullable<short> value);
    partial void OnDaysSinceInitiallyDiscoveredChanged();
    partial void OnDaysSinceLastDiscoveredChanging(short value);
    partial void OnDaysSinceLastDiscoveredChanged();
    partial void OnStrengthChanging(System.Nullable<double> value);
    partial void OnStrengthChanged();
    partial void OnRankChanging(int value);
    partial void OnRankChanged();
    partial void OnDenseRankChanging(int value);
    partial void OnDenseRankChanged();
    partial void OnNTileChanging(byte value);
    partial void OnNTileChanged();
    #endregion
		
		public HyperLinks_MOST_POPULAR_ABSOLUTEURIS_BY_ABSOLUTEURI()
		{
			OnCreated();
		}
		
		[Column(Storage="_RowNumber", DbType="Int NOT NULL")]
		public int RowNumber
		{
			get
			{
				return this._RowNumber;
			}
			set
			{
				if ((this._RowNumber != value))
				{
					this.OnRowNumberChanging(value);
					this.SendPropertyChanging();
					this._RowNumber = value;
					this.SendPropertyChanged("RowNumber");
					this.OnRowNumberChanged();
				}
			}
		}
		
		[Column(Storage="_InitiallyDiscovered", DbType="DateTime")]
		public System.Nullable<System.DateTime> InitiallyDiscovered
		{
			get
			{
				return this._InitiallyDiscovered;
			}
			set
			{
				if ((this._InitiallyDiscovered != value))
				{
					this.OnInitiallyDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._InitiallyDiscovered = value;
					this.SendPropertyChanged("InitiallyDiscovered");
					this.OnInitiallyDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_LastDiscovered", DbType="DateTime NOT NULL")]
		public System.DateTime LastDiscovered
		{
			get
			{
				return this._LastDiscovered;
			}
			set
			{
				if ((this._LastDiscovered != value))
				{
					this.OnLastDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._LastDiscovered = value;
					this.SendPropertyChanged("LastDiscovered");
					this.OnLastDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_HyperLinkID", DbType="BigInt NOT NULL", IsPrimaryKey=true)]
		public long HyperLinkID
		{
			get
			{
				return this._HyperLinkID;
			}
			set
			{
				if ((this._HyperLinkID != value))
				{
					this.OnHyperLinkIDChanging(value);
					this.SendPropertyChanging();
					this._HyperLinkID = value;
					this.SendPropertyChanged("HyperLinkID");
					this.OnHyperLinkIDChanged();
				}
			}
		}
		
		[Column(Storage="_Count", DbType="Int NOT NULL")]
		public int Count
		{
			get
			{
				return this._Count;
			}
			set
			{
				if ((this._Count != value))
				{
					this.OnCountChanging(value);
					this.SendPropertyChanging();
					this._Count = value;
					this.SendPropertyChanged("Count");
					this.OnCountChanged();
				}
			}
		}
		
		[Column(Storage="_DaysSinceInitiallyDiscovered", DbType="SmallInt")]
		public System.Nullable<short> DaysSinceInitiallyDiscovered
		{
			get
			{
				return this._DaysSinceInitiallyDiscovered;
			}
			set
			{
				if ((this._DaysSinceInitiallyDiscovered != value))
				{
					this.OnDaysSinceInitiallyDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._DaysSinceInitiallyDiscovered = value;
					this.SendPropertyChanged("DaysSinceInitiallyDiscovered");
					this.OnDaysSinceInitiallyDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_DaysSinceLastDiscovered", DbType="SmallInt NOT NULL")]
		public short DaysSinceLastDiscovered
		{
			get
			{
				return this._DaysSinceLastDiscovered;
			}
			set
			{
				if ((this._DaysSinceLastDiscovered != value))
				{
					this.OnDaysSinceLastDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._DaysSinceLastDiscovered = value;
					this.SendPropertyChanged("DaysSinceLastDiscovered");
					this.OnDaysSinceLastDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_Strength", DbType="Float")]
		public System.Nullable<double> Strength
		{
			get
			{
				return this._Strength;
			}
			set
			{
				if ((this._Strength != value))
				{
					this.OnStrengthChanging(value);
					this.SendPropertyChanging();
					this._Strength = value;
					this.SendPropertyChanged("Strength");
					this.OnStrengthChanged();
				}
			}
		}
		
		[Column(Storage="_Rank", DbType="Int NOT NULL")]
		public int Rank
		{
			get
			{
				return this._Rank;
			}
			set
			{
				if ((this._Rank != value))
				{
					this.OnRankChanging(value);
					this.SendPropertyChanging();
					this._Rank = value;
					this.SendPropertyChanged("Rank");
					this.OnRankChanged();
				}
			}
		}
		
		[Column(Storage="_DenseRank", DbType="Int NOT NULL")]
		public int DenseRank
		{
			get
			{
				return this._DenseRank;
			}
			set
			{
				if ((this._DenseRank != value))
				{
					this.OnDenseRankChanging(value);
					this.SendPropertyChanging();
					this._DenseRank = value;
					this.SendPropertyChanged("DenseRank");
					this.OnDenseRankChanged();
				}
			}
		}
		
		[Column(Storage="_NTile", DbType="TinyInt NOT NULL")]
		public byte NTile
		{
			get
			{
				return this._NTile;
			}
			set
			{
				if ((this._NTile != value))
				{
					this.OnNTileChanging(value);
					this.SendPropertyChanging();
					this._NTile = value;
					this.SendPropertyChanged("NTile");
					this.OnNTileChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="rpt.HyperLinks_MOST_POPULAR_ABSOLUTEURIS_BY_DOMAINS")]
	public partial class HyperLinks_MOST_POPULAR_ABSOLUTEURIS_BY_DOMAIN : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RowNumber;
		
		private System.Nullable<System.DateTime> _InitiallyDiscovered;
		
		private System.DateTime _LastDiscovered;
		
		private long _HyperLinkID;
		
		private int _Count;
		
		private System.Nullable<short> _DaysSinceInitiallyDiscovered;
		
		private short _DaysSinceLastDiscovered;
		
		private System.Nullable<double> _Strength;
		
		private int _Rank;
		
		private int _DenseRank;
		
		private byte _NTile;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRowNumberChanging(int value);
    partial void OnRowNumberChanged();
    partial void OnInitiallyDiscoveredChanging(System.Nullable<System.DateTime> value);
    partial void OnInitiallyDiscoveredChanged();
    partial void OnLastDiscoveredChanging(System.DateTime value);
    partial void OnLastDiscoveredChanged();
    partial void OnHyperLinkIDChanging(long value);
    partial void OnHyperLinkIDChanged();
    partial void OnCountChanging(int value);
    partial void OnCountChanged();
    partial void OnDaysSinceInitiallyDiscoveredChanging(System.Nullable<short> value);
    partial void OnDaysSinceInitiallyDiscoveredChanged();
    partial void OnDaysSinceLastDiscoveredChanging(short value);
    partial void OnDaysSinceLastDiscoveredChanged();
    partial void OnStrengthChanging(System.Nullable<double> value);
    partial void OnStrengthChanged();
    partial void OnRankChanging(int value);
    partial void OnRankChanged();
    partial void OnDenseRankChanging(int value);
    partial void OnDenseRankChanged();
    partial void OnNTileChanging(byte value);
    partial void OnNTileChanged();
    #endregion
		
		public HyperLinks_MOST_POPULAR_ABSOLUTEURIS_BY_DOMAIN()
		{
			OnCreated();
		}
		
		[Column(Storage="_RowNumber", DbType="Int NOT NULL")]
		public int RowNumber
		{
			get
			{
				return this._RowNumber;
			}
			set
			{
				if ((this._RowNumber != value))
				{
					this.OnRowNumberChanging(value);
					this.SendPropertyChanging();
					this._RowNumber = value;
					this.SendPropertyChanged("RowNumber");
					this.OnRowNumberChanged();
				}
			}
		}
		
		[Column(Storage="_InitiallyDiscovered", DbType="DateTime")]
		public System.Nullable<System.DateTime> InitiallyDiscovered
		{
			get
			{
				return this._InitiallyDiscovered;
			}
			set
			{
				if ((this._InitiallyDiscovered != value))
				{
					this.OnInitiallyDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._InitiallyDiscovered = value;
					this.SendPropertyChanged("InitiallyDiscovered");
					this.OnInitiallyDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_LastDiscovered", DbType="DateTime NOT NULL")]
		public System.DateTime LastDiscovered
		{
			get
			{
				return this._LastDiscovered;
			}
			set
			{
				if ((this._LastDiscovered != value))
				{
					this.OnLastDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._LastDiscovered = value;
					this.SendPropertyChanged("LastDiscovered");
					this.OnLastDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_HyperLinkID", DbType="BigInt NOT NULL", IsPrimaryKey=true)]
		public long HyperLinkID
		{
			get
			{
				return this._HyperLinkID;
			}
			set
			{
				if ((this._HyperLinkID != value))
				{
					this.OnHyperLinkIDChanging(value);
					this.SendPropertyChanging();
					this._HyperLinkID = value;
					this.SendPropertyChanged("HyperLinkID");
					this.OnHyperLinkIDChanged();
				}
			}
		}
		
		[Column(Storage="_Count", DbType="Int NOT NULL")]
		public int Count
		{
			get
			{
				return this._Count;
			}
			set
			{
				if ((this._Count != value))
				{
					this.OnCountChanging(value);
					this.SendPropertyChanging();
					this._Count = value;
					this.SendPropertyChanged("Count");
					this.OnCountChanged();
				}
			}
		}
		
		[Column(Storage="_DaysSinceInitiallyDiscovered", DbType="SmallInt")]
		public System.Nullable<short> DaysSinceInitiallyDiscovered
		{
			get
			{
				return this._DaysSinceInitiallyDiscovered;
			}
			set
			{
				if ((this._DaysSinceInitiallyDiscovered != value))
				{
					this.OnDaysSinceInitiallyDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._DaysSinceInitiallyDiscovered = value;
					this.SendPropertyChanged("DaysSinceInitiallyDiscovered");
					this.OnDaysSinceInitiallyDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_DaysSinceLastDiscovered", DbType="SmallInt NOT NULL")]
		public short DaysSinceLastDiscovered
		{
			get
			{
				return this._DaysSinceLastDiscovered;
			}
			set
			{
				if ((this._DaysSinceLastDiscovered != value))
				{
					this.OnDaysSinceLastDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._DaysSinceLastDiscovered = value;
					this.SendPropertyChanged("DaysSinceLastDiscovered");
					this.OnDaysSinceLastDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_Strength", DbType="Float")]
		public System.Nullable<double> Strength
		{
			get
			{
				return this._Strength;
			}
			set
			{
				if ((this._Strength != value))
				{
					this.OnStrengthChanging(value);
					this.SendPropertyChanging();
					this._Strength = value;
					this.SendPropertyChanged("Strength");
					this.OnStrengthChanged();
				}
			}
		}
		
		[Column(Storage="_Rank", DbType="Int NOT NULL")]
		public int Rank
		{
			get
			{
				return this._Rank;
			}
			set
			{
				if ((this._Rank != value))
				{
					this.OnRankChanging(value);
					this.SendPropertyChanging();
					this._Rank = value;
					this.SendPropertyChanged("Rank");
					this.OnRankChanged();
				}
			}
		}
		
		[Column(Storage="_DenseRank", DbType="Int NOT NULL")]
		public int DenseRank
		{
			get
			{
				return this._DenseRank;
			}
			set
			{
				if ((this._DenseRank != value))
				{
					this.OnDenseRankChanging(value);
					this.SendPropertyChanging();
					this._DenseRank = value;
					this.SendPropertyChanged("DenseRank");
					this.OnDenseRankChanged();
				}
			}
		}
		
		[Column(Storage="_NTile", DbType="TinyInt NOT NULL")]
		public byte NTile
		{
			get
			{
				return this._NTile;
			}
			set
			{
				if ((this._NTile != value))
				{
					this.OnNTileChanging(value);
					this.SendPropertyChanging();
					this._NTile = value;
					this.SendPropertyChanged("NTile");
					this.OnNTileChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="rpt.HyperLinks_MOST_POPULAR_ABSOLUTEURIS_BY_EXTENSIONS")]
	public partial class HyperLinks_MOST_POPULAR_ABSOLUTEURIS_BY_EXTENSION : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RowNumber;
		
		private System.Nullable<System.DateTime> _InitiallyDiscovered;
		
		private System.DateTime _LastDiscovered;
		
		private long _HyperLinkID;
		
		private int _Count;
		
		private System.Nullable<short> _DaysSinceInitiallyDiscovered;
		
		private short _DaysSinceLastDiscovered;
		
		private System.Nullable<double> _Strength;
		
		private int _Rank;
		
		private int _DenseRank;
		
		private byte _NTile;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRowNumberChanging(int value);
    partial void OnRowNumberChanged();
    partial void OnInitiallyDiscoveredChanging(System.Nullable<System.DateTime> value);
    partial void OnInitiallyDiscoveredChanged();
    partial void OnLastDiscoveredChanging(System.DateTime value);
    partial void OnLastDiscoveredChanged();
    partial void OnHyperLinkIDChanging(long value);
    partial void OnHyperLinkIDChanged();
    partial void OnCountChanging(int value);
    partial void OnCountChanged();
    partial void OnDaysSinceInitiallyDiscoveredChanging(System.Nullable<short> value);
    partial void OnDaysSinceInitiallyDiscoveredChanged();
    partial void OnDaysSinceLastDiscoveredChanging(short value);
    partial void OnDaysSinceLastDiscoveredChanged();
    partial void OnStrengthChanging(System.Nullable<double> value);
    partial void OnStrengthChanged();
    partial void OnRankChanging(int value);
    partial void OnRankChanged();
    partial void OnDenseRankChanging(int value);
    partial void OnDenseRankChanged();
    partial void OnNTileChanging(byte value);
    partial void OnNTileChanged();
    #endregion
		
		public HyperLinks_MOST_POPULAR_ABSOLUTEURIS_BY_EXTENSION()
		{
			OnCreated();
		}
		
		[Column(Storage="_RowNumber", DbType="Int NOT NULL")]
		public int RowNumber
		{
			get
			{
				return this._RowNumber;
			}
			set
			{
				if ((this._RowNumber != value))
				{
					this.OnRowNumberChanging(value);
					this.SendPropertyChanging();
					this._RowNumber = value;
					this.SendPropertyChanged("RowNumber");
					this.OnRowNumberChanged();
				}
			}
		}
		
		[Column(Storage="_InitiallyDiscovered", DbType="DateTime")]
		public System.Nullable<System.DateTime> InitiallyDiscovered
		{
			get
			{
				return this._InitiallyDiscovered;
			}
			set
			{
				if ((this._InitiallyDiscovered != value))
				{
					this.OnInitiallyDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._InitiallyDiscovered = value;
					this.SendPropertyChanged("InitiallyDiscovered");
					this.OnInitiallyDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_LastDiscovered", DbType="DateTime NOT NULL")]
		public System.DateTime LastDiscovered
		{
			get
			{
				return this._LastDiscovered;
			}
			set
			{
				if ((this._LastDiscovered != value))
				{
					this.OnLastDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._LastDiscovered = value;
					this.SendPropertyChanged("LastDiscovered");
					this.OnLastDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_HyperLinkID", DbType="BigInt NOT NULL", IsPrimaryKey=true)]
		public long HyperLinkID
		{
			get
			{
				return this._HyperLinkID;
			}
			set
			{
				if ((this._HyperLinkID != value))
				{
					this.OnHyperLinkIDChanging(value);
					this.SendPropertyChanging();
					this._HyperLinkID = value;
					this.SendPropertyChanged("HyperLinkID");
					this.OnHyperLinkIDChanged();
				}
			}
		}
		
		[Column(Storage="_Count", DbType="Int NOT NULL")]
		public int Count
		{
			get
			{
				return this._Count;
			}
			set
			{
				if ((this._Count != value))
				{
					this.OnCountChanging(value);
					this.SendPropertyChanging();
					this._Count = value;
					this.SendPropertyChanged("Count");
					this.OnCountChanged();
				}
			}
		}
		
		[Column(Storage="_DaysSinceInitiallyDiscovered", DbType="SmallInt")]
		public System.Nullable<short> DaysSinceInitiallyDiscovered
		{
			get
			{
				return this._DaysSinceInitiallyDiscovered;
			}
			set
			{
				if ((this._DaysSinceInitiallyDiscovered != value))
				{
					this.OnDaysSinceInitiallyDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._DaysSinceInitiallyDiscovered = value;
					this.SendPropertyChanged("DaysSinceInitiallyDiscovered");
					this.OnDaysSinceInitiallyDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_DaysSinceLastDiscovered", DbType="SmallInt NOT NULL")]
		public short DaysSinceLastDiscovered
		{
			get
			{
				return this._DaysSinceLastDiscovered;
			}
			set
			{
				if ((this._DaysSinceLastDiscovered != value))
				{
					this.OnDaysSinceLastDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._DaysSinceLastDiscovered = value;
					this.SendPropertyChanged("DaysSinceLastDiscovered");
					this.OnDaysSinceLastDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_Strength", DbType="Float")]
		public System.Nullable<double> Strength
		{
			get
			{
				return this._Strength;
			}
			set
			{
				if ((this._Strength != value))
				{
					this.OnStrengthChanging(value);
					this.SendPropertyChanging();
					this._Strength = value;
					this.SendPropertyChanged("Strength");
					this.OnStrengthChanged();
				}
			}
		}
		
		[Column(Storage="_Rank", DbType="Int NOT NULL")]
		public int Rank
		{
			get
			{
				return this._Rank;
			}
			set
			{
				if ((this._Rank != value))
				{
					this.OnRankChanging(value);
					this.SendPropertyChanging();
					this._Rank = value;
					this.SendPropertyChanged("Rank");
					this.OnRankChanged();
				}
			}
		}
		
		[Column(Storage="_DenseRank", DbType="Int NOT NULL")]
		public int DenseRank
		{
			get
			{
				return this._DenseRank;
			}
			set
			{
				if ((this._DenseRank != value))
				{
					this.OnDenseRankChanging(value);
					this.SendPropertyChanging();
					this._DenseRank = value;
					this.SendPropertyChanged("DenseRank");
					this.OnDenseRankChanged();
				}
			}
		}
		
		[Column(Storage="_NTile", DbType="TinyInt NOT NULL")]
		public byte NTile
		{
			get
			{
				return this._NTile;
			}
			set
			{
				if ((this._NTile != value))
				{
					this.OnNTileChanging(value);
					this.SendPropertyChanging();
					this._NTile = value;
					this.SendPropertyChanged("NTile");
					this.OnNTileChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="rpt.HyperLinks_MOST_POPULAR_ABSOLUTEURIS_BY_HOSTS")]
	public partial class HyperLinks_MOST_POPULAR_ABSOLUTEURIS_BY_HOST : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RowNumber;
		
		private System.Nullable<System.DateTime> _InitiallyDiscovered;
		
		private System.DateTime _LastDiscovered;
		
		private long _HyperLinkID;
		
		private int _Count;
		
		private System.Nullable<short> _DaysSinceInitiallyDiscovered;
		
		private short _DaysSinceLastDiscovered;
		
		private System.Nullable<double> _Strength;
		
		private int _Rank;
		
		private int _DenseRank;
		
		private byte _NTile;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRowNumberChanging(int value);
    partial void OnRowNumberChanged();
    partial void OnInitiallyDiscoveredChanging(System.Nullable<System.DateTime> value);
    partial void OnInitiallyDiscoveredChanged();
    partial void OnLastDiscoveredChanging(System.DateTime value);
    partial void OnLastDiscoveredChanged();
    partial void OnHyperLinkIDChanging(long value);
    partial void OnHyperLinkIDChanged();
    partial void OnCountChanging(int value);
    partial void OnCountChanged();
    partial void OnDaysSinceInitiallyDiscoveredChanging(System.Nullable<short> value);
    partial void OnDaysSinceInitiallyDiscoveredChanged();
    partial void OnDaysSinceLastDiscoveredChanging(short value);
    partial void OnDaysSinceLastDiscoveredChanged();
    partial void OnStrengthChanging(System.Nullable<double> value);
    partial void OnStrengthChanged();
    partial void OnRankChanging(int value);
    partial void OnRankChanged();
    partial void OnDenseRankChanging(int value);
    partial void OnDenseRankChanged();
    partial void OnNTileChanging(byte value);
    partial void OnNTileChanged();
    #endregion
		
		public HyperLinks_MOST_POPULAR_ABSOLUTEURIS_BY_HOST()
		{
			OnCreated();
		}
		
		[Column(Storage="_RowNumber", DbType="Int NOT NULL")]
		public int RowNumber
		{
			get
			{
				return this._RowNumber;
			}
			set
			{
				if ((this._RowNumber != value))
				{
					this.OnRowNumberChanging(value);
					this.SendPropertyChanging();
					this._RowNumber = value;
					this.SendPropertyChanged("RowNumber");
					this.OnRowNumberChanged();
				}
			}
		}
		
		[Column(Storage="_InitiallyDiscovered", DbType="DateTime")]
		public System.Nullable<System.DateTime> InitiallyDiscovered
		{
			get
			{
				return this._InitiallyDiscovered;
			}
			set
			{
				if ((this._InitiallyDiscovered != value))
				{
					this.OnInitiallyDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._InitiallyDiscovered = value;
					this.SendPropertyChanged("InitiallyDiscovered");
					this.OnInitiallyDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_LastDiscovered", DbType="DateTime NOT NULL")]
		public System.DateTime LastDiscovered
		{
			get
			{
				return this._LastDiscovered;
			}
			set
			{
				if ((this._LastDiscovered != value))
				{
					this.OnLastDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._LastDiscovered = value;
					this.SendPropertyChanged("LastDiscovered");
					this.OnLastDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_HyperLinkID", DbType="BigInt NOT NULL", IsPrimaryKey=true)]
		public long HyperLinkID
		{
			get
			{
				return this._HyperLinkID;
			}
			set
			{
				if ((this._HyperLinkID != value))
				{
					this.OnHyperLinkIDChanging(value);
					this.SendPropertyChanging();
					this._HyperLinkID = value;
					this.SendPropertyChanged("HyperLinkID");
					this.OnHyperLinkIDChanged();
				}
			}
		}
		
		[Column(Storage="_Count", DbType="Int NOT NULL")]
		public int Count
		{
			get
			{
				return this._Count;
			}
			set
			{
				if ((this._Count != value))
				{
					this.OnCountChanging(value);
					this.SendPropertyChanging();
					this._Count = value;
					this.SendPropertyChanged("Count");
					this.OnCountChanged();
				}
			}
		}
		
		[Column(Storage="_DaysSinceInitiallyDiscovered", DbType="SmallInt")]
		public System.Nullable<short> DaysSinceInitiallyDiscovered
		{
			get
			{
				return this._DaysSinceInitiallyDiscovered;
			}
			set
			{
				if ((this._DaysSinceInitiallyDiscovered != value))
				{
					this.OnDaysSinceInitiallyDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._DaysSinceInitiallyDiscovered = value;
					this.SendPropertyChanged("DaysSinceInitiallyDiscovered");
					this.OnDaysSinceInitiallyDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_DaysSinceLastDiscovered", DbType="SmallInt NOT NULL")]
		public short DaysSinceLastDiscovered
		{
			get
			{
				return this._DaysSinceLastDiscovered;
			}
			set
			{
				if ((this._DaysSinceLastDiscovered != value))
				{
					this.OnDaysSinceLastDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._DaysSinceLastDiscovered = value;
					this.SendPropertyChanged("DaysSinceLastDiscovered");
					this.OnDaysSinceLastDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_Strength", DbType="Float")]
		public System.Nullable<double> Strength
		{
			get
			{
				return this._Strength;
			}
			set
			{
				if ((this._Strength != value))
				{
					this.OnStrengthChanging(value);
					this.SendPropertyChanging();
					this._Strength = value;
					this.SendPropertyChanged("Strength");
					this.OnStrengthChanged();
				}
			}
		}
		
		[Column(Storage="_Rank", DbType="Int NOT NULL")]
		public int Rank
		{
			get
			{
				return this._Rank;
			}
			set
			{
				if ((this._Rank != value))
				{
					this.OnRankChanging(value);
					this.SendPropertyChanging();
					this._Rank = value;
					this.SendPropertyChanged("Rank");
					this.OnRankChanged();
				}
			}
		}
		
		[Column(Storage="_DenseRank", DbType="Int NOT NULL")]
		public int DenseRank
		{
			get
			{
				return this._DenseRank;
			}
			set
			{
				if ((this._DenseRank != value))
				{
					this.OnDenseRankChanging(value);
					this.SendPropertyChanging();
					this._DenseRank = value;
					this.SendPropertyChanged("DenseRank");
					this.OnDenseRankChanged();
				}
			}
		}
		
		[Column(Storage="_NTile", DbType="TinyInt NOT NULL")]
		public byte NTile
		{
			get
			{
				return this._NTile;
			}
			set
			{
				if ((this._NTile != value))
				{
					this.OnNTileChanging(value);
					this.SendPropertyChanging();
					this._NTile = value;
					this.SendPropertyChanged("NTile");
					this.OnNTileChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="rpt.HyperLinks_MOST_POPULAR_ABSOLUTEURIS_BY_SCHEMES")]
	public partial class HyperLinks_MOST_POPULAR_ABSOLUTEURIS_BY_SCHEME : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RowNumber;
		
		private System.Nullable<System.DateTime> _InitiallyDiscovered;
		
		private System.DateTime _LastDiscovered;
		
		private long _HyperLinkID;
		
		private int _Count;
		
		private System.Nullable<short> _DaysSinceInitiallyDiscovered;
		
		private short _DaysSinceLastDiscovered;
		
		private System.Nullable<double> _Strength;
		
		private int _Rank;
		
		private int _DenseRank;
		
		private byte _NTile;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRowNumberChanging(int value);
    partial void OnRowNumberChanged();
    partial void OnInitiallyDiscoveredChanging(System.Nullable<System.DateTime> value);
    partial void OnInitiallyDiscoveredChanged();
    partial void OnLastDiscoveredChanging(System.DateTime value);
    partial void OnLastDiscoveredChanged();
    partial void OnHyperLinkIDChanging(long value);
    partial void OnHyperLinkIDChanged();
    partial void OnCountChanging(int value);
    partial void OnCountChanged();
    partial void OnDaysSinceInitiallyDiscoveredChanging(System.Nullable<short> value);
    partial void OnDaysSinceInitiallyDiscoveredChanged();
    partial void OnDaysSinceLastDiscoveredChanging(short value);
    partial void OnDaysSinceLastDiscoveredChanged();
    partial void OnStrengthChanging(System.Nullable<double> value);
    partial void OnStrengthChanged();
    partial void OnRankChanging(int value);
    partial void OnRankChanged();
    partial void OnDenseRankChanging(int value);
    partial void OnDenseRankChanged();
    partial void OnNTileChanging(byte value);
    partial void OnNTileChanged();
    #endregion
		
		public HyperLinks_MOST_POPULAR_ABSOLUTEURIS_BY_SCHEME()
		{
			OnCreated();
		}
		
		[Column(Storage="_RowNumber", DbType="Int NOT NULL")]
		public int RowNumber
		{
			get
			{
				return this._RowNumber;
			}
			set
			{
				if ((this._RowNumber != value))
				{
					this.OnRowNumberChanging(value);
					this.SendPropertyChanging();
					this._RowNumber = value;
					this.SendPropertyChanged("RowNumber");
					this.OnRowNumberChanged();
				}
			}
		}
		
		[Column(Storage="_InitiallyDiscovered", DbType="DateTime")]
		public System.Nullable<System.DateTime> InitiallyDiscovered
		{
			get
			{
				return this._InitiallyDiscovered;
			}
			set
			{
				if ((this._InitiallyDiscovered != value))
				{
					this.OnInitiallyDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._InitiallyDiscovered = value;
					this.SendPropertyChanged("InitiallyDiscovered");
					this.OnInitiallyDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_LastDiscovered", DbType="DateTime NOT NULL")]
		public System.DateTime LastDiscovered
		{
			get
			{
				return this._LastDiscovered;
			}
			set
			{
				if ((this._LastDiscovered != value))
				{
					this.OnLastDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._LastDiscovered = value;
					this.SendPropertyChanged("LastDiscovered");
					this.OnLastDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_HyperLinkID", DbType="BigInt NOT NULL", IsPrimaryKey=true)]
		public long HyperLinkID
		{
			get
			{
				return this._HyperLinkID;
			}
			set
			{
				if ((this._HyperLinkID != value))
				{
					this.OnHyperLinkIDChanging(value);
					this.SendPropertyChanging();
					this._HyperLinkID = value;
					this.SendPropertyChanged("HyperLinkID");
					this.OnHyperLinkIDChanged();
				}
			}
		}
		
		[Column(Storage="_Count", DbType="Int NOT NULL")]
		public int Count
		{
			get
			{
				return this._Count;
			}
			set
			{
				if ((this._Count != value))
				{
					this.OnCountChanging(value);
					this.SendPropertyChanging();
					this._Count = value;
					this.SendPropertyChanged("Count");
					this.OnCountChanged();
				}
			}
		}
		
		[Column(Storage="_DaysSinceInitiallyDiscovered", DbType="SmallInt")]
		public System.Nullable<short> DaysSinceInitiallyDiscovered
		{
			get
			{
				return this._DaysSinceInitiallyDiscovered;
			}
			set
			{
				if ((this._DaysSinceInitiallyDiscovered != value))
				{
					this.OnDaysSinceInitiallyDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._DaysSinceInitiallyDiscovered = value;
					this.SendPropertyChanged("DaysSinceInitiallyDiscovered");
					this.OnDaysSinceInitiallyDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_DaysSinceLastDiscovered", DbType="SmallInt NOT NULL")]
		public short DaysSinceLastDiscovered
		{
			get
			{
				return this._DaysSinceLastDiscovered;
			}
			set
			{
				if ((this._DaysSinceLastDiscovered != value))
				{
					this.OnDaysSinceLastDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._DaysSinceLastDiscovered = value;
					this.SendPropertyChanged("DaysSinceLastDiscovered");
					this.OnDaysSinceLastDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_Strength", DbType="Float")]
		public System.Nullable<double> Strength
		{
			get
			{
				return this._Strength;
			}
			set
			{
				if ((this._Strength != value))
				{
					this.OnStrengthChanging(value);
					this.SendPropertyChanging();
					this._Strength = value;
					this.SendPropertyChanged("Strength");
					this.OnStrengthChanged();
				}
			}
		}
		
		[Column(Storage="_Rank", DbType="Int NOT NULL")]
		public int Rank
		{
			get
			{
				return this._Rank;
			}
			set
			{
				if ((this._Rank != value))
				{
					this.OnRankChanging(value);
					this.SendPropertyChanging();
					this._Rank = value;
					this.SendPropertyChanged("Rank");
					this.OnRankChanged();
				}
			}
		}
		
		[Column(Storage="_DenseRank", DbType="Int NOT NULL")]
		public int DenseRank
		{
			get
			{
				return this._DenseRank;
			}
			set
			{
				if ((this._DenseRank != value))
				{
					this.OnDenseRankChanging(value);
					this.SendPropertyChanging();
					this._DenseRank = value;
					this.SendPropertyChanged("DenseRank");
					this.OnDenseRankChanged();
				}
			}
		}
		
		[Column(Storage="_NTile", DbType="TinyInt NOT NULL")]
		public byte NTile
		{
			get
			{
				return this._NTile;
			}
			set
			{
				if ((this._NTile != value))
				{
					this.OnNTileChanging(value);
					this.SendPropertyChanging();
					this._NTile = value;
					this.SendPropertyChanged("NTile");
					this.OnNTileChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="rpt.HyperLinks_MOST_POPULAR_DOMAINS_BY_ABSOLUTEURIS")]
	public partial class HyperLinks_MOST_POPULAR_DOMAINS_BY_ABSOLUTEURI : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RowNumber;
		
		private System.Nullable<System.DateTime> _InitiallyDiscovered;
		
		private System.DateTime _LastDiscovered;
		
		private int _DomainID;
		
		private int _Count;
		
		private System.Nullable<short> _DaysSinceInitiallyDiscovered;
		
		private short _DaysSinceLastDiscovered;
		
		private System.Nullable<double> _Strength;
		
		private int _Rank;
		
		private int _DenseRank;
		
		private short _NTile;
		
		private EntityRef<Domain> _Domain;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRowNumberChanging(int value);
    partial void OnRowNumberChanged();
    partial void OnInitiallyDiscoveredChanging(System.Nullable<System.DateTime> value);
    partial void OnInitiallyDiscoveredChanged();
    partial void OnLastDiscoveredChanging(System.DateTime value);
    partial void OnLastDiscoveredChanged();
    partial void OnDomainIDChanging(int value);
    partial void OnDomainIDChanged();
    partial void OnCountChanging(int value);
    partial void OnCountChanged();
    partial void OnDaysSinceInitiallyDiscoveredChanging(System.Nullable<short> value);
    partial void OnDaysSinceInitiallyDiscoveredChanged();
    partial void OnDaysSinceLastDiscoveredChanging(short value);
    partial void OnDaysSinceLastDiscoveredChanged();
    partial void OnStrengthChanging(System.Nullable<double> value);
    partial void OnStrengthChanged();
    partial void OnRankChanging(int value);
    partial void OnRankChanged();
    partial void OnDenseRankChanging(int value);
    partial void OnDenseRankChanged();
    partial void OnNTileChanging(short value);
    partial void OnNTileChanged();
    #endregion
		
		public HyperLinks_MOST_POPULAR_DOMAINS_BY_ABSOLUTEURI()
		{
			this._Domain = default(EntityRef<Domain>);
			OnCreated();
		}
		
		[Column(Storage="_RowNumber", DbType="Int NOT NULL")]
		public int RowNumber
		{
			get
			{
				return this._RowNumber;
			}
			set
			{
				if ((this._RowNumber != value))
				{
					this.OnRowNumberChanging(value);
					this.SendPropertyChanging();
					this._RowNumber = value;
					this.SendPropertyChanged("RowNumber");
					this.OnRowNumberChanged();
				}
			}
		}
		
		[Column(Storage="_InitiallyDiscovered", DbType="DateTime")]
		public System.Nullable<System.DateTime> InitiallyDiscovered
		{
			get
			{
				return this._InitiallyDiscovered;
			}
			set
			{
				if ((this._InitiallyDiscovered != value))
				{
					this.OnInitiallyDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._InitiallyDiscovered = value;
					this.SendPropertyChanged("InitiallyDiscovered");
					this.OnInitiallyDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_LastDiscovered", DbType="DateTime NOT NULL")]
		public System.DateTime LastDiscovered
		{
			get
			{
				return this._LastDiscovered;
			}
			set
			{
				if ((this._LastDiscovered != value))
				{
					this.OnLastDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._LastDiscovered = value;
					this.SendPropertyChanged("LastDiscovered");
					this.OnLastDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_DomainID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int DomainID
		{
			get
			{
				return this._DomainID;
			}
			set
			{
				if ((this._DomainID != value))
				{
					if (this._Domain.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDomainIDChanging(value);
					this.SendPropertyChanging();
					this._DomainID = value;
					this.SendPropertyChanged("DomainID");
					this.OnDomainIDChanged();
				}
			}
		}
		
		[Column(Storage="_Count", DbType="Int NOT NULL")]
		public int Count
		{
			get
			{
				return this._Count;
			}
			set
			{
				if ((this._Count != value))
				{
					this.OnCountChanging(value);
					this.SendPropertyChanging();
					this._Count = value;
					this.SendPropertyChanged("Count");
					this.OnCountChanged();
				}
			}
		}
		
		[Column(Storage="_DaysSinceInitiallyDiscovered", DbType="SmallInt")]
		public System.Nullable<short> DaysSinceInitiallyDiscovered
		{
			get
			{
				return this._DaysSinceInitiallyDiscovered;
			}
			set
			{
				if ((this._DaysSinceInitiallyDiscovered != value))
				{
					this.OnDaysSinceInitiallyDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._DaysSinceInitiallyDiscovered = value;
					this.SendPropertyChanged("DaysSinceInitiallyDiscovered");
					this.OnDaysSinceInitiallyDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_DaysSinceLastDiscovered", DbType="SmallInt NOT NULL")]
		public short DaysSinceLastDiscovered
		{
			get
			{
				return this._DaysSinceLastDiscovered;
			}
			set
			{
				if ((this._DaysSinceLastDiscovered != value))
				{
					this.OnDaysSinceLastDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._DaysSinceLastDiscovered = value;
					this.SendPropertyChanged("DaysSinceLastDiscovered");
					this.OnDaysSinceLastDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_Strength", DbType="Float")]
		public System.Nullable<double> Strength
		{
			get
			{
				return this._Strength;
			}
			set
			{
				if ((this._Strength != value))
				{
					this.OnStrengthChanging(value);
					this.SendPropertyChanging();
					this._Strength = value;
					this.SendPropertyChanged("Strength");
					this.OnStrengthChanged();
				}
			}
		}
		
		[Column(Storage="_Rank", DbType="Int NOT NULL")]
		public int Rank
		{
			get
			{
				return this._Rank;
			}
			set
			{
				if ((this._Rank != value))
				{
					this.OnRankChanging(value);
					this.SendPropertyChanging();
					this._Rank = value;
					this.SendPropertyChanged("Rank");
					this.OnRankChanged();
				}
			}
		}
		
		[Column(Storage="_DenseRank", DbType="Int NOT NULL")]
		public int DenseRank
		{
			get
			{
				return this._DenseRank;
			}
			set
			{
				if ((this._DenseRank != value))
				{
					this.OnDenseRankChanging(value);
					this.SendPropertyChanging();
					this._DenseRank = value;
					this.SendPropertyChanged("DenseRank");
					this.OnDenseRankChanged();
				}
			}
		}
		
		[Column(Storage="_NTile", DbType="SmallInt NOT NULL")]
		public short NTile
		{
			get
			{
				return this._NTile;
			}
			set
			{
				if ((this._NTile != value))
				{
					this.OnNTileChanging(value);
					this.SendPropertyChanging();
					this._NTile = value;
					this.SendPropertyChanged("NTile");
					this.OnNTileChanged();
				}
			}
		}
		
		[Association(Name="Domain_HyperLinks_MOST_POPULAR_DOMAINS_BY_ABSOLUTEURI", Storage="_Domain", ThisKey="DomainID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Domain Domain
		{
			get
			{
				return this._Domain.Entity;
			}
			set
			{
				Domain previousValue = this._Domain.Entity;
				if (((previousValue != value) 
							|| (this._Domain.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Domain.Entity = null;
						previousValue.HyperLinks_MOST_POPULAR_DOMAINS_BY_ABSOLUTEURI = null;
					}
					this._Domain.Entity = value;
					if ((value != null))
					{
						value.HyperLinks_MOST_POPULAR_DOMAINS_BY_ABSOLUTEURI = this;
						this._DomainID = value.ID;
					}
					else
					{
						this._DomainID = default(int);
					}
					this.SendPropertyChanged("Domain");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="rpt.HyperLinks_MOST_POPULAR_DOMAINS_BY_DOMAINS")]
	public partial class HyperLinks_MOST_POPULAR_DOMAINS_BY_DOMAIN : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RowNumber;
		
		private System.Nullable<System.DateTime> _InitiallyDiscovered;
		
		private System.DateTime _LastDiscovered;
		
		private int _DomainID;
		
		private int _Count;
		
		private System.Nullable<short> _DaysSinceInitiallyDiscovered;
		
		private short _DaysSinceLastDiscovered;
		
		private System.Nullable<double> _Strength;
		
		private int _Rank;
		
		private int _DenseRank;
		
		private byte _NTile;
		
		private EntityRef<Domain> _Domain;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRowNumberChanging(int value);
    partial void OnRowNumberChanged();
    partial void OnInitiallyDiscoveredChanging(System.Nullable<System.DateTime> value);
    partial void OnInitiallyDiscoveredChanged();
    partial void OnLastDiscoveredChanging(System.DateTime value);
    partial void OnLastDiscoveredChanged();
    partial void OnDomainIDChanging(int value);
    partial void OnDomainIDChanged();
    partial void OnCountChanging(int value);
    partial void OnCountChanged();
    partial void OnDaysSinceInitiallyDiscoveredChanging(System.Nullable<short> value);
    partial void OnDaysSinceInitiallyDiscoveredChanged();
    partial void OnDaysSinceLastDiscoveredChanging(short value);
    partial void OnDaysSinceLastDiscoveredChanged();
    partial void OnStrengthChanging(System.Nullable<double> value);
    partial void OnStrengthChanged();
    partial void OnRankChanging(int value);
    partial void OnRankChanged();
    partial void OnDenseRankChanging(int value);
    partial void OnDenseRankChanged();
    partial void OnNTileChanging(byte value);
    partial void OnNTileChanged();
    #endregion
		
		public HyperLinks_MOST_POPULAR_DOMAINS_BY_DOMAIN()
		{
			this._Domain = default(EntityRef<Domain>);
			OnCreated();
		}
		
		[Column(Storage="_RowNumber", DbType="Int NOT NULL")]
		public int RowNumber
		{
			get
			{
				return this._RowNumber;
			}
			set
			{
				if ((this._RowNumber != value))
				{
					this.OnRowNumberChanging(value);
					this.SendPropertyChanging();
					this._RowNumber = value;
					this.SendPropertyChanged("RowNumber");
					this.OnRowNumberChanged();
				}
			}
		}
		
		[Column(Storage="_InitiallyDiscovered", DbType="DateTime")]
		public System.Nullable<System.DateTime> InitiallyDiscovered
		{
			get
			{
				return this._InitiallyDiscovered;
			}
			set
			{
				if ((this._InitiallyDiscovered != value))
				{
					this.OnInitiallyDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._InitiallyDiscovered = value;
					this.SendPropertyChanged("InitiallyDiscovered");
					this.OnInitiallyDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_LastDiscovered", DbType="DateTime NOT NULL")]
		public System.DateTime LastDiscovered
		{
			get
			{
				return this._LastDiscovered;
			}
			set
			{
				if ((this._LastDiscovered != value))
				{
					this.OnLastDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._LastDiscovered = value;
					this.SendPropertyChanged("LastDiscovered");
					this.OnLastDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_DomainID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int DomainID
		{
			get
			{
				return this._DomainID;
			}
			set
			{
				if ((this._DomainID != value))
				{
					if (this._Domain.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDomainIDChanging(value);
					this.SendPropertyChanging();
					this._DomainID = value;
					this.SendPropertyChanged("DomainID");
					this.OnDomainIDChanged();
				}
			}
		}
		
		[Column(Storage="_Count", DbType="Int NOT NULL")]
		public int Count
		{
			get
			{
				return this._Count;
			}
			set
			{
				if ((this._Count != value))
				{
					this.OnCountChanging(value);
					this.SendPropertyChanging();
					this._Count = value;
					this.SendPropertyChanged("Count");
					this.OnCountChanged();
				}
			}
		}
		
		[Column(Storage="_DaysSinceInitiallyDiscovered", DbType="SmallInt")]
		public System.Nullable<short> DaysSinceInitiallyDiscovered
		{
			get
			{
				return this._DaysSinceInitiallyDiscovered;
			}
			set
			{
				if ((this._DaysSinceInitiallyDiscovered != value))
				{
					this.OnDaysSinceInitiallyDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._DaysSinceInitiallyDiscovered = value;
					this.SendPropertyChanged("DaysSinceInitiallyDiscovered");
					this.OnDaysSinceInitiallyDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_DaysSinceLastDiscovered", DbType="SmallInt NOT NULL")]
		public short DaysSinceLastDiscovered
		{
			get
			{
				return this._DaysSinceLastDiscovered;
			}
			set
			{
				if ((this._DaysSinceLastDiscovered != value))
				{
					this.OnDaysSinceLastDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._DaysSinceLastDiscovered = value;
					this.SendPropertyChanged("DaysSinceLastDiscovered");
					this.OnDaysSinceLastDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_Strength", DbType="Float")]
		public System.Nullable<double> Strength
		{
			get
			{
				return this._Strength;
			}
			set
			{
				if ((this._Strength != value))
				{
					this.OnStrengthChanging(value);
					this.SendPropertyChanging();
					this._Strength = value;
					this.SendPropertyChanged("Strength");
					this.OnStrengthChanged();
				}
			}
		}
		
		[Column(Storage="_Rank", DbType="Int NOT NULL")]
		public int Rank
		{
			get
			{
				return this._Rank;
			}
			set
			{
				if ((this._Rank != value))
				{
					this.OnRankChanging(value);
					this.SendPropertyChanging();
					this._Rank = value;
					this.SendPropertyChanged("Rank");
					this.OnRankChanged();
				}
			}
		}
		
		[Column(Storage="_DenseRank", DbType="Int NOT NULL")]
		public int DenseRank
		{
			get
			{
				return this._DenseRank;
			}
			set
			{
				if ((this._DenseRank != value))
				{
					this.OnDenseRankChanging(value);
					this.SendPropertyChanging();
					this._DenseRank = value;
					this.SendPropertyChanged("DenseRank");
					this.OnDenseRankChanged();
				}
			}
		}
		
		[Column(Storage="_NTile", DbType="TinyInt NOT NULL")]
		public byte NTile
		{
			get
			{
				return this._NTile;
			}
			set
			{
				if ((this._NTile != value))
				{
					this.OnNTileChanging(value);
					this.SendPropertyChanging();
					this._NTile = value;
					this.SendPropertyChanged("NTile");
					this.OnNTileChanged();
				}
			}
		}
		
		[Association(Name="Domain_HyperLinks_MOST_POPULAR_DOMAINS_BY_DOMAIN", Storage="_Domain", ThisKey="DomainID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Domain Domain
		{
			get
			{
				return this._Domain.Entity;
			}
			set
			{
				Domain previousValue = this._Domain.Entity;
				if (((previousValue != value) 
							|| (this._Domain.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Domain.Entity = null;
						previousValue.HyperLinks_MOST_POPULAR_DOMAINS_BY_DOMAIN = null;
					}
					this._Domain.Entity = value;
					if ((value != null))
					{
						value.HyperLinks_MOST_POPULAR_DOMAINS_BY_DOMAIN = this;
						this._DomainID = value.ID;
					}
					else
					{
						this._DomainID = default(int);
					}
					this.SendPropertyChanged("Domain");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="rpt.HyperLinks_MOST_POPULAR_DOMAINS_BY_EXTENSIONS")]
	public partial class HyperLinks_MOST_POPULAR_DOMAINS_BY_EXTENSION : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RowNumber;
		
		private System.Nullable<System.DateTime> _InitiallyDiscovered;
		
		private System.DateTime _LastDiscovered;
		
		private int _DomainID;
		
		private int _Count;
		
		private System.Nullable<short> _DaysSinceInitiallyDiscovered;
		
		private short _DaysSinceLastDiscovered;
		
		private System.Nullable<double> _Strength;
		
		private int _Rank;
		
		private int _DenseRank;
		
		private byte _NTile;
		
		private EntityRef<Domain> _Domain;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRowNumberChanging(int value);
    partial void OnRowNumberChanged();
    partial void OnInitiallyDiscoveredChanging(System.Nullable<System.DateTime> value);
    partial void OnInitiallyDiscoveredChanged();
    partial void OnLastDiscoveredChanging(System.DateTime value);
    partial void OnLastDiscoveredChanged();
    partial void OnDomainIDChanging(int value);
    partial void OnDomainIDChanged();
    partial void OnCountChanging(int value);
    partial void OnCountChanged();
    partial void OnDaysSinceInitiallyDiscoveredChanging(System.Nullable<short> value);
    partial void OnDaysSinceInitiallyDiscoveredChanged();
    partial void OnDaysSinceLastDiscoveredChanging(short value);
    partial void OnDaysSinceLastDiscoveredChanged();
    partial void OnStrengthChanging(System.Nullable<double> value);
    partial void OnStrengthChanged();
    partial void OnRankChanging(int value);
    partial void OnRankChanged();
    partial void OnDenseRankChanging(int value);
    partial void OnDenseRankChanged();
    partial void OnNTileChanging(byte value);
    partial void OnNTileChanged();
    #endregion
		
		public HyperLinks_MOST_POPULAR_DOMAINS_BY_EXTENSION()
		{
			this._Domain = default(EntityRef<Domain>);
			OnCreated();
		}
		
		[Column(Storage="_RowNumber", DbType="Int NOT NULL")]
		public int RowNumber
		{
			get
			{
				return this._RowNumber;
			}
			set
			{
				if ((this._RowNumber != value))
				{
					this.OnRowNumberChanging(value);
					this.SendPropertyChanging();
					this._RowNumber = value;
					this.SendPropertyChanged("RowNumber");
					this.OnRowNumberChanged();
				}
			}
		}
		
		[Column(Storage="_InitiallyDiscovered", DbType="DateTime")]
		public System.Nullable<System.DateTime> InitiallyDiscovered
		{
			get
			{
				return this._InitiallyDiscovered;
			}
			set
			{
				if ((this._InitiallyDiscovered != value))
				{
					this.OnInitiallyDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._InitiallyDiscovered = value;
					this.SendPropertyChanged("InitiallyDiscovered");
					this.OnInitiallyDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_LastDiscovered", DbType="DateTime NOT NULL")]
		public System.DateTime LastDiscovered
		{
			get
			{
				return this._LastDiscovered;
			}
			set
			{
				if ((this._LastDiscovered != value))
				{
					this.OnLastDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._LastDiscovered = value;
					this.SendPropertyChanged("LastDiscovered");
					this.OnLastDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_DomainID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int DomainID
		{
			get
			{
				return this._DomainID;
			}
			set
			{
				if ((this._DomainID != value))
				{
					if (this._Domain.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDomainIDChanging(value);
					this.SendPropertyChanging();
					this._DomainID = value;
					this.SendPropertyChanged("DomainID");
					this.OnDomainIDChanged();
				}
			}
		}
		
		[Column(Storage="_Count", DbType="Int NOT NULL")]
		public int Count
		{
			get
			{
				return this._Count;
			}
			set
			{
				if ((this._Count != value))
				{
					this.OnCountChanging(value);
					this.SendPropertyChanging();
					this._Count = value;
					this.SendPropertyChanged("Count");
					this.OnCountChanged();
				}
			}
		}
		
		[Column(Storage="_DaysSinceInitiallyDiscovered", DbType="SmallInt")]
		public System.Nullable<short> DaysSinceInitiallyDiscovered
		{
			get
			{
				return this._DaysSinceInitiallyDiscovered;
			}
			set
			{
				if ((this._DaysSinceInitiallyDiscovered != value))
				{
					this.OnDaysSinceInitiallyDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._DaysSinceInitiallyDiscovered = value;
					this.SendPropertyChanged("DaysSinceInitiallyDiscovered");
					this.OnDaysSinceInitiallyDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_DaysSinceLastDiscovered", DbType="SmallInt NOT NULL")]
		public short DaysSinceLastDiscovered
		{
			get
			{
				return this._DaysSinceLastDiscovered;
			}
			set
			{
				if ((this._DaysSinceLastDiscovered != value))
				{
					this.OnDaysSinceLastDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._DaysSinceLastDiscovered = value;
					this.SendPropertyChanged("DaysSinceLastDiscovered");
					this.OnDaysSinceLastDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_Strength", DbType="Float")]
		public System.Nullable<double> Strength
		{
			get
			{
				return this._Strength;
			}
			set
			{
				if ((this._Strength != value))
				{
					this.OnStrengthChanging(value);
					this.SendPropertyChanging();
					this._Strength = value;
					this.SendPropertyChanged("Strength");
					this.OnStrengthChanged();
				}
			}
		}
		
		[Column(Storage="_Rank", DbType="Int NOT NULL")]
		public int Rank
		{
			get
			{
				return this._Rank;
			}
			set
			{
				if ((this._Rank != value))
				{
					this.OnRankChanging(value);
					this.SendPropertyChanging();
					this._Rank = value;
					this.SendPropertyChanged("Rank");
					this.OnRankChanged();
				}
			}
		}
		
		[Column(Storage="_DenseRank", DbType="Int NOT NULL")]
		public int DenseRank
		{
			get
			{
				return this._DenseRank;
			}
			set
			{
				if ((this._DenseRank != value))
				{
					this.OnDenseRankChanging(value);
					this.SendPropertyChanging();
					this._DenseRank = value;
					this.SendPropertyChanged("DenseRank");
					this.OnDenseRankChanged();
				}
			}
		}
		
		[Column(Storage="_NTile", DbType="TinyInt NOT NULL")]
		public byte NTile
		{
			get
			{
				return this._NTile;
			}
			set
			{
				if ((this._NTile != value))
				{
					this.OnNTileChanging(value);
					this.SendPropertyChanging();
					this._NTile = value;
					this.SendPropertyChanged("NTile");
					this.OnNTileChanged();
				}
			}
		}
		
		[Association(Name="Domain_HyperLinks_MOST_POPULAR_DOMAINS_BY_EXTENSION", Storage="_Domain", ThisKey="DomainID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Domain Domain
		{
			get
			{
				return this._Domain.Entity;
			}
			set
			{
				Domain previousValue = this._Domain.Entity;
				if (((previousValue != value) 
							|| (this._Domain.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Domain.Entity = null;
						previousValue.HyperLinks_MOST_POPULAR_DOMAINS_BY_EXTENSION = null;
					}
					this._Domain.Entity = value;
					if ((value != null))
					{
						value.HyperLinks_MOST_POPULAR_DOMAINS_BY_EXTENSION = this;
						this._DomainID = value.ID;
					}
					else
					{
						this._DomainID = default(int);
					}
					this.SendPropertyChanged("Domain");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="rpt.HyperLinks_MOST_POPULAR_DOMAINS_BY_HOSTS")]
	public partial class HyperLinks_MOST_POPULAR_DOMAINS_BY_HOST : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RowNumber;
		
		private System.Nullable<System.DateTime> _InitiallyDiscovered;
		
		private System.DateTime _LastDiscovered;
		
		private int _DomainID;
		
		private int _Count;
		
		private System.Nullable<short> _DaysSinceInitiallyDiscovered;
		
		private short _DaysSinceLastDiscovered;
		
		private System.Nullable<double> _Strength;
		
		private int _Rank;
		
		private int _DenseRank;
		
		private byte _NTile;
		
		private EntityRef<Domain> _Domain;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRowNumberChanging(int value);
    partial void OnRowNumberChanged();
    partial void OnInitiallyDiscoveredChanging(System.Nullable<System.DateTime> value);
    partial void OnInitiallyDiscoveredChanged();
    partial void OnLastDiscoveredChanging(System.DateTime value);
    partial void OnLastDiscoveredChanged();
    partial void OnDomainIDChanging(int value);
    partial void OnDomainIDChanged();
    partial void OnCountChanging(int value);
    partial void OnCountChanged();
    partial void OnDaysSinceInitiallyDiscoveredChanging(System.Nullable<short> value);
    partial void OnDaysSinceInitiallyDiscoveredChanged();
    partial void OnDaysSinceLastDiscoveredChanging(short value);
    partial void OnDaysSinceLastDiscoveredChanged();
    partial void OnStrengthChanging(System.Nullable<double> value);
    partial void OnStrengthChanged();
    partial void OnRankChanging(int value);
    partial void OnRankChanged();
    partial void OnDenseRankChanging(int value);
    partial void OnDenseRankChanged();
    partial void OnNTileChanging(byte value);
    partial void OnNTileChanged();
    #endregion
		
		public HyperLinks_MOST_POPULAR_DOMAINS_BY_HOST()
		{
			this._Domain = default(EntityRef<Domain>);
			OnCreated();
		}
		
		[Column(Storage="_RowNumber", DbType="Int NOT NULL")]
		public int RowNumber
		{
			get
			{
				return this._RowNumber;
			}
			set
			{
				if ((this._RowNumber != value))
				{
					this.OnRowNumberChanging(value);
					this.SendPropertyChanging();
					this._RowNumber = value;
					this.SendPropertyChanged("RowNumber");
					this.OnRowNumberChanged();
				}
			}
		}
		
		[Column(Storage="_InitiallyDiscovered", DbType="DateTime")]
		public System.Nullable<System.DateTime> InitiallyDiscovered
		{
			get
			{
				return this._InitiallyDiscovered;
			}
			set
			{
				if ((this._InitiallyDiscovered != value))
				{
					this.OnInitiallyDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._InitiallyDiscovered = value;
					this.SendPropertyChanged("InitiallyDiscovered");
					this.OnInitiallyDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_LastDiscovered", DbType="DateTime NOT NULL")]
		public System.DateTime LastDiscovered
		{
			get
			{
				return this._LastDiscovered;
			}
			set
			{
				if ((this._LastDiscovered != value))
				{
					this.OnLastDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._LastDiscovered = value;
					this.SendPropertyChanged("LastDiscovered");
					this.OnLastDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_DomainID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int DomainID
		{
			get
			{
				return this._DomainID;
			}
			set
			{
				if ((this._DomainID != value))
				{
					if (this._Domain.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDomainIDChanging(value);
					this.SendPropertyChanging();
					this._DomainID = value;
					this.SendPropertyChanged("DomainID");
					this.OnDomainIDChanged();
				}
			}
		}
		
		[Column(Storage="_Count", DbType="Int NOT NULL")]
		public int Count
		{
			get
			{
				return this._Count;
			}
			set
			{
				if ((this._Count != value))
				{
					this.OnCountChanging(value);
					this.SendPropertyChanging();
					this._Count = value;
					this.SendPropertyChanged("Count");
					this.OnCountChanged();
				}
			}
		}
		
		[Column(Storage="_DaysSinceInitiallyDiscovered", DbType="SmallInt")]
		public System.Nullable<short> DaysSinceInitiallyDiscovered
		{
			get
			{
				return this._DaysSinceInitiallyDiscovered;
			}
			set
			{
				if ((this._DaysSinceInitiallyDiscovered != value))
				{
					this.OnDaysSinceInitiallyDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._DaysSinceInitiallyDiscovered = value;
					this.SendPropertyChanged("DaysSinceInitiallyDiscovered");
					this.OnDaysSinceInitiallyDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_DaysSinceLastDiscovered", DbType="SmallInt NOT NULL")]
		public short DaysSinceLastDiscovered
		{
			get
			{
				return this._DaysSinceLastDiscovered;
			}
			set
			{
				if ((this._DaysSinceLastDiscovered != value))
				{
					this.OnDaysSinceLastDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._DaysSinceLastDiscovered = value;
					this.SendPropertyChanged("DaysSinceLastDiscovered");
					this.OnDaysSinceLastDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_Strength", DbType="Float")]
		public System.Nullable<double> Strength
		{
			get
			{
				return this._Strength;
			}
			set
			{
				if ((this._Strength != value))
				{
					this.OnStrengthChanging(value);
					this.SendPropertyChanging();
					this._Strength = value;
					this.SendPropertyChanged("Strength");
					this.OnStrengthChanged();
				}
			}
		}
		
		[Column(Storage="_Rank", DbType="Int NOT NULL")]
		public int Rank
		{
			get
			{
				return this._Rank;
			}
			set
			{
				if ((this._Rank != value))
				{
					this.OnRankChanging(value);
					this.SendPropertyChanging();
					this._Rank = value;
					this.SendPropertyChanged("Rank");
					this.OnRankChanged();
				}
			}
		}
		
		[Column(Storage="_DenseRank", DbType="Int NOT NULL")]
		public int DenseRank
		{
			get
			{
				return this._DenseRank;
			}
			set
			{
				if ((this._DenseRank != value))
				{
					this.OnDenseRankChanging(value);
					this.SendPropertyChanging();
					this._DenseRank = value;
					this.SendPropertyChanged("DenseRank");
					this.OnDenseRankChanged();
				}
			}
		}
		
		[Column(Storage="_NTile", DbType="TinyInt NOT NULL")]
		public byte NTile
		{
			get
			{
				return this._NTile;
			}
			set
			{
				if ((this._NTile != value))
				{
					this.OnNTileChanging(value);
					this.SendPropertyChanging();
					this._NTile = value;
					this.SendPropertyChanged("NTile");
					this.OnNTileChanged();
				}
			}
		}
		
		[Association(Name="Domain_HyperLinks_MOST_POPULAR_DOMAINS_BY_HOST", Storage="_Domain", ThisKey="DomainID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Domain Domain
		{
			get
			{
				return this._Domain.Entity;
			}
			set
			{
				Domain previousValue = this._Domain.Entity;
				if (((previousValue != value) 
							|| (this._Domain.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Domain.Entity = null;
						previousValue.HyperLinks_MOST_POPULAR_DOMAINS_BY_HOST = null;
					}
					this._Domain.Entity = value;
					if ((value != null))
					{
						value.HyperLinks_MOST_POPULAR_DOMAINS_BY_HOST = this;
						this._DomainID = value.ID;
					}
					else
					{
						this._DomainID = default(int);
					}
					this.SendPropertyChanged("Domain");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="rpt.HyperLinks_MOST_POPULAR_DOMAINS_BY_SCHEMES")]
	public partial class HyperLinks_MOST_POPULAR_DOMAINS_BY_SCHEME : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RowNumber;
		
		private System.Nullable<System.DateTime> _InitiallyDiscovered;
		
		private System.DateTime _LastDiscovered;
		
		private int _DomainID;
		
		private int _Count;
		
		private System.Nullable<short> _DaysSinceInitiallyDiscovered;
		
		private short _DaysSinceLastDiscovered;
		
		private System.Nullable<double> _Strength;
		
		private int _Rank;
		
		private int _DenseRank;
		
		private byte _NTile;
		
		private EntityRef<Domain> _Domain;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRowNumberChanging(int value);
    partial void OnRowNumberChanged();
    partial void OnInitiallyDiscoveredChanging(System.Nullable<System.DateTime> value);
    partial void OnInitiallyDiscoveredChanged();
    partial void OnLastDiscoveredChanging(System.DateTime value);
    partial void OnLastDiscoveredChanged();
    partial void OnDomainIDChanging(int value);
    partial void OnDomainIDChanged();
    partial void OnCountChanging(int value);
    partial void OnCountChanged();
    partial void OnDaysSinceInitiallyDiscoveredChanging(System.Nullable<short> value);
    partial void OnDaysSinceInitiallyDiscoveredChanged();
    partial void OnDaysSinceLastDiscoveredChanging(short value);
    partial void OnDaysSinceLastDiscoveredChanged();
    partial void OnStrengthChanging(System.Nullable<double> value);
    partial void OnStrengthChanged();
    partial void OnRankChanging(int value);
    partial void OnRankChanged();
    partial void OnDenseRankChanging(int value);
    partial void OnDenseRankChanged();
    partial void OnNTileChanging(byte value);
    partial void OnNTileChanged();
    #endregion
		
		public HyperLinks_MOST_POPULAR_DOMAINS_BY_SCHEME()
		{
			this._Domain = default(EntityRef<Domain>);
			OnCreated();
		}
		
		[Column(Storage="_RowNumber", DbType="Int NOT NULL")]
		public int RowNumber
		{
			get
			{
				return this._RowNumber;
			}
			set
			{
				if ((this._RowNumber != value))
				{
					this.OnRowNumberChanging(value);
					this.SendPropertyChanging();
					this._RowNumber = value;
					this.SendPropertyChanged("RowNumber");
					this.OnRowNumberChanged();
				}
			}
		}
		
		[Column(Storage="_InitiallyDiscovered", DbType="DateTime")]
		public System.Nullable<System.DateTime> InitiallyDiscovered
		{
			get
			{
				return this._InitiallyDiscovered;
			}
			set
			{
				if ((this._InitiallyDiscovered != value))
				{
					this.OnInitiallyDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._InitiallyDiscovered = value;
					this.SendPropertyChanged("InitiallyDiscovered");
					this.OnInitiallyDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_LastDiscovered", DbType="DateTime NOT NULL")]
		public System.DateTime LastDiscovered
		{
			get
			{
				return this._LastDiscovered;
			}
			set
			{
				if ((this._LastDiscovered != value))
				{
					this.OnLastDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._LastDiscovered = value;
					this.SendPropertyChanged("LastDiscovered");
					this.OnLastDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_DomainID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int DomainID
		{
			get
			{
				return this._DomainID;
			}
			set
			{
				if ((this._DomainID != value))
				{
					if (this._Domain.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDomainIDChanging(value);
					this.SendPropertyChanging();
					this._DomainID = value;
					this.SendPropertyChanged("DomainID");
					this.OnDomainIDChanged();
				}
			}
		}
		
		[Column(Storage="_Count", DbType="Int NOT NULL")]
		public int Count
		{
			get
			{
				return this._Count;
			}
			set
			{
				if ((this._Count != value))
				{
					this.OnCountChanging(value);
					this.SendPropertyChanging();
					this._Count = value;
					this.SendPropertyChanged("Count");
					this.OnCountChanged();
				}
			}
		}
		
		[Column(Storage="_DaysSinceInitiallyDiscovered", DbType="SmallInt")]
		public System.Nullable<short> DaysSinceInitiallyDiscovered
		{
			get
			{
				return this._DaysSinceInitiallyDiscovered;
			}
			set
			{
				if ((this._DaysSinceInitiallyDiscovered != value))
				{
					this.OnDaysSinceInitiallyDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._DaysSinceInitiallyDiscovered = value;
					this.SendPropertyChanged("DaysSinceInitiallyDiscovered");
					this.OnDaysSinceInitiallyDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_DaysSinceLastDiscovered", DbType="SmallInt NOT NULL")]
		public short DaysSinceLastDiscovered
		{
			get
			{
				return this._DaysSinceLastDiscovered;
			}
			set
			{
				if ((this._DaysSinceLastDiscovered != value))
				{
					this.OnDaysSinceLastDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._DaysSinceLastDiscovered = value;
					this.SendPropertyChanged("DaysSinceLastDiscovered");
					this.OnDaysSinceLastDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_Strength", DbType="Float")]
		public System.Nullable<double> Strength
		{
			get
			{
				return this._Strength;
			}
			set
			{
				if ((this._Strength != value))
				{
					this.OnStrengthChanging(value);
					this.SendPropertyChanging();
					this._Strength = value;
					this.SendPropertyChanged("Strength");
					this.OnStrengthChanged();
				}
			}
		}
		
		[Column(Storage="_Rank", DbType="Int NOT NULL")]
		public int Rank
		{
			get
			{
				return this._Rank;
			}
			set
			{
				if ((this._Rank != value))
				{
					this.OnRankChanging(value);
					this.SendPropertyChanging();
					this._Rank = value;
					this.SendPropertyChanged("Rank");
					this.OnRankChanged();
				}
			}
		}
		
		[Column(Storage="_DenseRank", DbType="Int NOT NULL")]
		public int DenseRank
		{
			get
			{
				return this._DenseRank;
			}
			set
			{
				if ((this._DenseRank != value))
				{
					this.OnDenseRankChanging(value);
					this.SendPropertyChanging();
					this._DenseRank = value;
					this.SendPropertyChanged("DenseRank");
					this.OnDenseRankChanged();
				}
			}
		}
		
		[Column(Storage="_NTile", DbType="TinyInt NOT NULL")]
		public byte NTile
		{
			get
			{
				return this._NTile;
			}
			set
			{
				if ((this._NTile != value))
				{
					this.OnNTileChanging(value);
					this.SendPropertyChanging();
					this._NTile = value;
					this.SendPropertyChanged("NTile");
					this.OnNTileChanged();
				}
			}
		}
		
		[Association(Name="Domain_HyperLinks_MOST_POPULAR_DOMAINS_BY_SCHEME", Storage="_Domain", ThisKey="DomainID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Domain Domain
		{
			get
			{
				return this._Domain.Entity;
			}
			set
			{
				Domain previousValue = this._Domain.Entity;
				if (((previousValue != value) 
							|| (this._Domain.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Domain.Entity = null;
						previousValue.HyperLinks_MOST_POPULAR_DOMAINS_BY_SCHEME = null;
					}
					this._Domain.Entity = value;
					if ((value != null))
					{
						value.HyperLinks_MOST_POPULAR_DOMAINS_BY_SCHEME = this;
						this._DomainID = value.ID;
					}
					else
					{
						this._DomainID = default(int);
					}
					this.SendPropertyChanged("Domain");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="rpt.HyperLinks_MOST_POPULAR_EXTENSIONS_BY_ABSOLUTEURIS")]
	public partial class HyperLinks_MOST_POPULAR_EXTENSIONS_BY_ABSOLUTEURI : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RowNumber;
		
		private System.Nullable<System.DateTime> _InitiallyDiscovered;
		
		private System.DateTime _LastDiscovered;
		
		private int _ExtensionID;
		
		private int _Count;
		
		private System.Nullable<short> _DaysSinceInitiallyDiscovered;
		
		private short _DaysSinceLastDiscovered;
		
		private System.Nullable<double> _Strength;
		
		private int _Rank;
		
		private int _DenseRank;
		
		private byte _NTile;
		
		private EntityRef<Extension> _Extension;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRowNumberChanging(int value);
    partial void OnRowNumberChanged();
    partial void OnInitiallyDiscoveredChanging(System.Nullable<System.DateTime> value);
    partial void OnInitiallyDiscoveredChanged();
    partial void OnLastDiscoveredChanging(System.DateTime value);
    partial void OnLastDiscoveredChanged();
    partial void OnExtensionIDChanging(int value);
    partial void OnExtensionIDChanged();
    partial void OnCountChanging(int value);
    partial void OnCountChanged();
    partial void OnDaysSinceInitiallyDiscoveredChanging(System.Nullable<short> value);
    partial void OnDaysSinceInitiallyDiscoveredChanged();
    partial void OnDaysSinceLastDiscoveredChanging(short value);
    partial void OnDaysSinceLastDiscoveredChanged();
    partial void OnStrengthChanging(System.Nullable<double> value);
    partial void OnStrengthChanged();
    partial void OnRankChanging(int value);
    partial void OnRankChanged();
    partial void OnDenseRankChanging(int value);
    partial void OnDenseRankChanged();
    partial void OnNTileChanging(byte value);
    partial void OnNTileChanged();
    #endregion
		
		public HyperLinks_MOST_POPULAR_EXTENSIONS_BY_ABSOLUTEURI()
		{
			this._Extension = default(EntityRef<Extension>);
			OnCreated();
		}
		
		[Column(Storage="_RowNumber", DbType="Int NOT NULL")]
		public int RowNumber
		{
			get
			{
				return this._RowNumber;
			}
			set
			{
				if ((this._RowNumber != value))
				{
					this.OnRowNumberChanging(value);
					this.SendPropertyChanging();
					this._RowNumber = value;
					this.SendPropertyChanged("RowNumber");
					this.OnRowNumberChanged();
				}
			}
		}
		
		[Column(Storage="_InitiallyDiscovered", DbType="DateTime")]
		public System.Nullable<System.DateTime> InitiallyDiscovered
		{
			get
			{
				return this._InitiallyDiscovered;
			}
			set
			{
				if ((this._InitiallyDiscovered != value))
				{
					this.OnInitiallyDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._InitiallyDiscovered = value;
					this.SendPropertyChanged("InitiallyDiscovered");
					this.OnInitiallyDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_LastDiscovered", DbType="DateTime NOT NULL")]
		public System.DateTime LastDiscovered
		{
			get
			{
				return this._LastDiscovered;
			}
			set
			{
				if ((this._LastDiscovered != value))
				{
					this.OnLastDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._LastDiscovered = value;
					this.SendPropertyChanged("LastDiscovered");
					this.OnLastDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_ExtensionID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ExtensionID
		{
			get
			{
				return this._ExtensionID;
			}
			set
			{
				if ((this._ExtensionID != value))
				{
					if (this._Extension.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnExtensionIDChanging(value);
					this.SendPropertyChanging();
					this._ExtensionID = value;
					this.SendPropertyChanged("ExtensionID");
					this.OnExtensionIDChanged();
				}
			}
		}
		
		[Column(Storage="_Count", DbType="Int NOT NULL")]
		public int Count
		{
			get
			{
				return this._Count;
			}
			set
			{
				if ((this._Count != value))
				{
					this.OnCountChanging(value);
					this.SendPropertyChanging();
					this._Count = value;
					this.SendPropertyChanged("Count");
					this.OnCountChanged();
				}
			}
		}
		
		[Column(Storage="_DaysSinceInitiallyDiscovered", DbType="SmallInt")]
		public System.Nullable<short> DaysSinceInitiallyDiscovered
		{
			get
			{
				return this._DaysSinceInitiallyDiscovered;
			}
			set
			{
				if ((this._DaysSinceInitiallyDiscovered != value))
				{
					this.OnDaysSinceInitiallyDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._DaysSinceInitiallyDiscovered = value;
					this.SendPropertyChanged("DaysSinceInitiallyDiscovered");
					this.OnDaysSinceInitiallyDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_DaysSinceLastDiscovered", DbType="SmallInt NOT NULL")]
		public short DaysSinceLastDiscovered
		{
			get
			{
				return this._DaysSinceLastDiscovered;
			}
			set
			{
				if ((this._DaysSinceLastDiscovered != value))
				{
					this.OnDaysSinceLastDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._DaysSinceLastDiscovered = value;
					this.SendPropertyChanged("DaysSinceLastDiscovered");
					this.OnDaysSinceLastDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_Strength", DbType="Float")]
		public System.Nullable<double> Strength
		{
			get
			{
				return this._Strength;
			}
			set
			{
				if ((this._Strength != value))
				{
					this.OnStrengthChanging(value);
					this.SendPropertyChanging();
					this._Strength = value;
					this.SendPropertyChanged("Strength");
					this.OnStrengthChanged();
				}
			}
		}
		
		[Column(Storage="_Rank", DbType="Int NOT NULL")]
		public int Rank
		{
			get
			{
				return this._Rank;
			}
			set
			{
				if ((this._Rank != value))
				{
					this.OnRankChanging(value);
					this.SendPropertyChanging();
					this._Rank = value;
					this.SendPropertyChanged("Rank");
					this.OnRankChanged();
				}
			}
		}
		
		[Column(Storage="_DenseRank", DbType="Int NOT NULL")]
		public int DenseRank
		{
			get
			{
				return this._DenseRank;
			}
			set
			{
				if ((this._DenseRank != value))
				{
					this.OnDenseRankChanging(value);
					this.SendPropertyChanging();
					this._DenseRank = value;
					this.SendPropertyChanged("DenseRank");
					this.OnDenseRankChanged();
				}
			}
		}
		
		[Column(Storage="_NTile", DbType="TinyInt NOT NULL")]
		public byte NTile
		{
			get
			{
				return this._NTile;
			}
			set
			{
				if ((this._NTile != value))
				{
					this.OnNTileChanging(value);
					this.SendPropertyChanging();
					this._NTile = value;
					this.SendPropertyChanged("NTile");
					this.OnNTileChanged();
				}
			}
		}
		
		[Association(Name="Extension_HyperLinks_MOST_POPULAR_EXTENSIONS_BY_ABSOLUTEURI", Storage="_Extension", ThisKey="ExtensionID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Extension Extension
		{
			get
			{
				return this._Extension.Entity;
			}
			set
			{
				Extension previousValue = this._Extension.Entity;
				if (((previousValue != value) 
							|| (this._Extension.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Extension.Entity = null;
						previousValue.HyperLinks_MOST_POPULAR_EXTENSIONS_BY_ABSOLUTEURI = null;
					}
					this._Extension.Entity = value;
					if ((value != null))
					{
						value.HyperLinks_MOST_POPULAR_EXTENSIONS_BY_ABSOLUTEURI = this;
						this._ExtensionID = value.ID;
					}
					else
					{
						this._ExtensionID = default(int);
					}
					this.SendPropertyChanged("Extension");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="rpt.HyperLinks_MOST_POPULAR_EXTENSIONS_BY_DOMAINS")]
	public partial class HyperLinks_MOST_POPULAR_EXTENSIONS_BY_DOMAIN : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RowNumber;
		
		private System.Nullable<System.DateTime> _InitiallyDiscovered;
		
		private System.DateTime _LastDiscovered;
		
		private int _ExtensionID;
		
		private int _Count;
		
		private System.Nullable<short> _DaysSinceInitiallyDiscovered;
		
		private short _DaysSinceLastDiscovered;
		
		private System.Nullable<double> _Strength;
		
		private int _Rank;
		
		private int _DenseRank;
		
		private byte _NTile;
		
		private EntityRef<Extension> _Extension;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRowNumberChanging(int value);
    partial void OnRowNumberChanged();
    partial void OnInitiallyDiscoveredChanging(System.Nullable<System.DateTime> value);
    partial void OnInitiallyDiscoveredChanged();
    partial void OnLastDiscoveredChanging(System.DateTime value);
    partial void OnLastDiscoveredChanged();
    partial void OnExtensionIDChanging(int value);
    partial void OnExtensionIDChanged();
    partial void OnCountChanging(int value);
    partial void OnCountChanged();
    partial void OnDaysSinceInitiallyDiscoveredChanging(System.Nullable<short> value);
    partial void OnDaysSinceInitiallyDiscoveredChanged();
    partial void OnDaysSinceLastDiscoveredChanging(short value);
    partial void OnDaysSinceLastDiscoveredChanged();
    partial void OnStrengthChanging(System.Nullable<double> value);
    partial void OnStrengthChanged();
    partial void OnRankChanging(int value);
    partial void OnRankChanged();
    partial void OnDenseRankChanging(int value);
    partial void OnDenseRankChanged();
    partial void OnNTileChanging(byte value);
    partial void OnNTileChanged();
    #endregion
		
		public HyperLinks_MOST_POPULAR_EXTENSIONS_BY_DOMAIN()
		{
			this._Extension = default(EntityRef<Extension>);
			OnCreated();
		}
		
		[Column(Storage="_RowNumber", DbType="Int NOT NULL")]
		public int RowNumber
		{
			get
			{
				return this._RowNumber;
			}
			set
			{
				if ((this._RowNumber != value))
				{
					this.OnRowNumberChanging(value);
					this.SendPropertyChanging();
					this._RowNumber = value;
					this.SendPropertyChanged("RowNumber");
					this.OnRowNumberChanged();
				}
			}
		}
		
		[Column(Storage="_InitiallyDiscovered", DbType="DateTime")]
		public System.Nullable<System.DateTime> InitiallyDiscovered
		{
			get
			{
				return this._InitiallyDiscovered;
			}
			set
			{
				if ((this._InitiallyDiscovered != value))
				{
					this.OnInitiallyDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._InitiallyDiscovered = value;
					this.SendPropertyChanged("InitiallyDiscovered");
					this.OnInitiallyDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_LastDiscovered", DbType="DateTime NOT NULL")]
		public System.DateTime LastDiscovered
		{
			get
			{
				return this._LastDiscovered;
			}
			set
			{
				if ((this._LastDiscovered != value))
				{
					this.OnLastDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._LastDiscovered = value;
					this.SendPropertyChanged("LastDiscovered");
					this.OnLastDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_ExtensionID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ExtensionID
		{
			get
			{
				return this._ExtensionID;
			}
			set
			{
				if ((this._ExtensionID != value))
				{
					if (this._Extension.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnExtensionIDChanging(value);
					this.SendPropertyChanging();
					this._ExtensionID = value;
					this.SendPropertyChanged("ExtensionID");
					this.OnExtensionIDChanged();
				}
			}
		}
		
		[Column(Storage="_Count", DbType="Int NOT NULL")]
		public int Count
		{
			get
			{
				return this._Count;
			}
			set
			{
				if ((this._Count != value))
				{
					this.OnCountChanging(value);
					this.SendPropertyChanging();
					this._Count = value;
					this.SendPropertyChanged("Count");
					this.OnCountChanged();
				}
			}
		}
		
		[Column(Storage="_DaysSinceInitiallyDiscovered", DbType="SmallInt")]
		public System.Nullable<short> DaysSinceInitiallyDiscovered
		{
			get
			{
				return this._DaysSinceInitiallyDiscovered;
			}
			set
			{
				if ((this._DaysSinceInitiallyDiscovered != value))
				{
					this.OnDaysSinceInitiallyDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._DaysSinceInitiallyDiscovered = value;
					this.SendPropertyChanged("DaysSinceInitiallyDiscovered");
					this.OnDaysSinceInitiallyDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_DaysSinceLastDiscovered", DbType="SmallInt NOT NULL")]
		public short DaysSinceLastDiscovered
		{
			get
			{
				return this._DaysSinceLastDiscovered;
			}
			set
			{
				if ((this._DaysSinceLastDiscovered != value))
				{
					this.OnDaysSinceLastDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._DaysSinceLastDiscovered = value;
					this.SendPropertyChanged("DaysSinceLastDiscovered");
					this.OnDaysSinceLastDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_Strength", DbType="Float")]
		public System.Nullable<double> Strength
		{
			get
			{
				return this._Strength;
			}
			set
			{
				if ((this._Strength != value))
				{
					this.OnStrengthChanging(value);
					this.SendPropertyChanging();
					this._Strength = value;
					this.SendPropertyChanged("Strength");
					this.OnStrengthChanged();
				}
			}
		}
		
		[Column(Storage="_Rank", DbType="Int NOT NULL")]
		public int Rank
		{
			get
			{
				return this._Rank;
			}
			set
			{
				if ((this._Rank != value))
				{
					this.OnRankChanging(value);
					this.SendPropertyChanging();
					this._Rank = value;
					this.SendPropertyChanged("Rank");
					this.OnRankChanged();
				}
			}
		}
		
		[Column(Storage="_DenseRank", DbType="Int NOT NULL")]
		public int DenseRank
		{
			get
			{
				return this._DenseRank;
			}
			set
			{
				if ((this._DenseRank != value))
				{
					this.OnDenseRankChanging(value);
					this.SendPropertyChanging();
					this._DenseRank = value;
					this.SendPropertyChanged("DenseRank");
					this.OnDenseRankChanged();
				}
			}
		}
		
		[Column(Storage="_NTile", DbType="TinyInt NOT NULL")]
		public byte NTile
		{
			get
			{
				return this._NTile;
			}
			set
			{
				if ((this._NTile != value))
				{
					this.OnNTileChanging(value);
					this.SendPropertyChanging();
					this._NTile = value;
					this.SendPropertyChanged("NTile");
					this.OnNTileChanged();
				}
			}
		}
		
		[Association(Name="Extension_HyperLinks_MOST_POPULAR_EXTENSIONS_BY_DOMAIN", Storage="_Extension", ThisKey="ExtensionID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Extension Extension
		{
			get
			{
				return this._Extension.Entity;
			}
			set
			{
				Extension previousValue = this._Extension.Entity;
				if (((previousValue != value) 
							|| (this._Extension.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Extension.Entity = null;
						previousValue.HyperLinks_MOST_POPULAR_EXTENSIONS_BY_DOMAIN = null;
					}
					this._Extension.Entity = value;
					if ((value != null))
					{
						value.HyperLinks_MOST_POPULAR_EXTENSIONS_BY_DOMAIN = this;
						this._ExtensionID = value.ID;
					}
					else
					{
						this._ExtensionID = default(int);
					}
					this.SendPropertyChanged("Extension");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="rpt.HyperLinks_MOST_POPULAR_EXTENSIONS_BY_EXTENSIONS")]
	public partial class HyperLinks_MOST_POPULAR_EXTENSIONS_BY_EXTENSION : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RowNumber;
		
		private System.Nullable<System.DateTime> _InitiallyDiscovered;
		
		private System.DateTime _LastDiscovered;
		
		private int _ExtensionID;
		
		private int _Count;
		
		private System.Nullable<short> _DaysSinceInitiallyDiscovered;
		
		private short _DaysSinceLastDiscovered;
		
		private System.Nullable<double> _Strength;
		
		private int _Rank;
		
		private int _DenseRank;
		
		private byte _NTile;
		
		private EntityRef<Extension> _Extension;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRowNumberChanging(int value);
    partial void OnRowNumberChanged();
    partial void OnInitiallyDiscoveredChanging(System.Nullable<System.DateTime> value);
    partial void OnInitiallyDiscoveredChanged();
    partial void OnLastDiscoveredChanging(System.DateTime value);
    partial void OnLastDiscoveredChanged();
    partial void OnExtensionIDChanging(int value);
    partial void OnExtensionIDChanged();
    partial void OnCountChanging(int value);
    partial void OnCountChanged();
    partial void OnDaysSinceInitiallyDiscoveredChanging(System.Nullable<short> value);
    partial void OnDaysSinceInitiallyDiscoveredChanged();
    partial void OnDaysSinceLastDiscoveredChanging(short value);
    partial void OnDaysSinceLastDiscoveredChanged();
    partial void OnStrengthChanging(System.Nullable<double> value);
    partial void OnStrengthChanged();
    partial void OnRankChanging(int value);
    partial void OnRankChanged();
    partial void OnDenseRankChanging(int value);
    partial void OnDenseRankChanged();
    partial void OnNTileChanging(byte value);
    partial void OnNTileChanged();
    #endregion
		
		public HyperLinks_MOST_POPULAR_EXTENSIONS_BY_EXTENSION()
		{
			this._Extension = default(EntityRef<Extension>);
			OnCreated();
		}
		
		[Column(Storage="_RowNumber", DbType="Int NOT NULL")]
		public int RowNumber
		{
			get
			{
				return this._RowNumber;
			}
			set
			{
				if ((this._RowNumber != value))
				{
					this.OnRowNumberChanging(value);
					this.SendPropertyChanging();
					this._RowNumber = value;
					this.SendPropertyChanged("RowNumber");
					this.OnRowNumberChanged();
				}
			}
		}
		
		[Column(Storage="_InitiallyDiscovered", DbType="DateTime")]
		public System.Nullable<System.DateTime> InitiallyDiscovered
		{
			get
			{
				return this._InitiallyDiscovered;
			}
			set
			{
				if ((this._InitiallyDiscovered != value))
				{
					this.OnInitiallyDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._InitiallyDiscovered = value;
					this.SendPropertyChanged("InitiallyDiscovered");
					this.OnInitiallyDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_LastDiscovered", DbType="DateTime NOT NULL")]
		public System.DateTime LastDiscovered
		{
			get
			{
				return this._LastDiscovered;
			}
			set
			{
				if ((this._LastDiscovered != value))
				{
					this.OnLastDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._LastDiscovered = value;
					this.SendPropertyChanged("LastDiscovered");
					this.OnLastDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_ExtensionID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ExtensionID
		{
			get
			{
				return this._ExtensionID;
			}
			set
			{
				if ((this._ExtensionID != value))
				{
					if (this._Extension.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnExtensionIDChanging(value);
					this.SendPropertyChanging();
					this._ExtensionID = value;
					this.SendPropertyChanged("ExtensionID");
					this.OnExtensionIDChanged();
				}
			}
		}
		
		[Column(Storage="_Count", DbType="Int NOT NULL")]
		public int Count
		{
			get
			{
				return this._Count;
			}
			set
			{
				if ((this._Count != value))
				{
					this.OnCountChanging(value);
					this.SendPropertyChanging();
					this._Count = value;
					this.SendPropertyChanged("Count");
					this.OnCountChanged();
				}
			}
		}
		
		[Column(Storage="_DaysSinceInitiallyDiscovered", DbType="SmallInt")]
		public System.Nullable<short> DaysSinceInitiallyDiscovered
		{
			get
			{
				return this._DaysSinceInitiallyDiscovered;
			}
			set
			{
				if ((this._DaysSinceInitiallyDiscovered != value))
				{
					this.OnDaysSinceInitiallyDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._DaysSinceInitiallyDiscovered = value;
					this.SendPropertyChanged("DaysSinceInitiallyDiscovered");
					this.OnDaysSinceInitiallyDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_DaysSinceLastDiscovered", DbType="SmallInt NOT NULL")]
		public short DaysSinceLastDiscovered
		{
			get
			{
				return this._DaysSinceLastDiscovered;
			}
			set
			{
				if ((this._DaysSinceLastDiscovered != value))
				{
					this.OnDaysSinceLastDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._DaysSinceLastDiscovered = value;
					this.SendPropertyChanged("DaysSinceLastDiscovered");
					this.OnDaysSinceLastDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_Strength", DbType="Float")]
		public System.Nullable<double> Strength
		{
			get
			{
				return this._Strength;
			}
			set
			{
				if ((this._Strength != value))
				{
					this.OnStrengthChanging(value);
					this.SendPropertyChanging();
					this._Strength = value;
					this.SendPropertyChanged("Strength");
					this.OnStrengthChanged();
				}
			}
		}
		
		[Column(Storage="_Rank", DbType="Int NOT NULL")]
		public int Rank
		{
			get
			{
				return this._Rank;
			}
			set
			{
				if ((this._Rank != value))
				{
					this.OnRankChanging(value);
					this.SendPropertyChanging();
					this._Rank = value;
					this.SendPropertyChanged("Rank");
					this.OnRankChanged();
				}
			}
		}
		
		[Column(Storage="_DenseRank", DbType="Int NOT NULL")]
		public int DenseRank
		{
			get
			{
				return this._DenseRank;
			}
			set
			{
				if ((this._DenseRank != value))
				{
					this.OnDenseRankChanging(value);
					this.SendPropertyChanging();
					this._DenseRank = value;
					this.SendPropertyChanged("DenseRank");
					this.OnDenseRankChanged();
				}
			}
		}
		
		[Column(Storage="_NTile", DbType="TinyInt NOT NULL")]
		public byte NTile
		{
			get
			{
				return this._NTile;
			}
			set
			{
				if ((this._NTile != value))
				{
					this.OnNTileChanging(value);
					this.SendPropertyChanging();
					this._NTile = value;
					this.SendPropertyChanged("NTile");
					this.OnNTileChanged();
				}
			}
		}
		
		[Association(Name="Extension_HyperLinks_MOST_POPULAR_EXTENSIONS_BY_EXTENSION", Storage="_Extension", ThisKey="ExtensionID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Extension Extension
		{
			get
			{
				return this._Extension.Entity;
			}
			set
			{
				Extension previousValue = this._Extension.Entity;
				if (((previousValue != value) 
							|| (this._Extension.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Extension.Entity = null;
						previousValue.HyperLinks_MOST_POPULAR_EXTENSIONS_BY_EXTENSION = null;
					}
					this._Extension.Entity = value;
					if ((value != null))
					{
						value.HyperLinks_MOST_POPULAR_EXTENSIONS_BY_EXTENSION = this;
						this._ExtensionID = value.ID;
					}
					else
					{
						this._ExtensionID = default(int);
					}
					this.SendPropertyChanged("Extension");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="rpt.HyperLinks_MOST_POPULAR_EXTENSIONS_BY_HOSTS")]
	public partial class HyperLinks_MOST_POPULAR_EXTENSIONS_BY_HOST : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RowNumber;
		
		private System.Nullable<System.DateTime> _InitiallyDiscovered;
		
		private System.DateTime _LastDiscovered;
		
		private int _ExtensionID;
		
		private int _Count;
		
		private System.Nullable<short> _DaysSinceInitiallyDiscovered;
		
		private short _DaysSinceLastDiscovered;
		
		private System.Nullable<double> _Strength;
		
		private int _Rank;
		
		private int _DenseRank;
		
		private byte _NTile;
		
		private EntityRef<Extension> _Extension;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRowNumberChanging(int value);
    partial void OnRowNumberChanged();
    partial void OnInitiallyDiscoveredChanging(System.Nullable<System.DateTime> value);
    partial void OnInitiallyDiscoveredChanged();
    partial void OnLastDiscoveredChanging(System.DateTime value);
    partial void OnLastDiscoveredChanged();
    partial void OnExtensionIDChanging(int value);
    partial void OnExtensionIDChanged();
    partial void OnCountChanging(int value);
    partial void OnCountChanged();
    partial void OnDaysSinceInitiallyDiscoveredChanging(System.Nullable<short> value);
    partial void OnDaysSinceInitiallyDiscoveredChanged();
    partial void OnDaysSinceLastDiscoveredChanging(short value);
    partial void OnDaysSinceLastDiscoveredChanged();
    partial void OnStrengthChanging(System.Nullable<double> value);
    partial void OnStrengthChanged();
    partial void OnRankChanging(int value);
    partial void OnRankChanged();
    partial void OnDenseRankChanging(int value);
    partial void OnDenseRankChanged();
    partial void OnNTileChanging(byte value);
    partial void OnNTileChanged();
    #endregion
		
		public HyperLinks_MOST_POPULAR_EXTENSIONS_BY_HOST()
		{
			this._Extension = default(EntityRef<Extension>);
			OnCreated();
		}
		
		[Column(Storage="_RowNumber", DbType="Int NOT NULL")]
		public int RowNumber
		{
			get
			{
				return this._RowNumber;
			}
			set
			{
				if ((this._RowNumber != value))
				{
					this.OnRowNumberChanging(value);
					this.SendPropertyChanging();
					this._RowNumber = value;
					this.SendPropertyChanged("RowNumber");
					this.OnRowNumberChanged();
				}
			}
		}
		
		[Column(Storage="_InitiallyDiscovered", DbType="DateTime")]
		public System.Nullable<System.DateTime> InitiallyDiscovered
		{
			get
			{
				return this._InitiallyDiscovered;
			}
			set
			{
				if ((this._InitiallyDiscovered != value))
				{
					this.OnInitiallyDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._InitiallyDiscovered = value;
					this.SendPropertyChanged("InitiallyDiscovered");
					this.OnInitiallyDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_LastDiscovered", DbType="DateTime NOT NULL")]
		public System.DateTime LastDiscovered
		{
			get
			{
				return this._LastDiscovered;
			}
			set
			{
				if ((this._LastDiscovered != value))
				{
					this.OnLastDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._LastDiscovered = value;
					this.SendPropertyChanged("LastDiscovered");
					this.OnLastDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_ExtensionID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ExtensionID
		{
			get
			{
				return this._ExtensionID;
			}
			set
			{
				if ((this._ExtensionID != value))
				{
					if (this._Extension.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnExtensionIDChanging(value);
					this.SendPropertyChanging();
					this._ExtensionID = value;
					this.SendPropertyChanged("ExtensionID");
					this.OnExtensionIDChanged();
				}
			}
		}
		
		[Column(Storage="_Count", DbType="Int NOT NULL")]
		public int Count
		{
			get
			{
				return this._Count;
			}
			set
			{
				if ((this._Count != value))
				{
					this.OnCountChanging(value);
					this.SendPropertyChanging();
					this._Count = value;
					this.SendPropertyChanged("Count");
					this.OnCountChanged();
				}
			}
		}
		
		[Column(Storage="_DaysSinceInitiallyDiscovered", DbType="SmallInt")]
		public System.Nullable<short> DaysSinceInitiallyDiscovered
		{
			get
			{
				return this._DaysSinceInitiallyDiscovered;
			}
			set
			{
				if ((this._DaysSinceInitiallyDiscovered != value))
				{
					this.OnDaysSinceInitiallyDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._DaysSinceInitiallyDiscovered = value;
					this.SendPropertyChanged("DaysSinceInitiallyDiscovered");
					this.OnDaysSinceInitiallyDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_DaysSinceLastDiscovered", DbType="SmallInt NOT NULL")]
		public short DaysSinceLastDiscovered
		{
			get
			{
				return this._DaysSinceLastDiscovered;
			}
			set
			{
				if ((this._DaysSinceLastDiscovered != value))
				{
					this.OnDaysSinceLastDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._DaysSinceLastDiscovered = value;
					this.SendPropertyChanged("DaysSinceLastDiscovered");
					this.OnDaysSinceLastDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_Strength", DbType="Float")]
		public System.Nullable<double> Strength
		{
			get
			{
				return this._Strength;
			}
			set
			{
				if ((this._Strength != value))
				{
					this.OnStrengthChanging(value);
					this.SendPropertyChanging();
					this._Strength = value;
					this.SendPropertyChanged("Strength");
					this.OnStrengthChanged();
				}
			}
		}
		
		[Column(Storage="_Rank", DbType="Int NOT NULL")]
		public int Rank
		{
			get
			{
				return this._Rank;
			}
			set
			{
				if ((this._Rank != value))
				{
					this.OnRankChanging(value);
					this.SendPropertyChanging();
					this._Rank = value;
					this.SendPropertyChanged("Rank");
					this.OnRankChanged();
				}
			}
		}
		
		[Column(Storage="_DenseRank", DbType="Int NOT NULL")]
		public int DenseRank
		{
			get
			{
				return this._DenseRank;
			}
			set
			{
				if ((this._DenseRank != value))
				{
					this.OnDenseRankChanging(value);
					this.SendPropertyChanging();
					this._DenseRank = value;
					this.SendPropertyChanged("DenseRank");
					this.OnDenseRankChanged();
				}
			}
		}
		
		[Column(Storage="_NTile", DbType="TinyInt NOT NULL")]
		public byte NTile
		{
			get
			{
				return this._NTile;
			}
			set
			{
				if ((this._NTile != value))
				{
					this.OnNTileChanging(value);
					this.SendPropertyChanging();
					this._NTile = value;
					this.SendPropertyChanged("NTile");
					this.OnNTileChanged();
				}
			}
		}
		
		[Association(Name="Extension_HyperLinks_MOST_POPULAR_EXTENSIONS_BY_HOST", Storage="_Extension", ThisKey="ExtensionID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Extension Extension
		{
			get
			{
				return this._Extension.Entity;
			}
			set
			{
				Extension previousValue = this._Extension.Entity;
				if (((previousValue != value) 
							|| (this._Extension.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Extension.Entity = null;
						previousValue.HyperLinks_MOST_POPULAR_EXTENSIONS_BY_HOST = null;
					}
					this._Extension.Entity = value;
					if ((value != null))
					{
						value.HyperLinks_MOST_POPULAR_EXTENSIONS_BY_HOST = this;
						this._ExtensionID = value.ID;
					}
					else
					{
						this._ExtensionID = default(int);
					}
					this.SendPropertyChanged("Extension");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="rpt.HyperLinks_MOST_POPULAR_EXTENSIONS_BY_SCHEMES")]
	public partial class HyperLinks_MOST_POPULAR_EXTENSIONS_BY_SCHEME : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RowNumber;
		
		private System.Nullable<System.DateTime> _InitiallyDiscovered;
		
		private System.DateTime _LastDiscovered;
		
		private int _ExtensionID;
		
		private int _Count;
		
		private System.Nullable<short> _DaysSinceInitiallyDiscovered;
		
		private short _DaysSinceLastDiscovered;
		
		private System.Nullable<double> _Strength;
		
		private int _Rank;
		
		private int _DenseRank;
		
		private byte _NTile;
		
		private EntityRef<Extension> _Extension;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRowNumberChanging(int value);
    partial void OnRowNumberChanged();
    partial void OnInitiallyDiscoveredChanging(System.Nullable<System.DateTime> value);
    partial void OnInitiallyDiscoveredChanged();
    partial void OnLastDiscoveredChanging(System.DateTime value);
    partial void OnLastDiscoveredChanged();
    partial void OnExtensionIDChanging(int value);
    partial void OnExtensionIDChanged();
    partial void OnCountChanging(int value);
    partial void OnCountChanged();
    partial void OnDaysSinceInitiallyDiscoveredChanging(System.Nullable<short> value);
    partial void OnDaysSinceInitiallyDiscoveredChanged();
    partial void OnDaysSinceLastDiscoveredChanging(short value);
    partial void OnDaysSinceLastDiscoveredChanged();
    partial void OnStrengthChanging(System.Nullable<double> value);
    partial void OnStrengthChanged();
    partial void OnRankChanging(int value);
    partial void OnRankChanged();
    partial void OnDenseRankChanging(int value);
    partial void OnDenseRankChanged();
    partial void OnNTileChanging(byte value);
    partial void OnNTileChanged();
    #endregion
		
		public HyperLinks_MOST_POPULAR_EXTENSIONS_BY_SCHEME()
		{
			this._Extension = default(EntityRef<Extension>);
			OnCreated();
		}
		
		[Column(Storage="_RowNumber", DbType="Int NOT NULL")]
		public int RowNumber
		{
			get
			{
				return this._RowNumber;
			}
			set
			{
				if ((this._RowNumber != value))
				{
					this.OnRowNumberChanging(value);
					this.SendPropertyChanging();
					this._RowNumber = value;
					this.SendPropertyChanged("RowNumber");
					this.OnRowNumberChanged();
				}
			}
		}
		
		[Column(Storage="_InitiallyDiscovered", DbType="DateTime")]
		public System.Nullable<System.DateTime> InitiallyDiscovered
		{
			get
			{
				return this._InitiallyDiscovered;
			}
			set
			{
				if ((this._InitiallyDiscovered != value))
				{
					this.OnInitiallyDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._InitiallyDiscovered = value;
					this.SendPropertyChanged("InitiallyDiscovered");
					this.OnInitiallyDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_LastDiscovered", DbType="DateTime NOT NULL")]
		public System.DateTime LastDiscovered
		{
			get
			{
				return this._LastDiscovered;
			}
			set
			{
				if ((this._LastDiscovered != value))
				{
					this.OnLastDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._LastDiscovered = value;
					this.SendPropertyChanged("LastDiscovered");
					this.OnLastDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_ExtensionID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ExtensionID
		{
			get
			{
				return this._ExtensionID;
			}
			set
			{
				if ((this._ExtensionID != value))
				{
					if (this._Extension.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnExtensionIDChanging(value);
					this.SendPropertyChanging();
					this._ExtensionID = value;
					this.SendPropertyChanged("ExtensionID");
					this.OnExtensionIDChanged();
				}
			}
		}
		
		[Column(Storage="_Count", DbType="Int NOT NULL")]
		public int Count
		{
			get
			{
				return this._Count;
			}
			set
			{
				if ((this._Count != value))
				{
					this.OnCountChanging(value);
					this.SendPropertyChanging();
					this._Count = value;
					this.SendPropertyChanged("Count");
					this.OnCountChanged();
				}
			}
		}
		
		[Column(Storage="_DaysSinceInitiallyDiscovered", DbType="SmallInt")]
		public System.Nullable<short> DaysSinceInitiallyDiscovered
		{
			get
			{
				return this._DaysSinceInitiallyDiscovered;
			}
			set
			{
				if ((this._DaysSinceInitiallyDiscovered != value))
				{
					this.OnDaysSinceInitiallyDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._DaysSinceInitiallyDiscovered = value;
					this.SendPropertyChanged("DaysSinceInitiallyDiscovered");
					this.OnDaysSinceInitiallyDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_DaysSinceLastDiscovered", DbType="SmallInt NOT NULL")]
		public short DaysSinceLastDiscovered
		{
			get
			{
				return this._DaysSinceLastDiscovered;
			}
			set
			{
				if ((this._DaysSinceLastDiscovered != value))
				{
					this.OnDaysSinceLastDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._DaysSinceLastDiscovered = value;
					this.SendPropertyChanged("DaysSinceLastDiscovered");
					this.OnDaysSinceLastDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_Strength", DbType="Float")]
		public System.Nullable<double> Strength
		{
			get
			{
				return this._Strength;
			}
			set
			{
				if ((this._Strength != value))
				{
					this.OnStrengthChanging(value);
					this.SendPropertyChanging();
					this._Strength = value;
					this.SendPropertyChanged("Strength");
					this.OnStrengthChanged();
				}
			}
		}
		
		[Column(Storage="_Rank", DbType="Int NOT NULL")]
		public int Rank
		{
			get
			{
				return this._Rank;
			}
			set
			{
				if ((this._Rank != value))
				{
					this.OnRankChanging(value);
					this.SendPropertyChanging();
					this._Rank = value;
					this.SendPropertyChanged("Rank");
					this.OnRankChanged();
				}
			}
		}
		
		[Column(Storage="_DenseRank", DbType="Int NOT NULL")]
		public int DenseRank
		{
			get
			{
				return this._DenseRank;
			}
			set
			{
				if ((this._DenseRank != value))
				{
					this.OnDenseRankChanging(value);
					this.SendPropertyChanging();
					this._DenseRank = value;
					this.SendPropertyChanged("DenseRank");
					this.OnDenseRankChanged();
				}
			}
		}
		
		[Column(Storage="_NTile", DbType="TinyInt NOT NULL")]
		public byte NTile
		{
			get
			{
				return this._NTile;
			}
			set
			{
				if ((this._NTile != value))
				{
					this.OnNTileChanging(value);
					this.SendPropertyChanging();
					this._NTile = value;
					this.SendPropertyChanged("NTile");
					this.OnNTileChanged();
				}
			}
		}
		
		[Association(Name="Extension_HyperLinks_MOST_POPULAR_EXTENSIONS_BY_SCHEME", Storage="_Extension", ThisKey="ExtensionID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Extension Extension
		{
			get
			{
				return this._Extension.Entity;
			}
			set
			{
				Extension previousValue = this._Extension.Entity;
				if (((previousValue != value) 
							|| (this._Extension.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Extension.Entity = null;
						previousValue.HyperLinks_MOST_POPULAR_EXTENSIONS_BY_SCHEME = null;
					}
					this._Extension.Entity = value;
					if ((value != null))
					{
						value.HyperLinks_MOST_POPULAR_EXTENSIONS_BY_SCHEME = this;
						this._ExtensionID = value.ID;
					}
					else
					{
						this._ExtensionID = default(int);
					}
					this.SendPropertyChanged("Extension");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="rpt.HyperLinks_MOST_POPULAR_HOSTS_BY_ABSOLUTEURIS")]
	public partial class HyperLinks_MOST_POPULAR_HOSTS_BY_ABSOLUTEURI : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RowNumber;
		
		private System.Nullable<System.DateTime> _InitiallyDiscovered;
		
		private System.DateTime _LastDiscovered;
		
		private int _HostID;
		
		private int _Count;
		
		private System.Nullable<short> _DaysSinceInitiallyDiscovered;
		
		private short _DaysSinceLastDiscovered;
		
		private System.Nullable<double> _Strength;
		
		private int _Rank;
		
		private int _DenseRank;
		
		private byte _NTile;
		
		private EntityRef<Host> _Host;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRowNumberChanging(int value);
    partial void OnRowNumberChanged();
    partial void OnInitiallyDiscoveredChanging(System.Nullable<System.DateTime> value);
    partial void OnInitiallyDiscoveredChanged();
    partial void OnLastDiscoveredChanging(System.DateTime value);
    partial void OnLastDiscoveredChanged();
    partial void OnHostIDChanging(int value);
    partial void OnHostIDChanged();
    partial void OnCountChanging(int value);
    partial void OnCountChanged();
    partial void OnDaysSinceInitiallyDiscoveredChanging(System.Nullable<short> value);
    partial void OnDaysSinceInitiallyDiscoveredChanged();
    partial void OnDaysSinceLastDiscoveredChanging(short value);
    partial void OnDaysSinceLastDiscoveredChanged();
    partial void OnStrengthChanging(System.Nullable<double> value);
    partial void OnStrengthChanged();
    partial void OnRankChanging(int value);
    partial void OnRankChanged();
    partial void OnDenseRankChanging(int value);
    partial void OnDenseRankChanged();
    partial void OnNTileChanging(byte value);
    partial void OnNTileChanged();
    #endregion
		
		public HyperLinks_MOST_POPULAR_HOSTS_BY_ABSOLUTEURI()
		{
			this._Host = default(EntityRef<Host>);
			OnCreated();
		}
		
		[Column(Storage="_RowNumber", DbType="Int NOT NULL")]
		public int RowNumber
		{
			get
			{
				return this._RowNumber;
			}
			set
			{
				if ((this._RowNumber != value))
				{
					this.OnRowNumberChanging(value);
					this.SendPropertyChanging();
					this._RowNumber = value;
					this.SendPropertyChanged("RowNumber");
					this.OnRowNumberChanged();
				}
			}
		}
		
		[Column(Storage="_InitiallyDiscovered", DbType="DateTime")]
		public System.Nullable<System.DateTime> InitiallyDiscovered
		{
			get
			{
				return this._InitiallyDiscovered;
			}
			set
			{
				if ((this._InitiallyDiscovered != value))
				{
					this.OnInitiallyDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._InitiallyDiscovered = value;
					this.SendPropertyChanged("InitiallyDiscovered");
					this.OnInitiallyDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_LastDiscovered", DbType="DateTime NOT NULL")]
		public System.DateTime LastDiscovered
		{
			get
			{
				return this._LastDiscovered;
			}
			set
			{
				if ((this._LastDiscovered != value))
				{
					this.OnLastDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._LastDiscovered = value;
					this.SendPropertyChanged("LastDiscovered");
					this.OnLastDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_HostID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int HostID
		{
			get
			{
				return this._HostID;
			}
			set
			{
				if ((this._HostID != value))
				{
					if (this._Host.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnHostIDChanging(value);
					this.SendPropertyChanging();
					this._HostID = value;
					this.SendPropertyChanged("HostID");
					this.OnHostIDChanged();
				}
			}
		}
		
		[Column(Storage="_Count", DbType="Int NOT NULL")]
		public int Count
		{
			get
			{
				return this._Count;
			}
			set
			{
				if ((this._Count != value))
				{
					this.OnCountChanging(value);
					this.SendPropertyChanging();
					this._Count = value;
					this.SendPropertyChanged("Count");
					this.OnCountChanged();
				}
			}
		}
		
		[Column(Storage="_DaysSinceInitiallyDiscovered", DbType="SmallInt")]
		public System.Nullable<short> DaysSinceInitiallyDiscovered
		{
			get
			{
				return this._DaysSinceInitiallyDiscovered;
			}
			set
			{
				if ((this._DaysSinceInitiallyDiscovered != value))
				{
					this.OnDaysSinceInitiallyDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._DaysSinceInitiallyDiscovered = value;
					this.SendPropertyChanged("DaysSinceInitiallyDiscovered");
					this.OnDaysSinceInitiallyDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_DaysSinceLastDiscovered", DbType="SmallInt NOT NULL")]
		public short DaysSinceLastDiscovered
		{
			get
			{
				return this._DaysSinceLastDiscovered;
			}
			set
			{
				if ((this._DaysSinceLastDiscovered != value))
				{
					this.OnDaysSinceLastDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._DaysSinceLastDiscovered = value;
					this.SendPropertyChanged("DaysSinceLastDiscovered");
					this.OnDaysSinceLastDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_Strength", DbType="Float")]
		public System.Nullable<double> Strength
		{
			get
			{
				return this._Strength;
			}
			set
			{
				if ((this._Strength != value))
				{
					this.OnStrengthChanging(value);
					this.SendPropertyChanging();
					this._Strength = value;
					this.SendPropertyChanged("Strength");
					this.OnStrengthChanged();
				}
			}
		}
		
		[Column(Storage="_Rank", DbType="Int NOT NULL")]
		public int Rank
		{
			get
			{
				return this._Rank;
			}
			set
			{
				if ((this._Rank != value))
				{
					this.OnRankChanging(value);
					this.SendPropertyChanging();
					this._Rank = value;
					this.SendPropertyChanged("Rank");
					this.OnRankChanged();
				}
			}
		}
		
		[Column(Storage="_DenseRank", DbType="Int NOT NULL")]
		public int DenseRank
		{
			get
			{
				return this._DenseRank;
			}
			set
			{
				if ((this._DenseRank != value))
				{
					this.OnDenseRankChanging(value);
					this.SendPropertyChanging();
					this._DenseRank = value;
					this.SendPropertyChanged("DenseRank");
					this.OnDenseRankChanged();
				}
			}
		}
		
		[Column(Storage="_NTile", DbType="TinyInt NOT NULL")]
		public byte NTile
		{
			get
			{
				return this._NTile;
			}
			set
			{
				if ((this._NTile != value))
				{
					this.OnNTileChanging(value);
					this.SendPropertyChanging();
					this._NTile = value;
					this.SendPropertyChanged("NTile");
					this.OnNTileChanged();
				}
			}
		}
		
		[Association(Name="Host_HyperLinks_MOST_POPULAR_HOSTS_BY_ABSOLUTEURI", Storage="_Host", ThisKey="HostID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Host Host
		{
			get
			{
				return this._Host.Entity;
			}
			set
			{
				Host previousValue = this._Host.Entity;
				if (((previousValue != value) 
							|| (this._Host.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Host.Entity = null;
						previousValue.HyperLinks_MOST_POPULAR_HOSTS_BY_ABSOLUTEURI = null;
					}
					this._Host.Entity = value;
					if ((value != null))
					{
						value.HyperLinks_MOST_POPULAR_HOSTS_BY_ABSOLUTEURI = this;
						this._HostID = value.ID;
					}
					else
					{
						this._HostID = default(int);
					}
					this.SendPropertyChanged("Host");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="rpt.HyperLinks_MOST_POPULAR_HOSTS_BY_DOMAINS")]
	public partial class HyperLinks_MOST_POPULAR_HOSTS_BY_DOMAIN : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RowNumber;
		
		private System.Nullable<System.DateTime> _InitiallyDiscovered;
		
		private System.DateTime _LastDiscovered;
		
		private int _HostID;
		
		private int _Count;
		
		private System.Nullable<short> _DaysSinceInitiallyDiscovered;
		
		private short _DaysSinceLastDiscovered;
		
		private System.Nullable<double> _Strength;
		
		private int _Rank;
		
		private int _DenseRank;
		
		private byte _NTile;
		
		private EntityRef<Host> _Host;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRowNumberChanging(int value);
    partial void OnRowNumberChanged();
    partial void OnInitiallyDiscoveredChanging(System.Nullable<System.DateTime> value);
    partial void OnInitiallyDiscoveredChanged();
    partial void OnLastDiscoveredChanging(System.DateTime value);
    partial void OnLastDiscoveredChanged();
    partial void OnHostIDChanging(int value);
    partial void OnHostIDChanged();
    partial void OnCountChanging(int value);
    partial void OnCountChanged();
    partial void OnDaysSinceInitiallyDiscoveredChanging(System.Nullable<short> value);
    partial void OnDaysSinceInitiallyDiscoveredChanged();
    partial void OnDaysSinceLastDiscoveredChanging(short value);
    partial void OnDaysSinceLastDiscoveredChanged();
    partial void OnStrengthChanging(System.Nullable<double> value);
    partial void OnStrengthChanged();
    partial void OnRankChanging(int value);
    partial void OnRankChanged();
    partial void OnDenseRankChanging(int value);
    partial void OnDenseRankChanged();
    partial void OnNTileChanging(byte value);
    partial void OnNTileChanged();
    #endregion
		
		public HyperLinks_MOST_POPULAR_HOSTS_BY_DOMAIN()
		{
			this._Host = default(EntityRef<Host>);
			OnCreated();
		}
		
		[Column(Storage="_RowNumber", DbType="Int NOT NULL")]
		public int RowNumber
		{
			get
			{
				return this._RowNumber;
			}
			set
			{
				if ((this._RowNumber != value))
				{
					this.OnRowNumberChanging(value);
					this.SendPropertyChanging();
					this._RowNumber = value;
					this.SendPropertyChanged("RowNumber");
					this.OnRowNumberChanged();
				}
			}
		}
		
		[Column(Storage="_InitiallyDiscovered", DbType="DateTime")]
		public System.Nullable<System.DateTime> InitiallyDiscovered
		{
			get
			{
				return this._InitiallyDiscovered;
			}
			set
			{
				if ((this._InitiallyDiscovered != value))
				{
					this.OnInitiallyDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._InitiallyDiscovered = value;
					this.SendPropertyChanged("InitiallyDiscovered");
					this.OnInitiallyDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_LastDiscovered", DbType="DateTime NOT NULL")]
		public System.DateTime LastDiscovered
		{
			get
			{
				return this._LastDiscovered;
			}
			set
			{
				if ((this._LastDiscovered != value))
				{
					this.OnLastDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._LastDiscovered = value;
					this.SendPropertyChanged("LastDiscovered");
					this.OnLastDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_HostID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int HostID
		{
			get
			{
				return this._HostID;
			}
			set
			{
				if ((this._HostID != value))
				{
					if (this._Host.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnHostIDChanging(value);
					this.SendPropertyChanging();
					this._HostID = value;
					this.SendPropertyChanged("HostID");
					this.OnHostIDChanged();
				}
			}
		}
		
		[Column(Storage="_Count", DbType="Int NOT NULL")]
		public int Count
		{
			get
			{
				return this._Count;
			}
			set
			{
				if ((this._Count != value))
				{
					this.OnCountChanging(value);
					this.SendPropertyChanging();
					this._Count = value;
					this.SendPropertyChanged("Count");
					this.OnCountChanged();
				}
			}
		}
		
		[Column(Storage="_DaysSinceInitiallyDiscovered", DbType="SmallInt")]
		public System.Nullable<short> DaysSinceInitiallyDiscovered
		{
			get
			{
				return this._DaysSinceInitiallyDiscovered;
			}
			set
			{
				if ((this._DaysSinceInitiallyDiscovered != value))
				{
					this.OnDaysSinceInitiallyDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._DaysSinceInitiallyDiscovered = value;
					this.SendPropertyChanged("DaysSinceInitiallyDiscovered");
					this.OnDaysSinceInitiallyDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_DaysSinceLastDiscovered", DbType="SmallInt NOT NULL")]
		public short DaysSinceLastDiscovered
		{
			get
			{
				return this._DaysSinceLastDiscovered;
			}
			set
			{
				if ((this._DaysSinceLastDiscovered != value))
				{
					this.OnDaysSinceLastDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._DaysSinceLastDiscovered = value;
					this.SendPropertyChanged("DaysSinceLastDiscovered");
					this.OnDaysSinceLastDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_Strength", DbType="Float")]
		public System.Nullable<double> Strength
		{
			get
			{
				return this._Strength;
			}
			set
			{
				if ((this._Strength != value))
				{
					this.OnStrengthChanging(value);
					this.SendPropertyChanging();
					this._Strength = value;
					this.SendPropertyChanged("Strength");
					this.OnStrengthChanged();
				}
			}
		}
		
		[Column(Storage="_Rank", DbType="Int NOT NULL")]
		public int Rank
		{
			get
			{
				return this._Rank;
			}
			set
			{
				if ((this._Rank != value))
				{
					this.OnRankChanging(value);
					this.SendPropertyChanging();
					this._Rank = value;
					this.SendPropertyChanged("Rank");
					this.OnRankChanged();
				}
			}
		}
		
		[Column(Storage="_DenseRank", DbType="Int NOT NULL")]
		public int DenseRank
		{
			get
			{
				return this._DenseRank;
			}
			set
			{
				if ((this._DenseRank != value))
				{
					this.OnDenseRankChanging(value);
					this.SendPropertyChanging();
					this._DenseRank = value;
					this.SendPropertyChanged("DenseRank");
					this.OnDenseRankChanged();
				}
			}
		}
		
		[Column(Storage="_NTile", DbType="TinyInt NOT NULL")]
		public byte NTile
		{
			get
			{
				return this._NTile;
			}
			set
			{
				if ((this._NTile != value))
				{
					this.OnNTileChanging(value);
					this.SendPropertyChanging();
					this._NTile = value;
					this.SendPropertyChanged("NTile");
					this.OnNTileChanged();
				}
			}
		}
		
		[Association(Name="Host_HyperLinks_MOST_POPULAR_HOSTS_BY_DOMAIN", Storage="_Host", ThisKey="HostID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Host Host
		{
			get
			{
				return this._Host.Entity;
			}
			set
			{
				Host previousValue = this._Host.Entity;
				if (((previousValue != value) 
							|| (this._Host.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Host.Entity = null;
						previousValue.HyperLinks_MOST_POPULAR_HOSTS_BY_DOMAIN = null;
					}
					this._Host.Entity = value;
					if ((value != null))
					{
						value.HyperLinks_MOST_POPULAR_HOSTS_BY_DOMAIN = this;
						this._HostID = value.ID;
					}
					else
					{
						this._HostID = default(int);
					}
					this.SendPropertyChanged("Host");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="rpt.HyperLinks_MOST_POPULAR_HOSTS_BY_EXTENSIONS")]
	public partial class HyperLinks_MOST_POPULAR_HOSTS_BY_EXTENSION : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RowNumber;
		
		private System.Nullable<System.DateTime> _InitiallyDiscovered;
		
		private System.DateTime _LastDiscovered;
		
		private int _HostID;
		
		private int _Count;
		
		private System.Nullable<short> _DaysSinceInitiallyDiscovered;
		
		private short _DaysSinceLastDiscovered;
		
		private System.Nullable<double> _Strength;
		
		private int _Rank;
		
		private int _DenseRank;
		
		private byte _NTile;
		
		private EntityRef<Host> _Host;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRowNumberChanging(int value);
    partial void OnRowNumberChanged();
    partial void OnInitiallyDiscoveredChanging(System.Nullable<System.DateTime> value);
    partial void OnInitiallyDiscoveredChanged();
    partial void OnLastDiscoveredChanging(System.DateTime value);
    partial void OnLastDiscoveredChanged();
    partial void OnHostIDChanging(int value);
    partial void OnHostIDChanged();
    partial void OnCountChanging(int value);
    partial void OnCountChanged();
    partial void OnDaysSinceInitiallyDiscoveredChanging(System.Nullable<short> value);
    partial void OnDaysSinceInitiallyDiscoveredChanged();
    partial void OnDaysSinceLastDiscoveredChanging(short value);
    partial void OnDaysSinceLastDiscoveredChanged();
    partial void OnStrengthChanging(System.Nullable<double> value);
    partial void OnStrengthChanged();
    partial void OnRankChanging(int value);
    partial void OnRankChanged();
    partial void OnDenseRankChanging(int value);
    partial void OnDenseRankChanged();
    partial void OnNTileChanging(byte value);
    partial void OnNTileChanged();
    #endregion
		
		public HyperLinks_MOST_POPULAR_HOSTS_BY_EXTENSION()
		{
			this._Host = default(EntityRef<Host>);
			OnCreated();
		}
		
		[Column(Storage="_RowNumber", DbType="Int NOT NULL")]
		public int RowNumber
		{
			get
			{
				return this._RowNumber;
			}
			set
			{
				if ((this._RowNumber != value))
				{
					this.OnRowNumberChanging(value);
					this.SendPropertyChanging();
					this._RowNumber = value;
					this.SendPropertyChanged("RowNumber");
					this.OnRowNumberChanged();
				}
			}
		}
		
		[Column(Storage="_InitiallyDiscovered", DbType="DateTime")]
		public System.Nullable<System.DateTime> InitiallyDiscovered
		{
			get
			{
				return this._InitiallyDiscovered;
			}
			set
			{
				if ((this._InitiallyDiscovered != value))
				{
					this.OnInitiallyDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._InitiallyDiscovered = value;
					this.SendPropertyChanged("InitiallyDiscovered");
					this.OnInitiallyDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_LastDiscovered", DbType="DateTime NOT NULL")]
		public System.DateTime LastDiscovered
		{
			get
			{
				return this._LastDiscovered;
			}
			set
			{
				if ((this._LastDiscovered != value))
				{
					this.OnLastDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._LastDiscovered = value;
					this.SendPropertyChanged("LastDiscovered");
					this.OnLastDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_HostID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int HostID
		{
			get
			{
				return this._HostID;
			}
			set
			{
				if ((this._HostID != value))
				{
					if (this._Host.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnHostIDChanging(value);
					this.SendPropertyChanging();
					this._HostID = value;
					this.SendPropertyChanged("HostID");
					this.OnHostIDChanged();
				}
			}
		}
		
		[Column(Storage="_Count", DbType="Int NOT NULL")]
		public int Count
		{
			get
			{
				return this._Count;
			}
			set
			{
				if ((this._Count != value))
				{
					this.OnCountChanging(value);
					this.SendPropertyChanging();
					this._Count = value;
					this.SendPropertyChanged("Count");
					this.OnCountChanged();
				}
			}
		}
		
		[Column(Storage="_DaysSinceInitiallyDiscovered", DbType="SmallInt")]
		public System.Nullable<short> DaysSinceInitiallyDiscovered
		{
			get
			{
				return this._DaysSinceInitiallyDiscovered;
			}
			set
			{
				if ((this._DaysSinceInitiallyDiscovered != value))
				{
					this.OnDaysSinceInitiallyDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._DaysSinceInitiallyDiscovered = value;
					this.SendPropertyChanged("DaysSinceInitiallyDiscovered");
					this.OnDaysSinceInitiallyDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_DaysSinceLastDiscovered", DbType="SmallInt NOT NULL")]
		public short DaysSinceLastDiscovered
		{
			get
			{
				return this._DaysSinceLastDiscovered;
			}
			set
			{
				if ((this._DaysSinceLastDiscovered != value))
				{
					this.OnDaysSinceLastDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._DaysSinceLastDiscovered = value;
					this.SendPropertyChanged("DaysSinceLastDiscovered");
					this.OnDaysSinceLastDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_Strength", DbType="Float")]
		public System.Nullable<double> Strength
		{
			get
			{
				return this._Strength;
			}
			set
			{
				if ((this._Strength != value))
				{
					this.OnStrengthChanging(value);
					this.SendPropertyChanging();
					this._Strength = value;
					this.SendPropertyChanged("Strength");
					this.OnStrengthChanged();
				}
			}
		}
		
		[Column(Storage="_Rank", DbType="Int NOT NULL")]
		public int Rank
		{
			get
			{
				return this._Rank;
			}
			set
			{
				if ((this._Rank != value))
				{
					this.OnRankChanging(value);
					this.SendPropertyChanging();
					this._Rank = value;
					this.SendPropertyChanged("Rank");
					this.OnRankChanged();
				}
			}
		}
		
		[Column(Storage="_DenseRank", DbType="Int NOT NULL")]
		public int DenseRank
		{
			get
			{
				return this._DenseRank;
			}
			set
			{
				if ((this._DenseRank != value))
				{
					this.OnDenseRankChanging(value);
					this.SendPropertyChanging();
					this._DenseRank = value;
					this.SendPropertyChanged("DenseRank");
					this.OnDenseRankChanged();
				}
			}
		}
		
		[Column(Storage="_NTile", DbType="TinyInt NOT NULL")]
		public byte NTile
		{
			get
			{
				return this._NTile;
			}
			set
			{
				if ((this._NTile != value))
				{
					this.OnNTileChanging(value);
					this.SendPropertyChanging();
					this._NTile = value;
					this.SendPropertyChanged("NTile");
					this.OnNTileChanged();
				}
			}
		}
		
		[Association(Name="Host_HyperLinks_MOST_POPULAR_HOSTS_BY_EXTENSION", Storage="_Host", ThisKey="HostID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Host Host
		{
			get
			{
				return this._Host.Entity;
			}
			set
			{
				Host previousValue = this._Host.Entity;
				if (((previousValue != value) 
							|| (this._Host.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Host.Entity = null;
						previousValue.HyperLinks_MOST_POPULAR_HOSTS_BY_EXTENSION = null;
					}
					this._Host.Entity = value;
					if ((value != null))
					{
						value.HyperLinks_MOST_POPULAR_HOSTS_BY_EXTENSION = this;
						this._HostID = value.ID;
					}
					else
					{
						this._HostID = default(int);
					}
					this.SendPropertyChanged("Host");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="rpt.HyperLinks_MOST_POPULAR_HOSTS_BY_HOSTS")]
	public partial class HyperLinks_MOST_POPULAR_HOSTS_BY_HOST : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RowNumber;
		
		private System.Nullable<System.DateTime> _InitiallyDiscovered;
		
		private System.DateTime _LastDiscovered;
		
		private int _HostID;
		
		private int _Count;
		
		private System.Nullable<short> _DaysSinceInitiallyDiscovered;
		
		private short _DaysSinceLastDiscovered;
		
		private System.Nullable<double> _Strength;
		
		private int _Rank;
		
		private int _DenseRank;
		
		private byte _NTile;
		
		private EntityRef<Host> _Host;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRowNumberChanging(int value);
    partial void OnRowNumberChanged();
    partial void OnInitiallyDiscoveredChanging(System.Nullable<System.DateTime> value);
    partial void OnInitiallyDiscoveredChanged();
    partial void OnLastDiscoveredChanging(System.DateTime value);
    partial void OnLastDiscoveredChanged();
    partial void OnHostIDChanging(int value);
    partial void OnHostIDChanged();
    partial void OnCountChanging(int value);
    partial void OnCountChanged();
    partial void OnDaysSinceInitiallyDiscoveredChanging(System.Nullable<short> value);
    partial void OnDaysSinceInitiallyDiscoveredChanged();
    partial void OnDaysSinceLastDiscoveredChanging(short value);
    partial void OnDaysSinceLastDiscoveredChanged();
    partial void OnStrengthChanging(System.Nullable<double> value);
    partial void OnStrengthChanged();
    partial void OnRankChanging(int value);
    partial void OnRankChanged();
    partial void OnDenseRankChanging(int value);
    partial void OnDenseRankChanged();
    partial void OnNTileChanging(byte value);
    partial void OnNTileChanged();
    #endregion
		
		public HyperLinks_MOST_POPULAR_HOSTS_BY_HOST()
		{
			this._Host = default(EntityRef<Host>);
			OnCreated();
		}
		
		[Column(Storage="_RowNumber", DbType="Int NOT NULL")]
		public int RowNumber
		{
			get
			{
				return this._RowNumber;
			}
			set
			{
				if ((this._RowNumber != value))
				{
					this.OnRowNumberChanging(value);
					this.SendPropertyChanging();
					this._RowNumber = value;
					this.SendPropertyChanged("RowNumber");
					this.OnRowNumberChanged();
				}
			}
		}
		
		[Column(Storage="_InitiallyDiscovered", DbType="DateTime")]
		public System.Nullable<System.DateTime> InitiallyDiscovered
		{
			get
			{
				return this._InitiallyDiscovered;
			}
			set
			{
				if ((this._InitiallyDiscovered != value))
				{
					this.OnInitiallyDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._InitiallyDiscovered = value;
					this.SendPropertyChanged("InitiallyDiscovered");
					this.OnInitiallyDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_LastDiscovered", DbType="DateTime NOT NULL")]
		public System.DateTime LastDiscovered
		{
			get
			{
				return this._LastDiscovered;
			}
			set
			{
				if ((this._LastDiscovered != value))
				{
					this.OnLastDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._LastDiscovered = value;
					this.SendPropertyChanged("LastDiscovered");
					this.OnLastDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_HostID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int HostID
		{
			get
			{
				return this._HostID;
			}
			set
			{
				if ((this._HostID != value))
				{
					if (this._Host.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnHostIDChanging(value);
					this.SendPropertyChanging();
					this._HostID = value;
					this.SendPropertyChanged("HostID");
					this.OnHostIDChanged();
				}
			}
		}
		
		[Column(Storage="_Count", DbType="Int NOT NULL")]
		public int Count
		{
			get
			{
				return this._Count;
			}
			set
			{
				if ((this._Count != value))
				{
					this.OnCountChanging(value);
					this.SendPropertyChanging();
					this._Count = value;
					this.SendPropertyChanged("Count");
					this.OnCountChanged();
				}
			}
		}
		
		[Column(Storage="_DaysSinceInitiallyDiscovered", DbType="SmallInt")]
		public System.Nullable<short> DaysSinceInitiallyDiscovered
		{
			get
			{
				return this._DaysSinceInitiallyDiscovered;
			}
			set
			{
				if ((this._DaysSinceInitiallyDiscovered != value))
				{
					this.OnDaysSinceInitiallyDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._DaysSinceInitiallyDiscovered = value;
					this.SendPropertyChanged("DaysSinceInitiallyDiscovered");
					this.OnDaysSinceInitiallyDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_DaysSinceLastDiscovered", DbType="SmallInt NOT NULL")]
		public short DaysSinceLastDiscovered
		{
			get
			{
				return this._DaysSinceLastDiscovered;
			}
			set
			{
				if ((this._DaysSinceLastDiscovered != value))
				{
					this.OnDaysSinceLastDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._DaysSinceLastDiscovered = value;
					this.SendPropertyChanged("DaysSinceLastDiscovered");
					this.OnDaysSinceLastDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_Strength", DbType="Float")]
		public System.Nullable<double> Strength
		{
			get
			{
				return this._Strength;
			}
			set
			{
				if ((this._Strength != value))
				{
					this.OnStrengthChanging(value);
					this.SendPropertyChanging();
					this._Strength = value;
					this.SendPropertyChanged("Strength");
					this.OnStrengthChanged();
				}
			}
		}
		
		[Column(Storage="_Rank", DbType="Int NOT NULL")]
		public int Rank
		{
			get
			{
				return this._Rank;
			}
			set
			{
				if ((this._Rank != value))
				{
					this.OnRankChanging(value);
					this.SendPropertyChanging();
					this._Rank = value;
					this.SendPropertyChanged("Rank");
					this.OnRankChanged();
				}
			}
		}
		
		[Column(Storage="_DenseRank", DbType="Int NOT NULL")]
		public int DenseRank
		{
			get
			{
				return this._DenseRank;
			}
			set
			{
				if ((this._DenseRank != value))
				{
					this.OnDenseRankChanging(value);
					this.SendPropertyChanging();
					this._DenseRank = value;
					this.SendPropertyChanged("DenseRank");
					this.OnDenseRankChanged();
				}
			}
		}
		
		[Column(Storage="_NTile", DbType="TinyInt NOT NULL")]
		public byte NTile
		{
			get
			{
				return this._NTile;
			}
			set
			{
				if ((this._NTile != value))
				{
					this.OnNTileChanging(value);
					this.SendPropertyChanging();
					this._NTile = value;
					this.SendPropertyChanged("NTile");
					this.OnNTileChanged();
				}
			}
		}
		
		[Association(Name="Host_HyperLinks_MOST_POPULAR_HOSTS_BY_HOST", Storage="_Host", ThisKey="HostID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Host Host
		{
			get
			{
				return this._Host.Entity;
			}
			set
			{
				Host previousValue = this._Host.Entity;
				if (((previousValue != value) 
							|| (this._Host.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Host.Entity = null;
						previousValue.HyperLinks_MOST_POPULAR_HOSTS_BY_HOST = null;
					}
					this._Host.Entity = value;
					if ((value != null))
					{
						value.HyperLinks_MOST_POPULAR_HOSTS_BY_HOST = this;
						this._HostID = value.ID;
					}
					else
					{
						this._HostID = default(int);
					}
					this.SendPropertyChanged("Host");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="rpt.HyperLinks_MOST_POPULAR_HOSTS_BY_SCHEMES")]
	public partial class HyperLinks_MOST_POPULAR_HOSTS_BY_SCHEME : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RowNumber;
		
		private System.Nullable<System.DateTime> _InitiallyDiscovered;
		
		private System.DateTime _LastDiscovered;
		
		private int _HostID;
		
		private int _Count;
		
		private System.Nullable<short> _DaysSinceInitiallyDiscovered;
		
		private short _DaysSinceLastDiscovered;
		
		private System.Nullable<double> _Strength;
		
		private int _Rank;
		
		private int _DenseRank;
		
		private byte _NTile;
		
		private EntityRef<Host> _Host;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRowNumberChanging(int value);
    partial void OnRowNumberChanged();
    partial void OnInitiallyDiscoveredChanging(System.Nullable<System.DateTime> value);
    partial void OnInitiallyDiscoveredChanged();
    partial void OnLastDiscoveredChanging(System.DateTime value);
    partial void OnLastDiscoveredChanged();
    partial void OnHostIDChanging(int value);
    partial void OnHostIDChanged();
    partial void OnCountChanging(int value);
    partial void OnCountChanged();
    partial void OnDaysSinceInitiallyDiscoveredChanging(System.Nullable<short> value);
    partial void OnDaysSinceInitiallyDiscoveredChanged();
    partial void OnDaysSinceLastDiscoveredChanging(short value);
    partial void OnDaysSinceLastDiscoveredChanged();
    partial void OnStrengthChanging(System.Nullable<double> value);
    partial void OnStrengthChanged();
    partial void OnRankChanging(int value);
    partial void OnRankChanged();
    partial void OnDenseRankChanging(int value);
    partial void OnDenseRankChanged();
    partial void OnNTileChanging(byte value);
    partial void OnNTileChanged();
    #endregion
		
		public HyperLinks_MOST_POPULAR_HOSTS_BY_SCHEME()
		{
			this._Host = default(EntityRef<Host>);
			OnCreated();
		}
		
		[Column(Storage="_RowNumber", DbType="Int NOT NULL")]
		public int RowNumber
		{
			get
			{
				return this._RowNumber;
			}
			set
			{
				if ((this._RowNumber != value))
				{
					this.OnRowNumberChanging(value);
					this.SendPropertyChanging();
					this._RowNumber = value;
					this.SendPropertyChanged("RowNumber");
					this.OnRowNumberChanged();
				}
			}
		}
		
		[Column(Storage="_InitiallyDiscovered", DbType="DateTime")]
		public System.Nullable<System.DateTime> InitiallyDiscovered
		{
			get
			{
				return this._InitiallyDiscovered;
			}
			set
			{
				if ((this._InitiallyDiscovered != value))
				{
					this.OnInitiallyDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._InitiallyDiscovered = value;
					this.SendPropertyChanged("InitiallyDiscovered");
					this.OnInitiallyDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_LastDiscovered", DbType="DateTime NOT NULL")]
		public System.DateTime LastDiscovered
		{
			get
			{
				return this._LastDiscovered;
			}
			set
			{
				if ((this._LastDiscovered != value))
				{
					this.OnLastDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._LastDiscovered = value;
					this.SendPropertyChanged("LastDiscovered");
					this.OnLastDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_HostID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int HostID
		{
			get
			{
				return this._HostID;
			}
			set
			{
				if ((this._HostID != value))
				{
					if (this._Host.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnHostIDChanging(value);
					this.SendPropertyChanging();
					this._HostID = value;
					this.SendPropertyChanged("HostID");
					this.OnHostIDChanged();
				}
			}
		}
		
		[Column(Storage="_Count", DbType="Int NOT NULL")]
		public int Count
		{
			get
			{
				return this._Count;
			}
			set
			{
				if ((this._Count != value))
				{
					this.OnCountChanging(value);
					this.SendPropertyChanging();
					this._Count = value;
					this.SendPropertyChanged("Count");
					this.OnCountChanged();
				}
			}
		}
		
		[Column(Storage="_DaysSinceInitiallyDiscovered", DbType="SmallInt")]
		public System.Nullable<short> DaysSinceInitiallyDiscovered
		{
			get
			{
				return this._DaysSinceInitiallyDiscovered;
			}
			set
			{
				if ((this._DaysSinceInitiallyDiscovered != value))
				{
					this.OnDaysSinceInitiallyDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._DaysSinceInitiallyDiscovered = value;
					this.SendPropertyChanged("DaysSinceInitiallyDiscovered");
					this.OnDaysSinceInitiallyDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_DaysSinceLastDiscovered", DbType="SmallInt NOT NULL")]
		public short DaysSinceLastDiscovered
		{
			get
			{
				return this._DaysSinceLastDiscovered;
			}
			set
			{
				if ((this._DaysSinceLastDiscovered != value))
				{
					this.OnDaysSinceLastDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._DaysSinceLastDiscovered = value;
					this.SendPropertyChanged("DaysSinceLastDiscovered");
					this.OnDaysSinceLastDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_Strength", DbType="Float")]
		public System.Nullable<double> Strength
		{
			get
			{
				return this._Strength;
			}
			set
			{
				if ((this._Strength != value))
				{
					this.OnStrengthChanging(value);
					this.SendPropertyChanging();
					this._Strength = value;
					this.SendPropertyChanged("Strength");
					this.OnStrengthChanged();
				}
			}
		}
		
		[Column(Storage="_Rank", DbType="Int NOT NULL")]
		public int Rank
		{
			get
			{
				return this._Rank;
			}
			set
			{
				if ((this._Rank != value))
				{
					this.OnRankChanging(value);
					this.SendPropertyChanging();
					this._Rank = value;
					this.SendPropertyChanged("Rank");
					this.OnRankChanged();
				}
			}
		}
		
		[Column(Storage="_DenseRank", DbType="Int NOT NULL")]
		public int DenseRank
		{
			get
			{
				return this._DenseRank;
			}
			set
			{
				if ((this._DenseRank != value))
				{
					this.OnDenseRankChanging(value);
					this.SendPropertyChanging();
					this._DenseRank = value;
					this.SendPropertyChanged("DenseRank");
					this.OnDenseRankChanged();
				}
			}
		}
		
		[Column(Storage="_NTile", DbType="TinyInt NOT NULL")]
		public byte NTile
		{
			get
			{
				return this._NTile;
			}
			set
			{
				if ((this._NTile != value))
				{
					this.OnNTileChanging(value);
					this.SendPropertyChanging();
					this._NTile = value;
					this.SendPropertyChanged("NTile");
					this.OnNTileChanged();
				}
			}
		}
		
		[Association(Name="Host_HyperLinks_MOST_POPULAR_HOSTS_BY_SCHEME", Storage="_Host", ThisKey="HostID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Host Host
		{
			get
			{
				return this._Host.Entity;
			}
			set
			{
				Host previousValue = this._Host.Entity;
				if (((previousValue != value) 
							|| (this._Host.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Host.Entity = null;
						previousValue.HyperLinks_MOST_POPULAR_HOSTS_BY_SCHEME = null;
					}
					this._Host.Entity = value;
					if ((value != null))
					{
						value.HyperLinks_MOST_POPULAR_HOSTS_BY_SCHEME = this;
						this._HostID = value.ID;
					}
					else
					{
						this._HostID = default(int);
					}
					this.SendPropertyChanged("Host");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="rpt.HyperLinks_MOST_POPULAR_SCHEMES_BY_ABSOLUTEURIS")]
	public partial class HyperLinks_MOST_POPULAR_SCHEMES_BY_ABSOLUTEURI : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RowNumber;
		
		private System.Nullable<System.DateTime> _InitiallyDiscovered;
		
		private System.DateTime _LastDiscovered;
		
		private int _SchemeID;
		
		private int _Count;
		
		private System.Nullable<short> _DaysSinceInitiallyDiscovered;
		
		private short _DaysSinceLastDiscovered;
		
		private System.Nullable<double> _Strength;
		
		private int _Rank;
		
		private int _DenseRank;
		
		private short _NTile;
		
		private EntityRef<Scheme> _Scheme;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRowNumberChanging(int value);
    partial void OnRowNumberChanged();
    partial void OnInitiallyDiscoveredChanging(System.Nullable<System.DateTime> value);
    partial void OnInitiallyDiscoveredChanged();
    partial void OnLastDiscoveredChanging(System.DateTime value);
    partial void OnLastDiscoveredChanged();
    partial void OnSchemeIDChanging(int value);
    partial void OnSchemeIDChanged();
    partial void OnCountChanging(int value);
    partial void OnCountChanged();
    partial void OnDaysSinceInitiallyDiscoveredChanging(System.Nullable<short> value);
    partial void OnDaysSinceInitiallyDiscoveredChanged();
    partial void OnDaysSinceLastDiscoveredChanging(short value);
    partial void OnDaysSinceLastDiscoveredChanged();
    partial void OnStrengthChanging(System.Nullable<double> value);
    partial void OnStrengthChanged();
    partial void OnRankChanging(int value);
    partial void OnRankChanged();
    partial void OnDenseRankChanging(int value);
    partial void OnDenseRankChanged();
    partial void OnNTileChanging(short value);
    partial void OnNTileChanged();
    #endregion
		
		public HyperLinks_MOST_POPULAR_SCHEMES_BY_ABSOLUTEURI()
		{
			this._Scheme = default(EntityRef<Scheme>);
			OnCreated();
		}
		
		[Column(Storage="_RowNumber", DbType="Int NOT NULL")]
		public int RowNumber
		{
			get
			{
				return this._RowNumber;
			}
			set
			{
				if ((this._RowNumber != value))
				{
					this.OnRowNumberChanging(value);
					this.SendPropertyChanging();
					this._RowNumber = value;
					this.SendPropertyChanged("RowNumber");
					this.OnRowNumberChanged();
				}
			}
		}
		
		[Column(Storage="_InitiallyDiscovered", DbType="DateTime")]
		public System.Nullable<System.DateTime> InitiallyDiscovered
		{
			get
			{
				return this._InitiallyDiscovered;
			}
			set
			{
				if ((this._InitiallyDiscovered != value))
				{
					this.OnInitiallyDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._InitiallyDiscovered = value;
					this.SendPropertyChanged("InitiallyDiscovered");
					this.OnInitiallyDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_LastDiscovered", DbType="DateTime NOT NULL")]
		public System.DateTime LastDiscovered
		{
			get
			{
				return this._LastDiscovered;
			}
			set
			{
				if ((this._LastDiscovered != value))
				{
					this.OnLastDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._LastDiscovered = value;
					this.SendPropertyChanged("LastDiscovered");
					this.OnLastDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_SchemeID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int SchemeID
		{
			get
			{
				return this._SchemeID;
			}
			set
			{
				if ((this._SchemeID != value))
				{
					if (this._Scheme.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSchemeIDChanging(value);
					this.SendPropertyChanging();
					this._SchemeID = value;
					this.SendPropertyChanged("SchemeID");
					this.OnSchemeIDChanged();
				}
			}
		}
		
		[Column(Storage="_Count", DbType="Int NOT NULL")]
		public int Count
		{
			get
			{
				return this._Count;
			}
			set
			{
				if ((this._Count != value))
				{
					this.OnCountChanging(value);
					this.SendPropertyChanging();
					this._Count = value;
					this.SendPropertyChanged("Count");
					this.OnCountChanged();
				}
			}
		}
		
		[Column(Storage="_DaysSinceInitiallyDiscovered", DbType="SmallInt")]
		public System.Nullable<short> DaysSinceInitiallyDiscovered
		{
			get
			{
				return this._DaysSinceInitiallyDiscovered;
			}
			set
			{
				if ((this._DaysSinceInitiallyDiscovered != value))
				{
					this.OnDaysSinceInitiallyDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._DaysSinceInitiallyDiscovered = value;
					this.SendPropertyChanged("DaysSinceInitiallyDiscovered");
					this.OnDaysSinceInitiallyDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_DaysSinceLastDiscovered", DbType="SmallInt NOT NULL")]
		public short DaysSinceLastDiscovered
		{
			get
			{
				return this._DaysSinceLastDiscovered;
			}
			set
			{
				if ((this._DaysSinceLastDiscovered != value))
				{
					this.OnDaysSinceLastDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._DaysSinceLastDiscovered = value;
					this.SendPropertyChanged("DaysSinceLastDiscovered");
					this.OnDaysSinceLastDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_Strength", DbType="Float")]
		public System.Nullable<double> Strength
		{
			get
			{
				return this._Strength;
			}
			set
			{
				if ((this._Strength != value))
				{
					this.OnStrengthChanging(value);
					this.SendPropertyChanging();
					this._Strength = value;
					this.SendPropertyChanged("Strength");
					this.OnStrengthChanged();
				}
			}
		}
		
		[Column(Storage="_Rank", DbType="Int NOT NULL")]
		public int Rank
		{
			get
			{
				return this._Rank;
			}
			set
			{
				if ((this._Rank != value))
				{
					this.OnRankChanging(value);
					this.SendPropertyChanging();
					this._Rank = value;
					this.SendPropertyChanged("Rank");
					this.OnRankChanged();
				}
			}
		}
		
		[Column(Storage="_DenseRank", DbType="Int NOT NULL")]
		public int DenseRank
		{
			get
			{
				return this._DenseRank;
			}
			set
			{
				if ((this._DenseRank != value))
				{
					this.OnDenseRankChanging(value);
					this.SendPropertyChanging();
					this._DenseRank = value;
					this.SendPropertyChanged("DenseRank");
					this.OnDenseRankChanged();
				}
			}
		}
		
		[Column(Storage="_NTile", DbType="SmallInt NOT NULL")]
		public short NTile
		{
			get
			{
				return this._NTile;
			}
			set
			{
				if ((this._NTile != value))
				{
					this.OnNTileChanging(value);
					this.SendPropertyChanging();
					this._NTile = value;
					this.SendPropertyChanged("NTile");
					this.OnNTileChanged();
				}
			}
		}
		
		[Association(Name="Scheme_HyperLinks_MOST_POPULAR_SCHEMES_BY_ABSOLUTEURI", Storage="_Scheme", ThisKey="SchemeID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Scheme Scheme
		{
			get
			{
				return this._Scheme.Entity;
			}
			set
			{
				Scheme previousValue = this._Scheme.Entity;
				if (((previousValue != value) 
							|| (this._Scheme.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Scheme.Entity = null;
						previousValue.HyperLinks_MOST_POPULAR_SCHEMES_BY_ABSOLUTEURI = null;
					}
					this._Scheme.Entity = value;
					if ((value != null))
					{
						value.HyperLinks_MOST_POPULAR_SCHEMES_BY_ABSOLUTEURI = this;
						this._SchemeID = value.ID;
					}
					else
					{
						this._SchemeID = default(int);
					}
					this.SendPropertyChanged("Scheme");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="rpt.HyperLinks_MOST_POPULAR_SCHEMES_BY_DOMAINS")]
	public partial class HyperLinks_MOST_POPULAR_SCHEMES_BY_DOMAIN : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RowNumber;
		
		private System.Nullable<System.DateTime> _InitiallyDiscovered;
		
		private System.DateTime _LastDiscovered;
		
		private int _SchemeID;
		
		private int _Count;
		
		private System.Nullable<short> _DaysSinceInitiallyDiscovered;
		
		private short _DaysSinceLastDiscovered;
		
		private System.Nullable<double> _Strength;
		
		private int _Rank;
		
		private int _DenseRank;
		
		private short _NTile;
		
		private EntityRef<Scheme> _Scheme;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRowNumberChanging(int value);
    partial void OnRowNumberChanged();
    partial void OnInitiallyDiscoveredChanging(System.Nullable<System.DateTime> value);
    partial void OnInitiallyDiscoveredChanged();
    partial void OnLastDiscoveredChanging(System.DateTime value);
    partial void OnLastDiscoveredChanged();
    partial void OnSchemeIDChanging(int value);
    partial void OnSchemeIDChanged();
    partial void OnCountChanging(int value);
    partial void OnCountChanged();
    partial void OnDaysSinceInitiallyDiscoveredChanging(System.Nullable<short> value);
    partial void OnDaysSinceInitiallyDiscoveredChanged();
    partial void OnDaysSinceLastDiscoveredChanging(short value);
    partial void OnDaysSinceLastDiscoveredChanged();
    partial void OnStrengthChanging(System.Nullable<double> value);
    partial void OnStrengthChanged();
    partial void OnRankChanging(int value);
    partial void OnRankChanged();
    partial void OnDenseRankChanging(int value);
    partial void OnDenseRankChanged();
    partial void OnNTileChanging(short value);
    partial void OnNTileChanged();
    #endregion
		
		public HyperLinks_MOST_POPULAR_SCHEMES_BY_DOMAIN()
		{
			this._Scheme = default(EntityRef<Scheme>);
			OnCreated();
		}
		
		[Column(Storage="_RowNumber", DbType="Int NOT NULL")]
		public int RowNumber
		{
			get
			{
				return this._RowNumber;
			}
			set
			{
				if ((this._RowNumber != value))
				{
					this.OnRowNumberChanging(value);
					this.SendPropertyChanging();
					this._RowNumber = value;
					this.SendPropertyChanged("RowNumber");
					this.OnRowNumberChanged();
				}
			}
		}
		
		[Column(Storage="_InitiallyDiscovered", DbType="DateTime")]
		public System.Nullable<System.DateTime> InitiallyDiscovered
		{
			get
			{
				return this._InitiallyDiscovered;
			}
			set
			{
				if ((this._InitiallyDiscovered != value))
				{
					this.OnInitiallyDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._InitiallyDiscovered = value;
					this.SendPropertyChanged("InitiallyDiscovered");
					this.OnInitiallyDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_LastDiscovered", DbType="DateTime NOT NULL")]
		public System.DateTime LastDiscovered
		{
			get
			{
				return this._LastDiscovered;
			}
			set
			{
				if ((this._LastDiscovered != value))
				{
					this.OnLastDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._LastDiscovered = value;
					this.SendPropertyChanged("LastDiscovered");
					this.OnLastDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_SchemeID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int SchemeID
		{
			get
			{
				return this._SchemeID;
			}
			set
			{
				if ((this._SchemeID != value))
				{
					if (this._Scheme.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSchemeIDChanging(value);
					this.SendPropertyChanging();
					this._SchemeID = value;
					this.SendPropertyChanged("SchemeID");
					this.OnSchemeIDChanged();
				}
			}
		}
		
		[Column(Storage="_Count", DbType="Int NOT NULL")]
		public int Count
		{
			get
			{
				return this._Count;
			}
			set
			{
				if ((this._Count != value))
				{
					this.OnCountChanging(value);
					this.SendPropertyChanging();
					this._Count = value;
					this.SendPropertyChanged("Count");
					this.OnCountChanged();
				}
			}
		}
		
		[Column(Storage="_DaysSinceInitiallyDiscovered", DbType="SmallInt")]
		public System.Nullable<short> DaysSinceInitiallyDiscovered
		{
			get
			{
				return this._DaysSinceInitiallyDiscovered;
			}
			set
			{
				if ((this._DaysSinceInitiallyDiscovered != value))
				{
					this.OnDaysSinceInitiallyDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._DaysSinceInitiallyDiscovered = value;
					this.SendPropertyChanged("DaysSinceInitiallyDiscovered");
					this.OnDaysSinceInitiallyDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_DaysSinceLastDiscovered", DbType="SmallInt NOT NULL")]
		public short DaysSinceLastDiscovered
		{
			get
			{
				return this._DaysSinceLastDiscovered;
			}
			set
			{
				if ((this._DaysSinceLastDiscovered != value))
				{
					this.OnDaysSinceLastDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._DaysSinceLastDiscovered = value;
					this.SendPropertyChanged("DaysSinceLastDiscovered");
					this.OnDaysSinceLastDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_Strength", DbType="Float")]
		public System.Nullable<double> Strength
		{
			get
			{
				return this._Strength;
			}
			set
			{
				if ((this._Strength != value))
				{
					this.OnStrengthChanging(value);
					this.SendPropertyChanging();
					this._Strength = value;
					this.SendPropertyChanged("Strength");
					this.OnStrengthChanged();
				}
			}
		}
		
		[Column(Storage="_Rank", DbType="Int NOT NULL")]
		public int Rank
		{
			get
			{
				return this._Rank;
			}
			set
			{
				if ((this._Rank != value))
				{
					this.OnRankChanging(value);
					this.SendPropertyChanging();
					this._Rank = value;
					this.SendPropertyChanged("Rank");
					this.OnRankChanged();
				}
			}
		}
		
		[Column(Storage="_DenseRank", DbType="Int NOT NULL")]
		public int DenseRank
		{
			get
			{
				return this._DenseRank;
			}
			set
			{
				if ((this._DenseRank != value))
				{
					this.OnDenseRankChanging(value);
					this.SendPropertyChanging();
					this._DenseRank = value;
					this.SendPropertyChanged("DenseRank");
					this.OnDenseRankChanged();
				}
			}
		}
		
		[Column(Storage="_NTile", DbType="SmallInt NOT NULL")]
		public short NTile
		{
			get
			{
				return this._NTile;
			}
			set
			{
				if ((this._NTile != value))
				{
					this.OnNTileChanging(value);
					this.SendPropertyChanging();
					this._NTile = value;
					this.SendPropertyChanged("NTile");
					this.OnNTileChanged();
				}
			}
		}
		
		[Association(Name="Scheme_HyperLinks_MOST_POPULAR_SCHEMES_BY_DOMAIN", Storage="_Scheme", ThisKey="SchemeID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Scheme Scheme
		{
			get
			{
				return this._Scheme.Entity;
			}
			set
			{
				Scheme previousValue = this._Scheme.Entity;
				if (((previousValue != value) 
							|| (this._Scheme.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Scheme.Entity = null;
						previousValue.HyperLinks_MOST_POPULAR_SCHEMES_BY_DOMAIN = null;
					}
					this._Scheme.Entity = value;
					if ((value != null))
					{
						value.HyperLinks_MOST_POPULAR_SCHEMES_BY_DOMAIN = this;
						this._SchemeID = value.ID;
					}
					else
					{
						this._SchemeID = default(int);
					}
					this.SendPropertyChanged("Scheme");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="rpt.HyperLinks_MOST_POPULAR_SCHEMES_BY_EXTENSIONS")]
	public partial class HyperLinks_MOST_POPULAR_SCHEMES_BY_EXTENSION : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RowNumber;
		
		private System.Nullable<System.DateTime> _InitiallyDiscovered;
		
		private System.DateTime _LastDiscovered;
		
		private int _SchemeID;
		
		private int _Count;
		
		private System.Nullable<short> _DaysSinceInitiallyDiscovered;
		
		private short _DaysSinceLastDiscovered;
		
		private System.Nullable<double> _Strength;
		
		private int _Rank;
		
		private int _DenseRank;
		
		private short _NTile;
		
		private EntityRef<Scheme> _Scheme;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRowNumberChanging(int value);
    partial void OnRowNumberChanged();
    partial void OnInitiallyDiscoveredChanging(System.Nullable<System.DateTime> value);
    partial void OnInitiallyDiscoveredChanged();
    partial void OnLastDiscoveredChanging(System.DateTime value);
    partial void OnLastDiscoveredChanged();
    partial void OnSchemeIDChanging(int value);
    partial void OnSchemeIDChanged();
    partial void OnCountChanging(int value);
    partial void OnCountChanged();
    partial void OnDaysSinceInitiallyDiscoveredChanging(System.Nullable<short> value);
    partial void OnDaysSinceInitiallyDiscoveredChanged();
    partial void OnDaysSinceLastDiscoveredChanging(short value);
    partial void OnDaysSinceLastDiscoveredChanged();
    partial void OnStrengthChanging(System.Nullable<double> value);
    partial void OnStrengthChanged();
    partial void OnRankChanging(int value);
    partial void OnRankChanged();
    partial void OnDenseRankChanging(int value);
    partial void OnDenseRankChanged();
    partial void OnNTileChanging(short value);
    partial void OnNTileChanged();
    #endregion
		
		public HyperLinks_MOST_POPULAR_SCHEMES_BY_EXTENSION()
		{
			this._Scheme = default(EntityRef<Scheme>);
			OnCreated();
		}
		
		[Column(Storage="_RowNumber", DbType="Int NOT NULL")]
		public int RowNumber
		{
			get
			{
				return this._RowNumber;
			}
			set
			{
				if ((this._RowNumber != value))
				{
					this.OnRowNumberChanging(value);
					this.SendPropertyChanging();
					this._RowNumber = value;
					this.SendPropertyChanged("RowNumber");
					this.OnRowNumberChanged();
				}
			}
		}
		
		[Column(Storage="_InitiallyDiscovered", DbType="DateTime")]
		public System.Nullable<System.DateTime> InitiallyDiscovered
		{
			get
			{
				return this._InitiallyDiscovered;
			}
			set
			{
				if ((this._InitiallyDiscovered != value))
				{
					this.OnInitiallyDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._InitiallyDiscovered = value;
					this.SendPropertyChanged("InitiallyDiscovered");
					this.OnInitiallyDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_LastDiscovered", DbType="DateTime NOT NULL")]
		public System.DateTime LastDiscovered
		{
			get
			{
				return this._LastDiscovered;
			}
			set
			{
				if ((this._LastDiscovered != value))
				{
					this.OnLastDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._LastDiscovered = value;
					this.SendPropertyChanged("LastDiscovered");
					this.OnLastDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_SchemeID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int SchemeID
		{
			get
			{
				return this._SchemeID;
			}
			set
			{
				if ((this._SchemeID != value))
				{
					if (this._Scheme.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSchemeIDChanging(value);
					this.SendPropertyChanging();
					this._SchemeID = value;
					this.SendPropertyChanged("SchemeID");
					this.OnSchemeIDChanged();
				}
			}
		}
		
		[Column(Storage="_Count", DbType="Int NOT NULL")]
		public int Count
		{
			get
			{
				return this._Count;
			}
			set
			{
				if ((this._Count != value))
				{
					this.OnCountChanging(value);
					this.SendPropertyChanging();
					this._Count = value;
					this.SendPropertyChanged("Count");
					this.OnCountChanged();
				}
			}
		}
		
		[Column(Storage="_DaysSinceInitiallyDiscovered", DbType="SmallInt")]
		public System.Nullable<short> DaysSinceInitiallyDiscovered
		{
			get
			{
				return this._DaysSinceInitiallyDiscovered;
			}
			set
			{
				if ((this._DaysSinceInitiallyDiscovered != value))
				{
					this.OnDaysSinceInitiallyDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._DaysSinceInitiallyDiscovered = value;
					this.SendPropertyChanged("DaysSinceInitiallyDiscovered");
					this.OnDaysSinceInitiallyDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_DaysSinceLastDiscovered", DbType="SmallInt NOT NULL")]
		public short DaysSinceLastDiscovered
		{
			get
			{
				return this._DaysSinceLastDiscovered;
			}
			set
			{
				if ((this._DaysSinceLastDiscovered != value))
				{
					this.OnDaysSinceLastDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._DaysSinceLastDiscovered = value;
					this.SendPropertyChanged("DaysSinceLastDiscovered");
					this.OnDaysSinceLastDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_Strength", DbType="Float")]
		public System.Nullable<double> Strength
		{
			get
			{
				return this._Strength;
			}
			set
			{
				if ((this._Strength != value))
				{
					this.OnStrengthChanging(value);
					this.SendPropertyChanging();
					this._Strength = value;
					this.SendPropertyChanged("Strength");
					this.OnStrengthChanged();
				}
			}
		}
		
		[Column(Storage="_Rank", DbType="Int NOT NULL")]
		public int Rank
		{
			get
			{
				return this._Rank;
			}
			set
			{
				if ((this._Rank != value))
				{
					this.OnRankChanging(value);
					this.SendPropertyChanging();
					this._Rank = value;
					this.SendPropertyChanged("Rank");
					this.OnRankChanged();
				}
			}
		}
		
		[Column(Storage="_DenseRank", DbType="Int NOT NULL")]
		public int DenseRank
		{
			get
			{
				return this._DenseRank;
			}
			set
			{
				if ((this._DenseRank != value))
				{
					this.OnDenseRankChanging(value);
					this.SendPropertyChanging();
					this._DenseRank = value;
					this.SendPropertyChanged("DenseRank");
					this.OnDenseRankChanged();
				}
			}
		}
		
		[Column(Storage="_NTile", DbType="SmallInt NOT NULL")]
		public short NTile
		{
			get
			{
				return this._NTile;
			}
			set
			{
				if ((this._NTile != value))
				{
					this.OnNTileChanging(value);
					this.SendPropertyChanging();
					this._NTile = value;
					this.SendPropertyChanged("NTile");
					this.OnNTileChanged();
				}
			}
		}
		
		[Association(Name="Scheme_HyperLinks_MOST_POPULAR_SCHEMES_BY_EXTENSION", Storage="_Scheme", ThisKey="SchemeID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Scheme Scheme
		{
			get
			{
				return this._Scheme.Entity;
			}
			set
			{
				Scheme previousValue = this._Scheme.Entity;
				if (((previousValue != value) 
							|| (this._Scheme.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Scheme.Entity = null;
						previousValue.HyperLinks_MOST_POPULAR_SCHEMES_BY_EXTENSION = null;
					}
					this._Scheme.Entity = value;
					if ((value != null))
					{
						value.HyperLinks_MOST_POPULAR_SCHEMES_BY_EXTENSION = this;
						this._SchemeID = value.ID;
					}
					else
					{
						this._SchemeID = default(int);
					}
					this.SendPropertyChanged("Scheme");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="rpt.HyperLinks_MOST_POPULAR_SCHEMES_BY_HOSTS")]
	public partial class HyperLinks_MOST_POPULAR_SCHEMES_BY_HOST : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RowNumber;
		
		private System.Nullable<System.DateTime> _InitiallyDiscovered;
		
		private System.DateTime _LastDiscovered;
		
		private int _SchemeID;
		
		private int _Count;
		
		private System.Nullable<short> _DaysSinceInitiallyDiscovered;
		
		private short _DaysSinceLastDiscovered;
		
		private System.Nullable<double> _Strength;
		
		private int _Rank;
		
		private int _DenseRank;
		
		private short _NTile;
		
		private EntityRef<Scheme> _Scheme;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRowNumberChanging(int value);
    partial void OnRowNumberChanged();
    partial void OnInitiallyDiscoveredChanging(System.Nullable<System.DateTime> value);
    partial void OnInitiallyDiscoveredChanged();
    partial void OnLastDiscoveredChanging(System.DateTime value);
    partial void OnLastDiscoveredChanged();
    partial void OnSchemeIDChanging(int value);
    partial void OnSchemeIDChanged();
    partial void OnCountChanging(int value);
    partial void OnCountChanged();
    partial void OnDaysSinceInitiallyDiscoveredChanging(System.Nullable<short> value);
    partial void OnDaysSinceInitiallyDiscoveredChanged();
    partial void OnDaysSinceLastDiscoveredChanging(short value);
    partial void OnDaysSinceLastDiscoveredChanged();
    partial void OnStrengthChanging(System.Nullable<double> value);
    partial void OnStrengthChanged();
    partial void OnRankChanging(int value);
    partial void OnRankChanged();
    partial void OnDenseRankChanging(int value);
    partial void OnDenseRankChanged();
    partial void OnNTileChanging(short value);
    partial void OnNTileChanged();
    #endregion
		
		public HyperLinks_MOST_POPULAR_SCHEMES_BY_HOST()
		{
			this._Scheme = default(EntityRef<Scheme>);
			OnCreated();
		}
		
		[Column(Storage="_RowNumber", DbType="Int NOT NULL")]
		public int RowNumber
		{
			get
			{
				return this._RowNumber;
			}
			set
			{
				if ((this._RowNumber != value))
				{
					this.OnRowNumberChanging(value);
					this.SendPropertyChanging();
					this._RowNumber = value;
					this.SendPropertyChanged("RowNumber");
					this.OnRowNumberChanged();
				}
			}
		}
		
		[Column(Storage="_InitiallyDiscovered", DbType="DateTime")]
		public System.Nullable<System.DateTime> InitiallyDiscovered
		{
			get
			{
				return this._InitiallyDiscovered;
			}
			set
			{
				if ((this._InitiallyDiscovered != value))
				{
					this.OnInitiallyDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._InitiallyDiscovered = value;
					this.SendPropertyChanged("InitiallyDiscovered");
					this.OnInitiallyDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_LastDiscovered", DbType="DateTime NOT NULL")]
		public System.DateTime LastDiscovered
		{
			get
			{
				return this._LastDiscovered;
			}
			set
			{
				if ((this._LastDiscovered != value))
				{
					this.OnLastDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._LastDiscovered = value;
					this.SendPropertyChanged("LastDiscovered");
					this.OnLastDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_SchemeID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int SchemeID
		{
			get
			{
				return this._SchemeID;
			}
			set
			{
				if ((this._SchemeID != value))
				{
					if (this._Scheme.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSchemeIDChanging(value);
					this.SendPropertyChanging();
					this._SchemeID = value;
					this.SendPropertyChanged("SchemeID");
					this.OnSchemeIDChanged();
				}
			}
		}
		
		[Column(Storage="_Count", DbType="Int NOT NULL")]
		public int Count
		{
			get
			{
				return this._Count;
			}
			set
			{
				if ((this._Count != value))
				{
					this.OnCountChanging(value);
					this.SendPropertyChanging();
					this._Count = value;
					this.SendPropertyChanged("Count");
					this.OnCountChanged();
				}
			}
		}
		
		[Column(Storage="_DaysSinceInitiallyDiscovered", DbType="SmallInt")]
		public System.Nullable<short> DaysSinceInitiallyDiscovered
		{
			get
			{
				return this._DaysSinceInitiallyDiscovered;
			}
			set
			{
				if ((this._DaysSinceInitiallyDiscovered != value))
				{
					this.OnDaysSinceInitiallyDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._DaysSinceInitiallyDiscovered = value;
					this.SendPropertyChanged("DaysSinceInitiallyDiscovered");
					this.OnDaysSinceInitiallyDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_DaysSinceLastDiscovered", DbType="SmallInt NOT NULL")]
		public short DaysSinceLastDiscovered
		{
			get
			{
				return this._DaysSinceLastDiscovered;
			}
			set
			{
				if ((this._DaysSinceLastDiscovered != value))
				{
					this.OnDaysSinceLastDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._DaysSinceLastDiscovered = value;
					this.SendPropertyChanged("DaysSinceLastDiscovered");
					this.OnDaysSinceLastDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_Strength", DbType="Float")]
		public System.Nullable<double> Strength
		{
			get
			{
				return this._Strength;
			}
			set
			{
				if ((this._Strength != value))
				{
					this.OnStrengthChanging(value);
					this.SendPropertyChanging();
					this._Strength = value;
					this.SendPropertyChanged("Strength");
					this.OnStrengthChanged();
				}
			}
		}
		
		[Column(Storage="_Rank", DbType="Int NOT NULL")]
		public int Rank
		{
			get
			{
				return this._Rank;
			}
			set
			{
				if ((this._Rank != value))
				{
					this.OnRankChanging(value);
					this.SendPropertyChanging();
					this._Rank = value;
					this.SendPropertyChanged("Rank");
					this.OnRankChanged();
				}
			}
		}
		
		[Column(Storage="_DenseRank", DbType="Int NOT NULL")]
		public int DenseRank
		{
			get
			{
				return this._DenseRank;
			}
			set
			{
				if ((this._DenseRank != value))
				{
					this.OnDenseRankChanging(value);
					this.SendPropertyChanging();
					this._DenseRank = value;
					this.SendPropertyChanged("DenseRank");
					this.OnDenseRankChanged();
				}
			}
		}
		
		[Column(Storage="_NTile", DbType="SmallInt NOT NULL")]
		public short NTile
		{
			get
			{
				return this._NTile;
			}
			set
			{
				if ((this._NTile != value))
				{
					this.OnNTileChanging(value);
					this.SendPropertyChanging();
					this._NTile = value;
					this.SendPropertyChanged("NTile");
					this.OnNTileChanged();
				}
			}
		}
		
		[Association(Name="Scheme_HyperLinks_MOST_POPULAR_SCHEMES_BY_HOST", Storage="_Scheme", ThisKey="SchemeID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Scheme Scheme
		{
			get
			{
				return this._Scheme.Entity;
			}
			set
			{
				Scheme previousValue = this._Scheme.Entity;
				if (((previousValue != value) 
							|| (this._Scheme.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Scheme.Entity = null;
						previousValue.HyperLinks_MOST_POPULAR_SCHEMES_BY_HOST = null;
					}
					this._Scheme.Entity = value;
					if ((value != null))
					{
						value.HyperLinks_MOST_POPULAR_SCHEMES_BY_HOST = this;
						this._SchemeID = value.ID;
					}
					else
					{
						this._SchemeID = default(int);
					}
					this.SendPropertyChanged("Scheme");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="rpt.Images_COUNT_BY_ABSOLUTEURI")]
	public partial class Images_COUNT_BY_ABSOLUTEURI : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RowNumber;
		
		private long _ImageID;
		
		private int _Count;
		
		private int _Rank;
		
		private int _DenseRank;
		
		private byte _NTile;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRowNumberChanging(int value);
    partial void OnRowNumberChanged();
    partial void OnImageIDChanging(long value);
    partial void OnImageIDChanged();
    partial void OnCountChanging(int value);
    partial void OnCountChanged();
    partial void OnRankChanging(int value);
    partial void OnRankChanged();
    partial void OnDenseRankChanging(int value);
    partial void OnDenseRankChanged();
    partial void OnNTileChanging(byte value);
    partial void OnNTileChanged();
    #endregion
		
		public Images_COUNT_BY_ABSOLUTEURI()
		{
			OnCreated();
		}
		
		[Column(Storage="_RowNumber", DbType="Int NOT NULL")]
		public int RowNumber
		{
			get
			{
				return this._RowNumber;
			}
			set
			{
				if ((this._RowNumber != value))
				{
					this.OnRowNumberChanging(value);
					this.SendPropertyChanging();
					this._RowNumber = value;
					this.SendPropertyChanged("RowNumber");
					this.OnRowNumberChanged();
				}
			}
		}
		
		[Column(Storage="_ImageID", DbType="BigInt NOT NULL", IsPrimaryKey=true)]
		public long ImageID
		{
			get
			{
				return this._ImageID;
			}
			set
			{
				if ((this._ImageID != value))
				{
					this.OnImageIDChanging(value);
					this.SendPropertyChanging();
					this._ImageID = value;
					this.SendPropertyChanged("ImageID");
					this.OnImageIDChanged();
				}
			}
		}
		
		[Column(Storage="_Count", DbType="Int NOT NULL")]
		public int Count
		{
			get
			{
				return this._Count;
			}
			set
			{
				if ((this._Count != value))
				{
					this.OnCountChanging(value);
					this.SendPropertyChanging();
					this._Count = value;
					this.SendPropertyChanged("Count");
					this.OnCountChanged();
				}
			}
		}
		
		[Column(Storage="_Rank", DbType="Int NOT NULL")]
		public int Rank
		{
			get
			{
				return this._Rank;
			}
			set
			{
				if ((this._Rank != value))
				{
					this.OnRankChanging(value);
					this.SendPropertyChanging();
					this._Rank = value;
					this.SendPropertyChanged("Rank");
					this.OnRankChanged();
				}
			}
		}
		
		[Column(Storage="_DenseRank", DbType="Int NOT NULL")]
		public int DenseRank
		{
			get
			{
				return this._DenseRank;
			}
			set
			{
				if ((this._DenseRank != value))
				{
					this.OnDenseRankChanging(value);
					this.SendPropertyChanging();
					this._DenseRank = value;
					this.SendPropertyChanged("DenseRank");
					this.OnDenseRankChanged();
				}
			}
		}
		
		[Column(Storage="_NTile", DbType="TinyInt NOT NULL")]
		public byte NTile
		{
			get
			{
				return this._NTile;
			}
			set
			{
				if ((this._NTile != value))
				{
					this.OnNTileChanging(value);
					this.SendPropertyChanging();
					this._NTile = value;
					this.SendPropertyChanged("NTile");
					this.OnNTileChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="rpt.WebPages_COUNT_BY_SCHEME")]
	public partial class WebPages_COUNT_BY_SCHEME : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RowNumber;
		
		private string _Scheme;
		
		private int _Count;
		
		private int _Rank;
		
		private int _DenseRank;
		
		private byte _NTile;
		
		private EntityRef<Scheme> _Scheme1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRowNumberChanging(int value);
    partial void OnRowNumberChanged();
    partial void OnSchemeChanging(string value);
    partial void OnSchemeChanged();
    partial void OnCountChanging(int value);
    partial void OnCountChanged();
    partial void OnRankChanging(int value);
    partial void OnRankChanged();
    partial void OnDenseRankChanging(int value);
    partial void OnDenseRankChanged();
    partial void OnNTileChanging(byte value);
    partial void OnNTileChanged();
    #endregion
		
		public WebPages_COUNT_BY_SCHEME()
		{
			this._Scheme1 = default(EntityRef<Scheme>);
			OnCreated();
		}
		
		[Column(Storage="_RowNumber", DbType="Int NOT NULL")]
		public int RowNumber
		{
			get
			{
				return this._RowNumber;
			}
			set
			{
				if ((this._RowNumber != value))
				{
					this.OnRowNumberChanging(value);
					this.SendPropertyChanging();
					this._RowNumber = value;
					this.SendPropertyChanged("RowNumber");
					this.OnRowNumberChanged();
				}
			}
		}
		
		[Column(Storage="_Scheme", DbType="VarChar(884) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Scheme
		{
			get
			{
				return this._Scheme;
			}
			set
			{
				if ((this._Scheme != value))
				{
					if (this._Scheme1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSchemeChanging(value);
					this.SendPropertyChanging();
					this._Scheme = value;
					this.SendPropertyChanged("Scheme");
					this.OnSchemeChanged();
				}
			}
		}
		
		[Column(Storage="_Count", DbType="Int NOT NULL")]
		public int Count
		{
			get
			{
				return this._Count;
			}
			set
			{
				if ((this._Count != value))
				{
					this.OnCountChanging(value);
					this.SendPropertyChanging();
					this._Count = value;
					this.SendPropertyChanged("Count");
					this.OnCountChanged();
				}
			}
		}
		
		[Column(Storage="_Rank", DbType="Int NOT NULL")]
		public int Rank
		{
			get
			{
				return this._Rank;
			}
			set
			{
				if ((this._Rank != value))
				{
					this.OnRankChanging(value);
					this.SendPropertyChanging();
					this._Rank = value;
					this.SendPropertyChanged("Rank");
					this.OnRankChanged();
				}
			}
		}
		
		[Column(Storage="_DenseRank", DbType="Int NOT NULL")]
		public int DenseRank
		{
			get
			{
				return this._DenseRank;
			}
			set
			{
				if ((this._DenseRank != value))
				{
					this.OnDenseRankChanging(value);
					this.SendPropertyChanging();
					this._DenseRank = value;
					this.SendPropertyChanged("DenseRank");
					this.OnDenseRankChanged();
				}
			}
		}
		
		[Column(Storage="_NTile", DbType="TinyInt NOT NULL")]
		public byte NTile
		{
			get
			{
				return this._NTile;
			}
			set
			{
				if ((this._NTile != value))
				{
					this.OnNTileChanging(value);
					this.SendPropertyChanging();
					this._NTile = value;
					this.SendPropertyChanged("NTile");
					this.OnNTileChanged();
				}
			}
		}
		
		[Association(Name="Scheme_WebPages_COUNT_BY_SCHEME", Storage="_Scheme1", ThisKey="Scheme", OtherKey="Scheme1", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Scheme Scheme1
		{
			get
			{
				return this._Scheme1.Entity;
			}
			set
			{
				Scheme previousValue = this._Scheme1.Entity;
				if (((previousValue != value) 
							|| (this._Scheme1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Scheme1.Entity = null;
						previousValue.WebPages_COUNT_BY_SCHEME = null;
					}
					this._Scheme1.Entity = value;
					if ((value != null))
					{
						value.WebPages_COUNT_BY_SCHEME = this;
						this._Scheme = value.Scheme1;
					}
					else
					{
						this._Scheme = default(string);
					}
					this.SendPropertyChanged("Scheme1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="rpt.Images_COUNT_BY_DOMAIN")]
	public partial class Images_COUNT_BY_DOMAIN : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RowNumber;
		
		private int _DomainID;
		
		private int _Count;
		
		private int _Rank;
		
		private int _DenseRank;
		
		private byte _NTile;
		
		private EntityRef<Domain> _Domain;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRowNumberChanging(int value);
    partial void OnRowNumberChanged();
    partial void OnDomainIDChanging(int value);
    partial void OnDomainIDChanged();
    partial void OnCountChanging(int value);
    partial void OnCountChanged();
    partial void OnRankChanging(int value);
    partial void OnRankChanged();
    partial void OnDenseRankChanging(int value);
    partial void OnDenseRankChanged();
    partial void OnNTileChanging(byte value);
    partial void OnNTileChanged();
    #endregion
		
		public Images_COUNT_BY_DOMAIN()
		{
			this._Domain = default(EntityRef<Domain>);
			OnCreated();
		}
		
		[Column(Storage="_RowNumber", DbType="Int NOT NULL")]
		public int RowNumber
		{
			get
			{
				return this._RowNumber;
			}
			set
			{
				if ((this._RowNumber != value))
				{
					this.OnRowNumberChanging(value);
					this.SendPropertyChanging();
					this._RowNumber = value;
					this.SendPropertyChanged("RowNumber");
					this.OnRowNumberChanged();
				}
			}
		}
		
		[Column(Storage="_DomainID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int DomainID
		{
			get
			{
				return this._DomainID;
			}
			set
			{
				if ((this._DomainID != value))
				{
					if (this._Domain.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDomainIDChanging(value);
					this.SendPropertyChanging();
					this._DomainID = value;
					this.SendPropertyChanged("DomainID");
					this.OnDomainIDChanged();
				}
			}
		}
		
		[Column(Storage="_Count", DbType="Int NOT NULL")]
		public int Count
		{
			get
			{
				return this._Count;
			}
			set
			{
				if ((this._Count != value))
				{
					this.OnCountChanging(value);
					this.SendPropertyChanging();
					this._Count = value;
					this.SendPropertyChanged("Count");
					this.OnCountChanged();
				}
			}
		}
		
		[Column(Storage="_Rank", DbType="Int NOT NULL")]
		public int Rank
		{
			get
			{
				return this._Rank;
			}
			set
			{
				if ((this._Rank != value))
				{
					this.OnRankChanging(value);
					this.SendPropertyChanging();
					this._Rank = value;
					this.SendPropertyChanged("Rank");
					this.OnRankChanged();
				}
			}
		}
		
		[Column(Storage="_DenseRank", DbType="Int NOT NULL")]
		public int DenseRank
		{
			get
			{
				return this._DenseRank;
			}
			set
			{
				if ((this._DenseRank != value))
				{
					this.OnDenseRankChanging(value);
					this.SendPropertyChanging();
					this._DenseRank = value;
					this.SendPropertyChanged("DenseRank");
					this.OnDenseRankChanged();
				}
			}
		}
		
		[Column(Storage="_NTile", DbType="TinyInt NOT NULL")]
		public byte NTile
		{
			get
			{
				return this._NTile;
			}
			set
			{
				if ((this._NTile != value))
				{
					this.OnNTileChanging(value);
					this.SendPropertyChanging();
					this._NTile = value;
					this.SendPropertyChanged("NTile");
					this.OnNTileChanged();
				}
			}
		}
		
		[Association(Name="Domain_Images_COUNT_BY_DOMAIN", Storage="_Domain", ThisKey="DomainID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Domain Domain
		{
			get
			{
				return this._Domain.Entity;
			}
			set
			{
				Domain previousValue = this._Domain.Entity;
				if (((previousValue != value) 
							|| (this._Domain.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Domain.Entity = null;
						previousValue.Images_COUNT_BY_DOMAIN = null;
					}
					this._Domain.Entity = value;
					if ((value != null))
					{
						value.Images_COUNT_BY_DOMAIN = this;
						this._DomainID = value.ID;
					}
					else
					{
						this._DomainID = default(int);
					}
					this.SendPropertyChanged("Domain");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="rpt.Images_COUNT_BY_EXTENSION")]
	public partial class Images_COUNT_BY_EXTENSION : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RowNumber;
		
		private int _ExtensionID;
		
		private int _Count;
		
		private int _Rank;
		
		private int _DenseRank;
		
		private byte _NTile;
		
		private EntityRef<Extension> _Extension;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRowNumberChanging(int value);
    partial void OnRowNumberChanged();
    partial void OnExtensionIDChanging(int value);
    partial void OnExtensionIDChanged();
    partial void OnCountChanging(int value);
    partial void OnCountChanged();
    partial void OnRankChanging(int value);
    partial void OnRankChanged();
    partial void OnDenseRankChanging(int value);
    partial void OnDenseRankChanged();
    partial void OnNTileChanging(byte value);
    partial void OnNTileChanged();
    #endregion
		
		public Images_COUNT_BY_EXTENSION()
		{
			this._Extension = default(EntityRef<Extension>);
			OnCreated();
		}
		
		[Column(Storage="_RowNumber", DbType="Int NOT NULL")]
		public int RowNumber
		{
			get
			{
				return this._RowNumber;
			}
			set
			{
				if ((this._RowNumber != value))
				{
					this.OnRowNumberChanging(value);
					this.SendPropertyChanging();
					this._RowNumber = value;
					this.SendPropertyChanged("RowNumber");
					this.OnRowNumberChanged();
				}
			}
		}
		
		[Column(Storage="_ExtensionID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ExtensionID
		{
			get
			{
				return this._ExtensionID;
			}
			set
			{
				if ((this._ExtensionID != value))
				{
					if (this._Extension.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnExtensionIDChanging(value);
					this.SendPropertyChanging();
					this._ExtensionID = value;
					this.SendPropertyChanged("ExtensionID");
					this.OnExtensionIDChanged();
				}
			}
		}
		
		[Column(Storage="_Count", DbType="Int NOT NULL")]
		public int Count
		{
			get
			{
				return this._Count;
			}
			set
			{
				if ((this._Count != value))
				{
					this.OnCountChanging(value);
					this.SendPropertyChanging();
					this._Count = value;
					this.SendPropertyChanged("Count");
					this.OnCountChanged();
				}
			}
		}
		
		[Column(Storage="_Rank", DbType="Int NOT NULL")]
		public int Rank
		{
			get
			{
				return this._Rank;
			}
			set
			{
				if ((this._Rank != value))
				{
					this.OnRankChanging(value);
					this.SendPropertyChanging();
					this._Rank = value;
					this.SendPropertyChanged("Rank");
					this.OnRankChanged();
				}
			}
		}
		
		[Column(Storage="_DenseRank", DbType="Int NOT NULL")]
		public int DenseRank
		{
			get
			{
				return this._DenseRank;
			}
			set
			{
				if ((this._DenseRank != value))
				{
					this.OnDenseRankChanging(value);
					this.SendPropertyChanging();
					this._DenseRank = value;
					this.SendPropertyChanged("DenseRank");
					this.OnDenseRankChanged();
				}
			}
		}
		
		[Column(Storage="_NTile", DbType="TinyInt NOT NULL")]
		public byte NTile
		{
			get
			{
				return this._NTile;
			}
			set
			{
				if ((this._NTile != value))
				{
					this.OnNTileChanging(value);
					this.SendPropertyChanging();
					this._NTile = value;
					this.SendPropertyChanged("NTile");
					this.OnNTileChanged();
				}
			}
		}
		
		[Association(Name="Extension_Images_COUNT_BY_EXTENSION", Storage="_Extension", ThisKey="ExtensionID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Extension Extension
		{
			get
			{
				return this._Extension.Entity;
			}
			set
			{
				Extension previousValue = this._Extension.Entity;
				if (((previousValue != value) 
							|| (this._Extension.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Extension.Entity = null;
						previousValue.Images_COUNT_BY_EXTENSION = null;
					}
					this._Extension.Entity = value;
					if ((value != null))
					{
						value.Images_COUNT_BY_EXTENSION = this;
						this._ExtensionID = value.ID;
					}
					else
					{
						this._ExtensionID = default(int);
					}
					this.SendPropertyChanged("Extension");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="rpt.Images_COUNT_BY_FULLTEXTINDEXTYPE")]
	public partial class Images_COUNT_BY_FULLTEXTINDEXTYPE : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RowNumber;
		
		private string _FullTextIndexType;
		
		private int _Count;
		
		private int _Rank;
		
		private int _DenseRank;
		
		private byte _NTile;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRowNumberChanging(int value);
    partial void OnRowNumberChanged();
    partial void OnFullTextIndexTypeChanging(string value);
    partial void OnFullTextIndexTypeChanged();
    partial void OnCountChanging(int value);
    partial void OnCountChanged();
    partial void OnRankChanging(int value);
    partial void OnRankChanged();
    partial void OnDenseRankChanging(int value);
    partial void OnDenseRankChanged();
    partial void OnNTileChanging(byte value);
    partial void OnNTileChanged();
    #endregion
		
		public Images_COUNT_BY_FULLTEXTINDEXTYPE()
		{
			OnCreated();
		}
		
		[Column(Storage="_RowNumber", DbType="Int NOT NULL")]
		public int RowNumber
		{
			get
			{
				return this._RowNumber;
			}
			set
			{
				if ((this._RowNumber != value))
				{
					this.OnRowNumberChanging(value);
					this.SendPropertyChanging();
					this._RowNumber = value;
					this.SendPropertyChanged("RowNumber");
					this.OnRowNumberChanged();
				}
			}
		}
		
		[Column(Storage="_FullTextIndexType", DbType="VarChar(20) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string FullTextIndexType
		{
			get
			{
				return this._FullTextIndexType;
			}
			set
			{
				if ((this._FullTextIndexType != value))
				{
					this.OnFullTextIndexTypeChanging(value);
					this.SendPropertyChanging();
					this._FullTextIndexType = value;
					this.SendPropertyChanged("FullTextIndexType");
					this.OnFullTextIndexTypeChanged();
				}
			}
		}
		
		[Column(Storage="_Count", DbType="Int NOT NULL")]
		public int Count
		{
			get
			{
				return this._Count;
			}
			set
			{
				if ((this._Count != value))
				{
					this.OnCountChanging(value);
					this.SendPropertyChanging();
					this._Count = value;
					this.SendPropertyChanged("Count");
					this.OnCountChanged();
				}
			}
		}
		
		[Column(Storage="_Rank", DbType="Int NOT NULL")]
		public int Rank
		{
			get
			{
				return this._Rank;
			}
			set
			{
				if ((this._Rank != value))
				{
					this.OnRankChanging(value);
					this.SendPropertyChanging();
					this._Rank = value;
					this.SendPropertyChanged("Rank");
					this.OnRankChanged();
				}
			}
		}
		
		[Column(Storage="_DenseRank", DbType="Int NOT NULL")]
		public int DenseRank
		{
			get
			{
				return this._DenseRank;
			}
			set
			{
				if ((this._DenseRank != value))
				{
					this.OnDenseRankChanging(value);
					this.SendPropertyChanging();
					this._DenseRank = value;
					this.SendPropertyChanged("DenseRank");
					this.OnDenseRankChanged();
				}
			}
		}
		
		[Column(Storage="_NTile", DbType="TinyInt NOT NULL")]
		public byte NTile
		{
			get
			{
				return this._NTile;
			}
			set
			{
				if ((this._NTile != value))
				{
					this.OnNTileChanging(value);
					this.SendPropertyChanging();
					this._NTile = value;
					this.SendPropertyChanged("NTile");
					this.OnNTileChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="rpt.Images_COUNT_BY_HOST")]
	public partial class Images_COUNT_BY_HOST : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RowNumber;
		
		private int _HostID;
		
		private int _Count;
		
		private int _Rank;
		
		private int _DenseRank;
		
		private byte _NTile;
		
		private EntityRef<Host> _Host;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRowNumberChanging(int value);
    partial void OnRowNumberChanged();
    partial void OnHostIDChanging(int value);
    partial void OnHostIDChanged();
    partial void OnCountChanging(int value);
    partial void OnCountChanged();
    partial void OnRankChanging(int value);
    partial void OnRankChanged();
    partial void OnDenseRankChanging(int value);
    partial void OnDenseRankChanged();
    partial void OnNTileChanging(byte value);
    partial void OnNTileChanged();
    #endregion
		
		public Images_COUNT_BY_HOST()
		{
			this._Host = default(EntityRef<Host>);
			OnCreated();
		}
		
		[Column(Storage="_RowNumber", DbType="Int NOT NULL")]
		public int RowNumber
		{
			get
			{
				return this._RowNumber;
			}
			set
			{
				if ((this._RowNumber != value))
				{
					this.OnRowNumberChanging(value);
					this.SendPropertyChanging();
					this._RowNumber = value;
					this.SendPropertyChanged("RowNumber");
					this.OnRowNumberChanged();
				}
			}
		}
		
		[Column(Storage="_HostID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int HostID
		{
			get
			{
				return this._HostID;
			}
			set
			{
				if ((this._HostID != value))
				{
					if (this._Host.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnHostIDChanging(value);
					this.SendPropertyChanging();
					this._HostID = value;
					this.SendPropertyChanged("HostID");
					this.OnHostIDChanged();
				}
			}
		}
		
		[Column(Storage="_Count", DbType="Int NOT NULL")]
		public int Count
		{
			get
			{
				return this._Count;
			}
			set
			{
				if ((this._Count != value))
				{
					this.OnCountChanging(value);
					this.SendPropertyChanging();
					this._Count = value;
					this.SendPropertyChanged("Count");
					this.OnCountChanged();
				}
			}
		}
		
		[Column(Storage="_Rank", DbType="Int NOT NULL")]
		public int Rank
		{
			get
			{
				return this._Rank;
			}
			set
			{
				if ((this._Rank != value))
				{
					this.OnRankChanging(value);
					this.SendPropertyChanging();
					this._Rank = value;
					this.SendPropertyChanged("Rank");
					this.OnRankChanged();
				}
			}
		}
		
		[Column(Storage="_DenseRank", DbType="Int NOT NULL")]
		public int DenseRank
		{
			get
			{
				return this._DenseRank;
			}
			set
			{
				if ((this._DenseRank != value))
				{
					this.OnDenseRankChanging(value);
					this.SendPropertyChanging();
					this._DenseRank = value;
					this.SendPropertyChanged("DenseRank");
					this.OnDenseRankChanged();
				}
			}
		}
		
		[Column(Storage="_NTile", DbType="TinyInt NOT NULL")]
		public byte NTile
		{
			get
			{
				return this._NTile;
			}
			set
			{
				if ((this._NTile != value))
				{
					this.OnNTileChanging(value);
					this.SendPropertyChanging();
					this._NTile = value;
					this.SendPropertyChanged("NTile");
					this.OnNTileChanged();
				}
			}
		}
		
		[Association(Name="Host_Images_COUNT_BY_HOST", Storage="_Host", ThisKey="HostID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Host Host
		{
			get
			{
				return this._Host.Entity;
			}
			set
			{
				Host previousValue = this._Host.Entity;
				if (((previousValue != value) 
							|| (this._Host.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Host.Entity = null;
						previousValue.Images_COUNT_BY_HOST = null;
					}
					this._Host.Entity = value;
					if ((value != null))
					{
						value.Images_COUNT_BY_HOST = this;
						this._HostID = value.ID;
					}
					else
					{
						this._HostID = default(int);
					}
					this.SendPropertyChanged("Host");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="rpt.Images_COUNT_BY_SCHEME")]
	public partial class Images_COUNT_BY_SCHEME : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RowNumber;
		
		private int _SchemeID;
		
		private int _Count;
		
		private int _Rank;
		
		private int _DenseRank;
		
		private byte _NTile;
		
		private EntityRef<Scheme> _Scheme;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRowNumberChanging(int value);
    partial void OnRowNumberChanged();
    partial void OnSchemeIDChanging(int value);
    partial void OnSchemeIDChanged();
    partial void OnCountChanging(int value);
    partial void OnCountChanged();
    partial void OnRankChanging(int value);
    partial void OnRankChanged();
    partial void OnDenseRankChanging(int value);
    partial void OnDenseRankChanged();
    partial void OnNTileChanging(byte value);
    partial void OnNTileChanged();
    #endregion
		
		public Images_COUNT_BY_SCHEME()
		{
			this._Scheme = default(EntityRef<Scheme>);
			OnCreated();
		}
		
		[Column(Storage="_RowNumber", DbType="Int NOT NULL")]
		public int RowNumber
		{
			get
			{
				return this._RowNumber;
			}
			set
			{
				if ((this._RowNumber != value))
				{
					this.OnRowNumberChanging(value);
					this.SendPropertyChanging();
					this._RowNumber = value;
					this.SendPropertyChanged("RowNumber");
					this.OnRowNumberChanged();
				}
			}
		}
		
		[Column(Storage="_SchemeID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int SchemeID
		{
			get
			{
				return this._SchemeID;
			}
			set
			{
				if ((this._SchemeID != value))
				{
					if (this._Scheme.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSchemeIDChanging(value);
					this.SendPropertyChanging();
					this._SchemeID = value;
					this.SendPropertyChanged("SchemeID");
					this.OnSchemeIDChanged();
				}
			}
		}
		
		[Column(Storage="_Count", DbType="Int NOT NULL")]
		public int Count
		{
			get
			{
				return this._Count;
			}
			set
			{
				if ((this._Count != value))
				{
					this.OnCountChanging(value);
					this.SendPropertyChanging();
					this._Count = value;
					this.SendPropertyChanged("Count");
					this.OnCountChanged();
				}
			}
		}
		
		[Column(Storage="_Rank", DbType="Int NOT NULL")]
		public int Rank
		{
			get
			{
				return this._Rank;
			}
			set
			{
				if ((this._Rank != value))
				{
					this.OnRankChanging(value);
					this.SendPropertyChanging();
					this._Rank = value;
					this.SendPropertyChanged("Rank");
					this.OnRankChanged();
				}
			}
		}
		
		[Column(Storage="_DenseRank", DbType="Int NOT NULL")]
		public int DenseRank
		{
			get
			{
				return this._DenseRank;
			}
			set
			{
				if ((this._DenseRank != value))
				{
					this.OnDenseRankChanging(value);
					this.SendPropertyChanging();
					this._DenseRank = value;
					this.SendPropertyChanged("DenseRank");
					this.OnDenseRankChanged();
				}
			}
		}
		
		[Column(Storage="_NTile", DbType="TinyInt NOT NULL")]
		public byte NTile
		{
			get
			{
				return this._NTile;
			}
			set
			{
				if ((this._NTile != value))
				{
					this.OnNTileChanging(value);
					this.SendPropertyChanging();
					this._NTile = value;
					this.SendPropertyChanged("NTile");
					this.OnNTileChanged();
				}
			}
		}
		
		[Association(Name="Scheme_Images_COUNT_BY_SCHEME", Storage="_Scheme", ThisKey="SchemeID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Scheme Scheme
		{
			get
			{
				return this._Scheme.Entity;
			}
			set
			{
				Scheme previousValue = this._Scheme.Entity;
				if (((previousValue != value) 
							|| (this._Scheme.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Scheme.Entity = null;
						previousValue.Images_COUNT_BY_SCHEME = null;
					}
					this._Scheme.Entity = value;
					if ((value != null))
					{
						value.Images_COUNT_BY_SCHEME = this;
						this._SchemeID = value.ID;
					}
					else
					{
						this._SchemeID = default(int);
					}
					this.SendPropertyChanged("Scheme");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="rpt.Images_MOST_POPULAR_ABSOLUTEURIS_BY_ABSOLUTEURIS")]
	public partial class Images_MOST_POPULAR_ABSOLUTEURIS_BY_ABSOLUTEURI : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RowNumber;
		
		private System.Nullable<System.DateTime> _InitiallyDiscovered;
		
		private System.DateTime _LastDiscovered;
		
		private long _ImageID;
		
		private int _Count;
		
		private System.Nullable<short> _DaysSinceInitiallyDiscovered;
		
		private short _DaysSinceLastDiscovered;
		
		private System.Nullable<double> _Strength;
		
		private int _Rank;
		
		private int _DenseRank;
		
		private byte _NTile;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRowNumberChanging(int value);
    partial void OnRowNumberChanged();
    partial void OnInitiallyDiscoveredChanging(System.Nullable<System.DateTime> value);
    partial void OnInitiallyDiscoveredChanged();
    partial void OnLastDiscoveredChanging(System.DateTime value);
    partial void OnLastDiscoveredChanged();
    partial void OnImageIDChanging(long value);
    partial void OnImageIDChanged();
    partial void OnCountChanging(int value);
    partial void OnCountChanged();
    partial void OnDaysSinceInitiallyDiscoveredChanging(System.Nullable<short> value);
    partial void OnDaysSinceInitiallyDiscoveredChanged();
    partial void OnDaysSinceLastDiscoveredChanging(short value);
    partial void OnDaysSinceLastDiscoveredChanged();
    partial void OnStrengthChanging(System.Nullable<double> value);
    partial void OnStrengthChanged();
    partial void OnRankChanging(int value);
    partial void OnRankChanged();
    partial void OnDenseRankChanging(int value);
    partial void OnDenseRankChanged();
    partial void OnNTileChanging(byte value);
    partial void OnNTileChanged();
    #endregion
		
		public Images_MOST_POPULAR_ABSOLUTEURIS_BY_ABSOLUTEURI()
		{
			OnCreated();
		}
		
		[Column(Storage="_RowNumber", DbType="Int NOT NULL")]
		public int RowNumber
		{
			get
			{
				return this._RowNumber;
			}
			set
			{
				if ((this._RowNumber != value))
				{
					this.OnRowNumberChanging(value);
					this.SendPropertyChanging();
					this._RowNumber = value;
					this.SendPropertyChanged("RowNumber");
					this.OnRowNumberChanged();
				}
			}
		}
		
		[Column(Storage="_InitiallyDiscovered", DbType="DateTime")]
		public System.Nullable<System.DateTime> InitiallyDiscovered
		{
			get
			{
				return this._InitiallyDiscovered;
			}
			set
			{
				if ((this._InitiallyDiscovered != value))
				{
					this.OnInitiallyDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._InitiallyDiscovered = value;
					this.SendPropertyChanged("InitiallyDiscovered");
					this.OnInitiallyDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_LastDiscovered", DbType="DateTime NOT NULL")]
		public System.DateTime LastDiscovered
		{
			get
			{
				return this._LastDiscovered;
			}
			set
			{
				if ((this._LastDiscovered != value))
				{
					this.OnLastDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._LastDiscovered = value;
					this.SendPropertyChanged("LastDiscovered");
					this.OnLastDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_ImageID", DbType="BigInt NOT NULL", IsPrimaryKey=true)]
		public long ImageID
		{
			get
			{
				return this._ImageID;
			}
			set
			{
				if ((this._ImageID != value))
				{
					this.OnImageIDChanging(value);
					this.SendPropertyChanging();
					this._ImageID = value;
					this.SendPropertyChanged("ImageID");
					this.OnImageIDChanged();
				}
			}
		}
		
		[Column(Storage="_Count", DbType="Int NOT NULL")]
		public int Count
		{
			get
			{
				return this._Count;
			}
			set
			{
				if ((this._Count != value))
				{
					this.OnCountChanging(value);
					this.SendPropertyChanging();
					this._Count = value;
					this.SendPropertyChanged("Count");
					this.OnCountChanged();
				}
			}
		}
		
		[Column(Storage="_DaysSinceInitiallyDiscovered", DbType="SmallInt")]
		public System.Nullable<short> DaysSinceInitiallyDiscovered
		{
			get
			{
				return this._DaysSinceInitiallyDiscovered;
			}
			set
			{
				if ((this._DaysSinceInitiallyDiscovered != value))
				{
					this.OnDaysSinceInitiallyDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._DaysSinceInitiallyDiscovered = value;
					this.SendPropertyChanged("DaysSinceInitiallyDiscovered");
					this.OnDaysSinceInitiallyDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_DaysSinceLastDiscovered", DbType="SmallInt NOT NULL")]
		public short DaysSinceLastDiscovered
		{
			get
			{
				return this._DaysSinceLastDiscovered;
			}
			set
			{
				if ((this._DaysSinceLastDiscovered != value))
				{
					this.OnDaysSinceLastDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._DaysSinceLastDiscovered = value;
					this.SendPropertyChanged("DaysSinceLastDiscovered");
					this.OnDaysSinceLastDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_Strength", DbType="Float")]
		public System.Nullable<double> Strength
		{
			get
			{
				return this._Strength;
			}
			set
			{
				if ((this._Strength != value))
				{
					this.OnStrengthChanging(value);
					this.SendPropertyChanging();
					this._Strength = value;
					this.SendPropertyChanged("Strength");
					this.OnStrengthChanged();
				}
			}
		}
		
		[Column(Storage="_Rank", DbType="Int NOT NULL")]
		public int Rank
		{
			get
			{
				return this._Rank;
			}
			set
			{
				if ((this._Rank != value))
				{
					this.OnRankChanging(value);
					this.SendPropertyChanging();
					this._Rank = value;
					this.SendPropertyChanged("Rank");
					this.OnRankChanged();
				}
			}
		}
		
		[Column(Storage="_DenseRank", DbType="Int NOT NULL")]
		public int DenseRank
		{
			get
			{
				return this._DenseRank;
			}
			set
			{
				if ((this._DenseRank != value))
				{
					this.OnDenseRankChanging(value);
					this.SendPropertyChanging();
					this._DenseRank = value;
					this.SendPropertyChanged("DenseRank");
					this.OnDenseRankChanged();
				}
			}
		}
		
		[Column(Storage="_NTile", DbType="TinyInt NOT NULL")]
		public byte NTile
		{
			get
			{
				return this._NTile;
			}
			set
			{
				if ((this._NTile != value))
				{
					this.OnNTileChanging(value);
					this.SendPropertyChanging();
					this._NTile = value;
					this.SendPropertyChanged("NTile");
					this.OnNTileChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="rpt.Images_MOST_POPULAR_ABSOLUTEURIS_BY_DOMAINS")]
	public partial class Images_MOST_POPULAR_ABSOLUTEURIS_BY_DOMAIN : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RowNumber;
		
		private System.Nullable<System.DateTime> _InitiallyDiscovered;
		
		private System.DateTime _LastDiscovered;
		
		private long _ImageID;
		
		private int _Count;
		
		private System.Nullable<short> _DaysSinceInitiallyDiscovered;
		
		private short _DaysSinceLastDiscovered;
		
		private System.Nullable<double> _Strength;
		
		private int _Rank;
		
		private int _DenseRank;
		
		private byte _NTile;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRowNumberChanging(int value);
    partial void OnRowNumberChanged();
    partial void OnInitiallyDiscoveredChanging(System.Nullable<System.DateTime> value);
    partial void OnInitiallyDiscoveredChanged();
    partial void OnLastDiscoveredChanging(System.DateTime value);
    partial void OnLastDiscoveredChanged();
    partial void OnImageIDChanging(long value);
    partial void OnImageIDChanged();
    partial void OnCountChanging(int value);
    partial void OnCountChanged();
    partial void OnDaysSinceInitiallyDiscoveredChanging(System.Nullable<short> value);
    partial void OnDaysSinceInitiallyDiscoveredChanged();
    partial void OnDaysSinceLastDiscoveredChanging(short value);
    partial void OnDaysSinceLastDiscoveredChanged();
    partial void OnStrengthChanging(System.Nullable<double> value);
    partial void OnStrengthChanged();
    partial void OnRankChanging(int value);
    partial void OnRankChanged();
    partial void OnDenseRankChanging(int value);
    partial void OnDenseRankChanged();
    partial void OnNTileChanging(byte value);
    partial void OnNTileChanged();
    #endregion
		
		public Images_MOST_POPULAR_ABSOLUTEURIS_BY_DOMAIN()
		{
			OnCreated();
		}
		
		[Column(Storage="_RowNumber", DbType="Int NOT NULL")]
		public int RowNumber
		{
			get
			{
				return this._RowNumber;
			}
			set
			{
				if ((this._RowNumber != value))
				{
					this.OnRowNumberChanging(value);
					this.SendPropertyChanging();
					this._RowNumber = value;
					this.SendPropertyChanged("RowNumber");
					this.OnRowNumberChanged();
				}
			}
		}
		
		[Column(Storage="_InitiallyDiscovered", DbType="DateTime")]
		public System.Nullable<System.DateTime> InitiallyDiscovered
		{
			get
			{
				return this._InitiallyDiscovered;
			}
			set
			{
				if ((this._InitiallyDiscovered != value))
				{
					this.OnInitiallyDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._InitiallyDiscovered = value;
					this.SendPropertyChanged("InitiallyDiscovered");
					this.OnInitiallyDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_LastDiscovered", DbType="DateTime NOT NULL")]
		public System.DateTime LastDiscovered
		{
			get
			{
				return this._LastDiscovered;
			}
			set
			{
				if ((this._LastDiscovered != value))
				{
					this.OnLastDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._LastDiscovered = value;
					this.SendPropertyChanged("LastDiscovered");
					this.OnLastDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_ImageID", DbType="BigInt NOT NULL", IsPrimaryKey=true)]
		public long ImageID
		{
			get
			{
				return this._ImageID;
			}
			set
			{
				if ((this._ImageID != value))
				{
					this.OnImageIDChanging(value);
					this.SendPropertyChanging();
					this._ImageID = value;
					this.SendPropertyChanged("ImageID");
					this.OnImageIDChanged();
				}
			}
		}
		
		[Column(Storage="_Count", DbType="Int NOT NULL")]
		public int Count
		{
			get
			{
				return this._Count;
			}
			set
			{
				if ((this._Count != value))
				{
					this.OnCountChanging(value);
					this.SendPropertyChanging();
					this._Count = value;
					this.SendPropertyChanged("Count");
					this.OnCountChanged();
				}
			}
		}
		
		[Column(Storage="_DaysSinceInitiallyDiscovered", DbType="SmallInt")]
		public System.Nullable<short> DaysSinceInitiallyDiscovered
		{
			get
			{
				return this._DaysSinceInitiallyDiscovered;
			}
			set
			{
				if ((this._DaysSinceInitiallyDiscovered != value))
				{
					this.OnDaysSinceInitiallyDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._DaysSinceInitiallyDiscovered = value;
					this.SendPropertyChanged("DaysSinceInitiallyDiscovered");
					this.OnDaysSinceInitiallyDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_DaysSinceLastDiscovered", DbType="SmallInt NOT NULL")]
		public short DaysSinceLastDiscovered
		{
			get
			{
				return this._DaysSinceLastDiscovered;
			}
			set
			{
				if ((this._DaysSinceLastDiscovered != value))
				{
					this.OnDaysSinceLastDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._DaysSinceLastDiscovered = value;
					this.SendPropertyChanged("DaysSinceLastDiscovered");
					this.OnDaysSinceLastDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_Strength", DbType="Float")]
		public System.Nullable<double> Strength
		{
			get
			{
				return this._Strength;
			}
			set
			{
				if ((this._Strength != value))
				{
					this.OnStrengthChanging(value);
					this.SendPropertyChanging();
					this._Strength = value;
					this.SendPropertyChanged("Strength");
					this.OnStrengthChanged();
				}
			}
		}
		
		[Column(Storage="_Rank", DbType="Int NOT NULL")]
		public int Rank
		{
			get
			{
				return this._Rank;
			}
			set
			{
				if ((this._Rank != value))
				{
					this.OnRankChanging(value);
					this.SendPropertyChanging();
					this._Rank = value;
					this.SendPropertyChanged("Rank");
					this.OnRankChanged();
				}
			}
		}
		
		[Column(Storage="_DenseRank", DbType="Int NOT NULL")]
		public int DenseRank
		{
			get
			{
				return this._DenseRank;
			}
			set
			{
				if ((this._DenseRank != value))
				{
					this.OnDenseRankChanging(value);
					this.SendPropertyChanging();
					this._DenseRank = value;
					this.SendPropertyChanged("DenseRank");
					this.OnDenseRankChanged();
				}
			}
		}
		
		[Column(Storage="_NTile", DbType="TinyInt NOT NULL")]
		public byte NTile
		{
			get
			{
				return this._NTile;
			}
			set
			{
				if ((this._NTile != value))
				{
					this.OnNTileChanging(value);
					this.SendPropertyChanging();
					this._NTile = value;
					this.SendPropertyChanged("NTile");
					this.OnNTileChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="rpt.Images_MOST_POPULAR_ABSOLUTEURIS_BY_EXTENSIONS")]
	public partial class Images_MOST_POPULAR_ABSOLUTEURIS_BY_EXTENSION : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RowNumber;
		
		private System.Nullable<System.DateTime> _InitiallyDiscovered;
		
		private System.DateTime _LastDiscovered;
		
		private long _ImageID;
		
		private int _Count;
		
		private System.Nullable<short> _DaysSinceInitiallyDiscovered;
		
		private short _DaysSinceLastDiscovered;
		
		private System.Nullable<double> _Strength;
		
		private int _Rank;
		
		private int _DenseRank;
		
		private byte _NTile;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRowNumberChanging(int value);
    partial void OnRowNumberChanged();
    partial void OnInitiallyDiscoveredChanging(System.Nullable<System.DateTime> value);
    partial void OnInitiallyDiscoveredChanged();
    partial void OnLastDiscoveredChanging(System.DateTime value);
    partial void OnLastDiscoveredChanged();
    partial void OnImageIDChanging(long value);
    partial void OnImageIDChanged();
    partial void OnCountChanging(int value);
    partial void OnCountChanged();
    partial void OnDaysSinceInitiallyDiscoveredChanging(System.Nullable<short> value);
    partial void OnDaysSinceInitiallyDiscoveredChanged();
    partial void OnDaysSinceLastDiscoveredChanging(short value);
    partial void OnDaysSinceLastDiscoveredChanged();
    partial void OnStrengthChanging(System.Nullable<double> value);
    partial void OnStrengthChanged();
    partial void OnRankChanging(int value);
    partial void OnRankChanged();
    partial void OnDenseRankChanging(int value);
    partial void OnDenseRankChanged();
    partial void OnNTileChanging(byte value);
    partial void OnNTileChanged();
    #endregion
		
		public Images_MOST_POPULAR_ABSOLUTEURIS_BY_EXTENSION()
		{
			OnCreated();
		}
		
		[Column(Storage="_RowNumber", DbType="Int NOT NULL")]
		public int RowNumber
		{
			get
			{
				return this._RowNumber;
			}
			set
			{
				if ((this._RowNumber != value))
				{
					this.OnRowNumberChanging(value);
					this.SendPropertyChanging();
					this._RowNumber = value;
					this.SendPropertyChanged("RowNumber");
					this.OnRowNumberChanged();
				}
			}
		}
		
		[Column(Storage="_InitiallyDiscovered", DbType="DateTime")]
		public System.Nullable<System.DateTime> InitiallyDiscovered
		{
			get
			{
				return this._InitiallyDiscovered;
			}
			set
			{
				if ((this._InitiallyDiscovered != value))
				{
					this.OnInitiallyDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._InitiallyDiscovered = value;
					this.SendPropertyChanged("InitiallyDiscovered");
					this.OnInitiallyDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_LastDiscovered", DbType="DateTime NOT NULL")]
		public System.DateTime LastDiscovered
		{
			get
			{
				return this._LastDiscovered;
			}
			set
			{
				if ((this._LastDiscovered != value))
				{
					this.OnLastDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._LastDiscovered = value;
					this.SendPropertyChanged("LastDiscovered");
					this.OnLastDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_ImageID", DbType="BigInt NOT NULL", IsPrimaryKey=true)]
		public long ImageID
		{
			get
			{
				return this._ImageID;
			}
			set
			{
				if ((this._ImageID != value))
				{
					this.OnImageIDChanging(value);
					this.SendPropertyChanging();
					this._ImageID = value;
					this.SendPropertyChanged("ImageID");
					this.OnImageIDChanged();
				}
			}
		}
		
		[Column(Storage="_Count", DbType="Int NOT NULL")]
		public int Count
		{
			get
			{
				return this._Count;
			}
			set
			{
				if ((this._Count != value))
				{
					this.OnCountChanging(value);
					this.SendPropertyChanging();
					this._Count = value;
					this.SendPropertyChanged("Count");
					this.OnCountChanged();
				}
			}
		}
		
		[Column(Storage="_DaysSinceInitiallyDiscovered", DbType="SmallInt")]
		public System.Nullable<short> DaysSinceInitiallyDiscovered
		{
			get
			{
				return this._DaysSinceInitiallyDiscovered;
			}
			set
			{
				if ((this._DaysSinceInitiallyDiscovered != value))
				{
					this.OnDaysSinceInitiallyDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._DaysSinceInitiallyDiscovered = value;
					this.SendPropertyChanged("DaysSinceInitiallyDiscovered");
					this.OnDaysSinceInitiallyDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_DaysSinceLastDiscovered", DbType="SmallInt NOT NULL")]
		public short DaysSinceLastDiscovered
		{
			get
			{
				return this._DaysSinceLastDiscovered;
			}
			set
			{
				if ((this._DaysSinceLastDiscovered != value))
				{
					this.OnDaysSinceLastDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._DaysSinceLastDiscovered = value;
					this.SendPropertyChanged("DaysSinceLastDiscovered");
					this.OnDaysSinceLastDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_Strength", DbType="Float")]
		public System.Nullable<double> Strength
		{
			get
			{
				return this._Strength;
			}
			set
			{
				if ((this._Strength != value))
				{
					this.OnStrengthChanging(value);
					this.SendPropertyChanging();
					this._Strength = value;
					this.SendPropertyChanged("Strength");
					this.OnStrengthChanged();
				}
			}
		}
		
		[Column(Storage="_Rank", DbType="Int NOT NULL")]
		public int Rank
		{
			get
			{
				return this._Rank;
			}
			set
			{
				if ((this._Rank != value))
				{
					this.OnRankChanging(value);
					this.SendPropertyChanging();
					this._Rank = value;
					this.SendPropertyChanged("Rank");
					this.OnRankChanged();
				}
			}
		}
		
		[Column(Storage="_DenseRank", DbType="Int NOT NULL")]
		public int DenseRank
		{
			get
			{
				return this._DenseRank;
			}
			set
			{
				if ((this._DenseRank != value))
				{
					this.OnDenseRankChanging(value);
					this.SendPropertyChanging();
					this._DenseRank = value;
					this.SendPropertyChanged("DenseRank");
					this.OnDenseRankChanged();
				}
			}
		}
		
		[Column(Storage="_NTile", DbType="TinyInt NOT NULL")]
		public byte NTile
		{
			get
			{
				return this._NTile;
			}
			set
			{
				if ((this._NTile != value))
				{
					this.OnNTileChanging(value);
					this.SendPropertyChanging();
					this._NTile = value;
					this.SendPropertyChanged("NTile");
					this.OnNTileChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="rpt.Images_MOST_POPULAR_ABSOLUTEURIS_BY_HOSTS")]
	public partial class Images_MOST_POPULAR_ABSOLUTEURIS_BY_HOST : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RowNumber;
		
		private System.Nullable<System.DateTime> _InitiallyDiscovered;
		
		private System.DateTime _LastDiscovered;
		
		private long _ImageID;
		
		private int _Count;
		
		private System.Nullable<short> _DaysSinceInitiallyDiscovered;
		
		private short _DaysSinceLastDiscovered;
		
		private System.Nullable<double> _Strength;
		
		private int _Rank;
		
		private int _DenseRank;
		
		private byte _NTile;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRowNumberChanging(int value);
    partial void OnRowNumberChanged();
    partial void OnInitiallyDiscoveredChanging(System.Nullable<System.DateTime> value);
    partial void OnInitiallyDiscoveredChanged();
    partial void OnLastDiscoveredChanging(System.DateTime value);
    partial void OnLastDiscoveredChanged();
    partial void OnImageIDChanging(long value);
    partial void OnImageIDChanged();
    partial void OnCountChanging(int value);
    partial void OnCountChanged();
    partial void OnDaysSinceInitiallyDiscoveredChanging(System.Nullable<short> value);
    partial void OnDaysSinceInitiallyDiscoveredChanged();
    partial void OnDaysSinceLastDiscoveredChanging(short value);
    partial void OnDaysSinceLastDiscoveredChanged();
    partial void OnStrengthChanging(System.Nullable<double> value);
    partial void OnStrengthChanged();
    partial void OnRankChanging(int value);
    partial void OnRankChanged();
    partial void OnDenseRankChanging(int value);
    partial void OnDenseRankChanged();
    partial void OnNTileChanging(byte value);
    partial void OnNTileChanged();
    #endregion
		
		public Images_MOST_POPULAR_ABSOLUTEURIS_BY_HOST()
		{
			OnCreated();
		}
		
		[Column(Storage="_RowNumber", DbType="Int NOT NULL")]
		public int RowNumber
		{
			get
			{
				return this._RowNumber;
			}
			set
			{
				if ((this._RowNumber != value))
				{
					this.OnRowNumberChanging(value);
					this.SendPropertyChanging();
					this._RowNumber = value;
					this.SendPropertyChanged("RowNumber");
					this.OnRowNumberChanged();
				}
			}
		}
		
		[Column(Storage="_InitiallyDiscovered", DbType="DateTime")]
		public System.Nullable<System.DateTime> InitiallyDiscovered
		{
			get
			{
				return this._InitiallyDiscovered;
			}
			set
			{
				if ((this._InitiallyDiscovered != value))
				{
					this.OnInitiallyDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._InitiallyDiscovered = value;
					this.SendPropertyChanged("InitiallyDiscovered");
					this.OnInitiallyDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_LastDiscovered", DbType="DateTime NOT NULL")]
		public System.DateTime LastDiscovered
		{
			get
			{
				return this._LastDiscovered;
			}
			set
			{
				if ((this._LastDiscovered != value))
				{
					this.OnLastDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._LastDiscovered = value;
					this.SendPropertyChanged("LastDiscovered");
					this.OnLastDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_ImageID", DbType="BigInt NOT NULL", IsPrimaryKey=true)]
		public long ImageID
		{
			get
			{
				return this._ImageID;
			}
			set
			{
				if ((this._ImageID != value))
				{
					this.OnImageIDChanging(value);
					this.SendPropertyChanging();
					this._ImageID = value;
					this.SendPropertyChanged("ImageID");
					this.OnImageIDChanged();
				}
			}
		}
		
		[Column(Storage="_Count", DbType="Int NOT NULL")]
		public int Count
		{
			get
			{
				return this._Count;
			}
			set
			{
				if ((this._Count != value))
				{
					this.OnCountChanging(value);
					this.SendPropertyChanging();
					this._Count = value;
					this.SendPropertyChanged("Count");
					this.OnCountChanged();
				}
			}
		}
		
		[Column(Storage="_DaysSinceInitiallyDiscovered", DbType="SmallInt")]
		public System.Nullable<short> DaysSinceInitiallyDiscovered
		{
			get
			{
				return this._DaysSinceInitiallyDiscovered;
			}
			set
			{
				if ((this._DaysSinceInitiallyDiscovered != value))
				{
					this.OnDaysSinceInitiallyDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._DaysSinceInitiallyDiscovered = value;
					this.SendPropertyChanged("DaysSinceInitiallyDiscovered");
					this.OnDaysSinceInitiallyDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_DaysSinceLastDiscovered", DbType="SmallInt NOT NULL")]
		public short DaysSinceLastDiscovered
		{
			get
			{
				return this._DaysSinceLastDiscovered;
			}
			set
			{
				if ((this._DaysSinceLastDiscovered != value))
				{
					this.OnDaysSinceLastDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._DaysSinceLastDiscovered = value;
					this.SendPropertyChanged("DaysSinceLastDiscovered");
					this.OnDaysSinceLastDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_Strength", DbType="Float")]
		public System.Nullable<double> Strength
		{
			get
			{
				return this._Strength;
			}
			set
			{
				if ((this._Strength != value))
				{
					this.OnStrengthChanging(value);
					this.SendPropertyChanging();
					this._Strength = value;
					this.SendPropertyChanged("Strength");
					this.OnStrengthChanged();
				}
			}
		}
		
		[Column(Storage="_Rank", DbType="Int NOT NULL")]
		public int Rank
		{
			get
			{
				return this._Rank;
			}
			set
			{
				if ((this._Rank != value))
				{
					this.OnRankChanging(value);
					this.SendPropertyChanging();
					this._Rank = value;
					this.SendPropertyChanged("Rank");
					this.OnRankChanged();
				}
			}
		}
		
		[Column(Storage="_DenseRank", DbType="Int NOT NULL")]
		public int DenseRank
		{
			get
			{
				return this._DenseRank;
			}
			set
			{
				if ((this._DenseRank != value))
				{
					this.OnDenseRankChanging(value);
					this.SendPropertyChanging();
					this._DenseRank = value;
					this.SendPropertyChanged("DenseRank");
					this.OnDenseRankChanged();
				}
			}
		}
		
		[Column(Storage="_NTile", DbType="TinyInt NOT NULL")]
		public byte NTile
		{
			get
			{
				return this._NTile;
			}
			set
			{
				if ((this._NTile != value))
				{
					this.OnNTileChanging(value);
					this.SendPropertyChanging();
					this._NTile = value;
					this.SendPropertyChanged("NTile");
					this.OnNTileChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="rpt.Images_MOST_POPULAR_ABSOLUTEURIS_BY_SCHEMES")]
	public partial class Images_MOST_POPULAR_ABSOLUTEURIS_BY_SCHEME : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RowNumber;
		
		private System.Nullable<System.DateTime> _InitiallyDiscovered;
		
		private System.DateTime _LastDiscovered;
		
		private long _ImageID;
		
		private int _Count;
		
		private System.Nullable<short> _DaysSinceInitiallyDiscovered;
		
		private short _DaysSinceLastDiscovered;
		
		private System.Nullable<double> _Strength;
		
		private int _Rank;
		
		private int _DenseRank;
		
		private byte _NTile;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRowNumberChanging(int value);
    partial void OnRowNumberChanged();
    partial void OnInitiallyDiscoveredChanging(System.Nullable<System.DateTime> value);
    partial void OnInitiallyDiscoveredChanged();
    partial void OnLastDiscoveredChanging(System.DateTime value);
    partial void OnLastDiscoveredChanged();
    partial void OnImageIDChanging(long value);
    partial void OnImageIDChanged();
    partial void OnCountChanging(int value);
    partial void OnCountChanged();
    partial void OnDaysSinceInitiallyDiscoveredChanging(System.Nullable<short> value);
    partial void OnDaysSinceInitiallyDiscoveredChanged();
    partial void OnDaysSinceLastDiscoveredChanging(short value);
    partial void OnDaysSinceLastDiscoveredChanged();
    partial void OnStrengthChanging(System.Nullable<double> value);
    partial void OnStrengthChanged();
    partial void OnRankChanging(int value);
    partial void OnRankChanged();
    partial void OnDenseRankChanging(int value);
    partial void OnDenseRankChanged();
    partial void OnNTileChanging(byte value);
    partial void OnNTileChanged();
    #endregion
		
		public Images_MOST_POPULAR_ABSOLUTEURIS_BY_SCHEME()
		{
			OnCreated();
		}
		
		[Column(Storage="_RowNumber", DbType="Int NOT NULL")]
		public int RowNumber
		{
			get
			{
				return this._RowNumber;
			}
			set
			{
				if ((this._RowNumber != value))
				{
					this.OnRowNumberChanging(value);
					this.SendPropertyChanging();
					this._RowNumber = value;
					this.SendPropertyChanged("RowNumber");
					this.OnRowNumberChanged();
				}
			}
		}
		
		[Column(Storage="_InitiallyDiscovered", DbType="DateTime")]
		public System.Nullable<System.DateTime> InitiallyDiscovered
		{
			get
			{
				return this._InitiallyDiscovered;
			}
			set
			{
				if ((this._InitiallyDiscovered != value))
				{
					this.OnInitiallyDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._InitiallyDiscovered = value;
					this.SendPropertyChanged("InitiallyDiscovered");
					this.OnInitiallyDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_LastDiscovered", DbType="DateTime NOT NULL")]
		public System.DateTime LastDiscovered
		{
			get
			{
				return this._LastDiscovered;
			}
			set
			{
				if ((this._LastDiscovered != value))
				{
					this.OnLastDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._LastDiscovered = value;
					this.SendPropertyChanged("LastDiscovered");
					this.OnLastDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_ImageID", DbType="BigInt NOT NULL", IsPrimaryKey=true)]
		public long ImageID
		{
			get
			{
				return this._ImageID;
			}
			set
			{
				if ((this._ImageID != value))
				{
					this.OnImageIDChanging(value);
					this.SendPropertyChanging();
					this._ImageID = value;
					this.SendPropertyChanged("ImageID");
					this.OnImageIDChanged();
				}
			}
		}
		
		[Column(Storage="_Count", DbType="Int NOT NULL")]
		public int Count
		{
			get
			{
				return this._Count;
			}
			set
			{
				if ((this._Count != value))
				{
					this.OnCountChanging(value);
					this.SendPropertyChanging();
					this._Count = value;
					this.SendPropertyChanged("Count");
					this.OnCountChanged();
				}
			}
		}
		
		[Column(Storage="_DaysSinceInitiallyDiscovered", DbType="SmallInt")]
		public System.Nullable<short> DaysSinceInitiallyDiscovered
		{
			get
			{
				return this._DaysSinceInitiallyDiscovered;
			}
			set
			{
				if ((this._DaysSinceInitiallyDiscovered != value))
				{
					this.OnDaysSinceInitiallyDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._DaysSinceInitiallyDiscovered = value;
					this.SendPropertyChanged("DaysSinceInitiallyDiscovered");
					this.OnDaysSinceInitiallyDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_DaysSinceLastDiscovered", DbType="SmallInt NOT NULL")]
		public short DaysSinceLastDiscovered
		{
			get
			{
				return this._DaysSinceLastDiscovered;
			}
			set
			{
				if ((this._DaysSinceLastDiscovered != value))
				{
					this.OnDaysSinceLastDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._DaysSinceLastDiscovered = value;
					this.SendPropertyChanged("DaysSinceLastDiscovered");
					this.OnDaysSinceLastDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_Strength", DbType="Float")]
		public System.Nullable<double> Strength
		{
			get
			{
				return this._Strength;
			}
			set
			{
				if ((this._Strength != value))
				{
					this.OnStrengthChanging(value);
					this.SendPropertyChanging();
					this._Strength = value;
					this.SendPropertyChanged("Strength");
					this.OnStrengthChanged();
				}
			}
		}
		
		[Column(Storage="_Rank", DbType="Int NOT NULL")]
		public int Rank
		{
			get
			{
				return this._Rank;
			}
			set
			{
				if ((this._Rank != value))
				{
					this.OnRankChanging(value);
					this.SendPropertyChanging();
					this._Rank = value;
					this.SendPropertyChanged("Rank");
					this.OnRankChanged();
				}
			}
		}
		
		[Column(Storage="_DenseRank", DbType="Int NOT NULL")]
		public int DenseRank
		{
			get
			{
				return this._DenseRank;
			}
			set
			{
				if ((this._DenseRank != value))
				{
					this.OnDenseRankChanging(value);
					this.SendPropertyChanging();
					this._DenseRank = value;
					this.SendPropertyChanged("DenseRank");
					this.OnDenseRankChanged();
				}
			}
		}
		
		[Column(Storage="_NTile", DbType="TinyInt NOT NULL")]
		public byte NTile
		{
			get
			{
				return this._NTile;
			}
			set
			{
				if ((this._NTile != value))
				{
					this.OnNTileChanging(value);
					this.SendPropertyChanging();
					this._NTile = value;
					this.SendPropertyChanged("NTile");
					this.OnNTileChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="rpt.Images_MOST_POPULAR_DOMAINS_BY_ABSOLUTEURIS")]
	public partial class Images_MOST_POPULAR_DOMAINS_BY_ABSOLUTEURI : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RowNumber;
		
		private System.Nullable<System.DateTime> _InitiallyDiscovered;
		
		private System.DateTime _LastDiscovered;
		
		private int _DomainID;
		
		private int _Count;
		
		private System.Nullable<short> _DaysSinceInitiallyDiscovered;
		
		private short _DaysSinceLastDiscovered;
		
		private System.Nullable<double> _Strength;
		
		private int _Rank;
		
		private int _DenseRank;
		
		private short _NTile;
		
		private EntityRef<Domain> _Domain;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRowNumberChanging(int value);
    partial void OnRowNumberChanged();
    partial void OnInitiallyDiscoveredChanging(System.Nullable<System.DateTime> value);
    partial void OnInitiallyDiscoveredChanged();
    partial void OnLastDiscoveredChanging(System.DateTime value);
    partial void OnLastDiscoveredChanged();
    partial void OnDomainIDChanging(int value);
    partial void OnDomainIDChanged();
    partial void OnCountChanging(int value);
    partial void OnCountChanged();
    partial void OnDaysSinceInitiallyDiscoveredChanging(System.Nullable<short> value);
    partial void OnDaysSinceInitiallyDiscoveredChanged();
    partial void OnDaysSinceLastDiscoveredChanging(short value);
    partial void OnDaysSinceLastDiscoveredChanged();
    partial void OnStrengthChanging(System.Nullable<double> value);
    partial void OnStrengthChanged();
    partial void OnRankChanging(int value);
    partial void OnRankChanged();
    partial void OnDenseRankChanging(int value);
    partial void OnDenseRankChanged();
    partial void OnNTileChanging(short value);
    partial void OnNTileChanged();
    #endregion
		
		public Images_MOST_POPULAR_DOMAINS_BY_ABSOLUTEURI()
		{
			this._Domain = default(EntityRef<Domain>);
			OnCreated();
		}
		
		[Column(Storage="_RowNumber", DbType="Int NOT NULL")]
		public int RowNumber
		{
			get
			{
				return this._RowNumber;
			}
			set
			{
				if ((this._RowNumber != value))
				{
					this.OnRowNumberChanging(value);
					this.SendPropertyChanging();
					this._RowNumber = value;
					this.SendPropertyChanged("RowNumber");
					this.OnRowNumberChanged();
				}
			}
		}
		
		[Column(Storage="_InitiallyDiscovered", DbType="DateTime")]
		public System.Nullable<System.DateTime> InitiallyDiscovered
		{
			get
			{
				return this._InitiallyDiscovered;
			}
			set
			{
				if ((this._InitiallyDiscovered != value))
				{
					this.OnInitiallyDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._InitiallyDiscovered = value;
					this.SendPropertyChanged("InitiallyDiscovered");
					this.OnInitiallyDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_LastDiscovered", DbType="DateTime NOT NULL")]
		public System.DateTime LastDiscovered
		{
			get
			{
				return this._LastDiscovered;
			}
			set
			{
				if ((this._LastDiscovered != value))
				{
					this.OnLastDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._LastDiscovered = value;
					this.SendPropertyChanged("LastDiscovered");
					this.OnLastDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_DomainID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int DomainID
		{
			get
			{
				return this._DomainID;
			}
			set
			{
				if ((this._DomainID != value))
				{
					if (this._Domain.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDomainIDChanging(value);
					this.SendPropertyChanging();
					this._DomainID = value;
					this.SendPropertyChanged("DomainID");
					this.OnDomainIDChanged();
				}
			}
		}
		
		[Column(Storage="_Count", DbType="Int NOT NULL")]
		public int Count
		{
			get
			{
				return this._Count;
			}
			set
			{
				if ((this._Count != value))
				{
					this.OnCountChanging(value);
					this.SendPropertyChanging();
					this._Count = value;
					this.SendPropertyChanged("Count");
					this.OnCountChanged();
				}
			}
		}
		
		[Column(Storage="_DaysSinceInitiallyDiscovered", DbType="SmallInt")]
		public System.Nullable<short> DaysSinceInitiallyDiscovered
		{
			get
			{
				return this._DaysSinceInitiallyDiscovered;
			}
			set
			{
				if ((this._DaysSinceInitiallyDiscovered != value))
				{
					this.OnDaysSinceInitiallyDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._DaysSinceInitiallyDiscovered = value;
					this.SendPropertyChanged("DaysSinceInitiallyDiscovered");
					this.OnDaysSinceInitiallyDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_DaysSinceLastDiscovered", DbType="SmallInt NOT NULL")]
		public short DaysSinceLastDiscovered
		{
			get
			{
				return this._DaysSinceLastDiscovered;
			}
			set
			{
				if ((this._DaysSinceLastDiscovered != value))
				{
					this.OnDaysSinceLastDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._DaysSinceLastDiscovered = value;
					this.SendPropertyChanged("DaysSinceLastDiscovered");
					this.OnDaysSinceLastDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_Strength", DbType="Float")]
		public System.Nullable<double> Strength
		{
			get
			{
				return this._Strength;
			}
			set
			{
				if ((this._Strength != value))
				{
					this.OnStrengthChanging(value);
					this.SendPropertyChanging();
					this._Strength = value;
					this.SendPropertyChanged("Strength");
					this.OnStrengthChanged();
				}
			}
		}
		
		[Column(Storage="_Rank", DbType="Int NOT NULL")]
		public int Rank
		{
			get
			{
				return this._Rank;
			}
			set
			{
				if ((this._Rank != value))
				{
					this.OnRankChanging(value);
					this.SendPropertyChanging();
					this._Rank = value;
					this.SendPropertyChanged("Rank");
					this.OnRankChanged();
				}
			}
		}
		
		[Column(Storage="_DenseRank", DbType="Int NOT NULL")]
		public int DenseRank
		{
			get
			{
				return this._DenseRank;
			}
			set
			{
				if ((this._DenseRank != value))
				{
					this.OnDenseRankChanging(value);
					this.SendPropertyChanging();
					this._DenseRank = value;
					this.SendPropertyChanged("DenseRank");
					this.OnDenseRankChanged();
				}
			}
		}
		
		[Column(Storage="_NTile", DbType="SmallInt NOT NULL")]
		public short NTile
		{
			get
			{
				return this._NTile;
			}
			set
			{
				if ((this._NTile != value))
				{
					this.OnNTileChanging(value);
					this.SendPropertyChanging();
					this._NTile = value;
					this.SendPropertyChanged("NTile");
					this.OnNTileChanged();
				}
			}
		}
		
		[Association(Name="Domain_Images_MOST_POPULAR_DOMAINS_BY_ABSOLUTEURI", Storage="_Domain", ThisKey="DomainID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Domain Domain
		{
			get
			{
				return this._Domain.Entity;
			}
			set
			{
				Domain previousValue = this._Domain.Entity;
				if (((previousValue != value) 
							|| (this._Domain.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Domain.Entity = null;
						previousValue.Images_MOST_POPULAR_DOMAINS_BY_ABSOLUTEURI = null;
					}
					this._Domain.Entity = value;
					if ((value != null))
					{
						value.Images_MOST_POPULAR_DOMAINS_BY_ABSOLUTEURI = this;
						this._DomainID = value.ID;
					}
					else
					{
						this._DomainID = default(int);
					}
					this.SendPropertyChanged("Domain");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="rpt.Images_MOST_POPULAR_DOMAINS_BY_DOMAINS")]
	public partial class Images_MOST_POPULAR_DOMAINS_BY_DOMAIN : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RowNumber;
		
		private System.Nullable<System.DateTime> _InitiallyDiscovered;
		
		private System.DateTime _LastDiscovered;
		
		private int _DomainID;
		
		private int _Count;
		
		private System.Nullable<short> _DaysSinceInitiallyDiscovered;
		
		private short _DaysSinceLastDiscovered;
		
		private System.Nullable<double> _Strength;
		
		private int _Rank;
		
		private int _DenseRank;
		
		private byte _NTile;
		
		private EntityRef<Domain> _Domain;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRowNumberChanging(int value);
    partial void OnRowNumberChanged();
    partial void OnInitiallyDiscoveredChanging(System.Nullable<System.DateTime> value);
    partial void OnInitiallyDiscoveredChanged();
    partial void OnLastDiscoveredChanging(System.DateTime value);
    partial void OnLastDiscoveredChanged();
    partial void OnDomainIDChanging(int value);
    partial void OnDomainIDChanged();
    partial void OnCountChanging(int value);
    partial void OnCountChanged();
    partial void OnDaysSinceInitiallyDiscoveredChanging(System.Nullable<short> value);
    partial void OnDaysSinceInitiallyDiscoveredChanged();
    partial void OnDaysSinceLastDiscoveredChanging(short value);
    partial void OnDaysSinceLastDiscoveredChanged();
    partial void OnStrengthChanging(System.Nullable<double> value);
    partial void OnStrengthChanged();
    partial void OnRankChanging(int value);
    partial void OnRankChanged();
    partial void OnDenseRankChanging(int value);
    partial void OnDenseRankChanged();
    partial void OnNTileChanging(byte value);
    partial void OnNTileChanged();
    #endregion
		
		public Images_MOST_POPULAR_DOMAINS_BY_DOMAIN()
		{
			this._Domain = default(EntityRef<Domain>);
			OnCreated();
		}
		
		[Column(Storage="_RowNumber", DbType="Int NOT NULL")]
		public int RowNumber
		{
			get
			{
				return this._RowNumber;
			}
			set
			{
				if ((this._RowNumber != value))
				{
					this.OnRowNumberChanging(value);
					this.SendPropertyChanging();
					this._RowNumber = value;
					this.SendPropertyChanged("RowNumber");
					this.OnRowNumberChanged();
				}
			}
		}
		
		[Column(Storage="_InitiallyDiscovered", DbType="DateTime")]
		public System.Nullable<System.DateTime> InitiallyDiscovered
		{
			get
			{
				return this._InitiallyDiscovered;
			}
			set
			{
				if ((this._InitiallyDiscovered != value))
				{
					this.OnInitiallyDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._InitiallyDiscovered = value;
					this.SendPropertyChanged("InitiallyDiscovered");
					this.OnInitiallyDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_LastDiscovered", DbType="DateTime NOT NULL")]
		public System.DateTime LastDiscovered
		{
			get
			{
				return this._LastDiscovered;
			}
			set
			{
				if ((this._LastDiscovered != value))
				{
					this.OnLastDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._LastDiscovered = value;
					this.SendPropertyChanged("LastDiscovered");
					this.OnLastDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_DomainID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int DomainID
		{
			get
			{
				return this._DomainID;
			}
			set
			{
				if ((this._DomainID != value))
				{
					if (this._Domain.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDomainIDChanging(value);
					this.SendPropertyChanging();
					this._DomainID = value;
					this.SendPropertyChanged("DomainID");
					this.OnDomainIDChanged();
				}
			}
		}
		
		[Column(Storage="_Count", DbType="Int NOT NULL")]
		public int Count
		{
			get
			{
				return this._Count;
			}
			set
			{
				if ((this._Count != value))
				{
					this.OnCountChanging(value);
					this.SendPropertyChanging();
					this._Count = value;
					this.SendPropertyChanged("Count");
					this.OnCountChanged();
				}
			}
		}
		
		[Column(Storage="_DaysSinceInitiallyDiscovered", DbType="SmallInt")]
		public System.Nullable<short> DaysSinceInitiallyDiscovered
		{
			get
			{
				return this._DaysSinceInitiallyDiscovered;
			}
			set
			{
				if ((this._DaysSinceInitiallyDiscovered != value))
				{
					this.OnDaysSinceInitiallyDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._DaysSinceInitiallyDiscovered = value;
					this.SendPropertyChanged("DaysSinceInitiallyDiscovered");
					this.OnDaysSinceInitiallyDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_DaysSinceLastDiscovered", DbType="SmallInt NOT NULL")]
		public short DaysSinceLastDiscovered
		{
			get
			{
				return this._DaysSinceLastDiscovered;
			}
			set
			{
				if ((this._DaysSinceLastDiscovered != value))
				{
					this.OnDaysSinceLastDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._DaysSinceLastDiscovered = value;
					this.SendPropertyChanged("DaysSinceLastDiscovered");
					this.OnDaysSinceLastDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_Strength", DbType="Float")]
		public System.Nullable<double> Strength
		{
			get
			{
				return this._Strength;
			}
			set
			{
				if ((this._Strength != value))
				{
					this.OnStrengthChanging(value);
					this.SendPropertyChanging();
					this._Strength = value;
					this.SendPropertyChanged("Strength");
					this.OnStrengthChanged();
				}
			}
		}
		
		[Column(Storage="_Rank", DbType="Int NOT NULL")]
		public int Rank
		{
			get
			{
				return this._Rank;
			}
			set
			{
				if ((this._Rank != value))
				{
					this.OnRankChanging(value);
					this.SendPropertyChanging();
					this._Rank = value;
					this.SendPropertyChanged("Rank");
					this.OnRankChanged();
				}
			}
		}
		
		[Column(Storage="_DenseRank", DbType="Int NOT NULL")]
		public int DenseRank
		{
			get
			{
				return this._DenseRank;
			}
			set
			{
				if ((this._DenseRank != value))
				{
					this.OnDenseRankChanging(value);
					this.SendPropertyChanging();
					this._DenseRank = value;
					this.SendPropertyChanged("DenseRank");
					this.OnDenseRankChanged();
				}
			}
		}
		
		[Column(Storage="_NTile", DbType="TinyInt NOT NULL")]
		public byte NTile
		{
			get
			{
				return this._NTile;
			}
			set
			{
				if ((this._NTile != value))
				{
					this.OnNTileChanging(value);
					this.SendPropertyChanging();
					this._NTile = value;
					this.SendPropertyChanged("NTile");
					this.OnNTileChanged();
				}
			}
		}
		
		[Association(Name="Domain_Images_MOST_POPULAR_DOMAINS_BY_DOMAIN", Storage="_Domain", ThisKey="DomainID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Domain Domain
		{
			get
			{
				return this._Domain.Entity;
			}
			set
			{
				Domain previousValue = this._Domain.Entity;
				if (((previousValue != value) 
							|| (this._Domain.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Domain.Entity = null;
						previousValue.Images_MOST_POPULAR_DOMAINS_BY_DOMAIN = null;
					}
					this._Domain.Entity = value;
					if ((value != null))
					{
						value.Images_MOST_POPULAR_DOMAINS_BY_DOMAIN = this;
						this._DomainID = value.ID;
					}
					else
					{
						this._DomainID = default(int);
					}
					this.SendPropertyChanged("Domain");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="rpt.Images_MOST_POPULAR_DOMAINS_BY_EXTENSIONS")]
	public partial class Images_MOST_POPULAR_DOMAINS_BY_EXTENSION : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RowNumber;
		
		private System.Nullable<System.DateTime> _InitiallyDiscovered;
		
		private System.DateTime _LastDiscovered;
		
		private int _DomainID;
		
		private int _Count;
		
		private System.Nullable<short> _DaysSinceInitiallyDiscovered;
		
		private short _DaysSinceLastDiscovered;
		
		private System.Nullable<double> _Strength;
		
		private int _Rank;
		
		private int _DenseRank;
		
		private byte _NTile;
		
		private EntityRef<Domain> _Domain;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRowNumberChanging(int value);
    partial void OnRowNumberChanged();
    partial void OnInitiallyDiscoveredChanging(System.Nullable<System.DateTime> value);
    partial void OnInitiallyDiscoveredChanged();
    partial void OnLastDiscoveredChanging(System.DateTime value);
    partial void OnLastDiscoveredChanged();
    partial void OnDomainIDChanging(int value);
    partial void OnDomainIDChanged();
    partial void OnCountChanging(int value);
    partial void OnCountChanged();
    partial void OnDaysSinceInitiallyDiscoveredChanging(System.Nullable<short> value);
    partial void OnDaysSinceInitiallyDiscoveredChanged();
    partial void OnDaysSinceLastDiscoveredChanging(short value);
    partial void OnDaysSinceLastDiscoveredChanged();
    partial void OnStrengthChanging(System.Nullable<double> value);
    partial void OnStrengthChanged();
    partial void OnRankChanging(int value);
    partial void OnRankChanged();
    partial void OnDenseRankChanging(int value);
    partial void OnDenseRankChanged();
    partial void OnNTileChanging(byte value);
    partial void OnNTileChanged();
    #endregion
		
		public Images_MOST_POPULAR_DOMAINS_BY_EXTENSION()
		{
			this._Domain = default(EntityRef<Domain>);
			OnCreated();
		}
		
		[Column(Storage="_RowNumber", DbType="Int NOT NULL")]
		public int RowNumber
		{
			get
			{
				return this._RowNumber;
			}
			set
			{
				if ((this._RowNumber != value))
				{
					this.OnRowNumberChanging(value);
					this.SendPropertyChanging();
					this._RowNumber = value;
					this.SendPropertyChanged("RowNumber");
					this.OnRowNumberChanged();
				}
			}
		}
		
		[Column(Storage="_InitiallyDiscovered", DbType="DateTime")]
		public System.Nullable<System.DateTime> InitiallyDiscovered
		{
			get
			{
				return this._InitiallyDiscovered;
			}
			set
			{
				if ((this._InitiallyDiscovered != value))
				{
					this.OnInitiallyDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._InitiallyDiscovered = value;
					this.SendPropertyChanged("InitiallyDiscovered");
					this.OnInitiallyDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_LastDiscovered", DbType="DateTime NOT NULL")]
		public System.DateTime LastDiscovered
		{
			get
			{
				return this._LastDiscovered;
			}
			set
			{
				if ((this._LastDiscovered != value))
				{
					this.OnLastDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._LastDiscovered = value;
					this.SendPropertyChanged("LastDiscovered");
					this.OnLastDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_DomainID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int DomainID
		{
			get
			{
				return this._DomainID;
			}
			set
			{
				if ((this._DomainID != value))
				{
					if (this._Domain.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDomainIDChanging(value);
					this.SendPropertyChanging();
					this._DomainID = value;
					this.SendPropertyChanged("DomainID");
					this.OnDomainIDChanged();
				}
			}
		}
		
		[Column(Storage="_Count", DbType="Int NOT NULL")]
		public int Count
		{
			get
			{
				return this._Count;
			}
			set
			{
				if ((this._Count != value))
				{
					this.OnCountChanging(value);
					this.SendPropertyChanging();
					this._Count = value;
					this.SendPropertyChanged("Count");
					this.OnCountChanged();
				}
			}
		}
		
		[Column(Storage="_DaysSinceInitiallyDiscovered", DbType="SmallInt")]
		public System.Nullable<short> DaysSinceInitiallyDiscovered
		{
			get
			{
				return this._DaysSinceInitiallyDiscovered;
			}
			set
			{
				if ((this._DaysSinceInitiallyDiscovered != value))
				{
					this.OnDaysSinceInitiallyDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._DaysSinceInitiallyDiscovered = value;
					this.SendPropertyChanged("DaysSinceInitiallyDiscovered");
					this.OnDaysSinceInitiallyDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_DaysSinceLastDiscovered", DbType="SmallInt NOT NULL")]
		public short DaysSinceLastDiscovered
		{
			get
			{
				return this._DaysSinceLastDiscovered;
			}
			set
			{
				if ((this._DaysSinceLastDiscovered != value))
				{
					this.OnDaysSinceLastDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._DaysSinceLastDiscovered = value;
					this.SendPropertyChanged("DaysSinceLastDiscovered");
					this.OnDaysSinceLastDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_Strength", DbType="Float")]
		public System.Nullable<double> Strength
		{
			get
			{
				return this._Strength;
			}
			set
			{
				if ((this._Strength != value))
				{
					this.OnStrengthChanging(value);
					this.SendPropertyChanging();
					this._Strength = value;
					this.SendPropertyChanged("Strength");
					this.OnStrengthChanged();
				}
			}
		}
		
		[Column(Storage="_Rank", DbType="Int NOT NULL")]
		public int Rank
		{
			get
			{
				return this._Rank;
			}
			set
			{
				if ((this._Rank != value))
				{
					this.OnRankChanging(value);
					this.SendPropertyChanging();
					this._Rank = value;
					this.SendPropertyChanged("Rank");
					this.OnRankChanged();
				}
			}
		}
		
		[Column(Storage="_DenseRank", DbType="Int NOT NULL")]
		public int DenseRank
		{
			get
			{
				return this._DenseRank;
			}
			set
			{
				if ((this._DenseRank != value))
				{
					this.OnDenseRankChanging(value);
					this.SendPropertyChanging();
					this._DenseRank = value;
					this.SendPropertyChanged("DenseRank");
					this.OnDenseRankChanged();
				}
			}
		}
		
		[Column(Storage="_NTile", DbType="TinyInt NOT NULL")]
		public byte NTile
		{
			get
			{
				return this._NTile;
			}
			set
			{
				if ((this._NTile != value))
				{
					this.OnNTileChanging(value);
					this.SendPropertyChanging();
					this._NTile = value;
					this.SendPropertyChanged("NTile");
					this.OnNTileChanged();
				}
			}
		}
		
		[Association(Name="Domain_Images_MOST_POPULAR_DOMAINS_BY_EXTENSION", Storage="_Domain", ThisKey="DomainID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Domain Domain
		{
			get
			{
				return this._Domain.Entity;
			}
			set
			{
				Domain previousValue = this._Domain.Entity;
				if (((previousValue != value) 
							|| (this._Domain.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Domain.Entity = null;
						previousValue.Images_MOST_POPULAR_DOMAINS_BY_EXTENSION = null;
					}
					this._Domain.Entity = value;
					if ((value != null))
					{
						value.Images_MOST_POPULAR_DOMAINS_BY_EXTENSION = this;
						this._DomainID = value.ID;
					}
					else
					{
						this._DomainID = default(int);
					}
					this.SendPropertyChanged("Domain");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="rpt.Images_MOST_POPULAR_DOMAINS_BY_HOSTS")]
	public partial class Images_MOST_POPULAR_DOMAINS_BY_HOST : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RowNumber;
		
		private System.Nullable<System.DateTime> _InitiallyDiscovered;
		
		private System.DateTime _LastDiscovered;
		
		private int _DomainID;
		
		private int _Count;
		
		private System.Nullable<short> _DaysSinceInitiallyDiscovered;
		
		private short _DaysSinceLastDiscovered;
		
		private System.Nullable<double> _Strength;
		
		private int _Rank;
		
		private int _DenseRank;
		
		private byte _NTile;
		
		private EntityRef<Domain> _Domain;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRowNumberChanging(int value);
    partial void OnRowNumberChanged();
    partial void OnInitiallyDiscoveredChanging(System.Nullable<System.DateTime> value);
    partial void OnInitiallyDiscoveredChanged();
    partial void OnLastDiscoveredChanging(System.DateTime value);
    partial void OnLastDiscoveredChanged();
    partial void OnDomainIDChanging(int value);
    partial void OnDomainIDChanged();
    partial void OnCountChanging(int value);
    partial void OnCountChanged();
    partial void OnDaysSinceInitiallyDiscoveredChanging(System.Nullable<short> value);
    partial void OnDaysSinceInitiallyDiscoveredChanged();
    partial void OnDaysSinceLastDiscoveredChanging(short value);
    partial void OnDaysSinceLastDiscoveredChanged();
    partial void OnStrengthChanging(System.Nullable<double> value);
    partial void OnStrengthChanged();
    partial void OnRankChanging(int value);
    partial void OnRankChanged();
    partial void OnDenseRankChanging(int value);
    partial void OnDenseRankChanged();
    partial void OnNTileChanging(byte value);
    partial void OnNTileChanged();
    #endregion
		
		public Images_MOST_POPULAR_DOMAINS_BY_HOST()
		{
			this._Domain = default(EntityRef<Domain>);
			OnCreated();
		}
		
		[Column(Storage="_RowNumber", DbType="Int NOT NULL")]
		public int RowNumber
		{
			get
			{
				return this._RowNumber;
			}
			set
			{
				if ((this._RowNumber != value))
				{
					this.OnRowNumberChanging(value);
					this.SendPropertyChanging();
					this._RowNumber = value;
					this.SendPropertyChanged("RowNumber");
					this.OnRowNumberChanged();
				}
			}
		}
		
		[Column(Storage="_InitiallyDiscovered", DbType="DateTime")]
		public System.Nullable<System.DateTime> InitiallyDiscovered
		{
			get
			{
				return this._InitiallyDiscovered;
			}
			set
			{
				if ((this._InitiallyDiscovered != value))
				{
					this.OnInitiallyDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._InitiallyDiscovered = value;
					this.SendPropertyChanged("InitiallyDiscovered");
					this.OnInitiallyDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_LastDiscovered", DbType="DateTime NOT NULL")]
		public System.DateTime LastDiscovered
		{
			get
			{
				return this._LastDiscovered;
			}
			set
			{
				if ((this._LastDiscovered != value))
				{
					this.OnLastDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._LastDiscovered = value;
					this.SendPropertyChanged("LastDiscovered");
					this.OnLastDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_DomainID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int DomainID
		{
			get
			{
				return this._DomainID;
			}
			set
			{
				if ((this._DomainID != value))
				{
					if (this._Domain.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDomainIDChanging(value);
					this.SendPropertyChanging();
					this._DomainID = value;
					this.SendPropertyChanged("DomainID");
					this.OnDomainIDChanged();
				}
			}
		}
		
		[Column(Storage="_Count", DbType="Int NOT NULL")]
		public int Count
		{
			get
			{
				return this._Count;
			}
			set
			{
				if ((this._Count != value))
				{
					this.OnCountChanging(value);
					this.SendPropertyChanging();
					this._Count = value;
					this.SendPropertyChanged("Count");
					this.OnCountChanged();
				}
			}
		}
		
		[Column(Storage="_DaysSinceInitiallyDiscovered", DbType="SmallInt")]
		public System.Nullable<short> DaysSinceInitiallyDiscovered
		{
			get
			{
				return this._DaysSinceInitiallyDiscovered;
			}
			set
			{
				if ((this._DaysSinceInitiallyDiscovered != value))
				{
					this.OnDaysSinceInitiallyDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._DaysSinceInitiallyDiscovered = value;
					this.SendPropertyChanged("DaysSinceInitiallyDiscovered");
					this.OnDaysSinceInitiallyDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_DaysSinceLastDiscovered", DbType="SmallInt NOT NULL")]
		public short DaysSinceLastDiscovered
		{
			get
			{
				return this._DaysSinceLastDiscovered;
			}
			set
			{
				if ((this._DaysSinceLastDiscovered != value))
				{
					this.OnDaysSinceLastDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._DaysSinceLastDiscovered = value;
					this.SendPropertyChanged("DaysSinceLastDiscovered");
					this.OnDaysSinceLastDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_Strength", DbType="Float")]
		public System.Nullable<double> Strength
		{
			get
			{
				return this._Strength;
			}
			set
			{
				if ((this._Strength != value))
				{
					this.OnStrengthChanging(value);
					this.SendPropertyChanging();
					this._Strength = value;
					this.SendPropertyChanged("Strength");
					this.OnStrengthChanged();
				}
			}
		}
		
		[Column(Storage="_Rank", DbType="Int NOT NULL")]
		public int Rank
		{
			get
			{
				return this._Rank;
			}
			set
			{
				if ((this._Rank != value))
				{
					this.OnRankChanging(value);
					this.SendPropertyChanging();
					this._Rank = value;
					this.SendPropertyChanged("Rank");
					this.OnRankChanged();
				}
			}
		}
		
		[Column(Storage="_DenseRank", DbType="Int NOT NULL")]
		public int DenseRank
		{
			get
			{
				return this._DenseRank;
			}
			set
			{
				if ((this._DenseRank != value))
				{
					this.OnDenseRankChanging(value);
					this.SendPropertyChanging();
					this._DenseRank = value;
					this.SendPropertyChanged("DenseRank");
					this.OnDenseRankChanged();
				}
			}
		}
		
		[Column(Storage="_NTile", DbType="TinyInt NOT NULL")]
		public byte NTile
		{
			get
			{
				return this._NTile;
			}
			set
			{
				if ((this._NTile != value))
				{
					this.OnNTileChanging(value);
					this.SendPropertyChanging();
					this._NTile = value;
					this.SendPropertyChanged("NTile");
					this.OnNTileChanged();
				}
			}
		}
		
		[Association(Name="Domain_Images_MOST_POPULAR_DOMAINS_BY_HOST", Storage="_Domain", ThisKey="DomainID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Domain Domain
		{
			get
			{
				return this._Domain.Entity;
			}
			set
			{
				Domain previousValue = this._Domain.Entity;
				if (((previousValue != value) 
							|| (this._Domain.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Domain.Entity = null;
						previousValue.Images_MOST_POPULAR_DOMAINS_BY_HOST = null;
					}
					this._Domain.Entity = value;
					if ((value != null))
					{
						value.Images_MOST_POPULAR_DOMAINS_BY_HOST = this;
						this._DomainID = value.ID;
					}
					else
					{
						this._DomainID = default(int);
					}
					this.SendPropertyChanged("Domain");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="rpt.Images_MOST_POPULAR_DOMAINS_BY_SCHEMES")]
	public partial class Images_MOST_POPULAR_DOMAINS_BY_SCHEME : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RowNumber;
		
		private System.Nullable<System.DateTime> _InitiallyDiscovered;
		
		private System.DateTime _LastDiscovered;
		
		private int _DomainID;
		
		private int _Count;
		
		private System.Nullable<short> _DaysSinceInitiallyDiscovered;
		
		private short _DaysSinceLastDiscovered;
		
		private System.Nullable<double> _Strength;
		
		private int _Rank;
		
		private int _DenseRank;
		
		private byte _NTile;
		
		private EntityRef<Domain> _Domain;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRowNumberChanging(int value);
    partial void OnRowNumberChanged();
    partial void OnInitiallyDiscoveredChanging(System.Nullable<System.DateTime> value);
    partial void OnInitiallyDiscoveredChanged();
    partial void OnLastDiscoveredChanging(System.DateTime value);
    partial void OnLastDiscoveredChanged();
    partial void OnDomainIDChanging(int value);
    partial void OnDomainIDChanged();
    partial void OnCountChanging(int value);
    partial void OnCountChanged();
    partial void OnDaysSinceInitiallyDiscoveredChanging(System.Nullable<short> value);
    partial void OnDaysSinceInitiallyDiscoveredChanged();
    partial void OnDaysSinceLastDiscoveredChanging(short value);
    partial void OnDaysSinceLastDiscoveredChanged();
    partial void OnStrengthChanging(System.Nullable<double> value);
    partial void OnStrengthChanged();
    partial void OnRankChanging(int value);
    partial void OnRankChanged();
    partial void OnDenseRankChanging(int value);
    partial void OnDenseRankChanged();
    partial void OnNTileChanging(byte value);
    partial void OnNTileChanged();
    #endregion
		
		public Images_MOST_POPULAR_DOMAINS_BY_SCHEME()
		{
			this._Domain = default(EntityRef<Domain>);
			OnCreated();
		}
		
		[Column(Storage="_RowNumber", DbType="Int NOT NULL")]
		public int RowNumber
		{
			get
			{
				return this._RowNumber;
			}
			set
			{
				if ((this._RowNumber != value))
				{
					this.OnRowNumberChanging(value);
					this.SendPropertyChanging();
					this._RowNumber = value;
					this.SendPropertyChanged("RowNumber");
					this.OnRowNumberChanged();
				}
			}
		}
		
		[Column(Storage="_InitiallyDiscovered", DbType="DateTime")]
		public System.Nullable<System.DateTime> InitiallyDiscovered
		{
			get
			{
				return this._InitiallyDiscovered;
			}
			set
			{
				if ((this._InitiallyDiscovered != value))
				{
					this.OnInitiallyDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._InitiallyDiscovered = value;
					this.SendPropertyChanged("InitiallyDiscovered");
					this.OnInitiallyDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_LastDiscovered", DbType="DateTime NOT NULL")]
		public System.DateTime LastDiscovered
		{
			get
			{
				return this._LastDiscovered;
			}
			set
			{
				if ((this._LastDiscovered != value))
				{
					this.OnLastDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._LastDiscovered = value;
					this.SendPropertyChanged("LastDiscovered");
					this.OnLastDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_DomainID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int DomainID
		{
			get
			{
				return this._DomainID;
			}
			set
			{
				if ((this._DomainID != value))
				{
					if (this._Domain.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDomainIDChanging(value);
					this.SendPropertyChanging();
					this._DomainID = value;
					this.SendPropertyChanged("DomainID");
					this.OnDomainIDChanged();
				}
			}
		}
		
		[Column(Storage="_Count", DbType="Int NOT NULL")]
		public int Count
		{
			get
			{
				return this._Count;
			}
			set
			{
				if ((this._Count != value))
				{
					this.OnCountChanging(value);
					this.SendPropertyChanging();
					this._Count = value;
					this.SendPropertyChanged("Count");
					this.OnCountChanged();
				}
			}
		}
		
		[Column(Storage="_DaysSinceInitiallyDiscovered", DbType="SmallInt")]
		public System.Nullable<short> DaysSinceInitiallyDiscovered
		{
			get
			{
				return this._DaysSinceInitiallyDiscovered;
			}
			set
			{
				if ((this._DaysSinceInitiallyDiscovered != value))
				{
					this.OnDaysSinceInitiallyDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._DaysSinceInitiallyDiscovered = value;
					this.SendPropertyChanged("DaysSinceInitiallyDiscovered");
					this.OnDaysSinceInitiallyDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_DaysSinceLastDiscovered", DbType="SmallInt NOT NULL")]
		public short DaysSinceLastDiscovered
		{
			get
			{
				return this._DaysSinceLastDiscovered;
			}
			set
			{
				if ((this._DaysSinceLastDiscovered != value))
				{
					this.OnDaysSinceLastDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._DaysSinceLastDiscovered = value;
					this.SendPropertyChanged("DaysSinceLastDiscovered");
					this.OnDaysSinceLastDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_Strength", DbType="Float")]
		public System.Nullable<double> Strength
		{
			get
			{
				return this._Strength;
			}
			set
			{
				if ((this._Strength != value))
				{
					this.OnStrengthChanging(value);
					this.SendPropertyChanging();
					this._Strength = value;
					this.SendPropertyChanged("Strength");
					this.OnStrengthChanged();
				}
			}
		}
		
		[Column(Storage="_Rank", DbType="Int NOT NULL")]
		public int Rank
		{
			get
			{
				return this._Rank;
			}
			set
			{
				if ((this._Rank != value))
				{
					this.OnRankChanging(value);
					this.SendPropertyChanging();
					this._Rank = value;
					this.SendPropertyChanged("Rank");
					this.OnRankChanged();
				}
			}
		}
		
		[Column(Storage="_DenseRank", DbType="Int NOT NULL")]
		public int DenseRank
		{
			get
			{
				return this._DenseRank;
			}
			set
			{
				if ((this._DenseRank != value))
				{
					this.OnDenseRankChanging(value);
					this.SendPropertyChanging();
					this._DenseRank = value;
					this.SendPropertyChanged("DenseRank");
					this.OnDenseRankChanged();
				}
			}
		}
		
		[Column(Storage="_NTile", DbType="TinyInt NOT NULL")]
		public byte NTile
		{
			get
			{
				return this._NTile;
			}
			set
			{
				if ((this._NTile != value))
				{
					this.OnNTileChanging(value);
					this.SendPropertyChanging();
					this._NTile = value;
					this.SendPropertyChanged("NTile");
					this.OnNTileChanged();
				}
			}
		}
		
		[Association(Name="Domain_Images_MOST_POPULAR_DOMAINS_BY_SCHEME", Storage="_Domain", ThisKey="DomainID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Domain Domain
		{
			get
			{
				return this._Domain.Entity;
			}
			set
			{
				Domain previousValue = this._Domain.Entity;
				if (((previousValue != value) 
							|| (this._Domain.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Domain.Entity = null;
						previousValue.Images_MOST_POPULAR_DOMAINS_BY_SCHEME = null;
					}
					this._Domain.Entity = value;
					if ((value != null))
					{
						value.Images_MOST_POPULAR_DOMAINS_BY_SCHEME = this;
						this._DomainID = value.ID;
					}
					else
					{
						this._DomainID = default(int);
					}
					this.SendPropertyChanged("Domain");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="rpt.Images_MOST_POPULAR_EXTENSIONS_BY_ABSOLUTEURIS")]
	public partial class Images_MOST_POPULAR_EXTENSIONS_BY_ABSOLUTEURI : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RowNumber;
		
		private System.Nullable<System.DateTime> _InitiallyDiscovered;
		
		private System.DateTime _LastDiscovered;
		
		private int _ExtensionID;
		
		private int _Count;
		
		private System.Nullable<short> _DaysSinceInitiallyDiscovered;
		
		private short _DaysSinceLastDiscovered;
		
		private System.Nullable<double> _Strength;
		
		private int _Rank;
		
		private int _DenseRank;
		
		private byte _NTile;
		
		private EntityRef<Extension> _Extension;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRowNumberChanging(int value);
    partial void OnRowNumberChanged();
    partial void OnInitiallyDiscoveredChanging(System.Nullable<System.DateTime> value);
    partial void OnInitiallyDiscoveredChanged();
    partial void OnLastDiscoveredChanging(System.DateTime value);
    partial void OnLastDiscoveredChanged();
    partial void OnExtensionIDChanging(int value);
    partial void OnExtensionIDChanged();
    partial void OnCountChanging(int value);
    partial void OnCountChanged();
    partial void OnDaysSinceInitiallyDiscoveredChanging(System.Nullable<short> value);
    partial void OnDaysSinceInitiallyDiscoveredChanged();
    partial void OnDaysSinceLastDiscoveredChanging(short value);
    partial void OnDaysSinceLastDiscoveredChanged();
    partial void OnStrengthChanging(System.Nullable<double> value);
    partial void OnStrengthChanged();
    partial void OnRankChanging(int value);
    partial void OnRankChanged();
    partial void OnDenseRankChanging(int value);
    partial void OnDenseRankChanged();
    partial void OnNTileChanging(byte value);
    partial void OnNTileChanged();
    #endregion
		
		public Images_MOST_POPULAR_EXTENSIONS_BY_ABSOLUTEURI()
		{
			this._Extension = default(EntityRef<Extension>);
			OnCreated();
		}
		
		[Column(Storage="_RowNumber", DbType="Int NOT NULL")]
		public int RowNumber
		{
			get
			{
				return this._RowNumber;
			}
			set
			{
				if ((this._RowNumber != value))
				{
					this.OnRowNumberChanging(value);
					this.SendPropertyChanging();
					this._RowNumber = value;
					this.SendPropertyChanged("RowNumber");
					this.OnRowNumberChanged();
				}
			}
		}
		
		[Column(Storage="_InitiallyDiscovered", DbType="DateTime")]
		public System.Nullable<System.DateTime> InitiallyDiscovered
		{
			get
			{
				return this._InitiallyDiscovered;
			}
			set
			{
				if ((this._InitiallyDiscovered != value))
				{
					this.OnInitiallyDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._InitiallyDiscovered = value;
					this.SendPropertyChanged("InitiallyDiscovered");
					this.OnInitiallyDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_LastDiscovered", DbType="DateTime NOT NULL")]
		public System.DateTime LastDiscovered
		{
			get
			{
				return this._LastDiscovered;
			}
			set
			{
				if ((this._LastDiscovered != value))
				{
					this.OnLastDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._LastDiscovered = value;
					this.SendPropertyChanged("LastDiscovered");
					this.OnLastDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_ExtensionID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ExtensionID
		{
			get
			{
				return this._ExtensionID;
			}
			set
			{
				if ((this._ExtensionID != value))
				{
					if (this._Extension.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnExtensionIDChanging(value);
					this.SendPropertyChanging();
					this._ExtensionID = value;
					this.SendPropertyChanged("ExtensionID");
					this.OnExtensionIDChanged();
				}
			}
		}
		
		[Column(Storage="_Count", DbType="Int NOT NULL")]
		public int Count
		{
			get
			{
				return this._Count;
			}
			set
			{
				if ((this._Count != value))
				{
					this.OnCountChanging(value);
					this.SendPropertyChanging();
					this._Count = value;
					this.SendPropertyChanged("Count");
					this.OnCountChanged();
				}
			}
		}
		
		[Column(Storage="_DaysSinceInitiallyDiscovered", DbType="SmallInt")]
		public System.Nullable<short> DaysSinceInitiallyDiscovered
		{
			get
			{
				return this._DaysSinceInitiallyDiscovered;
			}
			set
			{
				if ((this._DaysSinceInitiallyDiscovered != value))
				{
					this.OnDaysSinceInitiallyDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._DaysSinceInitiallyDiscovered = value;
					this.SendPropertyChanged("DaysSinceInitiallyDiscovered");
					this.OnDaysSinceInitiallyDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_DaysSinceLastDiscovered", DbType="SmallInt NOT NULL")]
		public short DaysSinceLastDiscovered
		{
			get
			{
				return this._DaysSinceLastDiscovered;
			}
			set
			{
				if ((this._DaysSinceLastDiscovered != value))
				{
					this.OnDaysSinceLastDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._DaysSinceLastDiscovered = value;
					this.SendPropertyChanged("DaysSinceLastDiscovered");
					this.OnDaysSinceLastDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_Strength", DbType="Float")]
		public System.Nullable<double> Strength
		{
			get
			{
				return this._Strength;
			}
			set
			{
				if ((this._Strength != value))
				{
					this.OnStrengthChanging(value);
					this.SendPropertyChanging();
					this._Strength = value;
					this.SendPropertyChanged("Strength");
					this.OnStrengthChanged();
				}
			}
		}
		
		[Column(Storage="_Rank", DbType="Int NOT NULL")]
		public int Rank
		{
			get
			{
				return this._Rank;
			}
			set
			{
				if ((this._Rank != value))
				{
					this.OnRankChanging(value);
					this.SendPropertyChanging();
					this._Rank = value;
					this.SendPropertyChanged("Rank");
					this.OnRankChanged();
				}
			}
		}
		
		[Column(Storage="_DenseRank", DbType="Int NOT NULL")]
		public int DenseRank
		{
			get
			{
				return this._DenseRank;
			}
			set
			{
				if ((this._DenseRank != value))
				{
					this.OnDenseRankChanging(value);
					this.SendPropertyChanging();
					this._DenseRank = value;
					this.SendPropertyChanged("DenseRank");
					this.OnDenseRankChanged();
				}
			}
		}
		
		[Column(Storage="_NTile", DbType="TinyInt NOT NULL")]
		public byte NTile
		{
			get
			{
				return this._NTile;
			}
			set
			{
				if ((this._NTile != value))
				{
					this.OnNTileChanging(value);
					this.SendPropertyChanging();
					this._NTile = value;
					this.SendPropertyChanged("NTile");
					this.OnNTileChanged();
				}
			}
		}
		
		[Association(Name="Extension_Images_MOST_POPULAR_EXTENSIONS_BY_ABSOLUTEURI", Storage="_Extension", ThisKey="ExtensionID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Extension Extension
		{
			get
			{
				return this._Extension.Entity;
			}
			set
			{
				Extension previousValue = this._Extension.Entity;
				if (((previousValue != value) 
							|| (this._Extension.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Extension.Entity = null;
						previousValue.Images_MOST_POPULAR_EXTENSIONS_BY_ABSOLUTEURI = null;
					}
					this._Extension.Entity = value;
					if ((value != null))
					{
						value.Images_MOST_POPULAR_EXTENSIONS_BY_ABSOLUTEURI = this;
						this._ExtensionID = value.ID;
					}
					else
					{
						this._ExtensionID = default(int);
					}
					this.SendPropertyChanged("Extension");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="rpt.Images_MOST_POPULAR_EXTENSIONS_BY_DOMAINS")]
	public partial class Images_MOST_POPULAR_EXTENSIONS_BY_DOMAIN : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RowNumber;
		
		private System.Nullable<System.DateTime> _InitiallyDiscovered;
		
		private System.DateTime _LastDiscovered;
		
		private int _ExtensionID;
		
		private int _Count;
		
		private System.Nullable<short> _DaysSinceInitiallyDiscovered;
		
		private short _DaysSinceLastDiscovered;
		
		private System.Nullable<double> _Strength;
		
		private int _Rank;
		
		private int _DenseRank;
		
		private byte _NTile;
		
		private EntityRef<Extension> _Extension;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRowNumberChanging(int value);
    partial void OnRowNumberChanged();
    partial void OnInitiallyDiscoveredChanging(System.Nullable<System.DateTime> value);
    partial void OnInitiallyDiscoveredChanged();
    partial void OnLastDiscoveredChanging(System.DateTime value);
    partial void OnLastDiscoveredChanged();
    partial void OnExtensionIDChanging(int value);
    partial void OnExtensionIDChanged();
    partial void OnCountChanging(int value);
    partial void OnCountChanged();
    partial void OnDaysSinceInitiallyDiscoveredChanging(System.Nullable<short> value);
    partial void OnDaysSinceInitiallyDiscoveredChanged();
    partial void OnDaysSinceLastDiscoveredChanging(short value);
    partial void OnDaysSinceLastDiscoveredChanged();
    partial void OnStrengthChanging(System.Nullable<double> value);
    partial void OnStrengthChanged();
    partial void OnRankChanging(int value);
    partial void OnRankChanged();
    partial void OnDenseRankChanging(int value);
    partial void OnDenseRankChanged();
    partial void OnNTileChanging(byte value);
    partial void OnNTileChanged();
    #endregion
		
		public Images_MOST_POPULAR_EXTENSIONS_BY_DOMAIN()
		{
			this._Extension = default(EntityRef<Extension>);
			OnCreated();
		}
		
		[Column(Storage="_RowNumber", DbType="Int NOT NULL")]
		public int RowNumber
		{
			get
			{
				return this._RowNumber;
			}
			set
			{
				if ((this._RowNumber != value))
				{
					this.OnRowNumberChanging(value);
					this.SendPropertyChanging();
					this._RowNumber = value;
					this.SendPropertyChanged("RowNumber");
					this.OnRowNumberChanged();
				}
			}
		}
		
		[Column(Storage="_InitiallyDiscovered", DbType="DateTime")]
		public System.Nullable<System.DateTime> InitiallyDiscovered
		{
			get
			{
				return this._InitiallyDiscovered;
			}
			set
			{
				if ((this._InitiallyDiscovered != value))
				{
					this.OnInitiallyDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._InitiallyDiscovered = value;
					this.SendPropertyChanged("InitiallyDiscovered");
					this.OnInitiallyDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_LastDiscovered", DbType="DateTime NOT NULL")]
		public System.DateTime LastDiscovered
		{
			get
			{
				return this._LastDiscovered;
			}
			set
			{
				if ((this._LastDiscovered != value))
				{
					this.OnLastDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._LastDiscovered = value;
					this.SendPropertyChanged("LastDiscovered");
					this.OnLastDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_ExtensionID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ExtensionID
		{
			get
			{
				return this._ExtensionID;
			}
			set
			{
				if ((this._ExtensionID != value))
				{
					if (this._Extension.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnExtensionIDChanging(value);
					this.SendPropertyChanging();
					this._ExtensionID = value;
					this.SendPropertyChanged("ExtensionID");
					this.OnExtensionIDChanged();
				}
			}
		}
		
		[Column(Storage="_Count", DbType="Int NOT NULL")]
		public int Count
		{
			get
			{
				return this._Count;
			}
			set
			{
				if ((this._Count != value))
				{
					this.OnCountChanging(value);
					this.SendPropertyChanging();
					this._Count = value;
					this.SendPropertyChanged("Count");
					this.OnCountChanged();
				}
			}
		}
		
		[Column(Storage="_DaysSinceInitiallyDiscovered", DbType="SmallInt")]
		public System.Nullable<short> DaysSinceInitiallyDiscovered
		{
			get
			{
				return this._DaysSinceInitiallyDiscovered;
			}
			set
			{
				if ((this._DaysSinceInitiallyDiscovered != value))
				{
					this.OnDaysSinceInitiallyDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._DaysSinceInitiallyDiscovered = value;
					this.SendPropertyChanged("DaysSinceInitiallyDiscovered");
					this.OnDaysSinceInitiallyDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_DaysSinceLastDiscovered", DbType="SmallInt NOT NULL")]
		public short DaysSinceLastDiscovered
		{
			get
			{
				return this._DaysSinceLastDiscovered;
			}
			set
			{
				if ((this._DaysSinceLastDiscovered != value))
				{
					this.OnDaysSinceLastDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._DaysSinceLastDiscovered = value;
					this.SendPropertyChanged("DaysSinceLastDiscovered");
					this.OnDaysSinceLastDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_Strength", DbType="Float")]
		public System.Nullable<double> Strength
		{
			get
			{
				return this._Strength;
			}
			set
			{
				if ((this._Strength != value))
				{
					this.OnStrengthChanging(value);
					this.SendPropertyChanging();
					this._Strength = value;
					this.SendPropertyChanged("Strength");
					this.OnStrengthChanged();
				}
			}
		}
		
		[Column(Storage="_Rank", DbType="Int NOT NULL")]
		public int Rank
		{
			get
			{
				return this._Rank;
			}
			set
			{
				if ((this._Rank != value))
				{
					this.OnRankChanging(value);
					this.SendPropertyChanging();
					this._Rank = value;
					this.SendPropertyChanged("Rank");
					this.OnRankChanged();
				}
			}
		}
		
		[Column(Storage="_DenseRank", DbType="Int NOT NULL")]
		public int DenseRank
		{
			get
			{
				return this._DenseRank;
			}
			set
			{
				if ((this._DenseRank != value))
				{
					this.OnDenseRankChanging(value);
					this.SendPropertyChanging();
					this._DenseRank = value;
					this.SendPropertyChanged("DenseRank");
					this.OnDenseRankChanged();
				}
			}
		}
		
		[Column(Storage="_NTile", DbType="TinyInt NOT NULL")]
		public byte NTile
		{
			get
			{
				return this._NTile;
			}
			set
			{
				if ((this._NTile != value))
				{
					this.OnNTileChanging(value);
					this.SendPropertyChanging();
					this._NTile = value;
					this.SendPropertyChanged("NTile");
					this.OnNTileChanged();
				}
			}
		}
		
		[Association(Name="Extension_Images_MOST_POPULAR_EXTENSIONS_BY_DOMAIN", Storage="_Extension", ThisKey="ExtensionID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Extension Extension
		{
			get
			{
				return this._Extension.Entity;
			}
			set
			{
				Extension previousValue = this._Extension.Entity;
				if (((previousValue != value) 
							|| (this._Extension.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Extension.Entity = null;
						previousValue.Images_MOST_POPULAR_EXTENSIONS_BY_DOMAIN = null;
					}
					this._Extension.Entity = value;
					if ((value != null))
					{
						value.Images_MOST_POPULAR_EXTENSIONS_BY_DOMAIN = this;
						this._ExtensionID = value.ID;
					}
					else
					{
						this._ExtensionID = default(int);
					}
					this.SendPropertyChanged("Extension");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="rpt.Images_MOST_POPULAR_EXTENSIONS_BY_EXTENSIONS")]
	public partial class Images_MOST_POPULAR_EXTENSIONS_BY_EXTENSION : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RowNumber;
		
		private System.Nullable<System.DateTime> _InitiallyDiscovered;
		
		private System.DateTime _LastDiscovered;
		
		private int _ExtensionID;
		
		private int _Count;
		
		private System.Nullable<short> _DaysSinceInitiallyDiscovered;
		
		private short _DaysSinceLastDiscovered;
		
		private System.Nullable<double> _Strength;
		
		private int _Rank;
		
		private int _DenseRank;
		
		private byte _NTile;
		
		private EntityRef<Extension> _Extension;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRowNumberChanging(int value);
    partial void OnRowNumberChanged();
    partial void OnInitiallyDiscoveredChanging(System.Nullable<System.DateTime> value);
    partial void OnInitiallyDiscoveredChanged();
    partial void OnLastDiscoveredChanging(System.DateTime value);
    partial void OnLastDiscoveredChanged();
    partial void OnExtensionIDChanging(int value);
    partial void OnExtensionIDChanged();
    partial void OnCountChanging(int value);
    partial void OnCountChanged();
    partial void OnDaysSinceInitiallyDiscoveredChanging(System.Nullable<short> value);
    partial void OnDaysSinceInitiallyDiscoveredChanged();
    partial void OnDaysSinceLastDiscoveredChanging(short value);
    partial void OnDaysSinceLastDiscoveredChanged();
    partial void OnStrengthChanging(System.Nullable<double> value);
    partial void OnStrengthChanged();
    partial void OnRankChanging(int value);
    partial void OnRankChanged();
    partial void OnDenseRankChanging(int value);
    partial void OnDenseRankChanged();
    partial void OnNTileChanging(byte value);
    partial void OnNTileChanged();
    #endregion
		
		public Images_MOST_POPULAR_EXTENSIONS_BY_EXTENSION()
		{
			this._Extension = default(EntityRef<Extension>);
			OnCreated();
		}
		
		[Column(Storage="_RowNumber", DbType="Int NOT NULL")]
		public int RowNumber
		{
			get
			{
				return this._RowNumber;
			}
			set
			{
				if ((this._RowNumber != value))
				{
					this.OnRowNumberChanging(value);
					this.SendPropertyChanging();
					this._RowNumber = value;
					this.SendPropertyChanged("RowNumber");
					this.OnRowNumberChanged();
				}
			}
		}
		
		[Column(Storage="_InitiallyDiscovered", DbType="DateTime")]
		public System.Nullable<System.DateTime> InitiallyDiscovered
		{
			get
			{
				return this._InitiallyDiscovered;
			}
			set
			{
				if ((this._InitiallyDiscovered != value))
				{
					this.OnInitiallyDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._InitiallyDiscovered = value;
					this.SendPropertyChanged("InitiallyDiscovered");
					this.OnInitiallyDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_LastDiscovered", DbType="DateTime NOT NULL")]
		public System.DateTime LastDiscovered
		{
			get
			{
				return this._LastDiscovered;
			}
			set
			{
				if ((this._LastDiscovered != value))
				{
					this.OnLastDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._LastDiscovered = value;
					this.SendPropertyChanged("LastDiscovered");
					this.OnLastDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_ExtensionID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ExtensionID
		{
			get
			{
				return this._ExtensionID;
			}
			set
			{
				if ((this._ExtensionID != value))
				{
					if (this._Extension.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnExtensionIDChanging(value);
					this.SendPropertyChanging();
					this._ExtensionID = value;
					this.SendPropertyChanged("ExtensionID");
					this.OnExtensionIDChanged();
				}
			}
		}
		
		[Column(Storage="_Count", DbType="Int NOT NULL")]
		public int Count
		{
			get
			{
				return this._Count;
			}
			set
			{
				if ((this._Count != value))
				{
					this.OnCountChanging(value);
					this.SendPropertyChanging();
					this._Count = value;
					this.SendPropertyChanged("Count");
					this.OnCountChanged();
				}
			}
		}
		
		[Column(Storage="_DaysSinceInitiallyDiscovered", DbType="SmallInt")]
		public System.Nullable<short> DaysSinceInitiallyDiscovered
		{
			get
			{
				return this._DaysSinceInitiallyDiscovered;
			}
			set
			{
				if ((this._DaysSinceInitiallyDiscovered != value))
				{
					this.OnDaysSinceInitiallyDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._DaysSinceInitiallyDiscovered = value;
					this.SendPropertyChanged("DaysSinceInitiallyDiscovered");
					this.OnDaysSinceInitiallyDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_DaysSinceLastDiscovered", DbType="SmallInt NOT NULL")]
		public short DaysSinceLastDiscovered
		{
			get
			{
				return this._DaysSinceLastDiscovered;
			}
			set
			{
				if ((this._DaysSinceLastDiscovered != value))
				{
					this.OnDaysSinceLastDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._DaysSinceLastDiscovered = value;
					this.SendPropertyChanged("DaysSinceLastDiscovered");
					this.OnDaysSinceLastDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_Strength", DbType="Float")]
		public System.Nullable<double> Strength
		{
			get
			{
				return this._Strength;
			}
			set
			{
				if ((this._Strength != value))
				{
					this.OnStrengthChanging(value);
					this.SendPropertyChanging();
					this._Strength = value;
					this.SendPropertyChanged("Strength");
					this.OnStrengthChanged();
				}
			}
		}
		
		[Column(Storage="_Rank", DbType="Int NOT NULL")]
		public int Rank
		{
			get
			{
				return this._Rank;
			}
			set
			{
				if ((this._Rank != value))
				{
					this.OnRankChanging(value);
					this.SendPropertyChanging();
					this._Rank = value;
					this.SendPropertyChanged("Rank");
					this.OnRankChanged();
				}
			}
		}
		
		[Column(Storage="_DenseRank", DbType="Int NOT NULL")]
		public int DenseRank
		{
			get
			{
				return this._DenseRank;
			}
			set
			{
				if ((this._DenseRank != value))
				{
					this.OnDenseRankChanging(value);
					this.SendPropertyChanging();
					this._DenseRank = value;
					this.SendPropertyChanged("DenseRank");
					this.OnDenseRankChanged();
				}
			}
		}
		
		[Column(Storage="_NTile", DbType="TinyInt NOT NULL")]
		public byte NTile
		{
			get
			{
				return this._NTile;
			}
			set
			{
				if ((this._NTile != value))
				{
					this.OnNTileChanging(value);
					this.SendPropertyChanging();
					this._NTile = value;
					this.SendPropertyChanged("NTile");
					this.OnNTileChanged();
				}
			}
		}
		
		[Association(Name="Extension_Images_MOST_POPULAR_EXTENSIONS_BY_EXTENSION", Storage="_Extension", ThisKey="ExtensionID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Extension Extension
		{
			get
			{
				return this._Extension.Entity;
			}
			set
			{
				Extension previousValue = this._Extension.Entity;
				if (((previousValue != value) 
							|| (this._Extension.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Extension.Entity = null;
						previousValue.Images_MOST_POPULAR_EXTENSIONS_BY_EXTENSION = null;
					}
					this._Extension.Entity = value;
					if ((value != null))
					{
						value.Images_MOST_POPULAR_EXTENSIONS_BY_EXTENSION = this;
						this._ExtensionID = value.ID;
					}
					else
					{
						this._ExtensionID = default(int);
					}
					this.SendPropertyChanged("Extension");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="rpt.Images_MOST_POPULAR_EXTENSIONS_BY_HOSTS")]
	public partial class Images_MOST_POPULAR_EXTENSIONS_BY_HOST : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RowNumber;
		
		private System.Nullable<System.DateTime> _InitiallyDiscovered;
		
		private System.DateTime _LastDiscovered;
		
		private int _ExtensionID;
		
		private int _Count;
		
		private System.Nullable<short> _DaysSinceInitiallyDiscovered;
		
		private short _DaysSinceLastDiscovered;
		
		private System.Nullable<double> _Strength;
		
		private int _Rank;
		
		private int _DenseRank;
		
		private byte _NTile;
		
		private EntityRef<Extension> _Extension;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRowNumberChanging(int value);
    partial void OnRowNumberChanged();
    partial void OnInitiallyDiscoveredChanging(System.Nullable<System.DateTime> value);
    partial void OnInitiallyDiscoveredChanged();
    partial void OnLastDiscoveredChanging(System.DateTime value);
    partial void OnLastDiscoveredChanged();
    partial void OnExtensionIDChanging(int value);
    partial void OnExtensionIDChanged();
    partial void OnCountChanging(int value);
    partial void OnCountChanged();
    partial void OnDaysSinceInitiallyDiscoveredChanging(System.Nullable<short> value);
    partial void OnDaysSinceInitiallyDiscoveredChanged();
    partial void OnDaysSinceLastDiscoveredChanging(short value);
    partial void OnDaysSinceLastDiscoveredChanged();
    partial void OnStrengthChanging(System.Nullable<double> value);
    partial void OnStrengthChanged();
    partial void OnRankChanging(int value);
    partial void OnRankChanged();
    partial void OnDenseRankChanging(int value);
    partial void OnDenseRankChanged();
    partial void OnNTileChanging(byte value);
    partial void OnNTileChanged();
    #endregion
		
		public Images_MOST_POPULAR_EXTENSIONS_BY_HOST()
		{
			this._Extension = default(EntityRef<Extension>);
			OnCreated();
		}
		
		[Column(Storage="_RowNumber", DbType="Int NOT NULL")]
		public int RowNumber
		{
			get
			{
				return this._RowNumber;
			}
			set
			{
				if ((this._RowNumber != value))
				{
					this.OnRowNumberChanging(value);
					this.SendPropertyChanging();
					this._RowNumber = value;
					this.SendPropertyChanged("RowNumber");
					this.OnRowNumberChanged();
				}
			}
		}
		
		[Column(Storage="_InitiallyDiscovered", DbType="DateTime")]
		public System.Nullable<System.DateTime> InitiallyDiscovered
		{
			get
			{
				return this._InitiallyDiscovered;
			}
			set
			{
				if ((this._InitiallyDiscovered != value))
				{
					this.OnInitiallyDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._InitiallyDiscovered = value;
					this.SendPropertyChanged("InitiallyDiscovered");
					this.OnInitiallyDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_LastDiscovered", DbType="DateTime NOT NULL")]
		public System.DateTime LastDiscovered
		{
			get
			{
				return this._LastDiscovered;
			}
			set
			{
				if ((this._LastDiscovered != value))
				{
					this.OnLastDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._LastDiscovered = value;
					this.SendPropertyChanged("LastDiscovered");
					this.OnLastDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_ExtensionID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ExtensionID
		{
			get
			{
				return this._ExtensionID;
			}
			set
			{
				if ((this._ExtensionID != value))
				{
					if (this._Extension.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnExtensionIDChanging(value);
					this.SendPropertyChanging();
					this._ExtensionID = value;
					this.SendPropertyChanged("ExtensionID");
					this.OnExtensionIDChanged();
				}
			}
		}
		
		[Column(Storage="_Count", DbType="Int NOT NULL")]
		public int Count
		{
			get
			{
				return this._Count;
			}
			set
			{
				if ((this._Count != value))
				{
					this.OnCountChanging(value);
					this.SendPropertyChanging();
					this._Count = value;
					this.SendPropertyChanged("Count");
					this.OnCountChanged();
				}
			}
		}
		
		[Column(Storage="_DaysSinceInitiallyDiscovered", DbType="SmallInt")]
		public System.Nullable<short> DaysSinceInitiallyDiscovered
		{
			get
			{
				return this._DaysSinceInitiallyDiscovered;
			}
			set
			{
				if ((this._DaysSinceInitiallyDiscovered != value))
				{
					this.OnDaysSinceInitiallyDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._DaysSinceInitiallyDiscovered = value;
					this.SendPropertyChanged("DaysSinceInitiallyDiscovered");
					this.OnDaysSinceInitiallyDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_DaysSinceLastDiscovered", DbType="SmallInt NOT NULL")]
		public short DaysSinceLastDiscovered
		{
			get
			{
				return this._DaysSinceLastDiscovered;
			}
			set
			{
				if ((this._DaysSinceLastDiscovered != value))
				{
					this.OnDaysSinceLastDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._DaysSinceLastDiscovered = value;
					this.SendPropertyChanged("DaysSinceLastDiscovered");
					this.OnDaysSinceLastDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_Strength", DbType="Float")]
		public System.Nullable<double> Strength
		{
			get
			{
				return this._Strength;
			}
			set
			{
				if ((this._Strength != value))
				{
					this.OnStrengthChanging(value);
					this.SendPropertyChanging();
					this._Strength = value;
					this.SendPropertyChanged("Strength");
					this.OnStrengthChanged();
				}
			}
		}
		
		[Column(Storage="_Rank", DbType="Int NOT NULL")]
		public int Rank
		{
			get
			{
				return this._Rank;
			}
			set
			{
				if ((this._Rank != value))
				{
					this.OnRankChanging(value);
					this.SendPropertyChanging();
					this._Rank = value;
					this.SendPropertyChanged("Rank");
					this.OnRankChanged();
				}
			}
		}
		
		[Column(Storage="_DenseRank", DbType="Int NOT NULL")]
		public int DenseRank
		{
			get
			{
				return this._DenseRank;
			}
			set
			{
				if ((this._DenseRank != value))
				{
					this.OnDenseRankChanging(value);
					this.SendPropertyChanging();
					this._DenseRank = value;
					this.SendPropertyChanged("DenseRank");
					this.OnDenseRankChanged();
				}
			}
		}
		
		[Column(Storage="_NTile", DbType="TinyInt NOT NULL")]
		public byte NTile
		{
			get
			{
				return this._NTile;
			}
			set
			{
				if ((this._NTile != value))
				{
					this.OnNTileChanging(value);
					this.SendPropertyChanging();
					this._NTile = value;
					this.SendPropertyChanged("NTile");
					this.OnNTileChanged();
				}
			}
		}
		
		[Association(Name="Extension_Images_MOST_POPULAR_EXTENSIONS_BY_HOST", Storage="_Extension", ThisKey="ExtensionID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Extension Extension
		{
			get
			{
				return this._Extension.Entity;
			}
			set
			{
				Extension previousValue = this._Extension.Entity;
				if (((previousValue != value) 
							|| (this._Extension.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Extension.Entity = null;
						previousValue.Images_MOST_POPULAR_EXTENSIONS_BY_HOST = null;
					}
					this._Extension.Entity = value;
					if ((value != null))
					{
						value.Images_MOST_POPULAR_EXTENSIONS_BY_HOST = this;
						this._ExtensionID = value.ID;
					}
					else
					{
						this._ExtensionID = default(int);
					}
					this.SendPropertyChanged("Extension");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="rpt.Images_MOST_POPULAR_EXTENSIONS_BY_SCHEMES")]
	public partial class Images_MOST_POPULAR_EXTENSIONS_BY_SCHEME : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RowNumber;
		
		private System.Nullable<System.DateTime> _InitiallyDiscovered;
		
		private System.DateTime _LastDiscovered;
		
		private int _ExtensionID;
		
		private int _Count;
		
		private System.Nullable<short> _DaysSinceInitiallyDiscovered;
		
		private short _DaysSinceLastDiscovered;
		
		private System.Nullable<double> _Strength;
		
		private int _Rank;
		
		private int _DenseRank;
		
		private byte _NTile;
		
		private EntityRef<Extension> _Extension;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRowNumberChanging(int value);
    partial void OnRowNumberChanged();
    partial void OnInitiallyDiscoveredChanging(System.Nullable<System.DateTime> value);
    partial void OnInitiallyDiscoveredChanged();
    partial void OnLastDiscoveredChanging(System.DateTime value);
    partial void OnLastDiscoveredChanged();
    partial void OnExtensionIDChanging(int value);
    partial void OnExtensionIDChanged();
    partial void OnCountChanging(int value);
    partial void OnCountChanged();
    partial void OnDaysSinceInitiallyDiscoveredChanging(System.Nullable<short> value);
    partial void OnDaysSinceInitiallyDiscoveredChanged();
    partial void OnDaysSinceLastDiscoveredChanging(short value);
    partial void OnDaysSinceLastDiscoveredChanged();
    partial void OnStrengthChanging(System.Nullable<double> value);
    partial void OnStrengthChanged();
    partial void OnRankChanging(int value);
    partial void OnRankChanged();
    partial void OnDenseRankChanging(int value);
    partial void OnDenseRankChanged();
    partial void OnNTileChanging(byte value);
    partial void OnNTileChanged();
    #endregion
		
		public Images_MOST_POPULAR_EXTENSIONS_BY_SCHEME()
		{
			this._Extension = default(EntityRef<Extension>);
			OnCreated();
		}
		
		[Column(Storage="_RowNumber", DbType="Int NOT NULL")]
		public int RowNumber
		{
			get
			{
				return this._RowNumber;
			}
			set
			{
				if ((this._RowNumber != value))
				{
					this.OnRowNumberChanging(value);
					this.SendPropertyChanging();
					this._RowNumber = value;
					this.SendPropertyChanged("RowNumber");
					this.OnRowNumberChanged();
				}
			}
		}
		
		[Column(Storage="_InitiallyDiscovered", DbType="DateTime")]
		public System.Nullable<System.DateTime> InitiallyDiscovered
		{
			get
			{
				return this._InitiallyDiscovered;
			}
			set
			{
				if ((this._InitiallyDiscovered != value))
				{
					this.OnInitiallyDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._InitiallyDiscovered = value;
					this.SendPropertyChanged("InitiallyDiscovered");
					this.OnInitiallyDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_LastDiscovered", DbType="DateTime NOT NULL")]
		public System.DateTime LastDiscovered
		{
			get
			{
				return this._LastDiscovered;
			}
			set
			{
				if ((this._LastDiscovered != value))
				{
					this.OnLastDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._LastDiscovered = value;
					this.SendPropertyChanged("LastDiscovered");
					this.OnLastDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_ExtensionID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ExtensionID
		{
			get
			{
				return this._ExtensionID;
			}
			set
			{
				if ((this._ExtensionID != value))
				{
					if (this._Extension.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnExtensionIDChanging(value);
					this.SendPropertyChanging();
					this._ExtensionID = value;
					this.SendPropertyChanged("ExtensionID");
					this.OnExtensionIDChanged();
				}
			}
		}
		
		[Column(Storage="_Count", DbType="Int NOT NULL")]
		public int Count
		{
			get
			{
				return this._Count;
			}
			set
			{
				if ((this._Count != value))
				{
					this.OnCountChanging(value);
					this.SendPropertyChanging();
					this._Count = value;
					this.SendPropertyChanged("Count");
					this.OnCountChanged();
				}
			}
		}
		
		[Column(Storage="_DaysSinceInitiallyDiscovered", DbType="SmallInt")]
		public System.Nullable<short> DaysSinceInitiallyDiscovered
		{
			get
			{
				return this._DaysSinceInitiallyDiscovered;
			}
			set
			{
				if ((this._DaysSinceInitiallyDiscovered != value))
				{
					this.OnDaysSinceInitiallyDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._DaysSinceInitiallyDiscovered = value;
					this.SendPropertyChanged("DaysSinceInitiallyDiscovered");
					this.OnDaysSinceInitiallyDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_DaysSinceLastDiscovered", DbType="SmallInt NOT NULL")]
		public short DaysSinceLastDiscovered
		{
			get
			{
				return this._DaysSinceLastDiscovered;
			}
			set
			{
				if ((this._DaysSinceLastDiscovered != value))
				{
					this.OnDaysSinceLastDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._DaysSinceLastDiscovered = value;
					this.SendPropertyChanged("DaysSinceLastDiscovered");
					this.OnDaysSinceLastDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_Strength", DbType="Float")]
		public System.Nullable<double> Strength
		{
			get
			{
				return this._Strength;
			}
			set
			{
				if ((this._Strength != value))
				{
					this.OnStrengthChanging(value);
					this.SendPropertyChanging();
					this._Strength = value;
					this.SendPropertyChanged("Strength");
					this.OnStrengthChanged();
				}
			}
		}
		
		[Column(Storage="_Rank", DbType="Int NOT NULL")]
		public int Rank
		{
			get
			{
				return this._Rank;
			}
			set
			{
				if ((this._Rank != value))
				{
					this.OnRankChanging(value);
					this.SendPropertyChanging();
					this._Rank = value;
					this.SendPropertyChanged("Rank");
					this.OnRankChanged();
				}
			}
		}
		
		[Column(Storage="_DenseRank", DbType="Int NOT NULL")]
		public int DenseRank
		{
			get
			{
				return this._DenseRank;
			}
			set
			{
				if ((this._DenseRank != value))
				{
					this.OnDenseRankChanging(value);
					this.SendPropertyChanging();
					this._DenseRank = value;
					this.SendPropertyChanged("DenseRank");
					this.OnDenseRankChanged();
				}
			}
		}
		
		[Column(Storage="_NTile", DbType="TinyInt NOT NULL")]
		public byte NTile
		{
			get
			{
				return this._NTile;
			}
			set
			{
				if ((this._NTile != value))
				{
					this.OnNTileChanging(value);
					this.SendPropertyChanging();
					this._NTile = value;
					this.SendPropertyChanged("NTile");
					this.OnNTileChanged();
				}
			}
		}
		
		[Association(Name="Extension_Images_MOST_POPULAR_EXTENSIONS_BY_SCHEME", Storage="_Extension", ThisKey="ExtensionID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Extension Extension
		{
			get
			{
				return this._Extension.Entity;
			}
			set
			{
				Extension previousValue = this._Extension.Entity;
				if (((previousValue != value) 
							|| (this._Extension.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Extension.Entity = null;
						previousValue.Images_MOST_POPULAR_EXTENSIONS_BY_SCHEME = null;
					}
					this._Extension.Entity = value;
					if ((value != null))
					{
						value.Images_MOST_POPULAR_EXTENSIONS_BY_SCHEME = this;
						this._ExtensionID = value.ID;
					}
					else
					{
						this._ExtensionID = default(int);
					}
					this.SendPropertyChanged("Extension");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="rpt.Images_MOST_POPULAR_HOSTS_BY_ABSOLUTEURIS")]
	public partial class Images_MOST_POPULAR_HOSTS_BY_ABSOLUTEURI : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RowNumber;
		
		private System.Nullable<System.DateTime> _InitiallyDiscovered;
		
		private System.DateTime _LastDiscovered;
		
		private int _HostID;
		
		private int _Count;
		
		private System.Nullable<short> _DaysSinceInitiallyDiscovered;
		
		private short _DaysSinceLastDiscovered;
		
		private System.Nullable<double> _Strength;
		
		private int _Rank;
		
		private int _DenseRank;
		
		private byte _NTile;
		
		private EntityRef<Host> _Host;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRowNumberChanging(int value);
    partial void OnRowNumberChanged();
    partial void OnInitiallyDiscoveredChanging(System.Nullable<System.DateTime> value);
    partial void OnInitiallyDiscoveredChanged();
    partial void OnLastDiscoveredChanging(System.DateTime value);
    partial void OnLastDiscoveredChanged();
    partial void OnHostIDChanging(int value);
    partial void OnHostIDChanged();
    partial void OnCountChanging(int value);
    partial void OnCountChanged();
    partial void OnDaysSinceInitiallyDiscoveredChanging(System.Nullable<short> value);
    partial void OnDaysSinceInitiallyDiscoveredChanged();
    partial void OnDaysSinceLastDiscoveredChanging(short value);
    partial void OnDaysSinceLastDiscoveredChanged();
    partial void OnStrengthChanging(System.Nullable<double> value);
    partial void OnStrengthChanged();
    partial void OnRankChanging(int value);
    partial void OnRankChanged();
    partial void OnDenseRankChanging(int value);
    partial void OnDenseRankChanged();
    partial void OnNTileChanging(byte value);
    partial void OnNTileChanged();
    #endregion
		
		public Images_MOST_POPULAR_HOSTS_BY_ABSOLUTEURI()
		{
			this._Host = default(EntityRef<Host>);
			OnCreated();
		}
		
		[Column(Storage="_RowNumber", DbType="Int NOT NULL")]
		public int RowNumber
		{
			get
			{
				return this._RowNumber;
			}
			set
			{
				if ((this._RowNumber != value))
				{
					this.OnRowNumberChanging(value);
					this.SendPropertyChanging();
					this._RowNumber = value;
					this.SendPropertyChanged("RowNumber");
					this.OnRowNumberChanged();
				}
			}
		}
		
		[Column(Storage="_InitiallyDiscovered", DbType="DateTime")]
		public System.Nullable<System.DateTime> InitiallyDiscovered
		{
			get
			{
				return this._InitiallyDiscovered;
			}
			set
			{
				if ((this._InitiallyDiscovered != value))
				{
					this.OnInitiallyDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._InitiallyDiscovered = value;
					this.SendPropertyChanged("InitiallyDiscovered");
					this.OnInitiallyDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_LastDiscovered", DbType="DateTime NOT NULL")]
		public System.DateTime LastDiscovered
		{
			get
			{
				return this._LastDiscovered;
			}
			set
			{
				if ((this._LastDiscovered != value))
				{
					this.OnLastDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._LastDiscovered = value;
					this.SendPropertyChanged("LastDiscovered");
					this.OnLastDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_HostID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int HostID
		{
			get
			{
				return this._HostID;
			}
			set
			{
				if ((this._HostID != value))
				{
					if (this._Host.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnHostIDChanging(value);
					this.SendPropertyChanging();
					this._HostID = value;
					this.SendPropertyChanged("HostID");
					this.OnHostIDChanged();
				}
			}
		}
		
		[Column(Storage="_Count", DbType="Int NOT NULL")]
		public int Count
		{
			get
			{
				return this._Count;
			}
			set
			{
				if ((this._Count != value))
				{
					this.OnCountChanging(value);
					this.SendPropertyChanging();
					this._Count = value;
					this.SendPropertyChanged("Count");
					this.OnCountChanged();
				}
			}
		}
		
		[Column(Storage="_DaysSinceInitiallyDiscovered", DbType="SmallInt")]
		public System.Nullable<short> DaysSinceInitiallyDiscovered
		{
			get
			{
				return this._DaysSinceInitiallyDiscovered;
			}
			set
			{
				if ((this._DaysSinceInitiallyDiscovered != value))
				{
					this.OnDaysSinceInitiallyDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._DaysSinceInitiallyDiscovered = value;
					this.SendPropertyChanged("DaysSinceInitiallyDiscovered");
					this.OnDaysSinceInitiallyDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_DaysSinceLastDiscovered", DbType="SmallInt NOT NULL")]
		public short DaysSinceLastDiscovered
		{
			get
			{
				return this._DaysSinceLastDiscovered;
			}
			set
			{
				if ((this._DaysSinceLastDiscovered != value))
				{
					this.OnDaysSinceLastDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._DaysSinceLastDiscovered = value;
					this.SendPropertyChanged("DaysSinceLastDiscovered");
					this.OnDaysSinceLastDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_Strength", DbType="Float")]
		public System.Nullable<double> Strength
		{
			get
			{
				return this._Strength;
			}
			set
			{
				if ((this._Strength != value))
				{
					this.OnStrengthChanging(value);
					this.SendPropertyChanging();
					this._Strength = value;
					this.SendPropertyChanged("Strength");
					this.OnStrengthChanged();
				}
			}
		}
		
		[Column(Storage="_Rank", DbType="Int NOT NULL")]
		public int Rank
		{
			get
			{
				return this._Rank;
			}
			set
			{
				if ((this._Rank != value))
				{
					this.OnRankChanging(value);
					this.SendPropertyChanging();
					this._Rank = value;
					this.SendPropertyChanged("Rank");
					this.OnRankChanged();
				}
			}
		}
		
		[Column(Storage="_DenseRank", DbType="Int NOT NULL")]
		public int DenseRank
		{
			get
			{
				return this._DenseRank;
			}
			set
			{
				if ((this._DenseRank != value))
				{
					this.OnDenseRankChanging(value);
					this.SendPropertyChanging();
					this._DenseRank = value;
					this.SendPropertyChanged("DenseRank");
					this.OnDenseRankChanged();
				}
			}
		}
		
		[Column(Storage="_NTile", DbType="TinyInt NOT NULL")]
		public byte NTile
		{
			get
			{
				return this._NTile;
			}
			set
			{
				if ((this._NTile != value))
				{
					this.OnNTileChanging(value);
					this.SendPropertyChanging();
					this._NTile = value;
					this.SendPropertyChanged("NTile");
					this.OnNTileChanged();
				}
			}
		}
		
		[Association(Name="Host_Images_MOST_POPULAR_HOSTS_BY_ABSOLUTEURI", Storage="_Host", ThisKey="HostID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Host Host
		{
			get
			{
				return this._Host.Entity;
			}
			set
			{
				Host previousValue = this._Host.Entity;
				if (((previousValue != value) 
							|| (this._Host.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Host.Entity = null;
						previousValue.Images_MOST_POPULAR_HOSTS_BY_ABSOLUTEURI = null;
					}
					this._Host.Entity = value;
					if ((value != null))
					{
						value.Images_MOST_POPULAR_HOSTS_BY_ABSOLUTEURI = this;
						this._HostID = value.ID;
					}
					else
					{
						this._HostID = default(int);
					}
					this.SendPropertyChanged("Host");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="rpt.Images_MOST_POPULAR_HOSTS_BY_DOMAINS")]
	public partial class Images_MOST_POPULAR_HOSTS_BY_DOMAIN : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RowNumber;
		
		private System.Nullable<System.DateTime> _InitiallyDiscovered;
		
		private System.DateTime _LastDiscovered;
		
		private int _HostID;
		
		private int _Count;
		
		private System.Nullable<short> _DaysSinceInitiallyDiscovered;
		
		private short _DaysSinceLastDiscovered;
		
		private System.Nullable<double> _Strength;
		
		private int _Rank;
		
		private int _DenseRank;
		
		private byte _NTile;
		
		private EntityRef<Host> _Host;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRowNumberChanging(int value);
    partial void OnRowNumberChanged();
    partial void OnInitiallyDiscoveredChanging(System.Nullable<System.DateTime> value);
    partial void OnInitiallyDiscoveredChanged();
    partial void OnLastDiscoveredChanging(System.DateTime value);
    partial void OnLastDiscoveredChanged();
    partial void OnHostIDChanging(int value);
    partial void OnHostIDChanged();
    partial void OnCountChanging(int value);
    partial void OnCountChanged();
    partial void OnDaysSinceInitiallyDiscoveredChanging(System.Nullable<short> value);
    partial void OnDaysSinceInitiallyDiscoveredChanged();
    partial void OnDaysSinceLastDiscoveredChanging(short value);
    partial void OnDaysSinceLastDiscoveredChanged();
    partial void OnStrengthChanging(System.Nullable<double> value);
    partial void OnStrengthChanged();
    partial void OnRankChanging(int value);
    partial void OnRankChanged();
    partial void OnDenseRankChanging(int value);
    partial void OnDenseRankChanged();
    partial void OnNTileChanging(byte value);
    partial void OnNTileChanged();
    #endregion
		
		public Images_MOST_POPULAR_HOSTS_BY_DOMAIN()
		{
			this._Host = default(EntityRef<Host>);
			OnCreated();
		}
		
		[Column(Storage="_RowNumber", DbType="Int NOT NULL")]
		public int RowNumber
		{
			get
			{
				return this._RowNumber;
			}
			set
			{
				if ((this._RowNumber != value))
				{
					this.OnRowNumberChanging(value);
					this.SendPropertyChanging();
					this._RowNumber = value;
					this.SendPropertyChanged("RowNumber");
					this.OnRowNumberChanged();
				}
			}
		}
		
		[Column(Storage="_InitiallyDiscovered", DbType="DateTime")]
		public System.Nullable<System.DateTime> InitiallyDiscovered
		{
			get
			{
				return this._InitiallyDiscovered;
			}
			set
			{
				if ((this._InitiallyDiscovered != value))
				{
					this.OnInitiallyDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._InitiallyDiscovered = value;
					this.SendPropertyChanged("InitiallyDiscovered");
					this.OnInitiallyDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_LastDiscovered", DbType="DateTime NOT NULL")]
		public System.DateTime LastDiscovered
		{
			get
			{
				return this._LastDiscovered;
			}
			set
			{
				if ((this._LastDiscovered != value))
				{
					this.OnLastDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._LastDiscovered = value;
					this.SendPropertyChanged("LastDiscovered");
					this.OnLastDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_HostID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int HostID
		{
			get
			{
				return this._HostID;
			}
			set
			{
				if ((this._HostID != value))
				{
					if (this._Host.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnHostIDChanging(value);
					this.SendPropertyChanging();
					this._HostID = value;
					this.SendPropertyChanged("HostID");
					this.OnHostIDChanged();
				}
			}
		}
		
		[Column(Storage="_Count", DbType="Int NOT NULL")]
		public int Count
		{
			get
			{
				return this._Count;
			}
			set
			{
				if ((this._Count != value))
				{
					this.OnCountChanging(value);
					this.SendPropertyChanging();
					this._Count = value;
					this.SendPropertyChanged("Count");
					this.OnCountChanged();
				}
			}
		}
		
		[Column(Storage="_DaysSinceInitiallyDiscovered", DbType="SmallInt")]
		public System.Nullable<short> DaysSinceInitiallyDiscovered
		{
			get
			{
				return this._DaysSinceInitiallyDiscovered;
			}
			set
			{
				if ((this._DaysSinceInitiallyDiscovered != value))
				{
					this.OnDaysSinceInitiallyDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._DaysSinceInitiallyDiscovered = value;
					this.SendPropertyChanged("DaysSinceInitiallyDiscovered");
					this.OnDaysSinceInitiallyDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_DaysSinceLastDiscovered", DbType="SmallInt NOT NULL")]
		public short DaysSinceLastDiscovered
		{
			get
			{
				return this._DaysSinceLastDiscovered;
			}
			set
			{
				if ((this._DaysSinceLastDiscovered != value))
				{
					this.OnDaysSinceLastDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._DaysSinceLastDiscovered = value;
					this.SendPropertyChanged("DaysSinceLastDiscovered");
					this.OnDaysSinceLastDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_Strength", DbType="Float")]
		public System.Nullable<double> Strength
		{
			get
			{
				return this._Strength;
			}
			set
			{
				if ((this._Strength != value))
				{
					this.OnStrengthChanging(value);
					this.SendPropertyChanging();
					this._Strength = value;
					this.SendPropertyChanged("Strength");
					this.OnStrengthChanged();
				}
			}
		}
		
		[Column(Storage="_Rank", DbType="Int NOT NULL")]
		public int Rank
		{
			get
			{
				return this._Rank;
			}
			set
			{
				if ((this._Rank != value))
				{
					this.OnRankChanging(value);
					this.SendPropertyChanging();
					this._Rank = value;
					this.SendPropertyChanged("Rank");
					this.OnRankChanged();
				}
			}
		}
		
		[Column(Storage="_DenseRank", DbType="Int NOT NULL")]
		public int DenseRank
		{
			get
			{
				return this._DenseRank;
			}
			set
			{
				if ((this._DenseRank != value))
				{
					this.OnDenseRankChanging(value);
					this.SendPropertyChanging();
					this._DenseRank = value;
					this.SendPropertyChanged("DenseRank");
					this.OnDenseRankChanged();
				}
			}
		}
		
		[Column(Storage="_NTile", DbType="TinyInt NOT NULL")]
		public byte NTile
		{
			get
			{
				return this._NTile;
			}
			set
			{
				if ((this._NTile != value))
				{
					this.OnNTileChanging(value);
					this.SendPropertyChanging();
					this._NTile = value;
					this.SendPropertyChanged("NTile");
					this.OnNTileChanged();
				}
			}
		}
		
		[Association(Name="Host_Images_MOST_POPULAR_HOSTS_BY_DOMAIN", Storage="_Host", ThisKey="HostID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Host Host
		{
			get
			{
				return this._Host.Entity;
			}
			set
			{
				Host previousValue = this._Host.Entity;
				if (((previousValue != value) 
							|| (this._Host.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Host.Entity = null;
						previousValue.Images_MOST_POPULAR_HOSTS_BY_DOMAIN = null;
					}
					this._Host.Entity = value;
					if ((value != null))
					{
						value.Images_MOST_POPULAR_HOSTS_BY_DOMAIN = this;
						this._HostID = value.ID;
					}
					else
					{
						this._HostID = default(int);
					}
					this.SendPropertyChanged("Host");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="rpt.Images_MOST_POPULAR_HOSTS_BY_EXTENSIONS")]
	public partial class Images_MOST_POPULAR_HOSTS_BY_EXTENSION : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RowNumber;
		
		private System.Nullable<System.DateTime> _InitiallyDiscovered;
		
		private System.DateTime _LastDiscovered;
		
		private int _HostID;
		
		private int _Count;
		
		private System.Nullable<short> _DaysSinceInitiallyDiscovered;
		
		private short _DaysSinceLastDiscovered;
		
		private System.Nullable<double> _Strength;
		
		private int _Rank;
		
		private int _DenseRank;
		
		private byte _NTile;
		
		private EntityRef<Host> _Host;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRowNumberChanging(int value);
    partial void OnRowNumberChanged();
    partial void OnInitiallyDiscoveredChanging(System.Nullable<System.DateTime> value);
    partial void OnInitiallyDiscoveredChanged();
    partial void OnLastDiscoveredChanging(System.DateTime value);
    partial void OnLastDiscoveredChanged();
    partial void OnHostIDChanging(int value);
    partial void OnHostIDChanged();
    partial void OnCountChanging(int value);
    partial void OnCountChanged();
    partial void OnDaysSinceInitiallyDiscoveredChanging(System.Nullable<short> value);
    partial void OnDaysSinceInitiallyDiscoveredChanged();
    partial void OnDaysSinceLastDiscoveredChanging(short value);
    partial void OnDaysSinceLastDiscoveredChanged();
    partial void OnStrengthChanging(System.Nullable<double> value);
    partial void OnStrengthChanged();
    partial void OnRankChanging(int value);
    partial void OnRankChanged();
    partial void OnDenseRankChanging(int value);
    partial void OnDenseRankChanged();
    partial void OnNTileChanging(byte value);
    partial void OnNTileChanged();
    #endregion
		
		public Images_MOST_POPULAR_HOSTS_BY_EXTENSION()
		{
			this._Host = default(EntityRef<Host>);
			OnCreated();
		}
		
		[Column(Storage="_RowNumber", DbType="Int NOT NULL")]
		public int RowNumber
		{
			get
			{
				return this._RowNumber;
			}
			set
			{
				if ((this._RowNumber != value))
				{
					this.OnRowNumberChanging(value);
					this.SendPropertyChanging();
					this._RowNumber = value;
					this.SendPropertyChanged("RowNumber");
					this.OnRowNumberChanged();
				}
			}
		}
		
		[Column(Storage="_InitiallyDiscovered", DbType="DateTime")]
		public System.Nullable<System.DateTime> InitiallyDiscovered
		{
			get
			{
				return this._InitiallyDiscovered;
			}
			set
			{
				if ((this._InitiallyDiscovered != value))
				{
					this.OnInitiallyDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._InitiallyDiscovered = value;
					this.SendPropertyChanged("InitiallyDiscovered");
					this.OnInitiallyDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_LastDiscovered", DbType="DateTime NOT NULL")]
		public System.DateTime LastDiscovered
		{
			get
			{
				return this._LastDiscovered;
			}
			set
			{
				if ((this._LastDiscovered != value))
				{
					this.OnLastDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._LastDiscovered = value;
					this.SendPropertyChanged("LastDiscovered");
					this.OnLastDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_HostID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int HostID
		{
			get
			{
				return this._HostID;
			}
			set
			{
				if ((this._HostID != value))
				{
					if (this._Host.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnHostIDChanging(value);
					this.SendPropertyChanging();
					this._HostID = value;
					this.SendPropertyChanged("HostID");
					this.OnHostIDChanged();
				}
			}
		}
		
		[Column(Storage="_Count", DbType="Int NOT NULL")]
		public int Count
		{
			get
			{
				return this._Count;
			}
			set
			{
				if ((this._Count != value))
				{
					this.OnCountChanging(value);
					this.SendPropertyChanging();
					this._Count = value;
					this.SendPropertyChanged("Count");
					this.OnCountChanged();
				}
			}
		}
		
		[Column(Storage="_DaysSinceInitiallyDiscovered", DbType="SmallInt")]
		public System.Nullable<short> DaysSinceInitiallyDiscovered
		{
			get
			{
				return this._DaysSinceInitiallyDiscovered;
			}
			set
			{
				if ((this._DaysSinceInitiallyDiscovered != value))
				{
					this.OnDaysSinceInitiallyDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._DaysSinceInitiallyDiscovered = value;
					this.SendPropertyChanged("DaysSinceInitiallyDiscovered");
					this.OnDaysSinceInitiallyDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_DaysSinceLastDiscovered", DbType="SmallInt NOT NULL")]
		public short DaysSinceLastDiscovered
		{
			get
			{
				return this._DaysSinceLastDiscovered;
			}
			set
			{
				if ((this._DaysSinceLastDiscovered != value))
				{
					this.OnDaysSinceLastDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._DaysSinceLastDiscovered = value;
					this.SendPropertyChanged("DaysSinceLastDiscovered");
					this.OnDaysSinceLastDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_Strength", DbType="Float")]
		public System.Nullable<double> Strength
		{
			get
			{
				return this._Strength;
			}
			set
			{
				if ((this._Strength != value))
				{
					this.OnStrengthChanging(value);
					this.SendPropertyChanging();
					this._Strength = value;
					this.SendPropertyChanged("Strength");
					this.OnStrengthChanged();
				}
			}
		}
		
		[Column(Storage="_Rank", DbType="Int NOT NULL")]
		public int Rank
		{
			get
			{
				return this._Rank;
			}
			set
			{
				if ((this._Rank != value))
				{
					this.OnRankChanging(value);
					this.SendPropertyChanging();
					this._Rank = value;
					this.SendPropertyChanged("Rank");
					this.OnRankChanged();
				}
			}
		}
		
		[Column(Storage="_DenseRank", DbType="Int NOT NULL")]
		public int DenseRank
		{
			get
			{
				return this._DenseRank;
			}
			set
			{
				if ((this._DenseRank != value))
				{
					this.OnDenseRankChanging(value);
					this.SendPropertyChanging();
					this._DenseRank = value;
					this.SendPropertyChanged("DenseRank");
					this.OnDenseRankChanged();
				}
			}
		}
		
		[Column(Storage="_NTile", DbType="TinyInt NOT NULL")]
		public byte NTile
		{
			get
			{
				return this._NTile;
			}
			set
			{
				if ((this._NTile != value))
				{
					this.OnNTileChanging(value);
					this.SendPropertyChanging();
					this._NTile = value;
					this.SendPropertyChanged("NTile");
					this.OnNTileChanged();
				}
			}
		}
		
		[Association(Name="Host_Images_MOST_POPULAR_HOSTS_BY_EXTENSION", Storage="_Host", ThisKey="HostID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Host Host
		{
			get
			{
				return this._Host.Entity;
			}
			set
			{
				Host previousValue = this._Host.Entity;
				if (((previousValue != value) 
							|| (this._Host.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Host.Entity = null;
						previousValue.Images_MOST_POPULAR_HOSTS_BY_EXTENSION = null;
					}
					this._Host.Entity = value;
					if ((value != null))
					{
						value.Images_MOST_POPULAR_HOSTS_BY_EXTENSION = this;
						this._HostID = value.ID;
					}
					else
					{
						this._HostID = default(int);
					}
					this.SendPropertyChanged("Host");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="rpt.Images_MOST_POPULAR_HOSTS_BY_HOSTS")]
	public partial class Images_MOST_POPULAR_HOSTS_BY_HOST : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RowNumber;
		
		private System.Nullable<System.DateTime> _InitiallyDiscovered;
		
		private System.DateTime _LastDiscovered;
		
		private int _HostID;
		
		private int _Count;
		
		private System.Nullable<short> _DaysSinceInitiallyDiscovered;
		
		private short _DaysSinceLastDiscovered;
		
		private System.Nullable<double> _Strength;
		
		private int _Rank;
		
		private int _DenseRank;
		
		private byte _NTile;
		
		private EntityRef<Host> _Host;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRowNumberChanging(int value);
    partial void OnRowNumberChanged();
    partial void OnInitiallyDiscoveredChanging(System.Nullable<System.DateTime> value);
    partial void OnInitiallyDiscoveredChanged();
    partial void OnLastDiscoveredChanging(System.DateTime value);
    partial void OnLastDiscoveredChanged();
    partial void OnHostIDChanging(int value);
    partial void OnHostIDChanged();
    partial void OnCountChanging(int value);
    partial void OnCountChanged();
    partial void OnDaysSinceInitiallyDiscoveredChanging(System.Nullable<short> value);
    partial void OnDaysSinceInitiallyDiscoveredChanged();
    partial void OnDaysSinceLastDiscoveredChanging(short value);
    partial void OnDaysSinceLastDiscoveredChanged();
    partial void OnStrengthChanging(System.Nullable<double> value);
    partial void OnStrengthChanged();
    partial void OnRankChanging(int value);
    partial void OnRankChanged();
    partial void OnDenseRankChanging(int value);
    partial void OnDenseRankChanged();
    partial void OnNTileChanging(byte value);
    partial void OnNTileChanged();
    #endregion
		
		public Images_MOST_POPULAR_HOSTS_BY_HOST()
		{
			this._Host = default(EntityRef<Host>);
			OnCreated();
		}
		
		[Column(Storage="_RowNumber", DbType="Int NOT NULL")]
		public int RowNumber
		{
			get
			{
				return this._RowNumber;
			}
			set
			{
				if ((this._RowNumber != value))
				{
					this.OnRowNumberChanging(value);
					this.SendPropertyChanging();
					this._RowNumber = value;
					this.SendPropertyChanged("RowNumber");
					this.OnRowNumberChanged();
				}
			}
		}
		
		[Column(Storage="_InitiallyDiscovered", DbType="DateTime")]
		public System.Nullable<System.DateTime> InitiallyDiscovered
		{
			get
			{
				return this._InitiallyDiscovered;
			}
			set
			{
				if ((this._InitiallyDiscovered != value))
				{
					this.OnInitiallyDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._InitiallyDiscovered = value;
					this.SendPropertyChanged("InitiallyDiscovered");
					this.OnInitiallyDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_LastDiscovered", DbType="DateTime NOT NULL")]
		public System.DateTime LastDiscovered
		{
			get
			{
				return this._LastDiscovered;
			}
			set
			{
				if ((this._LastDiscovered != value))
				{
					this.OnLastDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._LastDiscovered = value;
					this.SendPropertyChanged("LastDiscovered");
					this.OnLastDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_HostID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int HostID
		{
			get
			{
				return this._HostID;
			}
			set
			{
				if ((this._HostID != value))
				{
					if (this._Host.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnHostIDChanging(value);
					this.SendPropertyChanging();
					this._HostID = value;
					this.SendPropertyChanged("HostID");
					this.OnHostIDChanged();
				}
			}
		}
		
		[Column(Storage="_Count", DbType="Int NOT NULL")]
		public int Count
		{
			get
			{
				return this._Count;
			}
			set
			{
				if ((this._Count != value))
				{
					this.OnCountChanging(value);
					this.SendPropertyChanging();
					this._Count = value;
					this.SendPropertyChanged("Count");
					this.OnCountChanged();
				}
			}
		}
		
		[Column(Storage="_DaysSinceInitiallyDiscovered", DbType="SmallInt")]
		public System.Nullable<short> DaysSinceInitiallyDiscovered
		{
			get
			{
				return this._DaysSinceInitiallyDiscovered;
			}
			set
			{
				if ((this._DaysSinceInitiallyDiscovered != value))
				{
					this.OnDaysSinceInitiallyDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._DaysSinceInitiallyDiscovered = value;
					this.SendPropertyChanged("DaysSinceInitiallyDiscovered");
					this.OnDaysSinceInitiallyDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_DaysSinceLastDiscovered", DbType="SmallInt NOT NULL")]
		public short DaysSinceLastDiscovered
		{
			get
			{
				return this._DaysSinceLastDiscovered;
			}
			set
			{
				if ((this._DaysSinceLastDiscovered != value))
				{
					this.OnDaysSinceLastDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._DaysSinceLastDiscovered = value;
					this.SendPropertyChanged("DaysSinceLastDiscovered");
					this.OnDaysSinceLastDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_Strength", DbType="Float")]
		public System.Nullable<double> Strength
		{
			get
			{
				return this._Strength;
			}
			set
			{
				if ((this._Strength != value))
				{
					this.OnStrengthChanging(value);
					this.SendPropertyChanging();
					this._Strength = value;
					this.SendPropertyChanged("Strength");
					this.OnStrengthChanged();
				}
			}
		}
		
		[Column(Storage="_Rank", DbType="Int NOT NULL")]
		public int Rank
		{
			get
			{
				return this._Rank;
			}
			set
			{
				if ((this._Rank != value))
				{
					this.OnRankChanging(value);
					this.SendPropertyChanging();
					this._Rank = value;
					this.SendPropertyChanged("Rank");
					this.OnRankChanged();
				}
			}
		}
		
		[Column(Storage="_DenseRank", DbType="Int NOT NULL")]
		public int DenseRank
		{
			get
			{
				return this._DenseRank;
			}
			set
			{
				if ((this._DenseRank != value))
				{
					this.OnDenseRankChanging(value);
					this.SendPropertyChanging();
					this._DenseRank = value;
					this.SendPropertyChanged("DenseRank");
					this.OnDenseRankChanged();
				}
			}
		}
		
		[Column(Storage="_NTile", DbType="TinyInt NOT NULL")]
		public byte NTile
		{
			get
			{
				return this._NTile;
			}
			set
			{
				if ((this._NTile != value))
				{
					this.OnNTileChanging(value);
					this.SendPropertyChanging();
					this._NTile = value;
					this.SendPropertyChanged("NTile");
					this.OnNTileChanged();
				}
			}
		}
		
		[Association(Name="Host_Images_MOST_POPULAR_HOSTS_BY_HOST", Storage="_Host", ThisKey="HostID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Host Host
		{
			get
			{
				return this._Host.Entity;
			}
			set
			{
				Host previousValue = this._Host.Entity;
				if (((previousValue != value) 
							|| (this._Host.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Host.Entity = null;
						previousValue.Images_MOST_POPULAR_HOSTS_BY_HOST = null;
					}
					this._Host.Entity = value;
					if ((value != null))
					{
						value.Images_MOST_POPULAR_HOSTS_BY_HOST = this;
						this._HostID = value.ID;
					}
					else
					{
						this._HostID = default(int);
					}
					this.SendPropertyChanged("Host");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="rpt.Images_MOST_POPULAR_HOSTS_BY_SCHEMES")]
	public partial class Images_MOST_POPULAR_HOSTS_BY_SCHEME : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RowNumber;
		
		private System.Nullable<System.DateTime> _InitiallyDiscovered;
		
		private System.DateTime _LastDiscovered;
		
		private int _HostID;
		
		private int _Count;
		
		private System.Nullable<short> _DaysSinceInitiallyDiscovered;
		
		private short _DaysSinceLastDiscovered;
		
		private System.Nullable<double> _Strength;
		
		private int _Rank;
		
		private int _DenseRank;
		
		private byte _NTile;
		
		private EntityRef<Host> _Host;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRowNumberChanging(int value);
    partial void OnRowNumberChanged();
    partial void OnInitiallyDiscoveredChanging(System.Nullable<System.DateTime> value);
    partial void OnInitiallyDiscoveredChanged();
    partial void OnLastDiscoveredChanging(System.DateTime value);
    partial void OnLastDiscoveredChanged();
    partial void OnHostIDChanging(int value);
    partial void OnHostIDChanged();
    partial void OnCountChanging(int value);
    partial void OnCountChanged();
    partial void OnDaysSinceInitiallyDiscoveredChanging(System.Nullable<short> value);
    partial void OnDaysSinceInitiallyDiscoveredChanged();
    partial void OnDaysSinceLastDiscoveredChanging(short value);
    partial void OnDaysSinceLastDiscoveredChanged();
    partial void OnStrengthChanging(System.Nullable<double> value);
    partial void OnStrengthChanged();
    partial void OnRankChanging(int value);
    partial void OnRankChanged();
    partial void OnDenseRankChanging(int value);
    partial void OnDenseRankChanged();
    partial void OnNTileChanging(byte value);
    partial void OnNTileChanged();
    #endregion
		
		public Images_MOST_POPULAR_HOSTS_BY_SCHEME()
		{
			this._Host = default(EntityRef<Host>);
			OnCreated();
		}
		
		[Column(Storage="_RowNumber", DbType="Int NOT NULL")]
		public int RowNumber
		{
			get
			{
				return this._RowNumber;
			}
			set
			{
				if ((this._RowNumber != value))
				{
					this.OnRowNumberChanging(value);
					this.SendPropertyChanging();
					this._RowNumber = value;
					this.SendPropertyChanged("RowNumber");
					this.OnRowNumberChanged();
				}
			}
		}
		
		[Column(Storage="_InitiallyDiscovered", DbType="DateTime")]
		public System.Nullable<System.DateTime> InitiallyDiscovered
		{
			get
			{
				return this._InitiallyDiscovered;
			}
			set
			{
				if ((this._InitiallyDiscovered != value))
				{
					this.OnInitiallyDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._InitiallyDiscovered = value;
					this.SendPropertyChanged("InitiallyDiscovered");
					this.OnInitiallyDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_LastDiscovered", DbType="DateTime NOT NULL")]
		public System.DateTime LastDiscovered
		{
			get
			{
				return this._LastDiscovered;
			}
			set
			{
				if ((this._LastDiscovered != value))
				{
					this.OnLastDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._LastDiscovered = value;
					this.SendPropertyChanged("LastDiscovered");
					this.OnLastDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_HostID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int HostID
		{
			get
			{
				return this._HostID;
			}
			set
			{
				if ((this._HostID != value))
				{
					if (this._Host.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnHostIDChanging(value);
					this.SendPropertyChanging();
					this._HostID = value;
					this.SendPropertyChanged("HostID");
					this.OnHostIDChanged();
				}
			}
		}
		
		[Column(Storage="_Count", DbType="Int NOT NULL")]
		public int Count
		{
			get
			{
				return this._Count;
			}
			set
			{
				if ((this._Count != value))
				{
					this.OnCountChanging(value);
					this.SendPropertyChanging();
					this._Count = value;
					this.SendPropertyChanged("Count");
					this.OnCountChanged();
				}
			}
		}
		
		[Column(Storage="_DaysSinceInitiallyDiscovered", DbType="SmallInt")]
		public System.Nullable<short> DaysSinceInitiallyDiscovered
		{
			get
			{
				return this._DaysSinceInitiallyDiscovered;
			}
			set
			{
				if ((this._DaysSinceInitiallyDiscovered != value))
				{
					this.OnDaysSinceInitiallyDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._DaysSinceInitiallyDiscovered = value;
					this.SendPropertyChanged("DaysSinceInitiallyDiscovered");
					this.OnDaysSinceInitiallyDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_DaysSinceLastDiscovered", DbType="SmallInt NOT NULL")]
		public short DaysSinceLastDiscovered
		{
			get
			{
				return this._DaysSinceLastDiscovered;
			}
			set
			{
				if ((this._DaysSinceLastDiscovered != value))
				{
					this.OnDaysSinceLastDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._DaysSinceLastDiscovered = value;
					this.SendPropertyChanged("DaysSinceLastDiscovered");
					this.OnDaysSinceLastDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_Strength", DbType="Float")]
		public System.Nullable<double> Strength
		{
			get
			{
				return this._Strength;
			}
			set
			{
				if ((this._Strength != value))
				{
					this.OnStrengthChanging(value);
					this.SendPropertyChanging();
					this._Strength = value;
					this.SendPropertyChanged("Strength");
					this.OnStrengthChanged();
				}
			}
		}
		
		[Column(Storage="_Rank", DbType="Int NOT NULL")]
		public int Rank
		{
			get
			{
				return this._Rank;
			}
			set
			{
				if ((this._Rank != value))
				{
					this.OnRankChanging(value);
					this.SendPropertyChanging();
					this._Rank = value;
					this.SendPropertyChanged("Rank");
					this.OnRankChanged();
				}
			}
		}
		
		[Column(Storage="_DenseRank", DbType="Int NOT NULL")]
		public int DenseRank
		{
			get
			{
				return this._DenseRank;
			}
			set
			{
				if ((this._DenseRank != value))
				{
					this.OnDenseRankChanging(value);
					this.SendPropertyChanging();
					this._DenseRank = value;
					this.SendPropertyChanged("DenseRank");
					this.OnDenseRankChanged();
				}
			}
		}
		
		[Column(Storage="_NTile", DbType="TinyInt NOT NULL")]
		public byte NTile
		{
			get
			{
				return this._NTile;
			}
			set
			{
				if ((this._NTile != value))
				{
					this.OnNTileChanging(value);
					this.SendPropertyChanging();
					this._NTile = value;
					this.SendPropertyChanged("NTile");
					this.OnNTileChanged();
				}
			}
		}
		
		[Association(Name="Host_Images_MOST_POPULAR_HOSTS_BY_SCHEME", Storage="_Host", ThisKey="HostID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Host Host
		{
			get
			{
				return this._Host.Entity;
			}
			set
			{
				Host previousValue = this._Host.Entity;
				if (((previousValue != value) 
							|| (this._Host.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Host.Entity = null;
						previousValue.Images_MOST_POPULAR_HOSTS_BY_SCHEME = null;
					}
					this._Host.Entity = value;
					if ((value != null))
					{
						value.Images_MOST_POPULAR_HOSTS_BY_SCHEME = this;
						this._HostID = value.ID;
					}
					else
					{
						this._HostID = default(int);
					}
					this.SendPropertyChanged("Host");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="rpt.Images_MOST_POPULAR_SCHEMES_BY_ABSOLUTEURIS")]
	public partial class Images_MOST_POPULAR_SCHEMES_BY_ABSOLUTEURI : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RowNumber;
		
		private System.Nullable<System.DateTime> _InitiallyDiscovered;
		
		private System.DateTime _LastDiscovered;
		
		private int _SchemeID;
		
		private int _Count;
		
		private System.Nullable<short> _DaysSinceInitiallyDiscovered;
		
		private short _DaysSinceLastDiscovered;
		
		private System.Nullable<double> _Strength;
		
		private int _Rank;
		
		private int _DenseRank;
		
		private short _NTile;
		
		private EntityRef<Scheme> _Scheme;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRowNumberChanging(int value);
    partial void OnRowNumberChanged();
    partial void OnInitiallyDiscoveredChanging(System.Nullable<System.DateTime> value);
    partial void OnInitiallyDiscoveredChanged();
    partial void OnLastDiscoveredChanging(System.DateTime value);
    partial void OnLastDiscoveredChanged();
    partial void OnSchemeIDChanging(int value);
    partial void OnSchemeIDChanged();
    partial void OnCountChanging(int value);
    partial void OnCountChanged();
    partial void OnDaysSinceInitiallyDiscoveredChanging(System.Nullable<short> value);
    partial void OnDaysSinceInitiallyDiscoveredChanged();
    partial void OnDaysSinceLastDiscoveredChanging(short value);
    partial void OnDaysSinceLastDiscoveredChanged();
    partial void OnStrengthChanging(System.Nullable<double> value);
    partial void OnStrengthChanged();
    partial void OnRankChanging(int value);
    partial void OnRankChanged();
    partial void OnDenseRankChanging(int value);
    partial void OnDenseRankChanged();
    partial void OnNTileChanging(short value);
    partial void OnNTileChanged();
    #endregion
		
		public Images_MOST_POPULAR_SCHEMES_BY_ABSOLUTEURI()
		{
			this._Scheme = default(EntityRef<Scheme>);
			OnCreated();
		}
		
		[Column(Storage="_RowNumber", DbType="Int NOT NULL")]
		public int RowNumber
		{
			get
			{
				return this._RowNumber;
			}
			set
			{
				if ((this._RowNumber != value))
				{
					this.OnRowNumberChanging(value);
					this.SendPropertyChanging();
					this._RowNumber = value;
					this.SendPropertyChanged("RowNumber");
					this.OnRowNumberChanged();
				}
			}
		}
		
		[Column(Storage="_InitiallyDiscovered", DbType="DateTime")]
		public System.Nullable<System.DateTime> InitiallyDiscovered
		{
			get
			{
				return this._InitiallyDiscovered;
			}
			set
			{
				if ((this._InitiallyDiscovered != value))
				{
					this.OnInitiallyDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._InitiallyDiscovered = value;
					this.SendPropertyChanged("InitiallyDiscovered");
					this.OnInitiallyDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_LastDiscovered", DbType="DateTime NOT NULL")]
		public System.DateTime LastDiscovered
		{
			get
			{
				return this._LastDiscovered;
			}
			set
			{
				if ((this._LastDiscovered != value))
				{
					this.OnLastDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._LastDiscovered = value;
					this.SendPropertyChanged("LastDiscovered");
					this.OnLastDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_SchemeID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int SchemeID
		{
			get
			{
				return this._SchemeID;
			}
			set
			{
				if ((this._SchemeID != value))
				{
					if (this._Scheme.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSchemeIDChanging(value);
					this.SendPropertyChanging();
					this._SchemeID = value;
					this.SendPropertyChanged("SchemeID");
					this.OnSchemeIDChanged();
				}
			}
		}
		
		[Column(Storage="_Count", DbType="Int NOT NULL")]
		public int Count
		{
			get
			{
				return this._Count;
			}
			set
			{
				if ((this._Count != value))
				{
					this.OnCountChanging(value);
					this.SendPropertyChanging();
					this._Count = value;
					this.SendPropertyChanged("Count");
					this.OnCountChanged();
				}
			}
		}
		
		[Column(Storage="_DaysSinceInitiallyDiscovered", DbType="SmallInt")]
		public System.Nullable<short> DaysSinceInitiallyDiscovered
		{
			get
			{
				return this._DaysSinceInitiallyDiscovered;
			}
			set
			{
				if ((this._DaysSinceInitiallyDiscovered != value))
				{
					this.OnDaysSinceInitiallyDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._DaysSinceInitiallyDiscovered = value;
					this.SendPropertyChanged("DaysSinceInitiallyDiscovered");
					this.OnDaysSinceInitiallyDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_DaysSinceLastDiscovered", DbType="SmallInt NOT NULL")]
		public short DaysSinceLastDiscovered
		{
			get
			{
				return this._DaysSinceLastDiscovered;
			}
			set
			{
				if ((this._DaysSinceLastDiscovered != value))
				{
					this.OnDaysSinceLastDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._DaysSinceLastDiscovered = value;
					this.SendPropertyChanged("DaysSinceLastDiscovered");
					this.OnDaysSinceLastDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_Strength", DbType="Float")]
		public System.Nullable<double> Strength
		{
			get
			{
				return this._Strength;
			}
			set
			{
				if ((this._Strength != value))
				{
					this.OnStrengthChanging(value);
					this.SendPropertyChanging();
					this._Strength = value;
					this.SendPropertyChanged("Strength");
					this.OnStrengthChanged();
				}
			}
		}
		
		[Column(Storage="_Rank", DbType="Int NOT NULL")]
		public int Rank
		{
			get
			{
				return this._Rank;
			}
			set
			{
				if ((this._Rank != value))
				{
					this.OnRankChanging(value);
					this.SendPropertyChanging();
					this._Rank = value;
					this.SendPropertyChanged("Rank");
					this.OnRankChanged();
				}
			}
		}
		
		[Column(Storage="_DenseRank", DbType="Int NOT NULL")]
		public int DenseRank
		{
			get
			{
				return this._DenseRank;
			}
			set
			{
				if ((this._DenseRank != value))
				{
					this.OnDenseRankChanging(value);
					this.SendPropertyChanging();
					this._DenseRank = value;
					this.SendPropertyChanged("DenseRank");
					this.OnDenseRankChanged();
				}
			}
		}
		
		[Column(Storage="_NTile", DbType="SmallInt NOT NULL")]
		public short NTile
		{
			get
			{
				return this._NTile;
			}
			set
			{
				if ((this._NTile != value))
				{
					this.OnNTileChanging(value);
					this.SendPropertyChanging();
					this._NTile = value;
					this.SendPropertyChanged("NTile");
					this.OnNTileChanged();
				}
			}
		}
		
		[Association(Name="Scheme_Images_MOST_POPULAR_SCHEMES_BY_ABSOLUTEURI", Storage="_Scheme", ThisKey="SchemeID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Scheme Scheme
		{
			get
			{
				return this._Scheme.Entity;
			}
			set
			{
				Scheme previousValue = this._Scheme.Entity;
				if (((previousValue != value) 
							|| (this._Scheme.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Scheme.Entity = null;
						previousValue.Images_MOST_POPULAR_SCHEMES_BY_ABSOLUTEURI = null;
					}
					this._Scheme.Entity = value;
					if ((value != null))
					{
						value.Images_MOST_POPULAR_SCHEMES_BY_ABSOLUTEURI = this;
						this._SchemeID = value.ID;
					}
					else
					{
						this._SchemeID = default(int);
					}
					this.SendPropertyChanged("Scheme");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="rpt.Images_MOST_POPULAR_SCHEMES_BY_DOMAINS")]
	public partial class Images_MOST_POPULAR_SCHEMES_BY_DOMAIN : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RowNumber;
		
		private System.Nullable<System.DateTime> _InitiallyDiscovered;
		
		private System.DateTime _LastDiscovered;
		
		private int _SchemeID;
		
		private int _Count;
		
		private System.Nullable<short> _DaysSinceInitiallyDiscovered;
		
		private short _DaysSinceLastDiscovered;
		
		private System.Nullable<double> _Strength;
		
		private int _Rank;
		
		private int _DenseRank;
		
		private short _NTile;
		
		private EntityRef<Scheme> _Scheme;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRowNumberChanging(int value);
    partial void OnRowNumberChanged();
    partial void OnInitiallyDiscoveredChanging(System.Nullable<System.DateTime> value);
    partial void OnInitiallyDiscoveredChanged();
    partial void OnLastDiscoveredChanging(System.DateTime value);
    partial void OnLastDiscoveredChanged();
    partial void OnSchemeIDChanging(int value);
    partial void OnSchemeIDChanged();
    partial void OnCountChanging(int value);
    partial void OnCountChanged();
    partial void OnDaysSinceInitiallyDiscoveredChanging(System.Nullable<short> value);
    partial void OnDaysSinceInitiallyDiscoveredChanged();
    partial void OnDaysSinceLastDiscoveredChanging(short value);
    partial void OnDaysSinceLastDiscoveredChanged();
    partial void OnStrengthChanging(System.Nullable<double> value);
    partial void OnStrengthChanged();
    partial void OnRankChanging(int value);
    partial void OnRankChanged();
    partial void OnDenseRankChanging(int value);
    partial void OnDenseRankChanged();
    partial void OnNTileChanging(short value);
    partial void OnNTileChanged();
    #endregion
		
		public Images_MOST_POPULAR_SCHEMES_BY_DOMAIN()
		{
			this._Scheme = default(EntityRef<Scheme>);
			OnCreated();
		}
		
		[Column(Storage="_RowNumber", DbType="Int NOT NULL")]
		public int RowNumber
		{
			get
			{
				return this._RowNumber;
			}
			set
			{
				if ((this._RowNumber != value))
				{
					this.OnRowNumberChanging(value);
					this.SendPropertyChanging();
					this._RowNumber = value;
					this.SendPropertyChanged("RowNumber");
					this.OnRowNumberChanged();
				}
			}
		}
		
		[Column(Storage="_InitiallyDiscovered", DbType="DateTime")]
		public System.Nullable<System.DateTime> InitiallyDiscovered
		{
			get
			{
				return this._InitiallyDiscovered;
			}
			set
			{
				if ((this._InitiallyDiscovered != value))
				{
					this.OnInitiallyDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._InitiallyDiscovered = value;
					this.SendPropertyChanged("InitiallyDiscovered");
					this.OnInitiallyDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_LastDiscovered", DbType="DateTime NOT NULL")]
		public System.DateTime LastDiscovered
		{
			get
			{
				return this._LastDiscovered;
			}
			set
			{
				if ((this._LastDiscovered != value))
				{
					this.OnLastDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._LastDiscovered = value;
					this.SendPropertyChanged("LastDiscovered");
					this.OnLastDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_SchemeID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int SchemeID
		{
			get
			{
				return this._SchemeID;
			}
			set
			{
				if ((this._SchemeID != value))
				{
					if (this._Scheme.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSchemeIDChanging(value);
					this.SendPropertyChanging();
					this._SchemeID = value;
					this.SendPropertyChanged("SchemeID");
					this.OnSchemeIDChanged();
				}
			}
		}
		
		[Column(Storage="_Count", DbType="Int NOT NULL")]
		public int Count
		{
			get
			{
				return this._Count;
			}
			set
			{
				if ((this._Count != value))
				{
					this.OnCountChanging(value);
					this.SendPropertyChanging();
					this._Count = value;
					this.SendPropertyChanged("Count");
					this.OnCountChanged();
				}
			}
		}
		
		[Column(Storage="_DaysSinceInitiallyDiscovered", DbType="SmallInt")]
		public System.Nullable<short> DaysSinceInitiallyDiscovered
		{
			get
			{
				return this._DaysSinceInitiallyDiscovered;
			}
			set
			{
				if ((this._DaysSinceInitiallyDiscovered != value))
				{
					this.OnDaysSinceInitiallyDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._DaysSinceInitiallyDiscovered = value;
					this.SendPropertyChanged("DaysSinceInitiallyDiscovered");
					this.OnDaysSinceInitiallyDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_DaysSinceLastDiscovered", DbType="SmallInt NOT NULL")]
		public short DaysSinceLastDiscovered
		{
			get
			{
				return this._DaysSinceLastDiscovered;
			}
			set
			{
				if ((this._DaysSinceLastDiscovered != value))
				{
					this.OnDaysSinceLastDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._DaysSinceLastDiscovered = value;
					this.SendPropertyChanged("DaysSinceLastDiscovered");
					this.OnDaysSinceLastDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_Strength", DbType="Float")]
		public System.Nullable<double> Strength
		{
			get
			{
				return this._Strength;
			}
			set
			{
				if ((this._Strength != value))
				{
					this.OnStrengthChanging(value);
					this.SendPropertyChanging();
					this._Strength = value;
					this.SendPropertyChanged("Strength");
					this.OnStrengthChanged();
				}
			}
		}
		
		[Column(Storage="_Rank", DbType="Int NOT NULL")]
		public int Rank
		{
			get
			{
				return this._Rank;
			}
			set
			{
				if ((this._Rank != value))
				{
					this.OnRankChanging(value);
					this.SendPropertyChanging();
					this._Rank = value;
					this.SendPropertyChanged("Rank");
					this.OnRankChanged();
				}
			}
		}
		
		[Column(Storage="_DenseRank", DbType="Int NOT NULL")]
		public int DenseRank
		{
			get
			{
				return this._DenseRank;
			}
			set
			{
				if ((this._DenseRank != value))
				{
					this.OnDenseRankChanging(value);
					this.SendPropertyChanging();
					this._DenseRank = value;
					this.SendPropertyChanged("DenseRank");
					this.OnDenseRankChanged();
				}
			}
		}
		
		[Column(Storage="_NTile", DbType="SmallInt NOT NULL")]
		public short NTile
		{
			get
			{
				return this._NTile;
			}
			set
			{
				if ((this._NTile != value))
				{
					this.OnNTileChanging(value);
					this.SendPropertyChanging();
					this._NTile = value;
					this.SendPropertyChanged("NTile");
					this.OnNTileChanged();
				}
			}
		}
		
		[Association(Name="Scheme_Images_MOST_POPULAR_SCHEMES_BY_DOMAIN", Storage="_Scheme", ThisKey="SchemeID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Scheme Scheme
		{
			get
			{
				return this._Scheme.Entity;
			}
			set
			{
				Scheme previousValue = this._Scheme.Entity;
				if (((previousValue != value) 
							|| (this._Scheme.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Scheme.Entity = null;
						previousValue.Images_MOST_POPULAR_SCHEMES_BY_DOMAIN = null;
					}
					this._Scheme.Entity = value;
					if ((value != null))
					{
						value.Images_MOST_POPULAR_SCHEMES_BY_DOMAIN = this;
						this._SchemeID = value.ID;
					}
					else
					{
						this._SchemeID = default(int);
					}
					this.SendPropertyChanged("Scheme");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="rpt.Images_MOST_POPULAR_SCHEMES_BY_EXTENSIONS")]
	public partial class Images_MOST_POPULAR_SCHEMES_BY_EXTENSION : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RowNumber;
		
		private System.Nullable<System.DateTime> _InitiallyDiscovered;
		
		private System.DateTime _LastDiscovered;
		
		private int _SchemeID;
		
		private int _Count;
		
		private System.Nullable<short> _DaysSinceInitiallyDiscovered;
		
		private short _DaysSinceLastDiscovered;
		
		private System.Nullable<double> _Strength;
		
		private int _Rank;
		
		private int _DenseRank;
		
		private short _NTile;
		
		private EntityRef<Scheme> _Scheme;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRowNumberChanging(int value);
    partial void OnRowNumberChanged();
    partial void OnInitiallyDiscoveredChanging(System.Nullable<System.DateTime> value);
    partial void OnInitiallyDiscoveredChanged();
    partial void OnLastDiscoveredChanging(System.DateTime value);
    partial void OnLastDiscoveredChanged();
    partial void OnSchemeIDChanging(int value);
    partial void OnSchemeIDChanged();
    partial void OnCountChanging(int value);
    partial void OnCountChanged();
    partial void OnDaysSinceInitiallyDiscoveredChanging(System.Nullable<short> value);
    partial void OnDaysSinceInitiallyDiscoveredChanged();
    partial void OnDaysSinceLastDiscoveredChanging(short value);
    partial void OnDaysSinceLastDiscoveredChanged();
    partial void OnStrengthChanging(System.Nullable<double> value);
    partial void OnStrengthChanged();
    partial void OnRankChanging(int value);
    partial void OnRankChanged();
    partial void OnDenseRankChanging(int value);
    partial void OnDenseRankChanged();
    partial void OnNTileChanging(short value);
    partial void OnNTileChanged();
    #endregion
		
		public Images_MOST_POPULAR_SCHEMES_BY_EXTENSION()
		{
			this._Scheme = default(EntityRef<Scheme>);
			OnCreated();
		}
		
		[Column(Storage="_RowNumber", DbType="Int NOT NULL")]
		public int RowNumber
		{
			get
			{
				return this._RowNumber;
			}
			set
			{
				if ((this._RowNumber != value))
				{
					this.OnRowNumberChanging(value);
					this.SendPropertyChanging();
					this._RowNumber = value;
					this.SendPropertyChanged("RowNumber");
					this.OnRowNumberChanged();
				}
			}
		}
		
		[Column(Storage="_InitiallyDiscovered", DbType="DateTime")]
		public System.Nullable<System.DateTime> InitiallyDiscovered
		{
			get
			{
				return this._InitiallyDiscovered;
			}
			set
			{
				if ((this._InitiallyDiscovered != value))
				{
					this.OnInitiallyDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._InitiallyDiscovered = value;
					this.SendPropertyChanged("InitiallyDiscovered");
					this.OnInitiallyDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_LastDiscovered", DbType="DateTime NOT NULL")]
		public System.DateTime LastDiscovered
		{
			get
			{
				return this._LastDiscovered;
			}
			set
			{
				if ((this._LastDiscovered != value))
				{
					this.OnLastDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._LastDiscovered = value;
					this.SendPropertyChanged("LastDiscovered");
					this.OnLastDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_SchemeID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int SchemeID
		{
			get
			{
				return this._SchemeID;
			}
			set
			{
				if ((this._SchemeID != value))
				{
					if (this._Scheme.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSchemeIDChanging(value);
					this.SendPropertyChanging();
					this._SchemeID = value;
					this.SendPropertyChanged("SchemeID");
					this.OnSchemeIDChanged();
				}
			}
		}
		
		[Column(Storage="_Count", DbType="Int NOT NULL")]
		public int Count
		{
			get
			{
				return this._Count;
			}
			set
			{
				if ((this._Count != value))
				{
					this.OnCountChanging(value);
					this.SendPropertyChanging();
					this._Count = value;
					this.SendPropertyChanged("Count");
					this.OnCountChanged();
				}
			}
		}
		
		[Column(Storage="_DaysSinceInitiallyDiscovered", DbType="SmallInt")]
		public System.Nullable<short> DaysSinceInitiallyDiscovered
		{
			get
			{
				return this._DaysSinceInitiallyDiscovered;
			}
			set
			{
				if ((this._DaysSinceInitiallyDiscovered != value))
				{
					this.OnDaysSinceInitiallyDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._DaysSinceInitiallyDiscovered = value;
					this.SendPropertyChanged("DaysSinceInitiallyDiscovered");
					this.OnDaysSinceInitiallyDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_DaysSinceLastDiscovered", DbType="SmallInt NOT NULL")]
		public short DaysSinceLastDiscovered
		{
			get
			{
				return this._DaysSinceLastDiscovered;
			}
			set
			{
				if ((this._DaysSinceLastDiscovered != value))
				{
					this.OnDaysSinceLastDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._DaysSinceLastDiscovered = value;
					this.SendPropertyChanged("DaysSinceLastDiscovered");
					this.OnDaysSinceLastDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_Strength", DbType="Float")]
		public System.Nullable<double> Strength
		{
			get
			{
				return this._Strength;
			}
			set
			{
				if ((this._Strength != value))
				{
					this.OnStrengthChanging(value);
					this.SendPropertyChanging();
					this._Strength = value;
					this.SendPropertyChanged("Strength");
					this.OnStrengthChanged();
				}
			}
		}
		
		[Column(Storage="_Rank", DbType="Int NOT NULL")]
		public int Rank
		{
			get
			{
				return this._Rank;
			}
			set
			{
				if ((this._Rank != value))
				{
					this.OnRankChanging(value);
					this.SendPropertyChanging();
					this._Rank = value;
					this.SendPropertyChanged("Rank");
					this.OnRankChanged();
				}
			}
		}
		
		[Column(Storage="_DenseRank", DbType="Int NOT NULL")]
		public int DenseRank
		{
			get
			{
				return this._DenseRank;
			}
			set
			{
				if ((this._DenseRank != value))
				{
					this.OnDenseRankChanging(value);
					this.SendPropertyChanging();
					this._DenseRank = value;
					this.SendPropertyChanged("DenseRank");
					this.OnDenseRankChanged();
				}
			}
		}
		
		[Column(Storage="_NTile", DbType="SmallInt NOT NULL")]
		public short NTile
		{
			get
			{
				return this._NTile;
			}
			set
			{
				if ((this._NTile != value))
				{
					this.OnNTileChanging(value);
					this.SendPropertyChanging();
					this._NTile = value;
					this.SendPropertyChanged("NTile");
					this.OnNTileChanged();
				}
			}
		}
		
		[Association(Name="Scheme_Images_MOST_POPULAR_SCHEMES_BY_EXTENSION", Storage="_Scheme", ThisKey="SchemeID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Scheme Scheme
		{
			get
			{
				return this._Scheme.Entity;
			}
			set
			{
				Scheme previousValue = this._Scheme.Entity;
				if (((previousValue != value) 
							|| (this._Scheme.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Scheme.Entity = null;
						previousValue.Images_MOST_POPULAR_SCHEMES_BY_EXTENSION = null;
					}
					this._Scheme.Entity = value;
					if ((value != null))
					{
						value.Images_MOST_POPULAR_SCHEMES_BY_EXTENSION = this;
						this._SchemeID = value.ID;
					}
					else
					{
						this._SchemeID = default(int);
					}
					this.SendPropertyChanged("Scheme");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="rpt.Images_MOST_POPULAR_SCHEMES_BY_HOSTS")]
	public partial class Images_MOST_POPULAR_SCHEMES_BY_HOST : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RowNumber;
		
		private System.Nullable<System.DateTime> _InitiallyDiscovered;
		
		private System.DateTime _LastDiscovered;
		
		private int _SchemeID;
		
		private int _Count;
		
		private System.Nullable<short> _DaysSinceInitiallyDiscovered;
		
		private short _DaysSinceLastDiscovered;
		
		private System.Nullable<double> _Strength;
		
		private int _Rank;
		
		private int _DenseRank;
		
		private short _NTile;
		
		private EntityRef<Scheme> _Scheme;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRowNumberChanging(int value);
    partial void OnRowNumberChanged();
    partial void OnInitiallyDiscoveredChanging(System.Nullable<System.DateTime> value);
    partial void OnInitiallyDiscoveredChanged();
    partial void OnLastDiscoveredChanging(System.DateTime value);
    partial void OnLastDiscoveredChanged();
    partial void OnSchemeIDChanging(int value);
    partial void OnSchemeIDChanged();
    partial void OnCountChanging(int value);
    partial void OnCountChanged();
    partial void OnDaysSinceInitiallyDiscoveredChanging(System.Nullable<short> value);
    partial void OnDaysSinceInitiallyDiscoveredChanged();
    partial void OnDaysSinceLastDiscoveredChanging(short value);
    partial void OnDaysSinceLastDiscoveredChanged();
    partial void OnStrengthChanging(System.Nullable<double> value);
    partial void OnStrengthChanged();
    partial void OnRankChanging(int value);
    partial void OnRankChanged();
    partial void OnDenseRankChanging(int value);
    partial void OnDenseRankChanged();
    partial void OnNTileChanging(short value);
    partial void OnNTileChanged();
    #endregion
		
		public Images_MOST_POPULAR_SCHEMES_BY_HOST()
		{
			this._Scheme = default(EntityRef<Scheme>);
			OnCreated();
		}
		
		[Column(Storage="_RowNumber", DbType="Int NOT NULL")]
		public int RowNumber
		{
			get
			{
				return this._RowNumber;
			}
			set
			{
				if ((this._RowNumber != value))
				{
					this.OnRowNumberChanging(value);
					this.SendPropertyChanging();
					this._RowNumber = value;
					this.SendPropertyChanged("RowNumber");
					this.OnRowNumberChanged();
				}
			}
		}
		
		[Column(Storage="_InitiallyDiscovered", DbType="DateTime")]
		public System.Nullable<System.DateTime> InitiallyDiscovered
		{
			get
			{
				return this._InitiallyDiscovered;
			}
			set
			{
				if ((this._InitiallyDiscovered != value))
				{
					this.OnInitiallyDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._InitiallyDiscovered = value;
					this.SendPropertyChanged("InitiallyDiscovered");
					this.OnInitiallyDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_LastDiscovered", DbType="DateTime NOT NULL")]
		public System.DateTime LastDiscovered
		{
			get
			{
				return this._LastDiscovered;
			}
			set
			{
				if ((this._LastDiscovered != value))
				{
					this.OnLastDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._LastDiscovered = value;
					this.SendPropertyChanged("LastDiscovered");
					this.OnLastDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_SchemeID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int SchemeID
		{
			get
			{
				return this._SchemeID;
			}
			set
			{
				if ((this._SchemeID != value))
				{
					if (this._Scheme.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSchemeIDChanging(value);
					this.SendPropertyChanging();
					this._SchemeID = value;
					this.SendPropertyChanged("SchemeID");
					this.OnSchemeIDChanged();
				}
			}
		}
		
		[Column(Storage="_Count", DbType="Int NOT NULL")]
		public int Count
		{
			get
			{
				return this._Count;
			}
			set
			{
				if ((this._Count != value))
				{
					this.OnCountChanging(value);
					this.SendPropertyChanging();
					this._Count = value;
					this.SendPropertyChanged("Count");
					this.OnCountChanged();
				}
			}
		}
		
		[Column(Storage="_DaysSinceInitiallyDiscovered", DbType="SmallInt")]
		public System.Nullable<short> DaysSinceInitiallyDiscovered
		{
			get
			{
				return this._DaysSinceInitiallyDiscovered;
			}
			set
			{
				if ((this._DaysSinceInitiallyDiscovered != value))
				{
					this.OnDaysSinceInitiallyDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._DaysSinceInitiallyDiscovered = value;
					this.SendPropertyChanged("DaysSinceInitiallyDiscovered");
					this.OnDaysSinceInitiallyDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_DaysSinceLastDiscovered", DbType="SmallInt NOT NULL")]
		public short DaysSinceLastDiscovered
		{
			get
			{
				return this._DaysSinceLastDiscovered;
			}
			set
			{
				if ((this._DaysSinceLastDiscovered != value))
				{
					this.OnDaysSinceLastDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._DaysSinceLastDiscovered = value;
					this.SendPropertyChanged("DaysSinceLastDiscovered");
					this.OnDaysSinceLastDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_Strength", DbType="Float")]
		public System.Nullable<double> Strength
		{
			get
			{
				return this._Strength;
			}
			set
			{
				if ((this._Strength != value))
				{
					this.OnStrengthChanging(value);
					this.SendPropertyChanging();
					this._Strength = value;
					this.SendPropertyChanged("Strength");
					this.OnStrengthChanged();
				}
			}
		}
		
		[Column(Storage="_Rank", DbType="Int NOT NULL")]
		public int Rank
		{
			get
			{
				return this._Rank;
			}
			set
			{
				if ((this._Rank != value))
				{
					this.OnRankChanging(value);
					this.SendPropertyChanging();
					this._Rank = value;
					this.SendPropertyChanged("Rank");
					this.OnRankChanged();
				}
			}
		}
		
		[Column(Storage="_DenseRank", DbType="Int NOT NULL")]
		public int DenseRank
		{
			get
			{
				return this._DenseRank;
			}
			set
			{
				if ((this._DenseRank != value))
				{
					this.OnDenseRankChanging(value);
					this.SendPropertyChanging();
					this._DenseRank = value;
					this.SendPropertyChanged("DenseRank");
					this.OnDenseRankChanged();
				}
			}
		}
		
		[Column(Storage="_NTile", DbType="SmallInt NOT NULL")]
		public short NTile
		{
			get
			{
				return this._NTile;
			}
			set
			{
				if ((this._NTile != value))
				{
					this.OnNTileChanging(value);
					this.SendPropertyChanging();
					this._NTile = value;
					this.SendPropertyChanged("NTile");
					this.OnNTileChanged();
				}
			}
		}
		
		[Association(Name="Scheme_Images_MOST_POPULAR_SCHEMES_BY_HOST", Storage="_Scheme", ThisKey="SchemeID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Scheme Scheme
		{
			get
			{
				return this._Scheme.Entity;
			}
			set
			{
				Scheme previousValue = this._Scheme.Entity;
				if (((previousValue != value) 
							|| (this._Scheme.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Scheme.Entity = null;
						previousValue.Images_MOST_POPULAR_SCHEMES_BY_HOST = null;
					}
					this._Scheme.Entity = value;
					if ((value != null))
					{
						value.Images_MOST_POPULAR_SCHEMES_BY_HOST = this;
						this._SchemeID = value.ID;
					}
					else
					{
						this._SchemeID = default(int);
					}
					this.SendPropertyChanged("Scheme");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="rpt.Images_MOST_POPULAR_SCHEMES_BY_SCHEMES")]
	public partial class Images_MOST_POPULAR_SCHEMES_BY_SCHEME : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RowNumber;
		
		private System.Nullable<System.DateTime> _InitiallyDiscovered;
		
		private System.DateTime _LastDiscovered;
		
		private int _SchemeID;
		
		private int _Count;
		
		private System.Nullable<short> _DaysSinceInitiallyDiscovered;
		
		private short _DaysSinceLastDiscovered;
		
		private System.Nullable<double> _Strength;
		
		private int _Rank;
		
		private int _DenseRank;
		
		private short _NTile;
		
		private EntityRef<Scheme> _Scheme;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRowNumberChanging(int value);
    partial void OnRowNumberChanged();
    partial void OnInitiallyDiscoveredChanging(System.Nullable<System.DateTime> value);
    partial void OnInitiallyDiscoveredChanged();
    partial void OnLastDiscoveredChanging(System.DateTime value);
    partial void OnLastDiscoveredChanged();
    partial void OnSchemeIDChanging(int value);
    partial void OnSchemeIDChanged();
    partial void OnCountChanging(int value);
    partial void OnCountChanged();
    partial void OnDaysSinceInitiallyDiscoveredChanging(System.Nullable<short> value);
    partial void OnDaysSinceInitiallyDiscoveredChanged();
    partial void OnDaysSinceLastDiscoveredChanging(short value);
    partial void OnDaysSinceLastDiscoveredChanged();
    partial void OnStrengthChanging(System.Nullable<double> value);
    partial void OnStrengthChanged();
    partial void OnRankChanging(int value);
    partial void OnRankChanged();
    partial void OnDenseRankChanging(int value);
    partial void OnDenseRankChanged();
    partial void OnNTileChanging(short value);
    partial void OnNTileChanged();
    #endregion
		
		public Images_MOST_POPULAR_SCHEMES_BY_SCHEME()
		{
			this._Scheme = default(EntityRef<Scheme>);
			OnCreated();
		}
		
		[Column(Storage="_RowNumber", DbType="Int NOT NULL")]
		public int RowNumber
		{
			get
			{
				return this._RowNumber;
			}
			set
			{
				if ((this._RowNumber != value))
				{
					this.OnRowNumberChanging(value);
					this.SendPropertyChanging();
					this._RowNumber = value;
					this.SendPropertyChanged("RowNumber");
					this.OnRowNumberChanged();
				}
			}
		}
		
		[Column(Storage="_InitiallyDiscovered", DbType="DateTime")]
		public System.Nullable<System.DateTime> InitiallyDiscovered
		{
			get
			{
				return this._InitiallyDiscovered;
			}
			set
			{
				if ((this._InitiallyDiscovered != value))
				{
					this.OnInitiallyDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._InitiallyDiscovered = value;
					this.SendPropertyChanged("InitiallyDiscovered");
					this.OnInitiallyDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_LastDiscovered", DbType="DateTime NOT NULL")]
		public System.DateTime LastDiscovered
		{
			get
			{
				return this._LastDiscovered;
			}
			set
			{
				if ((this._LastDiscovered != value))
				{
					this.OnLastDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._LastDiscovered = value;
					this.SendPropertyChanged("LastDiscovered");
					this.OnLastDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_SchemeID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int SchemeID
		{
			get
			{
				return this._SchemeID;
			}
			set
			{
				if ((this._SchemeID != value))
				{
					if (this._Scheme.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSchemeIDChanging(value);
					this.SendPropertyChanging();
					this._SchemeID = value;
					this.SendPropertyChanged("SchemeID");
					this.OnSchemeIDChanged();
				}
			}
		}
		
		[Column(Storage="_Count", DbType="Int NOT NULL")]
		public int Count
		{
			get
			{
				return this._Count;
			}
			set
			{
				if ((this._Count != value))
				{
					this.OnCountChanging(value);
					this.SendPropertyChanging();
					this._Count = value;
					this.SendPropertyChanged("Count");
					this.OnCountChanged();
				}
			}
		}
		
		[Column(Storage="_DaysSinceInitiallyDiscovered", DbType="SmallInt")]
		public System.Nullable<short> DaysSinceInitiallyDiscovered
		{
			get
			{
				return this._DaysSinceInitiallyDiscovered;
			}
			set
			{
				if ((this._DaysSinceInitiallyDiscovered != value))
				{
					this.OnDaysSinceInitiallyDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._DaysSinceInitiallyDiscovered = value;
					this.SendPropertyChanged("DaysSinceInitiallyDiscovered");
					this.OnDaysSinceInitiallyDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_DaysSinceLastDiscovered", DbType="SmallInt NOT NULL")]
		public short DaysSinceLastDiscovered
		{
			get
			{
				return this._DaysSinceLastDiscovered;
			}
			set
			{
				if ((this._DaysSinceLastDiscovered != value))
				{
					this.OnDaysSinceLastDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._DaysSinceLastDiscovered = value;
					this.SendPropertyChanged("DaysSinceLastDiscovered");
					this.OnDaysSinceLastDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_Strength", DbType="Float")]
		public System.Nullable<double> Strength
		{
			get
			{
				return this._Strength;
			}
			set
			{
				if ((this._Strength != value))
				{
					this.OnStrengthChanging(value);
					this.SendPropertyChanging();
					this._Strength = value;
					this.SendPropertyChanged("Strength");
					this.OnStrengthChanged();
				}
			}
		}
		
		[Column(Storage="_Rank", DbType="Int NOT NULL")]
		public int Rank
		{
			get
			{
				return this._Rank;
			}
			set
			{
				if ((this._Rank != value))
				{
					this.OnRankChanging(value);
					this.SendPropertyChanging();
					this._Rank = value;
					this.SendPropertyChanged("Rank");
					this.OnRankChanged();
				}
			}
		}
		
		[Column(Storage="_DenseRank", DbType="Int NOT NULL")]
		public int DenseRank
		{
			get
			{
				return this._DenseRank;
			}
			set
			{
				if ((this._DenseRank != value))
				{
					this.OnDenseRankChanging(value);
					this.SendPropertyChanging();
					this._DenseRank = value;
					this.SendPropertyChanged("DenseRank");
					this.OnDenseRankChanged();
				}
			}
		}
		
		[Column(Storage="_NTile", DbType="SmallInt NOT NULL")]
		public short NTile
		{
			get
			{
				return this._NTile;
			}
			set
			{
				if ((this._NTile != value))
				{
					this.OnNTileChanging(value);
					this.SendPropertyChanging();
					this._NTile = value;
					this.SendPropertyChanged("NTile");
					this.OnNTileChanged();
				}
			}
		}
		
		[Association(Name="Scheme_Images_MOST_POPULAR_SCHEMES_BY_SCHEME", Storage="_Scheme", ThisKey="SchemeID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Scheme Scheme
		{
			get
			{
				return this._Scheme.Entity;
			}
			set
			{
				Scheme previousValue = this._Scheme.Entity;
				if (((previousValue != value) 
							|| (this._Scheme.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Scheme.Entity = null;
						previousValue.Images_MOST_POPULAR_SCHEMES_BY_SCHEME = null;
					}
					this._Scheme.Entity = value;
					if ((value != null))
					{
						value.Images_MOST_POPULAR_SCHEMES_BY_SCHEME = this;
						this._SchemeID = value.ID;
					}
					else
					{
						this._SchemeID = default(int);
					}
					this.SendPropertyChanged("Scheme");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="rpt.WebPages_COUNT_BY_DOMAIN")]
	public partial class WebPages_COUNT_BY_DOMAIN : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RowNumber;
		
		private string _Domain;
		
		private int _Count;
		
		private int _Rank;
		
		private int _DenseRank;
		
		private byte _NTile;
		
		private EntityRef<Domain> _Domain1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRowNumberChanging(int value);
    partial void OnRowNumberChanged();
    partial void OnDomainChanging(string value);
    partial void OnDomainChanged();
    partial void OnCountChanging(int value);
    partial void OnCountChanged();
    partial void OnRankChanging(int value);
    partial void OnRankChanged();
    partial void OnDenseRankChanging(int value);
    partial void OnDenseRankChanged();
    partial void OnNTileChanging(byte value);
    partial void OnNTileChanged();
    #endregion
		
		public WebPages_COUNT_BY_DOMAIN()
		{
			this._Domain1 = default(EntityRef<Domain>);
			OnCreated();
		}
		
		[Column(Storage="_RowNumber", DbType="Int NOT NULL")]
		public int RowNumber
		{
			get
			{
				return this._RowNumber;
			}
			set
			{
				if ((this._RowNumber != value))
				{
					this.OnRowNumberChanging(value);
					this.SendPropertyChanging();
					this._RowNumber = value;
					this.SendPropertyChanged("RowNumber");
					this.OnRowNumberChanged();
				}
			}
		}
		
		[Column(Storage="_Domain", DbType="VarChar(884) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Domain
		{
			get
			{
				return this._Domain;
			}
			set
			{
				if ((this._Domain != value))
				{
					if (this._Domain1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDomainChanging(value);
					this.SendPropertyChanging();
					this._Domain = value;
					this.SendPropertyChanged("Domain");
					this.OnDomainChanged();
				}
			}
		}
		
		[Column(Storage="_Count", DbType="Int NOT NULL")]
		public int Count
		{
			get
			{
				return this._Count;
			}
			set
			{
				if ((this._Count != value))
				{
					this.OnCountChanging(value);
					this.SendPropertyChanging();
					this._Count = value;
					this.SendPropertyChanged("Count");
					this.OnCountChanged();
				}
			}
		}
		
		[Column(Storage="_Rank", DbType="Int NOT NULL")]
		public int Rank
		{
			get
			{
				return this._Rank;
			}
			set
			{
				if ((this._Rank != value))
				{
					this.OnRankChanging(value);
					this.SendPropertyChanging();
					this._Rank = value;
					this.SendPropertyChanged("Rank");
					this.OnRankChanged();
				}
			}
		}
		
		[Column(Storage="_DenseRank", DbType="Int NOT NULL")]
		public int DenseRank
		{
			get
			{
				return this._DenseRank;
			}
			set
			{
				if ((this._DenseRank != value))
				{
					this.OnDenseRankChanging(value);
					this.SendPropertyChanging();
					this._DenseRank = value;
					this.SendPropertyChanged("DenseRank");
					this.OnDenseRankChanged();
				}
			}
		}
		
		[Column(Storage="_NTile", DbType="TinyInt NOT NULL")]
		public byte NTile
		{
			get
			{
				return this._NTile;
			}
			set
			{
				if ((this._NTile != value))
				{
					this.OnNTileChanging(value);
					this.SendPropertyChanging();
					this._NTile = value;
					this.SendPropertyChanged("NTile");
					this.OnNTileChanged();
				}
			}
		}
		
		[Association(Name="Domain_WebPages_COUNT_BY_DOMAIN", Storage="_Domain1", ThisKey="Domain", OtherKey="Domain1", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Domain Domain1
		{
			get
			{
				return this._Domain1.Entity;
			}
			set
			{
				Domain previousValue = this._Domain1.Entity;
				if (((previousValue != value) 
							|| (this._Domain1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Domain1.Entity = null;
						previousValue.WebPages_COUNT_BY_DOMAIN = null;
					}
					this._Domain1.Entity = value;
					if ((value != null))
					{
						value.WebPages_COUNT_BY_DOMAIN = this;
						this._Domain = value.Domain1;
					}
					else
					{
						this._Domain = default(string);
					}
					this.SendPropertyChanged("Domain1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="rpt.WebPages_COUNT_BY_EXTENSION")]
	public partial class WebPages_COUNT_BY_EXTENSION : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RowNumber;
		
		private string _Extension;
		
		private int _Count;
		
		private int _Rank;
		
		private int _DenseRank;
		
		private byte _NTile;
		
		private EntityRef<Extension> _Extension1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRowNumberChanging(int value);
    partial void OnRowNumberChanged();
    partial void OnExtensionChanging(string value);
    partial void OnExtensionChanged();
    partial void OnCountChanging(int value);
    partial void OnCountChanged();
    partial void OnRankChanging(int value);
    partial void OnRankChanged();
    partial void OnDenseRankChanging(int value);
    partial void OnDenseRankChanged();
    partial void OnNTileChanging(byte value);
    partial void OnNTileChanged();
    #endregion
		
		public WebPages_COUNT_BY_EXTENSION()
		{
			this._Extension1 = default(EntityRef<Extension>);
			OnCreated();
		}
		
		[Column(Storage="_RowNumber", DbType="Int NOT NULL")]
		public int RowNumber
		{
			get
			{
				return this._RowNumber;
			}
			set
			{
				if ((this._RowNumber != value))
				{
					this.OnRowNumberChanging(value);
					this.SendPropertyChanging();
					this._RowNumber = value;
					this.SendPropertyChanged("RowNumber");
					this.OnRowNumberChanged();
				}
			}
		}
		
		[Column(Storage="_Extension", DbType="VarChar(884) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Extension
		{
			get
			{
				return this._Extension;
			}
			set
			{
				if ((this._Extension != value))
				{
					if (this._Extension1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnExtensionChanging(value);
					this.SendPropertyChanging();
					this._Extension = value;
					this.SendPropertyChanged("Extension");
					this.OnExtensionChanged();
				}
			}
		}
		
		[Column(Storage="_Count", DbType="Int NOT NULL")]
		public int Count
		{
			get
			{
				return this._Count;
			}
			set
			{
				if ((this._Count != value))
				{
					this.OnCountChanging(value);
					this.SendPropertyChanging();
					this._Count = value;
					this.SendPropertyChanged("Count");
					this.OnCountChanged();
				}
			}
		}
		
		[Column(Storage="_Rank", DbType="Int NOT NULL")]
		public int Rank
		{
			get
			{
				return this._Rank;
			}
			set
			{
				if ((this._Rank != value))
				{
					this.OnRankChanging(value);
					this.SendPropertyChanging();
					this._Rank = value;
					this.SendPropertyChanged("Rank");
					this.OnRankChanged();
				}
			}
		}
		
		[Column(Storage="_DenseRank", DbType="Int NOT NULL")]
		public int DenseRank
		{
			get
			{
				return this._DenseRank;
			}
			set
			{
				if ((this._DenseRank != value))
				{
					this.OnDenseRankChanging(value);
					this.SendPropertyChanging();
					this._DenseRank = value;
					this.SendPropertyChanged("DenseRank");
					this.OnDenseRankChanged();
				}
			}
		}
		
		[Column(Storage="_NTile", DbType="TinyInt NOT NULL")]
		public byte NTile
		{
			get
			{
				return this._NTile;
			}
			set
			{
				if ((this._NTile != value))
				{
					this.OnNTileChanging(value);
					this.SendPropertyChanging();
					this._NTile = value;
					this.SendPropertyChanged("NTile");
					this.OnNTileChanged();
				}
			}
		}
		
		[Association(Name="Extension_WebPages_COUNT_BY_EXTENSION", Storage="_Extension1", ThisKey="Extension", OtherKey="Extension1", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Extension Extension1
		{
			get
			{
				return this._Extension1.Entity;
			}
			set
			{
				Extension previousValue = this._Extension1.Entity;
				if (((previousValue != value) 
							|| (this._Extension1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Extension1.Entity = null;
						previousValue.WebPages_COUNT_BY_EXTENSION = null;
					}
					this._Extension1.Entity = value;
					if ((value != null))
					{
						value.WebPages_COUNT_BY_EXTENSION = this;
						this._Extension = value.Extension1;
					}
					else
					{
						this._Extension = default(string);
					}
					this.SendPropertyChanged("Extension1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="rpt.WebPages_COUNT_BY_FULLTEXTINDEXTYPE")]
	public partial class WebPages_COUNT_BY_FULLTEXTINDEXTYPE : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RowNumber;
		
		private string _FullTextIndexType;
		
		private int _Count;
		
		private int _Rank;
		
		private int _DenseRank;
		
		private byte _NTile;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRowNumberChanging(int value);
    partial void OnRowNumberChanged();
    partial void OnFullTextIndexTypeChanging(string value);
    partial void OnFullTextIndexTypeChanged();
    partial void OnCountChanging(int value);
    partial void OnCountChanged();
    partial void OnRankChanging(int value);
    partial void OnRankChanged();
    partial void OnDenseRankChanging(int value);
    partial void OnDenseRankChanged();
    partial void OnNTileChanging(byte value);
    partial void OnNTileChanged();
    #endregion
		
		public WebPages_COUNT_BY_FULLTEXTINDEXTYPE()
		{
			OnCreated();
		}
		
		[Column(Storage="_RowNumber", DbType="Int NOT NULL")]
		public int RowNumber
		{
			get
			{
				return this._RowNumber;
			}
			set
			{
				if ((this._RowNumber != value))
				{
					this.OnRowNumberChanging(value);
					this.SendPropertyChanging();
					this._RowNumber = value;
					this.SendPropertyChanged("RowNumber");
					this.OnRowNumberChanged();
				}
			}
		}
		
		[Column(Storage="_FullTextIndexType", DbType="VarChar(20) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string FullTextIndexType
		{
			get
			{
				return this._FullTextIndexType;
			}
			set
			{
				if ((this._FullTextIndexType != value))
				{
					this.OnFullTextIndexTypeChanging(value);
					this.SendPropertyChanging();
					this._FullTextIndexType = value;
					this.SendPropertyChanged("FullTextIndexType");
					this.OnFullTextIndexTypeChanged();
				}
			}
		}
		
		[Column(Storage="_Count", DbType="Int NOT NULL")]
		public int Count
		{
			get
			{
				return this._Count;
			}
			set
			{
				if ((this._Count != value))
				{
					this.OnCountChanging(value);
					this.SendPropertyChanging();
					this._Count = value;
					this.SendPropertyChanged("Count");
					this.OnCountChanged();
				}
			}
		}
		
		[Column(Storage="_Rank", DbType="Int NOT NULL")]
		public int Rank
		{
			get
			{
				return this._Rank;
			}
			set
			{
				if ((this._Rank != value))
				{
					this.OnRankChanging(value);
					this.SendPropertyChanging();
					this._Rank = value;
					this.SendPropertyChanged("Rank");
					this.OnRankChanged();
				}
			}
		}
		
		[Column(Storage="_DenseRank", DbType="Int NOT NULL")]
		public int DenseRank
		{
			get
			{
				return this._DenseRank;
			}
			set
			{
				if ((this._DenseRank != value))
				{
					this.OnDenseRankChanging(value);
					this.SendPropertyChanging();
					this._DenseRank = value;
					this.SendPropertyChanged("DenseRank");
					this.OnDenseRankChanged();
				}
			}
		}
		
		[Column(Storage="_NTile", DbType="TinyInt NOT NULL")]
		public byte NTile
		{
			get
			{
				return this._NTile;
			}
			set
			{
				if ((this._NTile != value))
				{
					this.OnNTileChanging(value);
					this.SendPropertyChanging();
					this._NTile = value;
					this.SendPropertyChanged("NTile");
					this.OnNTileChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="rpt.WebPages_COUNT_BY_HOST")]
	public partial class WebPages_COUNT_BY_HOST : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RowNumber;
		
		private string _Host;
		
		private int _Count;
		
		private int _Rank;
		
		private int _DenseRank;
		
		private byte _NTile;
		
		private EntityRef<Host> _Host1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRowNumberChanging(int value);
    partial void OnRowNumberChanged();
    partial void OnHostChanging(string value);
    partial void OnHostChanged();
    partial void OnCountChanging(int value);
    partial void OnCountChanged();
    partial void OnRankChanging(int value);
    partial void OnRankChanged();
    partial void OnDenseRankChanging(int value);
    partial void OnDenseRankChanged();
    partial void OnNTileChanging(byte value);
    partial void OnNTileChanged();
    #endregion
		
		public WebPages_COUNT_BY_HOST()
		{
			this._Host1 = default(EntityRef<Host>);
			OnCreated();
		}
		
		[Column(Storage="_RowNumber", DbType="Int NOT NULL")]
		public int RowNumber
		{
			get
			{
				return this._RowNumber;
			}
			set
			{
				if ((this._RowNumber != value))
				{
					this.OnRowNumberChanging(value);
					this.SendPropertyChanging();
					this._RowNumber = value;
					this.SendPropertyChanged("RowNumber");
					this.OnRowNumberChanged();
				}
			}
		}
		
		[Column(Storage="_Host", DbType="VarChar(884) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Host
		{
			get
			{
				return this._Host;
			}
			set
			{
				if ((this._Host != value))
				{
					if (this._Host1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnHostChanging(value);
					this.SendPropertyChanging();
					this._Host = value;
					this.SendPropertyChanged("Host");
					this.OnHostChanged();
				}
			}
		}
		
		[Column(Storage="_Count", DbType="Int NOT NULL")]
		public int Count
		{
			get
			{
				return this._Count;
			}
			set
			{
				if ((this._Count != value))
				{
					this.OnCountChanging(value);
					this.SendPropertyChanging();
					this._Count = value;
					this.SendPropertyChanged("Count");
					this.OnCountChanged();
				}
			}
		}
		
		[Column(Storage="_Rank", DbType="Int NOT NULL")]
		public int Rank
		{
			get
			{
				return this._Rank;
			}
			set
			{
				if ((this._Rank != value))
				{
					this.OnRankChanging(value);
					this.SendPropertyChanging();
					this._Rank = value;
					this.SendPropertyChanged("Rank");
					this.OnRankChanged();
				}
			}
		}
		
		[Column(Storage="_DenseRank", DbType="Int NOT NULL")]
		public int DenseRank
		{
			get
			{
				return this._DenseRank;
			}
			set
			{
				if ((this._DenseRank != value))
				{
					this.OnDenseRankChanging(value);
					this.SendPropertyChanging();
					this._DenseRank = value;
					this.SendPropertyChanged("DenseRank");
					this.OnDenseRankChanged();
				}
			}
		}
		
		[Column(Storage="_NTile", DbType="TinyInt NOT NULL")]
		public byte NTile
		{
			get
			{
				return this._NTile;
			}
			set
			{
				if ((this._NTile != value))
				{
					this.OnNTileChanging(value);
					this.SendPropertyChanging();
					this._NTile = value;
					this.SendPropertyChanged("NTile");
					this.OnNTileChanged();
				}
			}
		}
		
		[Association(Name="Host_WebPages_COUNT_BY_HOST", Storage="_Host1", ThisKey="Host", OtherKey="Host1", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Host Host1
		{
			get
			{
				return this._Host1.Entity;
			}
			set
			{
				Host previousValue = this._Host1.Entity;
				if (((previousValue != value) 
							|| (this._Host1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Host1.Entity = null;
						previousValue.WebPages_COUNT_BY_HOST = null;
					}
					this._Host1.Entity = value;
					if ((value != null))
					{
						value.WebPages_COUNT_BY_HOST = this;
						this._Host = value.Host1;
					}
					else
					{
						this._Host = default(string);
					}
					this.SendPropertyChanged("Host1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.Domains_Discoveries")]
	public partial class Domains_Discovery : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Nullable<System.DateTime> _InitiallyDiscovered;
		
		private System.Nullable<System.DateTime> _LastDiscovered;
		
		private int _ID;
		
		private byte _DiscoveryTypeID;
		
		private int _DomainID;
		
		private EntityRef<Domain> _Domain;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnInitiallyDiscoveredChanging(System.Nullable<System.DateTime> value);
    partial void OnInitiallyDiscoveredChanged();
    partial void OnLastDiscoveredChanging(System.Nullable<System.DateTime> value);
    partial void OnLastDiscoveredChanged();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnDiscoveryTypeIDChanging(byte value);
    partial void OnDiscoveryTypeIDChanged();
    partial void OnDomainIDChanging(int value);
    partial void OnDomainIDChanged();
    #endregion
		
		public Domains_Discovery()
		{
			this._Domain = default(EntityRef<Domain>);
			OnCreated();
		}
		
		[Column(Storage="_InitiallyDiscovered", DbType="DateTime")]
		public System.Nullable<System.DateTime> InitiallyDiscovered
		{
			get
			{
				return this._InitiallyDiscovered;
			}
			set
			{
				if ((this._InitiallyDiscovered != value))
				{
					this.OnInitiallyDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._InitiallyDiscovered = value;
					this.SendPropertyChanged("InitiallyDiscovered");
					this.OnInitiallyDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_LastDiscovered", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastDiscovered
		{
			get
			{
				return this._LastDiscovered;
			}
			set
			{
				if ((this._LastDiscovered != value))
				{
					this.OnLastDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._LastDiscovered = value;
					this.SendPropertyChanged("LastDiscovered");
					this.OnLastDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[Column(Storage="_DiscoveryTypeID", DbType="TinyInt NOT NULL")]
		public byte DiscoveryTypeID
		{
			get
			{
				return this._DiscoveryTypeID;
			}
			set
			{
				if ((this._DiscoveryTypeID != value))
				{
					this.OnDiscoveryTypeIDChanging(value);
					this.SendPropertyChanging();
					this._DiscoveryTypeID = value;
					this.SendPropertyChanged("DiscoveryTypeID");
					this.OnDiscoveryTypeIDChanged();
				}
			}
		}
		
		[Column(Storage="_DomainID", DbType="Int NOT NULL")]
		public int DomainID
		{
			get
			{
				return this._DomainID;
			}
			set
			{
				if ((this._DomainID != value))
				{
					if (this._Domain.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDomainIDChanging(value);
					this.SendPropertyChanging();
					this._DomainID = value;
					this.SendPropertyChanged("DomainID");
					this.OnDomainIDChanged();
				}
			}
		}
		
		[Association(Name="Domain_Domains_Discovery", Storage="_Domain", ThisKey="DomainID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Domain Domain
		{
			get
			{
				return this._Domain.Entity;
			}
			set
			{
				Domain previousValue = this._Domain.Entity;
				if (((previousValue != value) 
							|| (this._Domain.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Domain.Entity = null;
						previousValue.Domains_Discoveries.Remove(this);
					}
					this._Domain.Entity = value;
					if ((value != null))
					{
						value.Domains_Discoveries.Add(this);
						this._DomainID = value.ID;
					}
					else
					{
						this._DomainID = default(int);
					}
					this.SendPropertyChanged("Domain");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.Domains")]
	public partial class Domain : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _ExtensionID;
		
		private string _Domain1;
		
		private EntityRef<DisallowedAbsoluteUris_COUNT_BY_DOMAIN> _DisallowedAbsoluteUris_COUNT_BY_DOMAIN;
		
		private EntityRef<DisallowedAbsoluteUris_MOST_POPULAR_DOMAINS_BY_ABSOLUTEURI> _DisallowedAbsoluteUris_MOST_POPULAR_DOMAINS_BY_ABSOLUTEURI;
		
		private EntityRef<DisallowedAbsoluteUris_MOST_POPULAR_DOMAINS_BY_DOMAIN> _DisallowedAbsoluteUris_MOST_POPULAR_DOMAINS_BY_DOMAIN;
		
		private EntityRef<DisallowedAbsoluteUris_MOST_POPULAR_DOMAINS_BY_EXTENSION> _DisallowedAbsoluteUris_MOST_POPULAR_DOMAINS_BY_EXTENSION;
		
		private EntityRef<DisallowedAbsoluteUris_MOST_POPULAR_DOMAINS_BY_HOST> _DisallowedAbsoluteUris_MOST_POPULAR_DOMAINS_BY_HOST;
		
		private EntityRef<DisallowedAbsoluteUris_MOST_POPULAR_DOMAINS_BY_SCHEME> _DisallowedAbsoluteUris_MOST_POPULAR_DOMAINS_BY_SCHEME;
		
		private EntityRef<EmailAddresses_COUNT_BY_DOMAIN> _EmailAddresses_COUNT_BY_DOMAIN;
		
		private EntityRef<EmailAddresses_MOST_POPULAR_DOMAINS_BY_ABSOLUTEURI> _EmailAddresses_MOST_POPULAR_DOMAINS_BY_ABSOLUTEURI;
		
		private EntityRef<EmailAddresses_MOST_POPULAR_DOMAINS_BY_DOMAIN> _EmailAddresses_MOST_POPULAR_DOMAINS_BY_DOMAIN;
		
		private EntityRef<EmailAddresses_MOST_POPULAR_DOMAINS_BY_EXTENSION> _EmailAddresses_MOST_POPULAR_DOMAINS_BY_EXTENSION;
		
		private EntityRef<EmailAddresses_MOST_POPULAR_DOMAINS_BY_HOST> _EmailAddresses_MOST_POPULAR_DOMAINS_BY_HOST;
		
		private EntityRef<EmailAddresses_MOST_POPULAR_DOMAINS_BY_SCHEME> _EmailAddresses_MOST_POPULAR_DOMAINS_BY_SCHEME;
		
		private EntityRef<Exceptions_COUNT_BY_DOMAIN1> _Exceptions_COUNT_BY_DOMAIN1;
		
		private EntityRef<Exceptions_COUNT_BY_DOMAIN2> _Exceptions_COUNT_BY_DOMAIN2;
		
		private EntityRef<Files_COUNT_BY_DOMAIN> _Files_COUNT_BY_DOMAIN;
		
		private EntityRef<Files_MOST_POPULAR_DOMAINS_BY_ABSOLUTEURI> _Files_MOST_POPULAR_DOMAINS_BY_ABSOLUTEURI;
		
		private EntityRef<Files_MOST_POPULAR_DOMAINS_BY_DOMAIN> _Files_MOST_POPULAR_DOMAINS_BY_DOMAIN;
		
		private EntityRef<Files_MOST_POPULAR_DOMAINS_BY_EXTENSION> _Files_MOST_POPULAR_DOMAINS_BY_EXTENSION;
		
		private EntityRef<Files_MOST_POPULAR_DOMAINS_BY_HOST> _Files_MOST_POPULAR_DOMAINS_BY_HOST;
		
		private EntityRef<Files_MOST_POPULAR_DOMAINS_BY_SCHEME> _Files_MOST_POPULAR_DOMAINS_BY_SCHEME;
		
		private EntityRef<HyperLinks_COUNT_BY_DOMAIN> _HyperLinks_COUNT_BY_DOMAIN;
		
		private EntityRef<HyperLinks_MOST_POPULAR_DOMAINS_BY_ABSOLUTEURI> _HyperLinks_MOST_POPULAR_DOMAINS_BY_ABSOLUTEURI;
		
		private EntityRef<HyperLinks_MOST_POPULAR_DOMAINS_BY_DOMAIN> _HyperLinks_MOST_POPULAR_DOMAINS_BY_DOMAIN;
		
		private EntityRef<HyperLinks_MOST_POPULAR_DOMAINS_BY_EXTENSION> _HyperLinks_MOST_POPULAR_DOMAINS_BY_EXTENSION;
		
		private EntityRef<HyperLinks_MOST_POPULAR_DOMAINS_BY_HOST> _HyperLinks_MOST_POPULAR_DOMAINS_BY_HOST;
		
		private EntityRef<HyperLinks_MOST_POPULAR_DOMAINS_BY_SCHEME> _HyperLinks_MOST_POPULAR_DOMAINS_BY_SCHEME;
		
		private EntityRef<Images_COUNT_BY_DOMAIN> _Images_COUNT_BY_DOMAIN;
		
		private EntityRef<Images_MOST_POPULAR_DOMAINS_BY_ABSOLUTEURI> _Images_MOST_POPULAR_DOMAINS_BY_ABSOLUTEURI;
		
		private EntityRef<Images_MOST_POPULAR_DOMAINS_BY_DOMAIN> _Images_MOST_POPULAR_DOMAINS_BY_DOMAIN;
		
		private EntityRef<Images_MOST_POPULAR_DOMAINS_BY_EXTENSION> _Images_MOST_POPULAR_DOMAINS_BY_EXTENSION;
		
		private EntityRef<Images_MOST_POPULAR_DOMAINS_BY_HOST> _Images_MOST_POPULAR_DOMAINS_BY_HOST;
		
		private EntityRef<Images_MOST_POPULAR_DOMAINS_BY_SCHEME> _Images_MOST_POPULAR_DOMAINS_BY_SCHEME;
		
		private EntityRef<WebPages_COUNT_BY_DOMAIN> _WebPages_COUNT_BY_DOMAIN;
		
		private EntitySet<Domains_Discovery> _Domains_Discoveries;
		
		private EntitySet<Host> _Hosts;
		
		private EntityRef<Extension> _Extension;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnExtensionIDChanging(int value);
    partial void OnExtensionIDChanged();
    partial void OnDomain1Changing(string value);
    partial void OnDomain1Changed();
    #endregion
		
		public Domain()
		{
			this._DisallowedAbsoluteUris_COUNT_BY_DOMAIN = default(EntityRef<DisallowedAbsoluteUris_COUNT_BY_DOMAIN>);
			this._DisallowedAbsoluteUris_MOST_POPULAR_DOMAINS_BY_ABSOLUTEURI = default(EntityRef<DisallowedAbsoluteUris_MOST_POPULAR_DOMAINS_BY_ABSOLUTEURI>);
			this._DisallowedAbsoluteUris_MOST_POPULAR_DOMAINS_BY_DOMAIN = default(EntityRef<DisallowedAbsoluteUris_MOST_POPULAR_DOMAINS_BY_DOMAIN>);
			this._DisallowedAbsoluteUris_MOST_POPULAR_DOMAINS_BY_EXTENSION = default(EntityRef<DisallowedAbsoluteUris_MOST_POPULAR_DOMAINS_BY_EXTENSION>);
			this._DisallowedAbsoluteUris_MOST_POPULAR_DOMAINS_BY_HOST = default(EntityRef<DisallowedAbsoluteUris_MOST_POPULAR_DOMAINS_BY_HOST>);
			this._DisallowedAbsoluteUris_MOST_POPULAR_DOMAINS_BY_SCHEME = default(EntityRef<DisallowedAbsoluteUris_MOST_POPULAR_DOMAINS_BY_SCHEME>);
			this._EmailAddresses_COUNT_BY_DOMAIN = default(EntityRef<EmailAddresses_COUNT_BY_DOMAIN>);
			this._EmailAddresses_MOST_POPULAR_DOMAINS_BY_ABSOLUTEURI = default(EntityRef<EmailAddresses_MOST_POPULAR_DOMAINS_BY_ABSOLUTEURI>);
			this._EmailAddresses_MOST_POPULAR_DOMAINS_BY_DOMAIN = default(EntityRef<EmailAddresses_MOST_POPULAR_DOMAINS_BY_DOMAIN>);
			this._EmailAddresses_MOST_POPULAR_DOMAINS_BY_EXTENSION = default(EntityRef<EmailAddresses_MOST_POPULAR_DOMAINS_BY_EXTENSION>);
			this._EmailAddresses_MOST_POPULAR_DOMAINS_BY_HOST = default(EntityRef<EmailAddresses_MOST_POPULAR_DOMAINS_BY_HOST>);
			this._EmailAddresses_MOST_POPULAR_DOMAINS_BY_SCHEME = default(EntityRef<EmailAddresses_MOST_POPULAR_DOMAINS_BY_SCHEME>);
			this._Exceptions_COUNT_BY_DOMAIN1 = default(EntityRef<Exceptions_COUNT_BY_DOMAIN1>);
			this._Exceptions_COUNT_BY_DOMAIN2 = default(EntityRef<Exceptions_COUNT_BY_DOMAIN2>);
			this._Files_COUNT_BY_DOMAIN = default(EntityRef<Files_COUNT_BY_DOMAIN>);
			this._Files_MOST_POPULAR_DOMAINS_BY_ABSOLUTEURI = default(EntityRef<Files_MOST_POPULAR_DOMAINS_BY_ABSOLUTEURI>);
			this._Files_MOST_POPULAR_DOMAINS_BY_DOMAIN = default(EntityRef<Files_MOST_POPULAR_DOMAINS_BY_DOMAIN>);
			this._Files_MOST_POPULAR_DOMAINS_BY_EXTENSION = default(EntityRef<Files_MOST_POPULAR_DOMAINS_BY_EXTENSION>);
			this._Files_MOST_POPULAR_DOMAINS_BY_HOST = default(EntityRef<Files_MOST_POPULAR_DOMAINS_BY_HOST>);
			this._Files_MOST_POPULAR_DOMAINS_BY_SCHEME = default(EntityRef<Files_MOST_POPULAR_DOMAINS_BY_SCHEME>);
			this._HyperLinks_COUNT_BY_DOMAIN = default(EntityRef<HyperLinks_COUNT_BY_DOMAIN>);
			this._HyperLinks_MOST_POPULAR_DOMAINS_BY_ABSOLUTEURI = default(EntityRef<HyperLinks_MOST_POPULAR_DOMAINS_BY_ABSOLUTEURI>);
			this._HyperLinks_MOST_POPULAR_DOMAINS_BY_DOMAIN = default(EntityRef<HyperLinks_MOST_POPULAR_DOMAINS_BY_DOMAIN>);
			this._HyperLinks_MOST_POPULAR_DOMAINS_BY_EXTENSION = default(EntityRef<HyperLinks_MOST_POPULAR_DOMAINS_BY_EXTENSION>);
			this._HyperLinks_MOST_POPULAR_DOMAINS_BY_HOST = default(EntityRef<HyperLinks_MOST_POPULAR_DOMAINS_BY_HOST>);
			this._HyperLinks_MOST_POPULAR_DOMAINS_BY_SCHEME = default(EntityRef<HyperLinks_MOST_POPULAR_DOMAINS_BY_SCHEME>);
			this._Images_COUNT_BY_DOMAIN = default(EntityRef<Images_COUNT_BY_DOMAIN>);
			this._Images_MOST_POPULAR_DOMAINS_BY_ABSOLUTEURI = default(EntityRef<Images_MOST_POPULAR_DOMAINS_BY_ABSOLUTEURI>);
			this._Images_MOST_POPULAR_DOMAINS_BY_DOMAIN = default(EntityRef<Images_MOST_POPULAR_DOMAINS_BY_DOMAIN>);
			this._Images_MOST_POPULAR_DOMAINS_BY_EXTENSION = default(EntityRef<Images_MOST_POPULAR_DOMAINS_BY_EXTENSION>);
			this._Images_MOST_POPULAR_DOMAINS_BY_HOST = default(EntityRef<Images_MOST_POPULAR_DOMAINS_BY_HOST>);
			this._Images_MOST_POPULAR_DOMAINS_BY_SCHEME = default(EntityRef<Images_MOST_POPULAR_DOMAINS_BY_SCHEME>);
			this._WebPages_COUNT_BY_DOMAIN = default(EntityRef<WebPages_COUNT_BY_DOMAIN>);
			this._Domains_Discoveries = new EntitySet<Domains_Discovery>(new Action<Domains_Discovery>(this.attach_Domains_Discoveries), new Action<Domains_Discovery>(this.detach_Domains_Discoveries));
			this._Hosts = new EntitySet<Host>(new Action<Host>(this.attach_Hosts), new Action<Host>(this.detach_Hosts));
			this._Extension = default(EntityRef<Extension>);
			OnCreated();
		}
		
		[Column(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[Column(Storage="_ExtensionID", DbType="Int NOT NULL")]
		public int ExtensionID
		{
			get
			{
				return this._ExtensionID;
			}
			set
			{
				if ((this._ExtensionID != value))
				{
					if (this._Extension.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnExtensionIDChanging(value);
					this.SendPropertyChanging();
					this._ExtensionID = value;
					this.SendPropertyChanged("ExtensionID");
					this.OnExtensionIDChanged();
				}
			}
		}
		
		[Column(Name="Domain", Storage="_Domain1", DbType="VarChar(884) NOT NULL", CanBeNull=false)]
		public string Domain1
		{
			get
			{
				return this._Domain1;
			}
			set
			{
				if ((this._Domain1 != value))
				{
					this.OnDomain1Changing(value);
					this.SendPropertyChanging();
					this._Domain1 = value;
					this.SendPropertyChanged("Domain1");
					this.OnDomain1Changed();
				}
			}
		}
		
		[Association(Name="Domain_DisallowedAbsoluteUris_COUNT_BY_DOMAIN", Storage="_DisallowedAbsoluteUris_COUNT_BY_DOMAIN", ThisKey="ID", OtherKey="DomainID", IsUnique=true, IsForeignKey=false)]
		public DisallowedAbsoluteUris_COUNT_BY_DOMAIN DisallowedAbsoluteUris_COUNT_BY_DOMAIN
		{
			get
			{
				return this._DisallowedAbsoluteUris_COUNT_BY_DOMAIN.Entity;
			}
			set
			{
				DisallowedAbsoluteUris_COUNT_BY_DOMAIN previousValue = this._DisallowedAbsoluteUris_COUNT_BY_DOMAIN.Entity;
				if (((previousValue != value) 
							|| (this._DisallowedAbsoluteUris_COUNT_BY_DOMAIN.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DisallowedAbsoluteUris_COUNT_BY_DOMAIN.Entity = null;
						previousValue.Domain = null;
					}
					this._DisallowedAbsoluteUris_COUNT_BY_DOMAIN.Entity = value;
					if ((value != null))
					{
						value.Domain = this;
					}
					this.SendPropertyChanged("DisallowedAbsoluteUris_COUNT_BY_DOMAIN");
				}
			}
		}
		
		[Association(Name="Domain_DisallowedAbsoluteUris_MOST_POPULAR_DOMAINS_BY_ABSOLUTEURI", Storage="_DisallowedAbsoluteUris_MOST_POPULAR_DOMAINS_BY_ABSOLUTEURI", ThisKey="ID", OtherKey="DomainID", IsUnique=true, IsForeignKey=false)]
		public DisallowedAbsoluteUris_MOST_POPULAR_DOMAINS_BY_ABSOLUTEURI DisallowedAbsoluteUris_MOST_POPULAR_DOMAINS_BY_ABSOLUTEURI
		{
			get
			{
				return this._DisallowedAbsoluteUris_MOST_POPULAR_DOMAINS_BY_ABSOLUTEURI.Entity;
			}
			set
			{
				DisallowedAbsoluteUris_MOST_POPULAR_DOMAINS_BY_ABSOLUTEURI previousValue = this._DisallowedAbsoluteUris_MOST_POPULAR_DOMAINS_BY_ABSOLUTEURI.Entity;
				if (((previousValue != value) 
							|| (this._DisallowedAbsoluteUris_MOST_POPULAR_DOMAINS_BY_ABSOLUTEURI.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DisallowedAbsoluteUris_MOST_POPULAR_DOMAINS_BY_ABSOLUTEURI.Entity = null;
						previousValue.Domain = null;
					}
					this._DisallowedAbsoluteUris_MOST_POPULAR_DOMAINS_BY_ABSOLUTEURI.Entity = value;
					if ((value != null))
					{
						value.Domain = this;
					}
					this.SendPropertyChanged("DisallowedAbsoluteUris_MOST_POPULAR_DOMAINS_BY_ABSOLUTEURI");
				}
			}
		}
		
		[Association(Name="Domain_DisallowedAbsoluteUris_MOST_POPULAR_DOMAINS_BY_DOMAIN", Storage="_DisallowedAbsoluteUris_MOST_POPULAR_DOMAINS_BY_DOMAIN", ThisKey="ID", OtherKey="DomainID", IsUnique=true, IsForeignKey=false)]
		public DisallowedAbsoluteUris_MOST_POPULAR_DOMAINS_BY_DOMAIN DisallowedAbsoluteUris_MOST_POPULAR_DOMAINS_BY_DOMAIN
		{
			get
			{
				return this._DisallowedAbsoluteUris_MOST_POPULAR_DOMAINS_BY_DOMAIN.Entity;
			}
			set
			{
				DisallowedAbsoluteUris_MOST_POPULAR_DOMAINS_BY_DOMAIN previousValue = this._DisallowedAbsoluteUris_MOST_POPULAR_DOMAINS_BY_DOMAIN.Entity;
				if (((previousValue != value) 
							|| (this._DisallowedAbsoluteUris_MOST_POPULAR_DOMAINS_BY_DOMAIN.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DisallowedAbsoluteUris_MOST_POPULAR_DOMAINS_BY_DOMAIN.Entity = null;
						previousValue.Domain = null;
					}
					this._DisallowedAbsoluteUris_MOST_POPULAR_DOMAINS_BY_DOMAIN.Entity = value;
					if ((value != null))
					{
						value.Domain = this;
					}
					this.SendPropertyChanged("DisallowedAbsoluteUris_MOST_POPULAR_DOMAINS_BY_DOMAIN");
				}
			}
		}
		
		[Association(Name="Domain_DisallowedAbsoluteUris_MOST_POPULAR_DOMAINS_BY_EXTENSION", Storage="_DisallowedAbsoluteUris_MOST_POPULAR_DOMAINS_BY_EXTENSION", ThisKey="ID", OtherKey="DomainID", IsUnique=true, IsForeignKey=false)]
		public DisallowedAbsoluteUris_MOST_POPULAR_DOMAINS_BY_EXTENSION DisallowedAbsoluteUris_MOST_POPULAR_DOMAINS_BY_EXTENSION
		{
			get
			{
				return this._DisallowedAbsoluteUris_MOST_POPULAR_DOMAINS_BY_EXTENSION.Entity;
			}
			set
			{
				DisallowedAbsoluteUris_MOST_POPULAR_DOMAINS_BY_EXTENSION previousValue = this._DisallowedAbsoluteUris_MOST_POPULAR_DOMAINS_BY_EXTENSION.Entity;
				if (((previousValue != value) 
							|| (this._DisallowedAbsoluteUris_MOST_POPULAR_DOMAINS_BY_EXTENSION.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DisallowedAbsoluteUris_MOST_POPULAR_DOMAINS_BY_EXTENSION.Entity = null;
						previousValue.Domain = null;
					}
					this._DisallowedAbsoluteUris_MOST_POPULAR_DOMAINS_BY_EXTENSION.Entity = value;
					if ((value != null))
					{
						value.Domain = this;
					}
					this.SendPropertyChanged("DisallowedAbsoluteUris_MOST_POPULAR_DOMAINS_BY_EXTENSION");
				}
			}
		}
		
		[Association(Name="Domain_DisallowedAbsoluteUris_MOST_POPULAR_DOMAINS_BY_HOST", Storage="_DisallowedAbsoluteUris_MOST_POPULAR_DOMAINS_BY_HOST", ThisKey="ID", OtherKey="DomainID", IsUnique=true, IsForeignKey=false)]
		public DisallowedAbsoluteUris_MOST_POPULAR_DOMAINS_BY_HOST DisallowedAbsoluteUris_MOST_POPULAR_DOMAINS_BY_HOST
		{
			get
			{
				return this._DisallowedAbsoluteUris_MOST_POPULAR_DOMAINS_BY_HOST.Entity;
			}
			set
			{
				DisallowedAbsoluteUris_MOST_POPULAR_DOMAINS_BY_HOST previousValue = this._DisallowedAbsoluteUris_MOST_POPULAR_DOMAINS_BY_HOST.Entity;
				if (((previousValue != value) 
							|| (this._DisallowedAbsoluteUris_MOST_POPULAR_DOMAINS_BY_HOST.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DisallowedAbsoluteUris_MOST_POPULAR_DOMAINS_BY_HOST.Entity = null;
						previousValue.Domain = null;
					}
					this._DisallowedAbsoluteUris_MOST_POPULAR_DOMAINS_BY_HOST.Entity = value;
					if ((value != null))
					{
						value.Domain = this;
					}
					this.SendPropertyChanged("DisallowedAbsoluteUris_MOST_POPULAR_DOMAINS_BY_HOST");
				}
			}
		}
		
		[Association(Name="Domain_DisallowedAbsoluteUris_MOST_POPULAR_DOMAINS_BY_SCHEME", Storage="_DisallowedAbsoluteUris_MOST_POPULAR_DOMAINS_BY_SCHEME", ThisKey="ID", OtherKey="DomainID", IsUnique=true, IsForeignKey=false)]
		public DisallowedAbsoluteUris_MOST_POPULAR_DOMAINS_BY_SCHEME DisallowedAbsoluteUris_MOST_POPULAR_DOMAINS_BY_SCHEME
		{
			get
			{
				return this._DisallowedAbsoluteUris_MOST_POPULAR_DOMAINS_BY_SCHEME.Entity;
			}
			set
			{
				DisallowedAbsoluteUris_MOST_POPULAR_DOMAINS_BY_SCHEME previousValue = this._DisallowedAbsoluteUris_MOST_POPULAR_DOMAINS_BY_SCHEME.Entity;
				if (((previousValue != value) 
							|| (this._DisallowedAbsoluteUris_MOST_POPULAR_DOMAINS_BY_SCHEME.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DisallowedAbsoluteUris_MOST_POPULAR_DOMAINS_BY_SCHEME.Entity = null;
						previousValue.Domain = null;
					}
					this._DisallowedAbsoluteUris_MOST_POPULAR_DOMAINS_BY_SCHEME.Entity = value;
					if ((value != null))
					{
						value.Domain = this;
					}
					this.SendPropertyChanged("DisallowedAbsoluteUris_MOST_POPULAR_DOMAINS_BY_SCHEME");
				}
			}
		}
		
		[Association(Name="Domain_EmailAddresses_COUNT_BY_DOMAIN", Storage="_EmailAddresses_COUNT_BY_DOMAIN", ThisKey="ID", OtherKey="DomainID", IsUnique=true, IsForeignKey=false)]
		public EmailAddresses_COUNT_BY_DOMAIN EmailAddresses_COUNT_BY_DOMAIN
		{
			get
			{
				return this._EmailAddresses_COUNT_BY_DOMAIN.Entity;
			}
			set
			{
				EmailAddresses_COUNT_BY_DOMAIN previousValue = this._EmailAddresses_COUNT_BY_DOMAIN.Entity;
				if (((previousValue != value) 
							|| (this._EmailAddresses_COUNT_BY_DOMAIN.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._EmailAddresses_COUNT_BY_DOMAIN.Entity = null;
						previousValue.Domain = null;
					}
					this._EmailAddresses_COUNT_BY_DOMAIN.Entity = value;
					if ((value != null))
					{
						value.Domain = this;
					}
					this.SendPropertyChanged("EmailAddresses_COUNT_BY_DOMAIN");
				}
			}
		}
		
		[Association(Name="Domain_EmailAddresses_MOST_POPULAR_DOMAINS_BY_ABSOLUTEURI", Storage="_EmailAddresses_MOST_POPULAR_DOMAINS_BY_ABSOLUTEURI", ThisKey="ID", OtherKey="DomainID", IsUnique=true, IsForeignKey=false)]
		public EmailAddresses_MOST_POPULAR_DOMAINS_BY_ABSOLUTEURI EmailAddresses_MOST_POPULAR_DOMAINS_BY_ABSOLUTEURI
		{
			get
			{
				return this._EmailAddresses_MOST_POPULAR_DOMAINS_BY_ABSOLUTEURI.Entity;
			}
			set
			{
				EmailAddresses_MOST_POPULAR_DOMAINS_BY_ABSOLUTEURI previousValue = this._EmailAddresses_MOST_POPULAR_DOMAINS_BY_ABSOLUTEURI.Entity;
				if (((previousValue != value) 
							|| (this._EmailAddresses_MOST_POPULAR_DOMAINS_BY_ABSOLUTEURI.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._EmailAddresses_MOST_POPULAR_DOMAINS_BY_ABSOLUTEURI.Entity = null;
						previousValue.Domain = null;
					}
					this._EmailAddresses_MOST_POPULAR_DOMAINS_BY_ABSOLUTEURI.Entity = value;
					if ((value != null))
					{
						value.Domain = this;
					}
					this.SendPropertyChanged("EmailAddresses_MOST_POPULAR_DOMAINS_BY_ABSOLUTEURI");
				}
			}
		}
		
		[Association(Name="Domain_EmailAddresses_MOST_POPULAR_DOMAINS_BY_DOMAIN", Storage="_EmailAddresses_MOST_POPULAR_DOMAINS_BY_DOMAIN", ThisKey="ID", OtherKey="DomainID", IsUnique=true, IsForeignKey=false)]
		public EmailAddresses_MOST_POPULAR_DOMAINS_BY_DOMAIN EmailAddresses_MOST_POPULAR_DOMAINS_BY_DOMAIN
		{
			get
			{
				return this._EmailAddresses_MOST_POPULAR_DOMAINS_BY_DOMAIN.Entity;
			}
			set
			{
				EmailAddresses_MOST_POPULAR_DOMAINS_BY_DOMAIN previousValue = this._EmailAddresses_MOST_POPULAR_DOMAINS_BY_DOMAIN.Entity;
				if (((previousValue != value) 
							|| (this._EmailAddresses_MOST_POPULAR_DOMAINS_BY_DOMAIN.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._EmailAddresses_MOST_POPULAR_DOMAINS_BY_DOMAIN.Entity = null;
						previousValue.Domain = null;
					}
					this._EmailAddresses_MOST_POPULAR_DOMAINS_BY_DOMAIN.Entity = value;
					if ((value != null))
					{
						value.Domain = this;
					}
					this.SendPropertyChanged("EmailAddresses_MOST_POPULAR_DOMAINS_BY_DOMAIN");
				}
			}
		}
		
		[Association(Name="Domain_EmailAddresses_MOST_POPULAR_DOMAINS_BY_EXTENSION", Storage="_EmailAddresses_MOST_POPULAR_DOMAINS_BY_EXTENSION", ThisKey="ID", OtherKey="DomainID", IsUnique=true, IsForeignKey=false)]
		public EmailAddresses_MOST_POPULAR_DOMAINS_BY_EXTENSION EmailAddresses_MOST_POPULAR_DOMAINS_BY_EXTENSION
		{
			get
			{
				return this._EmailAddresses_MOST_POPULAR_DOMAINS_BY_EXTENSION.Entity;
			}
			set
			{
				EmailAddresses_MOST_POPULAR_DOMAINS_BY_EXTENSION previousValue = this._EmailAddresses_MOST_POPULAR_DOMAINS_BY_EXTENSION.Entity;
				if (((previousValue != value) 
							|| (this._EmailAddresses_MOST_POPULAR_DOMAINS_BY_EXTENSION.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._EmailAddresses_MOST_POPULAR_DOMAINS_BY_EXTENSION.Entity = null;
						previousValue.Domain = null;
					}
					this._EmailAddresses_MOST_POPULAR_DOMAINS_BY_EXTENSION.Entity = value;
					if ((value != null))
					{
						value.Domain = this;
					}
					this.SendPropertyChanged("EmailAddresses_MOST_POPULAR_DOMAINS_BY_EXTENSION");
				}
			}
		}
		
		[Association(Name="Domain_EmailAddresses_MOST_POPULAR_DOMAINS_BY_HOST", Storage="_EmailAddresses_MOST_POPULAR_DOMAINS_BY_HOST", ThisKey="ID", OtherKey="DomainID", IsUnique=true, IsForeignKey=false)]
		public EmailAddresses_MOST_POPULAR_DOMAINS_BY_HOST EmailAddresses_MOST_POPULAR_DOMAINS_BY_HOST
		{
			get
			{
				return this._EmailAddresses_MOST_POPULAR_DOMAINS_BY_HOST.Entity;
			}
			set
			{
				EmailAddresses_MOST_POPULAR_DOMAINS_BY_HOST previousValue = this._EmailAddresses_MOST_POPULAR_DOMAINS_BY_HOST.Entity;
				if (((previousValue != value) 
							|| (this._EmailAddresses_MOST_POPULAR_DOMAINS_BY_HOST.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._EmailAddresses_MOST_POPULAR_DOMAINS_BY_HOST.Entity = null;
						previousValue.Domain = null;
					}
					this._EmailAddresses_MOST_POPULAR_DOMAINS_BY_HOST.Entity = value;
					if ((value != null))
					{
						value.Domain = this;
					}
					this.SendPropertyChanged("EmailAddresses_MOST_POPULAR_DOMAINS_BY_HOST");
				}
			}
		}
		
		[Association(Name="Domain_EmailAddresses_MOST_POPULAR_DOMAINS_BY_SCHEME", Storage="_EmailAddresses_MOST_POPULAR_DOMAINS_BY_SCHEME", ThisKey="ID", OtherKey="DomainID", IsUnique=true, IsForeignKey=false)]
		public EmailAddresses_MOST_POPULAR_DOMAINS_BY_SCHEME EmailAddresses_MOST_POPULAR_DOMAINS_BY_SCHEME
		{
			get
			{
				return this._EmailAddresses_MOST_POPULAR_DOMAINS_BY_SCHEME.Entity;
			}
			set
			{
				EmailAddresses_MOST_POPULAR_DOMAINS_BY_SCHEME previousValue = this._EmailAddresses_MOST_POPULAR_DOMAINS_BY_SCHEME.Entity;
				if (((previousValue != value) 
							|| (this._EmailAddresses_MOST_POPULAR_DOMAINS_BY_SCHEME.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._EmailAddresses_MOST_POPULAR_DOMAINS_BY_SCHEME.Entity = null;
						previousValue.Domain = null;
					}
					this._EmailAddresses_MOST_POPULAR_DOMAINS_BY_SCHEME.Entity = value;
					if ((value != null))
					{
						value.Domain = this;
					}
					this.SendPropertyChanged("EmailAddresses_MOST_POPULAR_DOMAINS_BY_SCHEME");
				}
			}
		}
		
		[Association(Name="Domain_Exceptions_COUNT_BY_DOMAIN1", Storage="_Exceptions_COUNT_BY_DOMAIN1", ThisKey="Domain1", OtherKey="Domain1", IsUnique=true, IsForeignKey=false)]
		public Exceptions_COUNT_BY_DOMAIN1 Exceptions_COUNT_BY_DOMAIN1
		{
			get
			{
				return this._Exceptions_COUNT_BY_DOMAIN1.Entity;
			}
			set
			{
				Exceptions_COUNT_BY_DOMAIN1 previousValue = this._Exceptions_COUNT_BY_DOMAIN1.Entity;
				if (((previousValue != value) 
							|| (this._Exceptions_COUNT_BY_DOMAIN1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Exceptions_COUNT_BY_DOMAIN1.Entity = null;
						previousValue.Domain = null;
					}
					this._Exceptions_COUNT_BY_DOMAIN1.Entity = value;
					if ((value != null))
					{
						value.Domain = this;
					}
					this.SendPropertyChanged("Exceptions_COUNT_BY_DOMAIN1");
				}
			}
		}
		
		[Association(Name="Domain_Exceptions_COUNT_BY_DOMAIN2", Storage="_Exceptions_COUNT_BY_DOMAIN2", ThisKey="Domain1", OtherKey="Domain2", IsUnique=true, IsForeignKey=false)]
		public Exceptions_COUNT_BY_DOMAIN2 Exceptions_COUNT_BY_DOMAIN2
		{
			get
			{
				return this._Exceptions_COUNT_BY_DOMAIN2.Entity;
			}
			set
			{
				Exceptions_COUNT_BY_DOMAIN2 previousValue = this._Exceptions_COUNT_BY_DOMAIN2.Entity;
				if (((previousValue != value) 
							|| (this._Exceptions_COUNT_BY_DOMAIN2.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Exceptions_COUNT_BY_DOMAIN2.Entity = null;
						previousValue.Domain = null;
					}
					this._Exceptions_COUNT_BY_DOMAIN2.Entity = value;
					if ((value != null))
					{
						value.Domain = this;
					}
					this.SendPropertyChanged("Exceptions_COUNT_BY_DOMAIN2");
				}
			}
		}
		
		[Association(Name="Domain_Files_COUNT_BY_DOMAIN", Storage="_Files_COUNT_BY_DOMAIN", ThisKey="ID", OtherKey="DomainID", IsUnique=true, IsForeignKey=false)]
		public Files_COUNT_BY_DOMAIN Files_COUNT_BY_DOMAIN
		{
			get
			{
				return this._Files_COUNT_BY_DOMAIN.Entity;
			}
			set
			{
				Files_COUNT_BY_DOMAIN previousValue = this._Files_COUNT_BY_DOMAIN.Entity;
				if (((previousValue != value) 
							|| (this._Files_COUNT_BY_DOMAIN.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Files_COUNT_BY_DOMAIN.Entity = null;
						previousValue.Domain = null;
					}
					this._Files_COUNT_BY_DOMAIN.Entity = value;
					if ((value != null))
					{
						value.Domain = this;
					}
					this.SendPropertyChanged("Files_COUNT_BY_DOMAIN");
				}
			}
		}
		
		[Association(Name="Domain_Files_MOST_POPULAR_DOMAINS_BY_ABSOLUTEURI", Storage="_Files_MOST_POPULAR_DOMAINS_BY_ABSOLUTEURI", ThisKey="ID", OtherKey="DomainID", IsUnique=true, IsForeignKey=false)]
		public Files_MOST_POPULAR_DOMAINS_BY_ABSOLUTEURI Files_MOST_POPULAR_DOMAINS_BY_ABSOLUTEURI
		{
			get
			{
				return this._Files_MOST_POPULAR_DOMAINS_BY_ABSOLUTEURI.Entity;
			}
			set
			{
				Files_MOST_POPULAR_DOMAINS_BY_ABSOLUTEURI previousValue = this._Files_MOST_POPULAR_DOMAINS_BY_ABSOLUTEURI.Entity;
				if (((previousValue != value) 
							|| (this._Files_MOST_POPULAR_DOMAINS_BY_ABSOLUTEURI.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Files_MOST_POPULAR_DOMAINS_BY_ABSOLUTEURI.Entity = null;
						previousValue.Domain = null;
					}
					this._Files_MOST_POPULAR_DOMAINS_BY_ABSOLUTEURI.Entity = value;
					if ((value != null))
					{
						value.Domain = this;
					}
					this.SendPropertyChanged("Files_MOST_POPULAR_DOMAINS_BY_ABSOLUTEURI");
				}
			}
		}
		
		[Association(Name="Domain_Files_MOST_POPULAR_DOMAINS_BY_DOMAIN", Storage="_Files_MOST_POPULAR_DOMAINS_BY_DOMAIN", ThisKey="ID", OtherKey="DomainID", IsUnique=true, IsForeignKey=false)]
		public Files_MOST_POPULAR_DOMAINS_BY_DOMAIN Files_MOST_POPULAR_DOMAINS_BY_DOMAIN
		{
			get
			{
				return this._Files_MOST_POPULAR_DOMAINS_BY_DOMAIN.Entity;
			}
			set
			{
				Files_MOST_POPULAR_DOMAINS_BY_DOMAIN previousValue = this._Files_MOST_POPULAR_DOMAINS_BY_DOMAIN.Entity;
				if (((previousValue != value) 
							|| (this._Files_MOST_POPULAR_DOMAINS_BY_DOMAIN.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Files_MOST_POPULAR_DOMAINS_BY_DOMAIN.Entity = null;
						previousValue.Domain = null;
					}
					this._Files_MOST_POPULAR_DOMAINS_BY_DOMAIN.Entity = value;
					if ((value != null))
					{
						value.Domain = this;
					}
					this.SendPropertyChanged("Files_MOST_POPULAR_DOMAINS_BY_DOMAIN");
				}
			}
		}
		
		[Association(Name="Domain_Files_MOST_POPULAR_DOMAINS_BY_EXTENSION", Storage="_Files_MOST_POPULAR_DOMAINS_BY_EXTENSION", ThisKey="ID", OtherKey="DomainID", IsUnique=true, IsForeignKey=false)]
		public Files_MOST_POPULAR_DOMAINS_BY_EXTENSION Files_MOST_POPULAR_DOMAINS_BY_EXTENSION
		{
			get
			{
				return this._Files_MOST_POPULAR_DOMAINS_BY_EXTENSION.Entity;
			}
			set
			{
				Files_MOST_POPULAR_DOMAINS_BY_EXTENSION previousValue = this._Files_MOST_POPULAR_DOMAINS_BY_EXTENSION.Entity;
				if (((previousValue != value) 
							|| (this._Files_MOST_POPULAR_DOMAINS_BY_EXTENSION.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Files_MOST_POPULAR_DOMAINS_BY_EXTENSION.Entity = null;
						previousValue.Domain = null;
					}
					this._Files_MOST_POPULAR_DOMAINS_BY_EXTENSION.Entity = value;
					if ((value != null))
					{
						value.Domain = this;
					}
					this.SendPropertyChanged("Files_MOST_POPULAR_DOMAINS_BY_EXTENSION");
				}
			}
		}
		
		[Association(Name="Domain_Files_MOST_POPULAR_DOMAINS_BY_HOST", Storage="_Files_MOST_POPULAR_DOMAINS_BY_HOST", ThisKey="ID", OtherKey="DomainID", IsUnique=true, IsForeignKey=false)]
		public Files_MOST_POPULAR_DOMAINS_BY_HOST Files_MOST_POPULAR_DOMAINS_BY_HOST
		{
			get
			{
				return this._Files_MOST_POPULAR_DOMAINS_BY_HOST.Entity;
			}
			set
			{
				Files_MOST_POPULAR_DOMAINS_BY_HOST previousValue = this._Files_MOST_POPULAR_DOMAINS_BY_HOST.Entity;
				if (((previousValue != value) 
							|| (this._Files_MOST_POPULAR_DOMAINS_BY_HOST.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Files_MOST_POPULAR_DOMAINS_BY_HOST.Entity = null;
						previousValue.Domain = null;
					}
					this._Files_MOST_POPULAR_DOMAINS_BY_HOST.Entity = value;
					if ((value != null))
					{
						value.Domain = this;
					}
					this.SendPropertyChanged("Files_MOST_POPULAR_DOMAINS_BY_HOST");
				}
			}
		}
		
		[Association(Name="Domain_Files_MOST_POPULAR_DOMAINS_BY_SCHEME", Storage="_Files_MOST_POPULAR_DOMAINS_BY_SCHEME", ThisKey="ID", OtherKey="DomainID", IsUnique=true, IsForeignKey=false)]
		public Files_MOST_POPULAR_DOMAINS_BY_SCHEME Files_MOST_POPULAR_DOMAINS_BY_SCHEME
		{
			get
			{
				return this._Files_MOST_POPULAR_DOMAINS_BY_SCHEME.Entity;
			}
			set
			{
				Files_MOST_POPULAR_DOMAINS_BY_SCHEME previousValue = this._Files_MOST_POPULAR_DOMAINS_BY_SCHEME.Entity;
				if (((previousValue != value) 
							|| (this._Files_MOST_POPULAR_DOMAINS_BY_SCHEME.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Files_MOST_POPULAR_DOMAINS_BY_SCHEME.Entity = null;
						previousValue.Domain = null;
					}
					this._Files_MOST_POPULAR_DOMAINS_BY_SCHEME.Entity = value;
					if ((value != null))
					{
						value.Domain = this;
					}
					this.SendPropertyChanged("Files_MOST_POPULAR_DOMAINS_BY_SCHEME");
				}
			}
		}
		
		[Association(Name="Domain_HyperLinks_COUNT_BY_DOMAIN", Storage="_HyperLinks_COUNT_BY_DOMAIN", ThisKey="ID", OtherKey="DomainID", IsUnique=true, IsForeignKey=false)]
		public HyperLinks_COUNT_BY_DOMAIN HyperLinks_COUNT_BY_DOMAIN
		{
			get
			{
				return this._HyperLinks_COUNT_BY_DOMAIN.Entity;
			}
			set
			{
				HyperLinks_COUNT_BY_DOMAIN previousValue = this._HyperLinks_COUNT_BY_DOMAIN.Entity;
				if (((previousValue != value) 
							|| (this._HyperLinks_COUNT_BY_DOMAIN.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._HyperLinks_COUNT_BY_DOMAIN.Entity = null;
						previousValue.Domain = null;
					}
					this._HyperLinks_COUNT_BY_DOMAIN.Entity = value;
					if ((value != null))
					{
						value.Domain = this;
					}
					this.SendPropertyChanged("HyperLinks_COUNT_BY_DOMAIN");
				}
			}
		}
		
		[Association(Name="Domain_HyperLinks_MOST_POPULAR_DOMAINS_BY_ABSOLUTEURI", Storage="_HyperLinks_MOST_POPULAR_DOMAINS_BY_ABSOLUTEURI", ThisKey="ID", OtherKey="DomainID", IsUnique=true, IsForeignKey=false)]
		public HyperLinks_MOST_POPULAR_DOMAINS_BY_ABSOLUTEURI HyperLinks_MOST_POPULAR_DOMAINS_BY_ABSOLUTEURI
		{
			get
			{
				return this._HyperLinks_MOST_POPULAR_DOMAINS_BY_ABSOLUTEURI.Entity;
			}
			set
			{
				HyperLinks_MOST_POPULAR_DOMAINS_BY_ABSOLUTEURI previousValue = this._HyperLinks_MOST_POPULAR_DOMAINS_BY_ABSOLUTEURI.Entity;
				if (((previousValue != value) 
							|| (this._HyperLinks_MOST_POPULAR_DOMAINS_BY_ABSOLUTEURI.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._HyperLinks_MOST_POPULAR_DOMAINS_BY_ABSOLUTEURI.Entity = null;
						previousValue.Domain = null;
					}
					this._HyperLinks_MOST_POPULAR_DOMAINS_BY_ABSOLUTEURI.Entity = value;
					if ((value != null))
					{
						value.Domain = this;
					}
					this.SendPropertyChanged("HyperLinks_MOST_POPULAR_DOMAINS_BY_ABSOLUTEURI");
				}
			}
		}
		
		[Association(Name="Domain_HyperLinks_MOST_POPULAR_DOMAINS_BY_DOMAIN", Storage="_HyperLinks_MOST_POPULAR_DOMAINS_BY_DOMAIN", ThisKey="ID", OtherKey="DomainID", IsUnique=true, IsForeignKey=false)]
		public HyperLinks_MOST_POPULAR_DOMAINS_BY_DOMAIN HyperLinks_MOST_POPULAR_DOMAINS_BY_DOMAIN
		{
			get
			{
				return this._HyperLinks_MOST_POPULAR_DOMAINS_BY_DOMAIN.Entity;
			}
			set
			{
				HyperLinks_MOST_POPULAR_DOMAINS_BY_DOMAIN previousValue = this._HyperLinks_MOST_POPULAR_DOMAINS_BY_DOMAIN.Entity;
				if (((previousValue != value) 
							|| (this._HyperLinks_MOST_POPULAR_DOMAINS_BY_DOMAIN.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._HyperLinks_MOST_POPULAR_DOMAINS_BY_DOMAIN.Entity = null;
						previousValue.Domain = null;
					}
					this._HyperLinks_MOST_POPULAR_DOMAINS_BY_DOMAIN.Entity = value;
					if ((value != null))
					{
						value.Domain = this;
					}
					this.SendPropertyChanged("HyperLinks_MOST_POPULAR_DOMAINS_BY_DOMAIN");
				}
			}
		}
		
		[Association(Name="Domain_HyperLinks_MOST_POPULAR_DOMAINS_BY_EXTENSION", Storage="_HyperLinks_MOST_POPULAR_DOMAINS_BY_EXTENSION", ThisKey="ID", OtherKey="DomainID", IsUnique=true, IsForeignKey=false)]
		public HyperLinks_MOST_POPULAR_DOMAINS_BY_EXTENSION HyperLinks_MOST_POPULAR_DOMAINS_BY_EXTENSION
		{
			get
			{
				return this._HyperLinks_MOST_POPULAR_DOMAINS_BY_EXTENSION.Entity;
			}
			set
			{
				HyperLinks_MOST_POPULAR_DOMAINS_BY_EXTENSION previousValue = this._HyperLinks_MOST_POPULAR_DOMAINS_BY_EXTENSION.Entity;
				if (((previousValue != value) 
							|| (this._HyperLinks_MOST_POPULAR_DOMAINS_BY_EXTENSION.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._HyperLinks_MOST_POPULAR_DOMAINS_BY_EXTENSION.Entity = null;
						previousValue.Domain = null;
					}
					this._HyperLinks_MOST_POPULAR_DOMAINS_BY_EXTENSION.Entity = value;
					if ((value != null))
					{
						value.Domain = this;
					}
					this.SendPropertyChanged("HyperLinks_MOST_POPULAR_DOMAINS_BY_EXTENSION");
				}
			}
		}
		
		[Association(Name="Domain_HyperLinks_MOST_POPULAR_DOMAINS_BY_HOST", Storage="_HyperLinks_MOST_POPULAR_DOMAINS_BY_HOST", ThisKey="ID", OtherKey="DomainID", IsUnique=true, IsForeignKey=false)]
		public HyperLinks_MOST_POPULAR_DOMAINS_BY_HOST HyperLinks_MOST_POPULAR_DOMAINS_BY_HOST
		{
			get
			{
				return this._HyperLinks_MOST_POPULAR_DOMAINS_BY_HOST.Entity;
			}
			set
			{
				HyperLinks_MOST_POPULAR_DOMAINS_BY_HOST previousValue = this._HyperLinks_MOST_POPULAR_DOMAINS_BY_HOST.Entity;
				if (((previousValue != value) 
							|| (this._HyperLinks_MOST_POPULAR_DOMAINS_BY_HOST.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._HyperLinks_MOST_POPULAR_DOMAINS_BY_HOST.Entity = null;
						previousValue.Domain = null;
					}
					this._HyperLinks_MOST_POPULAR_DOMAINS_BY_HOST.Entity = value;
					if ((value != null))
					{
						value.Domain = this;
					}
					this.SendPropertyChanged("HyperLinks_MOST_POPULAR_DOMAINS_BY_HOST");
				}
			}
		}
		
		[Association(Name="Domain_HyperLinks_MOST_POPULAR_DOMAINS_BY_SCHEME", Storage="_HyperLinks_MOST_POPULAR_DOMAINS_BY_SCHEME", ThisKey="ID", OtherKey="DomainID", IsUnique=true, IsForeignKey=false)]
		public HyperLinks_MOST_POPULAR_DOMAINS_BY_SCHEME HyperLinks_MOST_POPULAR_DOMAINS_BY_SCHEME
		{
			get
			{
				return this._HyperLinks_MOST_POPULAR_DOMAINS_BY_SCHEME.Entity;
			}
			set
			{
				HyperLinks_MOST_POPULAR_DOMAINS_BY_SCHEME previousValue = this._HyperLinks_MOST_POPULAR_DOMAINS_BY_SCHEME.Entity;
				if (((previousValue != value) 
							|| (this._HyperLinks_MOST_POPULAR_DOMAINS_BY_SCHEME.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._HyperLinks_MOST_POPULAR_DOMAINS_BY_SCHEME.Entity = null;
						previousValue.Domain = null;
					}
					this._HyperLinks_MOST_POPULAR_DOMAINS_BY_SCHEME.Entity = value;
					if ((value != null))
					{
						value.Domain = this;
					}
					this.SendPropertyChanged("HyperLinks_MOST_POPULAR_DOMAINS_BY_SCHEME");
				}
			}
		}
		
		[Association(Name="Domain_Images_COUNT_BY_DOMAIN", Storage="_Images_COUNT_BY_DOMAIN", ThisKey="ID", OtherKey="DomainID", IsUnique=true, IsForeignKey=false)]
		public Images_COUNT_BY_DOMAIN Images_COUNT_BY_DOMAIN
		{
			get
			{
				return this._Images_COUNT_BY_DOMAIN.Entity;
			}
			set
			{
				Images_COUNT_BY_DOMAIN previousValue = this._Images_COUNT_BY_DOMAIN.Entity;
				if (((previousValue != value) 
							|| (this._Images_COUNT_BY_DOMAIN.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Images_COUNT_BY_DOMAIN.Entity = null;
						previousValue.Domain = null;
					}
					this._Images_COUNT_BY_DOMAIN.Entity = value;
					if ((value != null))
					{
						value.Domain = this;
					}
					this.SendPropertyChanged("Images_COUNT_BY_DOMAIN");
				}
			}
		}
		
		[Association(Name="Domain_Images_MOST_POPULAR_DOMAINS_BY_ABSOLUTEURI", Storage="_Images_MOST_POPULAR_DOMAINS_BY_ABSOLUTEURI", ThisKey="ID", OtherKey="DomainID", IsUnique=true, IsForeignKey=false)]
		public Images_MOST_POPULAR_DOMAINS_BY_ABSOLUTEURI Images_MOST_POPULAR_DOMAINS_BY_ABSOLUTEURI
		{
			get
			{
				return this._Images_MOST_POPULAR_DOMAINS_BY_ABSOLUTEURI.Entity;
			}
			set
			{
				Images_MOST_POPULAR_DOMAINS_BY_ABSOLUTEURI previousValue = this._Images_MOST_POPULAR_DOMAINS_BY_ABSOLUTEURI.Entity;
				if (((previousValue != value) 
							|| (this._Images_MOST_POPULAR_DOMAINS_BY_ABSOLUTEURI.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Images_MOST_POPULAR_DOMAINS_BY_ABSOLUTEURI.Entity = null;
						previousValue.Domain = null;
					}
					this._Images_MOST_POPULAR_DOMAINS_BY_ABSOLUTEURI.Entity = value;
					if ((value != null))
					{
						value.Domain = this;
					}
					this.SendPropertyChanged("Images_MOST_POPULAR_DOMAINS_BY_ABSOLUTEURI");
				}
			}
		}
		
		[Association(Name="Domain_Images_MOST_POPULAR_DOMAINS_BY_DOMAIN", Storage="_Images_MOST_POPULAR_DOMAINS_BY_DOMAIN", ThisKey="ID", OtherKey="DomainID", IsUnique=true, IsForeignKey=false)]
		public Images_MOST_POPULAR_DOMAINS_BY_DOMAIN Images_MOST_POPULAR_DOMAINS_BY_DOMAIN
		{
			get
			{
				return this._Images_MOST_POPULAR_DOMAINS_BY_DOMAIN.Entity;
			}
			set
			{
				Images_MOST_POPULAR_DOMAINS_BY_DOMAIN previousValue = this._Images_MOST_POPULAR_DOMAINS_BY_DOMAIN.Entity;
				if (((previousValue != value) 
							|| (this._Images_MOST_POPULAR_DOMAINS_BY_DOMAIN.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Images_MOST_POPULAR_DOMAINS_BY_DOMAIN.Entity = null;
						previousValue.Domain = null;
					}
					this._Images_MOST_POPULAR_DOMAINS_BY_DOMAIN.Entity = value;
					if ((value != null))
					{
						value.Domain = this;
					}
					this.SendPropertyChanged("Images_MOST_POPULAR_DOMAINS_BY_DOMAIN");
				}
			}
		}
		
		[Association(Name="Domain_Images_MOST_POPULAR_DOMAINS_BY_EXTENSION", Storage="_Images_MOST_POPULAR_DOMAINS_BY_EXTENSION", ThisKey="ID", OtherKey="DomainID", IsUnique=true, IsForeignKey=false)]
		public Images_MOST_POPULAR_DOMAINS_BY_EXTENSION Images_MOST_POPULAR_DOMAINS_BY_EXTENSION
		{
			get
			{
				return this._Images_MOST_POPULAR_DOMAINS_BY_EXTENSION.Entity;
			}
			set
			{
				Images_MOST_POPULAR_DOMAINS_BY_EXTENSION previousValue = this._Images_MOST_POPULAR_DOMAINS_BY_EXTENSION.Entity;
				if (((previousValue != value) 
							|| (this._Images_MOST_POPULAR_DOMAINS_BY_EXTENSION.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Images_MOST_POPULAR_DOMAINS_BY_EXTENSION.Entity = null;
						previousValue.Domain = null;
					}
					this._Images_MOST_POPULAR_DOMAINS_BY_EXTENSION.Entity = value;
					if ((value != null))
					{
						value.Domain = this;
					}
					this.SendPropertyChanged("Images_MOST_POPULAR_DOMAINS_BY_EXTENSION");
				}
			}
		}
		
		[Association(Name="Domain_Images_MOST_POPULAR_DOMAINS_BY_HOST", Storage="_Images_MOST_POPULAR_DOMAINS_BY_HOST", ThisKey="ID", OtherKey="DomainID", IsUnique=true, IsForeignKey=false)]
		public Images_MOST_POPULAR_DOMAINS_BY_HOST Images_MOST_POPULAR_DOMAINS_BY_HOST
		{
			get
			{
				return this._Images_MOST_POPULAR_DOMAINS_BY_HOST.Entity;
			}
			set
			{
				Images_MOST_POPULAR_DOMAINS_BY_HOST previousValue = this._Images_MOST_POPULAR_DOMAINS_BY_HOST.Entity;
				if (((previousValue != value) 
							|| (this._Images_MOST_POPULAR_DOMAINS_BY_HOST.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Images_MOST_POPULAR_DOMAINS_BY_HOST.Entity = null;
						previousValue.Domain = null;
					}
					this._Images_MOST_POPULAR_DOMAINS_BY_HOST.Entity = value;
					if ((value != null))
					{
						value.Domain = this;
					}
					this.SendPropertyChanged("Images_MOST_POPULAR_DOMAINS_BY_HOST");
				}
			}
		}
		
		[Association(Name="Domain_Images_MOST_POPULAR_DOMAINS_BY_SCHEME", Storage="_Images_MOST_POPULAR_DOMAINS_BY_SCHEME", ThisKey="ID", OtherKey="DomainID", IsUnique=true, IsForeignKey=false)]
		public Images_MOST_POPULAR_DOMAINS_BY_SCHEME Images_MOST_POPULAR_DOMAINS_BY_SCHEME
		{
			get
			{
				return this._Images_MOST_POPULAR_DOMAINS_BY_SCHEME.Entity;
			}
			set
			{
				Images_MOST_POPULAR_DOMAINS_BY_SCHEME previousValue = this._Images_MOST_POPULAR_DOMAINS_BY_SCHEME.Entity;
				if (((previousValue != value) 
							|| (this._Images_MOST_POPULAR_DOMAINS_BY_SCHEME.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Images_MOST_POPULAR_DOMAINS_BY_SCHEME.Entity = null;
						previousValue.Domain = null;
					}
					this._Images_MOST_POPULAR_DOMAINS_BY_SCHEME.Entity = value;
					if ((value != null))
					{
						value.Domain = this;
					}
					this.SendPropertyChanged("Images_MOST_POPULAR_DOMAINS_BY_SCHEME");
				}
			}
		}
		
		[Association(Name="Domain_WebPages_COUNT_BY_DOMAIN", Storage="_WebPages_COUNT_BY_DOMAIN", ThisKey="Domain1", OtherKey="Domain", IsUnique=true, IsForeignKey=false)]
		public WebPages_COUNT_BY_DOMAIN WebPages_COUNT_BY_DOMAIN
		{
			get
			{
				return this._WebPages_COUNT_BY_DOMAIN.Entity;
			}
			set
			{
				WebPages_COUNT_BY_DOMAIN previousValue = this._WebPages_COUNT_BY_DOMAIN.Entity;
				if (((previousValue != value) 
							|| (this._WebPages_COUNT_BY_DOMAIN.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._WebPages_COUNT_BY_DOMAIN.Entity = null;
						previousValue.Domain1 = null;
					}
					this._WebPages_COUNT_BY_DOMAIN.Entity = value;
					if ((value != null))
					{
						value.Domain1 = this;
					}
					this.SendPropertyChanged("WebPages_COUNT_BY_DOMAIN");
				}
			}
		}
		
		[Association(Name="Domain_Domains_Discovery", Storage="_Domains_Discoveries", ThisKey="ID", OtherKey="DomainID")]
		public EntitySet<Domains_Discovery> Domains_Discoveries
		{
			get
			{
				return this._Domains_Discoveries;
			}
			set
			{
				this._Domains_Discoveries.Assign(value);
			}
		}
		
		[Association(Name="Domain_Host", Storage="_Hosts", ThisKey="ID", OtherKey="DomainID")]
		public EntitySet<Host> Hosts
		{
			get
			{
				return this._Hosts;
			}
			set
			{
				this._Hosts.Assign(value);
			}
		}
		
		[Association(Name="Extension_Domain", Storage="_Extension", ThisKey="ExtensionID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Extension Extension
		{
			get
			{
				return this._Extension.Entity;
			}
			set
			{
				Extension previousValue = this._Extension.Entity;
				if (((previousValue != value) 
							|| (this._Extension.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Extension.Entity = null;
						previousValue.Domains.Remove(this);
					}
					this._Extension.Entity = value;
					if ((value != null))
					{
						value.Domains.Add(this);
						this._ExtensionID = value.ID;
					}
					else
					{
						this._ExtensionID = default(int);
					}
					this.SendPropertyChanged("Extension");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Domains_Discoveries(Domains_Discovery entity)
		{
			this.SendPropertyChanging();
			entity.Domain = this;
		}
		
		private void detach_Domains_Discoveries(Domains_Discovery entity)
		{
			this.SendPropertyChanging();
			entity.Domain = null;
		}
		
		private void attach_Hosts(Host entity)
		{
			this.SendPropertyChanging();
			entity.Domain = this;
		}
		
		private void detach_Hosts(Host entity)
		{
			this.SendPropertyChanging();
			entity.Domain = null;
		}
	}
	
	[Table(Name="dbo.Extensions")]
	public partial class Extension : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Extension1;
		
		private EntityRef<DisallowedAbsoluteUris_COUNT_BY_EXTENSION> _DisallowedAbsoluteUris_COUNT_BY_EXTENSION;
		
		private EntityRef<DisallowedAbsoluteUris_MOST_POPULAR_EXTENSIONS_BY_ABSOLUTEURI> _DisallowedAbsoluteUris_MOST_POPULAR_EXTENSIONS_BY_ABSOLUTEURI;
		
		private EntityRef<DisallowedAbsoluteUris_MOST_POPULAR_EXTENSIONS_BY_DOMAIN> _DisallowedAbsoluteUris_MOST_POPULAR_EXTENSIONS_BY_DOMAIN;
		
		private EntityRef<DisallowedAbsoluteUris_MOST_POPULAR_EXTENSIONS_BY_EXTENSION> _DisallowedAbsoluteUris_MOST_POPULAR_EXTENSIONS_BY_EXTENSION;
		
		private EntityRef<DisallowedAbsoluteUris_MOST_POPULAR_EXTENSIONS_BY_HOST> _DisallowedAbsoluteUris_MOST_POPULAR_EXTENSIONS_BY_HOST;
		
		private EntityRef<DisallowedAbsoluteUris_MOST_POPULAR_EXTENSIONS_BY_SCHEME> _DisallowedAbsoluteUris_MOST_POPULAR_EXTENSIONS_BY_SCHEME;
		
		private EntityRef<EmailAddresses_COUNT_BY_EXTENSION> _EmailAddresses_COUNT_BY_EXTENSION;
		
		private EntityRef<EmailAddresses_MOST_POPULAR_EXTENSIONS_BY_ABSOLUTEURI> _EmailAddresses_MOST_POPULAR_EXTENSIONS_BY_ABSOLUTEURI;
		
		private EntityRef<EmailAddresses_MOST_POPULAR_EXTENSIONS_BY_DOMAIN> _EmailAddresses_MOST_POPULAR_EXTENSIONS_BY_DOMAIN;
		
		private EntityRef<EmailAddresses_MOST_POPULAR_EXTENSIONS_BY_EXTENSION> _EmailAddresses_MOST_POPULAR_EXTENSIONS_BY_EXTENSION;
		
		private EntityRef<EmailAddresses_MOST_POPULAR_EXTENSIONS_BY_HOST> _EmailAddresses_MOST_POPULAR_EXTENSIONS_BY_HOST;
		
		private EntityRef<EmailAddresses_MOST_POPULAR_EXTENSIONS_BY_SCHEME> _EmailAddresses_MOST_POPULAR_EXTENSIONS_BY_SCHEME;
		
		private EntityRef<Exceptions_COUNT_BY_EXTENSION1> _Exceptions_COUNT_BY_EXTENSION1;
		
		private EntityRef<Exceptions_COUNT_BY_EXTENSION2> _Exceptions_COUNT_BY_EXTENSION2;
		
		private EntityRef<Files_COUNT_BY_EXTENSION> _Files_COUNT_BY_EXTENSION;
		
		private EntityRef<Files_MOST_POPULAR_EXTENSIONS_BY_ABSOLUTEURI> _Files_MOST_POPULAR_EXTENSIONS_BY_ABSOLUTEURI;
		
		private EntityRef<Files_MOST_POPULAR_EXTENSIONS_BY_DOMAIN> _Files_MOST_POPULAR_EXTENSIONS_BY_DOMAIN;
		
		private EntityRef<Files_MOST_POPULAR_EXTENSIONS_BY_EXTENSION> _Files_MOST_POPULAR_EXTENSIONS_BY_EXTENSION;
		
		private EntityRef<Files_MOST_POPULAR_EXTENSIONS_BY_HOST> _Files_MOST_POPULAR_EXTENSIONS_BY_HOST;
		
		private EntityRef<Files_MOST_POPULAR_EXTENSIONS_BY_SCHEME> _Files_MOST_POPULAR_EXTENSIONS_BY_SCHEME;
		
		private EntityRef<HyperLinks_COUNT_BY_EXTENSION> _HyperLinks_COUNT_BY_EXTENSION;
		
		private EntityRef<HyperLinks_MOST_POPULAR_EXTENSIONS_BY_ABSOLUTEURI> _HyperLinks_MOST_POPULAR_EXTENSIONS_BY_ABSOLUTEURI;
		
		private EntityRef<HyperLinks_MOST_POPULAR_EXTENSIONS_BY_DOMAIN> _HyperLinks_MOST_POPULAR_EXTENSIONS_BY_DOMAIN;
		
		private EntityRef<HyperLinks_MOST_POPULAR_EXTENSIONS_BY_EXTENSION> _HyperLinks_MOST_POPULAR_EXTENSIONS_BY_EXTENSION;
		
		private EntityRef<HyperLinks_MOST_POPULAR_EXTENSIONS_BY_HOST> _HyperLinks_MOST_POPULAR_EXTENSIONS_BY_HOST;
		
		private EntityRef<HyperLinks_MOST_POPULAR_EXTENSIONS_BY_SCHEME> _HyperLinks_MOST_POPULAR_EXTENSIONS_BY_SCHEME;
		
		private EntityRef<Images_COUNT_BY_EXTENSION> _Images_COUNT_BY_EXTENSION;
		
		private EntityRef<Images_MOST_POPULAR_EXTENSIONS_BY_ABSOLUTEURI> _Images_MOST_POPULAR_EXTENSIONS_BY_ABSOLUTEURI;
		
		private EntityRef<Images_MOST_POPULAR_EXTENSIONS_BY_DOMAIN> _Images_MOST_POPULAR_EXTENSIONS_BY_DOMAIN;
		
		private EntityRef<Images_MOST_POPULAR_EXTENSIONS_BY_EXTENSION> _Images_MOST_POPULAR_EXTENSIONS_BY_EXTENSION;
		
		private EntityRef<Images_MOST_POPULAR_EXTENSIONS_BY_HOST> _Images_MOST_POPULAR_EXTENSIONS_BY_HOST;
		
		private EntityRef<Images_MOST_POPULAR_EXTENSIONS_BY_SCHEME> _Images_MOST_POPULAR_EXTENSIONS_BY_SCHEME;
		
		private EntityRef<WebPages_COUNT_BY_EXTENSION> _WebPages_COUNT_BY_EXTENSION;
		
		private EntitySet<Domain> _Domains;
		
		private EntitySet<Extensions_Discovery> _Extensions_Discoveries;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnExtension1Changing(string value);
    partial void OnExtension1Changed();
    #endregion
		
		public Extension()
		{
			this._DisallowedAbsoluteUris_COUNT_BY_EXTENSION = default(EntityRef<DisallowedAbsoluteUris_COUNT_BY_EXTENSION>);
			this._DisallowedAbsoluteUris_MOST_POPULAR_EXTENSIONS_BY_ABSOLUTEURI = default(EntityRef<DisallowedAbsoluteUris_MOST_POPULAR_EXTENSIONS_BY_ABSOLUTEURI>);
			this._DisallowedAbsoluteUris_MOST_POPULAR_EXTENSIONS_BY_DOMAIN = default(EntityRef<DisallowedAbsoluteUris_MOST_POPULAR_EXTENSIONS_BY_DOMAIN>);
			this._DisallowedAbsoluteUris_MOST_POPULAR_EXTENSIONS_BY_EXTENSION = default(EntityRef<DisallowedAbsoluteUris_MOST_POPULAR_EXTENSIONS_BY_EXTENSION>);
			this._DisallowedAbsoluteUris_MOST_POPULAR_EXTENSIONS_BY_HOST = default(EntityRef<DisallowedAbsoluteUris_MOST_POPULAR_EXTENSIONS_BY_HOST>);
			this._DisallowedAbsoluteUris_MOST_POPULAR_EXTENSIONS_BY_SCHEME = default(EntityRef<DisallowedAbsoluteUris_MOST_POPULAR_EXTENSIONS_BY_SCHEME>);
			this._EmailAddresses_COUNT_BY_EXTENSION = default(EntityRef<EmailAddresses_COUNT_BY_EXTENSION>);
			this._EmailAddresses_MOST_POPULAR_EXTENSIONS_BY_ABSOLUTEURI = default(EntityRef<EmailAddresses_MOST_POPULAR_EXTENSIONS_BY_ABSOLUTEURI>);
			this._EmailAddresses_MOST_POPULAR_EXTENSIONS_BY_DOMAIN = default(EntityRef<EmailAddresses_MOST_POPULAR_EXTENSIONS_BY_DOMAIN>);
			this._EmailAddresses_MOST_POPULAR_EXTENSIONS_BY_EXTENSION = default(EntityRef<EmailAddresses_MOST_POPULAR_EXTENSIONS_BY_EXTENSION>);
			this._EmailAddresses_MOST_POPULAR_EXTENSIONS_BY_HOST = default(EntityRef<EmailAddresses_MOST_POPULAR_EXTENSIONS_BY_HOST>);
			this._EmailAddresses_MOST_POPULAR_EXTENSIONS_BY_SCHEME = default(EntityRef<EmailAddresses_MOST_POPULAR_EXTENSIONS_BY_SCHEME>);
			this._Exceptions_COUNT_BY_EXTENSION1 = default(EntityRef<Exceptions_COUNT_BY_EXTENSION1>);
			this._Exceptions_COUNT_BY_EXTENSION2 = default(EntityRef<Exceptions_COUNT_BY_EXTENSION2>);
			this._Files_COUNT_BY_EXTENSION = default(EntityRef<Files_COUNT_BY_EXTENSION>);
			this._Files_MOST_POPULAR_EXTENSIONS_BY_ABSOLUTEURI = default(EntityRef<Files_MOST_POPULAR_EXTENSIONS_BY_ABSOLUTEURI>);
			this._Files_MOST_POPULAR_EXTENSIONS_BY_DOMAIN = default(EntityRef<Files_MOST_POPULAR_EXTENSIONS_BY_DOMAIN>);
			this._Files_MOST_POPULAR_EXTENSIONS_BY_EXTENSION = default(EntityRef<Files_MOST_POPULAR_EXTENSIONS_BY_EXTENSION>);
			this._Files_MOST_POPULAR_EXTENSIONS_BY_HOST = default(EntityRef<Files_MOST_POPULAR_EXTENSIONS_BY_HOST>);
			this._Files_MOST_POPULAR_EXTENSIONS_BY_SCHEME = default(EntityRef<Files_MOST_POPULAR_EXTENSIONS_BY_SCHEME>);
			this._HyperLinks_COUNT_BY_EXTENSION = default(EntityRef<HyperLinks_COUNT_BY_EXTENSION>);
			this._HyperLinks_MOST_POPULAR_EXTENSIONS_BY_ABSOLUTEURI = default(EntityRef<HyperLinks_MOST_POPULAR_EXTENSIONS_BY_ABSOLUTEURI>);
			this._HyperLinks_MOST_POPULAR_EXTENSIONS_BY_DOMAIN = default(EntityRef<HyperLinks_MOST_POPULAR_EXTENSIONS_BY_DOMAIN>);
			this._HyperLinks_MOST_POPULAR_EXTENSIONS_BY_EXTENSION = default(EntityRef<HyperLinks_MOST_POPULAR_EXTENSIONS_BY_EXTENSION>);
			this._HyperLinks_MOST_POPULAR_EXTENSIONS_BY_HOST = default(EntityRef<HyperLinks_MOST_POPULAR_EXTENSIONS_BY_HOST>);
			this._HyperLinks_MOST_POPULAR_EXTENSIONS_BY_SCHEME = default(EntityRef<HyperLinks_MOST_POPULAR_EXTENSIONS_BY_SCHEME>);
			this._Images_COUNT_BY_EXTENSION = default(EntityRef<Images_COUNT_BY_EXTENSION>);
			this._Images_MOST_POPULAR_EXTENSIONS_BY_ABSOLUTEURI = default(EntityRef<Images_MOST_POPULAR_EXTENSIONS_BY_ABSOLUTEURI>);
			this._Images_MOST_POPULAR_EXTENSIONS_BY_DOMAIN = default(EntityRef<Images_MOST_POPULAR_EXTENSIONS_BY_DOMAIN>);
			this._Images_MOST_POPULAR_EXTENSIONS_BY_EXTENSION = default(EntityRef<Images_MOST_POPULAR_EXTENSIONS_BY_EXTENSION>);
			this._Images_MOST_POPULAR_EXTENSIONS_BY_HOST = default(EntityRef<Images_MOST_POPULAR_EXTENSIONS_BY_HOST>);
			this._Images_MOST_POPULAR_EXTENSIONS_BY_SCHEME = default(EntityRef<Images_MOST_POPULAR_EXTENSIONS_BY_SCHEME>);
			this._WebPages_COUNT_BY_EXTENSION = default(EntityRef<WebPages_COUNT_BY_EXTENSION>);
			this._Domains = new EntitySet<Domain>(new Action<Domain>(this.attach_Domains), new Action<Domain>(this.detach_Domains));
			this._Extensions_Discoveries = new EntitySet<Extensions_Discovery>(new Action<Extensions_Discovery>(this.attach_Extensions_Discoveries), new Action<Extensions_Discovery>(this.detach_Extensions_Discoveries));
			OnCreated();
		}
		
		[Column(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[Column(Name="Extension", Storage="_Extension1", DbType="VarChar(884) NOT NULL", CanBeNull=false)]
		public string Extension1
		{
			get
			{
				return this._Extension1;
			}
			set
			{
				if ((this._Extension1 != value))
				{
					this.OnExtension1Changing(value);
					this.SendPropertyChanging();
					this._Extension1 = value;
					this.SendPropertyChanged("Extension1");
					this.OnExtension1Changed();
				}
			}
		}
		
		[Association(Name="Extension_DisallowedAbsoluteUris_COUNT_BY_EXTENSION", Storage="_DisallowedAbsoluteUris_COUNT_BY_EXTENSION", ThisKey="ID", OtherKey="ExtensionID", IsUnique=true, IsForeignKey=false)]
		public DisallowedAbsoluteUris_COUNT_BY_EXTENSION DisallowedAbsoluteUris_COUNT_BY_EXTENSION
		{
			get
			{
				return this._DisallowedAbsoluteUris_COUNT_BY_EXTENSION.Entity;
			}
			set
			{
				DisallowedAbsoluteUris_COUNT_BY_EXTENSION previousValue = this._DisallowedAbsoluteUris_COUNT_BY_EXTENSION.Entity;
				if (((previousValue != value) 
							|| (this._DisallowedAbsoluteUris_COUNT_BY_EXTENSION.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DisallowedAbsoluteUris_COUNT_BY_EXTENSION.Entity = null;
						previousValue.Extension = null;
					}
					this._DisallowedAbsoluteUris_COUNT_BY_EXTENSION.Entity = value;
					if ((value != null))
					{
						value.Extension = this;
					}
					this.SendPropertyChanged("DisallowedAbsoluteUris_COUNT_BY_EXTENSION");
				}
			}
		}
		
		[Association(Name="Extension_DisallowedAbsoluteUris_MOST_POPULAR_EXTENSIONS_BY_ABSOLUTEURI", Storage="_DisallowedAbsoluteUris_MOST_POPULAR_EXTENSIONS_BY_ABSOLUTEURI", ThisKey="ID", OtherKey="ExtensionID", IsUnique=true, IsForeignKey=false)]
		public DisallowedAbsoluteUris_MOST_POPULAR_EXTENSIONS_BY_ABSOLUTEURI DisallowedAbsoluteUris_MOST_POPULAR_EXTENSIONS_BY_ABSOLUTEURI
		{
			get
			{
				return this._DisallowedAbsoluteUris_MOST_POPULAR_EXTENSIONS_BY_ABSOLUTEURI.Entity;
			}
			set
			{
				DisallowedAbsoluteUris_MOST_POPULAR_EXTENSIONS_BY_ABSOLUTEURI previousValue = this._DisallowedAbsoluteUris_MOST_POPULAR_EXTENSIONS_BY_ABSOLUTEURI.Entity;
				if (((previousValue != value) 
							|| (this._DisallowedAbsoluteUris_MOST_POPULAR_EXTENSIONS_BY_ABSOLUTEURI.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DisallowedAbsoluteUris_MOST_POPULAR_EXTENSIONS_BY_ABSOLUTEURI.Entity = null;
						previousValue.Extension = null;
					}
					this._DisallowedAbsoluteUris_MOST_POPULAR_EXTENSIONS_BY_ABSOLUTEURI.Entity = value;
					if ((value != null))
					{
						value.Extension = this;
					}
					this.SendPropertyChanged("DisallowedAbsoluteUris_MOST_POPULAR_EXTENSIONS_BY_ABSOLUTEURI");
				}
			}
		}
		
		[Association(Name="Extension_DisallowedAbsoluteUris_MOST_POPULAR_EXTENSIONS_BY_DOMAIN", Storage="_DisallowedAbsoluteUris_MOST_POPULAR_EXTENSIONS_BY_DOMAIN", ThisKey="ID", OtherKey="ExtensionID", IsUnique=true, IsForeignKey=false)]
		public DisallowedAbsoluteUris_MOST_POPULAR_EXTENSIONS_BY_DOMAIN DisallowedAbsoluteUris_MOST_POPULAR_EXTENSIONS_BY_DOMAIN
		{
			get
			{
				return this._DisallowedAbsoluteUris_MOST_POPULAR_EXTENSIONS_BY_DOMAIN.Entity;
			}
			set
			{
				DisallowedAbsoluteUris_MOST_POPULAR_EXTENSIONS_BY_DOMAIN previousValue = this._DisallowedAbsoluteUris_MOST_POPULAR_EXTENSIONS_BY_DOMAIN.Entity;
				if (((previousValue != value) 
							|| (this._DisallowedAbsoluteUris_MOST_POPULAR_EXTENSIONS_BY_DOMAIN.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DisallowedAbsoluteUris_MOST_POPULAR_EXTENSIONS_BY_DOMAIN.Entity = null;
						previousValue.Extension = null;
					}
					this._DisallowedAbsoluteUris_MOST_POPULAR_EXTENSIONS_BY_DOMAIN.Entity = value;
					if ((value != null))
					{
						value.Extension = this;
					}
					this.SendPropertyChanged("DisallowedAbsoluteUris_MOST_POPULAR_EXTENSIONS_BY_DOMAIN");
				}
			}
		}
		
		[Association(Name="Extension_DisallowedAbsoluteUris_MOST_POPULAR_EXTENSIONS_BY_EXTENSION", Storage="_DisallowedAbsoluteUris_MOST_POPULAR_EXTENSIONS_BY_EXTENSION", ThisKey="ID", OtherKey="ExtensionID", IsUnique=true, IsForeignKey=false)]
		public DisallowedAbsoluteUris_MOST_POPULAR_EXTENSIONS_BY_EXTENSION DisallowedAbsoluteUris_MOST_POPULAR_EXTENSIONS_BY_EXTENSION
		{
			get
			{
				return this._DisallowedAbsoluteUris_MOST_POPULAR_EXTENSIONS_BY_EXTENSION.Entity;
			}
			set
			{
				DisallowedAbsoluteUris_MOST_POPULAR_EXTENSIONS_BY_EXTENSION previousValue = this._DisallowedAbsoluteUris_MOST_POPULAR_EXTENSIONS_BY_EXTENSION.Entity;
				if (((previousValue != value) 
							|| (this._DisallowedAbsoluteUris_MOST_POPULAR_EXTENSIONS_BY_EXTENSION.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DisallowedAbsoluteUris_MOST_POPULAR_EXTENSIONS_BY_EXTENSION.Entity = null;
						previousValue.Extension = null;
					}
					this._DisallowedAbsoluteUris_MOST_POPULAR_EXTENSIONS_BY_EXTENSION.Entity = value;
					if ((value != null))
					{
						value.Extension = this;
					}
					this.SendPropertyChanged("DisallowedAbsoluteUris_MOST_POPULAR_EXTENSIONS_BY_EXTENSION");
				}
			}
		}
		
		[Association(Name="Extension_DisallowedAbsoluteUris_MOST_POPULAR_EXTENSIONS_BY_HOST", Storage="_DisallowedAbsoluteUris_MOST_POPULAR_EXTENSIONS_BY_HOST", ThisKey="ID", OtherKey="ExtensionID", IsUnique=true, IsForeignKey=false)]
		public DisallowedAbsoluteUris_MOST_POPULAR_EXTENSIONS_BY_HOST DisallowedAbsoluteUris_MOST_POPULAR_EXTENSIONS_BY_HOST
		{
			get
			{
				return this._DisallowedAbsoluteUris_MOST_POPULAR_EXTENSIONS_BY_HOST.Entity;
			}
			set
			{
				DisallowedAbsoluteUris_MOST_POPULAR_EXTENSIONS_BY_HOST previousValue = this._DisallowedAbsoluteUris_MOST_POPULAR_EXTENSIONS_BY_HOST.Entity;
				if (((previousValue != value) 
							|| (this._DisallowedAbsoluteUris_MOST_POPULAR_EXTENSIONS_BY_HOST.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DisallowedAbsoluteUris_MOST_POPULAR_EXTENSIONS_BY_HOST.Entity = null;
						previousValue.Extension = null;
					}
					this._DisallowedAbsoluteUris_MOST_POPULAR_EXTENSIONS_BY_HOST.Entity = value;
					if ((value != null))
					{
						value.Extension = this;
					}
					this.SendPropertyChanged("DisallowedAbsoluteUris_MOST_POPULAR_EXTENSIONS_BY_HOST");
				}
			}
		}
		
		[Association(Name="Extension_DisallowedAbsoluteUris_MOST_POPULAR_EXTENSIONS_BY_SCHEME", Storage="_DisallowedAbsoluteUris_MOST_POPULAR_EXTENSIONS_BY_SCHEME", ThisKey="ID", OtherKey="ExtensionID", IsUnique=true, IsForeignKey=false)]
		public DisallowedAbsoluteUris_MOST_POPULAR_EXTENSIONS_BY_SCHEME DisallowedAbsoluteUris_MOST_POPULAR_EXTENSIONS_BY_SCHEME
		{
			get
			{
				return this._DisallowedAbsoluteUris_MOST_POPULAR_EXTENSIONS_BY_SCHEME.Entity;
			}
			set
			{
				DisallowedAbsoluteUris_MOST_POPULAR_EXTENSIONS_BY_SCHEME previousValue = this._DisallowedAbsoluteUris_MOST_POPULAR_EXTENSIONS_BY_SCHEME.Entity;
				if (((previousValue != value) 
							|| (this._DisallowedAbsoluteUris_MOST_POPULAR_EXTENSIONS_BY_SCHEME.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DisallowedAbsoluteUris_MOST_POPULAR_EXTENSIONS_BY_SCHEME.Entity = null;
						previousValue.Extension = null;
					}
					this._DisallowedAbsoluteUris_MOST_POPULAR_EXTENSIONS_BY_SCHEME.Entity = value;
					if ((value != null))
					{
						value.Extension = this;
					}
					this.SendPropertyChanged("DisallowedAbsoluteUris_MOST_POPULAR_EXTENSIONS_BY_SCHEME");
				}
			}
		}
		
		[Association(Name="Extension_EmailAddresses_COUNT_BY_EXTENSION", Storage="_EmailAddresses_COUNT_BY_EXTENSION", ThisKey="ID", OtherKey="ExtensionID", IsUnique=true, IsForeignKey=false)]
		public EmailAddresses_COUNT_BY_EXTENSION EmailAddresses_COUNT_BY_EXTENSION
		{
			get
			{
				return this._EmailAddresses_COUNT_BY_EXTENSION.Entity;
			}
			set
			{
				EmailAddresses_COUNT_BY_EXTENSION previousValue = this._EmailAddresses_COUNT_BY_EXTENSION.Entity;
				if (((previousValue != value) 
							|| (this._EmailAddresses_COUNT_BY_EXTENSION.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._EmailAddresses_COUNT_BY_EXTENSION.Entity = null;
						previousValue.Extension = null;
					}
					this._EmailAddresses_COUNT_BY_EXTENSION.Entity = value;
					if ((value != null))
					{
						value.Extension = this;
					}
					this.SendPropertyChanged("EmailAddresses_COUNT_BY_EXTENSION");
				}
			}
		}
		
		[Association(Name="Extension_EmailAddresses_MOST_POPULAR_EXTENSIONS_BY_ABSOLUTEURI", Storage="_EmailAddresses_MOST_POPULAR_EXTENSIONS_BY_ABSOLUTEURI", ThisKey="ID", OtherKey="ExtensionID", IsUnique=true, IsForeignKey=false)]
		public EmailAddresses_MOST_POPULAR_EXTENSIONS_BY_ABSOLUTEURI EmailAddresses_MOST_POPULAR_EXTENSIONS_BY_ABSOLUTEURI
		{
			get
			{
				return this._EmailAddresses_MOST_POPULAR_EXTENSIONS_BY_ABSOLUTEURI.Entity;
			}
			set
			{
				EmailAddresses_MOST_POPULAR_EXTENSIONS_BY_ABSOLUTEURI previousValue = this._EmailAddresses_MOST_POPULAR_EXTENSIONS_BY_ABSOLUTEURI.Entity;
				if (((previousValue != value) 
							|| (this._EmailAddresses_MOST_POPULAR_EXTENSIONS_BY_ABSOLUTEURI.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._EmailAddresses_MOST_POPULAR_EXTENSIONS_BY_ABSOLUTEURI.Entity = null;
						previousValue.Extension = null;
					}
					this._EmailAddresses_MOST_POPULAR_EXTENSIONS_BY_ABSOLUTEURI.Entity = value;
					if ((value != null))
					{
						value.Extension = this;
					}
					this.SendPropertyChanged("EmailAddresses_MOST_POPULAR_EXTENSIONS_BY_ABSOLUTEURI");
				}
			}
		}
		
		[Association(Name="Extension_EmailAddresses_MOST_POPULAR_EXTENSIONS_BY_DOMAIN", Storage="_EmailAddresses_MOST_POPULAR_EXTENSIONS_BY_DOMAIN", ThisKey="ID", OtherKey="ExtensionID", IsUnique=true, IsForeignKey=false)]
		public EmailAddresses_MOST_POPULAR_EXTENSIONS_BY_DOMAIN EmailAddresses_MOST_POPULAR_EXTENSIONS_BY_DOMAIN
		{
			get
			{
				return this._EmailAddresses_MOST_POPULAR_EXTENSIONS_BY_DOMAIN.Entity;
			}
			set
			{
				EmailAddresses_MOST_POPULAR_EXTENSIONS_BY_DOMAIN previousValue = this._EmailAddresses_MOST_POPULAR_EXTENSIONS_BY_DOMAIN.Entity;
				if (((previousValue != value) 
							|| (this._EmailAddresses_MOST_POPULAR_EXTENSIONS_BY_DOMAIN.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._EmailAddresses_MOST_POPULAR_EXTENSIONS_BY_DOMAIN.Entity = null;
						previousValue.Extension = null;
					}
					this._EmailAddresses_MOST_POPULAR_EXTENSIONS_BY_DOMAIN.Entity = value;
					if ((value != null))
					{
						value.Extension = this;
					}
					this.SendPropertyChanged("EmailAddresses_MOST_POPULAR_EXTENSIONS_BY_DOMAIN");
				}
			}
		}
		
		[Association(Name="Extension_EmailAddresses_MOST_POPULAR_EXTENSIONS_BY_EXTENSION", Storage="_EmailAddresses_MOST_POPULAR_EXTENSIONS_BY_EXTENSION", ThisKey="ID", OtherKey="ExtensionID", IsUnique=true, IsForeignKey=false)]
		public EmailAddresses_MOST_POPULAR_EXTENSIONS_BY_EXTENSION EmailAddresses_MOST_POPULAR_EXTENSIONS_BY_EXTENSION
		{
			get
			{
				return this._EmailAddresses_MOST_POPULAR_EXTENSIONS_BY_EXTENSION.Entity;
			}
			set
			{
				EmailAddresses_MOST_POPULAR_EXTENSIONS_BY_EXTENSION previousValue = this._EmailAddresses_MOST_POPULAR_EXTENSIONS_BY_EXTENSION.Entity;
				if (((previousValue != value) 
							|| (this._EmailAddresses_MOST_POPULAR_EXTENSIONS_BY_EXTENSION.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._EmailAddresses_MOST_POPULAR_EXTENSIONS_BY_EXTENSION.Entity = null;
						previousValue.Extension = null;
					}
					this._EmailAddresses_MOST_POPULAR_EXTENSIONS_BY_EXTENSION.Entity = value;
					if ((value != null))
					{
						value.Extension = this;
					}
					this.SendPropertyChanged("EmailAddresses_MOST_POPULAR_EXTENSIONS_BY_EXTENSION");
				}
			}
		}
		
		[Association(Name="Extension_EmailAddresses_MOST_POPULAR_EXTENSIONS_BY_HOST", Storage="_EmailAddresses_MOST_POPULAR_EXTENSIONS_BY_HOST", ThisKey="ID", OtherKey="ExtensionID", IsUnique=true, IsForeignKey=false)]
		public EmailAddresses_MOST_POPULAR_EXTENSIONS_BY_HOST EmailAddresses_MOST_POPULAR_EXTENSIONS_BY_HOST
		{
			get
			{
				return this._EmailAddresses_MOST_POPULAR_EXTENSIONS_BY_HOST.Entity;
			}
			set
			{
				EmailAddresses_MOST_POPULAR_EXTENSIONS_BY_HOST previousValue = this._EmailAddresses_MOST_POPULAR_EXTENSIONS_BY_HOST.Entity;
				if (((previousValue != value) 
							|| (this._EmailAddresses_MOST_POPULAR_EXTENSIONS_BY_HOST.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._EmailAddresses_MOST_POPULAR_EXTENSIONS_BY_HOST.Entity = null;
						previousValue.Extension = null;
					}
					this._EmailAddresses_MOST_POPULAR_EXTENSIONS_BY_HOST.Entity = value;
					if ((value != null))
					{
						value.Extension = this;
					}
					this.SendPropertyChanged("EmailAddresses_MOST_POPULAR_EXTENSIONS_BY_HOST");
				}
			}
		}
		
		[Association(Name="Extension_EmailAddresses_MOST_POPULAR_EXTENSIONS_BY_SCHEME", Storage="_EmailAddresses_MOST_POPULAR_EXTENSIONS_BY_SCHEME", ThisKey="ID", OtherKey="ExtensionID", IsUnique=true, IsForeignKey=false)]
		public EmailAddresses_MOST_POPULAR_EXTENSIONS_BY_SCHEME EmailAddresses_MOST_POPULAR_EXTENSIONS_BY_SCHEME
		{
			get
			{
				return this._EmailAddresses_MOST_POPULAR_EXTENSIONS_BY_SCHEME.Entity;
			}
			set
			{
				EmailAddresses_MOST_POPULAR_EXTENSIONS_BY_SCHEME previousValue = this._EmailAddresses_MOST_POPULAR_EXTENSIONS_BY_SCHEME.Entity;
				if (((previousValue != value) 
							|| (this._EmailAddresses_MOST_POPULAR_EXTENSIONS_BY_SCHEME.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._EmailAddresses_MOST_POPULAR_EXTENSIONS_BY_SCHEME.Entity = null;
						previousValue.Extension = null;
					}
					this._EmailAddresses_MOST_POPULAR_EXTENSIONS_BY_SCHEME.Entity = value;
					if ((value != null))
					{
						value.Extension = this;
					}
					this.SendPropertyChanged("EmailAddresses_MOST_POPULAR_EXTENSIONS_BY_SCHEME");
				}
			}
		}
		
		[Association(Name="Extension_Exceptions_COUNT_BY_EXTENSION1", Storage="_Exceptions_COUNT_BY_EXTENSION1", ThisKey="Extension1", OtherKey="Extension1", IsUnique=true, IsForeignKey=false)]
		public Exceptions_COUNT_BY_EXTENSION1 Exceptions_COUNT_BY_EXTENSION1
		{
			get
			{
				return this._Exceptions_COUNT_BY_EXTENSION1.Entity;
			}
			set
			{
				Exceptions_COUNT_BY_EXTENSION1 previousValue = this._Exceptions_COUNT_BY_EXTENSION1.Entity;
				if (((previousValue != value) 
							|| (this._Exceptions_COUNT_BY_EXTENSION1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Exceptions_COUNT_BY_EXTENSION1.Entity = null;
						previousValue.Extension = null;
					}
					this._Exceptions_COUNT_BY_EXTENSION1.Entity = value;
					if ((value != null))
					{
						value.Extension = this;
					}
					this.SendPropertyChanged("Exceptions_COUNT_BY_EXTENSION1");
				}
			}
		}
		
		[Association(Name="Extension_Exceptions_COUNT_BY_EXTENSION2", Storage="_Exceptions_COUNT_BY_EXTENSION2", ThisKey="Extension1", OtherKey="Extension2", IsUnique=true, IsForeignKey=false)]
		public Exceptions_COUNT_BY_EXTENSION2 Exceptions_COUNT_BY_EXTENSION2
		{
			get
			{
				return this._Exceptions_COUNT_BY_EXTENSION2.Entity;
			}
			set
			{
				Exceptions_COUNT_BY_EXTENSION2 previousValue = this._Exceptions_COUNT_BY_EXTENSION2.Entity;
				if (((previousValue != value) 
							|| (this._Exceptions_COUNT_BY_EXTENSION2.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Exceptions_COUNT_BY_EXTENSION2.Entity = null;
						previousValue.Extension = null;
					}
					this._Exceptions_COUNT_BY_EXTENSION2.Entity = value;
					if ((value != null))
					{
						value.Extension = this;
					}
					this.SendPropertyChanged("Exceptions_COUNT_BY_EXTENSION2");
				}
			}
		}
		
		[Association(Name="Extension_Files_COUNT_BY_EXTENSION", Storage="_Files_COUNT_BY_EXTENSION", ThisKey="ID", OtherKey="ExtensionID", IsUnique=true, IsForeignKey=false)]
		public Files_COUNT_BY_EXTENSION Files_COUNT_BY_EXTENSION
		{
			get
			{
				return this._Files_COUNT_BY_EXTENSION.Entity;
			}
			set
			{
				Files_COUNT_BY_EXTENSION previousValue = this._Files_COUNT_BY_EXTENSION.Entity;
				if (((previousValue != value) 
							|| (this._Files_COUNT_BY_EXTENSION.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Files_COUNT_BY_EXTENSION.Entity = null;
						previousValue.Extension = null;
					}
					this._Files_COUNT_BY_EXTENSION.Entity = value;
					if ((value != null))
					{
						value.Extension = this;
					}
					this.SendPropertyChanged("Files_COUNT_BY_EXTENSION");
				}
			}
		}
		
		[Association(Name="Extension_Files_MOST_POPULAR_EXTENSIONS_BY_ABSOLUTEURI", Storage="_Files_MOST_POPULAR_EXTENSIONS_BY_ABSOLUTEURI", ThisKey="ID", OtherKey="ExtensionID", IsUnique=true, IsForeignKey=false)]
		public Files_MOST_POPULAR_EXTENSIONS_BY_ABSOLUTEURI Files_MOST_POPULAR_EXTENSIONS_BY_ABSOLUTEURI
		{
			get
			{
				return this._Files_MOST_POPULAR_EXTENSIONS_BY_ABSOLUTEURI.Entity;
			}
			set
			{
				Files_MOST_POPULAR_EXTENSIONS_BY_ABSOLUTEURI previousValue = this._Files_MOST_POPULAR_EXTENSIONS_BY_ABSOLUTEURI.Entity;
				if (((previousValue != value) 
							|| (this._Files_MOST_POPULAR_EXTENSIONS_BY_ABSOLUTEURI.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Files_MOST_POPULAR_EXTENSIONS_BY_ABSOLUTEURI.Entity = null;
						previousValue.Extension = null;
					}
					this._Files_MOST_POPULAR_EXTENSIONS_BY_ABSOLUTEURI.Entity = value;
					if ((value != null))
					{
						value.Extension = this;
					}
					this.SendPropertyChanged("Files_MOST_POPULAR_EXTENSIONS_BY_ABSOLUTEURI");
				}
			}
		}
		
		[Association(Name="Extension_Files_MOST_POPULAR_EXTENSIONS_BY_DOMAIN", Storage="_Files_MOST_POPULAR_EXTENSIONS_BY_DOMAIN", ThisKey="ID", OtherKey="ExtensionID", IsUnique=true, IsForeignKey=false)]
		public Files_MOST_POPULAR_EXTENSIONS_BY_DOMAIN Files_MOST_POPULAR_EXTENSIONS_BY_DOMAIN
		{
			get
			{
				return this._Files_MOST_POPULAR_EXTENSIONS_BY_DOMAIN.Entity;
			}
			set
			{
				Files_MOST_POPULAR_EXTENSIONS_BY_DOMAIN previousValue = this._Files_MOST_POPULAR_EXTENSIONS_BY_DOMAIN.Entity;
				if (((previousValue != value) 
							|| (this._Files_MOST_POPULAR_EXTENSIONS_BY_DOMAIN.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Files_MOST_POPULAR_EXTENSIONS_BY_DOMAIN.Entity = null;
						previousValue.Extension = null;
					}
					this._Files_MOST_POPULAR_EXTENSIONS_BY_DOMAIN.Entity = value;
					if ((value != null))
					{
						value.Extension = this;
					}
					this.SendPropertyChanged("Files_MOST_POPULAR_EXTENSIONS_BY_DOMAIN");
				}
			}
		}
		
		[Association(Name="Extension_Files_MOST_POPULAR_EXTENSIONS_BY_EXTENSION", Storage="_Files_MOST_POPULAR_EXTENSIONS_BY_EXTENSION", ThisKey="ID", OtherKey="ExtensionID", IsUnique=true, IsForeignKey=false)]
		public Files_MOST_POPULAR_EXTENSIONS_BY_EXTENSION Files_MOST_POPULAR_EXTENSIONS_BY_EXTENSION
		{
			get
			{
				return this._Files_MOST_POPULAR_EXTENSIONS_BY_EXTENSION.Entity;
			}
			set
			{
				Files_MOST_POPULAR_EXTENSIONS_BY_EXTENSION previousValue = this._Files_MOST_POPULAR_EXTENSIONS_BY_EXTENSION.Entity;
				if (((previousValue != value) 
							|| (this._Files_MOST_POPULAR_EXTENSIONS_BY_EXTENSION.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Files_MOST_POPULAR_EXTENSIONS_BY_EXTENSION.Entity = null;
						previousValue.Extension = null;
					}
					this._Files_MOST_POPULAR_EXTENSIONS_BY_EXTENSION.Entity = value;
					if ((value != null))
					{
						value.Extension = this;
					}
					this.SendPropertyChanged("Files_MOST_POPULAR_EXTENSIONS_BY_EXTENSION");
				}
			}
		}
		
		[Association(Name="Extension_Files_MOST_POPULAR_EXTENSIONS_BY_HOST", Storage="_Files_MOST_POPULAR_EXTENSIONS_BY_HOST", ThisKey="ID", OtherKey="ExtensionID", IsUnique=true, IsForeignKey=false)]
		public Files_MOST_POPULAR_EXTENSIONS_BY_HOST Files_MOST_POPULAR_EXTENSIONS_BY_HOST
		{
			get
			{
				return this._Files_MOST_POPULAR_EXTENSIONS_BY_HOST.Entity;
			}
			set
			{
				Files_MOST_POPULAR_EXTENSIONS_BY_HOST previousValue = this._Files_MOST_POPULAR_EXTENSIONS_BY_HOST.Entity;
				if (((previousValue != value) 
							|| (this._Files_MOST_POPULAR_EXTENSIONS_BY_HOST.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Files_MOST_POPULAR_EXTENSIONS_BY_HOST.Entity = null;
						previousValue.Extension = null;
					}
					this._Files_MOST_POPULAR_EXTENSIONS_BY_HOST.Entity = value;
					if ((value != null))
					{
						value.Extension = this;
					}
					this.SendPropertyChanged("Files_MOST_POPULAR_EXTENSIONS_BY_HOST");
				}
			}
		}
		
		[Association(Name="Extension_Files_MOST_POPULAR_EXTENSIONS_BY_SCHEME", Storage="_Files_MOST_POPULAR_EXTENSIONS_BY_SCHEME", ThisKey="ID", OtherKey="ExtensionID", IsUnique=true, IsForeignKey=false)]
		public Files_MOST_POPULAR_EXTENSIONS_BY_SCHEME Files_MOST_POPULAR_EXTENSIONS_BY_SCHEME
		{
			get
			{
				return this._Files_MOST_POPULAR_EXTENSIONS_BY_SCHEME.Entity;
			}
			set
			{
				Files_MOST_POPULAR_EXTENSIONS_BY_SCHEME previousValue = this._Files_MOST_POPULAR_EXTENSIONS_BY_SCHEME.Entity;
				if (((previousValue != value) 
							|| (this._Files_MOST_POPULAR_EXTENSIONS_BY_SCHEME.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Files_MOST_POPULAR_EXTENSIONS_BY_SCHEME.Entity = null;
						previousValue.Extension = null;
					}
					this._Files_MOST_POPULAR_EXTENSIONS_BY_SCHEME.Entity = value;
					if ((value != null))
					{
						value.Extension = this;
					}
					this.SendPropertyChanged("Files_MOST_POPULAR_EXTENSIONS_BY_SCHEME");
				}
			}
		}
		
		[Association(Name="Extension_HyperLinks_COUNT_BY_EXTENSION", Storage="_HyperLinks_COUNT_BY_EXTENSION", ThisKey="ID", OtherKey="ExtensionID", IsUnique=true, IsForeignKey=false)]
		public HyperLinks_COUNT_BY_EXTENSION HyperLinks_COUNT_BY_EXTENSION
		{
			get
			{
				return this._HyperLinks_COUNT_BY_EXTENSION.Entity;
			}
			set
			{
				HyperLinks_COUNT_BY_EXTENSION previousValue = this._HyperLinks_COUNT_BY_EXTENSION.Entity;
				if (((previousValue != value) 
							|| (this._HyperLinks_COUNT_BY_EXTENSION.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._HyperLinks_COUNT_BY_EXTENSION.Entity = null;
						previousValue.Extension = null;
					}
					this._HyperLinks_COUNT_BY_EXTENSION.Entity = value;
					if ((value != null))
					{
						value.Extension = this;
					}
					this.SendPropertyChanged("HyperLinks_COUNT_BY_EXTENSION");
				}
			}
		}
		
		[Association(Name="Extension_HyperLinks_MOST_POPULAR_EXTENSIONS_BY_ABSOLUTEURI", Storage="_HyperLinks_MOST_POPULAR_EXTENSIONS_BY_ABSOLUTEURI", ThisKey="ID", OtherKey="ExtensionID", IsUnique=true, IsForeignKey=false)]
		public HyperLinks_MOST_POPULAR_EXTENSIONS_BY_ABSOLUTEURI HyperLinks_MOST_POPULAR_EXTENSIONS_BY_ABSOLUTEURI
		{
			get
			{
				return this._HyperLinks_MOST_POPULAR_EXTENSIONS_BY_ABSOLUTEURI.Entity;
			}
			set
			{
				HyperLinks_MOST_POPULAR_EXTENSIONS_BY_ABSOLUTEURI previousValue = this._HyperLinks_MOST_POPULAR_EXTENSIONS_BY_ABSOLUTEURI.Entity;
				if (((previousValue != value) 
							|| (this._HyperLinks_MOST_POPULAR_EXTENSIONS_BY_ABSOLUTEURI.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._HyperLinks_MOST_POPULAR_EXTENSIONS_BY_ABSOLUTEURI.Entity = null;
						previousValue.Extension = null;
					}
					this._HyperLinks_MOST_POPULAR_EXTENSIONS_BY_ABSOLUTEURI.Entity = value;
					if ((value != null))
					{
						value.Extension = this;
					}
					this.SendPropertyChanged("HyperLinks_MOST_POPULAR_EXTENSIONS_BY_ABSOLUTEURI");
				}
			}
		}
		
		[Association(Name="Extension_HyperLinks_MOST_POPULAR_EXTENSIONS_BY_DOMAIN", Storage="_HyperLinks_MOST_POPULAR_EXTENSIONS_BY_DOMAIN", ThisKey="ID", OtherKey="ExtensionID", IsUnique=true, IsForeignKey=false)]
		public HyperLinks_MOST_POPULAR_EXTENSIONS_BY_DOMAIN HyperLinks_MOST_POPULAR_EXTENSIONS_BY_DOMAIN
		{
			get
			{
				return this._HyperLinks_MOST_POPULAR_EXTENSIONS_BY_DOMAIN.Entity;
			}
			set
			{
				HyperLinks_MOST_POPULAR_EXTENSIONS_BY_DOMAIN previousValue = this._HyperLinks_MOST_POPULAR_EXTENSIONS_BY_DOMAIN.Entity;
				if (((previousValue != value) 
							|| (this._HyperLinks_MOST_POPULAR_EXTENSIONS_BY_DOMAIN.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._HyperLinks_MOST_POPULAR_EXTENSIONS_BY_DOMAIN.Entity = null;
						previousValue.Extension = null;
					}
					this._HyperLinks_MOST_POPULAR_EXTENSIONS_BY_DOMAIN.Entity = value;
					if ((value != null))
					{
						value.Extension = this;
					}
					this.SendPropertyChanged("HyperLinks_MOST_POPULAR_EXTENSIONS_BY_DOMAIN");
				}
			}
		}
		
		[Association(Name="Extension_HyperLinks_MOST_POPULAR_EXTENSIONS_BY_EXTENSION", Storage="_HyperLinks_MOST_POPULAR_EXTENSIONS_BY_EXTENSION", ThisKey="ID", OtherKey="ExtensionID", IsUnique=true, IsForeignKey=false)]
		public HyperLinks_MOST_POPULAR_EXTENSIONS_BY_EXTENSION HyperLinks_MOST_POPULAR_EXTENSIONS_BY_EXTENSION
		{
			get
			{
				return this._HyperLinks_MOST_POPULAR_EXTENSIONS_BY_EXTENSION.Entity;
			}
			set
			{
				HyperLinks_MOST_POPULAR_EXTENSIONS_BY_EXTENSION previousValue = this._HyperLinks_MOST_POPULAR_EXTENSIONS_BY_EXTENSION.Entity;
				if (((previousValue != value) 
							|| (this._HyperLinks_MOST_POPULAR_EXTENSIONS_BY_EXTENSION.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._HyperLinks_MOST_POPULAR_EXTENSIONS_BY_EXTENSION.Entity = null;
						previousValue.Extension = null;
					}
					this._HyperLinks_MOST_POPULAR_EXTENSIONS_BY_EXTENSION.Entity = value;
					if ((value != null))
					{
						value.Extension = this;
					}
					this.SendPropertyChanged("HyperLinks_MOST_POPULAR_EXTENSIONS_BY_EXTENSION");
				}
			}
		}
		
		[Association(Name="Extension_HyperLinks_MOST_POPULAR_EXTENSIONS_BY_HOST", Storage="_HyperLinks_MOST_POPULAR_EXTENSIONS_BY_HOST", ThisKey="ID", OtherKey="ExtensionID", IsUnique=true, IsForeignKey=false)]
		public HyperLinks_MOST_POPULAR_EXTENSIONS_BY_HOST HyperLinks_MOST_POPULAR_EXTENSIONS_BY_HOST
		{
			get
			{
				return this._HyperLinks_MOST_POPULAR_EXTENSIONS_BY_HOST.Entity;
			}
			set
			{
				HyperLinks_MOST_POPULAR_EXTENSIONS_BY_HOST previousValue = this._HyperLinks_MOST_POPULAR_EXTENSIONS_BY_HOST.Entity;
				if (((previousValue != value) 
							|| (this._HyperLinks_MOST_POPULAR_EXTENSIONS_BY_HOST.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._HyperLinks_MOST_POPULAR_EXTENSIONS_BY_HOST.Entity = null;
						previousValue.Extension = null;
					}
					this._HyperLinks_MOST_POPULAR_EXTENSIONS_BY_HOST.Entity = value;
					if ((value != null))
					{
						value.Extension = this;
					}
					this.SendPropertyChanged("HyperLinks_MOST_POPULAR_EXTENSIONS_BY_HOST");
				}
			}
		}
		
		[Association(Name="Extension_HyperLinks_MOST_POPULAR_EXTENSIONS_BY_SCHEME", Storage="_HyperLinks_MOST_POPULAR_EXTENSIONS_BY_SCHEME", ThisKey="ID", OtherKey="ExtensionID", IsUnique=true, IsForeignKey=false)]
		public HyperLinks_MOST_POPULAR_EXTENSIONS_BY_SCHEME HyperLinks_MOST_POPULAR_EXTENSIONS_BY_SCHEME
		{
			get
			{
				return this._HyperLinks_MOST_POPULAR_EXTENSIONS_BY_SCHEME.Entity;
			}
			set
			{
				HyperLinks_MOST_POPULAR_EXTENSIONS_BY_SCHEME previousValue = this._HyperLinks_MOST_POPULAR_EXTENSIONS_BY_SCHEME.Entity;
				if (((previousValue != value) 
							|| (this._HyperLinks_MOST_POPULAR_EXTENSIONS_BY_SCHEME.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._HyperLinks_MOST_POPULAR_EXTENSIONS_BY_SCHEME.Entity = null;
						previousValue.Extension = null;
					}
					this._HyperLinks_MOST_POPULAR_EXTENSIONS_BY_SCHEME.Entity = value;
					if ((value != null))
					{
						value.Extension = this;
					}
					this.SendPropertyChanged("HyperLinks_MOST_POPULAR_EXTENSIONS_BY_SCHEME");
				}
			}
		}
		
		[Association(Name="Extension_Images_COUNT_BY_EXTENSION", Storage="_Images_COUNT_BY_EXTENSION", ThisKey="ID", OtherKey="ExtensionID", IsUnique=true, IsForeignKey=false)]
		public Images_COUNT_BY_EXTENSION Images_COUNT_BY_EXTENSION
		{
			get
			{
				return this._Images_COUNT_BY_EXTENSION.Entity;
			}
			set
			{
				Images_COUNT_BY_EXTENSION previousValue = this._Images_COUNT_BY_EXTENSION.Entity;
				if (((previousValue != value) 
							|| (this._Images_COUNT_BY_EXTENSION.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Images_COUNT_BY_EXTENSION.Entity = null;
						previousValue.Extension = null;
					}
					this._Images_COUNT_BY_EXTENSION.Entity = value;
					if ((value != null))
					{
						value.Extension = this;
					}
					this.SendPropertyChanged("Images_COUNT_BY_EXTENSION");
				}
			}
		}
		
		[Association(Name="Extension_Images_MOST_POPULAR_EXTENSIONS_BY_ABSOLUTEURI", Storage="_Images_MOST_POPULAR_EXTENSIONS_BY_ABSOLUTEURI", ThisKey="ID", OtherKey="ExtensionID", IsUnique=true, IsForeignKey=false)]
		public Images_MOST_POPULAR_EXTENSIONS_BY_ABSOLUTEURI Images_MOST_POPULAR_EXTENSIONS_BY_ABSOLUTEURI
		{
			get
			{
				return this._Images_MOST_POPULAR_EXTENSIONS_BY_ABSOLUTEURI.Entity;
			}
			set
			{
				Images_MOST_POPULAR_EXTENSIONS_BY_ABSOLUTEURI previousValue = this._Images_MOST_POPULAR_EXTENSIONS_BY_ABSOLUTEURI.Entity;
				if (((previousValue != value) 
							|| (this._Images_MOST_POPULAR_EXTENSIONS_BY_ABSOLUTEURI.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Images_MOST_POPULAR_EXTENSIONS_BY_ABSOLUTEURI.Entity = null;
						previousValue.Extension = null;
					}
					this._Images_MOST_POPULAR_EXTENSIONS_BY_ABSOLUTEURI.Entity = value;
					if ((value != null))
					{
						value.Extension = this;
					}
					this.SendPropertyChanged("Images_MOST_POPULAR_EXTENSIONS_BY_ABSOLUTEURI");
				}
			}
		}
		
		[Association(Name="Extension_Images_MOST_POPULAR_EXTENSIONS_BY_DOMAIN", Storage="_Images_MOST_POPULAR_EXTENSIONS_BY_DOMAIN", ThisKey="ID", OtherKey="ExtensionID", IsUnique=true, IsForeignKey=false)]
		public Images_MOST_POPULAR_EXTENSIONS_BY_DOMAIN Images_MOST_POPULAR_EXTENSIONS_BY_DOMAIN
		{
			get
			{
				return this._Images_MOST_POPULAR_EXTENSIONS_BY_DOMAIN.Entity;
			}
			set
			{
				Images_MOST_POPULAR_EXTENSIONS_BY_DOMAIN previousValue = this._Images_MOST_POPULAR_EXTENSIONS_BY_DOMAIN.Entity;
				if (((previousValue != value) 
							|| (this._Images_MOST_POPULAR_EXTENSIONS_BY_DOMAIN.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Images_MOST_POPULAR_EXTENSIONS_BY_DOMAIN.Entity = null;
						previousValue.Extension = null;
					}
					this._Images_MOST_POPULAR_EXTENSIONS_BY_DOMAIN.Entity = value;
					if ((value != null))
					{
						value.Extension = this;
					}
					this.SendPropertyChanged("Images_MOST_POPULAR_EXTENSIONS_BY_DOMAIN");
				}
			}
		}
		
		[Association(Name="Extension_Images_MOST_POPULAR_EXTENSIONS_BY_EXTENSION", Storage="_Images_MOST_POPULAR_EXTENSIONS_BY_EXTENSION", ThisKey="ID", OtherKey="ExtensionID", IsUnique=true, IsForeignKey=false)]
		public Images_MOST_POPULAR_EXTENSIONS_BY_EXTENSION Images_MOST_POPULAR_EXTENSIONS_BY_EXTENSION
		{
			get
			{
				return this._Images_MOST_POPULAR_EXTENSIONS_BY_EXTENSION.Entity;
			}
			set
			{
				Images_MOST_POPULAR_EXTENSIONS_BY_EXTENSION previousValue = this._Images_MOST_POPULAR_EXTENSIONS_BY_EXTENSION.Entity;
				if (((previousValue != value) 
							|| (this._Images_MOST_POPULAR_EXTENSIONS_BY_EXTENSION.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Images_MOST_POPULAR_EXTENSIONS_BY_EXTENSION.Entity = null;
						previousValue.Extension = null;
					}
					this._Images_MOST_POPULAR_EXTENSIONS_BY_EXTENSION.Entity = value;
					if ((value != null))
					{
						value.Extension = this;
					}
					this.SendPropertyChanged("Images_MOST_POPULAR_EXTENSIONS_BY_EXTENSION");
				}
			}
		}
		
		[Association(Name="Extension_Images_MOST_POPULAR_EXTENSIONS_BY_HOST", Storage="_Images_MOST_POPULAR_EXTENSIONS_BY_HOST", ThisKey="ID", OtherKey="ExtensionID", IsUnique=true, IsForeignKey=false)]
		public Images_MOST_POPULAR_EXTENSIONS_BY_HOST Images_MOST_POPULAR_EXTENSIONS_BY_HOST
		{
			get
			{
				return this._Images_MOST_POPULAR_EXTENSIONS_BY_HOST.Entity;
			}
			set
			{
				Images_MOST_POPULAR_EXTENSIONS_BY_HOST previousValue = this._Images_MOST_POPULAR_EXTENSIONS_BY_HOST.Entity;
				if (((previousValue != value) 
							|| (this._Images_MOST_POPULAR_EXTENSIONS_BY_HOST.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Images_MOST_POPULAR_EXTENSIONS_BY_HOST.Entity = null;
						previousValue.Extension = null;
					}
					this._Images_MOST_POPULAR_EXTENSIONS_BY_HOST.Entity = value;
					if ((value != null))
					{
						value.Extension = this;
					}
					this.SendPropertyChanged("Images_MOST_POPULAR_EXTENSIONS_BY_HOST");
				}
			}
		}
		
		[Association(Name="Extension_Images_MOST_POPULAR_EXTENSIONS_BY_SCHEME", Storage="_Images_MOST_POPULAR_EXTENSIONS_BY_SCHEME", ThisKey="ID", OtherKey="ExtensionID", IsUnique=true, IsForeignKey=false)]
		public Images_MOST_POPULAR_EXTENSIONS_BY_SCHEME Images_MOST_POPULAR_EXTENSIONS_BY_SCHEME
		{
			get
			{
				return this._Images_MOST_POPULAR_EXTENSIONS_BY_SCHEME.Entity;
			}
			set
			{
				Images_MOST_POPULAR_EXTENSIONS_BY_SCHEME previousValue = this._Images_MOST_POPULAR_EXTENSIONS_BY_SCHEME.Entity;
				if (((previousValue != value) 
							|| (this._Images_MOST_POPULAR_EXTENSIONS_BY_SCHEME.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Images_MOST_POPULAR_EXTENSIONS_BY_SCHEME.Entity = null;
						previousValue.Extension = null;
					}
					this._Images_MOST_POPULAR_EXTENSIONS_BY_SCHEME.Entity = value;
					if ((value != null))
					{
						value.Extension = this;
					}
					this.SendPropertyChanged("Images_MOST_POPULAR_EXTENSIONS_BY_SCHEME");
				}
			}
		}
		
		[Association(Name="Extension_WebPages_COUNT_BY_EXTENSION", Storage="_WebPages_COUNT_BY_EXTENSION", ThisKey="Extension1", OtherKey="Extension", IsUnique=true, IsForeignKey=false)]
		public WebPages_COUNT_BY_EXTENSION WebPages_COUNT_BY_EXTENSION
		{
			get
			{
				return this._WebPages_COUNT_BY_EXTENSION.Entity;
			}
			set
			{
				WebPages_COUNT_BY_EXTENSION previousValue = this._WebPages_COUNT_BY_EXTENSION.Entity;
				if (((previousValue != value) 
							|| (this._WebPages_COUNT_BY_EXTENSION.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._WebPages_COUNT_BY_EXTENSION.Entity = null;
						previousValue.Extension1 = null;
					}
					this._WebPages_COUNT_BY_EXTENSION.Entity = value;
					if ((value != null))
					{
						value.Extension1 = this;
					}
					this.SendPropertyChanged("WebPages_COUNT_BY_EXTENSION");
				}
			}
		}
		
		[Association(Name="Extension_Domain", Storage="_Domains", ThisKey="ID", OtherKey="ExtensionID")]
		public EntitySet<Domain> Domains
		{
			get
			{
				return this._Domains;
			}
			set
			{
				this._Domains.Assign(value);
			}
		}
		
		[Association(Name="Extension_Extensions_Discovery", Storage="_Extensions_Discoveries", ThisKey="ID", OtherKey="ExtensionID")]
		public EntitySet<Extensions_Discovery> Extensions_Discoveries
		{
			get
			{
				return this._Extensions_Discoveries;
			}
			set
			{
				this._Extensions_Discoveries.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Domains(Domain entity)
		{
			this.SendPropertyChanging();
			entity.Extension = this;
		}
		
		private void detach_Domains(Domain entity)
		{
			this.SendPropertyChanging();
			entity.Extension = null;
		}
		
		private void attach_Extensions_Discoveries(Extensions_Discovery entity)
		{
			this.SendPropertyChanging();
			entity.Extension = this;
		}
		
		private void detach_Extensions_Discoveries(Extensions_Discovery entity)
		{
			this.SendPropertyChanging();
			entity.Extension = null;
		}
	}
	
	[Table(Name="dbo.Extensions_Discoveries")]
	public partial class Extensions_Discovery : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Nullable<System.DateTime> _InitiallyDiscovered;
		
		private System.Nullable<System.DateTime> _LastDiscovered;
		
		private int _ID;
		
		private byte _DiscoveryTypeID;
		
		private int _ExtensionID;
		
		private EntityRef<Extension> _Extension;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnInitiallyDiscoveredChanging(System.Nullable<System.DateTime> value);
    partial void OnInitiallyDiscoveredChanged();
    partial void OnLastDiscoveredChanging(System.Nullable<System.DateTime> value);
    partial void OnLastDiscoveredChanged();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnDiscoveryTypeIDChanging(byte value);
    partial void OnDiscoveryTypeIDChanged();
    partial void OnExtensionIDChanging(int value);
    partial void OnExtensionIDChanged();
    #endregion
		
		public Extensions_Discovery()
		{
			this._Extension = default(EntityRef<Extension>);
			OnCreated();
		}
		
		[Column(Storage="_InitiallyDiscovered", DbType="DateTime")]
		public System.Nullable<System.DateTime> InitiallyDiscovered
		{
			get
			{
				return this._InitiallyDiscovered;
			}
			set
			{
				if ((this._InitiallyDiscovered != value))
				{
					this.OnInitiallyDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._InitiallyDiscovered = value;
					this.SendPropertyChanged("InitiallyDiscovered");
					this.OnInitiallyDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_LastDiscovered", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastDiscovered
		{
			get
			{
				return this._LastDiscovered;
			}
			set
			{
				if ((this._LastDiscovered != value))
				{
					this.OnLastDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._LastDiscovered = value;
					this.SendPropertyChanged("LastDiscovered");
					this.OnLastDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[Column(Storage="_DiscoveryTypeID", DbType="TinyInt NOT NULL")]
		public byte DiscoveryTypeID
		{
			get
			{
				return this._DiscoveryTypeID;
			}
			set
			{
				if ((this._DiscoveryTypeID != value))
				{
					this.OnDiscoveryTypeIDChanging(value);
					this.SendPropertyChanging();
					this._DiscoveryTypeID = value;
					this.SendPropertyChanged("DiscoveryTypeID");
					this.OnDiscoveryTypeIDChanged();
				}
			}
		}
		
		[Column(Storage="_ExtensionID", DbType="Int NOT NULL")]
		public int ExtensionID
		{
			get
			{
				return this._ExtensionID;
			}
			set
			{
				if ((this._ExtensionID != value))
				{
					if (this._Extension.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnExtensionIDChanging(value);
					this.SendPropertyChanging();
					this._ExtensionID = value;
					this.SendPropertyChanged("ExtensionID");
					this.OnExtensionIDChanged();
				}
			}
		}
		
		[Association(Name="Extension_Extensions_Discovery", Storage="_Extension", ThisKey="ExtensionID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Extension Extension
		{
			get
			{
				return this._Extension.Entity;
			}
			set
			{
				Extension previousValue = this._Extension.Entity;
				if (((previousValue != value) 
							|| (this._Extension.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Extension.Entity = null;
						previousValue.Extensions_Discoveries.Remove(this);
					}
					this._Extension.Entity = value;
					if ((value != null))
					{
						value.Extensions_Discoveries.Add(this);
						this._ExtensionID = value.ID;
					}
					else
					{
						this._ExtensionID = default(int);
					}
					this.SendPropertyChanged("Extension");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.Files_Hosts_Discoveries")]
	public partial class Files_Hosts_Discovery : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _FileID;
		
		private int _Host_DiscoveryID;
		
		private EntityRef<Hosts_Discovery> _Hosts_Discovery;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnFileIDChanging(long value);
    partial void OnFileIDChanged();
    partial void OnHost_DiscoveryIDChanging(int value);
    partial void OnHost_DiscoveryIDChanged();
    #endregion
		
		public Files_Hosts_Discovery()
		{
			this._Hosts_Discovery = default(EntityRef<Hosts_Discovery>);
			OnCreated();
		}
		
		[Column(Storage="_FileID", DbType="BigInt NOT NULL", IsPrimaryKey=true)]
		public long FileID
		{
			get
			{
				return this._FileID;
			}
			set
			{
				if ((this._FileID != value))
				{
					this.OnFileIDChanging(value);
					this.SendPropertyChanging();
					this._FileID = value;
					this.SendPropertyChanged("FileID");
					this.OnFileIDChanged();
				}
			}
		}
		
		[Column(Storage="_Host_DiscoveryID", DbType="Int NOT NULL")]
		public int Host_DiscoveryID
		{
			get
			{
				return this._Host_DiscoveryID;
			}
			set
			{
				if ((this._Host_DiscoveryID != value))
				{
					if (this._Hosts_Discovery.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnHost_DiscoveryIDChanging(value);
					this.SendPropertyChanging();
					this._Host_DiscoveryID = value;
					this.SendPropertyChanged("Host_DiscoveryID");
					this.OnHost_DiscoveryIDChanged();
				}
			}
		}
		
		[Association(Name="Hosts_Discovery_Files_Hosts_Discovery", Storage="_Hosts_Discovery", ThisKey="Host_DiscoveryID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Hosts_Discovery Hosts_Discovery
		{
			get
			{
				return this._Hosts_Discovery.Entity;
			}
			set
			{
				Hosts_Discovery previousValue = this._Hosts_Discovery.Entity;
				if (((previousValue != value) 
							|| (this._Hosts_Discovery.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Hosts_Discovery.Entity = null;
						previousValue.Files_Hosts_Discoveries.Remove(this);
					}
					this._Hosts_Discovery.Entity = value;
					if ((value != null))
					{
						value.Files_Hosts_Discoveries.Add(this);
						this._Host_DiscoveryID = value.ID;
					}
					else
					{
						this._Host_DiscoveryID = default(int);
					}
					this.SendPropertyChanged("Hosts_Discovery");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.Files_Schemes_Discoveries")]
	public partial class Files_Schemes_Discovery : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _FileID;
		
		private int _Scheme_DiscoveryID;
		
		private EntityRef<Schemes_Discovery> _Schemes_Discovery;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnFileIDChanging(long value);
    partial void OnFileIDChanged();
    partial void OnScheme_DiscoveryIDChanging(int value);
    partial void OnScheme_DiscoveryIDChanged();
    #endregion
		
		public Files_Schemes_Discovery()
		{
			this._Schemes_Discovery = default(EntityRef<Schemes_Discovery>);
			OnCreated();
		}
		
		[Column(Storage="_FileID", DbType="BigInt NOT NULL", IsPrimaryKey=true)]
		public long FileID
		{
			get
			{
				return this._FileID;
			}
			set
			{
				if ((this._FileID != value))
				{
					this.OnFileIDChanging(value);
					this.SendPropertyChanging();
					this._FileID = value;
					this.SendPropertyChanged("FileID");
					this.OnFileIDChanged();
				}
			}
		}
		
		[Column(Storage="_Scheme_DiscoveryID", DbType="Int NOT NULL")]
		public int Scheme_DiscoveryID
		{
			get
			{
				return this._Scheme_DiscoveryID;
			}
			set
			{
				if ((this._Scheme_DiscoveryID != value))
				{
					if (this._Schemes_Discovery.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnScheme_DiscoveryIDChanging(value);
					this.SendPropertyChanging();
					this._Scheme_DiscoveryID = value;
					this.SendPropertyChanged("Scheme_DiscoveryID");
					this.OnScheme_DiscoveryIDChanged();
				}
			}
		}
		
		[Association(Name="Schemes_Discovery_Files_Schemes_Discovery", Storage="_Schemes_Discovery", ThisKey="Scheme_DiscoveryID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Schemes_Discovery Schemes_Discovery
		{
			get
			{
				return this._Schemes_Discovery.Entity;
			}
			set
			{
				Schemes_Discovery previousValue = this._Schemes_Discovery.Entity;
				if (((previousValue != value) 
							|| (this._Schemes_Discovery.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Schemes_Discovery.Entity = null;
						previousValue.Files_Schemes_Discoveries.Remove(this);
					}
					this._Schemes_Discovery.Entity = value;
					if ((value != null))
					{
						value.Files_Schemes_Discoveries.Add(this);
						this._Scheme_DiscoveryID = value.ID;
					}
					else
					{
						this._Scheme_DiscoveryID = default(int);
					}
					this.SendPropertyChanged("Schemes_Discovery");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.Exceptions_Hosts_Discoveries")]
	public partial class Exceptions_Hosts_Discovery : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ExceptionID;
		
		private int _Host_DiscoveryID1;
		
		private int _Host_DiscoveryID2;
		
		private EntityRef<Hosts_Discovery> _Hosts_Discovery;
		
		private EntityRef<Hosts_Discovery> _Hosts_Discovery1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnExceptionIDChanging(long value);
    partial void OnExceptionIDChanged();
    partial void OnHost_DiscoveryID1Changing(int value);
    partial void OnHost_DiscoveryID1Changed();
    partial void OnHost_DiscoveryID2Changing(int value);
    partial void OnHost_DiscoveryID2Changed();
    #endregion
		
		public Exceptions_Hosts_Discovery()
		{
			this._Hosts_Discovery = default(EntityRef<Hosts_Discovery>);
			this._Hosts_Discovery1 = default(EntityRef<Hosts_Discovery>);
			OnCreated();
		}
		
		[Column(Storage="_ExceptionID", DbType="BigInt NOT NULL", IsPrimaryKey=true)]
		public long ExceptionID
		{
			get
			{
				return this._ExceptionID;
			}
			set
			{
				if ((this._ExceptionID != value))
				{
					this.OnExceptionIDChanging(value);
					this.SendPropertyChanging();
					this._ExceptionID = value;
					this.SendPropertyChanged("ExceptionID");
					this.OnExceptionIDChanged();
				}
			}
		}
		
		[Column(Storage="_Host_DiscoveryID1", DbType="Int NOT NULL")]
		public int Host_DiscoveryID1
		{
			get
			{
				return this._Host_DiscoveryID1;
			}
			set
			{
				if ((this._Host_DiscoveryID1 != value))
				{
					if (this._Hosts_Discovery.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnHost_DiscoveryID1Changing(value);
					this.SendPropertyChanging();
					this._Host_DiscoveryID1 = value;
					this.SendPropertyChanged("Host_DiscoveryID1");
					this.OnHost_DiscoveryID1Changed();
				}
			}
		}
		
		[Column(Storage="_Host_DiscoveryID2", DbType="Int NOT NULL")]
		public int Host_DiscoveryID2
		{
			get
			{
				return this._Host_DiscoveryID2;
			}
			set
			{
				if ((this._Host_DiscoveryID2 != value))
				{
					if (this._Hosts_Discovery1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnHost_DiscoveryID2Changing(value);
					this.SendPropertyChanging();
					this._Host_DiscoveryID2 = value;
					this.SendPropertyChanged("Host_DiscoveryID2");
					this.OnHost_DiscoveryID2Changed();
				}
			}
		}
		
		[Association(Name="Hosts_Discovery_Exceptions_Hosts_Discovery", Storage="_Hosts_Discovery", ThisKey="Host_DiscoveryID1", OtherKey="ID", IsForeignKey=true)]
		public Hosts_Discovery Hosts_Discovery
		{
			get
			{
				return this._Hosts_Discovery.Entity;
			}
			set
			{
				Hosts_Discovery previousValue = this._Hosts_Discovery.Entity;
				if (((previousValue != value) 
							|| (this._Hosts_Discovery.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Hosts_Discovery.Entity = null;
						previousValue.Exceptions_Hosts_Discoveries.Remove(this);
					}
					this._Hosts_Discovery.Entity = value;
					if ((value != null))
					{
						value.Exceptions_Hosts_Discoveries.Add(this);
						this._Host_DiscoveryID1 = value.ID;
					}
					else
					{
						this._Host_DiscoveryID1 = default(int);
					}
					this.SendPropertyChanged("Hosts_Discovery");
				}
			}
		}
		
		[Association(Name="Hosts_Discovery_Exceptions_Hosts_Discovery1", Storage="_Hosts_Discovery1", ThisKey="Host_DiscoveryID2", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Hosts_Discovery Hosts_Discovery1
		{
			get
			{
				return this._Hosts_Discovery1.Entity;
			}
			set
			{
				Hosts_Discovery previousValue = this._Hosts_Discovery1.Entity;
				if (((previousValue != value) 
							|| (this._Hosts_Discovery1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Hosts_Discovery1.Entity = null;
						previousValue.Exceptions_Hosts_Discoveries1.Remove(this);
					}
					this._Hosts_Discovery1.Entity = value;
					if ((value != null))
					{
						value.Exceptions_Hosts_Discoveries1.Add(this);
						this._Host_DiscoveryID2 = value.ID;
					}
					else
					{
						this._Host_DiscoveryID2 = default(int);
					}
					this.SendPropertyChanged("Hosts_Discovery1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.Exceptions_Schemes_Discoveries")]
	public partial class Exceptions_Schemes_Discovery : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ExceptionID;
		
		private int _Scheme_DiscoveryID1;
		
		private int _Scheme_DiscoveryID2;
		
		private EntityRef<Schemes_Discovery> _Schemes_Discovery;
		
		private EntityRef<Schemes_Discovery> _Schemes_Discovery1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnExceptionIDChanging(long value);
    partial void OnExceptionIDChanged();
    partial void OnScheme_DiscoveryID1Changing(int value);
    partial void OnScheme_DiscoveryID1Changed();
    partial void OnScheme_DiscoveryID2Changing(int value);
    partial void OnScheme_DiscoveryID2Changed();
    #endregion
		
		public Exceptions_Schemes_Discovery()
		{
			this._Schemes_Discovery = default(EntityRef<Schemes_Discovery>);
			this._Schemes_Discovery1 = default(EntityRef<Schemes_Discovery>);
			OnCreated();
		}
		
		[Column(Storage="_ExceptionID", DbType="BigInt NOT NULL", IsPrimaryKey=true)]
		public long ExceptionID
		{
			get
			{
				return this._ExceptionID;
			}
			set
			{
				if ((this._ExceptionID != value))
				{
					this.OnExceptionIDChanging(value);
					this.SendPropertyChanging();
					this._ExceptionID = value;
					this.SendPropertyChanged("ExceptionID");
					this.OnExceptionIDChanged();
				}
			}
		}
		
		[Column(Storage="_Scheme_DiscoveryID1", DbType="Int NOT NULL")]
		public int Scheme_DiscoveryID1
		{
			get
			{
				return this._Scheme_DiscoveryID1;
			}
			set
			{
				if ((this._Scheme_DiscoveryID1 != value))
				{
					if (this._Schemes_Discovery.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnScheme_DiscoveryID1Changing(value);
					this.SendPropertyChanging();
					this._Scheme_DiscoveryID1 = value;
					this.SendPropertyChanged("Scheme_DiscoveryID1");
					this.OnScheme_DiscoveryID1Changed();
				}
			}
		}
		
		[Column(Storage="_Scheme_DiscoveryID2", DbType="Int NOT NULL")]
		public int Scheme_DiscoveryID2
		{
			get
			{
				return this._Scheme_DiscoveryID2;
			}
			set
			{
				if ((this._Scheme_DiscoveryID2 != value))
				{
					if (this._Schemes_Discovery1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnScheme_DiscoveryID2Changing(value);
					this.SendPropertyChanging();
					this._Scheme_DiscoveryID2 = value;
					this.SendPropertyChanged("Scheme_DiscoveryID2");
					this.OnScheme_DiscoveryID2Changed();
				}
			}
		}
		
		[Association(Name="Schemes_Discovery_Exceptions_Schemes_Discovery", Storage="_Schemes_Discovery", ThisKey="Scheme_DiscoveryID1", OtherKey="ID", IsForeignKey=true)]
		public Schemes_Discovery Schemes_Discovery
		{
			get
			{
				return this._Schemes_Discovery.Entity;
			}
			set
			{
				Schemes_Discovery previousValue = this._Schemes_Discovery.Entity;
				if (((previousValue != value) 
							|| (this._Schemes_Discovery.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Schemes_Discovery.Entity = null;
						previousValue.Exceptions_Schemes_Discoveries.Remove(this);
					}
					this._Schemes_Discovery.Entity = value;
					if ((value != null))
					{
						value.Exceptions_Schemes_Discoveries.Add(this);
						this._Scheme_DiscoveryID1 = value.ID;
					}
					else
					{
						this._Scheme_DiscoveryID1 = default(int);
					}
					this.SendPropertyChanged("Schemes_Discovery");
				}
			}
		}
		
		[Association(Name="Schemes_Discovery_Exceptions_Schemes_Discovery1", Storage="_Schemes_Discovery1", ThisKey="Scheme_DiscoveryID2", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Schemes_Discovery Schemes_Discovery1
		{
			get
			{
				return this._Schemes_Discovery1.Entity;
			}
			set
			{
				Schemes_Discovery previousValue = this._Schemes_Discovery1.Entity;
				if (((previousValue != value) 
							|| (this._Schemes_Discovery1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Schemes_Discovery1.Entity = null;
						previousValue.Exceptions_Schemes_Discoveries1.Remove(this);
					}
					this._Schemes_Discovery1.Entity = value;
					if ((value != null))
					{
						value.Exceptions_Schemes_Discoveries1.Add(this);
						this._Scheme_DiscoveryID2 = value.ID;
					}
					else
					{
						this._Scheme_DiscoveryID2 = default(int);
					}
					this.SendPropertyChanged("Schemes_Discovery1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.EmailAddresses_Schemes_Discoveries")]
	public partial class EmailAddresses_Schemes_Discovery : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _EmailAddressID;
		
		private int _Scheme_DiscoveryID;
		
		private EntityRef<Schemes_Discovery> _Schemes_Discovery;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnEmailAddressIDChanging(long value);
    partial void OnEmailAddressIDChanged();
    partial void OnScheme_DiscoveryIDChanging(int value);
    partial void OnScheme_DiscoveryIDChanged();
    #endregion
		
		public EmailAddresses_Schemes_Discovery()
		{
			this._Schemes_Discovery = default(EntityRef<Schemes_Discovery>);
			OnCreated();
		}
		
		[Column(Storage="_EmailAddressID", DbType="BigInt NOT NULL", IsPrimaryKey=true)]
		public long EmailAddressID
		{
			get
			{
				return this._EmailAddressID;
			}
			set
			{
				if ((this._EmailAddressID != value))
				{
					this.OnEmailAddressIDChanging(value);
					this.SendPropertyChanging();
					this._EmailAddressID = value;
					this.SendPropertyChanged("EmailAddressID");
					this.OnEmailAddressIDChanged();
				}
			}
		}
		
		[Column(Storage="_Scheme_DiscoveryID", DbType="Int NOT NULL")]
		public int Scheme_DiscoveryID
		{
			get
			{
				return this._Scheme_DiscoveryID;
			}
			set
			{
				if ((this._Scheme_DiscoveryID != value))
				{
					if (this._Schemes_Discovery.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnScheme_DiscoveryIDChanging(value);
					this.SendPropertyChanging();
					this._Scheme_DiscoveryID = value;
					this.SendPropertyChanged("Scheme_DiscoveryID");
					this.OnScheme_DiscoveryIDChanged();
				}
			}
		}
		
		[Association(Name="Schemes_Discovery_EmailAddresses_Schemes_Discovery", Storage="_Schemes_Discovery", ThisKey="Scheme_DiscoveryID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Schemes_Discovery Schemes_Discovery
		{
			get
			{
				return this._Schemes_Discovery.Entity;
			}
			set
			{
				Schemes_Discovery previousValue = this._Schemes_Discovery.Entity;
				if (((previousValue != value) 
							|| (this._Schemes_Discovery.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Schemes_Discovery.Entity = null;
						previousValue.EmailAddresses_Schemes_Discoveries.Remove(this);
					}
					this._Schemes_Discovery.Entity = value;
					if ((value != null))
					{
						value.EmailAddresses_Schemes_Discoveries.Add(this);
						this._Scheme_DiscoveryID = value.ID;
					}
					else
					{
						this._Scheme_DiscoveryID = default(int);
					}
					this.SendPropertyChanged("Schemes_Discovery");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.EmailAddresses_Hosts_Discoveries")]
	public partial class EmailAddresses_Hosts_Discovery : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _EmailAddressID;
		
		private int _Host_DiscoveryID;
		
		private EntityRef<Hosts_Discovery> _Hosts_Discovery;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnEmailAddressIDChanging(long value);
    partial void OnEmailAddressIDChanged();
    partial void OnHost_DiscoveryIDChanging(int value);
    partial void OnHost_DiscoveryIDChanged();
    #endregion
		
		public EmailAddresses_Hosts_Discovery()
		{
			this._Hosts_Discovery = default(EntityRef<Hosts_Discovery>);
			OnCreated();
		}
		
		[Column(Storage="_EmailAddressID", DbType="BigInt NOT NULL", IsPrimaryKey=true)]
		public long EmailAddressID
		{
			get
			{
				return this._EmailAddressID;
			}
			set
			{
				if ((this._EmailAddressID != value))
				{
					this.OnEmailAddressIDChanging(value);
					this.SendPropertyChanging();
					this._EmailAddressID = value;
					this.SendPropertyChanged("EmailAddressID");
					this.OnEmailAddressIDChanged();
				}
			}
		}
		
		[Column(Storage="_Host_DiscoveryID", DbType="Int NOT NULL")]
		public int Host_DiscoveryID
		{
			get
			{
				return this._Host_DiscoveryID;
			}
			set
			{
				if ((this._Host_DiscoveryID != value))
				{
					if (this._Hosts_Discovery.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnHost_DiscoveryIDChanging(value);
					this.SendPropertyChanging();
					this._Host_DiscoveryID = value;
					this.SendPropertyChanged("Host_DiscoveryID");
					this.OnHost_DiscoveryIDChanged();
				}
			}
		}
		
		[Association(Name="Hosts_Discovery_EmailAddresses_Hosts_Discovery", Storage="_Hosts_Discovery", ThisKey="Host_DiscoveryID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Hosts_Discovery Hosts_Discovery
		{
			get
			{
				return this._Hosts_Discovery.Entity;
			}
			set
			{
				Hosts_Discovery previousValue = this._Hosts_Discovery.Entity;
				if (((previousValue != value) 
							|| (this._Hosts_Discovery.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Hosts_Discovery.Entity = null;
						previousValue.EmailAddresses_Hosts_Discoveries.Remove(this);
					}
					this._Hosts_Discovery.Entity = value;
					if ((value != null))
					{
						value.EmailAddresses_Hosts_Discoveries.Add(this);
						this._Host_DiscoveryID = value.ID;
					}
					else
					{
						this._Host_DiscoveryID = default(int);
					}
					this.SendPropertyChanged("Hosts_Discovery");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.DisallowedAbsoluteUris_Hosts_Discoveries")]
	public partial class DisallowedAbsoluteUris_Hosts_Discovery : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _DisallowedAbsoluteUriID;
		
		private int _Host_DiscoveryID;
		
		private EntityRef<Hosts_Discovery> _Hosts_Discovery;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnDisallowedAbsoluteUriIDChanging(long value);
    partial void OnDisallowedAbsoluteUriIDChanged();
    partial void OnHost_DiscoveryIDChanging(int value);
    partial void OnHost_DiscoveryIDChanged();
    #endregion
		
		public DisallowedAbsoluteUris_Hosts_Discovery()
		{
			this._Hosts_Discovery = default(EntityRef<Hosts_Discovery>);
			OnCreated();
		}
		
		[Column(Storage="_DisallowedAbsoluteUriID", DbType="BigInt NOT NULL", IsPrimaryKey=true)]
		public long DisallowedAbsoluteUriID
		{
			get
			{
				return this._DisallowedAbsoluteUriID;
			}
			set
			{
				if ((this._DisallowedAbsoluteUriID != value))
				{
					this.OnDisallowedAbsoluteUriIDChanging(value);
					this.SendPropertyChanging();
					this._DisallowedAbsoluteUriID = value;
					this.SendPropertyChanged("DisallowedAbsoluteUriID");
					this.OnDisallowedAbsoluteUriIDChanged();
				}
			}
		}
		
		[Column(Storage="_Host_DiscoveryID", DbType="Int NOT NULL")]
		public int Host_DiscoveryID
		{
			get
			{
				return this._Host_DiscoveryID;
			}
			set
			{
				if ((this._Host_DiscoveryID != value))
				{
					if (this._Hosts_Discovery.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnHost_DiscoveryIDChanging(value);
					this.SendPropertyChanging();
					this._Host_DiscoveryID = value;
					this.SendPropertyChanged("Host_DiscoveryID");
					this.OnHost_DiscoveryIDChanged();
				}
			}
		}
		
		[Association(Name="Hosts_Discovery_DisallowedAbsoluteUris_Hosts_Discovery", Storage="_Hosts_Discovery", ThisKey="Host_DiscoveryID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Hosts_Discovery Hosts_Discovery
		{
			get
			{
				return this._Hosts_Discovery.Entity;
			}
			set
			{
				Hosts_Discovery previousValue = this._Hosts_Discovery.Entity;
				if (((previousValue != value) 
							|| (this._Hosts_Discovery.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Hosts_Discovery.Entity = null;
						previousValue.DisallowedAbsoluteUris_Hosts_Discoveries.Remove(this);
					}
					this._Hosts_Discovery.Entity = value;
					if ((value != null))
					{
						value.DisallowedAbsoluteUris_Hosts_Discoveries.Add(this);
						this._Host_DiscoveryID = value.ID;
					}
					else
					{
						this._Host_DiscoveryID = default(int);
					}
					this.SendPropertyChanged("Hosts_Discovery");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.DisallowedAbsoluteUris_Schemes_Discoveries")]
	public partial class DisallowedAbsoluteUris_Schemes_Discovery : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _DisallowedAbsoluteUriID;
		
		private int _Scheme_DiscoveryID;
		
		private EntityRef<Schemes_Discovery> _Schemes_Discovery;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnDisallowedAbsoluteUriIDChanging(long value);
    partial void OnDisallowedAbsoluteUriIDChanged();
    partial void OnScheme_DiscoveryIDChanging(int value);
    partial void OnScheme_DiscoveryIDChanged();
    #endregion
		
		public DisallowedAbsoluteUris_Schemes_Discovery()
		{
			this._Schemes_Discovery = default(EntityRef<Schemes_Discovery>);
			OnCreated();
		}
		
		[Column(Storage="_DisallowedAbsoluteUriID", DbType="BigInt NOT NULL", IsPrimaryKey=true)]
		public long DisallowedAbsoluteUriID
		{
			get
			{
				return this._DisallowedAbsoluteUriID;
			}
			set
			{
				if ((this._DisallowedAbsoluteUriID != value))
				{
					this.OnDisallowedAbsoluteUriIDChanging(value);
					this.SendPropertyChanging();
					this._DisallowedAbsoluteUriID = value;
					this.SendPropertyChanged("DisallowedAbsoluteUriID");
					this.OnDisallowedAbsoluteUriIDChanged();
				}
			}
		}
		
		[Column(Storage="_Scheme_DiscoveryID", DbType="Int NOT NULL")]
		public int Scheme_DiscoveryID
		{
			get
			{
				return this._Scheme_DiscoveryID;
			}
			set
			{
				if ((this._Scheme_DiscoveryID != value))
				{
					if (this._Schemes_Discovery.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnScheme_DiscoveryIDChanging(value);
					this.SendPropertyChanging();
					this._Scheme_DiscoveryID = value;
					this.SendPropertyChanged("Scheme_DiscoveryID");
					this.OnScheme_DiscoveryIDChanged();
				}
			}
		}
		
		[Association(Name="Schemes_Discovery_DisallowedAbsoluteUris_Schemes_Discovery", Storage="_Schemes_Discovery", ThisKey="Scheme_DiscoveryID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Schemes_Discovery Schemes_Discovery
		{
			get
			{
				return this._Schemes_Discovery.Entity;
			}
			set
			{
				Schemes_Discovery previousValue = this._Schemes_Discovery.Entity;
				if (((previousValue != value) 
							|| (this._Schemes_Discovery.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Schemes_Discovery.Entity = null;
						previousValue.DisallowedAbsoluteUris_Schemes_Discoveries.Remove(this);
					}
					this._Schemes_Discovery.Entity = value;
					if ((value != null))
					{
						value.DisallowedAbsoluteUris_Schemes_Discoveries.Add(this);
						this._Scheme_DiscoveryID = value.ID;
					}
					else
					{
						this._Scheme_DiscoveryID = default(int);
					}
					this.SendPropertyChanged("Schemes_Discovery");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.HyperLinks_Hosts_Discoveries")]
	public partial class HyperLinks_Hosts_Discovery : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _HyperLinkID;
		
		private int _Host_DiscoveryID;
		
		private EntityRef<Hosts_Discovery> _Hosts_Discovery;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnHyperLinkIDChanging(long value);
    partial void OnHyperLinkIDChanged();
    partial void OnHost_DiscoveryIDChanging(int value);
    partial void OnHost_DiscoveryIDChanged();
    #endregion
		
		public HyperLinks_Hosts_Discovery()
		{
			this._Hosts_Discovery = default(EntityRef<Hosts_Discovery>);
			OnCreated();
		}
		
		[Column(Storage="_HyperLinkID", DbType="BigInt NOT NULL", IsPrimaryKey=true)]
		public long HyperLinkID
		{
			get
			{
				return this._HyperLinkID;
			}
			set
			{
				if ((this._HyperLinkID != value))
				{
					this.OnHyperLinkIDChanging(value);
					this.SendPropertyChanging();
					this._HyperLinkID = value;
					this.SendPropertyChanged("HyperLinkID");
					this.OnHyperLinkIDChanged();
				}
			}
		}
		
		[Column(Storage="_Host_DiscoveryID", DbType="Int NOT NULL")]
		public int Host_DiscoveryID
		{
			get
			{
				return this._Host_DiscoveryID;
			}
			set
			{
				if ((this._Host_DiscoveryID != value))
				{
					if (this._Hosts_Discovery.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnHost_DiscoveryIDChanging(value);
					this.SendPropertyChanging();
					this._Host_DiscoveryID = value;
					this.SendPropertyChanged("Host_DiscoveryID");
					this.OnHost_DiscoveryIDChanged();
				}
			}
		}
		
		[Association(Name="Hosts_Discovery_HyperLinks_Hosts_Discovery", Storage="_Hosts_Discovery", ThisKey="Host_DiscoveryID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Hosts_Discovery Hosts_Discovery
		{
			get
			{
				return this._Hosts_Discovery.Entity;
			}
			set
			{
				Hosts_Discovery previousValue = this._Hosts_Discovery.Entity;
				if (((previousValue != value) 
							|| (this._Hosts_Discovery.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Hosts_Discovery.Entity = null;
						previousValue.HyperLinks_Hosts_Discoveries.Remove(this);
					}
					this._Hosts_Discovery.Entity = value;
					if ((value != null))
					{
						value.HyperLinks_Hosts_Discoveries.Add(this);
						this._Host_DiscoveryID = value.ID;
					}
					else
					{
						this._Host_DiscoveryID = default(int);
					}
					this.SendPropertyChanged("Hosts_Discovery");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.HyperLinks_Schemes_Discoveries")]
	public partial class HyperLinks_Schemes_Discovery : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _HyperLinkID;
		
		private int _Scheme_DiscoveryID;
		
		private EntityRef<Schemes_Discovery> _Schemes_Discovery;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnHyperLinkIDChanging(long value);
    partial void OnHyperLinkIDChanged();
    partial void OnScheme_DiscoveryIDChanging(int value);
    partial void OnScheme_DiscoveryIDChanged();
    #endregion
		
		public HyperLinks_Schemes_Discovery()
		{
			this._Schemes_Discovery = default(EntityRef<Schemes_Discovery>);
			OnCreated();
		}
		
		[Column(Storage="_HyperLinkID", DbType="BigInt NOT NULL", IsPrimaryKey=true)]
		public long HyperLinkID
		{
			get
			{
				return this._HyperLinkID;
			}
			set
			{
				if ((this._HyperLinkID != value))
				{
					this.OnHyperLinkIDChanging(value);
					this.SendPropertyChanging();
					this._HyperLinkID = value;
					this.SendPropertyChanged("HyperLinkID");
					this.OnHyperLinkIDChanged();
				}
			}
		}
		
		[Column(Storage="_Scheme_DiscoveryID", DbType="Int NOT NULL")]
		public int Scheme_DiscoveryID
		{
			get
			{
				return this._Scheme_DiscoveryID;
			}
			set
			{
				if ((this._Scheme_DiscoveryID != value))
				{
					if (this._Schemes_Discovery.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnScheme_DiscoveryIDChanging(value);
					this.SendPropertyChanging();
					this._Scheme_DiscoveryID = value;
					this.SendPropertyChanged("Scheme_DiscoveryID");
					this.OnScheme_DiscoveryIDChanged();
				}
			}
		}
		
		[Association(Name="Schemes_Discovery_HyperLinks_Schemes_Discovery", Storage="_Schemes_Discovery", ThisKey="Scheme_DiscoveryID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Schemes_Discovery Schemes_Discovery
		{
			get
			{
				return this._Schemes_Discovery.Entity;
			}
			set
			{
				Schemes_Discovery previousValue = this._Schemes_Discovery.Entity;
				if (((previousValue != value) 
							|| (this._Schemes_Discovery.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Schemes_Discovery.Entity = null;
						previousValue.HyperLinks_Schemes_Discoveries.Remove(this);
					}
					this._Schemes_Discovery.Entity = value;
					if ((value != null))
					{
						value.HyperLinks_Schemes_Discoveries.Add(this);
						this._Scheme_DiscoveryID = value.ID;
					}
					else
					{
						this._Scheme_DiscoveryID = default(int);
					}
					this.SendPropertyChanged("Schemes_Discovery");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.Hosts_Discoveries")]
	public partial class Hosts_Discovery : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Nullable<System.DateTime> _InitiallyDiscovered;
		
		private System.Nullable<System.DateTime> _LastDiscovered;
		
		private int _ID;
		
		private byte _DiscoveryTypeID;
		
		private int _HostID;
		
		private EntitySet<Files_Hosts_Discovery> _Files_Hosts_Discoveries;
		
		private EntitySet<Exceptions_Hosts_Discovery> _Exceptions_Hosts_Discoveries;
		
		private EntitySet<Exceptions_Hosts_Discovery> _Exceptions_Hosts_Discoveries1;
		
		private EntitySet<EmailAddresses_Hosts_Discovery> _EmailAddresses_Hosts_Discoveries;
		
		private EntitySet<DisallowedAbsoluteUris_Hosts_Discovery> _DisallowedAbsoluteUris_Hosts_Discoveries;
		
		private EntitySet<HyperLinks_Hosts_Discovery> _HyperLinks_Hosts_Discoveries;
		
		private EntitySet<Images_Hosts_Discovery> _Images_Hosts_Discoveries;
		
		private EntitySet<WebPages_Hosts_Discovery> _WebPages_Hosts_Discoveries;
		
		private EntityRef<Host> _Host;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnInitiallyDiscoveredChanging(System.Nullable<System.DateTime> value);
    partial void OnInitiallyDiscoveredChanged();
    partial void OnLastDiscoveredChanging(System.Nullable<System.DateTime> value);
    partial void OnLastDiscoveredChanged();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnDiscoveryTypeIDChanging(byte value);
    partial void OnDiscoveryTypeIDChanged();
    partial void OnHostIDChanging(int value);
    partial void OnHostIDChanged();
    #endregion
		
		public Hosts_Discovery()
		{
			this._Files_Hosts_Discoveries = new EntitySet<Files_Hosts_Discovery>(new Action<Files_Hosts_Discovery>(this.attach_Files_Hosts_Discoveries), new Action<Files_Hosts_Discovery>(this.detach_Files_Hosts_Discoveries));
			this._Exceptions_Hosts_Discoveries = new EntitySet<Exceptions_Hosts_Discovery>(new Action<Exceptions_Hosts_Discovery>(this.attach_Exceptions_Hosts_Discoveries), new Action<Exceptions_Hosts_Discovery>(this.detach_Exceptions_Hosts_Discoveries));
			this._Exceptions_Hosts_Discoveries1 = new EntitySet<Exceptions_Hosts_Discovery>(new Action<Exceptions_Hosts_Discovery>(this.attach_Exceptions_Hosts_Discoveries1), new Action<Exceptions_Hosts_Discovery>(this.detach_Exceptions_Hosts_Discoveries1));
			this._EmailAddresses_Hosts_Discoveries = new EntitySet<EmailAddresses_Hosts_Discovery>(new Action<EmailAddresses_Hosts_Discovery>(this.attach_EmailAddresses_Hosts_Discoveries), new Action<EmailAddresses_Hosts_Discovery>(this.detach_EmailAddresses_Hosts_Discoveries));
			this._DisallowedAbsoluteUris_Hosts_Discoveries = new EntitySet<DisallowedAbsoluteUris_Hosts_Discovery>(new Action<DisallowedAbsoluteUris_Hosts_Discovery>(this.attach_DisallowedAbsoluteUris_Hosts_Discoveries), new Action<DisallowedAbsoluteUris_Hosts_Discovery>(this.detach_DisallowedAbsoluteUris_Hosts_Discoveries));
			this._HyperLinks_Hosts_Discoveries = new EntitySet<HyperLinks_Hosts_Discovery>(new Action<HyperLinks_Hosts_Discovery>(this.attach_HyperLinks_Hosts_Discoveries), new Action<HyperLinks_Hosts_Discovery>(this.detach_HyperLinks_Hosts_Discoveries));
			this._Images_Hosts_Discoveries = new EntitySet<Images_Hosts_Discovery>(new Action<Images_Hosts_Discovery>(this.attach_Images_Hosts_Discoveries), new Action<Images_Hosts_Discovery>(this.detach_Images_Hosts_Discoveries));
			this._WebPages_Hosts_Discoveries = new EntitySet<WebPages_Hosts_Discovery>(new Action<WebPages_Hosts_Discovery>(this.attach_WebPages_Hosts_Discoveries), new Action<WebPages_Hosts_Discovery>(this.detach_WebPages_Hosts_Discoveries));
			this._Host = default(EntityRef<Host>);
			OnCreated();
		}
		
		[Column(Storage="_InitiallyDiscovered", DbType="DateTime")]
		public System.Nullable<System.DateTime> InitiallyDiscovered
		{
			get
			{
				return this._InitiallyDiscovered;
			}
			set
			{
				if ((this._InitiallyDiscovered != value))
				{
					this.OnInitiallyDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._InitiallyDiscovered = value;
					this.SendPropertyChanged("InitiallyDiscovered");
					this.OnInitiallyDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_LastDiscovered", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastDiscovered
		{
			get
			{
				return this._LastDiscovered;
			}
			set
			{
				if ((this._LastDiscovered != value))
				{
					this.OnLastDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._LastDiscovered = value;
					this.SendPropertyChanged("LastDiscovered");
					this.OnLastDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[Column(Storage="_DiscoveryTypeID", DbType="TinyInt NOT NULL")]
		public byte DiscoveryTypeID
		{
			get
			{
				return this._DiscoveryTypeID;
			}
			set
			{
				if ((this._DiscoveryTypeID != value))
				{
					this.OnDiscoveryTypeIDChanging(value);
					this.SendPropertyChanging();
					this._DiscoveryTypeID = value;
					this.SendPropertyChanged("DiscoveryTypeID");
					this.OnDiscoveryTypeIDChanged();
				}
			}
		}
		
		[Column(Storage="_HostID", DbType="Int NOT NULL")]
		public int HostID
		{
			get
			{
				return this._HostID;
			}
			set
			{
				if ((this._HostID != value))
				{
					if (this._Host.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnHostIDChanging(value);
					this.SendPropertyChanging();
					this._HostID = value;
					this.SendPropertyChanged("HostID");
					this.OnHostIDChanged();
				}
			}
		}
		
		[Association(Name="Hosts_Discovery_Files_Hosts_Discovery", Storage="_Files_Hosts_Discoveries", ThisKey="ID", OtherKey="Host_DiscoveryID")]
		public EntitySet<Files_Hosts_Discovery> Files_Hosts_Discoveries
		{
			get
			{
				return this._Files_Hosts_Discoveries;
			}
			set
			{
				this._Files_Hosts_Discoveries.Assign(value);
			}
		}
		
		[Association(Name="Hosts_Discovery_Exceptions_Hosts_Discovery", Storage="_Exceptions_Hosts_Discoveries", ThisKey="ID", OtherKey="Host_DiscoveryID1")]
		public EntitySet<Exceptions_Hosts_Discovery> Exceptions_Hosts_Discoveries
		{
			get
			{
				return this._Exceptions_Hosts_Discoveries;
			}
			set
			{
				this._Exceptions_Hosts_Discoveries.Assign(value);
			}
		}
		
		[Association(Name="Hosts_Discovery_Exceptions_Hosts_Discovery1", Storage="_Exceptions_Hosts_Discoveries1", ThisKey="ID", OtherKey="Host_DiscoveryID2")]
		public EntitySet<Exceptions_Hosts_Discovery> Exceptions_Hosts_Discoveries1
		{
			get
			{
				return this._Exceptions_Hosts_Discoveries1;
			}
			set
			{
				this._Exceptions_Hosts_Discoveries1.Assign(value);
			}
		}
		
		[Association(Name="Hosts_Discovery_EmailAddresses_Hosts_Discovery", Storage="_EmailAddresses_Hosts_Discoveries", ThisKey="ID", OtherKey="Host_DiscoveryID")]
		public EntitySet<EmailAddresses_Hosts_Discovery> EmailAddresses_Hosts_Discoveries
		{
			get
			{
				return this._EmailAddresses_Hosts_Discoveries;
			}
			set
			{
				this._EmailAddresses_Hosts_Discoveries.Assign(value);
			}
		}
		
		[Association(Name="Hosts_Discovery_DisallowedAbsoluteUris_Hosts_Discovery", Storage="_DisallowedAbsoluteUris_Hosts_Discoveries", ThisKey="ID", OtherKey="Host_DiscoveryID")]
		public EntitySet<DisallowedAbsoluteUris_Hosts_Discovery> DisallowedAbsoluteUris_Hosts_Discoveries
		{
			get
			{
				return this._DisallowedAbsoluteUris_Hosts_Discoveries;
			}
			set
			{
				this._DisallowedAbsoluteUris_Hosts_Discoveries.Assign(value);
			}
		}
		
		[Association(Name="Hosts_Discovery_HyperLinks_Hosts_Discovery", Storage="_HyperLinks_Hosts_Discoveries", ThisKey="ID", OtherKey="Host_DiscoveryID")]
		public EntitySet<HyperLinks_Hosts_Discovery> HyperLinks_Hosts_Discoveries
		{
			get
			{
				return this._HyperLinks_Hosts_Discoveries;
			}
			set
			{
				this._HyperLinks_Hosts_Discoveries.Assign(value);
			}
		}
		
		[Association(Name="Hosts_Discovery_Images_Hosts_Discovery", Storage="_Images_Hosts_Discoveries", ThisKey="ID", OtherKey="Host_DiscoveryID")]
		public EntitySet<Images_Hosts_Discovery> Images_Hosts_Discoveries
		{
			get
			{
				return this._Images_Hosts_Discoveries;
			}
			set
			{
				this._Images_Hosts_Discoveries.Assign(value);
			}
		}
		
		[Association(Name="Hosts_Discovery_WebPages_Hosts_Discovery", Storage="_WebPages_Hosts_Discoveries", ThisKey="ID", OtherKey="Host_DiscoveryID")]
		public EntitySet<WebPages_Hosts_Discovery> WebPages_Hosts_Discoveries
		{
			get
			{
				return this._WebPages_Hosts_Discoveries;
			}
			set
			{
				this._WebPages_Hosts_Discoveries.Assign(value);
			}
		}
		
		[Association(Name="Host_Hosts_Discovery", Storage="_Host", ThisKey="HostID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Host Host
		{
			get
			{
				return this._Host.Entity;
			}
			set
			{
				Host previousValue = this._Host.Entity;
				if (((previousValue != value) 
							|| (this._Host.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Host.Entity = null;
						previousValue.Hosts_Discoveries.Remove(this);
					}
					this._Host.Entity = value;
					if ((value != null))
					{
						value.Hosts_Discoveries.Add(this);
						this._HostID = value.ID;
					}
					else
					{
						this._HostID = default(int);
					}
					this.SendPropertyChanged("Host");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Files_Hosts_Discoveries(Files_Hosts_Discovery entity)
		{
			this.SendPropertyChanging();
			entity.Hosts_Discovery = this;
		}
		
		private void detach_Files_Hosts_Discoveries(Files_Hosts_Discovery entity)
		{
			this.SendPropertyChanging();
			entity.Hosts_Discovery = null;
		}
		
		private void attach_Exceptions_Hosts_Discoveries(Exceptions_Hosts_Discovery entity)
		{
			this.SendPropertyChanging();
			entity.Hosts_Discovery = this;
		}
		
		private void detach_Exceptions_Hosts_Discoveries(Exceptions_Hosts_Discovery entity)
		{
			this.SendPropertyChanging();
			entity.Hosts_Discovery = null;
		}
		
		private void attach_Exceptions_Hosts_Discoveries1(Exceptions_Hosts_Discovery entity)
		{
			this.SendPropertyChanging();
			entity.Hosts_Discovery1 = this;
		}
		
		private void detach_Exceptions_Hosts_Discoveries1(Exceptions_Hosts_Discovery entity)
		{
			this.SendPropertyChanging();
			entity.Hosts_Discovery1 = null;
		}
		
		private void attach_EmailAddresses_Hosts_Discoveries(EmailAddresses_Hosts_Discovery entity)
		{
			this.SendPropertyChanging();
			entity.Hosts_Discovery = this;
		}
		
		private void detach_EmailAddresses_Hosts_Discoveries(EmailAddresses_Hosts_Discovery entity)
		{
			this.SendPropertyChanging();
			entity.Hosts_Discovery = null;
		}
		
		private void attach_DisallowedAbsoluteUris_Hosts_Discoveries(DisallowedAbsoluteUris_Hosts_Discovery entity)
		{
			this.SendPropertyChanging();
			entity.Hosts_Discovery = this;
		}
		
		private void detach_DisallowedAbsoluteUris_Hosts_Discoveries(DisallowedAbsoluteUris_Hosts_Discovery entity)
		{
			this.SendPropertyChanging();
			entity.Hosts_Discovery = null;
		}
		
		private void attach_HyperLinks_Hosts_Discoveries(HyperLinks_Hosts_Discovery entity)
		{
			this.SendPropertyChanging();
			entity.Hosts_Discovery = this;
		}
		
		private void detach_HyperLinks_Hosts_Discoveries(HyperLinks_Hosts_Discovery entity)
		{
			this.SendPropertyChanging();
			entity.Hosts_Discovery = null;
		}
		
		private void attach_Images_Hosts_Discoveries(Images_Hosts_Discovery entity)
		{
			this.SendPropertyChanging();
			entity.Hosts_Discovery = this;
		}
		
		private void detach_Images_Hosts_Discoveries(Images_Hosts_Discovery entity)
		{
			this.SendPropertyChanging();
			entity.Hosts_Discovery = null;
		}
		
		private void attach_WebPages_Hosts_Discoveries(WebPages_Hosts_Discovery entity)
		{
			this.SendPropertyChanging();
			entity.Hosts_Discovery = this;
		}
		
		private void detach_WebPages_Hosts_Discoveries(WebPages_Hosts_Discovery entity)
		{
			this.SendPropertyChanging();
			entity.Hosts_Discovery = null;
		}
	}
	
	[Table(Name="dbo.Hosts")]
	public partial class Host : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _DomainID;
		
		private string _Host1;
		
		private EntityRef<DisallowedAbsoluteUris_COUNT_BY_HOST> _DisallowedAbsoluteUris_COUNT_BY_HOST;
		
		private EntityRef<DisallowedAbsoluteUris_MOST_POPULAR_HOSTS_BY_ABSOLUTEURI> _DisallowedAbsoluteUris_MOST_POPULAR_HOSTS_BY_ABSOLUTEURI;
		
		private EntityRef<DisallowedAbsoluteUris_MOST_POPULAR_HOSTS_BY_DOMAIN> _DisallowedAbsoluteUris_MOST_POPULAR_HOSTS_BY_DOMAIN;
		
		private EntityRef<DisallowedAbsoluteUris_MOST_POPULAR_HOSTS_BY_EXTENSION> _DisallowedAbsoluteUris_MOST_POPULAR_HOSTS_BY_EXTENSION;
		
		private EntityRef<DisallowedAbsoluteUris_MOST_POPULAR_HOSTS_BY_HOST> _DisallowedAbsoluteUris_MOST_POPULAR_HOSTS_BY_HOST;
		
		private EntityRef<DisallowedAbsoluteUris_MOST_POPULAR_HOSTS_BY_SCHEME> _DisallowedAbsoluteUris_MOST_POPULAR_HOSTS_BY_SCHEME;
		
		private EntityRef<EmailAddresses_COUNT_BY_HOST> _EmailAddresses_COUNT_BY_HOST;
		
		private EntityRef<EmailAddresses_MOST_POPULAR_HOSTS_BY_ABSOLUTEURI> _EmailAddresses_MOST_POPULAR_HOSTS_BY_ABSOLUTEURI;
		
		private EntityRef<EmailAddresses_MOST_POPULAR_HOSTS_BY_DOMAIN> _EmailAddresses_MOST_POPULAR_HOSTS_BY_DOMAIN;
		
		private EntityRef<EmailAddresses_MOST_POPULAR_HOSTS_BY_EXTENSION> _EmailAddresses_MOST_POPULAR_HOSTS_BY_EXTENSION;
		
		private EntityRef<EmailAddresses_MOST_POPULAR_HOSTS_BY_HOST> _EmailAddresses_MOST_POPULAR_HOSTS_BY_HOST;
		
		private EntityRef<EmailAddresses_MOST_POPULAR_HOSTS_BY_SCHEME> _EmailAddresses_MOST_POPULAR_HOSTS_BY_SCHEME;
		
		private EntityRef<Exceptions_COUNT_BY_HOST1> _Exceptions_COUNT_BY_HOST1;
		
		private EntityRef<Exceptions_COUNT_BY_HOST2> _Exceptions_COUNT_BY_HOST2;
		
		private EntityRef<Files_COUNT_BY_HOST> _Files_COUNT_BY_HOST;
		
		private EntityRef<Files_MOST_POPULAR_HOSTS_BY_ABSOLUTEURI> _Files_MOST_POPULAR_HOSTS_BY_ABSOLUTEURI;
		
		private EntityRef<Files_MOST_POPULAR_HOSTS_BY_DOMAIN> _Files_MOST_POPULAR_HOSTS_BY_DOMAIN;
		
		private EntityRef<Files_MOST_POPULAR_HOSTS_BY_EXTENSION> _Files_MOST_POPULAR_HOSTS_BY_EXTENSION;
		
		private EntityRef<Files_MOST_POPULAR_HOSTS_BY_HOST> _Files_MOST_POPULAR_HOSTS_BY_HOST;
		
		private EntityRef<Files_MOST_POPULAR_HOSTS_BY_SCHEME> _Files_MOST_POPULAR_HOSTS_BY_SCHEME;
		
		private EntityRef<HyperLinks_COUNT_BY_HOST> _HyperLinks_COUNT_BY_HOST;
		
		private EntityRef<HyperLinks_MOST_POPULAR_HOSTS_BY_ABSOLUTEURI> _HyperLinks_MOST_POPULAR_HOSTS_BY_ABSOLUTEURI;
		
		private EntityRef<HyperLinks_MOST_POPULAR_HOSTS_BY_DOMAIN> _HyperLinks_MOST_POPULAR_HOSTS_BY_DOMAIN;
		
		private EntityRef<HyperLinks_MOST_POPULAR_HOSTS_BY_EXTENSION> _HyperLinks_MOST_POPULAR_HOSTS_BY_EXTENSION;
		
		private EntityRef<HyperLinks_MOST_POPULAR_HOSTS_BY_HOST> _HyperLinks_MOST_POPULAR_HOSTS_BY_HOST;
		
		private EntityRef<HyperLinks_MOST_POPULAR_HOSTS_BY_SCHEME> _HyperLinks_MOST_POPULAR_HOSTS_BY_SCHEME;
		
		private EntityRef<Images_COUNT_BY_HOST> _Images_COUNT_BY_HOST;
		
		private EntityRef<Images_MOST_POPULAR_HOSTS_BY_ABSOLUTEURI> _Images_MOST_POPULAR_HOSTS_BY_ABSOLUTEURI;
		
		private EntityRef<Images_MOST_POPULAR_HOSTS_BY_DOMAIN> _Images_MOST_POPULAR_HOSTS_BY_DOMAIN;
		
		private EntityRef<Images_MOST_POPULAR_HOSTS_BY_EXTENSION> _Images_MOST_POPULAR_HOSTS_BY_EXTENSION;
		
		private EntityRef<Images_MOST_POPULAR_HOSTS_BY_HOST> _Images_MOST_POPULAR_HOSTS_BY_HOST;
		
		private EntityRef<Images_MOST_POPULAR_HOSTS_BY_SCHEME> _Images_MOST_POPULAR_HOSTS_BY_SCHEME;
		
		private EntityRef<WebPages_COUNT_BY_HOST> _WebPages_COUNT_BY_HOST;
		
		private EntitySet<Hosts_Discovery> _Hosts_Discoveries;
		
		private EntityRef<Domain> _Domain;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnDomainIDChanging(int value);
    partial void OnDomainIDChanged();
    partial void OnHost1Changing(string value);
    partial void OnHost1Changed();
    #endregion
		
		public Host()
		{
			this._DisallowedAbsoluteUris_COUNT_BY_HOST = default(EntityRef<DisallowedAbsoluteUris_COUNT_BY_HOST>);
			this._DisallowedAbsoluteUris_MOST_POPULAR_HOSTS_BY_ABSOLUTEURI = default(EntityRef<DisallowedAbsoluteUris_MOST_POPULAR_HOSTS_BY_ABSOLUTEURI>);
			this._DisallowedAbsoluteUris_MOST_POPULAR_HOSTS_BY_DOMAIN = default(EntityRef<DisallowedAbsoluteUris_MOST_POPULAR_HOSTS_BY_DOMAIN>);
			this._DisallowedAbsoluteUris_MOST_POPULAR_HOSTS_BY_EXTENSION = default(EntityRef<DisallowedAbsoluteUris_MOST_POPULAR_HOSTS_BY_EXTENSION>);
			this._DisallowedAbsoluteUris_MOST_POPULAR_HOSTS_BY_HOST = default(EntityRef<DisallowedAbsoluteUris_MOST_POPULAR_HOSTS_BY_HOST>);
			this._DisallowedAbsoluteUris_MOST_POPULAR_HOSTS_BY_SCHEME = default(EntityRef<DisallowedAbsoluteUris_MOST_POPULAR_HOSTS_BY_SCHEME>);
			this._EmailAddresses_COUNT_BY_HOST = default(EntityRef<EmailAddresses_COUNT_BY_HOST>);
			this._EmailAddresses_MOST_POPULAR_HOSTS_BY_ABSOLUTEURI = default(EntityRef<EmailAddresses_MOST_POPULAR_HOSTS_BY_ABSOLUTEURI>);
			this._EmailAddresses_MOST_POPULAR_HOSTS_BY_DOMAIN = default(EntityRef<EmailAddresses_MOST_POPULAR_HOSTS_BY_DOMAIN>);
			this._EmailAddresses_MOST_POPULAR_HOSTS_BY_EXTENSION = default(EntityRef<EmailAddresses_MOST_POPULAR_HOSTS_BY_EXTENSION>);
			this._EmailAddresses_MOST_POPULAR_HOSTS_BY_HOST = default(EntityRef<EmailAddresses_MOST_POPULAR_HOSTS_BY_HOST>);
			this._EmailAddresses_MOST_POPULAR_HOSTS_BY_SCHEME = default(EntityRef<EmailAddresses_MOST_POPULAR_HOSTS_BY_SCHEME>);
			this._Exceptions_COUNT_BY_HOST1 = default(EntityRef<Exceptions_COUNT_BY_HOST1>);
			this._Exceptions_COUNT_BY_HOST2 = default(EntityRef<Exceptions_COUNT_BY_HOST2>);
			this._Files_COUNT_BY_HOST = default(EntityRef<Files_COUNT_BY_HOST>);
			this._Files_MOST_POPULAR_HOSTS_BY_ABSOLUTEURI = default(EntityRef<Files_MOST_POPULAR_HOSTS_BY_ABSOLUTEURI>);
			this._Files_MOST_POPULAR_HOSTS_BY_DOMAIN = default(EntityRef<Files_MOST_POPULAR_HOSTS_BY_DOMAIN>);
			this._Files_MOST_POPULAR_HOSTS_BY_EXTENSION = default(EntityRef<Files_MOST_POPULAR_HOSTS_BY_EXTENSION>);
			this._Files_MOST_POPULAR_HOSTS_BY_HOST = default(EntityRef<Files_MOST_POPULAR_HOSTS_BY_HOST>);
			this._Files_MOST_POPULAR_HOSTS_BY_SCHEME = default(EntityRef<Files_MOST_POPULAR_HOSTS_BY_SCHEME>);
			this._HyperLinks_COUNT_BY_HOST = default(EntityRef<HyperLinks_COUNT_BY_HOST>);
			this._HyperLinks_MOST_POPULAR_HOSTS_BY_ABSOLUTEURI = default(EntityRef<HyperLinks_MOST_POPULAR_HOSTS_BY_ABSOLUTEURI>);
			this._HyperLinks_MOST_POPULAR_HOSTS_BY_DOMAIN = default(EntityRef<HyperLinks_MOST_POPULAR_HOSTS_BY_DOMAIN>);
			this._HyperLinks_MOST_POPULAR_HOSTS_BY_EXTENSION = default(EntityRef<HyperLinks_MOST_POPULAR_HOSTS_BY_EXTENSION>);
			this._HyperLinks_MOST_POPULAR_HOSTS_BY_HOST = default(EntityRef<HyperLinks_MOST_POPULAR_HOSTS_BY_HOST>);
			this._HyperLinks_MOST_POPULAR_HOSTS_BY_SCHEME = default(EntityRef<HyperLinks_MOST_POPULAR_HOSTS_BY_SCHEME>);
			this._Images_COUNT_BY_HOST = default(EntityRef<Images_COUNT_BY_HOST>);
			this._Images_MOST_POPULAR_HOSTS_BY_ABSOLUTEURI = default(EntityRef<Images_MOST_POPULAR_HOSTS_BY_ABSOLUTEURI>);
			this._Images_MOST_POPULAR_HOSTS_BY_DOMAIN = default(EntityRef<Images_MOST_POPULAR_HOSTS_BY_DOMAIN>);
			this._Images_MOST_POPULAR_HOSTS_BY_EXTENSION = default(EntityRef<Images_MOST_POPULAR_HOSTS_BY_EXTENSION>);
			this._Images_MOST_POPULAR_HOSTS_BY_HOST = default(EntityRef<Images_MOST_POPULAR_HOSTS_BY_HOST>);
			this._Images_MOST_POPULAR_HOSTS_BY_SCHEME = default(EntityRef<Images_MOST_POPULAR_HOSTS_BY_SCHEME>);
			this._WebPages_COUNT_BY_HOST = default(EntityRef<WebPages_COUNT_BY_HOST>);
			this._Hosts_Discoveries = new EntitySet<Hosts_Discovery>(new Action<Hosts_Discovery>(this.attach_Hosts_Discoveries), new Action<Hosts_Discovery>(this.detach_Hosts_Discoveries));
			this._Domain = default(EntityRef<Domain>);
			OnCreated();
		}
		
		[Column(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[Column(Storage="_DomainID", DbType="Int NOT NULL")]
		public int DomainID
		{
			get
			{
				return this._DomainID;
			}
			set
			{
				if ((this._DomainID != value))
				{
					if (this._Domain.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDomainIDChanging(value);
					this.SendPropertyChanging();
					this._DomainID = value;
					this.SendPropertyChanged("DomainID");
					this.OnDomainIDChanged();
				}
			}
		}
		
		[Column(Name="Host", Storage="_Host1", DbType="VarChar(884) NOT NULL", CanBeNull=false)]
		public string Host1
		{
			get
			{
				return this._Host1;
			}
			set
			{
				if ((this._Host1 != value))
				{
					this.OnHost1Changing(value);
					this.SendPropertyChanging();
					this._Host1 = value;
					this.SendPropertyChanged("Host1");
					this.OnHost1Changed();
				}
			}
		}
		
		[Association(Name="Host_DisallowedAbsoluteUris_COUNT_BY_HOST", Storage="_DisallowedAbsoluteUris_COUNT_BY_HOST", ThisKey="ID", OtherKey="HostID", IsUnique=true, IsForeignKey=false)]
		public DisallowedAbsoluteUris_COUNT_BY_HOST DisallowedAbsoluteUris_COUNT_BY_HOST
		{
			get
			{
				return this._DisallowedAbsoluteUris_COUNT_BY_HOST.Entity;
			}
			set
			{
				DisallowedAbsoluteUris_COUNT_BY_HOST previousValue = this._DisallowedAbsoluteUris_COUNT_BY_HOST.Entity;
				if (((previousValue != value) 
							|| (this._DisallowedAbsoluteUris_COUNT_BY_HOST.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DisallowedAbsoluteUris_COUNT_BY_HOST.Entity = null;
						previousValue.Host = null;
					}
					this._DisallowedAbsoluteUris_COUNT_BY_HOST.Entity = value;
					if ((value != null))
					{
						value.Host = this;
					}
					this.SendPropertyChanged("DisallowedAbsoluteUris_COUNT_BY_HOST");
				}
			}
		}
		
		[Association(Name="Host_DisallowedAbsoluteUris_MOST_POPULAR_HOSTS_BY_ABSOLUTEURI", Storage="_DisallowedAbsoluteUris_MOST_POPULAR_HOSTS_BY_ABSOLUTEURI", ThisKey="ID", OtherKey="HostID", IsUnique=true, IsForeignKey=false)]
		public DisallowedAbsoluteUris_MOST_POPULAR_HOSTS_BY_ABSOLUTEURI DisallowedAbsoluteUris_MOST_POPULAR_HOSTS_BY_ABSOLUTEURI
		{
			get
			{
				return this._DisallowedAbsoluteUris_MOST_POPULAR_HOSTS_BY_ABSOLUTEURI.Entity;
			}
			set
			{
				DisallowedAbsoluteUris_MOST_POPULAR_HOSTS_BY_ABSOLUTEURI previousValue = this._DisallowedAbsoluteUris_MOST_POPULAR_HOSTS_BY_ABSOLUTEURI.Entity;
				if (((previousValue != value) 
							|| (this._DisallowedAbsoluteUris_MOST_POPULAR_HOSTS_BY_ABSOLUTEURI.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DisallowedAbsoluteUris_MOST_POPULAR_HOSTS_BY_ABSOLUTEURI.Entity = null;
						previousValue.Host = null;
					}
					this._DisallowedAbsoluteUris_MOST_POPULAR_HOSTS_BY_ABSOLUTEURI.Entity = value;
					if ((value != null))
					{
						value.Host = this;
					}
					this.SendPropertyChanged("DisallowedAbsoluteUris_MOST_POPULAR_HOSTS_BY_ABSOLUTEURI");
				}
			}
		}
		
		[Association(Name="Host_DisallowedAbsoluteUris_MOST_POPULAR_HOSTS_BY_DOMAIN", Storage="_DisallowedAbsoluteUris_MOST_POPULAR_HOSTS_BY_DOMAIN", ThisKey="ID", OtherKey="HostID", IsUnique=true, IsForeignKey=false)]
		public DisallowedAbsoluteUris_MOST_POPULAR_HOSTS_BY_DOMAIN DisallowedAbsoluteUris_MOST_POPULAR_HOSTS_BY_DOMAIN
		{
			get
			{
				return this._DisallowedAbsoluteUris_MOST_POPULAR_HOSTS_BY_DOMAIN.Entity;
			}
			set
			{
				DisallowedAbsoluteUris_MOST_POPULAR_HOSTS_BY_DOMAIN previousValue = this._DisallowedAbsoluteUris_MOST_POPULAR_HOSTS_BY_DOMAIN.Entity;
				if (((previousValue != value) 
							|| (this._DisallowedAbsoluteUris_MOST_POPULAR_HOSTS_BY_DOMAIN.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DisallowedAbsoluteUris_MOST_POPULAR_HOSTS_BY_DOMAIN.Entity = null;
						previousValue.Host = null;
					}
					this._DisallowedAbsoluteUris_MOST_POPULAR_HOSTS_BY_DOMAIN.Entity = value;
					if ((value != null))
					{
						value.Host = this;
					}
					this.SendPropertyChanged("DisallowedAbsoluteUris_MOST_POPULAR_HOSTS_BY_DOMAIN");
				}
			}
		}
		
		[Association(Name="Host_DisallowedAbsoluteUris_MOST_POPULAR_HOSTS_BY_EXTENSION", Storage="_DisallowedAbsoluteUris_MOST_POPULAR_HOSTS_BY_EXTENSION", ThisKey="ID", OtherKey="HostID", IsUnique=true, IsForeignKey=false)]
		public DisallowedAbsoluteUris_MOST_POPULAR_HOSTS_BY_EXTENSION DisallowedAbsoluteUris_MOST_POPULAR_HOSTS_BY_EXTENSION
		{
			get
			{
				return this._DisallowedAbsoluteUris_MOST_POPULAR_HOSTS_BY_EXTENSION.Entity;
			}
			set
			{
				DisallowedAbsoluteUris_MOST_POPULAR_HOSTS_BY_EXTENSION previousValue = this._DisallowedAbsoluteUris_MOST_POPULAR_HOSTS_BY_EXTENSION.Entity;
				if (((previousValue != value) 
							|| (this._DisallowedAbsoluteUris_MOST_POPULAR_HOSTS_BY_EXTENSION.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DisallowedAbsoluteUris_MOST_POPULAR_HOSTS_BY_EXTENSION.Entity = null;
						previousValue.Host = null;
					}
					this._DisallowedAbsoluteUris_MOST_POPULAR_HOSTS_BY_EXTENSION.Entity = value;
					if ((value != null))
					{
						value.Host = this;
					}
					this.SendPropertyChanged("DisallowedAbsoluteUris_MOST_POPULAR_HOSTS_BY_EXTENSION");
				}
			}
		}
		
		[Association(Name="Host_DisallowedAbsoluteUris_MOST_POPULAR_HOSTS_BY_HOST", Storage="_DisallowedAbsoluteUris_MOST_POPULAR_HOSTS_BY_HOST", ThisKey="ID", OtherKey="HostID", IsUnique=true, IsForeignKey=false)]
		public DisallowedAbsoluteUris_MOST_POPULAR_HOSTS_BY_HOST DisallowedAbsoluteUris_MOST_POPULAR_HOSTS_BY_HOST
		{
			get
			{
				return this._DisallowedAbsoluteUris_MOST_POPULAR_HOSTS_BY_HOST.Entity;
			}
			set
			{
				DisallowedAbsoluteUris_MOST_POPULAR_HOSTS_BY_HOST previousValue = this._DisallowedAbsoluteUris_MOST_POPULAR_HOSTS_BY_HOST.Entity;
				if (((previousValue != value) 
							|| (this._DisallowedAbsoluteUris_MOST_POPULAR_HOSTS_BY_HOST.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DisallowedAbsoluteUris_MOST_POPULAR_HOSTS_BY_HOST.Entity = null;
						previousValue.Host = null;
					}
					this._DisallowedAbsoluteUris_MOST_POPULAR_HOSTS_BY_HOST.Entity = value;
					if ((value != null))
					{
						value.Host = this;
					}
					this.SendPropertyChanged("DisallowedAbsoluteUris_MOST_POPULAR_HOSTS_BY_HOST");
				}
			}
		}
		
		[Association(Name="Host_DisallowedAbsoluteUris_MOST_POPULAR_HOSTS_BY_SCHEME", Storage="_DisallowedAbsoluteUris_MOST_POPULAR_HOSTS_BY_SCHEME", ThisKey="ID", OtherKey="HostID", IsUnique=true, IsForeignKey=false)]
		public DisallowedAbsoluteUris_MOST_POPULAR_HOSTS_BY_SCHEME DisallowedAbsoluteUris_MOST_POPULAR_HOSTS_BY_SCHEME
		{
			get
			{
				return this._DisallowedAbsoluteUris_MOST_POPULAR_HOSTS_BY_SCHEME.Entity;
			}
			set
			{
				DisallowedAbsoluteUris_MOST_POPULAR_HOSTS_BY_SCHEME previousValue = this._DisallowedAbsoluteUris_MOST_POPULAR_HOSTS_BY_SCHEME.Entity;
				if (((previousValue != value) 
							|| (this._DisallowedAbsoluteUris_MOST_POPULAR_HOSTS_BY_SCHEME.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DisallowedAbsoluteUris_MOST_POPULAR_HOSTS_BY_SCHEME.Entity = null;
						previousValue.Host = null;
					}
					this._DisallowedAbsoluteUris_MOST_POPULAR_HOSTS_BY_SCHEME.Entity = value;
					if ((value != null))
					{
						value.Host = this;
					}
					this.SendPropertyChanged("DisallowedAbsoluteUris_MOST_POPULAR_HOSTS_BY_SCHEME");
				}
			}
		}
		
		[Association(Name="Host_EmailAddresses_COUNT_BY_HOST", Storage="_EmailAddresses_COUNT_BY_HOST", ThisKey="ID", OtherKey="HostID", IsUnique=true, IsForeignKey=false)]
		public EmailAddresses_COUNT_BY_HOST EmailAddresses_COUNT_BY_HOST
		{
			get
			{
				return this._EmailAddresses_COUNT_BY_HOST.Entity;
			}
			set
			{
				EmailAddresses_COUNT_BY_HOST previousValue = this._EmailAddresses_COUNT_BY_HOST.Entity;
				if (((previousValue != value) 
							|| (this._EmailAddresses_COUNT_BY_HOST.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._EmailAddresses_COUNT_BY_HOST.Entity = null;
						previousValue.Host = null;
					}
					this._EmailAddresses_COUNT_BY_HOST.Entity = value;
					if ((value != null))
					{
						value.Host = this;
					}
					this.SendPropertyChanged("EmailAddresses_COUNT_BY_HOST");
				}
			}
		}
		
		[Association(Name="Host_EmailAddresses_MOST_POPULAR_HOSTS_BY_ABSOLUTEURI", Storage="_EmailAddresses_MOST_POPULAR_HOSTS_BY_ABSOLUTEURI", ThisKey="ID", OtherKey="HostID", IsUnique=true, IsForeignKey=false)]
		public EmailAddresses_MOST_POPULAR_HOSTS_BY_ABSOLUTEURI EmailAddresses_MOST_POPULAR_HOSTS_BY_ABSOLUTEURI
		{
			get
			{
				return this._EmailAddresses_MOST_POPULAR_HOSTS_BY_ABSOLUTEURI.Entity;
			}
			set
			{
				EmailAddresses_MOST_POPULAR_HOSTS_BY_ABSOLUTEURI previousValue = this._EmailAddresses_MOST_POPULAR_HOSTS_BY_ABSOLUTEURI.Entity;
				if (((previousValue != value) 
							|| (this._EmailAddresses_MOST_POPULAR_HOSTS_BY_ABSOLUTEURI.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._EmailAddresses_MOST_POPULAR_HOSTS_BY_ABSOLUTEURI.Entity = null;
						previousValue.Host = null;
					}
					this._EmailAddresses_MOST_POPULAR_HOSTS_BY_ABSOLUTEURI.Entity = value;
					if ((value != null))
					{
						value.Host = this;
					}
					this.SendPropertyChanged("EmailAddresses_MOST_POPULAR_HOSTS_BY_ABSOLUTEURI");
				}
			}
		}
		
		[Association(Name="Host_EmailAddresses_MOST_POPULAR_HOSTS_BY_DOMAIN", Storage="_EmailAddresses_MOST_POPULAR_HOSTS_BY_DOMAIN", ThisKey="ID", OtherKey="HostID", IsUnique=true, IsForeignKey=false)]
		public EmailAddresses_MOST_POPULAR_HOSTS_BY_DOMAIN EmailAddresses_MOST_POPULAR_HOSTS_BY_DOMAIN
		{
			get
			{
				return this._EmailAddresses_MOST_POPULAR_HOSTS_BY_DOMAIN.Entity;
			}
			set
			{
				EmailAddresses_MOST_POPULAR_HOSTS_BY_DOMAIN previousValue = this._EmailAddresses_MOST_POPULAR_HOSTS_BY_DOMAIN.Entity;
				if (((previousValue != value) 
							|| (this._EmailAddresses_MOST_POPULAR_HOSTS_BY_DOMAIN.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._EmailAddresses_MOST_POPULAR_HOSTS_BY_DOMAIN.Entity = null;
						previousValue.Host = null;
					}
					this._EmailAddresses_MOST_POPULAR_HOSTS_BY_DOMAIN.Entity = value;
					if ((value != null))
					{
						value.Host = this;
					}
					this.SendPropertyChanged("EmailAddresses_MOST_POPULAR_HOSTS_BY_DOMAIN");
				}
			}
		}
		
		[Association(Name="Host_EmailAddresses_MOST_POPULAR_HOSTS_BY_EXTENSION", Storage="_EmailAddresses_MOST_POPULAR_HOSTS_BY_EXTENSION", ThisKey="ID", OtherKey="HostID", IsUnique=true, IsForeignKey=false)]
		public EmailAddresses_MOST_POPULAR_HOSTS_BY_EXTENSION EmailAddresses_MOST_POPULAR_HOSTS_BY_EXTENSION
		{
			get
			{
				return this._EmailAddresses_MOST_POPULAR_HOSTS_BY_EXTENSION.Entity;
			}
			set
			{
				EmailAddresses_MOST_POPULAR_HOSTS_BY_EXTENSION previousValue = this._EmailAddresses_MOST_POPULAR_HOSTS_BY_EXTENSION.Entity;
				if (((previousValue != value) 
							|| (this._EmailAddresses_MOST_POPULAR_HOSTS_BY_EXTENSION.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._EmailAddresses_MOST_POPULAR_HOSTS_BY_EXTENSION.Entity = null;
						previousValue.Host = null;
					}
					this._EmailAddresses_MOST_POPULAR_HOSTS_BY_EXTENSION.Entity = value;
					if ((value != null))
					{
						value.Host = this;
					}
					this.SendPropertyChanged("EmailAddresses_MOST_POPULAR_HOSTS_BY_EXTENSION");
				}
			}
		}
		
		[Association(Name="Host_EmailAddresses_MOST_POPULAR_HOSTS_BY_HOST", Storage="_EmailAddresses_MOST_POPULAR_HOSTS_BY_HOST", ThisKey="ID", OtherKey="HostID", IsUnique=true, IsForeignKey=false)]
		public EmailAddresses_MOST_POPULAR_HOSTS_BY_HOST EmailAddresses_MOST_POPULAR_HOSTS_BY_HOST
		{
			get
			{
				return this._EmailAddresses_MOST_POPULAR_HOSTS_BY_HOST.Entity;
			}
			set
			{
				EmailAddresses_MOST_POPULAR_HOSTS_BY_HOST previousValue = this._EmailAddresses_MOST_POPULAR_HOSTS_BY_HOST.Entity;
				if (((previousValue != value) 
							|| (this._EmailAddresses_MOST_POPULAR_HOSTS_BY_HOST.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._EmailAddresses_MOST_POPULAR_HOSTS_BY_HOST.Entity = null;
						previousValue.Host = null;
					}
					this._EmailAddresses_MOST_POPULAR_HOSTS_BY_HOST.Entity = value;
					if ((value != null))
					{
						value.Host = this;
					}
					this.SendPropertyChanged("EmailAddresses_MOST_POPULAR_HOSTS_BY_HOST");
				}
			}
		}
		
		[Association(Name="Host_EmailAddresses_MOST_POPULAR_HOSTS_BY_SCHEME", Storage="_EmailAddresses_MOST_POPULAR_HOSTS_BY_SCHEME", ThisKey="ID", OtherKey="HostID", IsUnique=true, IsForeignKey=false)]
		public EmailAddresses_MOST_POPULAR_HOSTS_BY_SCHEME EmailAddresses_MOST_POPULAR_HOSTS_BY_SCHEME
		{
			get
			{
				return this._EmailAddresses_MOST_POPULAR_HOSTS_BY_SCHEME.Entity;
			}
			set
			{
				EmailAddresses_MOST_POPULAR_HOSTS_BY_SCHEME previousValue = this._EmailAddresses_MOST_POPULAR_HOSTS_BY_SCHEME.Entity;
				if (((previousValue != value) 
							|| (this._EmailAddresses_MOST_POPULAR_HOSTS_BY_SCHEME.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._EmailAddresses_MOST_POPULAR_HOSTS_BY_SCHEME.Entity = null;
						previousValue.Host = null;
					}
					this._EmailAddresses_MOST_POPULAR_HOSTS_BY_SCHEME.Entity = value;
					if ((value != null))
					{
						value.Host = this;
					}
					this.SendPropertyChanged("EmailAddresses_MOST_POPULAR_HOSTS_BY_SCHEME");
				}
			}
		}
		
		[Association(Name="Host_Exceptions_COUNT_BY_HOST1", Storage="_Exceptions_COUNT_BY_HOST1", ThisKey="Host1", OtherKey="Host1", IsUnique=true, IsForeignKey=false)]
		public Exceptions_COUNT_BY_HOST1 Exceptions_COUNT_BY_HOST1
		{
			get
			{
				return this._Exceptions_COUNT_BY_HOST1.Entity;
			}
			set
			{
				Exceptions_COUNT_BY_HOST1 previousValue = this._Exceptions_COUNT_BY_HOST1.Entity;
				if (((previousValue != value) 
							|| (this._Exceptions_COUNT_BY_HOST1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Exceptions_COUNT_BY_HOST1.Entity = null;
						previousValue.Host = null;
					}
					this._Exceptions_COUNT_BY_HOST1.Entity = value;
					if ((value != null))
					{
						value.Host = this;
					}
					this.SendPropertyChanged("Exceptions_COUNT_BY_HOST1");
				}
			}
		}
		
		[Association(Name="Host_Exceptions_COUNT_BY_HOST2", Storage="_Exceptions_COUNT_BY_HOST2", ThisKey="Host1", OtherKey="Host2", IsUnique=true, IsForeignKey=false)]
		public Exceptions_COUNT_BY_HOST2 Exceptions_COUNT_BY_HOST2
		{
			get
			{
				return this._Exceptions_COUNT_BY_HOST2.Entity;
			}
			set
			{
				Exceptions_COUNT_BY_HOST2 previousValue = this._Exceptions_COUNT_BY_HOST2.Entity;
				if (((previousValue != value) 
							|| (this._Exceptions_COUNT_BY_HOST2.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Exceptions_COUNT_BY_HOST2.Entity = null;
						previousValue.Host = null;
					}
					this._Exceptions_COUNT_BY_HOST2.Entity = value;
					if ((value != null))
					{
						value.Host = this;
					}
					this.SendPropertyChanged("Exceptions_COUNT_BY_HOST2");
				}
			}
		}
		
		[Association(Name="Host_Files_COUNT_BY_HOST", Storage="_Files_COUNT_BY_HOST", ThisKey="ID", OtherKey="HostID", IsUnique=true, IsForeignKey=false)]
		public Files_COUNT_BY_HOST Files_COUNT_BY_HOST
		{
			get
			{
				return this._Files_COUNT_BY_HOST.Entity;
			}
			set
			{
				Files_COUNT_BY_HOST previousValue = this._Files_COUNT_BY_HOST.Entity;
				if (((previousValue != value) 
							|| (this._Files_COUNT_BY_HOST.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Files_COUNT_BY_HOST.Entity = null;
						previousValue.Host = null;
					}
					this._Files_COUNT_BY_HOST.Entity = value;
					if ((value != null))
					{
						value.Host = this;
					}
					this.SendPropertyChanged("Files_COUNT_BY_HOST");
				}
			}
		}
		
		[Association(Name="Host_Files_MOST_POPULAR_HOSTS_BY_ABSOLUTEURI", Storage="_Files_MOST_POPULAR_HOSTS_BY_ABSOLUTEURI", ThisKey="ID", OtherKey="HostID", IsUnique=true, IsForeignKey=false)]
		public Files_MOST_POPULAR_HOSTS_BY_ABSOLUTEURI Files_MOST_POPULAR_HOSTS_BY_ABSOLUTEURI
		{
			get
			{
				return this._Files_MOST_POPULAR_HOSTS_BY_ABSOLUTEURI.Entity;
			}
			set
			{
				Files_MOST_POPULAR_HOSTS_BY_ABSOLUTEURI previousValue = this._Files_MOST_POPULAR_HOSTS_BY_ABSOLUTEURI.Entity;
				if (((previousValue != value) 
							|| (this._Files_MOST_POPULAR_HOSTS_BY_ABSOLUTEURI.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Files_MOST_POPULAR_HOSTS_BY_ABSOLUTEURI.Entity = null;
						previousValue.Host = null;
					}
					this._Files_MOST_POPULAR_HOSTS_BY_ABSOLUTEURI.Entity = value;
					if ((value != null))
					{
						value.Host = this;
					}
					this.SendPropertyChanged("Files_MOST_POPULAR_HOSTS_BY_ABSOLUTEURI");
				}
			}
		}
		
		[Association(Name="Host_Files_MOST_POPULAR_HOSTS_BY_DOMAIN", Storage="_Files_MOST_POPULAR_HOSTS_BY_DOMAIN", ThisKey="ID", OtherKey="HostID", IsUnique=true, IsForeignKey=false)]
		public Files_MOST_POPULAR_HOSTS_BY_DOMAIN Files_MOST_POPULAR_HOSTS_BY_DOMAIN
		{
			get
			{
				return this._Files_MOST_POPULAR_HOSTS_BY_DOMAIN.Entity;
			}
			set
			{
				Files_MOST_POPULAR_HOSTS_BY_DOMAIN previousValue = this._Files_MOST_POPULAR_HOSTS_BY_DOMAIN.Entity;
				if (((previousValue != value) 
							|| (this._Files_MOST_POPULAR_HOSTS_BY_DOMAIN.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Files_MOST_POPULAR_HOSTS_BY_DOMAIN.Entity = null;
						previousValue.Host = null;
					}
					this._Files_MOST_POPULAR_HOSTS_BY_DOMAIN.Entity = value;
					if ((value != null))
					{
						value.Host = this;
					}
					this.SendPropertyChanged("Files_MOST_POPULAR_HOSTS_BY_DOMAIN");
				}
			}
		}
		
		[Association(Name="Host_Files_MOST_POPULAR_HOSTS_BY_EXTENSION", Storage="_Files_MOST_POPULAR_HOSTS_BY_EXTENSION", ThisKey="ID", OtherKey="HostID", IsUnique=true, IsForeignKey=false)]
		public Files_MOST_POPULAR_HOSTS_BY_EXTENSION Files_MOST_POPULAR_HOSTS_BY_EXTENSION
		{
			get
			{
				return this._Files_MOST_POPULAR_HOSTS_BY_EXTENSION.Entity;
			}
			set
			{
				Files_MOST_POPULAR_HOSTS_BY_EXTENSION previousValue = this._Files_MOST_POPULAR_HOSTS_BY_EXTENSION.Entity;
				if (((previousValue != value) 
							|| (this._Files_MOST_POPULAR_HOSTS_BY_EXTENSION.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Files_MOST_POPULAR_HOSTS_BY_EXTENSION.Entity = null;
						previousValue.Host = null;
					}
					this._Files_MOST_POPULAR_HOSTS_BY_EXTENSION.Entity = value;
					if ((value != null))
					{
						value.Host = this;
					}
					this.SendPropertyChanged("Files_MOST_POPULAR_HOSTS_BY_EXTENSION");
				}
			}
		}
		
		[Association(Name="Host_Files_MOST_POPULAR_HOSTS_BY_HOST", Storage="_Files_MOST_POPULAR_HOSTS_BY_HOST", ThisKey="ID", OtherKey="HostID", IsUnique=true, IsForeignKey=false)]
		public Files_MOST_POPULAR_HOSTS_BY_HOST Files_MOST_POPULAR_HOSTS_BY_HOST
		{
			get
			{
				return this._Files_MOST_POPULAR_HOSTS_BY_HOST.Entity;
			}
			set
			{
				Files_MOST_POPULAR_HOSTS_BY_HOST previousValue = this._Files_MOST_POPULAR_HOSTS_BY_HOST.Entity;
				if (((previousValue != value) 
							|| (this._Files_MOST_POPULAR_HOSTS_BY_HOST.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Files_MOST_POPULAR_HOSTS_BY_HOST.Entity = null;
						previousValue.Host = null;
					}
					this._Files_MOST_POPULAR_HOSTS_BY_HOST.Entity = value;
					if ((value != null))
					{
						value.Host = this;
					}
					this.SendPropertyChanged("Files_MOST_POPULAR_HOSTS_BY_HOST");
				}
			}
		}
		
		[Association(Name="Host_Files_MOST_POPULAR_HOSTS_BY_SCHEME", Storage="_Files_MOST_POPULAR_HOSTS_BY_SCHEME", ThisKey="ID", OtherKey="HostID", IsUnique=true, IsForeignKey=false)]
		public Files_MOST_POPULAR_HOSTS_BY_SCHEME Files_MOST_POPULAR_HOSTS_BY_SCHEME
		{
			get
			{
				return this._Files_MOST_POPULAR_HOSTS_BY_SCHEME.Entity;
			}
			set
			{
				Files_MOST_POPULAR_HOSTS_BY_SCHEME previousValue = this._Files_MOST_POPULAR_HOSTS_BY_SCHEME.Entity;
				if (((previousValue != value) 
							|| (this._Files_MOST_POPULAR_HOSTS_BY_SCHEME.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Files_MOST_POPULAR_HOSTS_BY_SCHEME.Entity = null;
						previousValue.Host = null;
					}
					this._Files_MOST_POPULAR_HOSTS_BY_SCHEME.Entity = value;
					if ((value != null))
					{
						value.Host = this;
					}
					this.SendPropertyChanged("Files_MOST_POPULAR_HOSTS_BY_SCHEME");
				}
			}
		}
		
		[Association(Name="Host_HyperLinks_COUNT_BY_HOST", Storage="_HyperLinks_COUNT_BY_HOST", ThisKey="ID", OtherKey="HostID", IsUnique=true, IsForeignKey=false)]
		public HyperLinks_COUNT_BY_HOST HyperLinks_COUNT_BY_HOST
		{
			get
			{
				return this._HyperLinks_COUNT_BY_HOST.Entity;
			}
			set
			{
				HyperLinks_COUNT_BY_HOST previousValue = this._HyperLinks_COUNT_BY_HOST.Entity;
				if (((previousValue != value) 
							|| (this._HyperLinks_COUNT_BY_HOST.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._HyperLinks_COUNT_BY_HOST.Entity = null;
						previousValue.Host = null;
					}
					this._HyperLinks_COUNT_BY_HOST.Entity = value;
					if ((value != null))
					{
						value.Host = this;
					}
					this.SendPropertyChanged("HyperLinks_COUNT_BY_HOST");
				}
			}
		}
		
		[Association(Name="Host_HyperLinks_MOST_POPULAR_HOSTS_BY_ABSOLUTEURI", Storage="_HyperLinks_MOST_POPULAR_HOSTS_BY_ABSOLUTEURI", ThisKey="ID", OtherKey="HostID", IsUnique=true, IsForeignKey=false)]
		public HyperLinks_MOST_POPULAR_HOSTS_BY_ABSOLUTEURI HyperLinks_MOST_POPULAR_HOSTS_BY_ABSOLUTEURI
		{
			get
			{
				return this._HyperLinks_MOST_POPULAR_HOSTS_BY_ABSOLUTEURI.Entity;
			}
			set
			{
				HyperLinks_MOST_POPULAR_HOSTS_BY_ABSOLUTEURI previousValue = this._HyperLinks_MOST_POPULAR_HOSTS_BY_ABSOLUTEURI.Entity;
				if (((previousValue != value) 
							|| (this._HyperLinks_MOST_POPULAR_HOSTS_BY_ABSOLUTEURI.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._HyperLinks_MOST_POPULAR_HOSTS_BY_ABSOLUTEURI.Entity = null;
						previousValue.Host = null;
					}
					this._HyperLinks_MOST_POPULAR_HOSTS_BY_ABSOLUTEURI.Entity = value;
					if ((value != null))
					{
						value.Host = this;
					}
					this.SendPropertyChanged("HyperLinks_MOST_POPULAR_HOSTS_BY_ABSOLUTEURI");
				}
			}
		}
		
		[Association(Name="Host_HyperLinks_MOST_POPULAR_HOSTS_BY_DOMAIN", Storage="_HyperLinks_MOST_POPULAR_HOSTS_BY_DOMAIN", ThisKey="ID", OtherKey="HostID", IsUnique=true, IsForeignKey=false)]
		public HyperLinks_MOST_POPULAR_HOSTS_BY_DOMAIN HyperLinks_MOST_POPULAR_HOSTS_BY_DOMAIN
		{
			get
			{
				return this._HyperLinks_MOST_POPULAR_HOSTS_BY_DOMAIN.Entity;
			}
			set
			{
				HyperLinks_MOST_POPULAR_HOSTS_BY_DOMAIN previousValue = this._HyperLinks_MOST_POPULAR_HOSTS_BY_DOMAIN.Entity;
				if (((previousValue != value) 
							|| (this._HyperLinks_MOST_POPULAR_HOSTS_BY_DOMAIN.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._HyperLinks_MOST_POPULAR_HOSTS_BY_DOMAIN.Entity = null;
						previousValue.Host = null;
					}
					this._HyperLinks_MOST_POPULAR_HOSTS_BY_DOMAIN.Entity = value;
					if ((value != null))
					{
						value.Host = this;
					}
					this.SendPropertyChanged("HyperLinks_MOST_POPULAR_HOSTS_BY_DOMAIN");
				}
			}
		}
		
		[Association(Name="Host_HyperLinks_MOST_POPULAR_HOSTS_BY_EXTENSION", Storage="_HyperLinks_MOST_POPULAR_HOSTS_BY_EXTENSION", ThisKey="ID", OtherKey="HostID", IsUnique=true, IsForeignKey=false)]
		public HyperLinks_MOST_POPULAR_HOSTS_BY_EXTENSION HyperLinks_MOST_POPULAR_HOSTS_BY_EXTENSION
		{
			get
			{
				return this._HyperLinks_MOST_POPULAR_HOSTS_BY_EXTENSION.Entity;
			}
			set
			{
				HyperLinks_MOST_POPULAR_HOSTS_BY_EXTENSION previousValue = this._HyperLinks_MOST_POPULAR_HOSTS_BY_EXTENSION.Entity;
				if (((previousValue != value) 
							|| (this._HyperLinks_MOST_POPULAR_HOSTS_BY_EXTENSION.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._HyperLinks_MOST_POPULAR_HOSTS_BY_EXTENSION.Entity = null;
						previousValue.Host = null;
					}
					this._HyperLinks_MOST_POPULAR_HOSTS_BY_EXTENSION.Entity = value;
					if ((value != null))
					{
						value.Host = this;
					}
					this.SendPropertyChanged("HyperLinks_MOST_POPULAR_HOSTS_BY_EXTENSION");
				}
			}
		}
		
		[Association(Name="Host_HyperLinks_MOST_POPULAR_HOSTS_BY_HOST", Storage="_HyperLinks_MOST_POPULAR_HOSTS_BY_HOST", ThisKey="ID", OtherKey="HostID", IsUnique=true, IsForeignKey=false)]
		public HyperLinks_MOST_POPULAR_HOSTS_BY_HOST HyperLinks_MOST_POPULAR_HOSTS_BY_HOST
		{
			get
			{
				return this._HyperLinks_MOST_POPULAR_HOSTS_BY_HOST.Entity;
			}
			set
			{
				HyperLinks_MOST_POPULAR_HOSTS_BY_HOST previousValue = this._HyperLinks_MOST_POPULAR_HOSTS_BY_HOST.Entity;
				if (((previousValue != value) 
							|| (this._HyperLinks_MOST_POPULAR_HOSTS_BY_HOST.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._HyperLinks_MOST_POPULAR_HOSTS_BY_HOST.Entity = null;
						previousValue.Host = null;
					}
					this._HyperLinks_MOST_POPULAR_HOSTS_BY_HOST.Entity = value;
					if ((value != null))
					{
						value.Host = this;
					}
					this.SendPropertyChanged("HyperLinks_MOST_POPULAR_HOSTS_BY_HOST");
				}
			}
		}
		
		[Association(Name="Host_HyperLinks_MOST_POPULAR_HOSTS_BY_SCHEME", Storage="_HyperLinks_MOST_POPULAR_HOSTS_BY_SCHEME", ThisKey="ID", OtherKey="HostID", IsUnique=true, IsForeignKey=false)]
		public HyperLinks_MOST_POPULAR_HOSTS_BY_SCHEME HyperLinks_MOST_POPULAR_HOSTS_BY_SCHEME
		{
			get
			{
				return this._HyperLinks_MOST_POPULAR_HOSTS_BY_SCHEME.Entity;
			}
			set
			{
				HyperLinks_MOST_POPULAR_HOSTS_BY_SCHEME previousValue = this._HyperLinks_MOST_POPULAR_HOSTS_BY_SCHEME.Entity;
				if (((previousValue != value) 
							|| (this._HyperLinks_MOST_POPULAR_HOSTS_BY_SCHEME.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._HyperLinks_MOST_POPULAR_HOSTS_BY_SCHEME.Entity = null;
						previousValue.Host = null;
					}
					this._HyperLinks_MOST_POPULAR_HOSTS_BY_SCHEME.Entity = value;
					if ((value != null))
					{
						value.Host = this;
					}
					this.SendPropertyChanged("HyperLinks_MOST_POPULAR_HOSTS_BY_SCHEME");
				}
			}
		}
		
		[Association(Name="Host_Images_COUNT_BY_HOST", Storage="_Images_COUNT_BY_HOST", ThisKey="ID", OtherKey="HostID", IsUnique=true, IsForeignKey=false)]
		public Images_COUNT_BY_HOST Images_COUNT_BY_HOST
		{
			get
			{
				return this._Images_COUNT_BY_HOST.Entity;
			}
			set
			{
				Images_COUNT_BY_HOST previousValue = this._Images_COUNT_BY_HOST.Entity;
				if (((previousValue != value) 
							|| (this._Images_COUNT_BY_HOST.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Images_COUNT_BY_HOST.Entity = null;
						previousValue.Host = null;
					}
					this._Images_COUNT_BY_HOST.Entity = value;
					if ((value != null))
					{
						value.Host = this;
					}
					this.SendPropertyChanged("Images_COUNT_BY_HOST");
				}
			}
		}
		
		[Association(Name="Host_Images_MOST_POPULAR_HOSTS_BY_ABSOLUTEURI", Storage="_Images_MOST_POPULAR_HOSTS_BY_ABSOLUTEURI", ThisKey="ID", OtherKey="HostID", IsUnique=true, IsForeignKey=false)]
		public Images_MOST_POPULAR_HOSTS_BY_ABSOLUTEURI Images_MOST_POPULAR_HOSTS_BY_ABSOLUTEURI
		{
			get
			{
				return this._Images_MOST_POPULAR_HOSTS_BY_ABSOLUTEURI.Entity;
			}
			set
			{
				Images_MOST_POPULAR_HOSTS_BY_ABSOLUTEURI previousValue = this._Images_MOST_POPULAR_HOSTS_BY_ABSOLUTEURI.Entity;
				if (((previousValue != value) 
							|| (this._Images_MOST_POPULAR_HOSTS_BY_ABSOLUTEURI.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Images_MOST_POPULAR_HOSTS_BY_ABSOLUTEURI.Entity = null;
						previousValue.Host = null;
					}
					this._Images_MOST_POPULAR_HOSTS_BY_ABSOLUTEURI.Entity = value;
					if ((value != null))
					{
						value.Host = this;
					}
					this.SendPropertyChanged("Images_MOST_POPULAR_HOSTS_BY_ABSOLUTEURI");
				}
			}
		}
		
		[Association(Name="Host_Images_MOST_POPULAR_HOSTS_BY_DOMAIN", Storage="_Images_MOST_POPULAR_HOSTS_BY_DOMAIN", ThisKey="ID", OtherKey="HostID", IsUnique=true, IsForeignKey=false)]
		public Images_MOST_POPULAR_HOSTS_BY_DOMAIN Images_MOST_POPULAR_HOSTS_BY_DOMAIN
		{
			get
			{
				return this._Images_MOST_POPULAR_HOSTS_BY_DOMAIN.Entity;
			}
			set
			{
				Images_MOST_POPULAR_HOSTS_BY_DOMAIN previousValue = this._Images_MOST_POPULAR_HOSTS_BY_DOMAIN.Entity;
				if (((previousValue != value) 
							|| (this._Images_MOST_POPULAR_HOSTS_BY_DOMAIN.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Images_MOST_POPULAR_HOSTS_BY_DOMAIN.Entity = null;
						previousValue.Host = null;
					}
					this._Images_MOST_POPULAR_HOSTS_BY_DOMAIN.Entity = value;
					if ((value != null))
					{
						value.Host = this;
					}
					this.SendPropertyChanged("Images_MOST_POPULAR_HOSTS_BY_DOMAIN");
				}
			}
		}
		
		[Association(Name="Host_Images_MOST_POPULAR_HOSTS_BY_EXTENSION", Storage="_Images_MOST_POPULAR_HOSTS_BY_EXTENSION", ThisKey="ID", OtherKey="HostID", IsUnique=true, IsForeignKey=false)]
		public Images_MOST_POPULAR_HOSTS_BY_EXTENSION Images_MOST_POPULAR_HOSTS_BY_EXTENSION
		{
			get
			{
				return this._Images_MOST_POPULAR_HOSTS_BY_EXTENSION.Entity;
			}
			set
			{
				Images_MOST_POPULAR_HOSTS_BY_EXTENSION previousValue = this._Images_MOST_POPULAR_HOSTS_BY_EXTENSION.Entity;
				if (((previousValue != value) 
							|| (this._Images_MOST_POPULAR_HOSTS_BY_EXTENSION.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Images_MOST_POPULAR_HOSTS_BY_EXTENSION.Entity = null;
						previousValue.Host = null;
					}
					this._Images_MOST_POPULAR_HOSTS_BY_EXTENSION.Entity = value;
					if ((value != null))
					{
						value.Host = this;
					}
					this.SendPropertyChanged("Images_MOST_POPULAR_HOSTS_BY_EXTENSION");
				}
			}
		}
		
		[Association(Name="Host_Images_MOST_POPULAR_HOSTS_BY_HOST", Storage="_Images_MOST_POPULAR_HOSTS_BY_HOST", ThisKey="ID", OtherKey="HostID", IsUnique=true, IsForeignKey=false)]
		public Images_MOST_POPULAR_HOSTS_BY_HOST Images_MOST_POPULAR_HOSTS_BY_HOST
		{
			get
			{
				return this._Images_MOST_POPULAR_HOSTS_BY_HOST.Entity;
			}
			set
			{
				Images_MOST_POPULAR_HOSTS_BY_HOST previousValue = this._Images_MOST_POPULAR_HOSTS_BY_HOST.Entity;
				if (((previousValue != value) 
							|| (this._Images_MOST_POPULAR_HOSTS_BY_HOST.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Images_MOST_POPULAR_HOSTS_BY_HOST.Entity = null;
						previousValue.Host = null;
					}
					this._Images_MOST_POPULAR_HOSTS_BY_HOST.Entity = value;
					if ((value != null))
					{
						value.Host = this;
					}
					this.SendPropertyChanged("Images_MOST_POPULAR_HOSTS_BY_HOST");
				}
			}
		}
		
		[Association(Name="Host_Images_MOST_POPULAR_HOSTS_BY_SCHEME", Storage="_Images_MOST_POPULAR_HOSTS_BY_SCHEME", ThisKey="ID", OtherKey="HostID", IsUnique=true, IsForeignKey=false)]
		public Images_MOST_POPULAR_HOSTS_BY_SCHEME Images_MOST_POPULAR_HOSTS_BY_SCHEME
		{
			get
			{
				return this._Images_MOST_POPULAR_HOSTS_BY_SCHEME.Entity;
			}
			set
			{
				Images_MOST_POPULAR_HOSTS_BY_SCHEME previousValue = this._Images_MOST_POPULAR_HOSTS_BY_SCHEME.Entity;
				if (((previousValue != value) 
							|| (this._Images_MOST_POPULAR_HOSTS_BY_SCHEME.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Images_MOST_POPULAR_HOSTS_BY_SCHEME.Entity = null;
						previousValue.Host = null;
					}
					this._Images_MOST_POPULAR_HOSTS_BY_SCHEME.Entity = value;
					if ((value != null))
					{
						value.Host = this;
					}
					this.SendPropertyChanged("Images_MOST_POPULAR_HOSTS_BY_SCHEME");
				}
			}
		}
		
		[Association(Name="Host_WebPages_COUNT_BY_HOST", Storage="_WebPages_COUNT_BY_HOST", ThisKey="Host1", OtherKey="Host", IsUnique=true, IsForeignKey=false)]
		public WebPages_COUNT_BY_HOST WebPages_COUNT_BY_HOST
		{
			get
			{
				return this._WebPages_COUNT_BY_HOST.Entity;
			}
			set
			{
				WebPages_COUNT_BY_HOST previousValue = this._WebPages_COUNT_BY_HOST.Entity;
				if (((previousValue != value) 
							|| (this._WebPages_COUNT_BY_HOST.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._WebPages_COUNT_BY_HOST.Entity = null;
						previousValue.Host1 = null;
					}
					this._WebPages_COUNT_BY_HOST.Entity = value;
					if ((value != null))
					{
						value.Host1 = this;
					}
					this.SendPropertyChanged("WebPages_COUNT_BY_HOST");
				}
			}
		}
		
		[Association(Name="Host_Hosts_Discovery", Storage="_Hosts_Discoveries", ThisKey="ID", OtherKey="HostID")]
		public EntitySet<Hosts_Discovery> Hosts_Discoveries
		{
			get
			{
				return this._Hosts_Discoveries;
			}
			set
			{
				this._Hosts_Discoveries.Assign(value);
			}
		}
		
		[Association(Name="Domain_Host", Storage="_Domain", ThisKey="DomainID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Domain Domain
		{
			get
			{
				return this._Domain.Entity;
			}
			set
			{
				Domain previousValue = this._Domain.Entity;
				if (((previousValue != value) 
							|| (this._Domain.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Domain.Entity = null;
						previousValue.Hosts.Remove(this);
					}
					this._Domain.Entity = value;
					if ((value != null))
					{
						value.Hosts.Add(this);
						this._DomainID = value.ID;
					}
					else
					{
						this._DomainID = default(int);
					}
					this.SendPropertyChanged("Domain");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Hosts_Discoveries(Hosts_Discovery entity)
		{
			this.SendPropertyChanging();
			entity.Host = this;
		}
		
		private void detach_Hosts_Discoveries(Hosts_Discovery entity)
		{
			this.SendPropertyChanging();
			entity.Host = null;
		}
	}
	
	[Table(Name="dbo.Images_Hosts_Discoveries")]
	public partial class Images_Hosts_Discovery : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ImageID;
		
		private int _Host_DiscoveryID;
		
		private EntityRef<Hosts_Discovery> _Hosts_Discovery;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnImageIDChanging(long value);
    partial void OnImageIDChanged();
    partial void OnHost_DiscoveryIDChanging(int value);
    partial void OnHost_DiscoveryIDChanged();
    #endregion
		
		public Images_Hosts_Discovery()
		{
			this._Hosts_Discovery = default(EntityRef<Hosts_Discovery>);
			OnCreated();
		}
		
		[Column(Storage="_ImageID", DbType="BigInt NOT NULL", IsPrimaryKey=true)]
		public long ImageID
		{
			get
			{
				return this._ImageID;
			}
			set
			{
				if ((this._ImageID != value))
				{
					this.OnImageIDChanging(value);
					this.SendPropertyChanging();
					this._ImageID = value;
					this.SendPropertyChanged("ImageID");
					this.OnImageIDChanged();
				}
			}
		}
		
		[Column(Storage="_Host_DiscoveryID", DbType="Int NOT NULL")]
		public int Host_DiscoveryID
		{
			get
			{
				return this._Host_DiscoveryID;
			}
			set
			{
				if ((this._Host_DiscoveryID != value))
				{
					if (this._Hosts_Discovery.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnHost_DiscoveryIDChanging(value);
					this.SendPropertyChanging();
					this._Host_DiscoveryID = value;
					this.SendPropertyChanged("Host_DiscoveryID");
					this.OnHost_DiscoveryIDChanged();
				}
			}
		}
		
		[Association(Name="Hosts_Discovery_Images_Hosts_Discovery", Storage="_Hosts_Discovery", ThisKey="Host_DiscoveryID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Hosts_Discovery Hosts_Discovery
		{
			get
			{
				return this._Hosts_Discovery.Entity;
			}
			set
			{
				Hosts_Discovery previousValue = this._Hosts_Discovery.Entity;
				if (((previousValue != value) 
							|| (this._Hosts_Discovery.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Hosts_Discovery.Entity = null;
						previousValue.Images_Hosts_Discoveries.Remove(this);
					}
					this._Hosts_Discovery.Entity = value;
					if ((value != null))
					{
						value.Images_Hosts_Discoveries.Add(this);
						this._Host_DiscoveryID = value.ID;
					}
					else
					{
						this._Host_DiscoveryID = default(int);
					}
					this.SendPropertyChanged("Hosts_Discovery");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.Images_Schemes_Discoveries")]
	public partial class Images_Schemes_Discovery : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ImageID;
		
		private int _Scheme_DiscoveryID;
		
		private EntityRef<Schemes_Discovery> _Schemes_Discovery;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnImageIDChanging(long value);
    partial void OnImageIDChanged();
    partial void OnScheme_DiscoveryIDChanging(int value);
    partial void OnScheme_DiscoveryIDChanged();
    #endregion
		
		public Images_Schemes_Discovery()
		{
			this._Schemes_Discovery = default(EntityRef<Schemes_Discovery>);
			OnCreated();
		}
		
		[Column(Storage="_ImageID", DbType="BigInt NOT NULL", IsPrimaryKey=true)]
		public long ImageID
		{
			get
			{
				return this._ImageID;
			}
			set
			{
				if ((this._ImageID != value))
				{
					this.OnImageIDChanging(value);
					this.SendPropertyChanging();
					this._ImageID = value;
					this.SendPropertyChanged("ImageID");
					this.OnImageIDChanged();
				}
			}
		}
		
		[Column(Storage="_Scheme_DiscoveryID", DbType="Int NOT NULL")]
		public int Scheme_DiscoveryID
		{
			get
			{
				return this._Scheme_DiscoveryID;
			}
			set
			{
				if ((this._Scheme_DiscoveryID != value))
				{
					if (this._Schemes_Discovery.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnScheme_DiscoveryIDChanging(value);
					this.SendPropertyChanging();
					this._Scheme_DiscoveryID = value;
					this.SendPropertyChanged("Scheme_DiscoveryID");
					this.OnScheme_DiscoveryIDChanged();
				}
			}
		}
		
		[Association(Name="Schemes_Discovery_Images_Schemes_Discovery", Storage="_Schemes_Discovery", ThisKey="Scheme_DiscoveryID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Schemes_Discovery Schemes_Discovery
		{
			get
			{
				return this._Schemes_Discovery.Entity;
			}
			set
			{
				Schemes_Discovery previousValue = this._Schemes_Discovery.Entity;
				if (((previousValue != value) 
							|| (this._Schemes_Discovery.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Schemes_Discovery.Entity = null;
						previousValue.Images_Schemes_Discoveries.Remove(this);
					}
					this._Schemes_Discovery.Entity = value;
					if ((value != null))
					{
						value.Images_Schemes_Discoveries.Add(this);
						this._Scheme_DiscoveryID = value.ID;
					}
					else
					{
						this._Scheme_DiscoveryID = default(int);
					}
					this.SendPropertyChanged("Schemes_Discovery");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.Schemes_Discoveries")]
	public partial class Schemes_Discovery : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Nullable<System.DateTime> _InitiallyDiscovered;
		
		private System.Nullable<System.DateTime> _LastDiscovered;
		
		private int _ID;
		
		private byte _DiscoveryTypeID;
		
		private int _SchemeID;
		
		private EntitySet<Files_Schemes_Discovery> _Files_Schemes_Discoveries;
		
		private EntitySet<Exceptions_Schemes_Discovery> _Exceptions_Schemes_Discoveries;
		
		private EntitySet<Exceptions_Schemes_Discovery> _Exceptions_Schemes_Discoveries1;
		
		private EntitySet<EmailAddresses_Schemes_Discovery> _EmailAddresses_Schemes_Discoveries;
		
		private EntitySet<DisallowedAbsoluteUris_Schemes_Discovery> _DisallowedAbsoluteUris_Schemes_Discoveries;
		
		private EntitySet<HyperLinks_Schemes_Discovery> _HyperLinks_Schemes_Discoveries;
		
		private EntitySet<Images_Schemes_Discovery> _Images_Schemes_Discoveries;
		
		private EntitySet<WebPages_Schemes_Discovery> _WebPages_Schemes_Discoveries;
		
		private EntityRef<Scheme> _Scheme;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnInitiallyDiscoveredChanging(System.Nullable<System.DateTime> value);
    partial void OnInitiallyDiscoveredChanged();
    partial void OnLastDiscoveredChanging(System.Nullable<System.DateTime> value);
    partial void OnLastDiscoveredChanged();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnDiscoveryTypeIDChanging(byte value);
    partial void OnDiscoveryTypeIDChanged();
    partial void OnSchemeIDChanging(int value);
    partial void OnSchemeIDChanged();
    #endregion
		
		public Schemes_Discovery()
		{
			this._Files_Schemes_Discoveries = new EntitySet<Files_Schemes_Discovery>(new Action<Files_Schemes_Discovery>(this.attach_Files_Schemes_Discoveries), new Action<Files_Schemes_Discovery>(this.detach_Files_Schemes_Discoveries));
			this._Exceptions_Schemes_Discoveries = new EntitySet<Exceptions_Schemes_Discovery>(new Action<Exceptions_Schemes_Discovery>(this.attach_Exceptions_Schemes_Discoveries), new Action<Exceptions_Schemes_Discovery>(this.detach_Exceptions_Schemes_Discoveries));
			this._Exceptions_Schemes_Discoveries1 = new EntitySet<Exceptions_Schemes_Discovery>(new Action<Exceptions_Schemes_Discovery>(this.attach_Exceptions_Schemes_Discoveries1), new Action<Exceptions_Schemes_Discovery>(this.detach_Exceptions_Schemes_Discoveries1));
			this._EmailAddresses_Schemes_Discoveries = new EntitySet<EmailAddresses_Schemes_Discovery>(new Action<EmailAddresses_Schemes_Discovery>(this.attach_EmailAddresses_Schemes_Discoveries), new Action<EmailAddresses_Schemes_Discovery>(this.detach_EmailAddresses_Schemes_Discoveries));
			this._DisallowedAbsoluteUris_Schemes_Discoveries = new EntitySet<DisallowedAbsoluteUris_Schemes_Discovery>(new Action<DisallowedAbsoluteUris_Schemes_Discovery>(this.attach_DisallowedAbsoluteUris_Schemes_Discoveries), new Action<DisallowedAbsoluteUris_Schemes_Discovery>(this.detach_DisallowedAbsoluteUris_Schemes_Discoveries));
			this._HyperLinks_Schemes_Discoveries = new EntitySet<HyperLinks_Schemes_Discovery>(new Action<HyperLinks_Schemes_Discovery>(this.attach_HyperLinks_Schemes_Discoveries), new Action<HyperLinks_Schemes_Discovery>(this.detach_HyperLinks_Schemes_Discoveries));
			this._Images_Schemes_Discoveries = new EntitySet<Images_Schemes_Discovery>(new Action<Images_Schemes_Discovery>(this.attach_Images_Schemes_Discoveries), new Action<Images_Schemes_Discovery>(this.detach_Images_Schemes_Discoveries));
			this._WebPages_Schemes_Discoveries = new EntitySet<WebPages_Schemes_Discovery>(new Action<WebPages_Schemes_Discovery>(this.attach_WebPages_Schemes_Discoveries), new Action<WebPages_Schemes_Discovery>(this.detach_WebPages_Schemes_Discoveries));
			this._Scheme = default(EntityRef<Scheme>);
			OnCreated();
		}
		
		[Column(Storage="_InitiallyDiscovered", DbType="DateTime")]
		public System.Nullable<System.DateTime> InitiallyDiscovered
		{
			get
			{
				return this._InitiallyDiscovered;
			}
			set
			{
				if ((this._InitiallyDiscovered != value))
				{
					this.OnInitiallyDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._InitiallyDiscovered = value;
					this.SendPropertyChanged("InitiallyDiscovered");
					this.OnInitiallyDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_LastDiscovered", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastDiscovered
		{
			get
			{
				return this._LastDiscovered;
			}
			set
			{
				if ((this._LastDiscovered != value))
				{
					this.OnLastDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._LastDiscovered = value;
					this.SendPropertyChanged("LastDiscovered");
					this.OnLastDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[Column(Storage="_DiscoveryTypeID", DbType="TinyInt NOT NULL")]
		public byte DiscoveryTypeID
		{
			get
			{
				return this._DiscoveryTypeID;
			}
			set
			{
				if ((this._DiscoveryTypeID != value))
				{
					this.OnDiscoveryTypeIDChanging(value);
					this.SendPropertyChanging();
					this._DiscoveryTypeID = value;
					this.SendPropertyChanged("DiscoveryTypeID");
					this.OnDiscoveryTypeIDChanged();
				}
			}
		}
		
		[Column(Storage="_SchemeID", DbType="Int NOT NULL")]
		public int SchemeID
		{
			get
			{
				return this._SchemeID;
			}
			set
			{
				if ((this._SchemeID != value))
				{
					if (this._Scheme.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSchemeIDChanging(value);
					this.SendPropertyChanging();
					this._SchemeID = value;
					this.SendPropertyChanged("SchemeID");
					this.OnSchemeIDChanged();
				}
			}
		}
		
		[Association(Name="Schemes_Discovery_Files_Schemes_Discovery", Storage="_Files_Schemes_Discoveries", ThisKey="ID", OtherKey="Scheme_DiscoveryID")]
		public EntitySet<Files_Schemes_Discovery> Files_Schemes_Discoveries
		{
			get
			{
				return this._Files_Schemes_Discoveries;
			}
			set
			{
				this._Files_Schemes_Discoveries.Assign(value);
			}
		}
		
		[Association(Name="Schemes_Discovery_Exceptions_Schemes_Discovery", Storage="_Exceptions_Schemes_Discoveries", ThisKey="ID", OtherKey="Scheme_DiscoveryID1")]
		public EntitySet<Exceptions_Schemes_Discovery> Exceptions_Schemes_Discoveries
		{
			get
			{
				return this._Exceptions_Schemes_Discoveries;
			}
			set
			{
				this._Exceptions_Schemes_Discoveries.Assign(value);
			}
		}
		
		[Association(Name="Schemes_Discovery_Exceptions_Schemes_Discovery1", Storage="_Exceptions_Schemes_Discoveries1", ThisKey="ID", OtherKey="Scheme_DiscoveryID2")]
		public EntitySet<Exceptions_Schemes_Discovery> Exceptions_Schemes_Discoveries1
		{
			get
			{
				return this._Exceptions_Schemes_Discoveries1;
			}
			set
			{
				this._Exceptions_Schemes_Discoveries1.Assign(value);
			}
		}
		
		[Association(Name="Schemes_Discovery_EmailAddresses_Schemes_Discovery", Storage="_EmailAddresses_Schemes_Discoveries", ThisKey="ID", OtherKey="Scheme_DiscoveryID")]
		public EntitySet<EmailAddresses_Schemes_Discovery> EmailAddresses_Schemes_Discoveries
		{
			get
			{
				return this._EmailAddresses_Schemes_Discoveries;
			}
			set
			{
				this._EmailAddresses_Schemes_Discoveries.Assign(value);
			}
		}
		
		[Association(Name="Schemes_Discovery_DisallowedAbsoluteUris_Schemes_Discovery", Storage="_DisallowedAbsoluteUris_Schemes_Discoveries", ThisKey="ID", OtherKey="Scheme_DiscoveryID")]
		public EntitySet<DisallowedAbsoluteUris_Schemes_Discovery> DisallowedAbsoluteUris_Schemes_Discoveries
		{
			get
			{
				return this._DisallowedAbsoluteUris_Schemes_Discoveries;
			}
			set
			{
				this._DisallowedAbsoluteUris_Schemes_Discoveries.Assign(value);
			}
		}
		
		[Association(Name="Schemes_Discovery_HyperLinks_Schemes_Discovery", Storage="_HyperLinks_Schemes_Discoveries", ThisKey="ID", OtherKey="Scheme_DiscoveryID")]
		public EntitySet<HyperLinks_Schemes_Discovery> HyperLinks_Schemes_Discoveries
		{
			get
			{
				return this._HyperLinks_Schemes_Discoveries;
			}
			set
			{
				this._HyperLinks_Schemes_Discoveries.Assign(value);
			}
		}
		
		[Association(Name="Schemes_Discovery_Images_Schemes_Discovery", Storage="_Images_Schemes_Discoveries", ThisKey="ID", OtherKey="Scheme_DiscoveryID")]
		public EntitySet<Images_Schemes_Discovery> Images_Schemes_Discoveries
		{
			get
			{
				return this._Images_Schemes_Discoveries;
			}
			set
			{
				this._Images_Schemes_Discoveries.Assign(value);
			}
		}
		
		[Association(Name="Schemes_Discovery_WebPages_Schemes_Discovery", Storage="_WebPages_Schemes_Discoveries", ThisKey="ID", OtherKey="Scheme_DiscoveryID")]
		public EntitySet<WebPages_Schemes_Discovery> WebPages_Schemes_Discoveries
		{
			get
			{
				return this._WebPages_Schemes_Discoveries;
			}
			set
			{
				this._WebPages_Schemes_Discoveries.Assign(value);
			}
		}
		
		[Association(Name="Scheme_Schemes_Discovery", Storage="_Scheme", ThisKey="SchemeID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Scheme Scheme
		{
			get
			{
				return this._Scheme.Entity;
			}
			set
			{
				Scheme previousValue = this._Scheme.Entity;
				if (((previousValue != value) 
							|| (this._Scheme.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Scheme.Entity = null;
						previousValue.Schemes_Discoveries.Remove(this);
					}
					this._Scheme.Entity = value;
					if ((value != null))
					{
						value.Schemes_Discoveries.Add(this);
						this._SchemeID = value.ID;
					}
					else
					{
						this._SchemeID = default(int);
					}
					this.SendPropertyChanged("Scheme");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Files_Schemes_Discoveries(Files_Schemes_Discovery entity)
		{
			this.SendPropertyChanging();
			entity.Schemes_Discovery = this;
		}
		
		private void detach_Files_Schemes_Discoveries(Files_Schemes_Discovery entity)
		{
			this.SendPropertyChanging();
			entity.Schemes_Discovery = null;
		}
		
		private void attach_Exceptions_Schemes_Discoveries(Exceptions_Schemes_Discovery entity)
		{
			this.SendPropertyChanging();
			entity.Schemes_Discovery = this;
		}
		
		private void detach_Exceptions_Schemes_Discoveries(Exceptions_Schemes_Discovery entity)
		{
			this.SendPropertyChanging();
			entity.Schemes_Discovery = null;
		}
		
		private void attach_Exceptions_Schemes_Discoveries1(Exceptions_Schemes_Discovery entity)
		{
			this.SendPropertyChanging();
			entity.Schemes_Discovery1 = this;
		}
		
		private void detach_Exceptions_Schemes_Discoveries1(Exceptions_Schemes_Discovery entity)
		{
			this.SendPropertyChanging();
			entity.Schemes_Discovery1 = null;
		}
		
		private void attach_EmailAddresses_Schemes_Discoveries(EmailAddresses_Schemes_Discovery entity)
		{
			this.SendPropertyChanging();
			entity.Schemes_Discovery = this;
		}
		
		private void detach_EmailAddresses_Schemes_Discoveries(EmailAddresses_Schemes_Discovery entity)
		{
			this.SendPropertyChanging();
			entity.Schemes_Discovery = null;
		}
		
		private void attach_DisallowedAbsoluteUris_Schemes_Discoveries(DisallowedAbsoluteUris_Schemes_Discovery entity)
		{
			this.SendPropertyChanging();
			entity.Schemes_Discovery = this;
		}
		
		private void detach_DisallowedAbsoluteUris_Schemes_Discoveries(DisallowedAbsoluteUris_Schemes_Discovery entity)
		{
			this.SendPropertyChanging();
			entity.Schemes_Discovery = null;
		}
		
		private void attach_HyperLinks_Schemes_Discoveries(HyperLinks_Schemes_Discovery entity)
		{
			this.SendPropertyChanging();
			entity.Schemes_Discovery = this;
		}
		
		private void detach_HyperLinks_Schemes_Discoveries(HyperLinks_Schemes_Discovery entity)
		{
			this.SendPropertyChanging();
			entity.Schemes_Discovery = null;
		}
		
		private void attach_Images_Schemes_Discoveries(Images_Schemes_Discovery entity)
		{
			this.SendPropertyChanging();
			entity.Schemes_Discovery = this;
		}
		
		private void detach_Images_Schemes_Discoveries(Images_Schemes_Discovery entity)
		{
			this.SendPropertyChanging();
			entity.Schemes_Discovery = null;
		}
		
		private void attach_WebPages_Schemes_Discoveries(WebPages_Schemes_Discovery entity)
		{
			this.SendPropertyChanging();
			entity.Schemes_Discovery = this;
		}
		
		private void detach_WebPages_Schemes_Discoveries(WebPages_Schemes_Discovery entity)
		{
			this.SendPropertyChanging();
			entity.Schemes_Discovery = null;
		}
	}
	
	[Table(Name="dbo.Schemes")]
	public partial class Scheme : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Scheme1;
		
		private EntityRef<DisallowedAbsoluteUris_MOST_POPULAR_SCHEMES_BY_SCHEME> _DisallowedAbsoluteUris_MOST_POPULAR_SCHEMES_BY_SCHEME;
		
		private EntityRef<DisallowedAbsoluteUris_COUNT_BY_SCHEME> _DisallowedAbsoluteUris_COUNT_BY_SCHEME;
		
		private EntityRef<DisallowedAbsoluteUris_MOST_POPULAR_SCHEMES_BY_ABSOLUTEURI> _DisallowedAbsoluteUris_MOST_POPULAR_SCHEMES_BY_ABSOLUTEURI;
		
		private EntityRef<DisallowedAbsoluteUris_MOST_POPULAR_SCHEMES_BY_DOMAIN> _DisallowedAbsoluteUris_MOST_POPULAR_SCHEMES_BY_DOMAIN;
		
		private EntityRef<DisallowedAbsoluteUris_MOST_POPULAR_SCHEMES_BY_EXTENSION> _DisallowedAbsoluteUris_MOST_POPULAR_SCHEMES_BY_EXTENSION;
		
		private EntityRef<DisallowedAbsoluteUris_MOST_POPULAR_SCHEMES_BY_HOST> _DisallowedAbsoluteUris_MOST_POPULAR_SCHEMES_BY_HOST;
		
		private EntityRef<EmailAddresses_MOST_POPULAR_SCHEMES_BY_SCHEME> _EmailAddresses_MOST_POPULAR_SCHEMES_BY_SCHEME;
		
		private EntityRef<EmailAddresses_COUNT_BY_SCHEME> _EmailAddresses_COUNT_BY_SCHEME;
		
		private EntityRef<EmailAddresses_MOST_POPULAR_SCHEMES_BY_ABSOLUTEURI> _EmailAddresses_MOST_POPULAR_SCHEMES_BY_ABSOLUTEURI;
		
		private EntityRef<EmailAddresses_MOST_POPULAR_SCHEMES_BY_DOMAIN> _EmailAddresses_MOST_POPULAR_SCHEMES_BY_DOMAIN;
		
		private EntityRef<EmailAddresses_MOST_POPULAR_SCHEMES_BY_EXTENSION> _EmailAddresses_MOST_POPULAR_SCHEMES_BY_EXTENSION;
		
		private EntityRef<EmailAddresses_MOST_POPULAR_SCHEMES_BY_HOST> _EmailAddresses_MOST_POPULAR_SCHEMES_BY_HOST;
		
		private EntityRef<Exceptions_COUNT_BY_SCHEME1> _Exceptions_COUNT_BY_SCHEME1;
		
		private EntityRef<Exceptions_COUNT_BY_SCHEME2> _Exceptions_COUNT_BY_SCHEME2;
		
		private EntityRef<Files_MOST_POPULAR_SCHEMES_BY_SCHEME> _Files_MOST_POPULAR_SCHEMES_BY_SCHEME;
		
		private EntityRef<Files_COUNT_BY_SCHEME> _Files_COUNT_BY_SCHEME;
		
		private EntityRef<Files_MOST_POPULAR_SCHEMES_BY_ABSOLUTEURI> _Files_MOST_POPULAR_SCHEMES_BY_ABSOLUTEURI;
		
		private EntityRef<Files_MOST_POPULAR_SCHEMES_BY_DOMAIN> _Files_MOST_POPULAR_SCHEMES_BY_DOMAIN;
		
		private EntityRef<Files_MOST_POPULAR_SCHEMES_BY_EXTENSION> _Files_MOST_POPULAR_SCHEMES_BY_EXTENSION;
		
		private EntityRef<Files_MOST_POPULAR_SCHEMES_BY_HOST> _Files_MOST_POPULAR_SCHEMES_BY_HOST;
		
		private EntityRef<HyperLinks_MOST_POPULAR_SCHEMES_BY_SCHEME> _HyperLinks_MOST_POPULAR_SCHEMES_BY_SCHEME;
		
		private EntityRef<HyperLinks_COUNT_BY_SCHEME> _HyperLinks_COUNT_BY_SCHEME;
		
		private EntityRef<HyperLinks_MOST_POPULAR_SCHEMES_BY_ABSOLUTEURI> _HyperLinks_MOST_POPULAR_SCHEMES_BY_ABSOLUTEURI;
		
		private EntityRef<HyperLinks_MOST_POPULAR_SCHEMES_BY_DOMAIN> _HyperLinks_MOST_POPULAR_SCHEMES_BY_DOMAIN;
		
		private EntityRef<HyperLinks_MOST_POPULAR_SCHEMES_BY_EXTENSION> _HyperLinks_MOST_POPULAR_SCHEMES_BY_EXTENSION;
		
		private EntityRef<HyperLinks_MOST_POPULAR_SCHEMES_BY_HOST> _HyperLinks_MOST_POPULAR_SCHEMES_BY_HOST;
		
		private EntityRef<WebPages_COUNT_BY_SCHEME> _WebPages_COUNT_BY_SCHEME;
		
		private EntityRef<Images_COUNT_BY_SCHEME> _Images_COUNT_BY_SCHEME;
		
		private EntityRef<Images_MOST_POPULAR_SCHEMES_BY_ABSOLUTEURI> _Images_MOST_POPULAR_SCHEMES_BY_ABSOLUTEURI;
		
		private EntityRef<Images_MOST_POPULAR_SCHEMES_BY_DOMAIN> _Images_MOST_POPULAR_SCHEMES_BY_DOMAIN;
		
		private EntityRef<Images_MOST_POPULAR_SCHEMES_BY_EXTENSION> _Images_MOST_POPULAR_SCHEMES_BY_EXTENSION;
		
		private EntityRef<Images_MOST_POPULAR_SCHEMES_BY_HOST> _Images_MOST_POPULAR_SCHEMES_BY_HOST;
		
		private EntityRef<Images_MOST_POPULAR_SCHEMES_BY_SCHEME> _Images_MOST_POPULAR_SCHEMES_BY_SCHEME;
		
		private EntitySet<Schemes_Discovery> _Schemes_Discoveries;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnScheme1Changing(string value);
    partial void OnScheme1Changed();
    #endregion
		
		public Scheme()
		{
			this._DisallowedAbsoluteUris_MOST_POPULAR_SCHEMES_BY_SCHEME = default(EntityRef<DisallowedAbsoluteUris_MOST_POPULAR_SCHEMES_BY_SCHEME>);
			this._DisallowedAbsoluteUris_COUNT_BY_SCHEME = default(EntityRef<DisallowedAbsoluteUris_COUNT_BY_SCHEME>);
			this._DisallowedAbsoluteUris_MOST_POPULAR_SCHEMES_BY_ABSOLUTEURI = default(EntityRef<DisallowedAbsoluteUris_MOST_POPULAR_SCHEMES_BY_ABSOLUTEURI>);
			this._DisallowedAbsoluteUris_MOST_POPULAR_SCHEMES_BY_DOMAIN = default(EntityRef<DisallowedAbsoluteUris_MOST_POPULAR_SCHEMES_BY_DOMAIN>);
			this._DisallowedAbsoluteUris_MOST_POPULAR_SCHEMES_BY_EXTENSION = default(EntityRef<DisallowedAbsoluteUris_MOST_POPULAR_SCHEMES_BY_EXTENSION>);
			this._DisallowedAbsoluteUris_MOST_POPULAR_SCHEMES_BY_HOST = default(EntityRef<DisallowedAbsoluteUris_MOST_POPULAR_SCHEMES_BY_HOST>);
			this._EmailAddresses_MOST_POPULAR_SCHEMES_BY_SCHEME = default(EntityRef<EmailAddresses_MOST_POPULAR_SCHEMES_BY_SCHEME>);
			this._EmailAddresses_COUNT_BY_SCHEME = default(EntityRef<EmailAddresses_COUNT_BY_SCHEME>);
			this._EmailAddresses_MOST_POPULAR_SCHEMES_BY_ABSOLUTEURI = default(EntityRef<EmailAddresses_MOST_POPULAR_SCHEMES_BY_ABSOLUTEURI>);
			this._EmailAddresses_MOST_POPULAR_SCHEMES_BY_DOMAIN = default(EntityRef<EmailAddresses_MOST_POPULAR_SCHEMES_BY_DOMAIN>);
			this._EmailAddresses_MOST_POPULAR_SCHEMES_BY_EXTENSION = default(EntityRef<EmailAddresses_MOST_POPULAR_SCHEMES_BY_EXTENSION>);
			this._EmailAddresses_MOST_POPULAR_SCHEMES_BY_HOST = default(EntityRef<EmailAddresses_MOST_POPULAR_SCHEMES_BY_HOST>);
			this._Exceptions_COUNT_BY_SCHEME1 = default(EntityRef<Exceptions_COUNT_BY_SCHEME1>);
			this._Exceptions_COUNT_BY_SCHEME2 = default(EntityRef<Exceptions_COUNT_BY_SCHEME2>);
			this._Files_MOST_POPULAR_SCHEMES_BY_SCHEME = default(EntityRef<Files_MOST_POPULAR_SCHEMES_BY_SCHEME>);
			this._Files_COUNT_BY_SCHEME = default(EntityRef<Files_COUNT_BY_SCHEME>);
			this._Files_MOST_POPULAR_SCHEMES_BY_ABSOLUTEURI = default(EntityRef<Files_MOST_POPULAR_SCHEMES_BY_ABSOLUTEURI>);
			this._Files_MOST_POPULAR_SCHEMES_BY_DOMAIN = default(EntityRef<Files_MOST_POPULAR_SCHEMES_BY_DOMAIN>);
			this._Files_MOST_POPULAR_SCHEMES_BY_EXTENSION = default(EntityRef<Files_MOST_POPULAR_SCHEMES_BY_EXTENSION>);
			this._Files_MOST_POPULAR_SCHEMES_BY_HOST = default(EntityRef<Files_MOST_POPULAR_SCHEMES_BY_HOST>);
			this._HyperLinks_MOST_POPULAR_SCHEMES_BY_SCHEME = default(EntityRef<HyperLinks_MOST_POPULAR_SCHEMES_BY_SCHEME>);
			this._HyperLinks_COUNT_BY_SCHEME = default(EntityRef<HyperLinks_COUNT_BY_SCHEME>);
			this._HyperLinks_MOST_POPULAR_SCHEMES_BY_ABSOLUTEURI = default(EntityRef<HyperLinks_MOST_POPULAR_SCHEMES_BY_ABSOLUTEURI>);
			this._HyperLinks_MOST_POPULAR_SCHEMES_BY_DOMAIN = default(EntityRef<HyperLinks_MOST_POPULAR_SCHEMES_BY_DOMAIN>);
			this._HyperLinks_MOST_POPULAR_SCHEMES_BY_EXTENSION = default(EntityRef<HyperLinks_MOST_POPULAR_SCHEMES_BY_EXTENSION>);
			this._HyperLinks_MOST_POPULAR_SCHEMES_BY_HOST = default(EntityRef<HyperLinks_MOST_POPULAR_SCHEMES_BY_HOST>);
			this._WebPages_COUNT_BY_SCHEME = default(EntityRef<WebPages_COUNT_BY_SCHEME>);
			this._Images_COUNT_BY_SCHEME = default(EntityRef<Images_COUNT_BY_SCHEME>);
			this._Images_MOST_POPULAR_SCHEMES_BY_ABSOLUTEURI = default(EntityRef<Images_MOST_POPULAR_SCHEMES_BY_ABSOLUTEURI>);
			this._Images_MOST_POPULAR_SCHEMES_BY_DOMAIN = default(EntityRef<Images_MOST_POPULAR_SCHEMES_BY_DOMAIN>);
			this._Images_MOST_POPULAR_SCHEMES_BY_EXTENSION = default(EntityRef<Images_MOST_POPULAR_SCHEMES_BY_EXTENSION>);
			this._Images_MOST_POPULAR_SCHEMES_BY_HOST = default(EntityRef<Images_MOST_POPULAR_SCHEMES_BY_HOST>);
			this._Images_MOST_POPULAR_SCHEMES_BY_SCHEME = default(EntityRef<Images_MOST_POPULAR_SCHEMES_BY_SCHEME>);
			this._Schemes_Discoveries = new EntitySet<Schemes_Discovery>(new Action<Schemes_Discovery>(this.attach_Schemes_Discoveries), new Action<Schemes_Discovery>(this.detach_Schemes_Discoveries));
			OnCreated();
		}
		
		[Column(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[Column(Name="Scheme", Storage="_Scheme1", DbType="VarChar(884) NOT NULL", CanBeNull=false)]
		public string Scheme1
		{
			get
			{
				return this._Scheme1;
			}
			set
			{
				if ((this._Scheme1 != value))
				{
					this.OnScheme1Changing(value);
					this.SendPropertyChanging();
					this._Scheme1 = value;
					this.SendPropertyChanged("Scheme1");
					this.OnScheme1Changed();
				}
			}
		}
		
		[Association(Name="Scheme_DisallowedAbsoluteUris_MOST_POPULAR_SCHEMES_BY_SCHEME", Storage="_DisallowedAbsoluteUris_MOST_POPULAR_SCHEMES_BY_SCHEME", ThisKey="ID", OtherKey="SchemeID", IsUnique=true, IsForeignKey=false)]
		public DisallowedAbsoluteUris_MOST_POPULAR_SCHEMES_BY_SCHEME DisallowedAbsoluteUris_MOST_POPULAR_SCHEMES_BY_SCHEME
		{
			get
			{
				return this._DisallowedAbsoluteUris_MOST_POPULAR_SCHEMES_BY_SCHEME.Entity;
			}
			set
			{
				DisallowedAbsoluteUris_MOST_POPULAR_SCHEMES_BY_SCHEME previousValue = this._DisallowedAbsoluteUris_MOST_POPULAR_SCHEMES_BY_SCHEME.Entity;
				if (((previousValue != value) 
							|| (this._DisallowedAbsoluteUris_MOST_POPULAR_SCHEMES_BY_SCHEME.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DisallowedAbsoluteUris_MOST_POPULAR_SCHEMES_BY_SCHEME.Entity = null;
						previousValue.Scheme = null;
					}
					this._DisallowedAbsoluteUris_MOST_POPULAR_SCHEMES_BY_SCHEME.Entity = value;
					if ((value != null))
					{
						value.Scheme = this;
					}
					this.SendPropertyChanged("DisallowedAbsoluteUris_MOST_POPULAR_SCHEMES_BY_SCHEME");
				}
			}
		}
		
		[Association(Name="Scheme_DisallowedAbsoluteUris_COUNT_BY_SCHEME", Storage="_DisallowedAbsoluteUris_COUNT_BY_SCHEME", ThisKey="ID", OtherKey="SchemeID", IsUnique=true, IsForeignKey=false)]
		public DisallowedAbsoluteUris_COUNT_BY_SCHEME DisallowedAbsoluteUris_COUNT_BY_SCHEME
		{
			get
			{
				return this._DisallowedAbsoluteUris_COUNT_BY_SCHEME.Entity;
			}
			set
			{
				DisallowedAbsoluteUris_COUNT_BY_SCHEME previousValue = this._DisallowedAbsoluteUris_COUNT_BY_SCHEME.Entity;
				if (((previousValue != value) 
							|| (this._DisallowedAbsoluteUris_COUNT_BY_SCHEME.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DisallowedAbsoluteUris_COUNT_BY_SCHEME.Entity = null;
						previousValue.Scheme = null;
					}
					this._DisallowedAbsoluteUris_COUNT_BY_SCHEME.Entity = value;
					if ((value != null))
					{
						value.Scheme = this;
					}
					this.SendPropertyChanged("DisallowedAbsoluteUris_COUNT_BY_SCHEME");
				}
			}
		}
		
		[Association(Name="Scheme_DisallowedAbsoluteUris_MOST_POPULAR_SCHEMES_BY_ABSOLUTEURI", Storage="_DisallowedAbsoluteUris_MOST_POPULAR_SCHEMES_BY_ABSOLUTEURI", ThisKey="ID", OtherKey="SchemeID", IsUnique=true, IsForeignKey=false)]
		public DisallowedAbsoluteUris_MOST_POPULAR_SCHEMES_BY_ABSOLUTEURI DisallowedAbsoluteUris_MOST_POPULAR_SCHEMES_BY_ABSOLUTEURI
		{
			get
			{
				return this._DisallowedAbsoluteUris_MOST_POPULAR_SCHEMES_BY_ABSOLUTEURI.Entity;
			}
			set
			{
				DisallowedAbsoluteUris_MOST_POPULAR_SCHEMES_BY_ABSOLUTEURI previousValue = this._DisallowedAbsoluteUris_MOST_POPULAR_SCHEMES_BY_ABSOLUTEURI.Entity;
				if (((previousValue != value) 
							|| (this._DisallowedAbsoluteUris_MOST_POPULAR_SCHEMES_BY_ABSOLUTEURI.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DisallowedAbsoluteUris_MOST_POPULAR_SCHEMES_BY_ABSOLUTEURI.Entity = null;
						previousValue.Scheme = null;
					}
					this._DisallowedAbsoluteUris_MOST_POPULAR_SCHEMES_BY_ABSOLUTEURI.Entity = value;
					if ((value != null))
					{
						value.Scheme = this;
					}
					this.SendPropertyChanged("DisallowedAbsoluteUris_MOST_POPULAR_SCHEMES_BY_ABSOLUTEURI");
				}
			}
		}
		
		[Association(Name="Scheme_DisallowedAbsoluteUris_MOST_POPULAR_SCHEMES_BY_DOMAIN", Storage="_DisallowedAbsoluteUris_MOST_POPULAR_SCHEMES_BY_DOMAIN", ThisKey="ID", OtherKey="SchemeID", IsUnique=true, IsForeignKey=false)]
		public DisallowedAbsoluteUris_MOST_POPULAR_SCHEMES_BY_DOMAIN DisallowedAbsoluteUris_MOST_POPULAR_SCHEMES_BY_DOMAIN
		{
			get
			{
				return this._DisallowedAbsoluteUris_MOST_POPULAR_SCHEMES_BY_DOMAIN.Entity;
			}
			set
			{
				DisallowedAbsoluteUris_MOST_POPULAR_SCHEMES_BY_DOMAIN previousValue = this._DisallowedAbsoluteUris_MOST_POPULAR_SCHEMES_BY_DOMAIN.Entity;
				if (((previousValue != value) 
							|| (this._DisallowedAbsoluteUris_MOST_POPULAR_SCHEMES_BY_DOMAIN.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DisallowedAbsoluteUris_MOST_POPULAR_SCHEMES_BY_DOMAIN.Entity = null;
						previousValue.Scheme = null;
					}
					this._DisallowedAbsoluteUris_MOST_POPULAR_SCHEMES_BY_DOMAIN.Entity = value;
					if ((value != null))
					{
						value.Scheme = this;
					}
					this.SendPropertyChanged("DisallowedAbsoluteUris_MOST_POPULAR_SCHEMES_BY_DOMAIN");
				}
			}
		}
		
		[Association(Name="Scheme_DisallowedAbsoluteUris_MOST_POPULAR_SCHEMES_BY_EXTENSION", Storage="_DisallowedAbsoluteUris_MOST_POPULAR_SCHEMES_BY_EXTENSION", ThisKey="ID", OtherKey="SchemeID", IsUnique=true, IsForeignKey=false)]
		public DisallowedAbsoluteUris_MOST_POPULAR_SCHEMES_BY_EXTENSION DisallowedAbsoluteUris_MOST_POPULAR_SCHEMES_BY_EXTENSION
		{
			get
			{
				return this._DisallowedAbsoluteUris_MOST_POPULAR_SCHEMES_BY_EXTENSION.Entity;
			}
			set
			{
				DisallowedAbsoluteUris_MOST_POPULAR_SCHEMES_BY_EXTENSION previousValue = this._DisallowedAbsoluteUris_MOST_POPULAR_SCHEMES_BY_EXTENSION.Entity;
				if (((previousValue != value) 
							|| (this._DisallowedAbsoluteUris_MOST_POPULAR_SCHEMES_BY_EXTENSION.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DisallowedAbsoluteUris_MOST_POPULAR_SCHEMES_BY_EXTENSION.Entity = null;
						previousValue.Scheme = null;
					}
					this._DisallowedAbsoluteUris_MOST_POPULAR_SCHEMES_BY_EXTENSION.Entity = value;
					if ((value != null))
					{
						value.Scheme = this;
					}
					this.SendPropertyChanged("DisallowedAbsoluteUris_MOST_POPULAR_SCHEMES_BY_EXTENSION");
				}
			}
		}
		
		[Association(Name="Scheme_DisallowedAbsoluteUris_MOST_POPULAR_SCHEMES_BY_HOST", Storage="_DisallowedAbsoluteUris_MOST_POPULAR_SCHEMES_BY_HOST", ThisKey="ID", OtherKey="SchemeID", IsUnique=true, IsForeignKey=false)]
		public DisallowedAbsoluteUris_MOST_POPULAR_SCHEMES_BY_HOST DisallowedAbsoluteUris_MOST_POPULAR_SCHEMES_BY_HOST
		{
			get
			{
				return this._DisallowedAbsoluteUris_MOST_POPULAR_SCHEMES_BY_HOST.Entity;
			}
			set
			{
				DisallowedAbsoluteUris_MOST_POPULAR_SCHEMES_BY_HOST previousValue = this._DisallowedAbsoluteUris_MOST_POPULAR_SCHEMES_BY_HOST.Entity;
				if (((previousValue != value) 
							|| (this._DisallowedAbsoluteUris_MOST_POPULAR_SCHEMES_BY_HOST.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DisallowedAbsoluteUris_MOST_POPULAR_SCHEMES_BY_HOST.Entity = null;
						previousValue.Scheme = null;
					}
					this._DisallowedAbsoluteUris_MOST_POPULAR_SCHEMES_BY_HOST.Entity = value;
					if ((value != null))
					{
						value.Scheme = this;
					}
					this.SendPropertyChanged("DisallowedAbsoluteUris_MOST_POPULAR_SCHEMES_BY_HOST");
				}
			}
		}
		
		[Association(Name="Scheme_EmailAddresses_MOST_POPULAR_SCHEMES_BY_SCHEME", Storage="_EmailAddresses_MOST_POPULAR_SCHEMES_BY_SCHEME", ThisKey="ID", OtherKey="SchemeID", IsUnique=true, IsForeignKey=false)]
		public EmailAddresses_MOST_POPULAR_SCHEMES_BY_SCHEME EmailAddresses_MOST_POPULAR_SCHEMES_BY_SCHEME
		{
			get
			{
				return this._EmailAddresses_MOST_POPULAR_SCHEMES_BY_SCHEME.Entity;
			}
			set
			{
				EmailAddresses_MOST_POPULAR_SCHEMES_BY_SCHEME previousValue = this._EmailAddresses_MOST_POPULAR_SCHEMES_BY_SCHEME.Entity;
				if (((previousValue != value) 
							|| (this._EmailAddresses_MOST_POPULAR_SCHEMES_BY_SCHEME.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._EmailAddresses_MOST_POPULAR_SCHEMES_BY_SCHEME.Entity = null;
						previousValue.Scheme = null;
					}
					this._EmailAddresses_MOST_POPULAR_SCHEMES_BY_SCHEME.Entity = value;
					if ((value != null))
					{
						value.Scheme = this;
					}
					this.SendPropertyChanged("EmailAddresses_MOST_POPULAR_SCHEMES_BY_SCHEME");
				}
			}
		}
		
		[Association(Name="Scheme_EmailAddresses_COUNT_BY_SCHEME", Storage="_EmailAddresses_COUNT_BY_SCHEME", ThisKey="ID", OtherKey="SchemeID", IsUnique=true, IsForeignKey=false)]
		public EmailAddresses_COUNT_BY_SCHEME EmailAddresses_COUNT_BY_SCHEME
		{
			get
			{
				return this._EmailAddresses_COUNT_BY_SCHEME.Entity;
			}
			set
			{
				EmailAddresses_COUNT_BY_SCHEME previousValue = this._EmailAddresses_COUNT_BY_SCHEME.Entity;
				if (((previousValue != value) 
							|| (this._EmailAddresses_COUNT_BY_SCHEME.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._EmailAddresses_COUNT_BY_SCHEME.Entity = null;
						previousValue.Scheme = null;
					}
					this._EmailAddresses_COUNT_BY_SCHEME.Entity = value;
					if ((value != null))
					{
						value.Scheme = this;
					}
					this.SendPropertyChanged("EmailAddresses_COUNT_BY_SCHEME");
				}
			}
		}
		
		[Association(Name="Scheme_EmailAddresses_MOST_POPULAR_SCHEMES_BY_ABSOLUTEURI", Storage="_EmailAddresses_MOST_POPULAR_SCHEMES_BY_ABSOLUTEURI", ThisKey="ID", OtherKey="SchemeID", IsUnique=true, IsForeignKey=false)]
		public EmailAddresses_MOST_POPULAR_SCHEMES_BY_ABSOLUTEURI EmailAddresses_MOST_POPULAR_SCHEMES_BY_ABSOLUTEURI
		{
			get
			{
				return this._EmailAddresses_MOST_POPULAR_SCHEMES_BY_ABSOLUTEURI.Entity;
			}
			set
			{
				EmailAddresses_MOST_POPULAR_SCHEMES_BY_ABSOLUTEURI previousValue = this._EmailAddresses_MOST_POPULAR_SCHEMES_BY_ABSOLUTEURI.Entity;
				if (((previousValue != value) 
							|| (this._EmailAddresses_MOST_POPULAR_SCHEMES_BY_ABSOLUTEURI.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._EmailAddresses_MOST_POPULAR_SCHEMES_BY_ABSOLUTEURI.Entity = null;
						previousValue.Scheme = null;
					}
					this._EmailAddresses_MOST_POPULAR_SCHEMES_BY_ABSOLUTEURI.Entity = value;
					if ((value != null))
					{
						value.Scheme = this;
					}
					this.SendPropertyChanged("EmailAddresses_MOST_POPULAR_SCHEMES_BY_ABSOLUTEURI");
				}
			}
		}
		
		[Association(Name="Scheme_EmailAddresses_MOST_POPULAR_SCHEMES_BY_DOMAIN", Storage="_EmailAddresses_MOST_POPULAR_SCHEMES_BY_DOMAIN", ThisKey="ID", OtherKey="SchemeID", IsUnique=true, IsForeignKey=false)]
		public EmailAddresses_MOST_POPULAR_SCHEMES_BY_DOMAIN EmailAddresses_MOST_POPULAR_SCHEMES_BY_DOMAIN
		{
			get
			{
				return this._EmailAddresses_MOST_POPULAR_SCHEMES_BY_DOMAIN.Entity;
			}
			set
			{
				EmailAddresses_MOST_POPULAR_SCHEMES_BY_DOMAIN previousValue = this._EmailAddresses_MOST_POPULAR_SCHEMES_BY_DOMAIN.Entity;
				if (((previousValue != value) 
							|| (this._EmailAddresses_MOST_POPULAR_SCHEMES_BY_DOMAIN.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._EmailAddresses_MOST_POPULAR_SCHEMES_BY_DOMAIN.Entity = null;
						previousValue.Scheme = null;
					}
					this._EmailAddresses_MOST_POPULAR_SCHEMES_BY_DOMAIN.Entity = value;
					if ((value != null))
					{
						value.Scheme = this;
					}
					this.SendPropertyChanged("EmailAddresses_MOST_POPULAR_SCHEMES_BY_DOMAIN");
				}
			}
		}
		
		[Association(Name="Scheme_EmailAddresses_MOST_POPULAR_SCHEMES_BY_EXTENSION", Storage="_EmailAddresses_MOST_POPULAR_SCHEMES_BY_EXTENSION", ThisKey="ID", OtherKey="SchemeID", IsUnique=true, IsForeignKey=false)]
		public EmailAddresses_MOST_POPULAR_SCHEMES_BY_EXTENSION EmailAddresses_MOST_POPULAR_SCHEMES_BY_EXTENSION
		{
			get
			{
				return this._EmailAddresses_MOST_POPULAR_SCHEMES_BY_EXTENSION.Entity;
			}
			set
			{
				EmailAddresses_MOST_POPULAR_SCHEMES_BY_EXTENSION previousValue = this._EmailAddresses_MOST_POPULAR_SCHEMES_BY_EXTENSION.Entity;
				if (((previousValue != value) 
							|| (this._EmailAddresses_MOST_POPULAR_SCHEMES_BY_EXTENSION.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._EmailAddresses_MOST_POPULAR_SCHEMES_BY_EXTENSION.Entity = null;
						previousValue.Scheme = null;
					}
					this._EmailAddresses_MOST_POPULAR_SCHEMES_BY_EXTENSION.Entity = value;
					if ((value != null))
					{
						value.Scheme = this;
					}
					this.SendPropertyChanged("EmailAddresses_MOST_POPULAR_SCHEMES_BY_EXTENSION");
				}
			}
		}
		
		[Association(Name="Scheme_EmailAddresses_MOST_POPULAR_SCHEMES_BY_HOST", Storage="_EmailAddresses_MOST_POPULAR_SCHEMES_BY_HOST", ThisKey="ID", OtherKey="SchemeID", IsUnique=true, IsForeignKey=false)]
		public EmailAddresses_MOST_POPULAR_SCHEMES_BY_HOST EmailAddresses_MOST_POPULAR_SCHEMES_BY_HOST
		{
			get
			{
				return this._EmailAddresses_MOST_POPULAR_SCHEMES_BY_HOST.Entity;
			}
			set
			{
				EmailAddresses_MOST_POPULAR_SCHEMES_BY_HOST previousValue = this._EmailAddresses_MOST_POPULAR_SCHEMES_BY_HOST.Entity;
				if (((previousValue != value) 
							|| (this._EmailAddresses_MOST_POPULAR_SCHEMES_BY_HOST.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._EmailAddresses_MOST_POPULAR_SCHEMES_BY_HOST.Entity = null;
						previousValue.Scheme = null;
					}
					this._EmailAddresses_MOST_POPULAR_SCHEMES_BY_HOST.Entity = value;
					if ((value != null))
					{
						value.Scheme = this;
					}
					this.SendPropertyChanged("EmailAddresses_MOST_POPULAR_SCHEMES_BY_HOST");
				}
			}
		}
		
		[Association(Name="Scheme_Exceptions_COUNT_BY_SCHEME1", Storage="_Exceptions_COUNT_BY_SCHEME1", ThisKey="Scheme1", OtherKey="Scheme1", IsUnique=true, IsForeignKey=false)]
		public Exceptions_COUNT_BY_SCHEME1 Exceptions_COUNT_BY_SCHEME1
		{
			get
			{
				return this._Exceptions_COUNT_BY_SCHEME1.Entity;
			}
			set
			{
				Exceptions_COUNT_BY_SCHEME1 previousValue = this._Exceptions_COUNT_BY_SCHEME1.Entity;
				if (((previousValue != value) 
							|| (this._Exceptions_COUNT_BY_SCHEME1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Exceptions_COUNT_BY_SCHEME1.Entity = null;
						previousValue.Scheme = null;
					}
					this._Exceptions_COUNT_BY_SCHEME1.Entity = value;
					if ((value != null))
					{
						value.Scheme = this;
					}
					this.SendPropertyChanged("Exceptions_COUNT_BY_SCHEME1");
				}
			}
		}
		
		[Association(Name="Scheme_Exceptions_COUNT_BY_SCHEME2", Storage="_Exceptions_COUNT_BY_SCHEME2", ThisKey="Scheme1", OtherKey="Scheme2", IsUnique=true, IsForeignKey=false)]
		public Exceptions_COUNT_BY_SCHEME2 Exceptions_COUNT_BY_SCHEME2
		{
			get
			{
				return this._Exceptions_COUNT_BY_SCHEME2.Entity;
			}
			set
			{
				Exceptions_COUNT_BY_SCHEME2 previousValue = this._Exceptions_COUNT_BY_SCHEME2.Entity;
				if (((previousValue != value) 
							|| (this._Exceptions_COUNT_BY_SCHEME2.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Exceptions_COUNT_BY_SCHEME2.Entity = null;
						previousValue.Scheme = null;
					}
					this._Exceptions_COUNT_BY_SCHEME2.Entity = value;
					if ((value != null))
					{
						value.Scheme = this;
					}
					this.SendPropertyChanged("Exceptions_COUNT_BY_SCHEME2");
				}
			}
		}
		
		[Association(Name="Scheme_Files_MOST_POPULAR_SCHEMES_BY_SCHEME", Storage="_Files_MOST_POPULAR_SCHEMES_BY_SCHEME", ThisKey="ID", OtherKey="SchemeID", IsUnique=true, IsForeignKey=false)]
		public Files_MOST_POPULAR_SCHEMES_BY_SCHEME Files_MOST_POPULAR_SCHEMES_BY_SCHEME
		{
			get
			{
				return this._Files_MOST_POPULAR_SCHEMES_BY_SCHEME.Entity;
			}
			set
			{
				Files_MOST_POPULAR_SCHEMES_BY_SCHEME previousValue = this._Files_MOST_POPULAR_SCHEMES_BY_SCHEME.Entity;
				if (((previousValue != value) 
							|| (this._Files_MOST_POPULAR_SCHEMES_BY_SCHEME.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Files_MOST_POPULAR_SCHEMES_BY_SCHEME.Entity = null;
						previousValue.Scheme = null;
					}
					this._Files_MOST_POPULAR_SCHEMES_BY_SCHEME.Entity = value;
					if ((value != null))
					{
						value.Scheme = this;
					}
					this.SendPropertyChanged("Files_MOST_POPULAR_SCHEMES_BY_SCHEME");
				}
			}
		}
		
		[Association(Name="Scheme_Files_COUNT_BY_SCHEME", Storage="_Files_COUNT_BY_SCHEME", ThisKey="ID", OtherKey="SchemeID", IsUnique=true, IsForeignKey=false)]
		public Files_COUNT_BY_SCHEME Files_COUNT_BY_SCHEME
		{
			get
			{
				return this._Files_COUNT_BY_SCHEME.Entity;
			}
			set
			{
				Files_COUNT_BY_SCHEME previousValue = this._Files_COUNT_BY_SCHEME.Entity;
				if (((previousValue != value) 
							|| (this._Files_COUNT_BY_SCHEME.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Files_COUNT_BY_SCHEME.Entity = null;
						previousValue.Scheme = null;
					}
					this._Files_COUNT_BY_SCHEME.Entity = value;
					if ((value != null))
					{
						value.Scheme = this;
					}
					this.SendPropertyChanged("Files_COUNT_BY_SCHEME");
				}
			}
		}
		
		[Association(Name="Scheme_Files_MOST_POPULAR_SCHEMES_BY_ABSOLUTEURI", Storage="_Files_MOST_POPULAR_SCHEMES_BY_ABSOLUTEURI", ThisKey="ID", OtherKey="SchemeID", IsUnique=true, IsForeignKey=false)]
		public Files_MOST_POPULAR_SCHEMES_BY_ABSOLUTEURI Files_MOST_POPULAR_SCHEMES_BY_ABSOLUTEURI
		{
			get
			{
				return this._Files_MOST_POPULAR_SCHEMES_BY_ABSOLUTEURI.Entity;
			}
			set
			{
				Files_MOST_POPULAR_SCHEMES_BY_ABSOLUTEURI previousValue = this._Files_MOST_POPULAR_SCHEMES_BY_ABSOLUTEURI.Entity;
				if (((previousValue != value) 
							|| (this._Files_MOST_POPULAR_SCHEMES_BY_ABSOLUTEURI.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Files_MOST_POPULAR_SCHEMES_BY_ABSOLUTEURI.Entity = null;
						previousValue.Scheme = null;
					}
					this._Files_MOST_POPULAR_SCHEMES_BY_ABSOLUTEURI.Entity = value;
					if ((value != null))
					{
						value.Scheme = this;
					}
					this.SendPropertyChanged("Files_MOST_POPULAR_SCHEMES_BY_ABSOLUTEURI");
				}
			}
		}
		
		[Association(Name="Scheme_Files_MOST_POPULAR_SCHEMES_BY_DOMAIN", Storage="_Files_MOST_POPULAR_SCHEMES_BY_DOMAIN", ThisKey="ID", OtherKey="SchemeID", IsUnique=true, IsForeignKey=false)]
		public Files_MOST_POPULAR_SCHEMES_BY_DOMAIN Files_MOST_POPULAR_SCHEMES_BY_DOMAIN
		{
			get
			{
				return this._Files_MOST_POPULAR_SCHEMES_BY_DOMAIN.Entity;
			}
			set
			{
				Files_MOST_POPULAR_SCHEMES_BY_DOMAIN previousValue = this._Files_MOST_POPULAR_SCHEMES_BY_DOMAIN.Entity;
				if (((previousValue != value) 
							|| (this._Files_MOST_POPULAR_SCHEMES_BY_DOMAIN.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Files_MOST_POPULAR_SCHEMES_BY_DOMAIN.Entity = null;
						previousValue.Scheme = null;
					}
					this._Files_MOST_POPULAR_SCHEMES_BY_DOMAIN.Entity = value;
					if ((value != null))
					{
						value.Scheme = this;
					}
					this.SendPropertyChanged("Files_MOST_POPULAR_SCHEMES_BY_DOMAIN");
				}
			}
		}
		
		[Association(Name="Scheme_Files_MOST_POPULAR_SCHEMES_BY_EXTENSION", Storage="_Files_MOST_POPULAR_SCHEMES_BY_EXTENSION", ThisKey="ID", OtherKey="SchemeID", IsUnique=true, IsForeignKey=false)]
		public Files_MOST_POPULAR_SCHEMES_BY_EXTENSION Files_MOST_POPULAR_SCHEMES_BY_EXTENSION
		{
			get
			{
				return this._Files_MOST_POPULAR_SCHEMES_BY_EXTENSION.Entity;
			}
			set
			{
				Files_MOST_POPULAR_SCHEMES_BY_EXTENSION previousValue = this._Files_MOST_POPULAR_SCHEMES_BY_EXTENSION.Entity;
				if (((previousValue != value) 
							|| (this._Files_MOST_POPULAR_SCHEMES_BY_EXTENSION.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Files_MOST_POPULAR_SCHEMES_BY_EXTENSION.Entity = null;
						previousValue.Scheme = null;
					}
					this._Files_MOST_POPULAR_SCHEMES_BY_EXTENSION.Entity = value;
					if ((value != null))
					{
						value.Scheme = this;
					}
					this.SendPropertyChanged("Files_MOST_POPULAR_SCHEMES_BY_EXTENSION");
				}
			}
		}
		
		[Association(Name="Scheme_Files_MOST_POPULAR_SCHEMES_BY_HOST", Storage="_Files_MOST_POPULAR_SCHEMES_BY_HOST", ThisKey="ID", OtherKey="SchemeID", IsUnique=true, IsForeignKey=false)]
		public Files_MOST_POPULAR_SCHEMES_BY_HOST Files_MOST_POPULAR_SCHEMES_BY_HOST
		{
			get
			{
				return this._Files_MOST_POPULAR_SCHEMES_BY_HOST.Entity;
			}
			set
			{
				Files_MOST_POPULAR_SCHEMES_BY_HOST previousValue = this._Files_MOST_POPULAR_SCHEMES_BY_HOST.Entity;
				if (((previousValue != value) 
							|| (this._Files_MOST_POPULAR_SCHEMES_BY_HOST.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Files_MOST_POPULAR_SCHEMES_BY_HOST.Entity = null;
						previousValue.Scheme = null;
					}
					this._Files_MOST_POPULAR_SCHEMES_BY_HOST.Entity = value;
					if ((value != null))
					{
						value.Scheme = this;
					}
					this.SendPropertyChanged("Files_MOST_POPULAR_SCHEMES_BY_HOST");
				}
			}
		}
		
		[Association(Name="Scheme_HyperLinks_MOST_POPULAR_SCHEMES_BY_SCHEME", Storage="_HyperLinks_MOST_POPULAR_SCHEMES_BY_SCHEME", ThisKey="ID", OtherKey="SchemeID", IsUnique=true, IsForeignKey=false)]
		public HyperLinks_MOST_POPULAR_SCHEMES_BY_SCHEME HyperLinks_MOST_POPULAR_SCHEMES_BY_SCHEME
		{
			get
			{
				return this._HyperLinks_MOST_POPULAR_SCHEMES_BY_SCHEME.Entity;
			}
			set
			{
				HyperLinks_MOST_POPULAR_SCHEMES_BY_SCHEME previousValue = this._HyperLinks_MOST_POPULAR_SCHEMES_BY_SCHEME.Entity;
				if (((previousValue != value) 
							|| (this._HyperLinks_MOST_POPULAR_SCHEMES_BY_SCHEME.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._HyperLinks_MOST_POPULAR_SCHEMES_BY_SCHEME.Entity = null;
						previousValue.Scheme = null;
					}
					this._HyperLinks_MOST_POPULAR_SCHEMES_BY_SCHEME.Entity = value;
					if ((value != null))
					{
						value.Scheme = this;
					}
					this.SendPropertyChanged("HyperLinks_MOST_POPULAR_SCHEMES_BY_SCHEME");
				}
			}
		}
		
		[Association(Name="Scheme_HyperLinks_COUNT_BY_SCHEME", Storage="_HyperLinks_COUNT_BY_SCHEME", ThisKey="ID", OtherKey="SchemeID", IsUnique=true, IsForeignKey=false)]
		public HyperLinks_COUNT_BY_SCHEME HyperLinks_COUNT_BY_SCHEME
		{
			get
			{
				return this._HyperLinks_COUNT_BY_SCHEME.Entity;
			}
			set
			{
				HyperLinks_COUNT_BY_SCHEME previousValue = this._HyperLinks_COUNT_BY_SCHEME.Entity;
				if (((previousValue != value) 
							|| (this._HyperLinks_COUNT_BY_SCHEME.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._HyperLinks_COUNT_BY_SCHEME.Entity = null;
						previousValue.Scheme = null;
					}
					this._HyperLinks_COUNT_BY_SCHEME.Entity = value;
					if ((value != null))
					{
						value.Scheme = this;
					}
					this.SendPropertyChanged("HyperLinks_COUNT_BY_SCHEME");
				}
			}
		}
		
		[Association(Name="Scheme_HyperLinks_MOST_POPULAR_SCHEMES_BY_ABSOLUTEURI", Storage="_HyperLinks_MOST_POPULAR_SCHEMES_BY_ABSOLUTEURI", ThisKey="ID", OtherKey="SchemeID", IsUnique=true, IsForeignKey=false)]
		public HyperLinks_MOST_POPULAR_SCHEMES_BY_ABSOLUTEURI HyperLinks_MOST_POPULAR_SCHEMES_BY_ABSOLUTEURI
		{
			get
			{
				return this._HyperLinks_MOST_POPULAR_SCHEMES_BY_ABSOLUTEURI.Entity;
			}
			set
			{
				HyperLinks_MOST_POPULAR_SCHEMES_BY_ABSOLUTEURI previousValue = this._HyperLinks_MOST_POPULAR_SCHEMES_BY_ABSOLUTEURI.Entity;
				if (((previousValue != value) 
							|| (this._HyperLinks_MOST_POPULAR_SCHEMES_BY_ABSOLUTEURI.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._HyperLinks_MOST_POPULAR_SCHEMES_BY_ABSOLUTEURI.Entity = null;
						previousValue.Scheme = null;
					}
					this._HyperLinks_MOST_POPULAR_SCHEMES_BY_ABSOLUTEURI.Entity = value;
					if ((value != null))
					{
						value.Scheme = this;
					}
					this.SendPropertyChanged("HyperLinks_MOST_POPULAR_SCHEMES_BY_ABSOLUTEURI");
				}
			}
		}
		
		[Association(Name="Scheme_HyperLinks_MOST_POPULAR_SCHEMES_BY_DOMAIN", Storage="_HyperLinks_MOST_POPULAR_SCHEMES_BY_DOMAIN", ThisKey="ID", OtherKey="SchemeID", IsUnique=true, IsForeignKey=false)]
		public HyperLinks_MOST_POPULAR_SCHEMES_BY_DOMAIN HyperLinks_MOST_POPULAR_SCHEMES_BY_DOMAIN
		{
			get
			{
				return this._HyperLinks_MOST_POPULAR_SCHEMES_BY_DOMAIN.Entity;
			}
			set
			{
				HyperLinks_MOST_POPULAR_SCHEMES_BY_DOMAIN previousValue = this._HyperLinks_MOST_POPULAR_SCHEMES_BY_DOMAIN.Entity;
				if (((previousValue != value) 
							|| (this._HyperLinks_MOST_POPULAR_SCHEMES_BY_DOMAIN.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._HyperLinks_MOST_POPULAR_SCHEMES_BY_DOMAIN.Entity = null;
						previousValue.Scheme = null;
					}
					this._HyperLinks_MOST_POPULAR_SCHEMES_BY_DOMAIN.Entity = value;
					if ((value != null))
					{
						value.Scheme = this;
					}
					this.SendPropertyChanged("HyperLinks_MOST_POPULAR_SCHEMES_BY_DOMAIN");
				}
			}
		}
		
		[Association(Name="Scheme_HyperLinks_MOST_POPULAR_SCHEMES_BY_EXTENSION", Storage="_HyperLinks_MOST_POPULAR_SCHEMES_BY_EXTENSION", ThisKey="ID", OtherKey="SchemeID", IsUnique=true, IsForeignKey=false)]
		public HyperLinks_MOST_POPULAR_SCHEMES_BY_EXTENSION HyperLinks_MOST_POPULAR_SCHEMES_BY_EXTENSION
		{
			get
			{
				return this._HyperLinks_MOST_POPULAR_SCHEMES_BY_EXTENSION.Entity;
			}
			set
			{
				HyperLinks_MOST_POPULAR_SCHEMES_BY_EXTENSION previousValue = this._HyperLinks_MOST_POPULAR_SCHEMES_BY_EXTENSION.Entity;
				if (((previousValue != value) 
							|| (this._HyperLinks_MOST_POPULAR_SCHEMES_BY_EXTENSION.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._HyperLinks_MOST_POPULAR_SCHEMES_BY_EXTENSION.Entity = null;
						previousValue.Scheme = null;
					}
					this._HyperLinks_MOST_POPULAR_SCHEMES_BY_EXTENSION.Entity = value;
					if ((value != null))
					{
						value.Scheme = this;
					}
					this.SendPropertyChanged("HyperLinks_MOST_POPULAR_SCHEMES_BY_EXTENSION");
				}
			}
		}
		
		[Association(Name="Scheme_HyperLinks_MOST_POPULAR_SCHEMES_BY_HOST", Storage="_HyperLinks_MOST_POPULAR_SCHEMES_BY_HOST", ThisKey="ID", OtherKey="SchemeID", IsUnique=true, IsForeignKey=false)]
		public HyperLinks_MOST_POPULAR_SCHEMES_BY_HOST HyperLinks_MOST_POPULAR_SCHEMES_BY_HOST
		{
			get
			{
				return this._HyperLinks_MOST_POPULAR_SCHEMES_BY_HOST.Entity;
			}
			set
			{
				HyperLinks_MOST_POPULAR_SCHEMES_BY_HOST previousValue = this._HyperLinks_MOST_POPULAR_SCHEMES_BY_HOST.Entity;
				if (((previousValue != value) 
							|| (this._HyperLinks_MOST_POPULAR_SCHEMES_BY_HOST.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._HyperLinks_MOST_POPULAR_SCHEMES_BY_HOST.Entity = null;
						previousValue.Scheme = null;
					}
					this._HyperLinks_MOST_POPULAR_SCHEMES_BY_HOST.Entity = value;
					if ((value != null))
					{
						value.Scheme = this;
					}
					this.SendPropertyChanged("HyperLinks_MOST_POPULAR_SCHEMES_BY_HOST");
				}
			}
		}
		
		[Association(Name="Scheme_WebPages_COUNT_BY_SCHEME", Storage="_WebPages_COUNT_BY_SCHEME", ThisKey="Scheme1", OtherKey="Scheme", IsUnique=true, IsForeignKey=false)]
		public WebPages_COUNT_BY_SCHEME WebPages_COUNT_BY_SCHEME
		{
			get
			{
				return this._WebPages_COUNT_BY_SCHEME.Entity;
			}
			set
			{
				WebPages_COUNT_BY_SCHEME previousValue = this._WebPages_COUNT_BY_SCHEME.Entity;
				if (((previousValue != value) 
							|| (this._WebPages_COUNT_BY_SCHEME.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._WebPages_COUNT_BY_SCHEME.Entity = null;
						previousValue.Scheme1 = null;
					}
					this._WebPages_COUNT_BY_SCHEME.Entity = value;
					if ((value != null))
					{
						value.Scheme1 = this;
					}
					this.SendPropertyChanged("WebPages_COUNT_BY_SCHEME");
				}
			}
		}
		
		[Association(Name="Scheme_Images_COUNT_BY_SCHEME", Storage="_Images_COUNT_BY_SCHEME", ThisKey="ID", OtherKey="SchemeID", IsUnique=true, IsForeignKey=false)]
		public Images_COUNT_BY_SCHEME Images_COUNT_BY_SCHEME
		{
			get
			{
				return this._Images_COUNT_BY_SCHEME.Entity;
			}
			set
			{
				Images_COUNT_BY_SCHEME previousValue = this._Images_COUNT_BY_SCHEME.Entity;
				if (((previousValue != value) 
							|| (this._Images_COUNT_BY_SCHEME.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Images_COUNT_BY_SCHEME.Entity = null;
						previousValue.Scheme = null;
					}
					this._Images_COUNT_BY_SCHEME.Entity = value;
					if ((value != null))
					{
						value.Scheme = this;
					}
					this.SendPropertyChanged("Images_COUNT_BY_SCHEME");
				}
			}
		}
		
		[Association(Name="Scheme_Images_MOST_POPULAR_SCHEMES_BY_ABSOLUTEURI", Storage="_Images_MOST_POPULAR_SCHEMES_BY_ABSOLUTEURI", ThisKey="ID", OtherKey="SchemeID", IsUnique=true, IsForeignKey=false)]
		public Images_MOST_POPULAR_SCHEMES_BY_ABSOLUTEURI Images_MOST_POPULAR_SCHEMES_BY_ABSOLUTEURI
		{
			get
			{
				return this._Images_MOST_POPULAR_SCHEMES_BY_ABSOLUTEURI.Entity;
			}
			set
			{
				Images_MOST_POPULAR_SCHEMES_BY_ABSOLUTEURI previousValue = this._Images_MOST_POPULAR_SCHEMES_BY_ABSOLUTEURI.Entity;
				if (((previousValue != value) 
							|| (this._Images_MOST_POPULAR_SCHEMES_BY_ABSOLUTEURI.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Images_MOST_POPULAR_SCHEMES_BY_ABSOLUTEURI.Entity = null;
						previousValue.Scheme = null;
					}
					this._Images_MOST_POPULAR_SCHEMES_BY_ABSOLUTEURI.Entity = value;
					if ((value != null))
					{
						value.Scheme = this;
					}
					this.SendPropertyChanged("Images_MOST_POPULAR_SCHEMES_BY_ABSOLUTEURI");
				}
			}
		}
		
		[Association(Name="Scheme_Images_MOST_POPULAR_SCHEMES_BY_DOMAIN", Storage="_Images_MOST_POPULAR_SCHEMES_BY_DOMAIN", ThisKey="ID", OtherKey="SchemeID", IsUnique=true, IsForeignKey=false)]
		public Images_MOST_POPULAR_SCHEMES_BY_DOMAIN Images_MOST_POPULAR_SCHEMES_BY_DOMAIN
		{
			get
			{
				return this._Images_MOST_POPULAR_SCHEMES_BY_DOMAIN.Entity;
			}
			set
			{
				Images_MOST_POPULAR_SCHEMES_BY_DOMAIN previousValue = this._Images_MOST_POPULAR_SCHEMES_BY_DOMAIN.Entity;
				if (((previousValue != value) 
							|| (this._Images_MOST_POPULAR_SCHEMES_BY_DOMAIN.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Images_MOST_POPULAR_SCHEMES_BY_DOMAIN.Entity = null;
						previousValue.Scheme = null;
					}
					this._Images_MOST_POPULAR_SCHEMES_BY_DOMAIN.Entity = value;
					if ((value != null))
					{
						value.Scheme = this;
					}
					this.SendPropertyChanged("Images_MOST_POPULAR_SCHEMES_BY_DOMAIN");
				}
			}
		}
		
		[Association(Name="Scheme_Images_MOST_POPULAR_SCHEMES_BY_EXTENSION", Storage="_Images_MOST_POPULAR_SCHEMES_BY_EXTENSION", ThisKey="ID", OtherKey="SchemeID", IsUnique=true, IsForeignKey=false)]
		public Images_MOST_POPULAR_SCHEMES_BY_EXTENSION Images_MOST_POPULAR_SCHEMES_BY_EXTENSION
		{
			get
			{
				return this._Images_MOST_POPULAR_SCHEMES_BY_EXTENSION.Entity;
			}
			set
			{
				Images_MOST_POPULAR_SCHEMES_BY_EXTENSION previousValue = this._Images_MOST_POPULAR_SCHEMES_BY_EXTENSION.Entity;
				if (((previousValue != value) 
							|| (this._Images_MOST_POPULAR_SCHEMES_BY_EXTENSION.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Images_MOST_POPULAR_SCHEMES_BY_EXTENSION.Entity = null;
						previousValue.Scheme = null;
					}
					this._Images_MOST_POPULAR_SCHEMES_BY_EXTENSION.Entity = value;
					if ((value != null))
					{
						value.Scheme = this;
					}
					this.SendPropertyChanged("Images_MOST_POPULAR_SCHEMES_BY_EXTENSION");
				}
			}
		}
		
		[Association(Name="Scheme_Images_MOST_POPULAR_SCHEMES_BY_HOST", Storage="_Images_MOST_POPULAR_SCHEMES_BY_HOST", ThisKey="ID", OtherKey="SchemeID", IsUnique=true, IsForeignKey=false)]
		public Images_MOST_POPULAR_SCHEMES_BY_HOST Images_MOST_POPULAR_SCHEMES_BY_HOST
		{
			get
			{
				return this._Images_MOST_POPULAR_SCHEMES_BY_HOST.Entity;
			}
			set
			{
				Images_MOST_POPULAR_SCHEMES_BY_HOST previousValue = this._Images_MOST_POPULAR_SCHEMES_BY_HOST.Entity;
				if (((previousValue != value) 
							|| (this._Images_MOST_POPULAR_SCHEMES_BY_HOST.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Images_MOST_POPULAR_SCHEMES_BY_HOST.Entity = null;
						previousValue.Scheme = null;
					}
					this._Images_MOST_POPULAR_SCHEMES_BY_HOST.Entity = value;
					if ((value != null))
					{
						value.Scheme = this;
					}
					this.SendPropertyChanged("Images_MOST_POPULAR_SCHEMES_BY_HOST");
				}
			}
		}
		
		[Association(Name="Scheme_Images_MOST_POPULAR_SCHEMES_BY_SCHEME", Storage="_Images_MOST_POPULAR_SCHEMES_BY_SCHEME", ThisKey="ID", OtherKey="SchemeID", IsUnique=true, IsForeignKey=false)]
		public Images_MOST_POPULAR_SCHEMES_BY_SCHEME Images_MOST_POPULAR_SCHEMES_BY_SCHEME
		{
			get
			{
				return this._Images_MOST_POPULAR_SCHEMES_BY_SCHEME.Entity;
			}
			set
			{
				Images_MOST_POPULAR_SCHEMES_BY_SCHEME previousValue = this._Images_MOST_POPULAR_SCHEMES_BY_SCHEME.Entity;
				if (((previousValue != value) 
							|| (this._Images_MOST_POPULAR_SCHEMES_BY_SCHEME.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Images_MOST_POPULAR_SCHEMES_BY_SCHEME.Entity = null;
						previousValue.Scheme = null;
					}
					this._Images_MOST_POPULAR_SCHEMES_BY_SCHEME.Entity = value;
					if ((value != null))
					{
						value.Scheme = this;
					}
					this.SendPropertyChanged("Images_MOST_POPULAR_SCHEMES_BY_SCHEME");
				}
			}
		}
		
		[Association(Name="Scheme_Schemes_Discovery", Storage="_Schemes_Discoveries", ThisKey="ID", OtherKey="SchemeID")]
		public EntitySet<Schemes_Discovery> Schemes_Discoveries
		{
			get
			{
				return this._Schemes_Discoveries;
			}
			set
			{
				this._Schemes_Discoveries.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Schemes_Discoveries(Schemes_Discovery entity)
		{
			this.SendPropertyChanging();
			entity.Scheme = this;
		}
		
		private void detach_Schemes_Discoveries(Schemes_Discovery entity)
		{
			this.SendPropertyChanging();
			entity.Scheme = null;
		}
	}
	
	[Table(Name="dbo.WebPages_Hosts_Discoveries")]
	public partial class WebPages_Hosts_Discovery : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _WebPageID;
		
		private int _Host_DiscoveryID;
		
		private EntityRef<Hosts_Discovery> _Hosts_Discovery;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnWebPageIDChanging(long value);
    partial void OnWebPageIDChanged();
    partial void OnHost_DiscoveryIDChanging(int value);
    partial void OnHost_DiscoveryIDChanged();
    #endregion
		
		public WebPages_Hosts_Discovery()
		{
			this._Hosts_Discovery = default(EntityRef<Hosts_Discovery>);
			OnCreated();
		}
		
		[Column(Storage="_WebPageID", DbType="BigInt NOT NULL", IsPrimaryKey=true)]
		public long WebPageID
		{
			get
			{
				return this._WebPageID;
			}
			set
			{
				if ((this._WebPageID != value))
				{
					this.OnWebPageIDChanging(value);
					this.SendPropertyChanging();
					this._WebPageID = value;
					this.SendPropertyChanged("WebPageID");
					this.OnWebPageIDChanged();
				}
			}
		}
		
		[Column(Storage="_Host_DiscoveryID", DbType="Int NOT NULL")]
		public int Host_DiscoveryID
		{
			get
			{
				return this._Host_DiscoveryID;
			}
			set
			{
				if ((this._Host_DiscoveryID != value))
				{
					if (this._Hosts_Discovery.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnHost_DiscoveryIDChanging(value);
					this.SendPropertyChanging();
					this._Host_DiscoveryID = value;
					this.SendPropertyChanged("Host_DiscoveryID");
					this.OnHost_DiscoveryIDChanged();
				}
			}
		}
		
		[Association(Name="Hosts_Discovery_WebPages_Hosts_Discovery", Storage="_Hosts_Discovery", ThisKey="Host_DiscoveryID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Hosts_Discovery Hosts_Discovery
		{
			get
			{
				return this._Hosts_Discovery.Entity;
			}
			set
			{
				Hosts_Discovery previousValue = this._Hosts_Discovery.Entity;
				if (((previousValue != value) 
							|| (this._Hosts_Discovery.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Hosts_Discovery.Entity = null;
						previousValue.WebPages_Hosts_Discoveries.Remove(this);
					}
					this._Hosts_Discovery.Entity = value;
					if ((value != null))
					{
						value.WebPages_Hosts_Discoveries.Add(this);
						this._Host_DiscoveryID = value.ID;
					}
					else
					{
						this._Host_DiscoveryID = default(int);
					}
					this.SendPropertyChanged("Hosts_Discovery");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.WebPages_Schemes_Discoveries")]
	public partial class WebPages_Schemes_Discovery : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _WebPageID;
		
		private int _Scheme_DiscoveryID;
		
		private EntityRef<Schemes_Discovery> _Schemes_Discovery;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnWebPageIDChanging(long value);
    partial void OnWebPageIDChanged();
    partial void OnScheme_DiscoveryIDChanging(int value);
    partial void OnScheme_DiscoveryIDChanged();
    #endregion
		
		public WebPages_Schemes_Discovery()
		{
			this._Schemes_Discovery = default(EntityRef<Schemes_Discovery>);
			OnCreated();
		}
		
		[Column(Storage="_WebPageID", DbType="BigInt NOT NULL", IsPrimaryKey=true)]
		public long WebPageID
		{
			get
			{
				return this._WebPageID;
			}
			set
			{
				if ((this._WebPageID != value))
				{
					this.OnWebPageIDChanging(value);
					this.SendPropertyChanging();
					this._WebPageID = value;
					this.SendPropertyChanged("WebPageID");
					this.OnWebPageIDChanged();
				}
			}
		}
		
		[Column(Storage="_Scheme_DiscoveryID", DbType="Int NOT NULL")]
		public int Scheme_DiscoveryID
		{
			get
			{
				return this._Scheme_DiscoveryID;
			}
			set
			{
				if ((this._Scheme_DiscoveryID != value))
				{
					if (this._Schemes_Discovery.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnScheme_DiscoveryIDChanging(value);
					this.SendPropertyChanging();
					this._Scheme_DiscoveryID = value;
					this.SendPropertyChanged("Scheme_DiscoveryID");
					this.OnScheme_DiscoveryIDChanged();
				}
			}
		}
		
		[Association(Name="Schemes_Discovery_WebPages_Schemes_Discovery", Storage="_Schemes_Discovery", ThisKey="Scheme_DiscoveryID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Schemes_Discovery Schemes_Discovery
		{
			get
			{
				return this._Schemes_Discovery.Entity;
			}
			set
			{
				Schemes_Discovery previousValue = this._Schemes_Discovery.Entity;
				if (((previousValue != value) 
							|| (this._Schemes_Discovery.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Schemes_Discovery.Entity = null;
						previousValue.WebPages_Schemes_Discoveries.Remove(this);
					}
					this._Schemes_Discovery.Entity = value;
					if ((value != null))
					{
						value.WebPages_Schemes_Discoveries.Add(this);
						this._Scheme_DiscoveryID = value.ID;
					}
					else
					{
						this._Scheme_DiscoveryID = default(int);
					}
					this.SendPropertyChanged("Schemes_Discovery");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	public partial class arachnode_rsp_CreateReportingStoredProceduresResult
	{
		
		private string _Column1;
		
		public arachnode_rsp_CreateReportingStoredProceduresResult()
		{
		}
		
		[Column(Storage="_Column1", DbType="NVarChar(MAX)")]
		public string Column1
		{
			get
			{
				return this._Column1;
			}
			set
			{
				if ((this._Column1 != value))
				{
					this._Column1 = value;
				}
			}
		}
	}
	
	public partial class arachnode_rsp_DisallowedAbsoluteUris_COUNT_BY_ABSOLUTEURIResult
	{
		
		private int _RowNumber;
		
		private long _DisallowedAbsoluteUriID;
		
		private string _AbsoluteUri;
		
		private int _Count;
		
		private int _Rank;
		
		private int _DenseRank;
		
		private byte _NTile;
		
		public arachnode_rsp_DisallowedAbsoluteUris_COUNT_BY_ABSOLUTEURIResult()
		{
		}
		
		[Column(Storage="_RowNumber", DbType="Int NOT NULL")]
		public int RowNumber
		{
			get
			{
				return this._RowNumber;
			}
			set
			{
				if ((this._RowNumber != value))
				{
					this._RowNumber = value;
				}
			}
		}
		
		[Column(Storage="_DisallowedAbsoluteUriID", DbType="BigInt NOT NULL")]
		public long DisallowedAbsoluteUriID
		{
			get
			{
				return this._DisallowedAbsoluteUriID;
			}
			set
			{
				if ((this._DisallowedAbsoluteUriID != value))
				{
					this._DisallowedAbsoluteUriID = value;
				}
			}
		}
		
		[Column(Storage="_AbsoluteUri", DbType="VarChar(884) NOT NULL", CanBeNull=false)]
		public string AbsoluteUri
		{
			get
			{
				return this._AbsoluteUri;
			}
			set
			{
				if ((this._AbsoluteUri != value))
				{
					this._AbsoluteUri = value;
				}
			}
		}
		
		[Column(Storage="_Count", DbType="Int NOT NULL")]
		public int Count
		{
			get
			{
				return this._Count;
			}
			set
			{
				if ((this._Count != value))
				{
					this._Count = value;
				}
			}
		}
		
		[Column(Storage="_Rank", DbType="Int NOT NULL")]
		public int Rank
		{
			get
			{
				return this._Rank;
			}
			set
			{
				if ((this._Rank != value))
				{
					this._Rank = value;
				}
			}
		}
		
		[Column(Storage="_DenseRank", DbType="Int NOT NULL")]
		public int DenseRank
		{
			get
			{
				return this._DenseRank;
			}
			set
			{
				if ((this._DenseRank != value))
				{
					this._DenseRank = value;
				}
			}
		}
		
		[Column(Storage="_NTile", DbType="TinyInt NOT NULL")]
		public byte NTile
		{
			get
			{
				return this._NTile;
			}
			set
			{
				if ((this._NTile != value))
				{
					this._NTile = value;
				}
			}
		}
	}
	
	public partial class arachnode_rsp_DisallowedAbsoluteUris_COUNT_BY_DOMAINResult
	{
		
		private int _RowNumber;
		
		private int _DomainID;
		
		private string _Domain;
		
		private int _Count;
		
		private int _Rank;
		
		private int _DenseRank;
		
		private byte _NTile;
		
		public arachnode_rsp_DisallowedAbsoluteUris_COUNT_BY_DOMAINResult()
		{
		}
		
		[Column(Storage="_RowNumber", DbType="Int NOT NULL")]
		public int RowNumber
		{
			get
			{
				return this._RowNumber;
			}
			set
			{
				if ((this._RowNumber != value))
				{
					this._RowNumber = value;
				}
			}
		}
		
		[Column(Storage="_DomainID", DbType="Int NOT NULL")]
		public int DomainID
		{
			get
			{
				return this._DomainID;
			}
			set
			{
				if ((this._DomainID != value))
				{
					this._DomainID = value;
				}
			}
		}
		
		[Column(Storage="_Domain", DbType="VarChar(884) NOT NULL", CanBeNull=false)]
		public string Domain
		{
			get
			{
				return this._Domain;
			}
			set
			{
				if ((this._Domain != value))
				{
					this._Domain = value;
				}
			}
		}
		
		[Column(Storage="_Count", DbType="Int NOT NULL")]
		public int Count
		{
			get
			{
				return this._Count;
			}
			set
			{
				if ((this._Count != value))
				{
					this._Count = value;
				}
			}
		}
		
		[Column(Storage="_Rank", DbType="Int NOT NULL")]
		public int Rank
		{
			get
			{
				return this._Rank;
			}
			set
			{
				if ((this._Rank != value))
				{
					this._Rank = value;
				}
			}
		}
		
		[Column(Storage="_DenseRank", DbType="Int NOT NULL")]
		public int DenseRank
		{
			get
			{
				return this._DenseRank;
			}
			set
			{
				if ((this._DenseRank != value))
				{
					this._DenseRank = value;
				}
			}
		}
		
		[Column(Storage="_NTile", DbType="TinyInt NOT NULL")]
		public byte NTile
		{
			get
			{
				return this._NTile;
			}
			set
			{
				if ((this._NTile != value))
				{
					this._NTile = value;
				}
			}
		}
	}
	
	public partial class arachnode_rsp_DisallowedAbsoluteUris_COUNT_BY_EXTENSIONResult
	{
		
		private int _RowNumber;
		
		private int _ExtensionID;
		
		private string _Extension;
		
		private int _Count;
		
		private int _Rank;
		
		private int _DenseRank;
		
		private byte _NTile;
		
		public arachnode_rsp_DisallowedAbsoluteUris_COUNT_BY_EXTENSIONResult()
		{
		}
		
		[Column(Storage="_RowNumber", DbType="Int NOT NULL")]
		public int RowNumber
		{
			get
			{
				return this._RowNumber;
			}
			set
			{
				if ((this._RowNumber != value))
				{
					this._RowNumber = value;
				}
			}
		}
		
		[Column(Storage="_ExtensionID", DbType="Int NOT NULL")]
		public int ExtensionID
		{
			get
			{
				return this._ExtensionID;
			}
			set
			{
				if ((this._ExtensionID != value))
				{
					this._ExtensionID = value;
				}
			}
		}
		
		[Column(Storage="_Extension", DbType="VarChar(884) NOT NULL", CanBeNull=false)]
		public string Extension
		{
			get
			{
				return this._Extension;
			}
			set
			{
				if ((this._Extension != value))
				{
					this._Extension = value;
				}
			}
		}
		
		[Column(Storage="_Count", DbType="Int NOT NULL")]
		public int Count
		{
			get
			{
				return this._Count;
			}
			set
			{
				if ((this._Count != value))
				{
					this._Count = value;
				}
			}
		}
		
		[Column(Storage="_Rank", DbType="Int NOT NULL")]
		public int Rank
		{
			get
			{
				return this._Rank;
			}
			set
			{
				if ((this._Rank != value))
				{
					this._Rank = value;
				}
			}
		}
		
		[Column(Storage="_DenseRank", DbType="Int NOT NULL")]
		public int DenseRank
		{
			get
			{
				return this._DenseRank;
			}
			set
			{
				if ((this._DenseRank != value))
				{
					this._DenseRank = value;
				}
			}
		}
		
		[Column(Storage="_NTile", DbType="TinyInt NOT NULL")]
		public byte NTile
		{
			get
			{
				return this._NTile;
			}
			set
			{
				if ((this._NTile != value))
				{
					this._NTile = value;
				}
			}
		}
	}
	
	public partial class arachnode_rsp_DisallowedAbsoluteUris_COUNT_BY_HOSTResult
	{
		
		private int _RowNumber;
		
		private int _HostID;
		
		private string _Host;
		
		private int _Count;
		
		private int _Rank;
		
		private int _DenseRank;
		
		private byte _NTile;
		
		public arachnode_rsp_DisallowedAbsoluteUris_COUNT_BY_HOSTResult()
		{
		}
		
		[Column(Storage="_RowNumber", DbType="Int NOT NULL")]
		public int RowNumber
		{
			get
			{
				return this._RowNumber;
			}
			set
			{
				if ((this._RowNumber != value))
				{
					this._RowNumber = value;
				}
			}
		}
		
		[Column(Storage="_HostID", DbType="Int NOT NULL")]
		public int HostID
		{
			get
			{
				return this._HostID;
			}
			set
			{
				if ((this._HostID != value))
				{
					this._HostID = value;
				}
			}
		}
		
		[Column(Storage="_Host", DbType="VarChar(884) NOT NULL", CanBeNull=false)]
		public string Host
		{
			get
			{
				return this._Host;
			}
			set
			{
				if ((this._Host != value))
				{
					this._Host = value;
				}
			}
		}
		
		[Column(Storage="_Count", DbType="Int NOT NULL")]
		public int Count
		{
			get
			{
				return this._Count;
			}
			set
			{
				if ((this._Count != value))
				{
					this._Count = value;
				}
			}
		}
		
		[Column(Storage="_Rank", DbType="Int NOT NULL")]
		public int Rank
		{
			get
			{
				return this._Rank;
			}
			set
			{
				if ((this._Rank != value))
				{
					this._Rank = value;
				}
			}
		}
		
		[Column(Storage="_DenseRank", DbType="Int NOT NULL")]
		public int DenseRank
		{
			get
			{
				return this._DenseRank;
			}
			set
			{
				if ((this._DenseRank != value))
				{
					this._DenseRank = value;
				}
			}
		}
		
		[Column(Storage="_NTile", DbType="TinyInt NOT NULL")]
		public byte NTile
		{
			get
			{
				return this._NTile;
			}
			set
			{
				if ((this._NTile != value))
				{
					this._NTile = value;
				}
			}
		}
	}
	
	public partial class arachnode_rsp_DisallowedAbsoluteUris_COUNT_BY_SCHEMEResult
	{
		
		private int _RowNumber;
		
		private int _SchemeID;
		
		private string _Scheme;
		
		private int _Count;
		
		private int _Rank;
		
		private int _DenseRank;
		
		private byte _NTile;
		
		public arachnode_rsp_DisallowedAbsoluteUris_COUNT_BY_SCHEMEResult()
		{
		}
		
		[Column(Storage="_RowNumber", DbType="Int NOT NULL")]
		public int RowNumber
		{
			get
			{
				return this._RowNumber;
			}
			set
			{
				if ((this._RowNumber != value))
				{
					this._RowNumber = value;
				}
			}
		}
		
		[Column(Storage="_SchemeID", DbType="Int NOT NULL")]
		public int SchemeID
		{
			get
			{
				return this._SchemeID;
			}
			set
			{
				if ((this._SchemeID != value))
				{
					this._SchemeID = value;
				}
			}
		}
		
		[Column(Storage="_Scheme", DbType="VarChar(884) NOT NULL", CanBeNull=false)]
		public string Scheme
		{
			get
			{
				return this._Scheme;
			}
			set
			{
				if ((this._Scheme != value))
				{
					this._Scheme = value;
				}
			}
		}
		
		[Column(Storage="_Count", DbType="Int NOT NULL")]
		public int Count
		{
			get
			{
				return this._Count;
			}
			set
			{
				if ((this._Count != value))
				{
					this._Count = value;
				}
			}
		}
		
		[Column(Storage="_Rank", DbType="Int NOT NULL")]
		public int Rank
		{
			get
			{
				return this._Rank;
			}
			set
			{
				if ((this._Rank != value))
				{
					this._Rank = value;
				}
			}
		}
		
		[Column(Storage="_DenseRank", DbType="Int NOT NULL")]
		public int DenseRank
		{
			get
			{
				return this._DenseRank;
			}
			set
			{
				if ((this._DenseRank != value))
				{
					this._DenseRank = value;
				}
			}
		}
		
		[Column(Storage="_NTile", DbType="TinyInt NOT NULL")]
		public byte NTile
		{
			get
			{
				return this._NTile;
			}
			set
			{
				if ((this._NTile != value))
				{
					this._NTile = value;
				}
			}
		}
	}
	
	public partial class arachnode_rsp_EmailAddresses_COUNT_BY_ABSOLUTEURIResult
	{
		
		private int _RowNumber;
		
		private long _EmailAddressID;
		
		private string _AbsoluteUri;
		
		private int _Count;
		
		private int _Rank;
		
		private int _DenseRank;
		
		private byte _NTile;
		
		public arachnode_rsp_EmailAddresses_COUNT_BY_ABSOLUTEURIResult()
		{
		}
		
		[Column(Storage="_RowNumber", DbType="Int NOT NULL")]
		public int RowNumber
		{
			get
			{
				return this._RowNumber;
			}
			set
			{
				if ((this._RowNumber != value))
				{
					this._RowNumber = value;
				}
			}
		}
		
		[Column(Storage="_EmailAddressID", DbType="BigInt NOT NULL")]
		public long EmailAddressID
		{
			get
			{
				return this._EmailAddressID;
			}
			set
			{
				if ((this._EmailAddressID != value))
				{
					this._EmailAddressID = value;
				}
			}
		}
		
		[Column(Storage="_AbsoluteUri", DbType="VarChar(884) NOT NULL", CanBeNull=false)]
		public string AbsoluteUri
		{
			get
			{
				return this._AbsoluteUri;
			}
			set
			{
				if ((this._AbsoluteUri != value))
				{
					this._AbsoluteUri = value;
				}
			}
		}
		
		[Column(Storage="_Count", DbType="Int NOT NULL")]
		public int Count
		{
			get
			{
				return this._Count;
			}
			set
			{
				if ((this._Count != value))
				{
					this._Count = value;
				}
			}
		}
		
		[Column(Storage="_Rank", DbType="Int NOT NULL")]
		public int Rank
		{
			get
			{
				return this._Rank;
			}
			set
			{
				if ((this._Rank != value))
				{
					this._Rank = value;
				}
			}
		}
		
		[Column(Storage="_DenseRank", DbType="Int NOT NULL")]
		public int DenseRank
		{
			get
			{
				return this._DenseRank;
			}
			set
			{
				if ((this._DenseRank != value))
				{
					this._DenseRank = value;
				}
			}
		}
		
		[Column(Storage="_NTile", DbType="TinyInt NOT NULL")]
		public byte NTile
		{
			get
			{
				return this._NTile;
			}
			set
			{
				if ((this._NTile != value))
				{
					this._NTile = value;
				}
			}
		}
	}
	
	public partial class arachnode_rsp_EmailAddresses_COUNT_BY_DOMAINResult
	{
		
		private int _RowNumber;
		
		private int _DomainID;
		
		private string _Domain;
		
		private int _Count;
		
		private int _Rank;
		
		private int _DenseRank;
		
		private byte _NTile;
		
		public arachnode_rsp_EmailAddresses_COUNT_BY_DOMAINResult()
		{
		}
		
		[Column(Storage="_RowNumber", DbType="Int NOT NULL")]
		public int RowNumber
		{
			get
			{
				return this._RowNumber;
			}
			set
			{
				if ((this._RowNumber != value))
				{
					this._RowNumber = value;
				}
			}
		}
		
		[Column(Storage="_DomainID", DbType="Int NOT NULL")]
		public int DomainID
		{
			get
			{
				return this._DomainID;
			}
			set
			{
				if ((this._DomainID != value))
				{
					this._DomainID = value;
				}
			}
		}
		
		[Column(Storage="_Domain", DbType="VarChar(884) NOT NULL", CanBeNull=false)]
		public string Domain
		{
			get
			{
				return this._Domain;
			}
			set
			{
				if ((this._Domain != value))
				{
					this._Domain = value;
				}
			}
		}
		
		[Column(Storage="_Count", DbType="Int NOT NULL")]
		public int Count
		{
			get
			{
				return this._Count;
			}
			set
			{
				if ((this._Count != value))
				{
					this._Count = value;
				}
			}
		}
		
		[Column(Storage="_Rank", DbType="Int NOT NULL")]
		public int Rank
		{
			get
			{
				return this._Rank;
			}
			set
			{
				if ((this._Rank != value))
				{
					this._Rank = value;
				}
			}
		}
		
		[Column(Storage="_DenseRank", DbType="Int NOT NULL")]
		public int DenseRank
		{
			get
			{
				return this._DenseRank;
			}
			set
			{
				if ((this._DenseRank != value))
				{
					this._DenseRank = value;
				}
			}
		}
		
		[Column(Storage="_NTile", DbType="TinyInt NOT NULL")]
		public byte NTile
		{
			get
			{
				return this._NTile;
			}
			set
			{
				if ((this._NTile != value))
				{
					this._NTile = value;
				}
			}
		}
	}
	
	public partial class arachnode_rsp_EmailAddresses_COUNT_BY_EXTENSIONResult
	{
		
		private int _RowNumber;
		
		private int _ExtensionID;
		
		private string _Extension;
		
		private int _Count;
		
		private int _Rank;
		
		private int _DenseRank;
		
		private byte _NTile;
		
		public arachnode_rsp_EmailAddresses_COUNT_BY_EXTENSIONResult()
		{
		}
		
		[Column(Storage="_RowNumber", DbType="Int NOT NULL")]
		public int RowNumber
		{
			get
			{
				return this._RowNumber;
			}
			set
			{
				if ((this._RowNumber != value))
				{
					this._RowNumber = value;
				}
			}
		}
		
		[Column(Storage="_ExtensionID", DbType="Int NOT NULL")]
		public int ExtensionID
		{
			get
			{
				return this._ExtensionID;
			}
			set
			{
				if ((this._ExtensionID != value))
				{
					this._ExtensionID = value;
				}
			}
		}
		
		[Column(Storage="_Extension", DbType="VarChar(884) NOT NULL", CanBeNull=false)]
		public string Extension
		{
			get
			{
				return this._Extension;
			}
			set
			{
				if ((this._Extension != value))
				{
					this._Extension = value;
				}
			}
		}
		
		[Column(Storage="_Count", DbType="Int NOT NULL")]
		public int Count
		{
			get
			{
				return this._Count;
			}
			set
			{
				if ((this._Count != value))
				{
					this._Count = value;
				}
			}
		}
		
		[Column(Storage="_Rank", DbType="Int NOT NULL")]
		public int Rank
		{
			get
			{
				return this._Rank;
			}
			set
			{
				if ((this._Rank != value))
				{
					this._Rank = value;
				}
			}
		}
		
		[Column(Storage="_DenseRank", DbType="Int NOT NULL")]
		public int DenseRank
		{
			get
			{
				return this._DenseRank;
			}
			set
			{
				if ((this._DenseRank != value))
				{
					this._DenseRank = value;
				}
			}
		}
		
		[Column(Storage="_NTile", DbType="TinyInt NOT NULL")]
		public byte NTile
		{
			get
			{
				return this._NTile;
			}
			set
			{
				if ((this._NTile != value))
				{
					this._NTile = value;
				}
			}
		}
	}
	
	public partial class arachnode_rsp_EmailAddresses_COUNT_BY_HOSTResult
	{
		
		private int _RowNumber;
		
		private int _HostID;
		
		private string _Host;
		
		private int _Count;
		
		private int _Rank;
		
		private int _DenseRank;
		
		private byte _NTile;
		
		public arachnode_rsp_EmailAddresses_COUNT_BY_HOSTResult()
		{
		}
		
		[Column(Storage="_RowNumber", DbType="Int NOT NULL")]
		public int RowNumber
		{
			get
			{
				return this._RowNumber;
			}
			set
			{
				if ((this._RowNumber != value))
				{
					this._RowNumber = value;
				}
			}
		}
		
		[Column(Storage="_HostID", DbType="Int NOT NULL")]
		public int HostID
		{
			get
			{
				return this._HostID;
			}
			set
			{
				if ((this._HostID != value))
				{
					this._HostID = value;
				}
			}
		}
		
		[Column(Storage="_Host", DbType="VarChar(884) NOT NULL", CanBeNull=false)]
		public string Host
		{
			get
			{
				return this._Host;
			}
			set
			{
				if ((this._Host != value))
				{
					this._Host = value;
				}
			}
		}
		
		[Column(Storage="_Count", DbType="Int NOT NULL")]
		public int Count
		{
			get
			{
				return this._Count;
			}
			set
			{
				if ((this._Count != value))
				{
					this._Count = value;
				}
			}
		}
		
		[Column(Storage="_Rank", DbType="Int NOT NULL")]
		public int Rank
		{
			get
			{
				return this._Rank;
			}
			set
			{
				if ((this._Rank != value))
				{
					this._Rank = value;
				}
			}
		}
		
		[Column(Storage="_DenseRank", DbType="Int NOT NULL")]
		public int DenseRank
		{
			get
			{
				return this._DenseRank;
			}
			set
			{
				if ((this._DenseRank != value))
				{
					this._DenseRank = value;
				}
			}
		}
		
		[Column(Storage="_NTile", DbType="TinyInt NOT NULL")]
		public byte NTile
		{
			get
			{
				return this._NTile;
			}
			set
			{
				if ((this._NTile != value))
				{
					this._NTile = value;
				}
			}
		}
	}
	
	public partial class arachnode_rsp_EmailAddresses_COUNT_BY_SCHEMEResult
	{
		
		private int _RowNumber;
		
		private int _SchemeID;
		
		private string _Scheme;
		
		private int _Count;
		
		private int _Rank;
		
		private int _DenseRank;
		
		private byte _NTile;
		
		public arachnode_rsp_EmailAddresses_COUNT_BY_SCHEMEResult()
		{
		}
		
		[Column(Storage="_RowNumber", DbType="Int NOT NULL")]
		public int RowNumber
		{
			get
			{
				return this._RowNumber;
			}
			set
			{
				if ((this._RowNumber != value))
				{
					this._RowNumber = value;
				}
			}
		}
		
		[Column(Storage="_SchemeID", DbType="Int NOT NULL")]
		public int SchemeID
		{
			get
			{
				return this._SchemeID;
			}
			set
			{
				if ((this._SchemeID != value))
				{
					this._SchemeID = value;
				}
			}
		}
		
		[Column(Storage="_Scheme", DbType="VarChar(884) NOT NULL", CanBeNull=false)]
		public string Scheme
		{
			get
			{
				return this._Scheme;
			}
			set
			{
				if ((this._Scheme != value))
				{
					this._Scheme = value;
				}
			}
		}
		
		[Column(Storage="_Count", DbType="Int NOT NULL")]
		public int Count
		{
			get
			{
				return this._Count;
			}
			set
			{
				if ((this._Count != value))
				{
					this._Count = value;
				}
			}
		}
		
		[Column(Storage="_Rank", DbType="Int NOT NULL")]
		public int Rank
		{
			get
			{
				return this._Rank;
			}
			set
			{
				if ((this._Rank != value))
				{
					this._Rank = value;
				}
			}
		}
		
		[Column(Storage="_DenseRank", DbType="Int NOT NULL")]
		public int DenseRank
		{
			get
			{
				return this._DenseRank;
			}
			set
			{
				if ((this._DenseRank != value))
				{
					this._DenseRank = value;
				}
			}
		}
		
		[Column(Storage="_NTile", DbType="TinyInt NOT NULL")]
		public byte NTile
		{
			get
			{
				return this._NTile;
			}
			set
			{
				if ((this._NTile != value))
				{
					this._NTile = value;
				}
			}
		}
	}
	
	public partial class arachnode_rsp_Exceptions_COUNT_BY_ABSOLUTEURI1Result
	{
		
		private int _RowNumber;
		
		private System.DateTime _InitiallyCreated;
		
		private System.DateTime _LastCreated;
		
		private string _AbsoluteUri1;
		
		private int _Count;
		
		private short _DaysSinceInitiallyDiscovered;
		
		private short _DaysSinceLastDiscovered;
		
		private double _Strength;
		
		private int _Rank;
		
		private int _DenseRank;
		
		private byte _NTile;
		
		public arachnode_rsp_Exceptions_COUNT_BY_ABSOLUTEURI1Result()
		{
		}
		
		[Column(Storage="_RowNumber", DbType="Int NOT NULL")]
		public int RowNumber
		{
			get
			{
				return this._RowNumber;
			}
			set
			{
				if ((this._RowNumber != value))
				{
					this._RowNumber = value;
				}
			}
		}
		
		[Column(Storage="_InitiallyCreated", DbType="DateTime NOT NULL")]
		public System.DateTime InitiallyCreated
		{
			get
			{
				return this._InitiallyCreated;
			}
			set
			{
				if ((this._InitiallyCreated != value))
				{
					this._InitiallyCreated = value;
				}
			}
		}
		
		[Column(Storage="_LastCreated", DbType="DateTime NOT NULL")]
		public System.DateTime LastCreated
		{
			get
			{
				return this._LastCreated;
			}
			set
			{
				if ((this._LastCreated != value))
				{
					this._LastCreated = value;
				}
			}
		}
		
		[Column(Storage="_AbsoluteUri1", DbType="VarChar(884)")]
		public string AbsoluteUri1
		{
			get
			{
				return this._AbsoluteUri1;
			}
			set
			{
				if ((this._AbsoluteUri1 != value))
				{
					this._AbsoluteUri1 = value;
				}
			}
		}
		
		[Column(Storage="_Count", DbType="Int NOT NULL")]
		public int Count
		{
			get
			{
				return this._Count;
			}
			set
			{
				if ((this._Count != value))
				{
					this._Count = value;
				}
			}
		}
		
		[Column(Storage="_DaysSinceInitiallyDiscovered", DbType="SmallInt NOT NULL")]
		public short DaysSinceInitiallyDiscovered
		{
			get
			{
				return this._DaysSinceInitiallyDiscovered;
			}
			set
			{
				if ((this._DaysSinceInitiallyDiscovered != value))
				{
					this._DaysSinceInitiallyDiscovered = value;
				}
			}
		}
		
		[Column(Storage="_DaysSinceLastDiscovered", DbType="SmallInt NOT NULL")]
		public short DaysSinceLastDiscovered
		{
			get
			{
				return this._DaysSinceLastDiscovered;
			}
			set
			{
				if ((this._DaysSinceLastDiscovered != value))
				{
					this._DaysSinceLastDiscovered = value;
				}
			}
		}
		
		[Column(Storage="_Strength", DbType="Float NOT NULL")]
		public double Strength
		{
			get
			{
				return this._Strength;
			}
			set
			{
				if ((this._Strength != value))
				{
					this._Strength = value;
				}
			}
		}
		
		[Column(Storage="_Rank", DbType="Int NOT NULL")]
		public int Rank
		{
			get
			{
				return this._Rank;
			}
			set
			{
				if ((this._Rank != value))
				{
					this._Rank = value;
				}
			}
		}
		
		[Column(Storage="_DenseRank", DbType="Int NOT NULL")]
		public int DenseRank
		{
			get
			{
				return this._DenseRank;
			}
			set
			{
				if ((this._DenseRank != value))
				{
					this._DenseRank = value;
				}
			}
		}
		
		[Column(Storage="_NTile", DbType="TinyInt NOT NULL")]
		public byte NTile
		{
			get
			{
				return this._NTile;
			}
			set
			{
				if ((this._NTile != value))
				{
					this._NTile = value;
				}
			}
		}
	}
	
	public partial class arachnode_rsp_Exceptions_COUNT_BY_ABSOLUTEURI2Result
	{
		
		private int _RowNumber;
		
		private System.DateTime _InitiallyCreated;
		
		private System.DateTime _LastCreated;
		
		private string _AbsoluteUri2;
		
		private int _Count;
		
		private short _DaysSinceInitiallyDiscovered;
		
		private short _DaysSinceLastDiscovered;
		
		private double _Strength;
		
		private int _Rank;
		
		private int _DenseRank;
		
		private byte _NTile;
		
		public arachnode_rsp_Exceptions_COUNT_BY_ABSOLUTEURI2Result()
		{
		}
		
		[Column(Storage="_RowNumber", DbType="Int NOT NULL")]
		public int RowNumber
		{
			get
			{
				return this._RowNumber;
			}
			set
			{
				if ((this._RowNumber != value))
				{
					this._RowNumber = value;
				}
			}
		}
		
		[Column(Storage="_InitiallyCreated", DbType="DateTime NOT NULL")]
		public System.DateTime InitiallyCreated
		{
			get
			{
				return this._InitiallyCreated;
			}
			set
			{
				if ((this._InitiallyCreated != value))
				{
					this._InitiallyCreated = value;
				}
			}
		}
		
		[Column(Storage="_LastCreated", DbType="DateTime NOT NULL")]
		public System.DateTime LastCreated
		{
			get
			{
				return this._LastCreated;
			}
			set
			{
				if ((this._LastCreated != value))
				{
					this._LastCreated = value;
				}
			}
		}
		
		[Column(Storage="_AbsoluteUri2", DbType="VarChar(884)")]
		public string AbsoluteUri2
		{
			get
			{
				return this._AbsoluteUri2;
			}
			set
			{
				if ((this._AbsoluteUri2 != value))
				{
					this._AbsoluteUri2 = value;
				}
			}
		}
		
		[Column(Storage="_Count", DbType="Int NOT NULL")]
		public int Count
		{
			get
			{
				return this._Count;
			}
			set
			{
				if ((this._Count != value))
				{
					this._Count = value;
				}
			}
		}
		
		[Column(Storage="_DaysSinceInitiallyDiscovered", DbType="SmallInt NOT NULL")]
		public short DaysSinceInitiallyDiscovered
		{
			get
			{
				return this._DaysSinceInitiallyDiscovered;
			}
			set
			{
				if ((this._DaysSinceInitiallyDiscovered != value))
				{
					this._DaysSinceInitiallyDiscovered = value;
				}
			}
		}
		
		[Column(Storage="_DaysSinceLastDiscovered", DbType="SmallInt NOT NULL")]
		public short DaysSinceLastDiscovered
		{
			get
			{
				return this._DaysSinceLastDiscovered;
			}
			set
			{
				if ((this._DaysSinceLastDiscovered != value))
				{
					this._DaysSinceLastDiscovered = value;
				}
			}
		}
		
		[Column(Storage="_Strength", DbType="Float NOT NULL")]
		public double Strength
		{
			get
			{
				return this._Strength;
			}
			set
			{
				if ((this._Strength != value))
				{
					this._Strength = value;
				}
			}
		}
		
		[Column(Storage="_Rank", DbType="Int NOT NULL")]
		public int Rank
		{
			get
			{
				return this._Rank;
			}
			set
			{
				if ((this._Rank != value))
				{
					this._Rank = value;
				}
			}
		}
		
		[Column(Storage="_DenseRank", DbType="Int NOT NULL")]
		public int DenseRank
		{
			get
			{
				return this._DenseRank;
			}
			set
			{
				if ((this._DenseRank != value))
				{
					this._DenseRank = value;
				}
			}
		}
		
		[Column(Storage="_NTile", DbType="TinyInt NOT NULL")]
		public byte NTile
		{
			get
			{
				return this._NTile;
			}
			set
			{
				if ((this._NTile != value))
				{
					this._NTile = value;
				}
			}
		}
	}
	
	public partial class arachnode_rsp_Exceptions_COUNT_BY_ABSOLUTEURISResult
	{
		
		private int _RowNumber;
		
		private System.DateTime _InitiallyCreated;
		
		private System.DateTime _LastCreated;
		
		private string _AbsoluteUri1;
		
		private string _AbsoluteUri2;
		
		private int _Count;
		
		private short _DaysSinceInitiallyDiscovered;
		
		private short _DaysSinceLastDiscovered;
		
		private double _Strength;
		
		private int _Rank;
		
		private int _DenseRank;
		
		private byte _NTile;
		
		public arachnode_rsp_Exceptions_COUNT_BY_ABSOLUTEURISResult()
		{
		}
		
		[Column(Storage="_RowNumber", DbType="Int NOT NULL")]
		public int RowNumber
		{
			get
			{
				return this._RowNumber;
			}
			set
			{
				if ((this._RowNumber != value))
				{
					this._RowNumber = value;
				}
			}
		}
		
		[Column(Storage="_InitiallyCreated", DbType="DateTime NOT NULL")]
		public System.DateTime InitiallyCreated
		{
			get
			{
				return this._InitiallyCreated;
			}
			set
			{
				if ((this._InitiallyCreated != value))
				{
					this._InitiallyCreated = value;
				}
			}
		}
		
		[Column(Storage="_LastCreated", DbType="DateTime NOT NULL")]
		public System.DateTime LastCreated
		{
			get
			{
				return this._LastCreated;
			}
			set
			{
				if ((this._LastCreated != value))
				{
					this._LastCreated = value;
				}
			}
		}
		
		[Column(Storage="_AbsoluteUri1", DbType="VarChar(884)")]
		public string AbsoluteUri1
		{
			get
			{
				return this._AbsoluteUri1;
			}
			set
			{
				if ((this._AbsoluteUri1 != value))
				{
					this._AbsoluteUri1 = value;
				}
			}
		}
		
		[Column(Storage="_AbsoluteUri2", DbType="VarChar(884)")]
		public string AbsoluteUri2
		{
			get
			{
				return this._AbsoluteUri2;
			}
			set
			{
				if ((this._AbsoluteUri2 != value))
				{
					this._AbsoluteUri2 = value;
				}
			}
		}
		
		[Column(Storage="_Count", DbType="Int NOT NULL")]
		public int Count
		{
			get
			{
				return this._Count;
			}
			set
			{
				if ((this._Count != value))
				{
					this._Count = value;
				}
			}
		}
		
		[Column(Storage="_DaysSinceInitiallyDiscovered", DbType="SmallInt NOT NULL")]
		public short DaysSinceInitiallyDiscovered
		{
			get
			{
				return this._DaysSinceInitiallyDiscovered;
			}
			set
			{
				if ((this._DaysSinceInitiallyDiscovered != value))
				{
					this._DaysSinceInitiallyDiscovered = value;
				}
			}
		}
		
		[Column(Storage="_DaysSinceLastDiscovered", DbType="SmallInt NOT NULL")]
		public short DaysSinceLastDiscovered
		{
			get
			{
				return this._DaysSinceLastDiscovered;
			}
			set
			{
				if ((this._DaysSinceLastDiscovered != value))
				{
					this._DaysSinceLastDiscovered = value;
				}
			}
		}
		
		[Column(Storage="_Strength", DbType="Float NOT NULL")]
		public double Strength
		{
			get
			{
				return this._Strength;
			}
			set
			{
				if ((this._Strength != value))
				{
					this._Strength = value;
				}
			}
		}
		
		[Column(Storage="_Rank", DbType="Int NOT NULL")]
		public int Rank
		{
			get
			{
				return this._Rank;
			}
			set
			{
				if ((this._Rank != value))
				{
					this._Rank = value;
				}
			}
		}
		
		[Column(Storage="_DenseRank", DbType="Int NOT NULL")]
		public int DenseRank
		{
			get
			{
				return this._DenseRank;
			}
			set
			{
				if ((this._DenseRank != value))
				{
					this._DenseRank = value;
				}
			}
		}
		
		[Column(Storage="_NTile", DbType="TinyInt NOT NULL")]
		public byte NTile
		{
			get
			{
				return this._NTile;
			}
			set
			{
				if ((this._NTile != value))
				{
					this._NTile = value;
				}
			}
		}
	}
	
	public partial class arachnode_rsp_Exceptions_COUNT_BY_DOMAIN1Result
	{
		
		private short _RowNumber;
		
		private System.DateTime _InitiallyCreated;
		
		private System.DateTime _LastCreated;
		
		private string _Domain1;
		
		private int _Count;
		
		private short _DaysSinceInitiallyDiscovered;
		
		private short _DaysSinceLastDiscovered;
		
		private double _Strength;
		
		private short _Rank;
		
		private short _DenseRank;
		
		private byte _NTile;
		
		public arachnode_rsp_Exceptions_COUNT_BY_DOMAIN1Result()
		{
		}
		
		[Column(Storage="_RowNumber", DbType="SmallInt NOT NULL")]
		public short RowNumber
		{
			get
			{
				return this._RowNumber;
			}
			set
			{
				if ((this._RowNumber != value))
				{
					this._RowNumber = value;
				}
			}
		}
		
		[Column(Storage="_InitiallyCreated", DbType="DateTime NOT NULL")]
		public System.DateTime InitiallyCreated
		{
			get
			{
				return this._InitiallyCreated;
			}
			set
			{
				if ((this._InitiallyCreated != value))
				{
					this._InitiallyCreated = value;
				}
			}
		}
		
		[Column(Storage="_LastCreated", DbType="DateTime NOT NULL")]
		public System.DateTime LastCreated
		{
			get
			{
				return this._LastCreated;
			}
			set
			{
				if ((this._LastCreated != value))
				{
					this._LastCreated = value;
				}
			}
		}
		
		[Column(Storage="_Domain1", DbType="VarChar(884) NOT NULL", CanBeNull=false)]
		public string Domain1
		{
			get
			{
				return this._Domain1;
			}
			set
			{
				if ((this._Domain1 != value))
				{
					this._Domain1 = value;
				}
			}
		}
		
		[Column(Storage="_Count", DbType="Int NOT NULL")]
		public int Count
		{
			get
			{
				return this._Count;
			}
			set
			{
				if ((this._Count != value))
				{
					this._Count = value;
				}
			}
		}
		
		[Column(Storage="_DaysSinceInitiallyDiscovered", DbType="SmallInt NOT NULL")]
		public short DaysSinceInitiallyDiscovered
		{
			get
			{
				return this._DaysSinceInitiallyDiscovered;
			}
			set
			{
				if ((this._DaysSinceInitiallyDiscovered != value))
				{
					this._DaysSinceInitiallyDiscovered = value;
				}
			}
		}
		
		[Column(Storage="_DaysSinceLastDiscovered", DbType="SmallInt NOT NULL")]
		public short DaysSinceLastDiscovered
		{
			get
			{
				return this._DaysSinceLastDiscovered;
			}
			set
			{
				if ((this._DaysSinceLastDiscovered != value))
				{
					this._DaysSinceLastDiscovered = value;
				}
			}
		}
		
		[Column(Storage="_Strength", DbType="Float NOT NULL")]
		public double Strength
		{
			get
			{
				return this._Strength;
			}
			set
			{
				if ((this._Strength != value))
				{
					this._Strength = value;
				}
			}
		}
		
		[Column(Storage="_Rank", DbType="SmallInt NOT NULL")]
		public short Rank
		{
			get
			{
				return this._Rank;
			}
			set
			{
				if ((this._Rank != value))
				{
					this._Rank = value;
				}
			}
		}
		
		[Column(Storage="_DenseRank", DbType="SmallInt NOT NULL")]
		public short DenseRank
		{
			get
			{
				return this._DenseRank;
			}
			set
			{
				if ((this._DenseRank != value))
				{
					this._DenseRank = value;
				}
			}
		}
		
		[Column(Storage="_NTile", DbType="TinyInt NOT NULL")]
		public byte NTile
		{
			get
			{
				return this._NTile;
			}
			set
			{
				if ((this._NTile != value))
				{
					this._NTile = value;
				}
			}
		}
	}
	
	public partial class arachnode_rsp_Exceptions_COUNT_BY_DOMAIN2Result
	{
		
		private short _RowNumber;
		
		private System.DateTime _InitiallyCreated;
		
		private System.DateTime _LastCreated;
		
		private string _Domain2;
		
		private int _Count;
		
		private short _DaysSinceInitiallyDiscovered;
		
		private short _DaysSinceLastDiscovered;
		
		private double _Strength;
		
		private short _Rank;
		
		private short _DenseRank;
		
		private byte _NTile;
		
		public arachnode_rsp_Exceptions_COUNT_BY_DOMAIN2Result()
		{
		}
		
		[Column(Storage="_RowNumber", DbType="SmallInt NOT NULL")]
		public short RowNumber
		{
			get
			{
				return this._RowNumber;
			}
			set
			{
				if ((this._RowNumber != value))
				{
					this._RowNumber = value;
				}
			}
		}
		
		[Column(Storage="_InitiallyCreated", DbType="DateTime NOT NULL")]
		public System.DateTime InitiallyCreated
		{
			get
			{
				return this._InitiallyCreated;
			}
			set
			{
				if ((this._InitiallyCreated != value))
				{
					this._InitiallyCreated = value;
				}
			}
		}
		
		[Column(Storage="_LastCreated", DbType="DateTime NOT NULL")]
		public System.DateTime LastCreated
		{
			get
			{
				return this._LastCreated;
			}
			set
			{
				if ((this._LastCreated != value))
				{
					this._LastCreated = value;
				}
			}
		}
		
		[Column(Storage="_Domain2", DbType="VarChar(884) NOT NULL", CanBeNull=false)]
		public string Domain2
		{
			get
			{
				return this._Domain2;
			}
			set
			{
				if ((this._Domain2 != value))
				{
					this._Domain2 = value;
				}
			}
		}
		
		[Column(Storage="_Count", DbType="Int NOT NULL")]
		public int Count
		{
			get
			{
				return this._Count;
			}
			set
			{
				if ((this._Count != value))
				{
					this._Count = value;
				}
			}
		}
		
		[Column(Storage="_DaysSinceInitiallyDiscovered", DbType="SmallInt NOT NULL")]
		public short DaysSinceInitiallyDiscovered
		{
			get
			{
				return this._DaysSinceInitiallyDiscovered;
			}
			set
			{
				if ((this._DaysSinceInitiallyDiscovered != value))
				{
					this._DaysSinceInitiallyDiscovered = value;
				}
			}
		}
		
		[Column(Storage="_DaysSinceLastDiscovered", DbType="SmallInt NOT NULL")]
		public short DaysSinceLastDiscovered
		{
			get
			{
				return this._DaysSinceLastDiscovered;
			}
			set
			{
				if ((this._DaysSinceLastDiscovered != value))
				{
					this._DaysSinceLastDiscovered = value;
				}
			}
		}
		
		[Column(Storage="_Strength", DbType="Float NOT NULL")]
		public double Strength
		{
			get
			{
				return this._Strength;
			}
			set
			{
				if ((this._Strength != value))
				{
					this._Strength = value;
				}
			}
		}
		
		[Column(Storage="_Rank", DbType="SmallInt NOT NULL")]
		public short Rank
		{
			get
			{
				return this._Rank;
			}
			set
			{
				if ((this._Rank != value))
				{
					this._Rank = value;
				}
			}
		}
		
		[Column(Storage="_DenseRank", DbType="SmallInt NOT NULL")]
		public short DenseRank
		{
			get
			{
				return this._DenseRank;
			}
			set
			{
				if ((this._DenseRank != value))
				{
					this._DenseRank = value;
				}
			}
		}
		
		[Column(Storage="_NTile", DbType="TinyInt NOT NULL")]
		public byte NTile
		{
			get
			{
				return this._NTile;
			}
			set
			{
				if ((this._NTile != value))
				{
					this._NTile = value;
				}
			}
		}
	}
	
	public partial class arachnode_rsp_Exceptions_COUNT_BY_DOMAINSResult
	{
		
		private short _RowNumber;
		
		private System.DateTime _InitiallyCreated;
		
		private System.DateTime _LastCreated;
		
		private string _Domain1;
		
		private string _Domain2;
		
		private int _Count;
		
		private short _DaysSinceInitiallyDiscovered;
		
		private short _DaysSinceLastDiscovered;
		
		private double _Strength;
		
		private short _Rank;
		
		private short _DenseRank;
		
		private byte _NTile;
		
		public arachnode_rsp_Exceptions_COUNT_BY_DOMAINSResult()
		{
		}
		
		[Column(Storage="_RowNumber", DbType="SmallInt NOT NULL")]
		public short RowNumber
		{
			get
			{
				return this._RowNumber;
			}
			set
			{
				if ((this._RowNumber != value))
				{
					this._RowNumber = value;
				}
			}
		}
		
		[Column(Storage="_InitiallyCreated", DbType="DateTime NOT NULL")]
		public System.DateTime InitiallyCreated
		{
			get
			{
				return this._InitiallyCreated;
			}
			set
			{
				if ((this._InitiallyCreated != value))
				{
					this._InitiallyCreated = value;
				}
			}
		}
		
		[Column(Storage="_LastCreated", DbType="DateTime NOT NULL")]
		public System.DateTime LastCreated
		{
			get
			{
				return this._LastCreated;
			}
			set
			{
				if ((this._LastCreated != value))
				{
					this._LastCreated = value;
				}
			}
		}
		
		[Column(Storage="_Domain1", DbType="VarChar(884) NOT NULL", CanBeNull=false)]
		public string Domain1
		{
			get
			{
				return this._Domain1;
			}
			set
			{
				if ((this._Domain1 != value))
				{
					this._Domain1 = value;
				}
			}
		}
		
		[Column(Storage="_Domain2", DbType="VarChar(884) NOT NULL", CanBeNull=false)]
		public string Domain2
		{
			get
			{
				return this._Domain2;
			}
			set
			{
				if ((this._Domain2 != value))
				{
					this._Domain2 = value;
				}
			}
		}
		
		[Column(Storage="_Count", DbType="Int NOT NULL")]
		public int Count
		{
			get
			{
				return this._Count;
			}
			set
			{
				if ((this._Count != value))
				{
					this._Count = value;
				}
			}
		}
		
		[Column(Storage="_DaysSinceInitiallyDiscovered", DbType="SmallInt NOT NULL")]
		public short DaysSinceInitiallyDiscovered
		{
			get
			{
				return this._DaysSinceInitiallyDiscovered;
			}
			set
			{
				if ((this._DaysSinceInitiallyDiscovered != value))
				{
					this._DaysSinceInitiallyDiscovered = value;
				}
			}
		}
		
		[Column(Storage="_DaysSinceLastDiscovered", DbType="SmallInt NOT NULL")]
		public short DaysSinceLastDiscovered
		{
			get
			{
				return this._DaysSinceLastDiscovered;
			}
			set
			{
				if ((this._DaysSinceLastDiscovered != value))
				{
					this._DaysSinceLastDiscovered = value;
				}
			}
		}
		
		[Column(Storage="_Strength", DbType="Float NOT NULL")]
		public double Strength
		{
			get
			{
				return this._Strength;
			}
			set
			{
				if ((this._Strength != value))
				{
					this._Strength = value;
				}
			}
		}
		
		[Column(Storage="_Rank", DbType="SmallInt NOT NULL")]
		public short Rank
		{
			get
			{
				return this._Rank;
			}
			set
			{
				if ((this._Rank != value))
				{
					this._Rank = value;
				}
			}
		}
		
		[Column(Storage="_DenseRank", DbType="SmallInt NOT NULL")]
		public short DenseRank
		{
			get
			{
				return this._DenseRank;
			}
			set
			{
				if ((this._DenseRank != value))
				{
					this._DenseRank = value;
				}
			}
		}
		
		[Column(Storage="_NTile", DbType="TinyInt NOT NULL")]
		public byte NTile
		{
			get
			{
				return this._NTile;
			}
			set
			{
				if ((this._NTile != value))
				{
					this._NTile = value;
				}
			}
		}
	}
	
	public partial class arachnode_rsp_Exceptions_COUNT_BY_EXTENSION1Result
	{
		
		private short _RowNumber;
		
		private System.DateTime _InitiallyCreated;
		
		private System.DateTime _LastCreated;
		
		private string _Extension1;
		
		private int _Count;
		
		private short _DaysSinceInitiallyDiscovered;
		
		private short _DaysSinceLastDiscovered;
		
		private double _Strength;
		
		private short _Rank;
		
		private short _DenseRank;
		
		private byte _NTile;
		
		public arachnode_rsp_Exceptions_COUNT_BY_EXTENSION1Result()
		{
		}
		
		[Column(Storage="_RowNumber", DbType="SmallInt NOT NULL")]
		public short RowNumber
		{
			get
			{
				return this._RowNumber;
			}
			set
			{
				if ((this._RowNumber != value))
				{
					this._RowNumber = value;
				}
			}
		}
		
		[Column(Storage="_InitiallyCreated", DbType="DateTime NOT NULL")]
		public System.DateTime InitiallyCreated
		{
			get
			{
				return this._InitiallyCreated;
			}
			set
			{
				if ((this._InitiallyCreated != value))
				{
					this._InitiallyCreated = value;
				}
			}
		}
		
		[Column(Storage="_LastCreated", DbType="DateTime NOT NULL")]
		public System.DateTime LastCreated
		{
			get
			{
				return this._LastCreated;
			}
			set
			{
				if ((this._LastCreated != value))
				{
					this._LastCreated = value;
				}
			}
		}
		
		[Column(Storage="_Extension1", DbType="VarChar(884) NOT NULL", CanBeNull=false)]
		public string Extension1
		{
			get
			{
				return this._Extension1;
			}
			set
			{
				if ((this._Extension1 != value))
				{
					this._Extension1 = value;
				}
			}
		}
		
		[Column(Storage="_Count", DbType="Int NOT NULL")]
		public int Count
		{
			get
			{
				return this._Count;
			}
			set
			{
				if ((this._Count != value))
				{
					this._Count = value;
				}
			}
		}
		
		[Column(Storage="_DaysSinceInitiallyDiscovered", DbType="SmallInt NOT NULL")]
		public short DaysSinceInitiallyDiscovered
		{
			get
			{
				return this._DaysSinceInitiallyDiscovered;
			}
			set
			{
				if ((this._DaysSinceInitiallyDiscovered != value))
				{
					this._DaysSinceInitiallyDiscovered = value;
				}
			}
		}
		
		[Column(Storage="_DaysSinceLastDiscovered", DbType="SmallInt NOT NULL")]
		public short DaysSinceLastDiscovered
		{
			get
			{
				return this._DaysSinceLastDiscovered;
			}
			set
			{
				if ((this._DaysSinceLastDiscovered != value))
				{
					this._DaysSinceLastDiscovered = value;
				}
			}
		}
		
		[Column(Storage="_Strength", DbType="Float NOT NULL")]
		public double Strength
		{
			get
			{
				return this._Strength;
			}
			set
			{
				if ((this._Strength != value))
				{
					this._Strength = value;
				}
			}
		}
		
		[Column(Storage="_Rank", DbType="SmallInt NOT NULL")]
		public short Rank
		{
			get
			{
				return this._Rank;
			}
			set
			{
				if ((this._Rank != value))
				{
					this._Rank = value;
				}
			}
		}
		
		[Column(Storage="_DenseRank", DbType="SmallInt NOT NULL")]
		public short DenseRank
		{
			get
			{
				return this._DenseRank;
			}
			set
			{
				if ((this._DenseRank != value))
				{
					this._DenseRank = value;
				}
			}
		}
		
		[Column(Storage="_NTile", DbType="TinyInt NOT NULL")]
		public byte NTile
		{
			get
			{
				return this._NTile;
			}
			set
			{
				if ((this._NTile != value))
				{
					this._NTile = value;
				}
			}
		}
	}
	
	public partial class arachnode_rsp_Exceptions_COUNT_BY_EXTENSION2Result
	{
		
		private short _RowNumber;
		
		private System.DateTime _InitiallyCreated;
		
		private System.DateTime _LastCreated;
		
		private string _Extension2;
		
		private int _Count;
		
		private short _DaysSinceInitiallyDiscovered;
		
		private short _DaysSinceLastDiscovered;
		
		private double _Strength;
		
		private short _Rank;
		
		private short _DenseRank;
		
		private byte _NTile;
		
		public arachnode_rsp_Exceptions_COUNT_BY_EXTENSION2Result()
		{
		}
		
		[Column(Storage="_RowNumber", DbType="SmallInt NOT NULL")]
		public short RowNumber
		{
			get
			{
				return this._RowNumber;
			}
			set
			{
				if ((this._RowNumber != value))
				{
					this._RowNumber = value;
				}
			}
		}
		
		[Column(Storage="_InitiallyCreated", DbType="DateTime NOT NULL")]
		public System.DateTime InitiallyCreated
		{
			get
			{
				return this._InitiallyCreated;
			}
			set
			{
				if ((this._InitiallyCreated != value))
				{
					this._InitiallyCreated = value;
				}
			}
		}
		
		[Column(Storage="_LastCreated", DbType="DateTime NOT NULL")]
		public System.DateTime LastCreated
		{
			get
			{
				return this._LastCreated;
			}
			set
			{
				if ((this._LastCreated != value))
				{
					this._LastCreated = value;
				}
			}
		}
		
		[Column(Storage="_Extension2", DbType="VarChar(884) NOT NULL", CanBeNull=false)]
		public string Extension2
		{
			get
			{
				return this._Extension2;
			}
			set
			{
				if ((this._Extension2 != value))
				{
					this._Extension2 = value;
				}
			}
		}
		
		[Column(Storage="_Count", DbType="Int NOT NULL")]
		public int Count
		{
			get
			{
				return this._Count;
			}
			set
			{
				if ((this._Count != value))
				{
					this._Count = value;
				}
			}
		}
		
		[Column(Storage="_DaysSinceInitiallyDiscovered", DbType="SmallInt NOT NULL")]
		public short DaysSinceInitiallyDiscovered
		{
			get
			{
				return this._DaysSinceInitiallyDiscovered;
			}
			set
			{
				if ((this._DaysSinceInitiallyDiscovered != value))
				{
					this._DaysSinceInitiallyDiscovered = value;
				}
			}
		}
		
		[Column(Storage="_DaysSinceLastDiscovered", DbType="SmallInt NOT NULL")]
		public short DaysSinceLastDiscovered
		{
			get
			{
				return this._DaysSinceLastDiscovered;
			}
			set
			{
				if ((this._DaysSinceLastDiscovered != value))
				{
					this._DaysSinceLastDiscovered = value;
				}
			}
		}
		
		[Column(Storage="_Strength", DbType="Float NOT NULL")]
		public double Strength
		{
			get
			{
				return this._Strength;
			}
			set
			{
				if ((this._Strength != value))
				{
					this._Strength = value;
				}
			}
		}
		
		[Column(Storage="_Rank", DbType="SmallInt NOT NULL")]
		public short Rank
		{
			get
			{
				return this._Rank;
			}
			set
			{
				if ((this._Rank != value))
				{
					this._Rank = value;
				}
			}
		}
		
		[Column(Storage="_DenseRank", DbType="SmallInt NOT NULL")]
		public short DenseRank
		{
			get
			{
				return this._DenseRank;
			}
			set
			{
				if ((this._DenseRank != value))
				{
					this._DenseRank = value;
				}
			}
		}
		
		[Column(Storage="_NTile", DbType="TinyInt NOT NULL")]
		public byte NTile
		{
			get
			{
				return this._NTile;
			}
			set
			{
				if ((this._NTile != value))
				{
					this._NTile = value;
				}
			}
		}
	}
	
	public partial class arachnode_rsp_Exceptions_COUNT_BY_EXTENSIONSResult
	{
		
		private short _RowNumber;
		
		private System.DateTime _InitiallyCreated;
		
		private System.DateTime _LastCreated;
		
		private string _Extension1;
		
		private string _Extension2;
		
		private int _Count;
		
		private short _DaysSinceInitiallyDiscovered;
		
		private short _DaysSinceLastDiscovered;
		
		private double _Strength;
		
		private short _Rank;
		
		private short _DenseRank;
		
		private byte _NTile;
		
		public arachnode_rsp_Exceptions_COUNT_BY_EXTENSIONSResult()
		{
		}
		
		[Column(Storage="_RowNumber", DbType="SmallInt NOT NULL")]
		public short RowNumber
		{
			get
			{
				return this._RowNumber;
			}
			set
			{
				if ((this._RowNumber != value))
				{
					this._RowNumber = value;
				}
			}
		}
		
		[Column(Storage="_InitiallyCreated", DbType="DateTime NOT NULL")]
		public System.DateTime InitiallyCreated
		{
			get
			{
				return this._InitiallyCreated;
			}
			set
			{
				if ((this._InitiallyCreated != value))
				{
					this._InitiallyCreated = value;
				}
			}
		}
		
		[Column(Storage="_LastCreated", DbType="DateTime NOT NULL")]
		public System.DateTime LastCreated
		{
			get
			{
				return this._LastCreated;
			}
			set
			{
				if ((this._LastCreated != value))
				{
					this._LastCreated = value;
				}
			}
		}
		
		[Column(Storage="_Extension1", DbType="VarChar(884) NOT NULL", CanBeNull=false)]
		public string Extension1
		{
			get
			{
				return this._Extension1;
			}
			set
			{
				if ((this._Extension1 != value))
				{
					this._Extension1 = value;
				}
			}
		}
		
		[Column(Storage="_Extension2", DbType="VarChar(884) NOT NULL", CanBeNull=false)]
		public string Extension2
		{
			get
			{
				return this._Extension2;
			}
			set
			{
				if ((this._Extension2 != value))
				{
					this._Extension2 = value;
				}
			}
		}
		
		[Column(Storage="_Count", DbType="Int NOT NULL")]
		public int Count
		{
			get
			{
				return this._Count;
			}
			set
			{
				if ((this._Count != value))
				{
					this._Count = value;
				}
			}
		}
		
		[Column(Storage="_DaysSinceInitiallyDiscovered", DbType="SmallInt NOT NULL")]
		public short DaysSinceInitiallyDiscovered
		{
			get
			{
				return this._DaysSinceInitiallyDiscovered;
			}
			set
			{
				if ((this._DaysSinceInitiallyDiscovered != value))
				{
					this._DaysSinceInitiallyDiscovered = value;
				}
			}
		}
		
		[Column(Storage="_DaysSinceLastDiscovered", DbType="SmallInt NOT NULL")]
		public short DaysSinceLastDiscovered
		{
			get
			{
				return this._DaysSinceLastDiscovered;
			}
			set
			{
				if ((this._DaysSinceLastDiscovered != value))
				{
					this._DaysSinceLastDiscovered = value;
				}
			}
		}
		
		[Column(Storage="_Strength", DbType="Float NOT NULL")]
		public double Strength
		{
			get
			{
				return this._Strength;
			}
			set
			{
				if ((this._Strength != value))
				{
					this._Strength = value;
				}
			}
		}
		
		[Column(Storage="_Rank", DbType="SmallInt NOT NULL")]
		public short Rank
		{
			get
			{
				return this._Rank;
			}
			set
			{
				if ((this._Rank != value))
				{
					this._Rank = value;
				}
			}
		}
		
		[Column(Storage="_DenseRank", DbType="SmallInt NOT NULL")]
		public short DenseRank
		{
			get
			{
				return this._DenseRank;
			}
			set
			{
				if ((this._DenseRank != value))
				{
					this._DenseRank = value;
				}
			}
		}
		
		[Column(Storage="_NTile", DbType="TinyInt NOT NULL")]
		public byte NTile
		{
			get
			{
				return this._NTile;
			}
			set
			{
				if ((this._NTile != value))
				{
					this._NTile = value;
				}
			}
		}
	}
	
	public partial class arachnode_rsp_Exceptions_COUNT_BY_HOST1Result
	{
		
		private short _RowNumber;
		
		private System.DateTime _InitiallyCreated;
		
		private System.DateTime _LastCreated;
		
		private string _Host1;
		
		private int _Count;
		
		private short _DaysSinceInitiallyDiscovered;
		
		private short _DaysSinceLastDiscovered;
		
		private double _Strength;
		
		private short _Rank;
		
		private short _DenseRank;
		
		private byte _NTile;
		
		public arachnode_rsp_Exceptions_COUNT_BY_HOST1Result()
		{
		}
		
		[Column(Storage="_RowNumber", DbType="SmallInt NOT NULL")]
		public short RowNumber
		{
			get
			{
				return this._RowNumber;
			}
			set
			{
				if ((this._RowNumber != value))
				{
					this._RowNumber = value;
				}
			}
		}
		
		[Column(Storage="_InitiallyCreated", DbType="DateTime NOT NULL")]
		public System.DateTime InitiallyCreated
		{
			get
			{
				return this._InitiallyCreated;
			}
			set
			{
				if ((this._InitiallyCreated != value))
				{
					this._InitiallyCreated = value;
				}
			}
		}
		
		[Column(Storage="_LastCreated", DbType="DateTime NOT NULL")]
		public System.DateTime LastCreated
		{
			get
			{
				return this._LastCreated;
			}
			set
			{
				if ((this._LastCreated != value))
				{
					this._LastCreated = value;
				}
			}
		}
		
		[Column(Storage="_Host1", DbType="VarChar(884) NOT NULL", CanBeNull=false)]
		public string Host1
		{
			get
			{
				return this._Host1;
			}
			set
			{
				if ((this._Host1 != value))
				{
					this._Host1 = value;
				}
			}
		}
		
		[Column(Storage="_Count", DbType="Int NOT NULL")]
		public int Count
		{
			get
			{
				return this._Count;
			}
			set
			{
				if ((this._Count != value))
				{
					this._Count = value;
				}
			}
		}
		
		[Column(Storage="_DaysSinceInitiallyDiscovered", DbType="SmallInt NOT NULL")]
		public short DaysSinceInitiallyDiscovered
		{
			get
			{
				return this._DaysSinceInitiallyDiscovered;
			}
			set
			{
				if ((this._DaysSinceInitiallyDiscovered != value))
				{
					this._DaysSinceInitiallyDiscovered = value;
				}
			}
		}
		
		[Column(Storage="_DaysSinceLastDiscovered", DbType="SmallInt NOT NULL")]
		public short DaysSinceLastDiscovered
		{
			get
			{
				return this._DaysSinceLastDiscovered;
			}
			set
			{
				if ((this._DaysSinceLastDiscovered != value))
				{
					this._DaysSinceLastDiscovered = value;
				}
			}
		}
		
		[Column(Storage="_Strength", DbType="Float NOT NULL")]
		public double Strength
		{
			get
			{
				return this._Strength;
			}
			set
			{
				if ((this._Strength != value))
				{
					this._Strength = value;
				}
			}
		}
		
		[Column(Storage="_Rank", DbType="SmallInt NOT NULL")]
		public short Rank
		{
			get
			{
				return this._Rank;
			}
			set
			{
				if ((this._Rank != value))
				{
					this._Rank = value;
				}
			}
		}
		
		[Column(Storage="_DenseRank", DbType="SmallInt NOT NULL")]
		public short DenseRank
		{
			get
			{
				return this._DenseRank;
			}
			set
			{
				if ((this._DenseRank != value))
				{
					this._DenseRank = value;
				}
			}
		}
		
		[Column(Storage="_NTile", DbType="TinyInt NOT NULL")]
		public byte NTile
		{
			get
			{
				return this._NTile;
			}
			set
			{
				if ((this._NTile != value))
				{
					this._NTile = value;
				}
			}
		}
	}
	
	public partial class arachnode_rsp_Exceptions_COUNT_BY_HOST2Result
	{
		
		private short _RowNumber;
		
		private System.DateTime _InitiallyCreated;
		
		private System.DateTime _LastCreated;
		
		private string _Host2;
		
		private int _Count;
		
		private short _DaysSinceInitiallyDiscovered;
		
		private short _DaysSinceLastDiscovered;
		
		private double _Strength;
		
		private short _Rank;
		
		private short _DenseRank;
		
		private byte _NTile;
		
		public arachnode_rsp_Exceptions_COUNT_BY_HOST2Result()
		{
		}
		
		[Column(Storage="_RowNumber", DbType="SmallInt NOT NULL")]
		public short RowNumber
		{
			get
			{
				return this._RowNumber;
			}
			set
			{
				if ((this._RowNumber != value))
				{
					this._RowNumber = value;
				}
			}
		}
		
		[Column(Storage="_InitiallyCreated", DbType="DateTime NOT NULL")]
		public System.DateTime InitiallyCreated
		{
			get
			{
				return this._InitiallyCreated;
			}
			set
			{
				if ((this._InitiallyCreated != value))
				{
					this._InitiallyCreated = value;
				}
			}
		}
		
		[Column(Storage="_LastCreated", DbType="DateTime NOT NULL")]
		public System.DateTime LastCreated
		{
			get
			{
				return this._LastCreated;
			}
			set
			{
				if ((this._LastCreated != value))
				{
					this._LastCreated = value;
				}
			}
		}
		
		[Column(Storage="_Host2", DbType="VarChar(884) NOT NULL", CanBeNull=false)]
		public string Host2
		{
			get
			{
				return this._Host2;
			}
			set
			{
				if ((this._Host2 != value))
				{
					this._Host2 = value;
				}
			}
		}
		
		[Column(Storage="_Count", DbType="Int NOT NULL")]
		public int Count
		{
			get
			{
				return this._Count;
			}
			set
			{
				if ((this._Count != value))
				{
					this._Count = value;
				}
			}
		}
		
		[Column(Storage="_DaysSinceInitiallyDiscovered", DbType="SmallInt NOT NULL")]
		public short DaysSinceInitiallyDiscovered
		{
			get
			{
				return this._DaysSinceInitiallyDiscovered;
			}
			set
			{
				if ((this._DaysSinceInitiallyDiscovered != value))
				{
					this._DaysSinceInitiallyDiscovered = value;
				}
			}
		}
		
		[Column(Storage="_DaysSinceLastDiscovered", DbType="SmallInt NOT NULL")]
		public short DaysSinceLastDiscovered
		{
			get
			{
				return this._DaysSinceLastDiscovered;
			}
			set
			{
				if ((this._DaysSinceLastDiscovered != value))
				{
					this._DaysSinceLastDiscovered = value;
				}
			}
		}
		
		[Column(Storage="_Strength", DbType="Float NOT NULL")]
		public double Strength
		{
			get
			{
				return this._Strength;
			}
			set
			{
				if ((this._Strength != value))
				{
					this._Strength = value;
				}
			}
		}
		
		[Column(Storage="_Rank", DbType="SmallInt NOT NULL")]
		public short Rank
		{
			get
			{
				return this._Rank;
			}
			set
			{
				if ((this._Rank != value))
				{
					this._Rank = value;
				}
			}
		}
		
		[Column(Storage="_DenseRank", DbType="SmallInt NOT NULL")]
		public short DenseRank
		{
			get
			{
				return this._DenseRank;
			}
			set
			{
				if ((this._DenseRank != value))
				{
					this._DenseRank = value;
				}
			}
		}
		
		[Column(Storage="_NTile", DbType="TinyInt NOT NULL")]
		public byte NTile
		{
			get
			{
				return this._NTile;
			}
			set
			{
				if ((this._NTile != value))
				{
					this._NTile = value;
				}
			}
		}
	}
	
	public partial class arachnode_rsp_Exceptions_COUNT_BY_HOSTSResult
	{
		
		private short _RowNumber;
		
		private System.DateTime _InitiallyCreated;
		
		private System.DateTime _LastCreated;
		
		private string _Host1;
		
		private string _Host2;
		
		private int _Count;
		
		private short _DaysSinceInitiallyDiscovered;
		
		private short _DaysSinceLastDiscovered;
		
		private double _Strength;
		
		private short _Rank;
		
		private short _DenseRank;
		
		private byte _NTile;
		
		public arachnode_rsp_Exceptions_COUNT_BY_HOSTSResult()
		{
		}
		
		[Column(Storage="_RowNumber", DbType="SmallInt NOT NULL")]
		public short RowNumber
		{
			get
			{
				return this._RowNumber;
			}
			set
			{
				if ((this._RowNumber != value))
				{
					this._RowNumber = value;
				}
			}
		}
		
		[Column(Storage="_InitiallyCreated", DbType="DateTime NOT NULL")]
		public System.DateTime InitiallyCreated
		{
			get
			{
				return this._InitiallyCreated;
			}
			set
			{
				if ((this._InitiallyCreated != value))
				{
					this._InitiallyCreated = value;
				}
			}
		}
		
		[Column(Storage="_LastCreated", DbType="DateTime NOT NULL")]
		public System.DateTime LastCreated
		{
			get
			{
				return this._LastCreated;
			}
			set
			{
				if ((this._LastCreated != value))
				{
					this._LastCreated = value;
				}
			}
		}
		
		[Column(Storage="_Host1", DbType="VarChar(884) NOT NULL", CanBeNull=false)]
		public string Host1
		{
			get
			{
				return this._Host1;
			}
			set
			{
				if ((this._Host1 != value))
				{
					this._Host1 = value;
				}
			}
		}
		
		[Column(Storage="_Host2", DbType="VarChar(884) NOT NULL", CanBeNull=false)]
		public string Host2
		{
			get
			{
				return this._Host2;
			}
			set
			{
				if ((this._Host2 != value))
				{
					this._Host2 = value;
				}
			}
		}
		
		[Column(Storage="_Count", DbType="Int NOT NULL")]
		public int Count
		{
			get
			{
				return this._Count;
			}
			set
			{
				if ((this._Count != value))
				{
					this._Count = value;
				}
			}
		}
		
		[Column(Storage="_DaysSinceInitiallyDiscovered", DbType="SmallInt NOT NULL")]
		public short DaysSinceInitiallyDiscovered
		{
			get
			{
				return this._DaysSinceInitiallyDiscovered;
			}
			set
			{
				if ((this._DaysSinceInitiallyDiscovered != value))
				{
					this._DaysSinceInitiallyDiscovered = value;
				}
			}
		}
		
		[Column(Storage="_DaysSinceLastDiscovered", DbType="SmallInt NOT NULL")]
		public short DaysSinceLastDiscovered
		{
			get
			{
				return this._DaysSinceLastDiscovered;
			}
			set
			{
				if ((this._DaysSinceLastDiscovered != value))
				{
					this._DaysSinceLastDiscovered = value;
				}
			}
		}
		
		[Column(Storage="_Strength", DbType="Float NOT NULL")]
		public double Strength
		{
			get
			{
				return this._Strength;
			}
			set
			{
				if ((this._Strength != value))
				{
					this._Strength = value;
				}
			}
		}
		
		[Column(Storage="_Rank", DbType="SmallInt NOT NULL")]
		public short Rank
		{
			get
			{
				return this._Rank;
			}
			set
			{
				if ((this._Rank != value))
				{
					this._Rank = value;
				}
			}
		}
		
		[Column(Storage="_DenseRank", DbType="SmallInt NOT NULL")]
		public short DenseRank
		{
			get
			{
				return this._DenseRank;
			}
			set
			{
				if ((this._DenseRank != value))
				{
					this._DenseRank = value;
				}
			}
		}
		
		[Column(Storage="_NTile", DbType="TinyInt NOT NULL")]
		public byte NTile
		{
			get
			{
				return this._NTile;
			}
			set
			{
				if ((this._NTile != value))
				{
					this._NTile = value;
				}
			}
		}
	}
	
	public partial class arachnode_rsp_Exceptions_COUNT_BY_MESSAGEResult
	{
		
		private int _RowNumber;
		
		private System.DateTime _InitiallyCreated;
		
		private System.DateTime _LastCreated;
		
		private string _Message;
		
		private int _Count;
		
		private short _DaysSinceInitiallyDiscovered;
		
		private short _DaysSinceLastDiscovered;
		
		private double _Strength;
		
		private int _Rank;
		
		private int _DenseRank;
		
		private short _NTile;
		
		public arachnode_rsp_Exceptions_COUNT_BY_MESSAGEResult()
		{
		}
		
		[Column(Storage="_RowNumber", DbType="Int NOT NULL")]
		public int RowNumber
		{
			get
			{
				return this._RowNumber;
			}
			set
			{
				if ((this._RowNumber != value))
				{
					this._RowNumber = value;
				}
			}
		}
		
		[Column(Storage="_InitiallyCreated", DbType="DateTime NOT NULL")]
		public System.DateTime InitiallyCreated
		{
			get
			{
				return this._InitiallyCreated;
			}
			set
			{
				if ((this._InitiallyCreated != value))
				{
					this._InitiallyCreated = value;
				}
			}
		}
		
		[Column(Storage="_LastCreated", DbType="DateTime NOT NULL")]
		public System.DateTime LastCreated
		{
			get
			{
				return this._LastCreated;
			}
			set
			{
				if ((this._LastCreated != value))
				{
					this._LastCreated = value;
				}
			}
		}
		
		[Column(Storage="_Message", DbType="VarChar(2000) NOT NULL", CanBeNull=false)]
		public string Message
		{
			get
			{
				return this._Message;
			}
			set
			{
				if ((this._Message != value))
				{
					this._Message = value;
				}
			}
		}
		
		[Column(Storage="_Count", DbType="Int NOT NULL")]
		public int Count
		{
			get
			{
				return this._Count;
			}
			set
			{
				if ((this._Count != value))
				{
					this._Count = value;
				}
			}
		}
		
		[Column(Storage="_DaysSinceInitiallyDiscovered", DbType="SmallInt NOT NULL")]
		public short DaysSinceInitiallyDiscovered
		{
			get
			{
				return this._DaysSinceInitiallyDiscovered;
			}
			set
			{
				if ((this._DaysSinceInitiallyDiscovered != value))
				{
					this._DaysSinceInitiallyDiscovered = value;
				}
			}
		}
		
		[Column(Storage="_DaysSinceLastDiscovered", DbType="SmallInt NOT NULL")]
		public short DaysSinceLastDiscovered
		{
			get
			{
				return this._DaysSinceLastDiscovered;
			}
			set
			{
				if ((this._DaysSinceLastDiscovered != value))
				{
					this._DaysSinceLastDiscovered = value;
				}
			}
		}
		
		[Column(Storage="_Strength", DbType="Float NOT NULL")]
		public double Strength
		{
			get
			{
				return this._Strength;
			}
			set
			{
				if ((this._Strength != value))
				{
					this._Strength = value;
				}
			}
		}
		
		[Column(Storage="_Rank", DbType="Int NOT NULL")]
		public int Rank
		{
			get
			{
				return this._Rank;
			}
			set
			{
				if ((this._Rank != value))
				{
					this._Rank = value;
				}
			}
		}
		
		[Column(Storage="_DenseRank", DbType="Int NOT NULL")]
		public int DenseRank
		{
			get
			{
				return this._DenseRank;
			}
			set
			{
				if ((this._DenseRank != value))
				{
					this._DenseRank = value;
				}
			}
		}
		
		[Column(Storage="_NTile", DbType="SmallInt NOT NULL")]
		public short NTile
		{
			get
			{
				return this._NTile;
			}
			set
			{
				if ((this._NTile != value))
				{
					this._NTile = value;
				}
			}
		}
	}
	
	public partial class arachnode_rsp_Exceptions_COUNT_BY_SCHEME1Result
	{
		
		private short _RowNumber;
		
		private System.DateTime _InitiallyCreated;
		
		private System.DateTime _LastCreated;
		
		private string _Scheme1;
		
		private int _Count;
		
		private short _DaysSinceInitiallyDiscovered;
		
		private short _DaysSinceLastDiscovered;
		
		private double _Strength;
		
		private short _Rank;
		
		private short _DenseRank;
		
		private byte _NTile;
		
		public arachnode_rsp_Exceptions_COUNT_BY_SCHEME1Result()
		{
		}
		
		[Column(Storage="_RowNumber", DbType="SmallInt NOT NULL")]
		public short RowNumber
		{
			get
			{
				return this._RowNumber;
			}
			set
			{
				if ((this._RowNumber != value))
				{
					this._RowNumber = value;
				}
			}
		}
		
		[Column(Storage="_InitiallyCreated", DbType="DateTime NOT NULL")]
		public System.DateTime InitiallyCreated
		{
			get
			{
				return this._InitiallyCreated;
			}
			set
			{
				if ((this._InitiallyCreated != value))
				{
					this._InitiallyCreated = value;
				}
			}
		}
		
		[Column(Storage="_LastCreated", DbType="DateTime NOT NULL")]
		public System.DateTime LastCreated
		{
			get
			{
				return this._LastCreated;
			}
			set
			{
				if ((this._LastCreated != value))
				{
					this._LastCreated = value;
				}
			}
		}
		
		[Column(Storage="_Scheme1", DbType="VarChar(884) NOT NULL", CanBeNull=false)]
		public string Scheme1
		{
			get
			{
				return this._Scheme1;
			}
			set
			{
				if ((this._Scheme1 != value))
				{
					this._Scheme1 = value;
				}
			}
		}
		
		[Column(Storage="_Count", DbType="Int NOT NULL")]
		public int Count
		{
			get
			{
				return this._Count;
			}
			set
			{
				if ((this._Count != value))
				{
					this._Count = value;
				}
			}
		}
		
		[Column(Storage="_DaysSinceInitiallyDiscovered", DbType="SmallInt NOT NULL")]
		public short DaysSinceInitiallyDiscovered
		{
			get
			{
				return this._DaysSinceInitiallyDiscovered;
			}
			set
			{
				if ((this._DaysSinceInitiallyDiscovered != value))
				{
					this._DaysSinceInitiallyDiscovered = value;
				}
			}
		}
		
		[Column(Storage="_DaysSinceLastDiscovered", DbType="SmallInt NOT NULL")]
		public short DaysSinceLastDiscovered
		{
			get
			{
				return this._DaysSinceLastDiscovered;
			}
			set
			{
				if ((this._DaysSinceLastDiscovered != value))
				{
					this._DaysSinceLastDiscovered = value;
				}
			}
		}
		
		[Column(Storage="_Strength", DbType="Float NOT NULL")]
		public double Strength
		{
			get
			{
				return this._Strength;
			}
			set
			{
				if ((this._Strength != value))
				{
					this._Strength = value;
				}
			}
		}
		
		[Column(Storage="_Rank", DbType="SmallInt NOT NULL")]
		public short Rank
		{
			get
			{
				return this._Rank;
			}
			set
			{
				if ((this._Rank != value))
				{
					this._Rank = value;
				}
			}
		}
		
		[Column(Storage="_DenseRank", DbType="SmallInt NOT NULL")]
		public short DenseRank
		{
			get
			{
				return this._DenseRank;
			}
			set
			{
				if ((this._DenseRank != value))
				{
					this._DenseRank = value;
				}
			}
		}
		
		[Column(Storage="_NTile", DbType="TinyInt NOT NULL")]
		public byte NTile
		{
			get
			{
				return this._NTile;
			}
			set
			{
				if ((this._NTile != value))
				{
					this._NTile = value;
				}
			}
		}
	}
	
	public partial class arachnode_rsp_Exceptions_COUNT_BY_SCHEME2Result
	{
		
		private short _RowNumber;
		
		private System.DateTime _InitiallyCreated;
		
		private System.DateTime _LastCreated;
		
		private string _Scheme2;
		
		private int _Count;
		
		private short _DaysSinceInitiallyDiscovered;
		
		private short _DaysSinceLastDiscovered;
		
		private double _Strength;
		
		private short _Rank;
		
		private short _DenseRank;
		
		private byte _NTile;
		
		public arachnode_rsp_Exceptions_COUNT_BY_SCHEME2Result()
		{
		}
		
		[Column(Storage="_RowNumber", DbType="SmallInt NOT NULL")]
		public short RowNumber
		{
			get
			{
				return this._RowNumber;
			}
			set
			{
				if ((this._RowNumber != value))
				{
					this._RowNumber = value;
				}
			}
		}
		
		[Column(Storage="_InitiallyCreated", DbType="DateTime NOT NULL")]
		public System.DateTime InitiallyCreated
		{
			get
			{
				return this._InitiallyCreated;
			}
			set
			{
				if ((this._InitiallyCreated != value))
				{
					this._InitiallyCreated = value;
				}
			}
		}
		
		[Column(Storage="_LastCreated", DbType="DateTime NOT NULL")]
		public System.DateTime LastCreated
		{
			get
			{
				return this._LastCreated;
			}
			set
			{
				if ((this._LastCreated != value))
				{
					this._LastCreated = value;
				}
			}
		}
		
		[Column(Storage="_Scheme2", DbType="VarChar(884) NOT NULL", CanBeNull=false)]
		public string Scheme2
		{
			get
			{
				return this._Scheme2;
			}
			set
			{
				if ((this._Scheme2 != value))
				{
					this._Scheme2 = value;
				}
			}
		}
		
		[Column(Storage="_Count", DbType="Int NOT NULL")]
		public int Count
		{
			get
			{
				return this._Count;
			}
			set
			{
				if ((this._Count != value))
				{
					this._Count = value;
				}
			}
		}
		
		[Column(Storage="_DaysSinceInitiallyDiscovered", DbType="SmallInt NOT NULL")]
		public short DaysSinceInitiallyDiscovered
		{
			get
			{
				return this._DaysSinceInitiallyDiscovered;
			}
			set
			{
				if ((this._DaysSinceInitiallyDiscovered != value))
				{
					this._DaysSinceInitiallyDiscovered = value;
				}
			}
		}
		
		[Column(Storage="_DaysSinceLastDiscovered", DbType="SmallInt NOT NULL")]
		public short DaysSinceLastDiscovered
		{
			get
			{
				return this._DaysSinceLastDiscovered;
			}
			set
			{
				if ((this._DaysSinceLastDiscovered != value))
				{
					this._DaysSinceLastDiscovered = value;
				}
			}
		}
		
		[Column(Storage="_Strength", DbType="Float NOT NULL")]
		public double Strength
		{
			get
			{
				return this._Strength;
			}
			set
			{
				if ((this._Strength != value))
				{
					this._Strength = value;
				}
			}
		}
		
		[Column(Storage="_Rank", DbType="SmallInt NOT NULL")]
		public short Rank
		{
			get
			{
				return this._Rank;
			}
			set
			{
				if ((this._Rank != value))
				{
					this._Rank = value;
				}
			}
		}
		
		[Column(Storage="_DenseRank", DbType="SmallInt NOT NULL")]
		public short DenseRank
		{
			get
			{
				return this._DenseRank;
			}
			set
			{
				if ((this._DenseRank != value))
				{
					this._DenseRank = value;
				}
			}
		}
		
		[Column(Storage="_NTile", DbType="TinyInt NOT NULL")]
		public byte NTile
		{
			get
			{
				return this._NTile;
			}
			set
			{
				if ((this._NTile != value))
				{
					this._NTile = value;
				}
			}
		}
	}
	
	public partial class arachnode_rsp_Exceptions_COUNT_BY_SCHEMESResult
	{
		
		private short _RowNumber;
		
		private System.DateTime _InitiallyCreated;
		
		private System.DateTime _LastCreated;
		
		private string _Scheme1;
		
		private string _Scheme2;
		
		private int _Count;
		
		private short _DaysSinceInitiallyDiscovered;
		
		private short _DaysSinceLastDiscovered;
		
		private double _Strength;
		
		private short _Rank;
		
		private short _DenseRank;
		
		private byte _NTile;
		
		public arachnode_rsp_Exceptions_COUNT_BY_SCHEMESResult()
		{
		}
		
		[Column(Storage="_RowNumber", DbType="SmallInt NOT NULL")]
		public short RowNumber
		{
			get
			{
				return this._RowNumber;
			}
			set
			{
				if ((this._RowNumber != value))
				{
					this._RowNumber = value;
				}
			}
		}
		
		[Column(Storage="_InitiallyCreated", DbType="DateTime NOT NULL")]
		public System.DateTime InitiallyCreated
		{
			get
			{
				return this._InitiallyCreated;
			}
			set
			{
				if ((this._InitiallyCreated != value))
				{
					this._InitiallyCreated = value;
				}
			}
		}
		
		[Column(Storage="_LastCreated", DbType="DateTime NOT NULL")]
		public System.DateTime LastCreated
		{
			get
			{
				return this._LastCreated;
			}
			set
			{
				if ((this._LastCreated != value))
				{
					this._LastCreated = value;
				}
			}
		}
		
		[Column(Storage="_Scheme1", DbType="VarChar(884) NOT NULL", CanBeNull=false)]
		public string Scheme1
		{
			get
			{
				return this._Scheme1;
			}
			set
			{
				if ((this._Scheme1 != value))
				{
					this._Scheme1 = value;
				}
			}
		}
		
		[Column(Storage="_Scheme2", DbType="VarChar(884) NOT NULL", CanBeNull=false)]
		public string Scheme2
		{
			get
			{
				return this._Scheme2;
			}
			set
			{
				if ((this._Scheme2 != value))
				{
					this._Scheme2 = value;
				}
			}
		}
		
		[Column(Storage="_Count", DbType="Int NOT NULL")]
		public int Count
		{
			get
			{
				return this._Count;
			}
			set
			{
				if ((this._Count != value))
				{
					this._Count = value;
				}
			}
		}
		
		[Column(Storage="_DaysSinceInitiallyDiscovered", DbType="SmallInt NOT NULL")]
		public short DaysSinceInitiallyDiscovered
		{
			get
			{
				return this._DaysSinceInitiallyDiscovered;
			}
			set
			{
				if ((this._DaysSinceInitiallyDiscovered != value))
				{
					this._DaysSinceInitiallyDiscovered = value;
				}
			}
		}
		
		[Column(Storage="_DaysSinceLastDiscovered", DbType="SmallInt NOT NULL")]
		public short DaysSinceLastDiscovered
		{
			get
			{
				return this._DaysSinceLastDiscovered;
			}
			set
			{
				if ((this._DaysSinceLastDiscovered != value))
				{
					this._DaysSinceLastDiscovered = value;
				}
			}
		}
		
		[Column(Storage="_Strength", DbType="Float NOT NULL")]
		public double Strength
		{
			get
			{
				return this._Strength;
			}
			set
			{
				if ((this._Strength != value))
				{
					this._Strength = value;
				}
			}
		}
		
		[Column(Storage="_Rank", DbType="SmallInt NOT NULL")]
		public short Rank
		{
			get
			{
				return this._Rank;
			}
			set
			{
				if ((this._Rank != value))
				{
					this._Rank = value;
				}
			}
		}
		
		[Column(Storage="_DenseRank", DbType="SmallInt NOT NULL")]
		public short DenseRank
		{
			get
			{
				return this._DenseRank;
			}
			set
			{
				if ((this._DenseRank != value))
				{
					this._DenseRank = value;
				}
			}
		}
		
		[Column(Storage="_NTile", DbType="TinyInt NOT NULL")]
		public byte NTile
		{
			get
			{
				return this._NTile;
			}
			set
			{
				if ((this._NTile != value))
				{
					this._NTile = value;
				}
			}
		}
	}
	
	public partial class arachnode_rsp_Exceptions_COUNT_BY_SOURCEResult
	{
		
		private short _RowNumber;
		
		private System.DateTime _InitiallyCreated;
		
		private System.DateTime _LastCreated;
		
		private string _Source;
		
		private int _Count;
		
		private short _DaysSinceInitiallyDiscovered;
		
		private short _DaysSinceLastDiscovered;
		
		private double _Strength;
		
		private short _Rank;
		
		private short _DenseRank;
		
		private byte _NTile;
		
		public arachnode_rsp_Exceptions_COUNT_BY_SOURCEResult()
		{
		}
		
		[Column(Storage="_RowNumber", DbType="SmallInt NOT NULL")]
		public short RowNumber
		{
			get
			{
				return this._RowNumber;
			}
			set
			{
				if ((this._RowNumber != value))
				{
					this._RowNumber = value;
				}
			}
		}
		
		[Column(Storage="_InitiallyCreated", DbType="DateTime NOT NULL")]
		public System.DateTime InitiallyCreated
		{
			get
			{
				return this._InitiallyCreated;
			}
			set
			{
				if ((this._InitiallyCreated != value))
				{
					this._InitiallyCreated = value;
				}
			}
		}
		
		[Column(Storage="_LastCreated", DbType="DateTime NOT NULL")]
		public System.DateTime LastCreated
		{
			get
			{
				return this._LastCreated;
			}
			set
			{
				if ((this._LastCreated != value))
				{
					this._LastCreated = value;
				}
			}
		}
		
		[Column(Storage="_Source", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Source
		{
			get
			{
				return this._Source;
			}
			set
			{
				if ((this._Source != value))
				{
					this._Source = value;
				}
			}
		}
		
		[Column(Storage="_Count", DbType="Int NOT NULL")]
		public int Count
		{
			get
			{
				return this._Count;
			}
			set
			{
				if ((this._Count != value))
				{
					this._Count = value;
				}
			}
		}
		
		[Column(Storage="_DaysSinceInitiallyDiscovered", DbType="SmallInt NOT NULL")]
		public short DaysSinceInitiallyDiscovered
		{
			get
			{
				return this._DaysSinceInitiallyDiscovered;
			}
			set
			{
				if ((this._DaysSinceInitiallyDiscovered != value))
				{
					this._DaysSinceInitiallyDiscovered = value;
				}
			}
		}
		
		[Column(Storage="_DaysSinceLastDiscovered", DbType="SmallInt NOT NULL")]
		public short DaysSinceLastDiscovered
		{
			get
			{
				return this._DaysSinceLastDiscovered;
			}
			set
			{
				if ((this._DaysSinceLastDiscovered != value))
				{
					this._DaysSinceLastDiscovered = value;
				}
			}
		}
		
		[Column(Storage="_Strength", DbType="Float NOT NULL")]
		public double Strength
		{
			get
			{
				return this._Strength;
			}
			set
			{
				if ((this._Strength != value))
				{
					this._Strength = value;
				}
			}
		}
		
		[Column(Storage="_Rank", DbType="SmallInt NOT NULL")]
		public short Rank
		{
			get
			{
				return this._Rank;
			}
			set
			{
				if ((this._Rank != value))
				{
					this._Rank = value;
				}
			}
		}
		
		[Column(Storage="_DenseRank", DbType="SmallInt NOT NULL")]
		public short DenseRank
		{
			get
			{
				return this._DenseRank;
			}
			set
			{
				if ((this._DenseRank != value))
				{
					this._DenseRank = value;
				}
			}
		}
		
		[Column(Storage="_NTile", DbType="TinyInt NOT NULL")]
		public byte NTile
		{
			get
			{
				return this._NTile;
			}
			set
			{
				if ((this._NTile != value))
				{
					this._NTile = value;
				}
			}
		}
	}
	
	public partial class arachnode_rsp_Exceptions_COUNT_BY_STACKTRACEResult
	{
		
		private short _RowNumber;
		
		private System.DateTime _InitiallyCreated;
		
		private System.DateTime _LastCreated;
		
		private string _StackTrace;
		
		private int _Count;
		
		private short _DaysSinceInitiallyDiscovered;
		
		private short _DaysSinceLastDiscovered;
		
		private double _Strength;
		
		private short _Rank;
		
		private short _DenseRank;
		
		private byte _NTile;
		
		public arachnode_rsp_Exceptions_COUNT_BY_STACKTRACEResult()
		{
		}
		
		[Column(Storage="_RowNumber", DbType="SmallInt NOT NULL")]
		public short RowNumber
		{
			get
			{
				return this._RowNumber;
			}
			set
			{
				if ((this._RowNumber != value))
				{
					this._RowNumber = value;
				}
			}
		}
		
		[Column(Storage="_InitiallyCreated", DbType="DateTime NOT NULL")]
		public System.DateTime InitiallyCreated
		{
			get
			{
				return this._InitiallyCreated;
			}
			set
			{
				if ((this._InitiallyCreated != value))
				{
					this._InitiallyCreated = value;
				}
			}
		}
		
		[Column(Storage="_LastCreated", DbType="DateTime NOT NULL")]
		public System.DateTime LastCreated
		{
			get
			{
				return this._LastCreated;
			}
			set
			{
				if ((this._LastCreated != value))
				{
					this._LastCreated = value;
				}
			}
		}
		
		[Column(Storage="_StackTrace", DbType="VarChar(4000) NOT NULL", CanBeNull=false)]
		public string StackTrace
		{
			get
			{
				return this._StackTrace;
			}
			set
			{
				if ((this._StackTrace != value))
				{
					this._StackTrace = value;
				}
			}
		}
		
		[Column(Storage="_Count", DbType="Int NOT NULL")]
		public int Count
		{
			get
			{
				return this._Count;
			}
			set
			{
				if ((this._Count != value))
				{
					this._Count = value;
				}
			}
		}
		
		[Column(Storage="_DaysSinceInitiallyDiscovered", DbType="SmallInt NOT NULL")]
		public short DaysSinceInitiallyDiscovered
		{
			get
			{
				return this._DaysSinceInitiallyDiscovered;
			}
			set
			{
				if ((this._DaysSinceInitiallyDiscovered != value))
				{
					this._DaysSinceInitiallyDiscovered = value;
				}
			}
		}
		
		[Column(Storage="_DaysSinceLastDiscovered", DbType="SmallInt NOT NULL")]
		public short DaysSinceLastDiscovered
		{
			get
			{
				return this._DaysSinceLastDiscovered;
			}
			set
			{
				if ((this._DaysSinceLastDiscovered != value))
				{
					this._DaysSinceLastDiscovered = value;
				}
			}
		}
		
		[Column(Storage="_Strength", DbType="Float NOT NULL")]
		public double Strength
		{
			get
			{
				return this._Strength;
			}
			set
			{
				if ((this._Strength != value))
				{
					this._Strength = value;
				}
			}
		}
		
		[Column(Storage="_Rank", DbType="SmallInt NOT NULL")]
		public short Rank
		{
			get
			{
				return this._Rank;
			}
			set
			{
				if ((this._Rank != value))
				{
					this._Rank = value;
				}
			}
		}
		
		[Column(Storage="_DenseRank", DbType="SmallInt NOT NULL")]
		public short DenseRank
		{
			get
			{
				return this._DenseRank;
			}
			set
			{
				if ((this._DenseRank != value))
				{
					this._DenseRank = value;
				}
			}
		}
		
		[Column(Storage="_NTile", DbType="TinyInt NOT NULL")]
		public byte NTile
		{
			get
			{
				return this._NTile;
			}
			set
			{
				if ((this._NTile != value))
				{
					this._NTile = value;
				}
			}
		}
	}
	
	public partial class arachnode_rsp_Files_COUNT_BY_ABSOLUTEURIResult
	{
		
		private int _RowNumber;
		
		private long _FileID;
		
		private string _AbsoluteUri;
		
		private int _Count;
		
		private int _Rank;
		
		private int _DenseRank;
		
		private byte _NTile;
		
		public arachnode_rsp_Files_COUNT_BY_ABSOLUTEURIResult()
		{
		}
		
		[Column(Storage="_RowNumber", DbType="Int NOT NULL")]
		public int RowNumber
		{
			get
			{
				return this._RowNumber;
			}
			set
			{
				if ((this._RowNumber != value))
				{
					this._RowNumber = value;
				}
			}
		}
		
		[Column(Storage="_FileID", DbType="BigInt NOT NULL")]
		public long FileID
		{
			get
			{
				return this._FileID;
			}
			set
			{
				if ((this._FileID != value))
				{
					this._FileID = value;
				}
			}
		}
		
		[Column(Storage="_AbsoluteUri", DbType="VarChar(884) NOT NULL", CanBeNull=false)]
		public string AbsoluteUri
		{
			get
			{
				return this._AbsoluteUri;
			}
			set
			{
				if ((this._AbsoluteUri != value))
				{
					this._AbsoluteUri = value;
				}
			}
		}
		
		[Column(Storage="_Count", DbType="Int NOT NULL")]
		public int Count
		{
			get
			{
				return this._Count;
			}
			set
			{
				if ((this._Count != value))
				{
					this._Count = value;
				}
			}
		}
		
		[Column(Storage="_Rank", DbType="Int NOT NULL")]
		public int Rank
		{
			get
			{
				return this._Rank;
			}
			set
			{
				if ((this._Rank != value))
				{
					this._Rank = value;
				}
			}
		}
		
		[Column(Storage="_DenseRank", DbType="Int NOT NULL")]
		public int DenseRank
		{
			get
			{
				return this._DenseRank;
			}
			set
			{
				if ((this._DenseRank != value))
				{
					this._DenseRank = value;
				}
			}
		}
		
		[Column(Storage="_NTile", DbType="TinyInt NOT NULL")]
		public byte NTile
		{
			get
			{
				return this._NTile;
			}
			set
			{
				if ((this._NTile != value))
				{
					this._NTile = value;
				}
			}
		}
	}
	
	public partial class arachnode_rsp_Files_COUNT_BY_DOMAINResult
	{
		
		private int _RowNumber;
		
		private int _DomainID;
		
		private string _Domain;
		
		private int _Count;
		
		private int _Rank;
		
		private int _DenseRank;
		
		private byte _NTile;
		
		public arachnode_rsp_Files_COUNT_BY_DOMAINResult()
		{
		}
		
		[Column(Storage="_RowNumber", DbType="Int NOT NULL")]
		public int RowNumber
		{
			get
			{
				return this._RowNumber;
			}
			set
			{
				if ((this._RowNumber != value))
				{
					this._RowNumber = value;
				}
			}
		}
		
		[Column(Storage="_DomainID", DbType="Int NOT NULL")]
		public int DomainID
		{
			get
			{
				return this._DomainID;
			}
			set
			{
				if ((this._DomainID != value))
				{
					this._DomainID = value;
				}
			}
		}
		
		[Column(Storage="_Domain", DbType="VarChar(884) NOT NULL", CanBeNull=false)]
		public string Domain
		{
			get
			{
				return this._Domain;
			}
			set
			{
				if ((this._Domain != value))
				{
					this._Domain = value;
				}
			}
		}
		
		[Column(Storage="_Count", DbType="Int NOT NULL")]
		public int Count
		{
			get
			{
				return this._Count;
			}
			set
			{
				if ((this._Count != value))
				{
					this._Count = value;
				}
			}
		}
		
		[Column(Storage="_Rank", DbType="Int NOT NULL")]
		public int Rank
		{
			get
			{
				return this._Rank;
			}
			set
			{
				if ((this._Rank != value))
				{
					this._Rank = value;
				}
			}
		}
		
		[Column(Storage="_DenseRank", DbType="Int NOT NULL")]
		public int DenseRank
		{
			get
			{
				return this._DenseRank;
			}
			set
			{
				if ((this._DenseRank != value))
				{
					this._DenseRank = value;
				}
			}
		}
		
		[Column(Storage="_NTile", DbType="TinyInt NOT NULL")]
		public byte NTile
		{
			get
			{
				return this._NTile;
			}
			set
			{
				if ((this._NTile != value))
				{
					this._NTile = value;
				}
			}
		}
	}
	
	public partial class arachnode_rsp_Files_COUNT_BY_EXTENSIONResult
	{
		
		private int _RowNumber;
		
		private int _ExtensionID;
		
		private string _Extension;
		
		private int _Count;
		
		private int _Rank;
		
		private int _DenseRank;
		
		private byte _NTile;
		
		public arachnode_rsp_Files_COUNT_BY_EXTENSIONResult()
		{
		}
		
		[Column(Storage="_RowNumber", DbType="Int NOT NULL")]
		public int RowNumber
		{
			get
			{
				return this._RowNumber;
			}
			set
			{
				if ((this._RowNumber != value))
				{
					this._RowNumber = value;
				}
			}
		}
		
		[Column(Storage="_ExtensionID", DbType="Int NOT NULL")]
		public int ExtensionID
		{
			get
			{
				return this._ExtensionID;
			}
			set
			{
				if ((this._ExtensionID != value))
				{
					this._ExtensionID = value;
				}
			}
		}
		
		[Column(Storage="_Extension", DbType="VarChar(884) NOT NULL", CanBeNull=false)]
		public string Extension
		{
			get
			{
				return this._Extension;
			}
			set
			{
				if ((this._Extension != value))
				{
					this._Extension = value;
				}
			}
		}
		
		[Column(Storage="_Count", DbType="Int NOT NULL")]
		public int Count
		{
			get
			{
				return this._Count;
			}
			set
			{
				if ((this._Count != value))
				{
					this._Count = value;
				}
			}
		}
		
		[Column(Storage="_Rank", DbType="Int NOT NULL")]
		public int Rank
		{
			get
			{
				return this._Rank;
			}
			set
			{
				if ((this._Rank != value))
				{
					this._Rank = value;
				}
			}
		}
		
		[Column(Storage="_DenseRank", DbType="Int NOT NULL")]
		public int DenseRank
		{
			get
			{
				return this._DenseRank;
			}
			set
			{
				if ((this._DenseRank != value))
				{
					this._DenseRank = value;
				}
			}
		}
		
		[Column(Storage="_NTile", DbType="TinyInt NOT NULL")]
		public byte NTile
		{
			get
			{
				return this._NTile;
			}
			set
			{
				if ((this._NTile != value))
				{
					this._NTile = value;
				}
			}
		}
	}
	
	public partial class arachnode_rsp_Files_COUNT_BY_FULLTEXTINDEXTYPEResult
	{
		
		private int _RowNumber;
		
		private string _FullTextIndexType;
		
		private int _Count;
		
		private int _Rank;
		
		private int _DenseRank;
		
		private byte _NTile;
		
		public arachnode_rsp_Files_COUNT_BY_FULLTEXTINDEXTYPEResult()
		{
		}
		
		[Column(Storage="_RowNumber", DbType="Int NOT NULL")]
		public int RowNumber
		{
			get
			{
				return this._RowNumber;
			}
			set
			{
				if ((this._RowNumber != value))
				{
					this._RowNumber = value;
				}
			}
		}
		
		[Column(Storage="_FullTextIndexType", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string FullTextIndexType
		{
			get
			{
				return this._FullTextIndexType;
			}
			set
			{
				if ((this._FullTextIndexType != value))
				{
					this._FullTextIndexType = value;
				}
			}
		}
		
		[Column(Storage="_Count", DbType="Int NOT NULL")]
		public int Count
		{
			get
			{
				return this._Count;
			}
			set
			{
				if ((this._Count != value))
				{
					this._Count = value;
				}
			}
		}
		
		[Column(Storage="_Rank", DbType="Int NOT NULL")]
		public int Rank
		{
			get
			{
				return this._Rank;
			}
			set
			{
				if ((this._Rank != value))
				{
					this._Rank = value;
				}
			}
		}
		
		[Column(Storage="_DenseRank", DbType="Int NOT NULL")]
		public int DenseRank
		{
			get
			{
				return this._DenseRank;
			}
			set
			{
				if ((this._DenseRank != value))
				{
					this._DenseRank = value;
				}
			}
		}
		
		[Column(Storage="_NTile", DbType="TinyInt NOT NULL")]
		public byte NTile
		{
			get
			{
				return this._NTile;
			}
			set
			{
				if ((this._NTile != value))
				{
					this._NTile = value;
				}
			}
		}
	}
	
	public partial class arachnode_rsp_Files_COUNT_BY_HOSTResult
	{
		
		private int _RowNumber;
		
		private int _HostID;
		
		private string _Host;
		
		private int _Count;
		
		private int _Rank;
		
		private int _DenseRank;
		
		private byte _NTile;
		
		public arachnode_rsp_Files_COUNT_BY_HOSTResult()
		{
		}
		
		[Column(Storage="_RowNumber", DbType="Int NOT NULL")]
		public int RowNumber
		{
			get
			{
				return this._RowNumber;
			}
			set
			{
				if ((this._RowNumber != value))
				{
					this._RowNumber = value;
				}
			}
		}
		
		[Column(Storage="_HostID", DbType="Int NOT NULL")]
		public int HostID
		{
			get
			{
				return this._HostID;
			}
			set
			{
				if ((this._HostID != value))
				{
					this._HostID = value;
				}
			}
		}
		
		[Column(Storage="_Host", DbType="VarChar(884) NOT NULL", CanBeNull=false)]
		public string Host
		{
			get
			{
				return this._Host;
			}
			set
			{
				if ((this._Host != value))
				{
					this._Host = value;
				}
			}
		}
		
		[Column(Storage="_Count", DbType="Int NOT NULL")]
		public int Count
		{
			get
			{
				return this._Count;
			}
			set
			{
				if ((this._Count != value))
				{
					this._Count = value;
				}
			}
		}
		
		[Column(Storage="_Rank", DbType="Int NOT NULL")]
		public int Rank
		{
			get
			{
				return this._Rank;
			}
			set
			{
				if ((this._Rank != value))
				{
					this._Rank = value;
				}
			}
		}
		
		[Column(Storage="_DenseRank", DbType="Int NOT NULL")]
		public int DenseRank
		{
			get
			{
				return this._DenseRank;
			}
			set
			{
				if ((this._DenseRank != value))
				{
					this._DenseRank = value;
				}
			}
		}
		
		[Column(Storage="_NTile", DbType="TinyInt NOT NULL")]
		public byte NTile
		{
			get
			{
				return this._NTile;
			}
			set
			{
				if ((this._NTile != value))
				{
					this._NTile = value;
				}
			}
		}
	}
	
	public partial class arachnode_rsp_Files_COUNT_BY_SCHEMEResult
	{
		
		private int _RowNumber;
		
		private int _SchemeID;
		
		private string _Scheme;
		
		private int _Count;
		
		private int _Rank;
		
		private int _DenseRank;
		
		private byte _NTile;
		
		public arachnode_rsp_Files_COUNT_BY_SCHEMEResult()
		{
		}
		
		[Column(Storage="_RowNumber", DbType="Int NOT NULL")]
		public int RowNumber
		{
			get
			{
				return this._RowNumber;
			}
			set
			{
				if ((this._RowNumber != value))
				{
					this._RowNumber = value;
				}
			}
		}
		
		[Column(Storage="_SchemeID", DbType="Int NOT NULL")]
		public int SchemeID
		{
			get
			{
				return this._SchemeID;
			}
			set
			{
				if ((this._SchemeID != value))
				{
					this._SchemeID = value;
				}
			}
		}
		
		[Column(Storage="_Scheme", DbType="VarChar(884) NOT NULL", CanBeNull=false)]
		public string Scheme
		{
			get
			{
				return this._Scheme;
			}
			set
			{
				if ((this._Scheme != value))
				{
					this._Scheme = value;
				}
			}
		}
		
		[Column(Storage="_Count", DbType="Int NOT NULL")]
		public int Count
		{
			get
			{
				return this._Count;
			}
			set
			{
				if ((this._Count != value))
				{
					this._Count = value;
				}
			}
		}
		
		[Column(Storage="_Rank", DbType="Int NOT NULL")]
		public int Rank
		{
			get
			{
				return this._Rank;
			}
			set
			{
				if ((this._Rank != value))
				{
					this._Rank = value;
				}
			}
		}
		
		[Column(Storage="_DenseRank", DbType="Int NOT NULL")]
		public int DenseRank
		{
			get
			{
				return this._DenseRank;
			}
			set
			{
				if ((this._DenseRank != value))
				{
					this._DenseRank = value;
				}
			}
		}
		
		[Column(Storage="_NTile", DbType="TinyInt NOT NULL")]
		public byte NTile
		{
			get
			{
				return this._NTile;
			}
			set
			{
				if ((this._NTile != value))
				{
					this._NTile = value;
				}
			}
		}
	}
	
	public partial class arachnode_rsp_HyperLinks_COUNT_BY_ABSOLUTEURIResult
	{
		
		private int _RowNumber;
		
		private long _HyperLinkID;
		
		private string _AbsoluteUri;
		
		private int _Count;
		
		private int _Rank;
		
		private int _DenseRank;
		
		private byte _NTile;
		
		public arachnode_rsp_HyperLinks_COUNT_BY_ABSOLUTEURIResult()
		{
		}
		
		[Column(Storage="_RowNumber", DbType="Int NOT NULL")]
		public int RowNumber
		{
			get
			{
				return this._RowNumber;
			}
			set
			{
				if ((this._RowNumber != value))
				{
					this._RowNumber = value;
				}
			}
		}
		
		[Column(Storage="_HyperLinkID", DbType="BigInt NOT NULL")]
		public long HyperLinkID
		{
			get
			{
				return this._HyperLinkID;
			}
			set
			{
				if ((this._HyperLinkID != value))
				{
					this._HyperLinkID = value;
				}
			}
		}
		
		[Column(Storage="_AbsoluteUri", DbType="VarChar(884) NOT NULL", CanBeNull=false)]
		public string AbsoluteUri
		{
			get
			{
				return this._AbsoluteUri;
			}
			set
			{
				if ((this._AbsoluteUri != value))
				{
					this._AbsoluteUri = value;
				}
			}
		}
		
		[Column(Storage="_Count", DbType="Int NOT NULL")]
		public int Count
		{
			get
			{
				return this._Count;
			}
			set
			{
				if ((this._Count != value))
				{
					this._Count = value;
				}
			}
		}
		
		[Column(Storage="_Rank", DbType="Int NOT NULL")]
		public int Rank
		{
			get
			{
				return this._Rank;
			}
			set
			{
				if ((this._Rank != value))
				{
					this._Rank = value;
				}
			}
		}
		
		[Column(Storage="_DenseRank", DbType="Int NOT NULL")]
		public int DenseRank
		{
			get
			{
				return this._DenseRank;
			}
			set
			{
				if ((this._DenseRank != value))
				{
					this._DenseRank = value;
				}
			}
		}
		
		[Column(Storage="_NTile", DbType="TinyInt NOT NULL")]
		public byte NTile
		{
			get
			{
				return this._NTile;
			}
			set
			{
				if ((this._NTile != value))
				{
					this._NTile = value;
				}
			}
		}
	}
	
	public partial class arachnode_rsp_HyperLinks_COUNT_BY_DOMAINResult
	{
		
		private int _RowNumber;
		
		private int _DomainID;
		
		private string _Domain;
		
		private int _Count;
		
		private int _Rank;
		
		private int _DenseRank;
		
		private byte _NTile;
		
		public arachnode_rsp_HyperLinks_COUNT_BY_DOMAINResult()
		{
		}
		
		[Column(Storage="_RowNumber", DbType="Int NOT NULL")]
		public int RowNumber
		{
			get
			{
				return this._RowNumber;
			}
			set
			{
				if ((this._RowNumber != value))
				{
					this._RowNumber = value;
				}
			}
		}
		
		[Column(Storage="_DomainID", DbType="Int NOT NULL")]
		public int DomainID
		{
			get
			{
				return this._DomainID;
			}
			set
			{
				if ((this._DomainID != value))
				{
					this._DomainID = value;
				}
			}
		}
		
		[Column(Storage="_Domain", DbType="VarChar(884) NOT NULL", CanBeNull=false)]
		public string Domain
		{
			get
			{
				return this._Domain;
			}
			set
			{
				if ((this._Domain != value))
				{
					this._Domain = value;
				}
			}
		}
		
		[Column(Storage="_Count", DbType="Int NOT NULL")]
		public int Count
		{
			get
			{
				return this._Count;
			}
			set
			{
				if ((this._Count != value))
				{
					this._Count = value;
				}
			}
		}
		
		[Column(Storage="_Rank", DbType="Int NOT NULL")]
		public int Rank
		{
			get
			{
				return this._Rank;
			}
			set
			{
				if ((this._Rank != value))
				{
					this._Rank = value;
				}
			}
		}
		
		[Column(Storage="_DenseRank", DbType="Int NOT NULL")]
		public int DenseRank
		{
			get
			{
				return this._DenseRank;
			}
			set
			{
				if ((this._DenseRank != value))
				{
					this._DenseRank = value;
				}
			}
		}
		
		[Column(Storage="_NTile", DbType="TinyInt NOT NULL")]
		public byte NTile
		{
			get
			{
				return this._NTile;
			}
			set
			{
				if ((this._NTile != value))
				{
					this._NTile = value;
				}
			}
		}
	}
	
	public partial class arachnode_rsp_HyperLinks_COUNT_BY_EXTENSIONResult
	{
		
		private int _RowNumber;
		
		private int _ExtensionID;
		
		private string _Extension;
		
		private int _Count;
		
		private int _Rank;
		
		private int _DenseRank;
		
		private byte _NTile;
		
		public arachnode_rsp_HyperLinks_COUNT_BY_EXTENSIONResult()
		{
		}
		
		[Column(Storage="_RowNumber", DbType="Int NOT NULL")]
		public int RowNumber
		{
			get
			{
				return this._RowNumber;
			}
			set
			{
				if ((this._RowNumber != value))
				{
					this._RowNumber = value;
				}
			}
		}
		
		[Column(Storage="_ExtensionID", DbType="Int NOT NULL")]
		public int ExtensionID
		{
			get
			{
				return this._ExtensionID;
			}
			set
			{
				if ((this._ExtensionID != value))
				{
					this._ExtensionID = value;
				}
			}
		}
		
		[Column(Storage="_Extension", DbType="VarChar(884) NOT NULL", CanBeNull=false)]
		public string Extension
		{
			get
			{
				return this._Extension;
			}
			set
			{
				if ((this._Extension != value))
				{
					this._Extension = value;
				}
			}
		}
		
		[Column(Storage="_Count", DbType="Int NOT NULL")]
		public int Count
		{
			get
			{
				return this._Count;
			}
			set
			{
				if ((this._Count != value))
				{
					this._Count = value;
				}
			}
		}
		
		[Column(Storage="_Rank", DbType="Int NOT NULL")]
		public int Rank
		{
			get
			{
				return this._Rank;
			}
			set
			{
				if ((this._Rank != value))
				{
					this._Rank = value;
				}
			}
		}
		
		[Column(Storage="_DenseRank", DbType="Int NOT NULL")]
		public int DenseRank
		{
			get
			{
				return this._DenseRank;
			}
			set
			{
				if ((this._DenseRank != value))
				{
					this._DenseRank = value;
				}
			}
		}
		
		[Column(Storage="_NTile", DbType="TinyInt NOT NULL")]
		public byte NTile
		{
			get
			{
				return this._NTile;
			}
			set
			{
				if ((this._NTile != value))
				{
					this._NTile = value;
				}
			}
		}
	}
	
	public partial class arachnode_rsp_HyperLinks_COUNT_BY_HOSTResult
	{
		
		private int _RowNumber;
		
		private int _HostID;
		
		private string _Host;
		
		private int _Count;
		
		private int _Rank;
		
		private int _DenseRank;
		
		private byte _NTile;
		
		public arachnode_rsp_HyperLinks_COUNT_BY_HOSTResult()
		{
		}
		
		[Column(Storage="_RowNumber", DbType="Int NOT NULL")]
		public int RowNumber
		{
			get
			{
				return this._RowNumber;
			}
			set
			{
				if ((this._RowNumber != value))
				{
					this._RowNumber = value;
				}
			}
		}
		
		[Column(Storage="_HostID", DbType="Int NOT NULL")]
		public int HostID
		{
			get
			{
				return this._HostID;
			}
			set
			{
				if ((this._HostID != value))
				{
					this._HostID = value;
				}
			}
		}
		
		[Column(Storage="_Host", DbType="VarChar(884) NOT NULL", CanBeNull=false)]
		public string Host
		{
			get
			{
				return this._Host;
			}
			set
			{
				if ((this._Host != value))
				{
					this._Host = value;
				}
			}
		}
		
		[Column(Storage="_Count", DbType="Int NOT NULL")]
		public int Count
		{
			get
			{
				return this._Count;
			}
			set
			{
				if ((this._Count != value))
				{
					this._Count = value;
				}
			}
		}
		
		[Column(Storage="_Rank", DbType="Int NOT NULL")]
		public int Rank
		{
			get
			{
				return this._Rank;
			}
			set
			{
				if ((this._Rank != value))
				{
					this._Rank = value;
				}
			}
		}
		
		[Column(Storage="_DenseRank", DbType="Int NOT NULL")]
		public int DenseRank
		{
			get
			{
				return this._DenseRank;
			}
			set
			{
				if ((this._DenseRank != value))
				{
					this._DenseRank = value;
				}
			}
		}
		
		[Column(Storage="_NTile", DbType="TinyInt NOT NULL")]
		public byte NTile
		{
			get
			{
				return this._NTile;
			}
			set
			{
				if ((this._NTile != value))
				{
					this._NTile = value;
				}
			}
		}
	}
	
	public partial class arachnode_rsp_HyperLinks_COUNT_BY_SCHEMEResult
	{
		
		private int _RowNumber;
		
		private int _SchemeID;
		
		private string _Scheme;
		
		private int _Count;
		
		private int _Rank;
		
		private int _DenseRank;
		
		private byte _NTile;
		
		public arachnode_rsp_HyperLinks_COUNT_BY_SCHEMEResult()
		{
		}
		
		[Column(Storage="_RowNumber", DbType="Int NOT NULL")]
		public int RowNumber
		{
			get
			{
				return this._RowNumber;
			}
			set
			{
				if ((this._RowNumber != value))
				{
					this._RowNumber = value;
				}
			}
		}
		
		[Column(Storage="_SchemeID", DbType="Int NOT NULL")]
		public int SchemeID
		{
			get
			{
				return this._SchemeID;
			}
			set
			{
				if ((this._SchemeID != value))
				{
					this._SchemeID = value;
				}
			}
		}
		
		[Column(Storage="_Scheme", DbType="VarChar(884) NOT NULL", CanBeNull=false)]
		public string Scheme
		{
			get
			{
				return this._Scheme;
			}
			set
			{
				if ((this._Scheme != value))
				{
					this._Scheme = value;
				}
			}
		}
		
		[Column(Storage="_Count", DbType="Int NOT NULL")]
		public int Count
		{
			get
			{
				return this._Count;
			}
			set
			{
				if ((this._Count != value))
				{
					this._Count = value;
				}
			}
		}
		
		[Column(Storage="_Rank", DbType="Int NOT NULL")]
		public int Rank
		{
			get
			{
				return this._Rank;
			}
			set
			{
				if ((this._Rank != value))
				{
					this._Rank = value;
				}
			}
		}
		
		[Column(Storage="_DenseRank", DbType="Int NOT NULL")]
		public int DenseRank
		{
			get
			{
				return this._DenseRank;
			}
			set
			{
				if ((this._DenseRank != value))
				{
					this._DenseRank = value;
				}
			}
		}
		
		[Column(Storage="_NTile", DbType="TinyInt NOT NULL")]
		public byte NTile
		{
			get
			{
				return this._NTile;
			}
			set
			{
				if ((this._NTile != value))
				{
					this._NTile = value;
				}
			}
		}
	}
	
	public partial class arachnode_rsp_Images_COUNT_BY_ABSOLUTEURIResult
	{
		
		private int _RowNumber;
		
		private long _ImageID;
		
		private string _AbsoluteUri;
		
		private int _Count;
		
		private int _Rank;
		
		private int _DenseRank;
		
		private byte _NTile;
		
		public arachnode_rsp_Images_COUNT_BY_ABSOLUTEURIResult()
		{
		}
		
		[Column(Storage="_RowNumber", DbType="Int NOT NULL")]
		public int RowNumber
		{
			get
			{
				return this._RowNumber;
			}
			set
			{
				if ((this._RowNumber != value))
				{
					this._RowNumber = value;
				}
			}
		}
		
		[Column(Storage="_ImageID", DbType="BigInt NOT NULL")]
		public long ImageID
		{
			get
			{
				return this._ImageID;
			}
			set
			{
				if ((this._ImageID != value))
				{
					this._ImageID = value;
				}
			}
		}
		
		[Column(Storage="_AbsoluteUri", DbType="VarChar(884) NOT NULL", CanBeNull=false)]
		public string AbsoluteUri
		{
			get
			{
				return this._AbsoluteUri;
			}
			set
			{
				if ((this._AbsoluteUri != value))
				{
					this._AbsoluteUri = value;
				}
			}
		}
		
		[Column(Storage="_Count", DbType="Int NOT NULL")]
		public int Count
		{
			get
			{
				return this._Count;
			}
			set
			{
				if ((this._Count != value))
				{
					this._Count = value;
				}
			}
		}
		
		[Column(Storage="_Rank", DbType="Int NOT NULL")]
		public int Rank
		{
			get
			{
				return this._Rank;
			}
			set
			{
				if ((this._Rank != value))
				{
					this._Rank = value;
				}
			}
		}
		
		[Column(Storage="_DenseRank", DbType="Int NOT NULL")]
		public int DenseRank
		{
			get
			{
				return this._DenseRank;
			}
			set
			{
				if ((this._DenseRank != value))
				{
					this._DenseRank = value;
				}
			}
		}
		
		[Column(Storage="_NTile", DbType="TinyInt NOT NULL")]
		public byte NTile
		{
			get
			{
				return this._NTile;
			}
			set
			{
				if ((this._NTile != value))
				{
					this._NTile = value;
				}
			}
		}
	}
	
	public partial class arachnode_rsp_Images_COUNT_BY_DOMAINResult
	{
		
		private int _RowNumber;
		
		private int _DomainID;
		
		private string _Domain;
		
		private int _Count;
		
		private int _Rank;
		
		private int _DenseRank;
		
		private byte _NTile;
		
		public arachnode_rsp_Images_COUNT_BY_DOMAINResult()
		{
		}
		
		[Column(Storage="_RowNumber", DbType="Int NOT NULL")]
		public int RowNumber
		{
			get
			{
				return this._RowNumber;
			}
			set
			{
				if ((this._RowNumber != value))
				{
					this._RowNumber = value;
				}
			}
		}
		
		[Column(Storage="_DomainID", DbType="Int NOT NULL")]
		public int DomainID
		{
			get
			{
				return this._DomainID;
			}
			set
			{
				if ((this._DomainID != value))
				{
					this._DomainID = value;
				}
			}
		}
		
		[Column(Storage="_Domain", DbType="VarChar(884) NOT NULL", CanBeNull=false)]
		public string Domain
		{
			get
			{
				return this._Domain;
			}
			set
			{
				if ((this._Domain != value))
				{
					this._Domain = value;
				}
			}
		}
		
		[Column(Storage="_Count", DbType="Int NOT NULL")]
		public int Count
		{
			get
			{
				return this._Count;
			}
			set
			{
				if ((this._Count != value))
				{
					this._Count = value;
				}
			}
		}
		
		[Column(Storage="_Rank", DbType="Int NOT NULL")]
		public int Rank
		{
			get
			{
				return this._Rank;
			}
			set
			{
				if ((this._Rank != value))
				{
					this._Rank = value;
				}
			}
		}
		
		[Column(Storage="_DenseRank", DbType="Int NOT NULL")]
		public int DenseRank
		{
			get
			{
				return this._DenseRank;
			}
			set
			{
				if ((this._DenseRank != value))
				{
					this._DenseRank = value;
				}
			}
		}
		
		[Column(Storage="_NTile", DbType="TinyInt NOT NULL")]
		public byte NTile
		{
			get
			{
				return this._NTile;
			}
			set
			{
				if ((this._NTile != value))
				{
					this._NTile = value;
				}
			}
		}
	}
	
	public partial class arachnode_rsp_Images_COUNT_BY_EXTENSIONResult
	{
		
		private int _RowNumber;
		
		private int _ExtensionID;
		
		private string _Extension;
		
		private int _Count;
		
		private int _Rank;
		
		private int _DenseRank;
		
		private byte _NTile;
		
		public arachnode_rsp_Images_COUNT_BY_EXTENSIONResult()
		{
		}
		
		[Column(Storage="_RowNumber", DbType="Int NOT NULL")]
		public int RowNumber
		{
			get
			{
				return this._RowNumber;
			}
			set
			{
				if ((this._RowNumber != value))
				{
					this._RowNumber = value;
				}
			}
		}
		
		[Column(Storage="_ExtensionID", DbType="Int NOT NULL")]
		public int ExtensionID
		{
			get
			{
				return this._ExtensionID;
			}
			set
			{
				if ((this._ExtensionID != value))
				{
					this._ExtensionID = value;
				}
			}
		}
		
		[Column(Storage="_Extension", DbType="VarChar(884) NOT NULL", CanBeNull=false)]
		public string Extension
		{
			get
			{
				return this._Extension;
			}
			set
			{
				if ((this._Extension != value))
				{
					this._Extension = value;
				}
			}
		}
		
		[Column(Storage="_Count", DbType="Int NOT NULL")]
		public int Count
		{
			get
			{
				return this._Count;
			}
			set
			{
				if ((this._Count != value))
				{
					this._Count = value;
				}
			}
		}
		
		[Column(Storage="_Rank", DbType="Int NOT NULL")]
		public int Rank
		{
			get
			{
				return this._Rank;
			}
			set
			{
				if ((this._Rank != value))
				{
					this._Rank = value;
				}
			}
		}
		
		[Column(Storage="_DenseRank", DbType="Int NOT NULL")]
		public int DenseRank
		{
			get
			{
				return this._DenseRank;
			}
			set
			{
				if ((this._DenseRank != value))
				{
					this._DenseRank = value;
				}
			}
		}
		
		[Column(Storage="_NTile", DbType="TinyInt NOT NULL")]
		public byte NTile
		{
			get
			{
				return this._NTile;
			}
			set
			{
				if ((this._NTile != value))
				{
					this._NTile = value;
				}
			}
		}
	}
	
	public partial class arachnode_rsp_Images_COUNT_BY_FULLTEXTINDEXTYPEResult
	{
		
		private int _RowNumber;
		
		private string _FullTextIndexType;
		
		private int _Count;
		
		private int _Rank;
		
		private int _DenseRank;
		
		private byte _NTile;
		
		public arachnode_rsp_Images_COUNT_BY_FULLTEXTINDEXTYPEResult()
		{
		}
		
		[Column(Storage="_RowNumber", DbType="Int NOT NULL")]
		public int RowNumber
		{
			get
			{
				return this._RowNumber;
			}
			set
			{
				if ((this._RowNumber != value))
				{
					this._RowNumber = value;
				}
			}
		}
		
		[Column(Storage="_FullTextIndexType", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string FullTextIndexType
		{
			get
			{
				return this._FullTextIndexType;
			}
			set
			{
				if ((this._FullTextIndexType != value))
				{
					this._FullTextIndexType = value;
				}
			}
		}
		
		[Column(Storage="_Count", DbType="Int NOT NULL")]
		public int Count
		{
			get
			{
				return this._Count;
			}
			set
			{
				if ((this._Count != value))
				{
					this._Count = value;
				}
			}
		}
		
		[Column(Storage="_Rank", DbType="Int NOT NULL")]
		public int Rank
		{
			get
			{
				return this._Rank;
			}
			set
			{
				if ((this._Rank != value))
				{
					this._Rank = value;
				}
			}
		}
		
		[Column(Storage="_DenseRank", DbType="Int NOT NULL")]
		public int DenseRank
		{
			get
			{
				return this._DenseRank;
			}
			set
			{
				if ((this._DenseRank != value))
				{
					this._DenseRank = value;
				}
			}
		}
		
		[Column(Storage="_NTile", DbType="TinyInt NOT NULL")]
		public byte NTile
		{
			get
			{
				return this._NTile;
			}
			set
			{
				if ((this._NTile != value))
				{
					this._NTile = value;
				}
			}
		}
	}
	
	public partial class arachnode_rsp_Images_COUNT_BY_HOSTResult
	{
		
		private int _RowNumber;
		
		private int _HostID;
		
		private string _Host;
		
		private int _Count;
		
		private int _Rank;
		
		private int _DenseRank;
		
		private byte _NTile;
		
		public arachnode_rsp_Images_COUNT_BY_HOSTResult()
		{
		}
		
		[Column(Storage="_RowNumber", DbType="Int NOT NULL")]
		public int RowNumber
		{
			get
			{
				return this._RowNumber;
			}
			set
			{
				if ((this._RowNumber != value))
				{
					this._RowNumber = value;
				}
			}
		}
		
		[Column(Storage="_HostID", DbType="Int NOT NULL")]
		public int HostID
		{
			get
			{
				return this._HostID;
			}
			set
			{
				if ((this._HostID != value))
				{
					this._HostID = value;
				}
			}
		}
		
		[Column(Storage="_Host", DbType="VarChar(884) NOT NULL", CanBeNull=false)]
		public string Host
		{
			get
			{
				return this._Host;
			}
			set
			{
				if ((this._Host != value))
				{
					this._Host = value;
				}
			}
		}
		
		[Column(Storage="_Count", DbType="Int NOT NULL")]
		public int Count
		{
			get
			{
				return this._Count;
			}
			set
			{
				if ((this._Count != value))
				{
					this._Count = value;
				}
			}
		}
		
		[Column(Storage="_Rank", DbType="Int NOT NULL")]
		public int Rank
		{
			get
			{
				return this._Rank;
			}
			set
			{
				if ((this._Rank != value))
				{
					this._Rank = value;
				}
			}
		}
		
		[Column(Storage="_DenseRank", DbType="Int NOT NULL")]
		public int DenseRank
		{
			get
			{
				return this._DenseRank;
			}
			set
			{
				if ((this._DenseRank != value))
				{
					this._DenseRank = value;
				}
			}
		}
		
		[Column(Storage="_NTile", DbType="TinyInt NOT NULL")]
		public byte NTile
		{
			get
			{
				return this._NTile;
			}
			set
			{
				if ((this._NTile != value))
				{
					this._NTile = value;
				}
			}
		}
	}
	
	public partial class arachnode_rsp_Images_COUNT_BY_SCHEMEResult
	{
		
		private int _RowNumber;
		
		private int _SchemeID;
		
		private string _Scheme;
		
		private int _Count;
		
		private int _Rank;
		
		private int _DenseRank;
		
		private byte _NTile;
		
		public arachnode_rsp_Images_COUNT_BY_SCHEMEResult()
		{
		}
		
		[Column(Storage="_RowNumber", DbType="Int NOT NULL")]
		public int RowNumber
		{
			get
			{
				return this._RowNumber;
			}
			set
			{
				if ((this._RowNumber != value))
				{
					this._RowNumber = value;
				}
			}
		}
		
		[Column(Storage="_SchemeID", DbType="Int NOT NULL")]
		public int SchemeID
		{
			get
			{
				return this._SchemeID;
			}
			set
			{
				if ((this._SchemeID != value))
				{
					this._SchemeID = value;
				}
			}
		}
		
		[Column(Storage="_Scheme", DbType="VarChar(884) NOT NULL", CanBeNull=false)]
		public string Scheme
		{
			get
			{
				return this._Scheme;
			}
			set
			{
				if ((this._Scheme != value))
				{
					this._Scheme = value;
				}
			}
		}
		
		[Column(Storage="_Count", DbType="Int NOT NULL")]
		public int Count
		{
			get
			{
				return this._Count;
			}
			set
			{
				if ((this._Count != value))
				{
					this._Count = value;
				}
			}
		}
		
		[Column(Storage="_Rank", DbType="Int NOT NULL")]
		public int Rank
		{
			get
			{
				return this._Rank;
			}
			set
			{
				if ((this._Rank != value))
				{
					this._Rank = value;
				}
			}
		}
		
		[Column(Storage="_DenseRank", DbType="Int NOT NULL")]
		public int DenseRank
		{
			get
			{
				return this._DenseRank;
			}
			set
			{
				if ((this._DenseRank != value))
				{
					this._DenseRank = value;
				}
			}
		}
		
		[Column(Storage="_NTile", DbType="TinyInt NOT NULL")]
		public byte NTile
		{
			get
			{
				return this._NTile;
			}
			set
			{
				if ((this._NTile != value))
				{
					this._NTile = value;
				}
			}
		}
	}
	
	public partial class arachnode_rsp_WebPages_COUNT_BY_DOMAINResult
	{
		
		private int _RowNumber;
		
		private string _Domain;
		
		private int _Count;
		
		private int _Rank;
		
		private int _DenseRank;
		
		private byte _NTile;
		
		public arachnode_rsp_WebPages_COUNT_BY_DOMAINResult()
		{
		}
		
		[Column(Storage="_RowNumber", DbType="Int NOT NULL")]
		public int RowNumber
		{
			get
			{
				return this._RowNumber;
			}
			set
			{
				if ((this._RowNumber != value))
				{
					this._RowNumber = value;
				}
			}
		}
		
		[Column(Storage="_Domain", DbType="VarChar(884) NOT NULL", CanBeNull=false)]
		public string Domain
		{
			get
			{
				return this._Domain;
			}
			set
			{
				if ((this._Domain != value))
				{
					this._Domain = value;
				}
			}
		}
		
		[Column(Storage="_Count", DbType="Int NOT NULL")]
		public int Count
		{
			get
			{
				return this._Count;
			}
			set
			{
				if ((this._Count != value))
				{
					this._Count = value;
				}
			}
		}
		
		[Column(Storage="_Rank", DbType="Int NOT NULL")]
		public int Rank
		{
			get
			{
				return this._Rank;
			}
			set
			{
				if ((this._Rank != value))
				{
					this._Rank = value;
				}
			}
		}
		
		[Column(Storage="_DenseRank", DbType="Int NOT NULL")]
		public int DenseRank
		{
			get
			{
				return this._DenseRank;
			}
			set
			{
				if ((this._DenseRank != value))
				{
					this._DenseRank = value;
				}
			}
		}
		
		[Column(Storage="_NTile", DbType="TinyInt NOT NULL")]
		public byte NTile
		{
			get
			{
				return this._NTile;
			}
			set
			{
				if ((this._NTile != value))
				{
					this._NTile = value;
				}
			}
		}
	}
	
	public partial class arachnode_rsp_WebPages_COUNT_BY_EXTENSIONResult
	{
		
		private int _RowNumber;
		
		private string _Extension;
		
		private int _Count;
		
		private int _Rank;
		
		private int _DenseRank;
		
		private byte _NTile;
		
		public arachnode_rsp_WebPages_COUNT_BY_EXTENSIONResult()
		{
		}
		
		[Column(Storage="_RowNumber", DbType="Int NOT NULL")]
		public int RowNumber
		{
			get
			{
				return this._RowNumber;
			}
			set
			{
				if ((this._RowNumber != value))
				{
					this._RowNumber = value;
				}
			}
		}
		
		[Column(Storage="_Extension", DbType="VarChar(884) NOT NULL", CanBeNull=false)]
		public string Extension
		{
			get
			{
				return this._Extension;
			}
			set
			{
				if ((this._Extension != value))
				{
					this._Extension = value;
				}
			}
		}
		
		[Column(Storage="_Count", DbType="Int NOT NULL")]
		public int Count
		{
			get
			{
				return this._Count;
			}
			set
			{
				if ((this._Count != value))
				{
					this._Count = value;
				}
			}
		}
		
		[Column(Storage="_Rank", DbType="Int NOT NULL")]
		public int Rank
		{
			get
			{
				return this._Rank;
			}
			set
			{
				if ((this._Rank != value))
				{
					this._Rank = value;
				}
			}
		}
		
		[Column(Storage="_DenseRank", DbType="Int NOT NULL")]
		public int DenseRank
		{
			get
			{
				return this._DenseRank;
			}
			set
			{
				if ((this._DenseRank != value))
				{
					this._DenseRank = value;
				}
			}
		}
		
		[Column(Storage="_NTile", DbType="TinyInt NOT NULL")]
		public byte NTile
		{
			get
			{
				return this._NTile;
			}
			set
			{
				if ((this._NTile != value))
				{
					this._NTile = value;
				}
			}
		}
	}
	
	public partial class arachnode_rsp_WebPages_COUNT_BY_FULLTEXTINDEXTYPEResult
	{
		
		private int _RowNumber;
		
		private string _FullTextIndexType;
		
		private int _Count;
		
		private int _Rank;
		
		private int _DenseRank;
		
		private byte _NTile;
		
		public arachnode_rsp_WebPages_COUNT_BY_FULLTEXTINDEXTYPEResult()
		{
		}
		
		[Column(Storage="_RowNumber", DbType="Int NOT NULL")]
		public int RowNumber
		{
			get
			{
				return this._RowNumber;
			}
			set
			{
				if ((this._RowNumber != value))
				{
					this._RowNumber = value;
				}
			}
		}
		
		[Column(Storage="_FullTextIndexType", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string FullTextIndexType
		{
			get
			{
				return this._FullTextIndexType;
			}
			set
			{
				if ((this._FullTextIndexType != value))
				{
					this._FullTextIndexType = value;
				}
			}
		}
		
		[Column(Storage="_Count", DbType="Int NOT NULL")]
		public int Count
		{
			get
			{
				return this._Count;
			}
			set
			{
				if ((this._Count != value))
				{
					this._Count = value;
				}
			}
		}
		
		[Column(Storage="_Rank", DbType="Int NOT NULL")]
		public int Rank
		{
			get
			{
				return this._Rank;
			}
			set
			{
				if ((this._Rank != value))
				{
					this._Rank = value;
				}
			}
		}
		
		[Column(Storage="_DenseRank", DbType="Int NOT NULL")]
		public int DenseRank
		{
			get
			{
				return this._DenseRank;
			}
			set
			{
				if ((this._DenseRank != value))
				{
					this._DenseRank = value;
				}
			}
		}
		
		[Column(Storage="_NTile", DbType="TinyInt NOT NULL")]
		public byte NTile
		{
			get
			{
				return this._NTile;
			}
			set
			{
				if ((this._NTile != value))
				{
					this._NTile = value;
				}
			}
		}
	}
	
	public partial class arachnode_rsp_WebPages_COUNT_BY_HOSTResult
	{
		
		private int _RowNumber;
		
		private string _Host;
		
		private int _Count;
		
		private int _Rank;
		
		private int _DenseRank;
		
		private byte _NTile;
		
		public arachnode_rsp_WebPages_COUNT_BY_HOSTResult()
		{
		}
		
		[Column(Storage="_RowNumber", DbType="Int NOT NULL")]
		public int RowNumber
		{
			get
			{
				return this._RowNumber;
			}
			set
			{
				if ((this._RowNumber != value))
				{
					this._RowNumber = value;
				}
			}
		}
		
		[Column(Storage="_Host", DbType="VarChar(884) NOT NULL", CanBeNull=false)]
		public string Host
		{
			get
			{
				return this._Host;
			}
			set
			{
				if ((this._Host != value))
				{
					this._Host = value;
				}
			}
		}
		
		[Column(Storage="_Count", DbType="Int NOT NULL")]
		public int Count
		{
			get
			{
				return this._Count;
			}
			set
			{
				if ((this._Count != value))
				{
					this._Count = value;
				}
			}
		}
		
		[Column(Storage="_Rank", DbType="Int NOT NULL")]
		public int Rank
		{
			get
			{
				return this._Rank;
			}
			set
			{
				if ((this._Rank != value))
				{
					this._Rank = value;
				}
			}
		}
		
		[Column(Storage="_DenseRank", DbType="Int NOT NULL")]
		public int DenseRank
		{
			get
			{
				return this._DenseRank;
			}
			set
			{
				if ((this._DenseRank != value))
				{
					this._DenseRank = value;
				}
			}
		}
		
		[Column(Storage="_NTile", DbType="TinyInt NOT NULL")]
		public byte NTile
		{
			get
			{
				return this._NTile;
			}
			set
			{
				if ((this._NTile != value))
				{
					this._NTile = value;
				}
			}
		}
	}
	
	public partial class arachnode_rsp_WebPages_COUNT_BY_SCHEMEResult
	{
		
		private int _RowNumber;
		
		private string _Scheme;
		
		private int _Count;
		
		private int _Rank;
		
		private int _DenseRank;
		
		private byte _NTile;
		
		public arachnode_rsp_WebPages_COUNT_BY_SCHEMEResult()
		{
		}
		
		[Column(Storage="_RowNumber", DbType="Int NOT NULL")]
		public int RowNumber
		{
			get
			{
				return this._RowNumber;
			}
			set
			{
				if ((this._RowNumber != value))
				{
					this._RowNumber = value;
				}
			}
		}
		
		[Column(Storage="_Scheme", DbType="VarChar(884) NOT NULL", CanBeNull=false)]
		public string Scheme
		{
			get
			{
				return this._Scheme;
			}
			set
			{
				if ((this._Scheme != value))
				{
					this._Scheme = value;
				}
			}
		}
		
		[Column(Storage="_Count", DbType="Int NOT NULL")]
		public int Count
		{
			get
			{
				return this._Count;
			}
			set
			{
				if ((this._Count != value))
				{
					this._Count = value;
				}
			}
		}
		
		[Column(Storage="_Rank", DbType="Int NOT NULL")]
		public int Rank
		{
			get
			{
				return this._Rank;
			}
			set
			{
				if ((this._Rank != value))
				{
					this._Rank = value;
				}
			}
		}
		
		[Column(Storage="_DenseRank", DbType="Int NOT NULL")]
		public int DenseRank
		{
			get
			{
				return this._DenseRank;
			}
			set
			{
				if ((this._DenseRank != value))
				{
					this._DenseRank = value;
				}
			}
		}
		
		[Column(Storage="_NTile", DbType="TinyInt NOT NULL")]
		public byte NTile
		{
			get
			{
				return this._NTile;
			}
			set
			{
				if ((this._NTile != value))
				{
					this._NTile = value;
				}
			}
		}
	}
}
#pragma warning restore 1591
