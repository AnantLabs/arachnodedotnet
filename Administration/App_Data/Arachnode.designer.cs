#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.4952
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Arachnode.Administration.App_Data
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[System.Data.Linq.Mapping.DatabaseAttribute(Name="arachnode.net")]
	public partial class ArachnodeDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertAllowedDataType(AllowedDataType instance);
    partial void UpdateAllowedDataType(AllowedDataType instance);
    partial void DeleteAllowedDataType(AllowedDataType instance);
    partial void InsertWebPages_COUNT_BY_SCHEME(WebPages_COUNT_BY_SCHEME instance);
    partial void UpdateWebPages_COUNT_BY_SCHEME(WebPages_COUNT_BY_SCHEME instance);
    partial void DeleteWebPages_COUNT_BY_SCHEME(WebPages_COUNT_BY_SCHEME instance);
    partial void InsertAllowedExtension(AllowedExtension instance);
    partial void UpdateAllowedExtension(AllowedExtension instance);
    partial void DeleteAllowedExtension(AllowedExtension instance);
    partial void InsertAllowedScheme(AllowedScheme instance);
    partial void UpdateAllowedScheme(AllowedScheme instance);
    partial void DeleteAllowedScheme(AllowedScheme instance);
    partial void InsertConfiguration(Configuration instance);
    partial void UpdateConfiguration(Configuration instance);
    partial void DeleteConfiguration(Configuration instance);
    partial void InsertConfigurationType(ConfigurationType instance);
    partial void UpdateConfigurationType(ConfigurationType instance);
    partial void DeleteConfigurationType(ConfigurationType instance);
    partial void InsertContentType(ContentType instance);
    partial void UpdateContentType(ContentType instance);
    partial void DeleteContentType(ContentType instance);
    partial void InsertContentTypeType(ContentTypeType instance);
    partial void UpdateContentTypeType(ContentTypeType instance);
    partial void DeleteContentTypeType(ContentTypeType instance);
    partial void InsertCrawlAction(CrawlAction instance);
    partial void UpdateCrawlAction(CrawlAction instance);
    partial void DeleteCrawlAction(CrawlAction instance);
    partial void InsertCrawlActionType(CrawlActionType instance);
    partial void UpdateCrawlActionType(CrawlActionType instance);
    partial void DeleteCrawlActionType(CrawlActionType instance);
    partial void InsertCrawlRule(CrawlRule instance);
    partial void UpdateCrawlRule(CrawlRule instance);
    partial void DeleteCrawlRule(CrawlRule instance);
    partial void InsertCrawlRuleType(CrawlRuleType instance);
    partial void UpdateCrawlRuleType(CrawlRuleType instance);
    partial void DeleteCrawlRuleType(CrawlRuleType instance);
    partial void InsertDisallowedDomain(DisallowedDomain instance);
    partial void UpdateDisallowedDomain(DisallowedDomain instance);
    partial void DeleteDisallowedDomain(DisallowedDomain instance);
    partial void InsertDisallowedExtension(DisallowedExtension instance);
    partial void UpdateDisallowedExtension(DisallowedExtension instance);
    partial void DeleteDisallowedExtension(DisallowedExtension instance);
    partial void InsertDisallowedFileExtension(DisallowedFileExtension instance);
    partial void UpdateDisallowedFileExtension(DisallowedFileExtension instance);
    partial void DeleteDisallowedFileExtension(DisallowedFileExtension instance);
    partial void InsertDisallowedHost(DisallowedHost instance);
    partial void UpdateDisallowedHost(DisallowedHost instance);
    partial void DeleteDisallowedHost(DisallowedHost instance);
    partial void InsertDisallowedScheme(DisallowedScheme instance);
    partial void UpdateDisallowedScheme(DisallowedScheme instance);
    partial void DeleteDisallowedScheme(DisallowedScheme instance);
    partial void InsertDisallowedWord(DisallowedWord instance);
    partial void UpdateDisallowedWord(DisallowedWord instance);
    partial void DeleteDisallowedWord(DisallowedWord instance);
    partial void InsertEngineAction(EngineAction instance);
    partial void UpdateEngineAction(EngineAction instance);
    partial void DeleteEngineAction(EngineAction instance);
    partial void InsertEngineActionType(EngineActionType instance);
    partial void UpdateEngineActionType(EngineActionType instance);
    partial void DeleteEngineActionType(EngineActionType instance);
    partial void InsertFullTextIndexType(FullTextIndexType instance);
    partial void UpdateFullTextIndexType(FullTextIndexType instance);
    partial void DeleteFullTextIndexType(FullTextIndexType instance);
    partial void InsertPriority(Priority instance);
    partial void UpdatePriority(Priority instance);
    partial void DeletePriority(Priority instance);
    partial void InsertVersion(Version instance);
    partial void UpdateVersion(Version instance);
    partial void DeleteVersion(Version instance);
    partial void InsertCrawlRequest(CrawlRequest instance);
    partial void UpdateCrawlRequest(CrawlRequest instance);
    partial void DeleteCrawlRequest(CrawlRequest instance);
    partial void InsertDisallowedAbsoluteUri(DisallowedAbsoluteUri instance);
    partial void UpdateDisallowedAbsoluteUri(DisallowedAbsoluteUri instance);
    partial void DeleteDisallowedAbsoluteUri(DisallowedAbsoluteUri instance);
    partial void InsertDisallowedAbsoluteUris_Discovery(DisallowedAbsoluteUris_Discovery instance);
    partial void UpdateDisallowedAbsoluteUris_Discovery(DisallowedAbsoluteUris_Discovery instance);
    partial void DeleteDisallowedAbsoluteUris_Discovery(DisallowedAbsoluteUris_Discovery instance);
    partial void InsertDisallowedAbsoluteUris_Hosts_Discovery(DisallowedAbsoluteUris_Hosts_Discovery instance);
    partial void UpdateDisallowedAbsoluteUris_Hosts_Discovery(DisallowedAbsoluteUris_Hosts_Discovery instance);
    partial void DeleteDisallowedAbsoluteUris_Hosts_Discovery(DisallowedAbsoluteUris_Hosts_Discovery instance);
    partial void InsertDisallowedAbsoluteUris_Schemes_Discovery(DisallowedAbsoluteUris_Schemes_Discovery instance);
    partial void UpdateDisallowedAbsoluteUris_Schemes_Discovery(DisallowedAbsoluteUris_Schemes_Discovery instance);
    partial void DeleteDisallowedAbsoluteUris_Schemes_Discovery(DisallowedAbsoluteUris_Schemes_Discovery instance);
    partial void InsertDiscoveryState(DiscoveryState instance);
    partial void UpdateDiscoveryState(DiscoveryState instance);
    partial void DeleteDiscoveryState(DiscoveryState instance);
    partial void InsertDiscoveryType(DiscoveryType instance);
    partial void UpdateDiscoveryType(DiscoveryType instance);
    partial void DeleteDiscoveryType(DiscoveryType instance);
    partial void InsertDocument(Document instance);
    partial void UpdateDocument(Document instance);
    partial void DeleteDocument(Document instance);
    partial void InsertDocumentType(DocumentType instance);
    partial void UpdateDocumentType(DocumentType instance);
    partial void DeleteDocumentType(DocumentType instance);
    partial void InsertDomain(Domain instance);
    partial void UpdateDomain(Domain instance);
    partial void DeleteDomain(Domain instance);
    partial void InsertDomains_Discovery(Domains_Discovery instance);
    partial void UpdateDomains_Discovery(Domains_Discovery instance);
    partial void DeleteDomains_Discovery(Domains_Discovery instance);
    partial void InsertEmailAddress(EmailAddress instance);
    partial void UpdateEmailAddress(EmailAddress instance);
    partial void DeleteEmailAddress(EmailAddress instance);
    partial void InsertEmailAddresses_Discovery(EmailAddresses_Discovery instance);
    partial void UpdateEmailAddresses_Discovery(EmailAddresses_Discovery instance);
    partial void DeleteEmailAddresses_Discovery(EmailAddresses_Discovery instance);
    partial void InsertEmailAddresses_Hosts_Discovery(EmailAddresses_Hosts_Discovery instance);
    partial void UpdateEmailAddresses_Hosts_Discovery(EmailAddresses_Hosts_Discovery instance);
    partial void DeleteEmailAddresses_Hosts_Discovery(EmailAddresses_Hosts_Discovery instance);
    partial void InsertEmailAddresses_Schemes_Discovery(EmailAddresses_Schemes_Discovery instance);
    partial void UpdateEmailAddresses_Schemes_Discovery(EmailAddresses_Schemes_Discovery instance);
    partial void DeleteEmailAddresses_Schemes_Discovery(EmailAddresses_Schemes_Discovery instance);
    partial void InsertException(Exception instance);
    partial void UpdateException(Exception instance);
    partial void DeleteException(Exception instance);
    partial void InsertExceptions_Hosts_Discovery(Exceptions_Hosts_Discovery instance);
    partial void UpdateExceptions_Hosts_Discovery(Exceptions_Hosts_Discovery instance);
    partial void DeleteExceptions_Hosts_Discovery(Exceptions_Hosts_Discovery instance);
    partial void InsertExceptions_Schemes_Discovery(Exceptions_Schemes_Discovery instance);
    partial void UpdateExceptions_Schemes_Discovery(Exceptions_Schemes_Discovery instance);
    partial void DeleteExceptions_Schemes_Discovery(Exceptions_Schemes_Discovery instance);
    partial void InsertExtension(Extension instance);
    partial void UpdateExtension(Extension instance);
    partial void DeleteExtension(Extension instance);
    partial void InsertExtensions_Discovery(Extensions_Discovery instance);
    partial void UpdateExtensions_Discovery(Extensions_Discovery instance);
    partial void DeleteExtensions_Discovery(Extensions_Discovery instance);
    partial void InsertFile(File instance);
    partial void UpdateFile(File instance);
    partial void DeleteFile(File instance);
    partial void InsertFiles_Discovery(Files_Discovery instance);
    partial void UpdateFiles_Discovery(Files_Discovery instance);
    partial void DeleteFiles_Discovery(Files_Discovery instance);
    partial void InsertFiles_Hosts_Discovery(Files_Hosts_Discovery instance);
    partial void UpdateFiles_Hosts_Discovery(Files_Hosts_Discovery instance);
    partial void DeleteFiles_Hosts_Discovery(Files_Hosts_Discovery instance);
    partial void InsertFiles_MetaData(Files_MetaData instance);
    partial void UpdateFiles_MetaData(Files_MetaData instance);
    partial void DeleteFiles_MetaData(Files_MetaData instance);
    partial void InsertFiles_Schemes_Discovery(Files_Schemes_Discovery instance);
    partial void UpdateFiles_Schemes_Discovery(Files_Schemes_Discovery instance);
    partial void DeleteFiles_Schemes_Discovery(Files_Schemes_Discovery instance);
    partial void InsertHost(Host instance);
    partial void UpdateHost(Host instance);
    partial void DeleteHost(Host instance);
    partial void InsertHosts_Discovery(Hosts_Discovery instance);
    partial void UpdateHosts_Discovery(Hosts_Discovery instance);
    partial void DeleteHosts_Discovery(Hosts_Discovery instance);
    partial void InsertHyperLink(HyperLink instance);
    partial void UpdateHyperLink(HyperLink instance);
    partial void DeleteHyperLink(HyperLink instance);
    partial void InsertHyperLinks_Discovery(HyperLinks_Discovery instance);
    partial void UpdateHyperLinks_Discovery(HyperLinks_Discovery instance);
    partial void DeleteHyperLinks_Discovery(HyperLinks_Discovery instance);
    partial void InsertHyperLinks_Hosts_Discovery(HyperLinks_Hosts_Discovery instance);
    partial void UpdateHyperLinks_Hosts_Discovery(HyperLinks_Hosts_Discovery instance);
    partial void DeleteHyperLinks_Hosts_Discovery(HyperLinks_Hosts_Discovery instance);
    partial void InsertHyperLinks_Schemes_Discovery(HyperLinks_Schemes_Discovery instance);
    partial void UpdateHyperLinks_Schemes_Discovery(HyperLinks_Schemes_Discovery instance);
    partial void DeleteHyperLinks_Schemes_Discovery(HyperLinks_Schemes_Discovery instance);
    partial void InsertImage(Image instance);
    partial void UpdateImage(Image instance);
    partial void DeleteImage(Image instance);
    partial void InsertImages_Discovery(Images_Discovery instance);
    partial void UpdateImages_Discovery(Images_Discovery instance);
    partial void DeleteImages_Discovery(Images_Discovery instance);
    partial void InsertImages_Hosts_Discovery(Images_Hosts_Discovery instance);
    partial void UpdateImages_Hosts_Discovery(Images_Hosts_Discovery instance);
    partial void DeleteImages_Hosts_Discovery(Images_Hosts_Discovery instance);
    partial void InsertImages_MetaData(Images_MetaData instance);
    partial void UpdateImages_MetaData(Images_MetaData instance);
    partial void DeleteImages_MetaData(Images_MetaData instance);
    partial void InsertImages_Schemes_Discovery(Images_Schemes_Discovery instance);
    partial void UpdateImages_Schemes_Discovery(Images_Schemes_Discovery instance);
    partial void DeleteImages_Schemes_Discovery(Images_Schemes_Discovery instance);
    partial void InsertScheme(Scheme instance);
    partial void UpdateScheme(Scheme instance);
    partial void DeleteScheme(Scheme instance);
    partial void InsertSchemes_Discovery(Schemes_Discovery instance);
    partial void UpdateSchemes_Discovery(Schemes_Discovery instance);
    partial void DeleteSchemes_Discovery(Schemes_Discovery instance);
    partial void InsertUriClassificationType(UriClassificationType instance);
    partial void UpdateUriClassificationType(UriClassificationType instance);
    partial void DeleteUriClassificationType(UriClassificationType instance);
    partial void InsertWebPage(WebPage instance);
    partial void UpdateWebPage(WebPage instance);
    partial void DeleteWebPage(WebPage instance);
    partial void InsertWebPages_Hosts_Discovery(WebPages_Hosts_Discovery instance);
    partial void UpdateWebPages_Hosts_Discovery(WebPages_Hosts_Discovery instance);
    partial void DeleteWebPages_Hosts_Discovery(WebPages_Hosts_Discovery instance);
    partial void InsertWebPages_MetaData(WebPages_MetaData instance);
    partial void UpdateWebPages_MetaData(WebPages_MetaData instance);
    partial void DeleteWebPages_MetaData(WebPages_MetaData instance);
    partial void InsertWebPages_MetaData_TermExtraction(WebPages_MetaData_TermExtraction instance);
    partial void UpdateWebPages_MetaData_TermExtraction(WebPages_MetaData_TermExtraction instance);
    partial void DeleteWebPages_MetaData_TermExtraction(WebPages_MetaData_TermExtraction instance);
    partial void InsertWebPages_MetaData_TermLookup(WebPages_MetaData_TermLookup instance);
    partial void UpdateWebPages_MetaData_TermLookup(WebPages_MetaData_TermLookup instance);
    partial void DeleteWebPages_MetaData_TermLookup(WebPages_MetaData_TermLookup instance);
    partial void InsertWebPages_Schemes_Discovery(WebPages_Schemes_Discovery instance);
    partial void UpdateWebPages_Schemes_Discovery(WebPages_Schemes_Discovery instance);
    partial void DeleteWebPages_Schemes_Discovery(WebPages_Schemes_Discovery instance);
    partial void InsertDisallowedAbsoluteUris_COUNT_BY_ABSOLUTEURI(DisallowedAbsoluteUris_COUNT_BY_ABSOLUTEURI instance);
    partial void UpdateDisallowedAbsoluteUris_COUNT_BY_ABSOLUTEURI(DisallowedAbsoluteUris_COUNT_BY_ABSOLUTEURI instance);
    partial void DeleteDisallowedAbsoluteUris_COUNT_BY_ABSOLUTEURI(DisallowedAbsoluteUris_COUNT_BY_ABSOLUTEURI instance);
    partial void InsertDisallowedAbsoluteUris_COUNT_BY_DOMAIN(DisallowedAbsoluteUris_COUNT_BY_DOMAIN instance);
    partial void UpdateDisallowedAbsoluteUris_COUNT_BY_DOMAIN(DisallowedAbsoluteUris_COUNT_BY_DOMAIN instance);
    partial void DeleteDisallowedAbsoluteUris_COUNT_BY_DOMAIN(DisallowedAbsoluteUris_COUNT_BY_DOMAIN instance);
    partial void InsertDisallowedAbsoluteUris_COUNT_BY_EXTENSION(DisallowedAbsoluteUris_COUNT_BY_EXTENSION instance);
    partial void UpdateDisallowedAbsoluteUris_COUNT_BY_EXTENSION(DisallowedAbsoluteUris_COUNT_BY_EXTENSION instance);
    partial void DeleteDisallowedAbsoluteUris_COUNT_BY_EXTENSION(DisallowedAbsoluteUris_COUNT_BY_EXTENSION instance);
    partial void InsertDisallowedAbsoluteUris_COUNT_BY_HOST(DisallowedAbsoluteUris_COUNT_BY_HOST instance);
    partial void UpdateDisallowedAbsoluteUris_COUNT_BY_HOST(DisallowedAbsoluteUris_COUNT_BY_HOST instance);
    partial void DeleteDisallowedAbsoluteUris_COUNT_BY_HOST(DisallowedAbsoluteUris_COUNT_BY_HOST instance);
    partial void InsertDisallowedAbsoluteUris_COUNT_BY_SCHEME(DisallowedAbsoluteUris_COUNT_BY_SCHEME instance);
    partial void UpdateDisallowedAbsoluteUris_COUNT_BY_SCHEME(DisallowedAbsoluteUris_COUNT_BY_SCHEME instance);
    partial void DeleteDisallowedAbsoluteUris_COUNT_BY_SCHEME(DisallowedAbsoluteUris_COUNT_BY_SCHEME instance);
    partial void InsertDisallowedAbsoluteUris_MOST_POPULAR_ABSOLUTEURIS_BY_ABSOLUTEURI(DisallowedAbsoluteUris_MOST_POPULAR_ABSOLUTEURIS_BY_ABSOLUTEURI instance);
    partial void UpdateDisallowedAbsoluteUris_MOST_POPULAR_ABSOLUTEURIS_BY_ABSOLUTEURI(DisallowedAbsoluteUris_MOST_POPULAR_ABSOLUTEURIS_BY_ABSOLUTEURI instance);
    partial void DeleteDisallowedAbsoluteUris_MOST_POPULAR_ABSOLUTEURIS_BY_ABSOLUTEURI(DisallowedAbsoluteUris_MOST_POPULAR_ABSOLUTEURIS_BY_ABSOLUTEURI instance);
    partial void InsertDisallowedAbsoluteUris_MOST_POPULAR_ABSOLUTEURIS_BY_DOMAIN(DisallowedAbsoluteUris_MOST_POPULAR_ABSOLUTEURIS_BY_DOMAIN instance);
    partial void UpdateDisallowedAbsoluteUris_MOST_POPULAR_ABSOLUTEURIS_BY_DOMAIN(DisallowedAbsoluteUris_MOST_POPULAR_ABSOLUTEURIS_BY_DOMAIN instance);
    partial void DeleteDisallowedAbsoluteUris_MOST_POPULAR_ABSOLUTEURIS_BY_DOMAIN(DisallowedAbsoluteUris_MOST_POPULAR_ABSOLUTEURIS_BY_DOMAIN instance);
    partial void InsertDisallowedAbsoluteUris_MOST_POPULAR_ABSOLUTEURIS_BY_EXTENSION(DisallowedAbsoluteUris_MOST_POPULAR_ABSOLUTEURIS_BY_EXTENSION instance);
    partial void UpdateDisallowedAbsoluteUris_MOST_POPULAR_ABSOLUTEURIS_BY_EXTENSION(DisallowedAbsoluteUris_MOST_POPULAR_ABSOLUTEURIS_BY_EXTENSION instance);
    partial void DeleteDisallowedAbsoluteUris_MOST_POPULAR_ABSOLUTEURIS_BY_EXTENSION(DisallowedAbsoluteUris_MOST_POPULAR_ABSOLUTEURIS_BY_EXTENSION instance);
    partial void InsertDisallowedAbsoluteUris_MOST_POPULAR_ABSOLUTEURIS_BY_HOST(DisallowedAbsoluteUris_MOST_POPULAR_ABSOLUTEURIS_BY_HOST instance);
    partial void UpdateDisallowedAbsoluteUris_MOST_POPULAR_ABSOLUTEURIS_BY_HOST(DisallowedAbsoluteUris_MOST_POPULAR_ABSOLUTEURIS_BY_HOST instance);
    partial void DeleteDisallowedAbsoluteUris_MOST_POPULAR_ABSOLUTEURIS_BY_HOST(DisallowedAbsoluteUris_MOST_POPULAR_ABSOLUTEURIS_BY_HOST instance);
    partial void InsertDisallowedAbsoluteUris_MOST_POPULAR_ABSOLUTEURIS_BY_SCHEME(DisallowedAbsoluteUris_MOST_POPULAR_ABSOLUTEURIS_BY_SCHEME instance);
    partial void UpdateDisallowedAbsoluteUris_MOST_POPULAR_ABSOLUTEURIS_BY_SCHEME(DisallowedAbsoluteUris_MOST_POPULAR_ABSOLUTEURIS_BY_SCHEME instance);
    partial void DeleteDisallowedAbsoluteUris_MOST_POPULAR_ABSOLUTEURIS_BY_SCHEME(DisallowedAbsoluteUris_MOST_POPULAR_ABSOLUTEURIS_BY_SCHEME instance);
    partial void InsertDisallowedAbsoluteUris_MOST_POPULAR_DOMAINS_BY_ABSOLUTEURI(DisallowedAbsoluteUris_MOST_POPULAR_DOMAINS_BY_ABSOLUTEURI instance);
    partial void UpdateDisallowedAbsoluteUris_MOST_POPULAR_DOMAINS_BY_ABSOLUTEURI(DisallowedAbsoluteUris_MOST_POPULAR_DOMAINS_BY_ABSOLUTEURI instance);
    partial void DeleteDisallowedAbsoluteUris_MOST_POPULAR_DOMAINS_BY_ABSOLUTEURI(DisallowedAbsoluteUris_MOST_POPULAR_DOMAINS_BY_ABSOLUTEURI instance);
    partial void InsertDisallowedAbsoluteUris_MOST_POPULAR_DOMAINS_BY_DOMAIN(DisallowedAbsoluteUris_MOST_POPULAR_DOMAINS_BY_DOMAIN instance);
    partial void UpdateDisallowedAbsoluteUris_MOST_POPULAR_DOMAINS_BY_DOMAIN(DisallowedAbsoluteUris_MOST_POPULAR_DOMAINS_BY_DOMAIN instance);
    partial void DeleteDisallowedAbsoluteUris_MOST_POPULAR_DOMAINS_BY_DOMAIN(DisallowedAbsoluteUris_MOST_POPULAR_DOMAINS_BY_DOMAIN instance);
    partial void InsertDisallowedAbsoluteUris_MOST_POPULAR_DOMAINS_BY_EXTENSION(DisallowedAbsoluteUris_MOST_POPULAR_DOMAINS_BY_EXTENSION instance);
    partial void UpdateDisallowedAbsoluteUris_MOST_POPULAR_DOMAINS_BY_EXTENSION(DisallowedAbsoluteUris_MOST_POPULAR_DOMAINS_BY_EXTENSION instance);
    partial void DeleteDisallowedAbsoluteUris_MOST_POPULAR_DOMAINS_BY_EXTENSION(DisallowedAbsoluteUris_MOST_POPULAR_DOMAINS_BY_EXTENSION instance);
    partial void InsertDisallowedAbsoluteUris_MOST_POPULAR_DOMAINS_BY_HOST(DisallowedAbsoluteUris_MOST_POPULAR_DOMAINS_BY_HOST instance);
    partial void UpdateDisallowedAbsoluteUris_MOST_POPULAR_DOMAINS_BY_HOST(DisallowedAbsoluteUris_MOST_POPULAR_DOMAINS_BY_HOST instance);
    partial void DeleteDisallowedAbsoluteUris_MOST_POPULAR_DOMAINS_BY_HOST(DisallowedAbsoluteUris_MOST_POPULAR_DOMAINS_BY_HOST instance);
    partial void InsertDisallowedAbsoluteUris_MOST_POPULAR_DOMAINS_BY_SCHEME(DisallowedAbsoluteUris_MOST_POPULAR_DOMAINS_BY_SCHEME instance);
    partial void UpdateDisallowedAbsoluteUris_MOST_POPULAR_DOMAINS_BY_SCHEME(DisallowedAbsoluteUris_MOST_POPULAR_DOMAINS_BY_SCHEME instance);
    partial void DeleteDisallowedAbsoluteUris_MOST_POPULAR_DOMAINS_BY_SCHEME(DisallowedAbsoluteUris_MOST_POPULAR_DOMAINS_BY_SCHEME instance);
    partial void InsertDisallowedAbsoluteUris_MOST_POPULAR_EXTENSIONS_BY_ABSOLUTEURI(DisallowedAbsoluteUris_MOST_POPULAR_EXTENSIONS_BY_ABSOLUTEURI instance);
    partial void UpdateDisallowedAbsoluteUris_MOST_POPULAR_EXTENSIONS_BY_ABSOLUTEURI(DisallowedAbsoluteUris_MOST_POPULAR_EXTENSIONS_BY_ABSOLUTEURI instance);
    partial void DeleteDisallowedAbsoluteUris_MOST_POPULAR_EXTENSIONS_BY_ABSOLUTEURI(DisallowedAbsoluteUris_MOST_POPULAR_EXTENSIONS_BY_ABSOLUTEURI instance);
    partial void InsertDisallowedAbsoluteUris_MOST_POPULAR_EXTENSIONS_BY_DOMAIN(DisallowedAbsoluteUris_MOST_POPULAR_EXTENSIONS_BY_DOMAIN instance);
    partial void UpdateDisallowedAbsoluteUris_MOST_POPULAR_EXTENSIONS_BY_DOMAIN(DisallowedAbsoluteUris_MOST_POPULAR_EXTENSIONS_BY_DOMAIN instance);
    partial void DeleteDisallowedAbsoluteUris_MOST_POPULAR_EXTENSIONS_BY_DOMAIN(DisallowedAbsoluteUris_MOST_POPULAR_EXTENSIONS_BY_DOMAIN instance);
    partial void InsertDisallowedAbsoluteUris_MOST_POPULAR_EXTENSIONS_BY_EXTENSION(DisallowedAbsoluteUris_MOST_POPULAR_EXTENSIONS_BY_EXTENSION instance);
    partial void UpdateDisallowedAbsoluteUris_MOST_POPULAR_EXTENSIONS_BY_EXTENSION(DisallowedAbsoluteUris_MOST_POPULAR_EXTENSIONS_BY_EXTENSION instance);
    partial void DeleteDisallowedAbsoluteUris_MOST_POPULAR_EXTENSIONS_BY_EXTENSION(DisallowedAbsoluteUris_MOST_POPULAR_EXTENSIONS_BY_EXTENSION instance);
    partial void InsertDisallowedAbsoluteUris_MOST_POPULAR_EXTENSIONS_BY_HOST(DisallowedAbsoluteUris_MOST_POPULAR_EXTENSIONS_BY_HOST instance);
    partial void UpdateDisallowedAbsoluteUris_MOST_POPULAR_EXTENSIONS_BY_HOST(DisallowedAbsoluteUris_MOST_POPULAR_EXTENSIONS_BY_HOST instance);
    partial void DeleteDisallowedAbsoluteUris_MOST_POPULAR_EXTENSIONS_BY_HOST(DisallowedAbsoluteUris_MOST_POPULAR_EXTENSIONS_BY_HOST instance);
    partial void InsertDisallowedAbsoluteUris_MOST_POPULAR_EXTENSIONS_BY_SCHEME(DisallowedAbsoluteUris_MOST_POPULAR_EXTENSIONS_BY_SCHEME instance);
    partial void UpdateDisallowedAbsoluteUris_MOST_POPULAR_EXTENSIONS_BY_SCHEME(DisallowedAbsoluteUris_MOST_POPULAR_EXTENSIONS_BY_SCHEME instance);
    partial void DeleteDisallowedAbsoluteUris_MOST_POPULAR_EXTENSIONS_BY_SCHEME(DisallowedAbsoluteUris_MOST_POPULAR_EXTENSIONS_BY_SCHEME instance);
    partial void InsertDisallowedAbsoluteUris_MOST_POPULAR_HOSTS_BY_ABSOLUTEURI(DisallowedAbsoluteUris_MOST_POPULAR_HOSTS_BY_ABSOLUTEURI instance);
    partial void UpdateDisallowedAbsoluteUris_MOST_POPULAR_HOSTS_BY_ABSOLUTEURI(DisallowedAbsoluteUris_MOST_POPULAR_HOSTS_BY_ABSOLUTEURI instance);
    partial void DeleteDisallowedAbsoluteUris_MOST_POPULAR_HOSTS_BY_ABSOLUTEURI(DisallowedAbsoluteUris_MOST_POPULAR_HOSTS_BY_ABSOLUTEURI instance);
    partial void InsertDisallowedAbsoluteUris_MOST_POPULAR_HOSTS_BY_DOMAIN(DisallowedAbsoluteUris_MOST_POPULAR_HOSTS_BY_DOMAIN instance);
    partial void UpdateDisallowedAbsoluteUris_MOST_POPULAR_HOSTS_BY_DOMAIN(DisallowedAbsoluteUris_MOST_POPULAR_HOSTS_BY_DOMAIN instance);
    partial void DeleteDisallowedAbsoluteUris_MOST_POPULAR_HOSTS_BY_DOMAIN(DisallowedAbsoluteUris_MOST_POPULAR_HOSTS_BY_DOMAIN instance);
    partial void InsertDisallowedAbsoluteUris_MOST_POPULAR_HOSTS_BY_EXTENSION(DisallowedAbsoluteUris_MOST_POPULAR_HOSTS_BY_EXTENSION instance);
    partial void UpdateDisallowedAbsoluteUris_MOST_POPULAR_HOSTS_BY_EXTENSION(DisallowedAbsoluteUris_MOST_POPULAR_HOSTS_BY_EXTENSION instance);
    partial void DeleteDisallowedAbsoluteUris_MOST_POPULAR_HOSTS_BY_EXTENSION(DisallowedAbsoluteUris_MOST_POPULAR_HOSTS_BY_EXTENSION instance);
    partial void InsertDisallowedAbsoluteUris_MOST_POPULAR_HOSTS_BY_HOST(DisallowedAbsoluteUris_MOST_POPULAR_HOSTS_BY_HOST instance);
    partial void UpdateDisallowedAbsoluteUris_MOST_POPULAR_HOSTS_BY_HOST(DisallowedAbsoluteUris_MOST_POPULAR_HOSTS_BY_HOST instance);
    partial void DeleteDisallowedAbsoluteUris_MOST_POPULAR_HOSTS_BY_HOST(DisallowedAbsoluteUris_MOST_POPULAR_HOSTS_BY_HOST instance);
    partial void InsertDisallowedAbsoluteUris_MOST_POPULAR_HOSTS_BY_SCHEME(DisallowedAbsoluteUris_MOST_POPULAR_HOSTS_BY_SCHEME instance);
    partial void UpdateDisallowedAbsoluteUris_MOST_POPULAR_HOSTS_BY_SCHEME(DisallowedAbsoluteUris_MOST_POPULAR_HOSTS_BY_SCHEME instance);
    partial void DeleteDisallowedAbsoluteUris_MOST_POPULAR_HOSTS_BY_SCHEME(DisallowedAbsoluteUris_MOST_POPULAR_HOSTS_BY_SCHEME instance);
    partial void InsertDisallowedAbsoluteUris_MOST_POPULAR_SCHEMES_BY_ABSOLUTEURI(DisallowedAbsoluteUris_MOST_POPULAR_SCHEMES_BY_ABSOLUTEURI instance);
    partial void UpdateDisallowedAbsoluteUris_MOST_POPULAR_SCHEMES_BY_ABSOLUTEURI(DisallowedAbsoluteUris_MOST_POPULAR_SCHEMES_BY_ABSOLUTEURI instance);
    partial void DeleteDisallowedAbsoluteUris_MOST_POPULAR_SCHEMES_BY_ABSOLUTEURI(DisallowedAbsoluteUris_MOST_POPULAR_SCHEMES_BY_ABSOLUTEURI instance);
    partial void InsertDisallowedAbsoluteUris_MOST_POPULAR_SCHEMES_BY_DOMAIN(DisallowedAbsoluteUris_MOST_POPULAR_SCHEMES_BY_DOMAIN instance);
    partial void UpdateDisallowedAbsoluteUris_MOST_POPULAR_SCHEMES_BY_DOMAIN(DisallowedAbsoluteUris_MOST_POPULAR_SCHEMES_BY_DOMAIN instance);
    partial void DeleteDisallowedAbsoluteUris_MOST_POPULAR_SCHEMES_BY_DOMAIN(DisallowedAbsoluteUris_MOST_POPULAR_SCHEMES_BY_DOMAIN instance);
    partial void InsertDisallowedAbsoluteUris_MOST_POPULAR_SCHEMES_BY_EXTENSION(DisallowedAbsoluteUris_MOST_POPULAR_SCHEMES_BY_EXTENSION instance);
    partial void UpdateDisallowedAbsoluteUris_MOST_POPULAR_SCHEMES_BY_EXTENSION(DisallowedAbsoluteUris_MOST_POPULAR_SCHEMES_BY_EXTENSION instance);
    partial void DeleteDisallowedAbsoluteUris_MOST_POPULAR_SCHEMES_BY_EXTENSION(DisallowedAbsoluteUris_MOST_POPULAR_SCHEMES_BY_EXTENSION instance);
    partial void InsertDisallowedAbsoluteUris_MOST_POPULAR_SCHEMES_BY_HOST(DisallowedAbsoluteUris_MOST_POPULAR_SCHEMES_BY_HOST instance);
    partial void UpdateDisallowedAbsoluteUris_MOST_POPULAR_SCHEMES_BY_HOST(DisallowedAbsoluteUris_MOST_POPULAR_SCHEMES_BY_HOST instance);
    partial void DeleteDisallowedAbsoluteUris_MOST_POPULAR_SCHEMES_BY_HOST(DisallowedAbsoluteUris_MOST_POPULAR_SCHEMES_BY_HOST instance);
    partial void InsertDisallowedAbsoluteUris_MOST_POPULAR_SCHEMES_BY_SCHEME(DisallowedAbsoluteUris_MOST_POPULAR_SCHEMES_BY_SCHEME instance);
    partial void UpdateDisallowedAbsoluteUris_MOST_POPULAR_SCHEMES_BY_SCHEME(DisallowedAbsoluteUris_MOST_POPULAR_SCHEMES_BY_SCHEME instance);
    partial void DeleteDisallowedAbsoluteUris_MOST_POPULAR_SCHEMES_BY_SCHEME(DisallowedAbsoluteUris_MOST_POPULAR_SCHEMES_BY_SCHEME instance);
    partial void InsertEmailAddresses_COUNT_BY_ABSOLUTEURI(EmailAddresses_COUNT_BY_ABSOLUTEURI instance);
    partial void UpdateEmailAddresses_COUNT_BY_ABSOLUTEURI(EmailAddresses_COUNT_BY_ABSOLUTEURI instance);
    partial void DeleteEmailAddresses_COUNT_BY_ABSOLUTEURI(EmailAddresses_COUNT_BY_ABSOLUTEURI instance);
    partial void InsertEmailAddresses_COUNT_BY_DOMAIN(EmailAddresses_COUNT_BY_DOMAIN instance);
    partial void UpdateEmailAddresses_COUNT_BY_DOMAIN(EmailAddresses_COUNT_BY_DOMAIN instance);
    partial void DeleteEmailAddresses_COUNT_BY_DOMAIN(EmailAddresses_COUNT_BY_DOMAIN instance);
    partial void InsertEmailAddresses_COUNT_BY_EXTENSION(EmailAddresses_COUNT_BY_EXTENSION instance);
    partial void UpdateEmailAddresses_COUNT_BY_EXTENSION(EmailAddresses_COUNT_BY_EXTENSION instance);
    partial void DeleteEmailAddresses_COUNT_BY_EXTENSION(EmailAddresses_COUNT_BY_EXTENSION instance);
    partial void InsertEmailAddresses_COUNT_BY_HOST(EmailAddresses_COUNT_BY_HOST instance);
    partial void UpdateEmailAddresses_COUNT_BY_HOST(EmailAddresses_COUNT_BY_HOST instance);
    partial void DeleteEmailAddresses_COUNT_BY_HOST(EmailAddresses_COUNT_BY_HOST instance);
    partial void InsertEmailAddresses_COUNT_BY_SCHEME(EmailAddresses_COUNT_BY_SCHEME instance);
    partial void UpdateEmailAddresses_COUNT_BY_SCHEME(EmailAddresses_COUNT_BY_SCHEME instance);
    partial void DeleteEmailAddresses_COUNT_BY_SCHEME(EmailAddresses_COUNT_BY_SCHEME instance);
    partial void InsertEmailAddresses_MOST_POPULAR_ABSOLUTEURIS_BY_ABSOLUTEURI(EmailAddresses_MOST_POPULAR_ABSOLUTEURIS_BY_ABSOLUTEURI instance);
    partial void UpdateEmailAddresses_MOST_POPULAR_ABSOLUTEURIS_BY_ABSOLUTEURI(EmailAddresses_MOST_POPULAR_ABSOLUTEURIS_BY_ABSOLUTEURI instance);
    partial void DeleteEmailAddresses_MOST_POPULAR_ABSOLUTEURIS_BY_ABSOLUTEURI(EmailAddresses_MOST_POPULAR_ABSOLUTEURIS_BY_ABSOLUTEURI instance);
    partial void InsertEmailAddresses_MOST_POPULAR_ABSOLUTEURIS_BY_DOMAIN(EmailAddresses_MOST_POPULAR_ABSOLUTEURIS_BY_DOMAIN instance);
    partial void UpdateEmailAddresses_MOST_POPULAR_ABSOLUTEURIS_BY_DOMAIN(EmailAddresses_MOST_POPULAR_ABSOLUTEURIS_BY_DOMAIN instance);
    partial void DeleteEmailAddresses_MOST_POPULAR_ABSOLUTEURIS_BY_DOMAIN(EmailAddresses_MOST_POPULAR_ABSOLUTEURIS_BY_DOMAIN instance);
    partial void InsertEmailAddresses_MOST_POPULAR_ABSOLUTEURIS_BY_EXTENSION(EmailAddresses_MOST_POPULAR_ABSOLUTEURIS_BY_EXTENSION instance);
    partial void UpdateEmailAddresses_MOST_POPULAR_ABSOLUTEURIS_BY_EXTENSION(EmailAddresses_MOST_POPULAR_ABSOLUTEURIS_BY_EXTENSION instance);
    partial void DeleteEmailAddresses_MOST_POPULAR_ABSOLUTEURIS_BY_EXTENSION(EmailAddresses_MOST_POPULAR_ABSOLUTEURIS_BY_EXTENSION instance);
    partial void InsertEmailAddresses_MOST_POPULAR_ABSOLUTEURIS_BY_HOST(EmailAddresses_MOST_POPULAR_ABSOLUTEURIS_BY_HOST instance);
    partial void UpdateEmailAddresses_MOST_POPULAR_ABSOLUTEURIS_BY_HOST(EmailAddresses_MOST_POPULAR_ABSOLUTEURIS_BY_HOST instance);
    partial void DeleteEmailAddresses_MOST_POPULAR_ABSOLUTEURIS_BY_HOST(EmailAddresses_MOST_POPULAR_ABSOLUTEURIS_BY_HOST instance);
    partial void InsertEmailAddresses_MOST_POPULAR_ABSOLUTEURIS_BY_SCHEME(EmailAddresses_MOST_POPULAR_ABSOLUTEURIS_BY_SCHEME instance);
    partial void UpdateEmailAddresses_MOST_POPULAR_ABSOLUTEURIS_BY_SCHEME(EmailAddresses_MOST_POPULAR_ABSOLUTEURIS_BY_SCHEME instance);
    partial void DeleteEmailAddresses_MOST_POPULAR_ABSOLUTEURIS_BY_SCHEME(EmailAddresses_MOST_POPULAR_ABSOLUTEURIS_BY_SCHEME instance);
    partial void InsertEmailAddresses_MOST_POPULAR_DOMAINS_BY_ABSOLUTEURI(EmailAddresses_MOST_POPULAR_DOMAINS_BY_ABSOLUTEURI instance);
    partial void UpdateEmailAddresses_MOST_POPULAR_DOMAINS_BY_ABSOLUTEURI(EmailAddresses_MOST_POPULAR_DOMAINS_BY_ABSOLUTEURI instance);
    partial void DeleteEmailAddresses_MOST_POPULAR_DOMAINS_BY_ABSOLUTEURI(EmailAddresses_MOST_POPULAR_DOMAINS_BY_ABSOLUTEURI instance);
    partial void InsertEmailAddresses_MOST_POPULAR_DOMAINS_BY_DOMAIN(EmailAddresses_MOST_POPULAR_DOMAINS_BY_DOMAIN instance);
    partial void UpdateEmailAddresses_MOST_POPULAR_DOMAINS_BY_DOMAIN(EmailAddresses_MOST_POPULAR_DOMAINS_BY_DOMAIN instance);
    partial void DeleteEmailAddresses_MOST_POPULAR_DOMAINS_BY_DOMAIN(EmailAddresses_MOST_POPULAR_DOMAINS_BY_DOMAIN instance);
    partial void InsertEmailAddresses_MOST_POPULAR_DOMAINS_BY_EXTENSION(EmailAddresses_MOST_POPULAR_DOMAINS_BY_EXTENSION instance);
    partial void UpdateEmailAddresses_MOST_POPULAR_DOMAINS_BY_EXTENSION(EmailAddresses_MOST_POPULAR_DOMAINS_BY_EXTENSION instance);
    partial void DeleteEmailAddresses_MOST_POPULAR_DOMAINS_BY_EXTENSION(EmailAddresses_MOST_POPULAR_DOMAINS_BY_EXTENSION instance);
    partial void InsertEmailAddresses_MOST_POPULAR_DOMAINS_BY_HOST(EmailAddresses_MOST_POPULAR_DOMAINS_BY_HOST instance);
    partial void UpdateEmailAddresses_MOST_POPULAR_DOMAINS_BY_HOST(EmailAddresses_MOST_POPULAR_DOMAINS_BY_HOST instance);
    partial void DeleteEmailAddresses_MOST_POPULAR_DOMAINS_BY_HOST(EmailAddresses_MOST_POPULAR_DOMAINS_BY_HOST instance);
    partial void InsertEmailAddresses_MOST_POPULAR_DOMAINS_BY_SCHEME(EmailAddresses_MOST_POPULAR_DOMAINS_BY_SCHEME instance);
    partial void UpdateEmailAddresses_MOST_POPULAR_DOMAINS_BY_SCHEME(EmailAddresses_MOST_POPULAR_DOMAINS_BY_SCHEME instance);
    partial void DeleteEmailAddresses_MOST_POPULAR_DOMAINS_BY_SCHEME(EmailAddresses_MOST_POPULAR_DOMAINS_BY_SCHEME instance);
    partial void InsertEmailAddresses_MOST_POPULAR_EXTENSIONS_BY_ABSOLUTEURI(EmailAddresses_MOST_POPULAR_EXTENSIONS_BY_ABSOLUTEURI instance);
    partial void UpdateEmailAddresses_MOST_POPULAR_EXTENSIONS_BY_ABSOLUTEURI(EmailAddresses_MOST_POPULAR_EXTENSIONS_BY_ABSOLUTEURI instance);
    partial void DeleteEmailAddresses_MOST_POPULAR_EXTENSIONS_BY_ABSOLUTEURI(EmailAddresses_MOST_POPULAR_EXTENSIONS_BY_ABSOLUTEURI instance);
    partial void InsertEmailAddresses_MOST_POPULAR_EXTENSIONS_BY_DOMAIN(EmailAddresses_MOST_POPULAR_EXTENSIONS_BY_DOMAIN instance);
    partial void UpdateEmailAddresses_MOST_POPULAR_EXTENSIONS_BY_DOMAIN(EmailAddresses_MOST_POPULAR_EXTENSIONS_BY_DOMAIN instance);
    partial void DeleteEmailAddresses_MOST_POPULAR_EXTENSIONS_BY_DOMAIN(EmailAddresses_MOST_POPULAR_EXTENSIONS_BY_DOMAIN instance);
    partial void InsertEmailAddresses_MOST_POPULAR_EXTENSIONS_BY_EXTENSION(EmailAddresses_MOST_POPULAR_EXTENSIONS_BY_EXTENSION instance);
    partial void UpdateEmailAddresses_MOST_POPULAR_EXTENSIONS_BY_EXTENSION(EmailAddresses_MOST_POPULAR_EXTENSIONS_BY_EXTENSION instance);
    partial void DeleteEmailAddresses_MOST_POPULAR_EXTENSIONS_BY_EXTENSION(EmailAddresses_MOST_POPULAR_EXTENSIONS_BY_EXTENSION instance);
    partial void InsertEmailAddresses_MOST_POPULAR_EXTENSIONS_BY_HOST(EmailAddresses_MOST_POPULAR_EXTENSIONS_BY_HOST instance);
    partial void UpdateEmailAddresses_MOST_POPULAR_EXTENSIONS_BY_HOST(EmailAddresses_MOST_POPULAR_EXTENSIONS_BY_HOST instance);
    partial void DeleteEmailAddresses_MOST_POPULAR_EXTENSIONS_BY_HOST(EmailAddresses_MOST_POPULAR_EXTENSIONS_BY_HOST instance);
    partial void InsertEmailAddresses_MOST_POPULAR_EXTENSIONS_BY_SCHEME(EmailAddresses_MOST_POPULAR_EXTENSIONS_BY_SCHEME instance);
    partial void UpdateEmailAddresses_MOST_POPULAR_EXTENSIONS_BY_SCHEME(EmailAddresses_MOST_POPULAR_EXTENSIONS_BY_SCHEME instance);
    partial void DeleteEmailAddresses_MOST_POPULAR_EXTENSIONS_BY_SCHEME(EmailAddresses_MOST_POPULAR_EXTENSIONS_BY_SCHEME instance);
    partial void InsertEmailAddresses_MOST_POPULAR_HOSTS_BY_ABSOLUTEURI(EmailAddresses_MOST_POPULAR_HOSTS_BY_ABSOLUTEURI instance);
    partial void UpdateEmailAddresses_MOST_POPULAR_HOSTS_BY_ABSOLUTEURI(EmailAddresses_MOST_POPULAR_HOSTS_BY_ABSOLUTEURI instance);
    partial void DeleteEmailAddresses_MOST_POPULAR_HOSTS_BY_ABSOLUTEURI(EmailAddresses_MOST_POPULAR_HOSTS_BY_ABSOLUTEURI instance);
    partial void InsertEmailAddresses_MOST_POPULAR_HOSTS_BY_DOMAIN(EmailAddresses_MOST_POPULAR_HOSTS_BY_DOMAIN instance);
    partial void UpdateEmailAddresses_MOST_POPULAR_HOSTS_BY_DOMAIN(EmailAddresses_MOST_POPULAR_HOSTS_BY_DOMAIN instance);
    partial void DeleteEmailAddresses_MOST_POPULAR_HOSTS_BY_DOMAIN(EmailAddresses_MOST_POPULAR_HOSTS_BY_DOMAIN instance);
    partial void InsertEmailAddresses_MOST_POPULAR_HOSTS_BY_EXTENSION(EmailAddresses_MOST_POPULAR_HOSTS_BY_EXTENSION instance);
    partial void UpdateEmailAddresses_MOST_POPULAR_HOSTS_BY_EXTENSION(EmailAddresses_MOST_POPULAR_HOSTS_BY_EXTENSION instance);
    partial void DeleteEmailAddresses_MOST_POPULAR_HOSTS_BY_EXTENSION(EmailAddresses_MOST_POPULAR_HOSTS_BY_EXTENSION instance);
    partial void InsertEmailAddresses_MOST_POPULAR_HOSTS_BY_HOST(EmailAddresses_MOST_POPULAR_HOSTS_BY_HOST instance);
    partial void UpdateEmailAddresses_MOST_POPULAR_HOSTS_BY_HOST(EmailAddresses_MOST_POPULAR_HOSTS_BY_HOST instance);
    partial void DeleteEmailAddresses_MOST_POPULAR_HOSTS_BY_HOST(EmailAddresses_MOST_POPULAR_HOSTS_BY_HOST instance);
    partial void InsertEmailAddresses_MOST_POPULAR_HOSTS_BY_SCHEME(EmailAddresses_MOST_POPULAR_HOSTS_BY_SCHEME instance);
    partial void UpdateEmailAddresses_MOST_POPULAR_HOSTS_BY_SCHEME(EmailAddresses_MOST_POPULAR_HOSTS_BY_SCHEME instance);
    partial void DeleteEmailAddresses_MOST_POPULAR_HOSTS_BY_SCHEME(EmailAddresses_MOST_POPULAR_HOSTS_BY_SCHEME instance);
    partial void InsertEmailAddresses_MOST_POPULAR_SCHEMES_BY_ABSOLUTEURI(EmailAddresses_MOST_POPULAR_SCHEMES_BY_ABSOLUTEURI instance);
    partial void UpdateEmailAddresses_MOST_POPULAR_SCHEMES_BY_ABSOLUTEURI(EmailAddresses_MOST_POPULAR_SCHEMES_BY_ABSOLUTEURI instance);
    partial void DeleteEmailAddresses_MOST_POPULAR_SCHEMES_BY_ABSOLUTEURI(EmailAddresses_MOST_POPULAR_SCHEMES_BY_ABSOLUTEURI instance);
    partial void InsertEmailAddresses_MOST_POPULAR_SCHEMES_BY_DOMAIN(EmailAddresses_MOST_POPULAR_SCHEMES_BY_DOMAIN instance);
    partial void UpdateEmailAddresses_MOST_POPULAR_SCHEMES_BY_DOMAIN(EmailAddresses_MOST_POPULAR_SCHEMES_BY_DOMAIN instance);
    partial void DeleteEmailAddresses_MOST_POPULAR_SCHEMES_BY_DOMAIN(EmailAddresses_MOST_POPULAR_SCHEMES_BY_DOMAIN instance);
    partial void InsertEmailAddresses_MOST_POPULAR_SCHEMES_BY_EXTENSION(EmailAddresses_MOST_POPULAR_SCHEMES_BY_EXTENSION instance);
    partial void UpdateEmailAddresses_MOST_POPULAR_SCHEMES_BY_EXTENSION(EmailAddresses_MOST_POPULAR_SCHEMES_BY_EXTENSION instance);
    partial void DeleteEmailAddresses_MOST_POPULAR_SCHEMES_BY_EXTENSION(EmailAddresses_MOST_POPULAR_SCHEMES_BY_EXTENSION instance);
    partial void InsertEmailAddresses_MOST_POPULAR_SCHEMES_BY_HOST(EmailAddresses_MOST_POPULAR_SCHEMES_BY_HOST instance);
    partial void UpdateEmailAddresses_MOST_POPULAR_SCHEMES_BY_HOST(EmailAddresses_MOST_POPULAR_SCHEMES_BY_HOST instance);
    partial void DeleteEmailAddresses_MOST_POPULAR_SCHEMES_BY_HOST(EmailAddresses_MOST_POPULAR_SCHEMES_BY_HOST instance);
    partial void InsertEmailAddresses_MOST_POPULAR_SCHEMES_BY_SCHEME(EmailAddresses_MOST_POPULAR_SCHEMES_BY_SCHEME instance);
    partial void UpdateEmailAddresses_MOST_POPULAR_SCHEMES_BY_SCHEME(EmailAddresses_MOST_POPULAR_SCHEMES_BY_SCHEME instance);
    partial void DeleteEmailAddresses_MOST_POPULAR_SCHEMES_BY_SCHEME(EmailAddresses_MOST_POPULAR_SCHEMES_BY_SCHEME instance);
    partial void InsertExceptions_COUNT_BY_DOMAIN1(Exceptions_COUNT_BY_DOMAIN1 instance);
    partial void UpdateExceptions_COUNT_BY_DOMAIN1(Exceptions_COUNT_BY_DOMAIN1 instance);
    partial void DeleteExceptions_COUNT_BY_DOMAIN1(Exceptions_COUNT_BY_DOMAIN1 instance);
    partial void InsertExceptions_COUNT_BY_DOMAIN2(Exceptions_COUNT_BY_DOMAIN2 instance);
    partial void UpdateExceptions_COUNT_BY_DOMAIN2(Exceptions_COUNT_BY_DOMAIN2 instance);
    partial void DeleteExceptions_COUNT_BY_DOMAIN2(Exceptions_COUNT_BY_DOMAIN2 instance);
    partial void InsertExceptions_COUNT_BY_EXTENSION1(Exceptions_COUNT_BY_EXTENSION1 instance);
    partial void UpdateExceptions_COUNT_BY_EXTENSION1(Exceptions_COUNT_BY_EXTENSION1 instance);
    partial void DeleteExceptions_COUNT_BY_EXTENSION1(Exceptions_COUNT_BY_EXTENSION1 instance);
    partial void InsertExceptions_COUNT_BY_EXTENSION2(Exceptions_COUNT_BY_EXTENSION2 instance);
    partial void UpdateExceptions_COUNT_BY_EXTENSION2(Exceptions_COUNT_BY_EXTENSION2 instance);
    partial void DeleteExceptions_COUNT_BY_EXTENSION2(Exceptions_COUNT_BY_EXTENSION2 instance);
    partial void InsertExceptions_COUNT_BY_HOST1(Exceptions_COUNT_BY_HOST1 instance);
    partial void UpdateExceptions_COUNT_BY_HOST1(Exceptions_COUNT_BY_HOST1 instance);
    partial void DeleteExceptions_COUNT_BY_HOST1(Exceptions_COUNT_BY_HOST1 instance);
    partial void InsertExceptions_COUNT_BY_HOST2(Exceptions_COUNT_BY_HOST2 instance);
    partial void UpdateExceptions_COUNT_BY_HOST2(Exceptions_COUNT_BY_HOST2 instance);
    partial void DeleteExceptions_COUNT_BY_HOST2(Exceptions_COUNT_BY_HOST2 instance);
    partial void InsertExceptions_COUNT_BY_SCHEME1(Exceptions_COUNT_BY_SCHEME1 instance);
    partial void UpdateExceptions_COUNT_BY_SCHEME1(Exceptions_COUNT_BY_SCHEME1 instance);
    partial void DeleteExceptions_COUNT_BY_SCHEME1(Exceptions_COUNT_BY_SCHEME1 instance);
    partial void InsertExceptions_COUNT_BY_SCHEME2(Exceptions_COUNT_BY_SCHEME2 instance);
    partial void UpdateExceptions_COUNT_BY_SCHEME2(Exceptions_COUNT_BY_SCHEME2 instance);
    partial void DeleteExceptions_COUNT_BY_SCHEME2(Exceptions_COUNT_BY_SCHEME2 instance);
    partial void InsertExceptions_COUNT_BY_SOURCE(Exceptions_COUNT_BY_SOURCE instance);
    partial void UpdateExceptions_COUNT_BY_SOURCE(Exceptions_COUNT_BY_SOURCE instance);
    partial void DeleteExceptions_COUNT_BY_SOURCE(Exceptions_COUNT_BY_SOURCE instance);
    partial void InsertFiles_COUNT_BY_ABSOLUTEURI(Files_COUNT_BY_ABSOLUTEURI instance);
    partial void UpdateFiles_COUNT_BY_ABSOLUTEURI(Files_COUNT_BY_ABSOLUTEURI instance);
    partial void DeleteFiles_COUNT_BY_ABSOLUTEURI(Files_COUNT_BY_ABSOLUTEURI instance);
    partial void InsertFiles_COUNT_BY_DOMAIN(Files_COUNT_BY_DOMAIN instance);
    partial void UpdateFiles_COUNT_BY_DOMAIN(Files_COUNT_BY_DOMAIN instance);
    partial void DeleteFiles_COUNT_BY_DOMAIN(Files_COUNT_BY_DOMAIN instance);
    partial void InsertFiles_COUNT_BY_EXTENSION(Files_COUNT_BY_EXTENSION instance);
    partial void UpdateFiles_COUNT_BY_EXTENSION(Files_COUNT_BY_EXTENSION instance);
    partial void DeleteFiles_COUNT_BY_EXTENSION(Files_COUNT_BY_EXTENSION instance);
    partial void InsertFiles_COUNT_BY_FULLTEXTINDEXTYPE(Files_COUNT_BY_FULLTEXTINDEXTYPE instance);
    partial void UpdateFiles_COUNT_BY_FULLTEXTINDEXTYPE(Files_COUNT_BY_FULLTEXTINDEXTYPE instance);
    partial void DeleteFiles_COUNT_BY_FULLTEXTINDEXTYPE(Files_COUNT_BY_FULLTEXTINDEXTYPE instance);
    partial void InsertFiles_COUNT_BY_HOST(Files_COUNT_BY_HOST instance);
    partial void UpdateFiles_COUNT_BY_HOST(Files_COUNT_BY_HOST instance);
    partial void DeleteFiles_COUNT_BY_HOST(Files_COUNT_BY_HOST instance);
    partial void InsertFiles_COUNT_BY_SCHEME(Files_COUNT_BY_SCHEME instance);
    partial void UpdateFiles_COUNT_BY_SCHEME(Files_COUNT_BY_SCHEME instance);
    partial void DeleteFiles_COUNT_BY_SCHEME(Files_COUNT_BY_SCHEME instance);
    partial void InsertFiles_MOST_POPULAR_ABSOLUTEURIS_BY_ABSOLUTEURI(Files_MOST_POPULAR_ABSOLUTEURIS_BY_ABSOLUTEURI instance);
    partial void UpdateFiles_MOST_POPULAR_ABSOLUTEURIS_BY_ABSOLUTEURI(Files_MOST_POPULAR_ABSOLUTEURIS_BY_ABSOLUTEURI instance);
    partial void DeleteFiles_MOST_POPULAR_ABSOLUTEURIS_BY_ABSOLUTEURI(Files_MOST_POPULAR_ABSOLUTEURIS_BY_ABSOLUTEURI instance);
    partial void InsertFiles_MOST_POPULAR_ABSOLUTEURIS_BY_DOMAIN(Files_MOST_POPULAR_ABSOLUTEURIS_BY_DOMAIN instance);
    partial void UpdateFiles_MOST_POPULAR_ABSOLUTEURIS_BY_DOMAIN(Files_MOST_POPULAR_ABSOLUTEURIS_BY_DOMAIN instance);
    partial void DeleteFiles_MOST_POPULAR_ABSOLUTEURIS_BY_DOMAIN(Files_MOST_POPULAR_ABSOLUTEURIS_BY_DOMAIN instance);
    partial void InsertFiles_MOST_POPULAR_ABSOLUTEURIS_BY_EXTENSION(Files_MOST_POPULAR_ABSOLUTEURIS_BY_EXTENSION instance);
    partial void UpdateFiles_MOST_POPULAR_ABSOLUTEURIS_BY_EXTENSION(Files_MOST_POPULAR_ABSOLUTEURIS_BY_EXTENSION instance);
    partial void DeleteFiles_MOST_POPULAR_ABSOLUTEURIS_BY_EXTENSION(Files_MOST_POPULAR_ABSOLUTEURIS_BY_EXTENSION instance);
    partial void InsertFiles_MOST_POPULAR_ABSOLUTEURIS_BY_HOST(Files_MOST_POPULAR_ABSOLUTEURIS_BY_HOST instance);
    partial void UpdateFiles_MOST_POPULAR_ABSOLUTEURIS_BY_HOST(Files_MOST_POPULAR_ABSOLUTEURIS_BY_HOST instance);
    partial void DeleteFiles_MOST_POPULAR_ABSOLUTEURIS_BY_HOST(Files_MOST_POPULAR_ABSOLUTEURIS_BY_HOST instance);
    partial void InsertFiles_MOST_POPULAR_ABSOLUTEURIS_BY_SCHEME(Files_MOST_POPULAR_ABSOLUTEURIS_BY_SCHEME instance);
    partial void UpdateFiles_MOST_POPULAR_ABSOLUTEURIS_BY_SCHEME(Files_MOST_POPULAR_ABSOLUTEURIS_BY_SCHEME instance);
    partial void DeleteFiles_MOST_POPULAR_ABSOLUTEURIS_BY_SCHEME(Files_MOST_POPULAR_ABSOLUTEURIS_BY_SCHEME instance);
    partial void InsertFiles_MOST_POPULAR_DOMAINS_BY_ABSOLUTEURI(Files_MOST_POPULAR_DOMAINS_BY_ABSOLUTEURI instance);
    partial void UpdateFiles_MOST_POPULAR_DOMAINS_BY_ABSOLUTEURI(Files_MOST_POPULAR_DOMAINS_BY_ABSOLUTEURI instance);
    partial void DeleteFiles_MOST_POPULAR_DOMAINS_BY_ABSOLUTEURI(Files_MOST_POPULAR_DOMAINS_BY_ABSOLUTEURI instance);
    partial void InsertFiles_MOST_POPULAR_DOMAINS_BY_DOMAIN(Files_MOST_POPULAR_DOMAINS_BY_DOMAIN instance);
    partial void UpdateFiles_MOST_POPULAR_DOMAINS_BY_DOMAIN(Files_MOST_POPULAR_DOMAINS_BY_DOMAIN instance);
    partial void DeleteFiles_MOST_POPULAR_DOMAINS_BY_DOMAIN(Files_MOST_POPULAR_DOMAINS_BY_DOMAIN instance);
    partial void InsertFiles_MOST_POPULAR_DOMAINS_BY_EXTENSION(Files_MOST_POPULAR_DOMAINS_BY_EXTENSION instance);
    partial void UpdateFiles_MOST_POPULAR_DOMAINS_BY_EXTENSION(Files_MOST_POPULAR_DOMAINS_BY_EXTENSION instance);
    partial void DeleteFiles_MOST_POPULAR_DOMAINS_BY_EXTENSION(Files_MOST_POPULAR_DOMAINS_BY_EXTENSION instance);
    partial void InsertFiles_MOST_POPULAR_DOMAINS_BY_HOST(Files_MOST_POPULAR_DOMAINS_BY_HOST instance);
    partial void UpdateFiles_MOST_POPULAR_DOMAINS_BY_HOST(Files_MOST_POPULAR_DOMAINS_BY_HOST instance);
    partial void DeleteFiles_MOST_POPULAR_DOMAINS_BY_HOST(Files_MOST_POPULAR_DOMAINS_BY_HOST instance);
    partial void InsertFiles_MOST_POPULAR_DOMAINS_BY_SCHEME(Files_MOST_POPULAR_DOMAINS_BY_SCHEME instance);
    partial void UpdateFiles_MOST_POPULAR_DOMAINS_BY_SCHEME(Files_MOST_POPULAR_DOMAINS_BY_SCHEME instance);
    partial void DeleteFiles_MOST_POPULAR_DOMAINS_BY_SCHEME(Files_MOST_POPULAR_DOMAINS_BY_SCHEME instance);
    partial void InsertFiles_MOST_POPULAR_EXTENSIONS_BY_ABSOLUTEURI(Files_MOST_POPULAR_EXTENSIONS_BY_ABSOLUTEURI instance);
    partial void UpdateFiles_MOST_POPULAR_EXTENSIONS_BY_ABSOLUTEURI(Files_MOST_POPULAR_EXTENSIONS_BY_ABSOLUTEURI instance);
    partial void DeleteFiles_MOST_POPULAR_EXTENSIONS_BY_ABSOLUTEURI(Files_MOST_POPULAR_EXTENSIONS_BY_ABSOLUTEURI instance);
    partial void InsertFiles_MOST_POPULAR_EXTENSIONS_BY_DOMAIN(Files_MOST_POPULAR_EXTENSIONS_BY_DOMAIN instance);
    partial void UpdateFiles_MOST_POPULAR_EXTENSIONS_BY_DOMAIN(Files_MOST_POPULAR_EXTENSIONS_BY_DOMAIN instance);
    partial void DeleteFiles_MOST_POPULAR_EXTENSIONS_BY_DOMAIN(Files_MOST_POPULAR_EXTENSIONS_BY_DOMAIN instance);
    partial void InsertFiles_MOST_POPULAR_EXTENSIONS_BY_EXTENSION(Files_MOST_POPULAR_EXTENSIONS_BY_EXTENSION instance);
    partial void UpdateFiles_MOST_POPULAR_EXTENSIONS_BY_EXTENSION(Files_MOST_POPULAR_EXTENSIONS_BY_EXTENSION instance);
    partial void DeleteFiles_MOST_POPULAR_EXTENSIONS_BY_EXTENSION(Files_MOST_POPULAR_EXTENSIONS_BY_EXTENSION instance);
    partial void InsertFiles_MOST_POPULAR_EXTENSIONS_BY_HOST(Files_MOST_POPULAR_EXTENSIONS_BY_HOST instance);
    partial void UpdateFiles_MOST_POPULAR_EXTENSIONS_BY_HOST(Files_MOST_POPULAR_EXTENSIONS_BY_HOST instance);
    partial void DeleteFiles_MOST_POPULAR_EXTENSIONS_BY_HOST(Files_MOST_POPULAR_EXTENSIONS_BY_HOST instance);
    partial void InsertFiles_MOST_POPULAR_EXTENSIONS_BY_SCHEME(Files_MOST_POPULAR_EXTENSIONS_BY_SCHEME instance);
    partial void UpdateFiles_MOST_POPULAR_EXTENSIONS_BY_SCHEME(Files_MOST_POPULAR_EXTENSIONS_BY_SCHEME instance);
    partial void DeleteFiles_MOST_POPULAR_EXTENSIONS_BY_SCHEME(Files_MOST_POPULAR_EXTENSIONS_BY_SCHEME instance);
    partial void InsertFiles_MOST_POPULAR_HOSTS_BY_ABSOLUTEURI(Files_MOST_POPULAR_HOSTS_BY_ABSOLUTEURI instance);
    partial void UpdateFiles_MOST_POPULAR_HOSTS_BY_ABSOLUTEURI(Files_MOST_POPULAR_HOSTS_BY_ABSOLUTEURI instance);
    partial void DeleteFiles_MOST_POPULAR_HOSTS_BY_ABSOLUTEURI(Files_MOST_POPULAR_HOSTS_BY_ABSOLUTEURI instance);
    partial void InsertFiles_MOST_POPULAR_HOSTS_BY_DOMAIN(Files_MOST_POPULAR_HOSTS_BY_DOMAIN instance);
    partial void UpdateFiles_MOST_POPULAR_HOSTS_BY_DOMAIN(Files_MOST_POPULAR_HOSTS_BY_DOMAIN instance);
    partial void DeleteFiles_MOST_POPULAR_HOSTS_BY_DOMAIN(Files_MOST_POPULAR_HOSTS_BY_DOMAIN instance);
    partial void InsertFiles_MOST_POPULAR_HOSTS_BY_EXTENSION(Files_MOST_POPULAR_HOSTS_BY_EXTENSION instance);
    partial void UpdateFiles_MOST_POPULAR_HOSTS_BY_EXTENSION(Files_MOST_POPULAR_HOSTS_BY_EXTENSION instance);
    partial void DeleteFiles_MOST_POPULAR_HOSTS_BY_EXTENSION(Files_MOST_POPULAR_HOSTS_BY_EXTENSION instance);
    partial void InsertFiles_MOST_POPULAR_HOSTS_BY_HOST(Files_MOST_POPULAR_HOSTS_BY_HOST instance);
    partial void UpdateFiles_MOST_POPULAR_HOSTS_BY_HOST(Files_MOST_POPULAR_HOSTS_BY_HOST instance);
    partial void DeleteFiles_MOST_POPULAR_HOSTS_BY_HOST(Files_MOST_POPULAR_HOSTS_BY_HOST instance);
    partial void InsertFiles_MOST_POPULAR_HOSTS_BY_SCHEME(Files_MOST_POPULAR_HOSTS_BY_SCHEME instance);
    partial void UpdateFiles_MOST_POPULAR_HOSTS_BY_SCHEME(Files_MOST_POPULAR_HOSTS_BY_SCHEME instance);
    partial void DeleteFiles_MOST_POPULAR_HOSTS_BY_SCHEME(Files_MOST_POPULAR_HOSTS_BY_SCHEME instance);
    partial void InsertFiles_MOST_POPULAR_SCHEMES_BY_ABSOLUTEURI(Files_MOST_POPULAR_SCHEMES_BY_ABSOLUTEURI instance);
    partial void UpdateFiles_MOST_POPULAR_SCHEMES_BY_ABSOLUTEURI(Files_MOST_POPULAR_SCHEMES_BY_ABSOLUTEURI instance);
    partial void DeleteFiles_MOST_POPULAR_SCHEMES_BY_ABSOLUTEURI(Files_MOST_POPULAR_SCHEMES_BY_ABSOLUTEURI instance);
    partial void InsertFiles_MOST_POPULAR_SCHEMES_BY_DOMAIN(Files_MOST_POPULAR_SCHEMES_BY_DOMAIN instance);
    partial void UpdateFiles_MOST_POPULAR_SCHEMES_BY_DOMAIN(Files_MOST_POPULAR_SCHEMES_BY_DOMAIN instance);
    partial void DeleteFiles_MOST_POPULAR_SCHEMES_BY_DOMAIN(Files_MOST_POPULAR_SCHEMES_BY_DOMAIN instance);
    partial void InsertFiles_MOST_POPULAR_SCHEMES_BY_EXTENSION(Files_MOST_POPULAR_SCHEMES_BY_EXTENSION instance);
    partial void UpdateFiles_MOST_POPULAR_SCHEMES_BY_EXTENSION(Files_MOST_POPULAR_SCHEMES_BY_EXTENSION instance);
    partial void DeleteFiles_MOST_POPULAR_SCHEMES_BY_EXTENSION(Files_MOST_POPULAR_SCHEMES_BY_EXTENSION instance);
    partial void InsertFiles_MOST_POPULAR_SCHEMES_BY_HOST(Files_MOST_POPULAR_SCHEMES_BY_HOST instance);
    partial void UpdateFiles_MOST_POPULAR_SCHEMES_BY_HOST(Files_MOST_POPULAR_SCHEMES_BY_HOST instance);
    partial void DeleteFiles_MOST_POPULAR_SCHEMES_BY_HOST(Files_MOST_POPULAR_SCHEMES_BY_HOST instance);
    partial void InsertFiles_MOST_POPULAR_SCHEMES_BY_SCHEME(Files_MOST_POPULAR_SCHEMES_BY_SCHEME instance);
    partial void UpdateFiles_MOST_POPULAR_SCHEMES_BY_SCHEME(Files_MOST_POPULAR_SCHEMES_BY_SCHEME instance);
    partial void DeleteFiles_MOST_POPULAR_SCHEMES_BY_SCHEME(Files_MOST_POPULAR_SCHEMES_BY_SCHEME instance);
    partial void InsertHyperLinks_COUNT_BY_ABSOLUTEURI(HyperLinks_COUNT_BY_ABSOLUTEURI instance);
    partial void UpdateHyperLinks_COUNT_BY_ABSOLUTEURI(HyperLinks_COUNT_BY_ABSOLUTEURI instance);
    partial void DeleteHyperLinks_COUNT_BY_ABSOLUTEURI(HyperLinks_COUNT_BY_ABSOLUTEURI instance);
    partial void InsertHyperLinks_COUNT_BY_DOMAIN(HyperLinks_COUNT_BY_DOMAIN instance);
    partial void UpdateHyperLinks_COUNT_BY_DOMAIN(HyperLinks_COUNT_BY_DOMAIN instance);
    partial void DeleteHyperLinks_COUNT_BY_DOMAIN(HyperLinks_COUNT_BY_DOMAIN instance);
    partial void InsertHyperLinks_COUNT_BY_EXTENSION(HyperLinks_COUNT_BY_EXTENSION instance);
    partial void UpdateHyperLinks_COUNT_BY_EXTENSION(HyperLinks_COUNT_BY_EXTENSION instance);
    partial void DeleteHyperLinks_COUNT_BY_EXTENSION(HyperLinks_COUNT_BY_EXTENSION instance);
    partial void InsertHyperLinks_COUNT_BY_HOST(HyperLinks_COUNT_BY_HOST instance);
    partial void UpdateHyperLinks_COUNT_BY_HOST(HyperLinks_COUNT_BY_HOST instance);
    partial void DeleteHyperLinks_COUNT_BY_HOST(HyperLinks_COUNT_BY_HOST instance);
    partial void InsertHyperLinks_COUNT_BY_SCHEME(HyperLinks_COUNT_BY_SCHEME instance);
    partial void UpdateHyperLinks_COUNT_BY_SCHEME(HyperLinks_COUNT_BY_SCHEME instance);
    partial void DeleteHyperLinks_COUNT_BY_SCHEME(HyperLinks_COUNT_BY_SCHEME instance);
    partial void InsertHyperLinks_MOST_POPULAR_ABSOLUTEURIS_BY_ABSOLUTEURI(HyperLinks_MOST_POPULAR_ABSOLUTEURIS_BY_ABSOLUTEURI instance);
    partial void UpdateHyperLinks_MOST_POPULAR_ABSOLUTEURIS_BY_ABSOLUTEURI(HyperLinks_MOST_POPULAR_ABSOLUTEURIS_BY_ABSOLUTEURI instance);
    partial void DeleteHyperLinks_MOST_POPULAR_ABSOLUTEURIS_BY_ABSOLUTEURI(HyperLinks_MOST_POPULAR_ABSOLUTEURIS_BY_ABSOLUTEURI instance);
    partial void InsertHyperLinks_MOST_POPULAR_ABSOLUTEURIS_BY_DOMAIN(HyperLinks_MOST_POPULAR_ABSOLUTEURIS_BY_DOMAIN instance);
    partial void UpdateHyperLinks_MOST_POPULAR_ABSOLUTEURIS_BY_DOMAIN(HyperLinks_MOST_POPULAR_ABSOLUTEURIS_BY_DOMAIN instance);
    partial void DeleteHyperLinks_MOST_POPULAR_ABSOLUTEURIS_BY_DOMAIN(HyperLinks_MOST_POPULAR_ABSOLUTEURIS_BY_DOMAIN instance);
    partial void InsertHyperLinks_MOST_POPULAR_ABSOLUTEURIS_BY_EXTENSION(HyperLinks_MOST_POPULAR_ABSOLUTEURIS_BY_EXTENSION instance);
    partial void UpdateHyperLinks_MOST_POPULAR_ABSOLUTEURIS_BY_EXTENSION(HyperLinks_MOST_POPULAR_ABSOLUTEURIS_BY_EXTENSION instance);
    partial void DeleteHyperLinks_MOST_POPULAR_ABSOLUTEURIS_BY_EXTENSION(HyperLinks_MOST_POPULAR_ABSOLUTEURIS_BY_EXTENSION instance);
    partial void InsertHyperLinks_MOST_POPULAR_ABSOLUTEURIS_BY_HOST(HyperLinks_MOST_POPULAR_ABSOLUTEURIS_BY_HOST instance);
    partial void UpdateHyperLinks_MOST_POPULAR_ABSOLUTEURIS_BY_HOST(HyperLinks_MOST_POPULAR_ABSOLUTEURIS_BY_HOST instance);
    partial void DeleteHyperLinks_MOST_POPULAR_ABSOLUTEURIS_BY_HOST(HyperLinks_MOST_POPULAR_ABSOLUTEURIS_BY_HOST instance);
    partial void InsertHyperLinks_MOST_POPULAR_ABSOLUTEURIS_BY_SCHEME(HyperLinks_MOST_POPULAR_ABSOLUTEURIS_BY_SCHEME instance);
    partial void UpdateHyperLinks_MOST_POPULAR_ABSOLUTEURIS_BY_SCHEME(HyperLinks_MOST_POPULAR_ABSOLUTEURIS_BY_SCHEME instance);
    partial void DeleteHyperLinks_MOST_POPULAR_ABSOLUTEURIS_BY_SCHEME(HyperLinks_MOST_POPULAR_ABSOLUTEURIS_BY_SCHEME instance);
    partial void InsertHyperLinks_MOST_POPULAR_DOMAINS_BY_ABSOLUTEURI(HyperLinks_MOST_POPULAR_DOMAINS_BY_ABSOLUTEURI instance);
    partial void UpdateHyperLinks_MOST_POPULAR_DOMAINS_BY_ABSOLUTEURI(HyperLinks_MOST_POPULAR_DOMAINS_BY_ABSOLUTEURI instance);
    partial void DeleteHyperLinks_MOST_POPULAR_DOMAINS_BY_ABSOLUTEURI(HyperLinks_MOST_POPULAR_DOMAINS_BY_ABSOLUTEURI instance);
    partial void InsertHyperLinks_MOST_POPULAR_DOMAINS_BY_DOMAIN(HyperLinks_MOST_POPULAR_DOMAINS_BY_DOMAIN instance);
    partial void UpdateHyperLinks_MOST_POPULAR_DOMAINS_BY_DOMAIN(HyperLinks_MOST_POPULAR_DOMAINS_BY_DOMAIN instance);
    partial void DeleteHyperLinks_MOST_POPULAR_DOMAINS_BY_DOMAIN(HyperLinks_MOST_POPULAR_DOMAINS_BY_DOMAIN instance);
    partial void InsertHyperLinks_MOST_POPULAR_DOMAINS_BY_EXTENSION(HyperLinks_MOST_POPULAR_DOMAINS_BY_EXTENSION instance);
    partial void UpdateHyperLinks_MOST_POPULAR_DOMAINS_BY_EXTENSION(HyperLinks_MOST_POPULAR_DOMAINS_BY_EXTENSION instance);
    partial void DeleteHyperLinks_MOST_POPULAR_DOMAINS_BY_EXTENSION(HyperLinks_MOST_POPULAR_DOMAINS_BY_EXTENSION instance);
    partial void InsertHyperLinks_MOST_POPULAR_DOMAINS_BY_HOST(HyperLinks_MOST_POPULAR_DOMAINS_BY_HOST instance);
    partial void UpdateHyperLinks_MOST_POPULAR_DOMAINS_BY_HOST(HyperLinks_MOST_POPULAR_DOMAINS_BY_HOST instance);
    partial void DeleteHyperLinks_MOST_POPULAR_DOMAINS_BY_HOST(HyperLinks_MOST_POPULAR_DOMAINS_BY_HOST instance);
    partial void InsertHyperLinks_MOST_POPULAR_DOMAINS_BY_SCHEME(HyperLinks_MOST_POPULAR_DOMAINS_BY_SCHEME instance);
    partial void UpdateHyperLinks_MOST_POPULAR_DOMAINS_BY_SCHEME(HyperLinks_MOST_POPULAR_DOMAINS_BY_SCHEME instance);
    partial void DeleteHyperLinks_MOST_POPULAR_DOMAINS_BY_SCHEME(HyperLinks_MOST_POPULAR_DOMAINS_BY_SCHEME instance);
    partial void InsertHyperLinks_MOST_POPULAR_EXTENSIONS_BY_ABSOLUTEURI(HyperLinks_MOST_POPULAR_EXTENSIONS_BY_ABSOLUTEURI instance);
    partial void UpdateHyperLinks_MOST_POPULAR_EXTENSIONS_BY_ABSOLUTEURI(HyperLinks_MOST_POPULAR_EXTENSIONS_BY_ABSOLUTEURI instance);
    partial void DeleteHyperLinks_MOST_POPULAR_EXTENSIONS_BY_ABSOLUTEURI(HyperLinks_MOST_POPULAR_EXTENSIONS_BY_ABSOLUTEURI instance);
    partial void InsertHyperLinks_MOST_POPULAR_EXTENSIONS_BY_DOMAIN(HyperLinks_MOST_POPULAR_EXTENSIONS_BY_DOMAIN instance);
    partial void UpdateHyperLinks_MOST_POPULAR_EXTENSIONS_BY_DOMAIN(HyperLinks_MOST_POPULAR_EXTENSIONS_BY_DOMAIN instance);
    partial void DeleteHyperLinks_MOST_POPULAR_EXTENSIONS_BY_DOMAIN(HyperLinks_MOST_POPULAR_EXTENSIONS_BY_DOMAIN instance);
    partial void InsertHyperLinks_MOST_POPULAR_EXTENSIONS_BY_EXTENSION(HyperLinks_MOST_POPULAR_EXTENSIONS_BY_EXTENSION instance);
    partial void UpdateHyperLinks_MOST_POPULAR_EXTENSIONS_BY_EXTENSION(HyperLinks_MOST_POPULAR_EXTENSIONS_BY_EXTENSION instance);
    partial void DeleteHyperLinks_MOST_POPULAR_EXTENSIONS_BY_EXTENSION(HyperLinks_MOST_POPULAR_EXTENSIONS_BY_EXTENSION instance);
    partial void InsertHyperLinks_MOST_POPULAR_EXTENSIONS_BY_HOST(HyperLinks_MOST_POPULAR_EXTENSIONS_BY_HOST instance);
    partial void UpdateHyperLinks_MOST_POPULAR_EXTENSIONS_BY_HOST(HyperLinks_MOST_POPULAR_EXTENSIONS_BY_HOST instance);
    partial void DeleteHyperLinks_MOST_POPULAR_EXTENSIONS_BY_HOST(HyperLinks_MOST_POPULAR_EXTENSIONS_BY_HOST instance);
    partial void InsertHyperLinks_MOST_POPULAR_EXTENSIONS_BY_SCHEME(HyperLinks_MOST_POPULAR_EXTENSIONS_BY_SCHEME instance);
    partial void UpdateHyperLinks_MOST_POPULAR_EXTENSIONS_BY_SCHEME(HyperLinks_MOST_POPULAR_EXTENSIONS_BY_SCHEME instance);
    partial void DeleteHyperLinks_MOST_POPULAR_EXTENSIONS_BY_SCHEME(HyperLinks_MOST_POPULAR_EXTENSIONS_BY_SCHEME instance);
    partial void InsertHyperLinks_MOST_POPULAR_HOSTS_BY_ABSOLUTEURI(HyperLinks_MOST_POPULAR_HOSTS_BY_ABSOLUTEURI instance);
    partial void UpdateHyperLinks_MOST_POPULAR_HOSTS_BY_ABSOLUTEURI(HyperLinks_MOST_POPULAR_HOSTS_BY_ABSOLUTEURI instance);
    partial void DeleteHyperLinks_MOST_POPULAR_HOSTS_BY_ABSOLUTEURI(HyperLinks_MOST_POPULAR_HOSTS_BY_ABSOLUTEURI instance);
    partial void InsertHyperLinks_MOST_POPULAR_HOSTS_BY_DOMAIN(HyperLinks_MOST_POPULAR_HOSTS_BY_DOMAIN instance);
    partial void UpdateHyperLinks_MOST_POPULAR_HOSTS_BY_DOMAIN(HyperLinks_MOST_POPULAR_HOSTS_BY_DOMAIN instance);
    partial void DeleteHyperLinks_MOST_POPULAR_HOSTS_BY_DOMAIN(HyperLinks_MOST_POPULAR_HOSTS_BY_DOMAIN instance);
    partial void InsertHyperLinks_MOST_POPULAR_HOSTS_BY_EXTENSION(HyperLinks_MOST_POPULAR_HOSTS_BY_EXTENSION instance);
    partial void UpdateHyperLinks_MOST_POPULAR_HOSTS_BY_EXTENSION(HyperLinks_MOST_POPULAR_HOSTS_BY_EXTENSION instance);
    partial void DeleteHyperLinks_MOST_POPULAR_HOSTS_BY_EXTENSION(HyperLinks_MOST_POPULAR_HOSTS_BY_EXTENSION instance);
    partial void InsertHyperLinks_MOST_POPULAR_HOSTS_BY_HOST(HyperLinks_MOST_POPULAR_HOSTS_BY_HOST instance);
    partial void UpdateHyperLinks_MOST_POPULAR_HOSTS_BY_HOST(HyperLinks_MOST_POPULAR_HOSTS_BY_HOST instance);
    partial void DeleteHyperLinks_MOST_POPULAR_HOSTS_BY_HOST(HyperLinks_MOST_POPULAR_HOSTS_BY_HOST instance);
    partial void InsertHyperLinks_MOST_POPULAR_HOSTS_BY_SCHEME(HyperLinks_MOST_POPULAR_HOSTS_BY_SCHEME instance);
    partial void UpdateHyperLinks_MOST_POPULAR_HOSTS_BY_SCHEME(HyperLinks_MOST_POPULAR_HOSTS_BY_SCHEME instance);
    partial void DeleteHyperLinks_MOST_POPULAR_HOSTS_BY_SCHEME(HyperLinks_MOST_POPULAR_HOSTS_BY_SCHEME instance);
    partial void InsertHyperLinks_MOST_POPULAR_SCHEMES_BY_ABSOLUTEURI(HyperLinks_MOST_POPULAR_SCHEMES_BY_ABSOLUTEURI instance);
    partial void UpdateHyperLinks_MOST_POPULAR_SCHEMES_BY_ABSOLUTEURI(HyperLinks_MOST_POPULAR_SCHEMES_BY_ABSOLUTEURI instance);
    partial void DeleteHyperLinks_MOST_POPULAR_SCHEMES_BY_ABSOLUTEURI(HyperLinks_MOST_POPULAR_SCHEMES_BY_ABSOLUTEURI instance);
    partial void InsertHyperLinks_MOST_POPULAR_SCHEMES_BY_DOMAIN(HyperLinks_MOST_POPULAR_SCHEMES_BY_DOMAIN instance);
    partial void UpdateHyperLinks_MOST_POPULAR_SCHEMES_BY_DOMAIN(HyperLinks_MOST_POPULAR_SCHEMES_BY_DOMAIN instance);
    partial void DeleteHyperLinks_MOST_POPULAR_SCHEMES_BY_DOMAIN(HyperLinks_MOST_POPULAR_SCHEMES_BY_DOMAIN instance);
    partial void InsertHyperLinks_MOST_POPULAR_SCHEMES_BY_EXTENSION(HyperLinks_MOST_POPULAR_SCHEMES_BY_EXTENSION instance);
    partial void UpdateHyperLinks_MOST_POPULAR_SCHEMES_BY_EXTENSION(HyperLinks_MOST_POPULAR_SCHEMES_BY_EXTENSION instance);
    partial void DeleteHyperLinks_MOST_POPULAR_SCHEMES_BY_EXTENSION(HyperLinks_MOST_POPULAR_SCHEMES_BY_EXTENSION instance);
    partial void InsertHyperLinks_MOST_POPULAR_SCHEMES_BY_HOST(HyperLinks_MOST_POPULAR_SCHEMES_BY_HOST instance);
    partial void UpdateHyperLinks_MOST_POPULAR_SCHEMES_BY_HOST(HyperLinks_MOST_POPULAR_SCHEMES_BY_HOST instance);
    partial void DeleteHyperLinks_MOST_POPULAR_SCHEMES_BY_HOST(HyperLinks_MOST_POPULAR_SCHEMES_BY_HOST instance);
    partial void InsertHyperLinks_MOST_POPULAR_SCHEMES_BY_SCHEME(HyperLinks_MOST_POPULAR_SCHEMES_BY_SCHEME instance);
    partial void UpdateHyperLinks_MOST_POPULAR_SCHEMES_BY_SCHEME(HyperLinks_MOST_POPULAR_SCHEMES_BY_SCHEME instance);
    partial void DeleteHyperLinks_MOST_POPULAR_SCHEMES_BY_SCHEME(HyperLinks_MOST_POPULAR_SCHEMES_BY_SCHEME instance);
    partial void InsertImages_COUNT_BY_ABSOLUTEURI(Images_COUNT_BY_ABSOLUTEURI instance);
    partial void UpdateImages_COUNT_BY_ABSOLUTEURI(Images_COUNT_BY_ABSOLUTEURI instance);
    partial void DeleteImages_COUNT_BY_ABSOLUTEURI(Images_COUNT_BY_ABSOLUTEURI instance);
    partial void InsertImages_COUNT_BY_DOMAIN(Images_COUNT_BY_DOMAIN instance);
    partial void UpdateImages_COUNT_BY_DOMAIN(Images_COUNT_BY_DOMAIN instance);
    partial void DeleteImages_COUNT_BY_DOMAIN(Images_COUNT_BY_DOMAIN instance);
    partial void InsertImages_COUNT_BY_EXTENSION(Images_COUNT_BY_EXTENSION instance);
    partial void UpdateImages_COUNT_BY_EXTENSION(Images_COUNT_BY_EXTENSION instance);
    partial void DeleteImages_COUNT_BY_EXTENSION(Images_COUNT_BY_EXTENSION instance);
    partial void InsertImages_COUNT_BY_FULLTEXTINDEXTYPE(Images_COUNT_BY_FULLTEXTINDEXTYPE instance);
    partial void UpdateImages_COUNT_BY_FULLTEXTINDEXTYPE(Images_COUNT_BY_FULLTEXTINDEXTYPE instance);
    partial void DeleteImages_COUNT_BY_FULLTEXTINDEXTYPE(Images_COUNT_BY_FULLTEXTINDEXTYPE instance);
    partial void InsertImages_COUNT_BY_HOST(Images_COUNT_BY_HOST instance);
    partial void UpdateImages_COUNT_BY_HOST(Images_COUNT_BY_HOST instance);
    partial void DeleteImages_COUNT_BY_HOST(Images_COUNT_BY_HOST instance);
    partial void InsertImages_COUNT_BY_SCHEME(Images_COUNT_BY_SCHEME instance);
    partial void UpdateImages_COUNT_BY_SCHEME(Images_COUNT_BY_SCHEME instance);
    partial void DeleteImages_COUNT_BY_SCHEME(Images_COUNT_BY_SCHEME instance);
    partial void InsertImages_MOST_POPULAR_ABSOLUTEURIS_BY_ABSOLUTEURI(Images_MOST_POPULAR_ABSOLUTEURIS_BY_ABSOLUTEURI instance);
    partial void UpdateImages_MOST_POPULAR_ABSOLUTEURIS_BY_ABSOLUTEURI(Images_MOST_POPULAR_ABSOLUTEURIS_BY_ABSOLUTEURI instance);
    partial void DeleteImages_MOST_POPULAR_ABSOLUTEURIS_BY_ABSOLUTEURI(Images_MOST_POPULAR_ABSOLUTEURIS_BY_ABSOLUTEURI instance);
    partial void InsertImages_MOST_POPULAR_ABSOLUTEURIS_BY_DOMAIN(Images_MOST_POPULAR_ABSOLUTEURIS_BY_DOMAIN instance);
    partial void UpdateImages_MOST_POPULAR_ABSOLUTEURIS_BY_DOMAIN(Images_MOST_POPULAR_ABSOLUTEURIS_BY_DOMAIN instance);
    partial void DeleteImages_MOST_POPULAR_ABSOLUTEURIS_BY_DOMAIN(Images_MOST_POPULAR_ABSOLUTEURIS_BY_DOMAIN instance);
    partial void InsertImages_MOST_POPULAR_ABSOLUTEURIS_BY_EXTENSION(Images_MOST_POPULAR_ABSOLUTEURIS_BY_EXTENSION instance);
    partial void UpdateImages_MOST_POPULAR_ABSOLUTEURIS_BY_EXTENSION(Images_MOST_POPULAR_ABSOLUTEURIS_BY_EXTENSION instance);
    partial void DeleteImages_MOST_POPULAR_ABSOLUTEURIS_BY_EXTENSION(Images_MOST_POPULAR_ABSOLUTEURIS_BY_EXTENSION instance);
    partial void InsertImages_MOST_POPULAR_ABSOLUTEURIS_BY_HOST(Images_MOST_POPULAR_ABSOLUTEURIS_BY_HOST instance);
    partial void UpdateImages_MOST_POPULAR_ABSOLUTEURIS_BY_HOST(Images_MOST_POPULAR_ABSOLUTEURIS_BY_HOST instance);
    partial void DeleteImages_MOST_POPULAR_ABSOLUTEURIS_BY_HOST(Images_MOST_POPULAR_ABSOLUTEURIS_BY_HOST instance);
    partial void InsertImages_MOST_POPULAR_ABSOLUTEURIS_BY_SCHEME(Images_MOST_POPULAR_ABSOLUTEURIS_BY_SCHEME instance);
    partial void UpdateImages_MOST_POPULAR_ABSOLUTEURIS_BY_SCHEME(Images_MOST_POPULAR_ABSOLUTEURIS_BY_SCHEME instance);
    partial void DeleteImages_MOST_POPULAR_ABSOLUTEURIS_BY_SCHEME(Images_MOST_POPULAR_ABSOLUTEURIS_BY_SCHEME instance);
    partial void InsertImages_MOST_POPULAR_DOMAINS_BY_ABSOLUTEURI(Images_MOST_POPULAR_DOMAINS_BY_ABSOLUTEURI instance);
    partial void UpdateImages_MOST_POPULAR_DOMAINS_BY_ABSOLUTEURI(Images_MOST_POPULAR_DOMAINS_BY_ABSOLUTEURI instance);
    partial void DeleteImages_MOST_POPULAR_DOMAINS_BY_ABSOLUTEURI(Images_MOST_POPULAR_DOMAINS_BY_ABSOLUTEURI instance);
    partial void InsertImages_MOST_POPULAR_DOMAINS_BY_DOMAIN(Images_MOST_POPULAR_DOMAINS_BY_DOMAIN instance);
    partial void UpdateImages_MOST_POPULAR_DOMAINS_BY_DOMAIN(Images_MOST_POPULAR_DOMAINS_BY_DOMAIN instance);
    partial void DeleteImages_MOST_POPULAR_DOMAINS_BY_DOMAIN(Images_MOST_POPULAR_DOMAINS_BY_DOMAIN instance);
    partial void InsertImages_MOST_POPULAR_DOMAINS_BY_EXTENSION(Images_MOST_POPULAR_DOMAINS_BY_EXTENSION instance);
    partial void UpdateImages_MOST_POPULAR_DOMAINS_BY_EXTENSION(Images_MOST_POPULAR_DOMAINS_BY_EXTENSION instance);
    partial void DeleteImages_MOST_POPULAR_DOMAINS_BY_EXTENSION(Images_MOST_POPULAR_DOMAINS_BY_EXTENSION instance);
    partial void InsertImages_MOST_POPULAR_DOMAINS_BY_HOST(Images_MOST_POPULAR_DOMAINS_BY_HOST instance);
    partial void UpdateImages_MOST_POPULAR_DOMAINS_BY_HOST(Images_MOST_POPULAR_DOMAINS_BY_HOST instance);
    partial void DeleteImages_MOST_POPULAR_DOMAINS_BY_HOST(Images_MOST_POPULAR_DOMAINS_BY_HOST instance);
    partial void InsertImages_MOST_POPULAR_DOMAINS_BY_SCHEME(Images_MOST_POPULAR_DOMAINS_BY_SCHEME instance);
    partial void UpdateImages_MOST_POPULAR_DOMAINS_BY_SCHEME(Images_MOST_POPULAR_DOMAINS_BY_SCHEME instance);
    partial void DeleteImages_MOST_POPULAR_DOMAINS_BY_SCHEME(Images_MOST_POPULAR_DOMAINS_BY_SCHEME instance);
    partial void InsertImages_MOST_POPULAR_EXTENSIONS_BY_ABSOLUTEURI(Images_MOST_POPULAR_EXTENSIONS_BY_ABSOLUTEURI instance);
    partial void UpdateImages_MOST_POPULAR_EXTENSIONS_BY_ABSOLUTEURI(Images_MOST_POPULAR_EXTENSIONS_BY_ABSOLUTEURI instance);
    partial void DeleteImages_MOST_POPULAR_EXTENSIONS_BY_ABSOLUTEURI(Images_MOST_POPULAR_EXTENSIONS_BY_ABSOLUTEURI instance);
    partial void InsertImages_MOST_POPULAR_EXTENSIONS_BY_DOMAIN(Images_MOST_POPULAR_EXTENSIONS_BY_DOMAIN instance);
    partial void UpdateImages_MOST_POPULAR_EXTENSIONS_BY_DOMAIN(Images_MOST_POPULAR_EXTENSIONS_BY_DOMAIN instance);
    partial void DeleteImages_MOST_POPULAR_EXTENSIONS_BY_DOMAIN(Images_MOST_POPULAR_EXTENSIONS_BY_DOMAIN instance);
    partial void InsertImages_MOST_POPULAR_EXTENSIONS_BY_EXTENSION(Images_MOST_POPULAR_EXTENSIONS_BY_EXTENSION instance);
    partial void UpdateImages_MOST_POPULAR_EXTENSIONS_BY_EXTENSION(Images_MOST_POPULAR_EXTENSIONS_BY_EXTENSION instance);
    partial void DeleteImages_MOST_POPULAR_EXTENSIONS_BY_EXTENSION(Images_MOST_POPULAR_EXTENSIONS_BY_EXTENSION instance);
    partial void InsertImages_MOST_POPULAR_EXTENSIONS_BY_HOST(Images_MOST_POPULAR_EXTENSIONS_BY_HOST instance);
    partial void UpdateImages_MOST_POPULAR_EXTENSIONS_BY_HOST(Images_MOST_POPULAR_EXTENSIONS_BY_HOST instance);
    partial void DeleteImages_MOST_POPULAR_EXTENSIONS_BY_HOST(Images_MOST_POPULAR_EXTENSIONS_BY_HOST instance);
    partial void InsertImages_MOST_POPULAR_EXTENSIONS_BY_SCHEME(Images_MOST_POPULAR_EXTENSIONS_BY_SCHEME instance);
    partial void UpdateImages_MOST_POPULAR_EXTENSIONS_BY_SCHEME(Images_MOST_POPULAR_EXTENSIONS_BY_SCHEME instance);
    partial void DeleteImages_MOST_POPULAR_EXTENSIONS_BY_SCHEME(Images_MOST_POPULAR_EXTENSIONS_BY_SCHEME instance);
    partial void InsertImages_MOST_POPULAR_HOSTS_BY_ABSOLUTEURI(Images_MOST_POPULAR_HOSTS_BY_ABSOLUTEURI instance);
    partial void UpdateImages_MOST_POPULAR_HOSTS_BY_ABSOLUTEURI(Images_MOST_POPULAR_HOSTS_BY_ABSOLUTEURI instance);
    partial void DeleteImages_MOST_POPULAR_HOSTS_BY_ABSOLUTEURI(Images_MOST_POPULAR_HOSTS_BY_ABSOLUTEURI instance);
    partial void InsertImages_MOST_POPULAR_HOSTS_BY_DOMAIN(Images_MOST_POPULAR_HOSTS_BY_DOMAIN instance);
    partial void UpdateImages_MOST_POPULAR_HOSTS_BY_DOMAIN(Images_MOST_POPULAR_HOSTS_BY_DOMAIN instance);
    partial void DeleteImages_MOST_POPULAR_HOSTS_BY_DOMAIN(Images_MOST_POPULAR_HOSTS_BY_DOMAIN instance);
    partial void InsertImages_MOST_POPULAR_HOSTS_BY_EXTENSION(Images_MOST_POPULAR_HOSTS_BY_EXTENSION instance);
    partial void UpdateImages_MOST_POPULAR_HOSTS_BY_EXTENSION(Images_MOST_POPULAR_HOSTS_BY_EXTENSION instance);
    partial void DeleteImages_MOST_POPULAR_HOSTS_BY_EXTENSION(Images_MOST_POPULAR_HOSTS_BY_EXTENSION instance);
    partial void InsertImages_MOST_POPULAR_HOSTS_BY_HOST(Images_MOST_POPULAR_HOSTS_BY_HOST instance);
    partial void UpdateImages_MOST_POPULAR_HOSTS_BY_HOST(Images_MOST_POPULAR_HOSTS_BY_HOST instance);
    partial void DeleteImages_MOST_POPULAR_HOSTS_BY_HOST(Images_MOST_POPULAR_HOSTS_BY_HOST instance);
    partial void InsertImages_MOST_POPULAR_HOSTS_BY_SCHEME(Images_MOST_POPULAR_HOSTS_BY_SCHEME instance);
    partial void UpdateImages_MOST_POPULAR_HOSTS_BY_SCHEME(Images_MOST_POPULAR_HOSTS_BY_SCHEME instance);
    partial void DeleteImages_MOST_POPULAR_HOSTS_BY_SCHEME(Images_MOST_POPULAR_HOSTS_BY_SCHEME instance);
    partial void InsertImages_MOST_POPULAR_SCHEMES_BY_ABSOLUTEURI(Images_MOST_POPULAR_SCHEMES_BY_ABSOLUTEURI instance);
    partial void UpdateImages_MOST_POPULAR_SCHEMES_BY_ABSOLUTEURI(Images_MOST_POPULAR_SCHEMES_BY_ABSOLUTEURI instance);
    partial void DeleteImages_MOST_POPULAR_SCHEMES_BY_ABSOLUTEURI(Images_MOST_POPULAR_SCHEMES_BY_ABSOLUTEURI instance);
    partial void InsertImages_MOST_POPULAR_SCHEMES_BY_DOMAIN(Images_MOST_POPULAR_SCHEMES_BY_DOMAIN instance);
    partial void UpdateImages_MOST_POPULAR_SCHEMES_BY_DOMAIN(Images_MOST_POPULAR_SCHEMES_BY_DOMAIN instance);
    partial void DeleteImages_MOST_POPULAR_SCHEMES_BY_DOMAIN(Images_MOST_POPULAR_SCHEMES_BY_DOMAIN instance);
    partial void InsertImages_MOST_POPULAR_SCHEMES_BY_EXTENSION(Images_MOST_POPULAR_SCHEMES_BY_EXTENSION instance);
    partial void UpdateImages_MOST_POPULAR_SCHEMES_BY_EXTENSION(Images_MOST_POPULAR_SCHEMES_BY_EXTENSION instance);
    partial void DeleteImages_MOST_POPULAR_SCHEMES_BY_EXTENSION(Images_MOST_POPULAR_SCHEMES_BY_EXTENSION instance);
    partial void InsertImages_MOST_POPULAR_SCHEMES_BY_HOST(Images_MOST_POPULAR_SCHEMES_BY_HOST instance);
    partial void UpdateImages_MOST_POPULAR_SCHEMES_BY_HOST(Images_MOST_POPULAR_SCHEMES_BY_HOST instance);
    partial void DeleteImages_MOST_POPULAR_SCHEMES_BY_HOST(Images_MOST_POPULAR_SCHEMES_BY_HOST instance);
    partial void InsertImages_MOST_POPULAR_SCHEMES_BY_SCHEME(Images_MOST_POPULAR_SCHEMES_BY_SCHEME instance);
    partial void UpdateImages_MOST_POPULAR_SCHEMES_BY_SCHEME(Images_MOST_POPULAR_SCHEMES_BY_SCHEME instance);
    partial void DeleteImages_MOST_POPULAR_SCHEMES_BY_SCHEME(Images_MOST_POPULAR_SCHEMES_BY_SCHEME instance);
    partial void InsertWebPages_COUNT_BY_DOMAIN(WebPages_COUNT_BY_DOMAIN instance);
    partial void UpdateWebPages_COUNT_BY_DOMAIN(WebPages_COUNT_BY_DOMAIN instance);
    partial void DeleteWebPages_COUNT_BY_DOMAIN(WebPages_COUNT_BY_DOMAIN instance);
    partial void InsertWebPages_COUNT_BY_EXTENSION(WebPages_COUNT_BY_EXTENSION instance);
    partial void UpdateWebPages_COUNT_BY_EXTENSION(WebPages_COUNT_BY_EXTENSION instance);
    partial void DeleteWebPages_COUNT_BY_EXTENSION(WebPages_COUNT_BY_EXTENSION instance);
    partial void InsertWebPages_COUNT_BY_FULLTEXTINDEXTYPE(WebPages_COUNT_BY_FULLTEXTINDEXTYPE instance);
    partial void UpdateWebPages_COUNT_BY_FULLTEXTINDEXTYPE(WebPages_COUNT_BY_FULLTEXTINDEXTYPE instance);
    partial void DeleteWebPages_COUNT_BY_FULLTEXTINDEXTYPE(WebPages_COUNT_BY_FULLTEXTINDEXTYPE instance);
    partial void InsertWebPages_COUNT_BY_HOST(WebPages_COUNT_BY_HOST instance);
    partial void UpdateWebPages_COUNT_BY_HOST(WebPages_COUNT_BY_HOST instance);
    partial void DeleteWebPages_COUNT_BY_HOST(WebPages_COUNT_BY_HOST instance);
    #endregion
		
		public ArachnodeDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["arachnode_netConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public ArachnodeDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ArachnodeDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ArachnodeDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ArachnodeDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<AllowedDataType> AllowedDataTypes
		{
			get
			{
				return this.GetTable<AllowedDataType>();
			}
		}
		
		public System.Data.Linq.Table<WebPages_COUNT_BY_SCHEME> WebPages_COUNT_BY_SCHEMEs
		{
			get
			{
				return this.GetTable<WebPages_COUNT_BY_SCHEME>();
			}
		}
		
		public System.Data.Linq.Table<AllowedExtension> AllowedExtensions
		{
			get
			{
				return this.GetTable<AllowedExtension>();
			}
		}
		
		public System.Data.Linq.Table<AllowedScheme> AllowedSchemes
		{
			get
			{
				return this.GetTable<AllowedScheme>();
			}
		}
		
		public System.Data.Linq.Table<Configuration> Configurations
		{
			get
			{
				return this.GetTable<Configuration>();
			}
		}
		
		public System.Data.Linq.Table<ConfigurationType> ConfigurationTypes
		{
			get
			{
				return this.GetTable<ConfigurationType>();
			}
		}
		
		public System.Data.Linq.Table<ContentType> ContentTypes
		{
			get
			{
				return this.GetTable<ContentType>();
			}
		}
		
		public System.Data.Linq.Table<ContentTypeType> ContentTypeTypes
		{
			get
			{
				return this.GetTable<ContentTypeType>();
			}
		}
		
		public System.Data.Linq.Table<CrawlAction> CrawlActions
		{
			get
			{
				return this.GetTable<CrawlAction>();
			}
		}
		
		public System.Data.Linq.Table<CrawlActionType> CrawlActionTypes
		{
			get
			{
				return this.GetTable<CrawlActionType>();
			}
		}
		
		public System.Data.Linq.Table<CrawlRule> CrawlRules
		{
			get
			{
				return this.GetTable<CrawlRule>();
			}
		}
		
		public System.Data.Linq.Table<CrawlRuleType> CrawlRuleTypes
		{
			get
			{
				return this.GetTable<CrawlRuleType>();
			}
		}
		
		public System.Data.Linq.Table<DisallowedDomain> DisallowedDomains
		{
			get
			{
				return this.GetTable<DisallowedDomain>();
			}
		}
		
		public System.Data.Linq.Table<DisallowedExtension> DisallowedExtensions
		{
			get
			{
				return this.GetTable<DisallowedExtension>();
			}
		}
		
		public System.Data.Linq.Table<DisallowedFileExtension> DisallowedFileExtensions
		{
			get
			{
				return this.GetTable<DisallowedFileExtension>();
			}
		}
		
		public System.Data.Linq.Table<DisallowedHost> DisallowedHosts
		{
			get
			{
				return this.GetTable<DisallowedHost>();
			}
		}
		
		public System.Data.Linq.Table<DisallowedScheme> DisallowedSchemes
		{
			get
			{
				return this.GetTable<DisallowedScheme>();
			}
		}
		
		public System.Data.Linq.Table<DisallowedWord> DisallowedWords
		{
			get
			{
				return this.GetTable<DisallowedWord>();
			}
		}
		
		public System.Data.Linq.Table<EngineAction> EngineActions
		{
			get
			{
				return this.GetTable<EngineAction>();
			}
		}
		
		public System.Data.Linq.Table<EngineActionType> EngineActionTypes
		{
			get
			{
				return this.GetTable<EngineActionType>();
			}
		}
		
		public System.Data.Linq.Table<FullTextIndexType> FullTextIndexTypes
		{
			get
			{
				return this.GetTable<FullTextIndexType>();
			}
		}
		
		public System.Data.Linq.Table<Priority> Priorities
		{
			get
			{
				return this.GetTable<Priority>();
			}
		}
		
		public System.Data.Linq.Table<Version> Versions
		{
			get
			{
				return this.GetTable<Version>();
			}
		}
		
		public System.Data.Linq.Table<CrawlRequest> CrawlRequests
		{
			get
			{
				return this.GetTable<CrawlRequest>();
			}
		}
		
		public System.Data.Linq.Table<DisallowedAbsoluteUri> DisallowedAbsoluteUris
		{
			get
			{
				return this.GetTable<DisallowedAbsoluteUri>();
			}
		}
		
		public System.Data.Linq.Table<DisallowedAbsoluteUris_Discovery> DisallowedAbsoluteUris_Discoveries
		{
			get
			{
				return this.GetTable<DisallowedAbsoluteUris_Discovery>();
			}
		}
		
		public System.Data.Linq.Table<DisallowedAbsoluteUris_Hosts_Discovery> DisallowedAbsoluteUris_Hosts_Discoveries
		{
			get
			{
				return this.GetTable<DisallowedAbsoluteUris_Hosts_Discovery>();
			}
		}
		
		public System.Data.Linq.Table<DisallowedAbsoluteUris_Schemes_Discovery> DisallowedAbsoluteUris_Schemes_Discoveries
		{
			get
			{
				return this.GetTable<DisallowedAbsoluteUris_Schemes_Discovery>();
			}
		}
		
		public System.Data.Linq.Table<Discovery> Discoveries
		{
			get
			{
				return this.GetTable<Discovery>();
			}
		}
		
		public System.Data.Linq.Table<DiscoveryState> DiscoveryStates
		{
			get
			{
				return this.GetTable<DiscoveryState>();
			}
		}
		
		public System.Data.Linq.Table<DiscoveryType> DiscoveryTypes
		{
			get
			{
				return this.GetTable<DiscoveryType>();
			}
		}
		
		public System.Data.Linq.Table<Document> Documents
		{
			get
			{
				return this.GetTable<Document>();
			}
		}
		
		public System.Data.Linq.Table<DocumentType> DocumentTypes
		{
			get
			{
				return this.GetTable<DocumentType>();
			}
		}
		
		public System.Data.Linq.Table<Domain> Domains
		{
			get
			{
				return this.GetTable<Domain>();
			}
		}
		
		public System.Data.Linq.Table<Domains_Discovery> Domains_Discoveries
		{
			get
			{
				return this.GetTable<Domains_Discovery>();
			}
		}
		
		public System.Data.Linq.Table<EmailAddress> EmailAddresses
		{
			get
			{
				return this.GetTable<EmailAddress>();
			}
		}
		
		public System.Data.Linq.Table<EmailAddresses_Discovery> EmailAddresses_Discoveries
		{
			get
			{
				return this.GetTable<EmailAddresses_Discovery>();
			}
		}
		
		public System.Data.Linq.Table<EmailAddresses_Hosts_Discovery> EmailAddresses_Hosts_Discoveries
		{
			get
			{
				return this.GetTable<EmailAddresses_Hosts_Discovery>();
			}
		}
		
		public System.Data.Linq.Table<EmailAddresses_Schemes_Discovery> EmailAddresses_Schemes_Discoveries
		{
			get
			{
				return this.GetTable<EmailAddresses_Schemes_Discovery>();
			}
		}
		
		public System.Data.Linq.Table<Exception> Exceptions
		{
			get
			{
				return this.GetTable<Exception>();
			}
		}
		
		public System.Data.Linq.Table<Exceptions_Hosts_Discovery> Exceptions_Hosts_Discoveries
		{
			get
			{
				return this.GetTable<Exceptions_Hosts_Discovery>();
			}
		}
		
		public System.Data.Linq.Table<Exceptions_Schemes_Discovery> Exceptions_Schemes_Discoveries
		{
			get
			{
				return this.GetTable<Exceptions_Schemes_Discovery>();
			}
		}
		
		public System.Data.Linq.Table<Extension> Extensions
		{
			get
			{
				return this.GetTable<Extension>();
			}
		}
		
		public System.Data.Linq.Table<Extensions_Discovery> Extensions_Discoveries
		{
			get
			{
				return this.GetTable<Extensions_Discovery>();
			}
		}
		
		public System.Data.Linq.Table<File> Files
		{
			get
			{
				return this.GetTable<File>();
			}
		}
		
		public System.Data.Linq.Table<Files_Discovery> Files_Discoveries
		{
			get
			{
				return this.GetTable<Files_Discovery>();
			}
		}
		
		public System.Data.Linq.Table<Files_Hosts_Discovery> Files_Hosts_Discoveries
		{
			get
			{
				return this.GetTable<Files_Hosts_Discovery>();
			}
		}
		
		public System.Data.Linq.Table<Files_MetaData> Files_MetaDatas
		{
			get
			{
				return this.GetTable<Files_MetaData>();
			}
		}
		
		public System.Data.Linq.Table<Files_Schemes_Discovery> Files_Schemes_Discoveries
		{
			get
			{
				return this.GetTable<Files_Schemes_Discovery>();
			}
		}
		
		public System.Data.Linq.Table<Host> Hosts
		{
			get
			{
				return this.GetTable<Host>();
			}
		}
		
		public System.Data.Linq.Table<Hosts_Discovery> Hosts_Discoveries
		{
			get
			{
				return this.GetTable<Hosts_Discovery>();
			}
		}
		
		public System.Data.Linq.Table<HyperLink> HyperLinks
		{
			get
			{
				return this.GetTable<HyperLink>();
			}
		}
		
		public System.Data.Linq.Table<HyperLinks_Discovery> HyperLinks_Discoveries
		{
			get
			{
				return this.GetTable<HyperLinks_Discovery>();
			}
		}
		
		public System.Data.Linq.Table<HyperLinks_Hosts_Discovery> HyperLinks_Hosts_Discoveries
		{
			get
			{
				return this.GetTable<HyperLinks_Hosts_Discovery>();
			}
		}
		
		public System.Data.Linq.Table<HyperLinks_Schemes_Discovery> HyperLinks_Schemes_Discoveries
		{
			get
			{
				return this.GetTable<HyperLinks_Schemes_Discovery>();
			}
		}
		
		public System.Data.Linq.Table<Image> Images
		{
			get
			{
				return this.GetTable<Image>();
			}
		}
		
		public System.Data.Linq.Table<Images_Discovery> Images_Discoveries
		{
			get
			{
				return this.GetTable<Images_Discovery>();
			}
		}
		
		public System.Data.Linq.Table<Images_Hosts_Discovery> Images_Hosts_Discoveries
		{
			get
			{
				return this.GetTable<Images_Hosts_Discovery>();
			}
		}
		
		public System.Data.Linq.Table<Images_MetaData> Images_MetaDatas
		{
			get
			{
				return this.GetTable<Images_MetaData>();
			}
		}
		
		public System.Data.Linq.Table<Images_Schemes_Discovery> Images_Schemes_Discoveries
		{
			get
			{
				return this.GetTable<Images_Schemes_Discovery>();
			}
		}
		
		public System.Data.Linq.Table<Scheme> Schemes
		{
			get
			{
				return this.GetTable<Scheme>();
			}
		}
		
		public System.Data.Linq.Table<Schemes_Discovery> Schemes_Discoveries
		{
			get
			{
				return this.GetTable<Schemes_Discovery>();
			}
		}
		
		public System.Data.Linq.Table<UriClassificationType> UriClassificationTypes
		{
			get
			{
				return this.GetTable<UriClassificationType>();
			}
		}
		
		public System.Data.Linq.Table<WebPage> WebPages
		{
			get
			{
				return this.GetTable<WebPage>();
			}
		}
		
		public System.Data.Linq.Table<WebPages_Hosts_Discovery> WebPages_Hosts_Discoveries
		{
			get
			{
				return this.GetTable<WebPages_Hosts_Discovery>();
			}
		}
		
		public System.Data.Linq.Table<WebPages_MetaData> WebPages_MetaDatas
		{
			get
			{
				return this.GetTable<WebPages_MetaData>();
			}
		}
		
		public System.Data.Linq.Table<WebPages_MetaData_TermExtraction> WebPages_MetaData_TermExtractions
		{
			get
			{
				return this.GetTable<WebPages_MetaData_TermExtraction>();
			}
		}
		
		public System.Data.Linq.Table<WebPages_MetaData_TermLookup> WebPages_MetaData_TermLookups
		{
			get
			{
				return this.GetTable<WebPages_MetaData_TermLookup>();
			}
		}
		
		public System.Data.Linq.Table<WebPages_Schemes_Discovery> WebPages_Schemes_Discoveries
		{
			get
			{
				return this.GetTable<WebPages_Schemes_Discovery>();
			}
		}
		
		public System.Data.Linq.Table<DisallowedAbsoluteUris_COUNT_BY_ABSOLUTEURI> DisallowedAbsoluteUris_COUNT_BY_ABSOLUTEURIs
		{
			get
			{
				return this.GetTable<DisallowedAbsoluteUris_COUNT_BY_ABSOLUTEURI>();
			}
		}
		
		public System.Data.Linq.Table<DisallowedAbsoluteUris_COUNT_BY_DOMAIN> DisallowedAbsoluteUris_COUNT_BY_DOMAINs
		{
			get
			{
				return this.GetTable<DisallowedAbsoluteUris_COUNT_BY_DOMAIN>();
			}
		}
		
		public System.Data.Linq.Table<DisallowedAbsoluteUris_COUNT_BY_EXTENSION> DisallowedAbsoluteUris_COUNT_BY_EXTENSIONs
		{
			get
			{
				return this.GetTable<DisallowedAbsoluteUris_COUNT_BY_EXTENSION>();
			}
		}
		
		public System.Data.Linq.Table<DisallowedAbsoluteUris_COUNT_BY_HOST> DisallowedAbsoluteUris_COUNT_BY_HOSTs
		{
			get
			{
				return this.GetTable<DisallowedAbsoluteUris_COUNT_BY_HOST>();
			}
		}
		
		public System.Data.Linq.Table<DisallowedAbsoluteUris_COUNT_BY_SCHEME> DisallowedAbsoluteUris_COUNT_BY_SCHEMEs
		{
			get
			{
				return this.GetTable<DisallowedAbsoluteUris_COUNT_BY_SCHEME>();
			}
		}
		
		public System.Data.Linq.Table<DisallowedAbsoluteUris_MOST_POPULAR_ABSOLUTEURIS_BY_ABSOLUTEURI> DisallowedAbsoluteUris_MOST_POPULAR_ABSOLUTEURIS_BY_ABSOLUTEURIs
		{
			get
			{
				return this.GetTable<DisallowedAbsoluteUris_MOST_POPULAR_ABSOLUTEURIS_BY_ABSOLUTEURI>();
			}
		}
		
		public System.Data.Linq.Table<DisallowedAbsoluteUris_MOST_POPULAR_ABSOLUTEURIS_BY_DOMAIN> DisallowedAbsoluteUris_MOST_POPULAR_ABSOLUTEURIS_BY_DOMAINs
		{
			get
			{
				return this.GetTable<DisallowedAbsoluteUris_MOST_POPULAR_ABSOLUTEURIS_BY_DOMAIN>();
			}
		}
		
		public System.Data.Linq.Table<DisallowedAbsoluteUris_MOST_POPULAR_ABSOLUTEURIS_BY_EXTENSION> DisallowedAbsoluteUris_MOST_POPULAR_ABSOLUTEURIS_BY_EXTENSIONs
		{
			get
			{
				return this.GetTable<DisallowedAbsoluteUris_MOST_POPULAR_ABSOLUTEURIS_BY_EXTENSION>();
			}
		}
		
		public System.Data.Linq.Table<DisallowedAbsoluteUris_MOST_POPULAR_ABSOLUTEURIS_BY_HOST> DisallowedAbsoluteUris_MOST_POPULAR_ABSOLUTEURIS_BY_HOSTs
		{
			get
			{
				return this.GetTable<DisallowedAbsoluteUris_MOST_POPULAR_ABSOLUTEURIS_BY_HOST>();
			}
		}
		
		public System.Data.Linq.Table<DisallowedAbsoluteUris_MOST_POPULAR_ABSOLUTEURIS_BY_SCHEME> DisallowedAbsoluteUris_MOST_POPULAR_ABSOLUTEURIS_BY_SCHEMEs
		{
			get
			{
				return this.GetTable<DisallowedAbsoluteUris_MOST_POPULAR_ABSOLUTEURIS_BY_SCHEME>();
			}
		}
		
		public System.Data.Linq.Table<DisallowedAbsoluteUris_MOST_POPULAR_DOMAINS_BY_ABSOLUTEURI> DisallowedAbsoluteUris_MOST_POPULAR_DOMAINS_BY_ABSOLUTEURIs
		{
			get
			{
				return this.GetTable<DisallowedAbsoluteUris_MOST_POPULAR_DOMAINS_BY_ABSOLUTEURI>();
			}
		}
		
		public System.Data.Linq.Table<DisallowedAbsoluteUris_MOST_POPULAR_DOMAINS_BY_DOMAIN> DisallowedAbsoluteUris_MOST_POPULAR_DOMAINS_BY_DOMAINs
		{
			get
			{
				return this.GetTable<DisallowedAbsoluteUris_MOST_POPULAR_DOMAINS_BY_DOMAIN>();
			}
		}
		
		public System.Data.Linq.Table<DisallowedAbsoluteUris_MOST_POPULAR_DOMAINS_BY_EXTENSION> DisallowedAbsoluteUris_MOST_POPULAR_DOMAINS_BY_EXTENSIONs
		{
			get
			{
				return this.GetTable<DisallowedAbsoluteUris_MOST_POPULAR_DOMAINS_BY_EXTENSION>();
			}
		}
		
		public System.Data.Linq.Table<DisallowedAbsoluteUris_MOST_POPULAR_DOMAINS_BY_HOST> DisallowedAbsoluteUris_MOST_POPULAR_DOMAINS_BY_HOSTs
		{
			get
			{
				return this.GetTable<DisallowedAbsoluteUris_MOST_POPULAR_DOMAINS_BY_HOST>();
			}
		}
		
		public System.Data.Linq.Table<DisallowedAbsoluteUris_MOST_POPULAR_DOMAINS_BY_SCHEME> DisallowedAbsoluteUris_MOST_POPULAR_DOMAINS_BY_SCHEMEs
		{
			get
			{
				return this.GetTable<DisallowedAbsoluteUris_MOST_POPULAR_DOMAINS_BY_SCHEME>();
			}
		}
		
		public System.Data.Linq.Table<DisallowedAbsoluteUris_MOST_POPULAR_EXTENSIONS_BY_ABSOLUTEURI> DisallowedAbsoluteUris_MOST_POPULAR_EXTENSIONS_BY_ABSOLUTEURIs
		{
			get
			{
				return this.GetTable<DisallowedAbsoluteUris_MOST_POPULAR_EXTENSIONS_BY_ABSOLUTEURI>();
			}
		}
		
		public System.Data.Linq.Table<DisallowedAbsoluteUris_MOST_POPULAR_EXTENSIONS_BY_DOMAIN> DisallowedAbsoluteUris_MOST_POPULAR_EXTENSIONS_BY_DOMAINs
		{
			get
			{
				return this.GetTable<DisallowedAbsoluteUris_MOST_POPULAR_EXTENSIONS_BY_DOMAIN>();
			}
		}
		
		public System.Data.Linq.Table<DisallowedAbsoluteUris_MOST_POPULAR_EXTENSIONS_BY_EXTENSION> DisallowedAbsoluteUris_MOST_POPULAR_EXTENSIONS_BY_EXTENSIONs
		{
			get
			{
				return this.GetTable<DisallowedAbsoluteUris_MOST_POPULAR_EXTENSIONS_BY_EXTENSION>();
			}
		}
		
		public System.Data.Linq.Table<DisallowedAbsoluteUris_MOST_POPULAR_EXTENSIONS_BY_HOST> DisallowedAbsoluteUris_MOST_POPULAR_EXTENSIONS_BY_HOSTs
		{
			get
			{
				return this.GetTable<DisallowedAbsoluteUris_MOST_POPULAR_EXTENSIONS_BY_HOST>();
			}
		}
		
		public System.Data.Linq.Table<DisallowedAbsoluteUris_MOST_POPULAR_EXTENSIONS_BY_SCHEME> DisallowedAbsoluteUris_MOST_POPULAR_EXTENSIONS_BY_SCHEMEs
		{
			get
			{
				return this.GetTable<DisallowedAbsoluteUris_MOST_POPULAR_EXTENSIONS_BY_SCHEME>();
			}
		}
		
		public System.Data.Linq.Table<DisallowedAbsoluteUris_MOST_POPULAR_HOSTS_BY_ABSOLUTEURI> DisallowedAbsoluteUris_MOST_POPULAR_HOSTS_BY_ABSOLUTEURIs
		{
			get
			{
				return this.GetTable<DisallowedAbsoluteUris_MOST_POPULAR_HOSTS_BY_ABSOLUTEURI>();
			}
		}
		
		public System.Data.Linq.Table<DisallowedAbsoluteUris_MOST_POPULAR_HOSTS_BY_DOMAIN> DisallowedAbsoluteUris_MOST_POPULAR_HOSTS_BY_DOMAINs
		{
			get
			{
				return this.GetTable<DisallowedAbsoluteUris_MOST_POPULAR_HOSTS_BY_DOMAIN>();
			}
		}
		
		public System.Data.Linq.Table<DisallowedAbsoluteUris_MOST_POPULAR_HOSTS_BY_EXTENSION> DisallowedAbsoluteUris_MOST_POPULAR_HOSTS_BY_EXTENSIONs
		{
			get
			{
				return this.GetTable<DisallowedAbsoluteUris_MOST_POPULAR_HOSTS_BY_EXTENSION>();
			}
		}
		
		public System.Data.Linq.Table<DisallowedAbsoluteUris_MOST_POPULAR_HOSTS_BY_HOST> DisallowedAbsoluteUris_MOST_POPULAR_HOSTS_BY_HOSTs
		{
			get
			{
				return this.GetTable<DisallowedAbsoluteUris_MOST_POPULAR_HOSTS_BY_HOST>();
			}
		}
		
		public System.Data.Linq.Table<DisallowedAbsoluteUris_MOST_POPULAR_HOSTS_BY_SCHEME> DisallowedAbsoluteUris_MOST_POPULAR_HOSTS_BY_SCHEMEs
		{
			get
			{
				return this.GetTable<DisallowedAbsoluteUris_MOST_POPULAR_HOSTS_BY_SCHEME>();
			}
		}
		
		public System.Data.Linq.Table<DisallowedAbsoluteUris_MOST_POPULAR_SCHEMES_BY_ABSOLUTEURI> DisallowedAbsoluteUris_MOST_POPULAR_SCHEMES_BY_ABSOLUTEURIs
		{
			get
			{
				return this.GetTable<DisallowedAbsoluteUris_MOST_POPULAR_SCHEMES_BY_ABSOLUTEURI>();
			}
		}
		
		public System.Data.Linq.Table<DisallowedAbsoluteUris_MOST_POPULAR_SCHEMES_BY_DOMAIN> DisallowedAbsoluteUris_MOST_POPULAR_SCHEMES_BY_DOMAINs
		{
			get
			{
				return this.GetTable<DisallowedAbsoluteUris_MOST_POPULAR_SCHEMES_BY_DOMAIN>();
			}
		}
		
		public System.Data.Linq.Table<DisallowedAbsoluteUris_MOST_POPULAR_SCHEMES_BY_EXTENSION> DisallowedAbsoluteUris_MOST_POPULAR_SCHEMES_BY_EXTENSIONs
		{
			get
			{
				return this.GetTable<DisallowedAbsoluteUris_MOST_POPULAR_SCHEMES_BY_EXTENSION>();
			}
		}
		
		public System.Data.Linq.Table<DisallowedAbsoluteUris_MOST_POPULAR_SCHEMES_BY_HOST> DisallowedAbsoluteUris_MOST_POPULAR_SCHEMES_BY_HOSTs
		{
			get
			{
				return this.GetTable<DisallowedAbsoluteUris_MOST_POPULAR_SCHEMES_BY_HOST>();
			}
		}
		
		public System.Data.Linq.Table<DisallowedAbsoluteUris_MOST_POPULAR_SCHEMES_BY_SCHEME> DisallowedAbsoluteUris_MOST_POPULAR_SCHEMES_BY_SCHEMEs
		{
			get
			{
				return this.GetTable<DisallowedAbsoluteUris_MOST_POPULAR_SCHEMES_BY_SCHEME>();
			}
		}
		
		public System.Data.Linq.Table<EmailAddresses_COUNT_BY_ABSOLUTEURI> EmailAddresses_COUNT_BY_ABSOLUTEURIs
		{
			get
			{
				return this.GetTable<EmailAddresses_COUNT_BY_ABSOLUTEURI>();
			}
		}
		
		public System.Data.Linq.Table<EmailAddresses_COUNT_BY_DOMAIN> EmailAddresses_COUNT_BY_DOMAINs
		{
			get
			{
				return this.GetTable<EmailAddresses_COUNT_BY_DOMAIN>();
			}
		}
		
		public System.Data.Linq.Table<EmailAddresses_COUNT_BY_EXTENSION> EmailAddresses_COUNT_BY_EXTENSIONs
		{
			get
			{
				return this.GetTable<EmailAddresses_COUNT_BY_EXTENSION>();
			}
		}
		
		public System.Data.Linq.Table<EmailAddresses_COUNT_BY_HOST> EmailAddresses_COUNT_BY_HOSTs
		{
			get
			{
				return this.GetTable<EmailAddresses_COUNT_BY_HOST>();
			}
		}
		
		public System.Data.Linq.Table<EmailAddresses_COUNT_BY_SCHEME> EmailAddresses_COUNT_BY_SCHEMEs
		{
			get
			{
				return this.GetTable<EmailAddresses_COUNT_BY_SCHEME>();
			}
		}
		
		public System.Data.Linq.Table<EmailAddresses_MOST_POPULAR_ABSOLUTEURIS_BY_ABSOLUTEURI> EmailAddresses_MOST_POPULAR_ABSOLUTEURIS_BY_ABSOLUTEURIs
		{
			get
			{
				return this.GetTable<EmailAddresses_MOST_POPULAR_ABSOLUTEURIS_BY_ABSOLUTEURI>();
			}
		}
		
		public System.Data.Linq.Table<EmailAddresses_MOST_POPULAR_ABSOLUTEURIS_BY_DOMAIN> EmailAddresses_MOST_POPULAR_ABSOLUTEURIS_BY_DOMAINs
		{
			get
			{
				return this.GetTable<EmailAddresses_MOST_POPULAR_ABSOLUTEURIS_BY_DOMAIN>();
			}
		}
		
		public System.Data.Linq.Table<EmailAddresses_MOST_POPULAR_ABSOLUTEURIS_BY_EXTENSION> EmailAddresses_MOST_POPULAR_ABSOLUTEURIS_BY_EXTENSIONs
		{
			get
			{
				return this.GetTable<EmailAddresses_MOST_POPULAR_ABSOLUTEURIS_BY_EXTENSION>();
			}
		}
		
		public System.Data.Linq.Table<EmailAddresses_MOST_POPULAR_ABSOLUTEURIS_BY_HOST> EmailAddresses_MOST_POPULAR_ABSOLUTEURIS_BY_HOSTs
		{
			get
			{
				return this.GetTable<EmailAddresses_MOST_POPULAR_ABSOLUTEURIS_BY_HOST>();
			}
		}
		
		public System.Data.Linq.Table<EmailAddresses_MOST_POPULAR_ABSOLUTEURIS_BY_SCHEME> EmailAddresses_MOST_POPULAR_ABSOLUTEURIS_BY_SCHEMEs
		{
			get
			{
				return this.GetTable<EmailAddresses_MOST_POPULAR_ABSOLUTEURIS_BY_SCHEME>();
			}
		}
		
		public System.Data.Linq.Table<EmailAddresses_MOST_POPULAR_DOMAINS_BY_ABSOLUTEURI> EmailAddresses_MOST_POPULAR_DOMAINS_BY_ABSOLUTEURIs
		{
			get
			{
				return this.GetTable<EmailAddresses_MOST_POPULAR_DOMAINS_BY_ABSOLUTEURI>();
			}
		}
		
		public System.Data.Linq.Table<EmailAddresses_MOST_POPULAR_DOMAINS_BY_DOMAIN> EmailAddresses_MOST_POPULAR_DOMAINS_BY_DOMAINs
		{
			get
			{
				return this.GetTable<EmailAddresses_MOST_POPULAR_DOMAINS_BY_DOMAIN>();
			}
		}
		
		public System.Data.Linq.Table<EmailAddresses_MOST_POPULAR_DOMAINS_BY_EXTENSION> EmailAddresses_MOST_POPULAR_DOMAINS_BY_EXTENSIONs
		{
			get
			{
				return this.GetTable<EmailAddresses_MOST_POPULAR_DOMAINS_BY_EXTENSION>();
			}
		}
		
		public System.Data.Linq.Table<EmailAddresses_MOST_POPULAR_DOMAINS_BY_HOST> EmailAddresses_MOST_POPULAR_DOMAINS_BY_HOSTs
		{
			get
			{
				return this.GetTable<EmailAddresses_MOST_POPULAR_DOMAINS_BY_HOST>();
			}
		}
		
		public System.Data.Linq.Table<EmailAddresses_MOST_POPULAR_DOMAINS_BY_SCHEME> EmailAddresses_MOST_POPULAR_DOMAINS_BY_SCHEMEs
		{
			get
			{
				return this.GetTable<EmailAddresses_MOST_POPULAR_DOMAINS_BY_SCHEME>();
			}
		}
		
		public System.Data.Linq.Table<EmailAddresses_MOST_POPULAR_EXTENSIONS_BY_ABSOLUTEURI> EmailAddresses_MOST_POPULAR_EXTENSIONS_BY_ABSOLUTEURIs
		{
			get
			{
				return this.GetTable<EmailAddresses_MOST_POPULAR_EXTENSIONS_BY_ABSOLUTEURI>();
			}
		}
		
		public System.Data.Linq.Table<EmailAddresses_MOST_POPULAR_EXTENSIONS_BY_DOMAIN> EmailAddresses_MOST_POPULAR_EXTENSIONS_BY_DOMAINs
		{
			get
			{
				return this.GetTable<EmailAddresses_MOST_POPULAR_EXTENSIONS_BY_DOMAIN>();
			}
		}
		
		public System.Data.Linq.Table<EmailAddresses_MOST_POPULAR_EXTENSIONS_BY_EXTENSION> EmailAddresses_MOST_POPULAR_EXTENSIONS_BY_EXTENSIONs
		{
			get
			{
				return this.GetTable<EmailAddresses_MOST_POPULAR_EXTENSIONS_BY_EXTENSION>();
			}
		}
		
		public System.Data.Linq.Table<EmailAddresses_MOST_POPULAR_EXTENSIONS_BY_HOST> EmailAddresses_MOST_POPULAR_EXTENSIONS_BY_HOSTs
		{
			get
			{
				return this.GetTable<EmailAddresses_MOST_POPULAR_EXTENSIONS_BY_HOST>();
			}
		}
		
		public System.Data.Linq.Table<EmailAddresses_MOST_POPULAR_EXTENSIONS_BY_SCHEME> EmailAddresses_MOST_POPULAR_EXTENSIONS_BY_SCHEMEs
		{
			get
			{
				return this.GetTable<EmailAddresses_MOST_POPULAR_EXTENSIONS_BY_SCHEME>();
			}
		}
		
		public System.Data.Linq.Table<EmailAddresses_MOST_POPULAR_HOSTS_BY_ABSOLUTEURI> EmailAddresses_MOST_POPULAR_HOSTS_BY_ABSOLUTEURIs
		{
			get
			{
				return this.GetTable<EmailAddresses_MOST_POPULAR_HOSTS_BY_ABSOLUTEURI>();
			}
		}
		
		public System.Data.Linq.Table<EmailAddresses_MOST_POPULAR_HOSTS_BY_DOMAIN> EmailAddresses_MOST_POPULAR_HOSTS_BY_DOMAINs
		{
			get
			{
				return this.GetTable<EmailAddresses_MOST_POPULAR_HOSTS_BY_DOMAIN>();
			}
		}
		
		public System.Data.Linq.Table<EmailAddresses_MOST_POPULAR_HOSTS_BY_EXTENSION> EmailAddresses_MOST_POPULAR_HOSTS_BY_EXTENSIONs
		{
			get
			{
				return this.GetTable<EmailAddresses_MOST_POPULAR_HOSTS_BY_EXTENSION>();
			}
		}
		
		public System.Data.Linq.Table<EmailAddresses_MOST_POPULAR_HOSTS_BY_HOST> EmailAddresses_MOST_POPULAR_HOSTS_BY_HOSTs
		{
			get
			{
				return this.GetTable<EmailAddresses_MOST_POPULAR_HOSTS_BY_HOST>();
			}
		}
		
		public System.Data.Linq.Table<EmailAddresses_MOST_POPULAR_HOSTS_BY_SCHEME> EmailAddresses_MOST_POPULAR_HOSTS_BY_SCHEMEs
		{
			get
			{
				return this.GetTable<EmailAddresses_MOST_POPULAR_HOSTS_BY_SCHEME>();
			}
		}
		
		public System.Data.Linq.Table<EmailAddresses_MOST_POPULAR_SCHEMES_BY_ABSOLUTEURI> EmailAddresses_MOST_POPULAR_SCHEMES_BY_ABSOLUTEURIs
		{
			get
			{
				return this.GetTable<EmailAddresses_MOST_POPULAR_SCHEMES_BY_ABSOLUTEURI>();
			}
		}
		
		public System.Data.Linq.Table<EmailAddresses_MOST_POPULAR_SCHEMES_BY_DOMAIN> EmailAddresses_MOST_POPULAR_SCHEMES_BY_DOMAINs
		{
			get
			{
				return this.GetTable<EmailAddresses_MOST_POPULAR_SCHEMES_BY_DOMAIN>();
			}
		}
		
		public System.Data.Linq.Table<EmailAddresses_MOST_POPULAR_SCHEMES_BY_EXTENSION> EmailAddresses_MOST_POPULAR_SCHEMES_BY_EXTENSIONs
		{
			get
			{
				return this.GetTable<EmailAddresses_MOST_POPULAR_SCHEMES_BY_EXTENSION>();
			}
		}
		
		public System.Data.Linq.Table<EmailAddresses_MOST_POPULAR_SCHEMES_BY_HOST> EmailAddresses_MOST_POPULAR_SCHEMES_BY_HOSTs
		{
			get
			{
				return this.GetTable<EmailAddresses_MOST_POPULAR_SCHEMES_BY_HOST>();
			}
		}
		
		public System.Data.Linq.Table<EmailAddresses_MOST_POPULAR_SCHEMES_BY_SCHEME> EmailAddresses_MOST_POPULAR_SCHEMES_BY_SCHEMEs
		{
			get
			{
				return this.GetTable<EmailAddresses_MOST_POPULAR_SCHEMES_BY_SCHEME>();
			}
		}
		
		public System.Data.Linq.Table<Exceptions_COUNT_BY_ABSOLUTEURI1> Exceptions_COUNT_BY_ABSOLUTEURI1s
		{
			get
			{
				return this.GetTable<Exceptions_COUNT_BY_ABSOLUTEURI1>();
			}
		}
		
		public System.Data.Linq.Table<Exceptions_COUNT_BY_ABSOLUTEURI2> Exceptions_COUNT_BY_ABSOLUTEURI2s
		{
			get
			{
				return this.GetTable<Exceptions_COUNT_BY_ABSOLUTEURI2>();
			}
		}
		
		public System.Data.Linq.Table<Exceptions_COUNT_BY_ABSOLUTEURI> Exceptions_COUNT_BY_ABSOLUTEURIs
		{
			get
			{
				return this.GetTable<Exceptions_COUNT_BY_ABSOLUTEURI>();
			}
		}
		
		public System.Data.Linq.Table<Exceptions_COUNT_BY_DOMAIN1> Exceptions_COUNT_BY_DOMAIN1s
		{
			get
			{
				return this.GetTable<Exceptions_COUNT_BY_DOMAIN1>();
			}
		}
		
		public System.Data.Linq.Table<Exceptions_COUNT_BY_DOMAIN2> Exceptions_COUNT_BY_DOMAIN2s
		{
			get
			{
				return this.GetTable<Exceptions_COUNT_BY_DOMAIN2>();
			}
		}
		
		public System.Data.Linq.Table<Exceptions_COUNT_BY_DOMAIN> Exceptions_COUNT_BY_DOMAINs
		{
			get
			{
				return this.GetTable<Exceptions_COUNT_BY_DOMAIN>();
			}
		}
		
		public System.Data.Linq.Table<Exceptions_COUNT_BY_EXTENSION1> Exceptions_COUNT_BY_EXTENSION1s
		{
			get
			{
				return this.GetTable<Exceptions_COUNT_BY_EXTENSION1>();
			}
		}
		
		public System.Data.Linq.Table<Exceptions_COUNT_BY_EXTENSION2> Exceptions_COUNT_BY_EXTENSION2s
		{
			get
			{
				return this.GetTable<Exceptions_COUNT_BY_EXTENSION2>();
			}
		}
		
		public System.Data.Linq.Table<Exceptions_COUNT_BY_EXTENSION> Exceptions_COUNT_BY_EXTENSIONs
		{
			get
			{
				return this.GetTable<Exceptions_COUNT_BY_EXTENSION>();
			}
		}
		
		public System.Data.Linq.Table<Exceptions_COUNT_BY_HOST1> Exceptions_COUNT_BY_HOST1s
		{
			get
			{
				return this.GetTable<Exceptions_COUNT_BY_HOST1>();
			}
		}
		
		public System.Data.Linq.Table<Exceptions_COUNT_BY_HOST2> Exceptions_COUNT_BY_HOST2s
		{
			get
			{
				return this.GetTable<Exceptions_COUNT_BY_HOST2>();
			}
		}
		
		public System.Data.Linq.Table<Exceptions_COUNT_BY_HOST> Exceptions_COUNT_BY_HOSTs
		{
			get
			{
				return this.GetTable<Exceptions_COUNT_BY_HOST>();
			}
		}
		
		public System.Data.Linq.Table<Exceptions_COUNT_BY_MESSAGE> Exceptions_COUNT_BY_MESSAGEs
		{
			get
			{
				return this.GetTable<Exceptions_COUNT_BY_MESSAGE>();
			}
		}
		
		public System.Data.Linq.Table<Exceptions_COUNT_BY_SCHEME1> Exceptions_COUNT_BY_SCHEME1s
		{
			get
			{
				return this.GetTable<Exceptions_COUNT_BY_SCHEME1>();
			}
		}
		
		public System.Data.Linq.Table<Exceptions_COUNT_BY_SCHEME2> Exceptions_COUNT_BY_SCHEME2s
		{
			get
			{
				return this.GetTable<Exceptions_COUNT_BY_SCHEME2>();
			}
		}
		
		public System.Data.Linq.Table<Exceptions_COUNT_BY_SCHEME> Exceptions_COUNT_BY_SCHEMEs
		{
			get
			{
				return this.GetTable<Exceptions_COUNT_BY_SCHEME>();
			}
		}
		
		public System.Data.Linq.Table<Exceptions_COUNT_BY_SOURCE> Exceptions_COUNT_BY_SOURCEs
		{
			get
			{
				return this.GetTable<Exceptions_COUNT_BY_SOURCE>();
			}
		}
		
		public System.Data.Linq.Table<Exceptions_COUNT_BY_STACKTRACE> Exceptions_COUNT_BY_STACKTRACEs
		{
			get
			{
				return this.GetTable<Exceptions_COUNT_BY_STACKTRACE>();
			}
		}
		
		public System.Data.Linq.Table<Files_COUNT_BY_ABSOLUTEURI> Files_COUNT_BY_ABSOLUTEURIs
		{
			get
			{
				return this.GetTable<Files_COUNT_BY_ABSOLUTEURI>();
			}
		}
		
		public System.Data.Linq.Table<Files_COUNT_BY_DOMAIN> Files_COUNT_BY_DOMAINs
		{
			get
			{
				return this.GetTable<Files_COUNT_BY_DOMAIN>();
			}
		}
		
		public System.Data.Linq.Table<Files_COUNT_BY_EXTENSION> Files_COUNT_BY_EXTENSIONs
		{
			get
			{
				return this.GetTable<Files_COUNT_BY_EXTENSION>();
			}
		}
		
		public System.Data.Linq.Table<Files_COUNT_BY_FULLTEXTINDEXTYPE> Files_COUNT_BY_FULLTEXTINDEXTYPEs
		{
			get
			{
				return this.GetTable<Files_COUNT_BY_FULLTEXTINDEXTYPE>();
			}
		}
		
		public System.Data.Linq.Table<Files_COUNT_BY_HOST> Files_COUNT_BY_HOSTs
		{
			get
			{
				return this.GetTable<Files_COUNT_BY_HOST>();
			}
		}
		
		public System.Data.Linq.Table<Files_COUNT_BY_SCHEME> Files_COUNT_BY_SCHEMEs
		{
			get
			{
				return this.GetTable<Files_COUNT_BY_SCHEME>();
			}
		}
		
		public System.Data.Linq.Table<Files_MOST_POPULAR_ABSOLUTEURIS_BY_ABSOLUTEURI> Files_MOST_POPULAR_ABSOLUTEURIS_BY_ABSOLUTEURIs
		{
			get
			{
				return this.GetTable<Files_MOST_POPULAR_ABSOLUTEURIS_BY_ABSOLUTEURI>();
			}
		}
		
		public System.Data.Linq.Table<Files_MOST_POPULAR_ABSOLUTEURIS_BY_DOMAIN> Files_MOST_POPULAR_ABSOLUTEURIS_BY_DOMAINs
		{
			get
			{
				return this.GetTable<Files_MOST_POPULAR_ABSOLUTEURIS_BY_DOMAIN>();
			}
		}
		
		public System.Data.Linq.Table<Files_MOST_POPULAR_ABSOLUTEURIS_BY_EXTENSION> Files_MOST_POPULAR_ABSOLUTEURIS_BY_EXTENSIONs
		{
			get
			{
				return this.GetTable<Files_MOST_POPULAR_ABSOLUTEURIS_BY_EXTENSION>();
			}
		}
		
		public System.Data.Linq.Table<Files_MOST_POPULAR_ABSOLUTEURIS_BY_HOST> Files_MOST_POPULAR_ABSOLUTEURIS_BY_HOSTs
		{
			get
			{
				return this.GetTable<Files_MOST_POPULAR_ABSOLUTEURIS_BY_HOST>();
			}
		}
		
		public System.Data.Linq.Table<Files_MOST_POPULAR_ABSOLUTEURIS_BY_SCHEME> Files_MOST_POPULAR_ABSOLUTEURIS_BY_SCHEMEs
		{
			get
			{
				return this.GetTable<Files_MOST_POPULAR_ABSOLUTEURIS_BY_SCHEME>();
			}
		}
		
		public System.Data.Linq.Table<Files_MOST_POPULAR_DOMAINS_BY_ABSOLUTEURI> Files_MOST_POPULAR_DOMAINS_BY_ABSOLUTEURIs
		{
			get
			{
				return this.GetTable<Files_MOST_POPULAR_DOMAINS_BY_ABSOLUTEURI>();
			}
		}
		
		public System.Data.Linq.Table<Files_MOST_POPULAR_DOMAINS_BY_DOMAIN> Files_MOST_POPULAR_DOMAINS_BY_DOMAINs
		{
			get
			{
				return this.GetTable<Files_MOST_POPULAR_DOMAINS_BY_DOMAIN>();
			}
		}
		
		public System.Data.Linq.Table<Files_MOST_POPULAR_DOMAINS_BY_EXTENSION> Files_MOST_POPULAR_DOMAINS_BY_EXTENSIONs
		{
			get
			{
				return this.GetTable<Files_MOST_POPULAR_DOMAINS_BY_EXTENSION>();
			}
		}
		
		public System.Data.Linq.Table<Files_MOST_POPULAR_DOMAINS_BY_HOST> Files_MOST_POPULAR_DOMAINS_BY_HOSTs
		{
			get
			{
				return this.GetTable<Files_MOST_POPULAR_DOMAINS_BY_HOST>();
			}
		}
		
		public System.Data.Linq.Table<Files_MOST_POPULAR_DOMAINS_BY_SCHEME> Files_MOST_POPULAR_DOMAINS_BY_SCHEMEs
		{
			get
			{
				return this.GetTable<Files_MOST_POPULAR_DOMAINS_BY_SCHEME>();
			}
		}
		
		public System.Data.Linq.Table<Files_MOST_POPULAR_EXTENSIONS_BY_ABSOLUTEURI> Files_MOST_POPULAR_EXTENSIONS_BY_ABSOLUTEURIs
		{
			get
			{
				return this.GetTable<Files_MOST_POPULAR_EXTENSIONS_BY_ABSOLUTEURI>();
			}
		}
		
		public System.Data.Linq.Table<Files_MOST_POPULAR_EXTENSIONS_BY_DOMAIN> Files_MOST_POPULAR_EXTENSIONS_BY_DOMAINs
		{
			get
			{
				return this.GetTable<Files_MOST_POPULAR_EXTENSIONS_BY_DOMAIN>();
			}
		}
		
		public System.Data.Linq.Table<Files_MOST_POPULAR_EXTENSIONS_BY_EXTENSION> Files_MOST_POPULAR_EXTENSIONS_BY_EXTENSIONs
		{
			get
			{
				return this.GetTable<Files_MOST_POPULAR_EXTENSIONS_BY_EXTENSION>();
			}
		}
		
		public System.Data.Linq.Table<Files_MOST_POPULAR_EXTENSIONS_BY_HOST> Files_MOST_POPULAR_EXTENSIONS_BY_HOSTs
		{
			get
			{
				return this.GetTable<Files_MOST_POPULAR_EXTENSIONS_BY_HOST>();
			}
		}
		
		public System.Data.Linq.Table<Files_MOST_POPULAR_EXTENSIONS_BY_SCHEME> Files_MOST_POPULAR_EXTENSIONS_BY_SCHEMEs
		{
			get
			{
				return this.GetTable<Files_MOST_POPULAR_EXTENSIONS_BY_SCHEME>();
			}
		}
		
		public System.Data.Linq.Table<Files_MOST_POPULAR_HOSTS_BY_ABSOLUTEURI> Files_MOST_POPULAR_HOSTS_BY_ABSOLUTEURIs
		{
			get
			{
				return this.GetTable<Files_MOST_POPULAR_HOSTS_BY_ABSOLUTEURI>();
			}
		}
		
		public System.Data.Linq.Table<Files_MOST_POPULAR_HOSTS_BY_DOMAIN> Files_MOST_POPULAR_HOSTS_BY_DOMAINs
		{
			get
			{
				return this.GetTable<Files_MOST_POPULAR_HOSTS_BY_DOMAIN>();
			}
		}
		
		public System.Data.Linq.Table<Files_MOST_POPULAR_HOSTS_BY_EXTENSION> Files_MOST_POPULAR_HOSTS_BY_EXTENSIONs
		{
			get
			{
				return this.GetTable<Files_MOST_POPULAR_HOSTS_BY_EXTENSION>();
			}
		}
		
		public System.Data.Linq.Table<Files_MOST_POPULAR_HOSTS_BY_HOST> Files_MOST_POPULAR_HOSTS_BY_HOSTs
		{
			get
			{
				return this.GetTable<Files_MOST_POPULAR_HOSTS_BY_HOST>();
			}
		}
		
		public System.Data.Linq.Table<Files_MOST_POPULAR_HOSTS_BY_SCHEME> Files_MOST_POPULAR_HOSTS_BY_SCHEMEs
		{
			get
			{
				return this.GetTable<Files_MOST_POPULAR_HOSTS_BY_SCHEME>();
			}
		}
		
		public System.Data.Linq.Table<Files_MOST_POPULAR_SCHEMES_BY_ABSOLUTEURI> Files_MOST_POPULAR_SCHEMES_BY_ABSOLUTEURIs
		{
			get
			{
				return this.GetTable<Files_MOST_POPULAR_SCHEMES_BY_ABSOLUTEURI>();
			}
		}
		
		public System.Data.Linq.Table<Files_MOST_POPULAR_SCHEMES_BY_DOMAIN> Files_MOST_POPULAR_SCHEMES_BY_DOMAINs
		{
			get
			{
				return this.GetTable<Files_MOST_POPULAR_SCHEMES_BY_DOMAIN>();
			}
		}
		
		public System.Data.Linq.Table<Files_MOST_POPULAR_SCHEMES_BY_EXTENSION> Files_MOST_POPULAR_SCHEMES_BY_EXTENSIONs
		{
			get
			{
				return this.GetTable<Files_MOST_POPULAR_SCHEMES_BY_EXTENSION>();
			}
		}
		
		public System.Data.Linq.Table<Files_MOST_POPULAR_SCHEMES_BY_HOST> Files_MOST_POPULAR_SCHEMES_BY_HOSTs
		{
			get
			{
				return this.GetTable<Files_MOST_POPULAR_SCHEMES_BY_HOST>();
			}
		}
		
		public System.Data.Linq.Table<Files_MOST_POPULAR_SCHEMES_BY_SCHEME> Files_MOST_POPULAR_SCHEMES_BY_SCHEMEs
		{
			get
			{
				return this.GetTable<Files_MOST_POPULAR_SCHEMES_BY_SCHEME>();
			}
		}
		
		public System.Data.Linq.Table<HyperLinks_COUNT_BY_ABSOLUTEURI> HyperLinks_COUNT_BY_ABSOLUTEURIs
		{
			get
			{
				return this.GetTable<HyperLinks_COUNT_BY_ABSOLUTEURI>();
			}
		}
		
		public System.Data.Linq.Table<HyperLinks_COUNT_BY_DOMAIN> HyperLinks_COUNT_BY_DOMAINs
		{
			get
			{
				return this.GetTable<HyperLinks_COUNT_BY_DOMAIN>();
			}
		}
		
		public System.Data.Linq.Table<HyperLinks_COUNT_BY_EXTENSION> HyperLinks_COUNT_BY_EXTENSIONs
		{
			get
			{
				return this.GetTable<HyperLinks_COUNT_BY_EXTENSION>();
			}
		}
		
		public System.Data.Linq.Table<HyperLinks_COUNT_BY_HOST> HyperLinks_COUNT_BY_HOSTs
		{
			get
			{
				return this.GetTable<HyperLinks_COUNT_BY_HOST>();
			}
		}
		
		public System.Data.Linq.Table<HyperLinks_COUNT_BY_SCHEME> HyperLinks_COUNT_BY_SCHEMEs
		{
			get
			{
				return this.GetTable<HyperLinks_COUNT_BY_SCHEME>();
			}
		}
		
		public System.Data.Linq.Table<HyperLinks_MOST_POPULAR_ABSOLUTEURIS_BY_ABSOLUTEURI> HyperLinks_MOST_POPULAR_ABSOLUTEURIS_BY_ABSOLUTEURIs
		{
			get
			{
				return this.GetTable<HyperLinks_MOST_POPULAR_ABSOLUTEURIS_BY_ABSOLUTEURI>();
			}
		}
		
		public System.Data.Linq.Table<HyperLinks_MOST_POPULAR_ABSOLUTEURIS_BY_DOMAIN> HyperLinks_MOST_POPULAR_ABSOLUTEURIS_BY_DOMAINs
		{
			get
			{
				return this.GetTable<HyperLinks_MOST_POPULAR_ABSOLUTEURIS_BY_DOMAIN>();
			}
		}
		
		public System.Data.Linq.Table<HyperLinks_MOST_POPULAR_ABSOLUTEURIS_BY_EXTENSION> HyperLinks_MOST_POPULAR_ABSOLUTEURIS_BY_EXTENSIONs
		{
			get
			{
				return this.GetTable<HyperLinks_MOST_POPULAR_ABSOLUTEURIS_BY_EXTENSION>();
			}
		}
		
		public System.Data.Linq.Table<HyperLinks_MOST_POPULAR_ABSOLUTEURIS_BY_HOST> HyperLinks_MOST_POPULAR_ABSOLUTEURIS_BY_HOSTs
		{
			get
			{
				return this.GetTable<HyperLinks_MOST_POPULAR_ABSOLUTEURIS_BY_HOST>();
			}
		}
		
		public System.Data.Linq.Table<HyperLinks_MOST_POPULAR_ABSOLUTEURIS_BY_SCHEME> HyperLinks_MOST_POPULAR_ABSOLUTEURIS_BY_SCHEMEs
		{
			get
			{
				return this.GetTable<HyperLinks_MOST_POPULAR_ABSOLUTEURIS_BY_SCHEME>();
			}
		}
		
		public System.Data.Linq.Table<HyperLinks_MOST_POPULAR_DOMAINS_BY_ABSOLUTEURI> HyperLinks_MOST_POPULAR_DOMAINS_BY_ABSOLUTEURIs
		{
			get
			{
				return this.GetTable<HyperLinks_MOST_POPULAR_DOMAINS_BY_ABSOLUTEURI>();
			}
		}
		
		public System.Data.Linq.Table<HyperLinks_MOST_POPULAR_DOMAINS_BY_DOMAIN> HyperLinks_MOST_POPULAR_DOMAINS_BY_DOMAINs
		{
			get
			{
				return this.GetTable<HyperLinks_MOST_POPULAR_DOMAINS_BY_DOMAIN>();
			}
		}
		
		public System.Data.Linq.Table<HyperLinks_MOST_POPULAR_DOMAINS_BY_EXTENSION> HyperLinks_MOST_POPULAR_DOMAINS_BY_EXTENSIONs
		{
			get
			{
				return this.GetTable<HyperLinks_MOST_POPULAR_DOMAINS_BY_EXTENSION>();
			}
		}
		
		public System.Data.Linq.Table<HyperLinks_MOST_POPULAR_DOMAINS_BY_HOST> HyperLinks_MOST_POPULAR_DOMAINS_BY_HOSTs
		{
			get
			{
				return this.GetTable<HyperLinks_MOST_POPULAR_DOMAINS_BY_HOST>();
			}
		}
		
		public System.Data.Linq.Table<HyperLinks_MOST_POPULAR_DOMAINS_BY_SCHEME> HyperLinks_MOST_POPULAR_DOMAINS_BY_SCHEMEs
		{
			get
			{
				return this.GetTable<HyperLinks_MOST_POPULAR_DOMAINS_BY_SCHEME>();
			}
		}
		
		public System.Data.Linq.Table<HyperLinks_MOST_POPULAR_EXTENSIONS_BY_ABSOLUTEURI> HyperLinks_MOST_POPULAR_EXTENSIONS_BY_ABSOLUTEURIs
		{
			get
			{
				return this.GetTable<HyperLinks_MOST_POPULAR_EXTENSIONS_BY_ABSOLUTEURI>();
			}
		}
		
		public System.Data.Linq.Table<HyperLinks_MOST_POPULAR_EXTENSIONS_BY_DOMAIN> HyperLinks_MOST_POPULAR_EXTENSIONS_BY_DOMAINs
		{
			get
			{
				return this.GetTable<HyperLinks_MOST_POPULAR_EXTENSIONS_BY_DOMAIN>();
			}
		}
		
		public System.Data.Linq.Table<HyperLinks_MOST_POPULAR_EXTENSIONS_BY_EXTENSION> HyperLinks_MOST_POPULAR_EXTENSIONS_BY_EXTENSIONs
		{
			get
			{
				return this.GetTable<HyperLinks_MOST_POPULAR_EXTENSIONS_BY_EXTENSION>();
			}
		}
		
		public System.Data.Linq.Table<HyperLinks_MOST_POPULAR_EXTENSIONS_BY_HOST> HyperLinks_MOST_POPULAR_EXTENSIONS_BY_HOSTs
		{
			get
			{
				return this.GetTable<HyperLinks_MOST_POPULAR_EXTENSIONS_BY_HOST>();
			}
		}
		
		public System.Data.Linq.Table<HyperLinks_MOST_POPULAR_EXTENSIONS_BY_SCHEME> HyperLinks_MOST_POPULAR_EXTENSIONS_BY_SCHEMEs
		{
			get
			{
				return this.GetTable<HyperLinks_MOST_POPULAR_EXTENSIONS_BY_SCHEME>();
			}
		}
		
		public System.Data.Linq.Table<HyperLinks_MOST_POPULAR_HOSTS_BY_ABSOLUTEURI> HyperLinks_MOST_POPULAR_HOSTS_BY_ABSOLUTEURIs
		{
			get
			{
				return this.GetTable<HyperLinks_MOST_POPULAR_HOSTS_BY_ABSOLUTEURI>();
			}
		}
		
		public System.Data.Linq.Table<HyperLinks_MOST_POPULAR_HOSTS_BY_DOMAIN> HyperLinks_MOST_POPULAR_HOSTS_BY_DOMAINs
		{
			get
			{
				return this.GetTable<HyperLinks_MOST_POPULAR_HOSTS_BY_DOMAIN>();
			}
		}
		
		public System.Data.Linq.Table<HyperLinks_MOST_POPULAR_HOSTS_BY_EXTENSION> HyperLinks_MOST_POPULAR_HOSTS_BY_EXTENSIONs
		{
			get
			{
				return this.GetTable<HyperLinks_MOST_POPULAR_HOSTS_BY_EXTENSION>();
			}
		}
		
		public System.Data.Linq.Table<HyperLinks_MOST_POPULAR_HOSTS_BY_HOST> HyperLinks_MOST_POPULAR_HOSTS_BY_HOSTs
		{
			get
			{
				return this.GetTable<HyperLinks_MOST_POPULAR_HOSTS_BY_HOST>();
			}
		}
		
		public System.Data.Linq.Table<HyperLinks_MOST_POPULAR_HOSTS_BY_SCHEME> HyperLinks_MOST_POPULAR_HOSTS_BY_SCHEMEs
		{
			get
			{
				return this.GetTable<HyperLinks_MOST_POPULAR_HOSTS_BY_SCHEME>();
			}
		}
		
		public System.Data.Linq.Table<HyperLinks_MOST_POPULAR_SCHEMES_BY_ABSOLUTEURI> HyperLinks_MOST_POPULAR_SCHEMES_BY_ABSOLUTEURIs
		{
			get
			{
				return this.GetTable<HyperLinks_MOST_POPULAR_SCHEMES_BY_ABSOLUTEURI>();
			}
		}
		
		public System.Data.Linq.Table<HyperLinks_MOST_POPULAR_SCHEMES_BY_DOMAIN> HyperLinks_MOST_POPULAR_SCHEMES_BY_DOMAINs
		{
			get
			{
				return this.GetTable<HyperLinks_MOST_POPULAR_SCHEMES_BY_DOMAIN>();
			}
		}
		
		public System.Data.Linq.Table<HyperLinks_MOST_POPULAR_SCHEMES_BY_EXTENSION> HyperLinks_MOST_POPULAR_SCHEMES_BY_EXTENSIONs
		{
			get
			{
				return this.GetTable<HyperLinks_MOST_POPULAR_SCHEMES_BY_EXTENSION>();
			}
		}
		
		public System.Data.Linq.Table<HyperLinks_MOST_POPULAR_SCHEMES_BY_HOST> HyperLinks_MOST_POPULAR_SCHEMES_BY_HOSTs
		{
			get
			{
				return this.GetTable<HyperLinks_MOST_POPULAR_SCHEMES_BY_HOST>();
			}
		}
		
		public System.Data.Linq.Table<HyperLinks_MOST_POPULAR_SCHEMES_BY_SCHEME> HyperLinks_MOST_POPULAR_SCHEMES_BY_SCHEMEs
		{
			get
			{
				return this.GetTable<HyperLinks_MOST_POPULAR_SCHEMES_BY_SCHEME>();
			}
		}
		
		public System.Data.Linq.Table<Images_COUNT_BY_ABSOLUTEURI> Images_COUNT_BY_ABSOLUTEURIs
		{
			get
			{
				return this.GetTable<Images_COUNT_BY_ABSOLUTEURI>();
			}
		}
		
		public System.Data.Linq.Table<Images_COUNT_BY_DOMAIN> Images_COUNT_BY_DOMAINs
		{
			get
			{
				return this.GetTable<Images_COUNT_BY_DOMAIN>();
			}
		}
		
		public System.Data.Linq.Table<Images_COUNT_BY_EXTENSION> Images_COUNT_BY_EXTENSIONs
		{
			get
			{
				return this.GetTable<Images_COUNT_BY_EXTENSION>();
			}
		}
		
		public System.Data.Linq.Table<Images_COUNT_BY_FULLTEXTINDEXTYPE> Images_COUNT_BY_FULLTEXTINDEXTYPEs
		{
			get
			{
				return this.GetTable<Images_COUNT_BY_FULLTEXTINDEXTYPE>();
			}
		}
		
		public System.Data.Linq.Table<Images_COUNT_BY_HOST> Images_COUNT_BY_HOSTs
		{
			get
			{
				return this.GetTable<Images_COUNT_BY_HOST>();
			}
		}
		
		public System.Data.Linq.Table<Images_COUNT_BY_SCHEME> Images_COUNT_BY_SCHEMEs
		{
			get
			{
				return this.GetTable<Images_COUNT_BY_SCHEME>();
			}
		}
		
		public System.Data.Linq.Table<Images_MOST_POPULAR_ABSOLUTEURIS_BY_ABSOLUTEURI> Images_MOST_POPULAR_ABSOLUTEURIS_BY_ABSOLUTEURIs
		{
			get
			{
				return this.GetTable<Images_MOST_POPULAR_ABSOLUTEURIS_BY_ABSOLUTEURI>();
			}
		}
		
		public System.Data.Linq.Table<Images_MOST_POPULAR_ABSOLUTEURIS_BY_DOMAIN> Images_MOST_POPULAR_ABSOLUTEURIS_BY_DOMAINs
		{
			get
			{
				return this.GetTable<Images_MOST_POPULAR_ABSOLUTEURIS_BY_DOMAIN>();
			}
		}
		
		public System.Data.Linq.Table<Images_MOST_POPULAR_ABSOLUTEURIS_BY_EXTENSION> Images_MOST_POPULAR_ABSOLUTEURIS_BY_EXTENSIONs
		{
			get
			{
				return this.GetTable<Images_MOST_POPULAR_ABSOLUTEURIS_BY_EXTENSION>();
			}
		}
		
		public System.Data.Linq.Table<Images_MOST_POPULAR_ABSOLUTEURIS_BY_HOST> Images_MOST_POPULAR_ABSOLUTEURIS_BY_HOSTs
		{
			get
			{
				return this.GetTable<Images_MOST_POPULAR_ABSOLUTEURIS_BY_HOST>();
			}
		}
		
		public System.Data.Linq.Table<Images_MOST_POPULAR_ABSOLUTEURIS_BY_SCHEME> Images_MOST_POPULAR_ABSOLUTEURIS_BY_SCHEMEs
		{
			get
			{
				return this.GetTable<Images_MOST_POPULAR_ABSOLUTEURIS_BY_SCHEME>();
			}
		}
		
		public System.Data.Linq.Table<Images_MOST_POPULAR_DOMAINS_BY_ABSOLUTEURI> Images_MOST_POPULAR_DOMAINS_BY_ABSOLUTEURIs
		{
			get
			{
				return this.GetTable<Images_MOST_POPULAR_DOMAINS_BY_ABSOLUTEURI>();
			}
		}
		
		public System.Data.Linq.Table<Images_MOST_POPULAR_DOMAINS_BY_DOMAIN> Images_MOST_POPULAR_DOMAINS_BY_DOMAINs
		{
			get
			{
				return this.GetTable<Images_MOST_POPULAR_DOMAINS_BY_DOMAIN>();
			}
		}
		
		public System.Data.Linq.Table<Images_MOST_POPULAR_DOMAINS_BY_EXTENSION> Images_MOST_POPULAR_DOMAINS_BY_EXTENSIONs
		{
			get
			{
				return this.GetTable<Images_MOST_POPULAR_DOMAINS_BY_EXTENSION>();
			}
		}
		
		public System.Data.Linq.Table<Images_MOST_POPULAR_DOMAINS_BY_HOST> Images_MOST_POPULAR_DOMAINS_BY_HOSTs
		{
			get
			{
				return this.GetTable<Images_MOST_POPULAR_DOMAINS_BY_HOST>();
			}
		}
		
		public System.Data.Linq.Table<Images_MOST_POPULAR_DOMAINS_BY_SCHEME> Images_MOST_POPULAR_DOMAINS_BY_SCHEMEs
		{
			get
			{
				return this.GetTable<Images_MOST_POPULAR_DOMAINS_BY_SCHEME>();
			}
		}
		
		public System.Data.Linq.Table<Images_MOST_POPULAR_EXTENSIONS_BY_ABSOLUTEURI> Images_MOST_POPULAR_EXTENSIONS_BY_ABSOLUTEURIs
		{
			get
			{
				return this.GetTable<Images_MOST_POPULAR_EXTENSIONS_BY_ABSOLUTEURI>();
			}
		}
		
		public System.Data.Linq.Table<Images_MOST_POPULAR_EXTENSIONS_BY_DOMAIN> Images_MOST_POPULAR_EXTENSIONS_BY_DOMAINs
		{
			get
			{
				return this.GetTable<Images_MOST_POPULAR_EXTENSIONS_BY_DOMAIN>();
			}
		}
		
		public System.Data.Linq.Table<Images_MOST_POPULAR_EXTENSIONS_BY_EXTENSION> Images_MOST_POPULAR_EXTENSIONS_BY_EXTENSIONs
		{
			get
			{
				return this.GetTable<Images_MOST_POPULAR_EXTENSIONS_BY_EXTENSION>();
			}
		}
		
		public System.Data.Linq.Table<Images_MOST_POPULAR_EXTENSIONS_BY_HOST> Images_MOST_POPULAR_EXTENSIONS_BY_HOSTs
		{
			get
			{
				return this.GetTable<Images_MOST_POPULAR_EXTENSIONS_BY_HOST>();
			}
		}
		
		public System.Data.Linq.Table<Images_MOST_POPULAR_EXTENSIONS_BY_SCHEME> Images_MOST_POPULAR_EXTENSIONS_BY_SCHEMEs
		{
			get
			{
				return this.GetTable<Images_MOST_POPULAR_EXTENSIONS_BY_SCHEME>();
			}
		}
		
		public System.Data.Linq.Table<Images_MOST_POPULAR_HOSTS_BY_ABSOLUTEURI> Images_MOST_POPULAR_HOSTS_BY_ABSOLUTEURIs
		{
			get
			{
				return this.GetTable<Images_MOST_POPULAR_HOSTS_BY_ABSOLUTEURI>();
			}
		}
		
		public System.Data.Linq.Table<Images_MOST_POPULAR_HOSTS_BY_DOMAIN> Images_MOST_POPULAR_HOSTS_BY_DOMAINs
		{
			get
			{
				return this.GetTable<Images_MOST_POPULAR_HOSTS_BY_DOMAIN>();
			}
		}
		
		public System.Data.Linq.Table<Images_MOST_POPULAR_HOSTS_BY_EXTENSION> Images_MOST_POPULAR_HOSTS_BY_EXTENSIONs
		{
			get
			{
				return this.GetTable<Images_MOST_POPULAR_HOSTS_BY_EXTENSION>();
			}
		}
		
		public System.Data.Linq.Table<Images_MOST_POPULAR_HOSTS_BY_HOST> Images_MOST_POPULAR_HOSTS_BY_HOSTs
		{
			get
			{
				return this.GetTable<Images_MOST_POPULAR_HOSTS_BY_HOST>();
			}
		}
		
		public System.Data.Linq.Table<Images_MOST_POPULAR_HOSTS_BY_SCHEME> Images_MOST_POPULAR_HOSTS_BY_SCHEMEs
		{
			get
			{
				return this.GetTable<Images_MOST_POPULAR_HOSTS_BY_SCHEME>();
			}
		}
		
		public System.Data.Linq.Table<Images_MOST_POPULAR_SCHEMES_BY_ABSOLUTEURI> Images_MOST_POPULAR_SCHEMES_BY_ABSOLUTEURIs
		{
			get
			{
				return this.GetTable<Images_MOST_POPULAR_SCHEMES_BY_ABSOLUTEURI>();
			}
		}
		
		public System.Data.Linq.Table<Images_MOST_POPULAR_SCHEMES_BY_DOMAIN> Images_MOST_POPULAR_SCHEMES_BY_DOMAINs
		{
			get
			{
				return this.GetTable<Images_MOST_POPULAR_SCHEMES_BY_DOMAIN>();
			}
		}
		
		public System.Data.Linq.Table<Images_MOST_POPULAR_SCHEMES_BY_EXTENSION> Images_MOST_POPULAR_SCHEMES_BY_EXTENSIONs
		{
			get
			{
				return this.GetTable<Images_MOST_POPULAR_SCHEMES_BY_EXTENSION>();
			}
		}
		
		public System.Data.Linq.Table<Images_MOST_POPULAR_SCHEMES_BY_HOST> Images_MOST_POPULAR_SCHEMES_BY_HOSTs
		{
			get
			{
				return this.GetTable<Images_MOST_POPULAR_SCHEMES_BY_HOST>();
			}
		}
		
		public System.Data.Linq.Table<Images_MOST_POPULAR_SCHEMES_BY_SCHEME> Images_MOST_POPULAR_SCHEMES_BY_SCHEMEs
		{
			get
			{
				return this.GetTable<Images_MOST_POPULAR_SCHEMES_BY_SCHEME>();
			}
		}
		
		public System.Data.Linq.Table<WebPages_COUNT_BY_DOMAIN> WebPages_COUNT_BY_DOMAINs
		{
			get
			{
				return this.GetTable<WebPages_COUNT_BY_DOMAIN>();
			}
		}
		
		public System.Data.Linq.Table<WebPages_COUNT_BY_EXTENSION> WebPages_COUNT_BY_EXTENSIONs
		{
			get
			{
				return this.GetTable<WebPages_COUNT_BY_EXTENSION>();
			}
		}
		
		public System.Data.Linq.Table<WebPages_COUNT_BY_FULLTEXTINDEXTYPE> WebPages_COUNT_BY_FULLTEXTINDEXTYPEs
		{
			get
			{
				return this.GetTable<WebPages_COUNT_BY_FULLTEXTINDEXTYPE>();
			}
		}
		
		public System.Data.Linq.Table<WebPages_COUNT_BY_HOST> WebPages_COUNT_BY_HOSTs
		{
			get
			{
				return this.GetTable<WebPages_COUNT_BY_HOST>();
			}
		}
		
		public System.Data.Linq.Table<arachnode_rvw_DisallowedAbsoluteUris_COUNT_BY_ABSOLUTEURI> arachnode_rvw_DisallowedAbsoluteUris_COUNT_BY_ABSOLUTEURIs
		{
			get
			{
				return this.GetTable<arachnode_rvw_DisallowedAbsoluteUris_COUNT_BY_ABSOLUTEURI>();
			}
		}
		
		public System.Data.Linq.Table<arachnode_rvw_WebPagesWithoutSchemes_Discovery> arachnode_rvw_WebPagesWithoutSchemes_Discoveries
		{
			get
			{
				return this.GetTable<arachnode_rvw_WebPagesWithoutSchemes_Discovery>();
			}
		}
		
		public System.Data.Linq.Table<arachnode_rvw_DisallowedAbsoluteUris_COUNT_BY_DOMAIN> arachnode_rvw_DisallowedAbsoluteUris_COUNT_BY_DOMAINs
		{
			get
			{
				return this.GetTable<arachnode_rvw_DisallowedAbsoluteUris_COUNT_BY_DOMAIN>();
			}
		}
		
		public System.Data.Linq.Table<arachnode_rvw_DisallowedAbsoluteUris_COUNT_BY_EXTENSION> arachnode_rvw_DisallowedAbsoluteUris_COUNT_BY_EXTENSIONs
		{
			get
			{
				return this.GetTable<arachnode_rvw_DisallowedAbsoluteUris_COUNT_BY_EXTENSION>();
			}
		}
		
		public System.Data.Linq.Table<arachnode_rvw_DisallowedAbsoluteUris_COUNT_BY_HOST> arachnode_rvw_DisallowedAbsoluteUris_COUNT_BY_HOSTs
		{
			get
			{
				return this.GetTable<arachnode_rvw_DisallowedAbsoluteUris_COUNT_BY_HOST>();
			}
		}
		
		public System.Data.Linq.Table<arachnode_rvw_DisallowedAbsoluteUris_COUNT_BY_SCHEME> arachnode_rvw_DisallowedAbsoluteUris_COUNT_BY_SCHEMEs
		{
			get
			{
				return this.GetTable<arachnode_rvw_DisallowedAbsoluteUris_COUNT_BY_SCHEME>();
			}
		}
		
		public System.Data.Linq.Table<arachnode_rvw_DisallowedAbsoluteUris_COUNT_NEW_BY_DATE> arachnode_rvw_DisallowedAbsoluteUris_COUNT_NEW_BY_DATEs
		{
			get
			{
				return this.GetTable<arachnode_rvw_DisallowedAbsoluteUris_COUNT_NEW_BY_DATE>();
			}
		}
		
		public System.Data.Linq.Table<arachnode_rvw_Domains_ALL> arachnode_rvw_Domains_ALLs
		{
			get
			{
				return this.GetTable<arachnode_rvw_Domains_ALL>();
			}
		}
		
		public System.Data.Linq.Table<arachnode_rvw_Domains_Extensions_Hosts_Discoveries_ALL> arachnode_rvw_Domains_Extensions_Hosts_Discoveries_ALLs
		{
			get
			{
				return this.GetTable<arachnode_rvw_Domains_Extensions_Hosts_Discoveries_ALL>();
			}
		}
		
		public System.Data.Linq.Table<arachnode_rvw_Domains_NEW> arachnode_rvw_Domains_NEWs
		{
			get
			{
				return this.GetTable<arachnode_rvw_Domains_NEW>();
			}
		}
		
		public System.Data.Linq.Table<arachnode_rvw_EmailAddresses_COUNT_BY_ABSOLUTEURI> arachnode_rvw_EmailAddresses_COUNT_BY_ABSOLUTEURIs
		{
			get
			{
				return this.GetTable<arachnode_rvw_EmailAddresses_COUNT_BY_ABSOLUTEURI>();
			}
		}
		
		public System.Data.Linq.Table<arachnode_rvw_EmailAddresses_COUNT_BY_DOMAIN> arachnode_rvw_EmailAddresses_COUNT_BY_DOMAINs
		{
			get
			{
				return this.GetTable<arachnode_rvw_EmailAddresses_COUNT_BY_DOMAIN>();
			}
		}
		
		public System.Data.Linq.Table<arachnode_rvw_EmailAddresses_COUNT_BY_EXTENSION> arachnode_rvw_EmailAddresses_COUNT_BY_EXTENSIONs
		{
			get
			{
				return this.GetTable<arachnode_rvw_EmailAddresses_COUNT_BY_EXTENSION>();
			}
		}
		
		public System.Data.Linq.Table<arachnode_rvw_EmailAddresses_COUNT_BY_HOST> arachnode_rvw_EmailAddresses_COUNT_BY_HOSTs
		{
			get
			{
				return this.GetTable<arachnode_rvw_EmailAddresses_COUNT_BY_HOST>();
			}
		}
		
		public System.Data.Linq.Table<arachnode_rvw_EmailAddresses_COUNT_BY_SCHEME> arachnode_rvw_EmailAddresses_COUNT_BY_SCHEMEs
		{
			get
			{
				return this.GetTable<arachnode_rvw_EmailAddresses_COUNT_BY_SCHEME>();
			}
		}
		
		public System.Data.Linq.Table<arachnode_rvw_EmailAddresses_COUNT_NEW_BY_DATE> arachnode_rvw_EmailAddresses_COUNT_NEW_BY_DATEs
		{
			get
			{
				return this.GetTable<arachnode_rvw_EmailAddresses_COUNT_NEW_BY_DATE>();
			}
		}
		
		public System.Data.Linq.Table<arachnode_rvw_EmailAddressesWithoutDiscovery> arachnode_rvw_EmailAddressesWithoutDiscoveries
		{
			get
			{
				return this.GetTable<arachnode_rvw_EmailAddressesWithoutDiscovery>();
			}
		}
		
		public System.Data.Linq.Table<arachnode_rvw_EmailAddressesWithoutHosts_Discovery> arachnode_rvw_EmailAddressesWithoutHosts_Discoveries
		{
			get
			{
				return this.GetTable<arachnode_rvw_EmailAddressesWithoutHosts_Discovery>();
			}
		}
		
		public System.Data.Linq.Table<arachnode_rvw_EmailAddressesWithoutSchemes_Discovery> arachnode_rvw_EmailAddressesWithoutSchemes_Discoveries
		{
			get
			{
				return this.GetTable<arachnode_rvw_EmailAddressesWithoutSchemes_Discovery>();
			}
		}
		
		public System.Data.Linq.Table<arachnode_rvw_Exceptions_COUNT_BY_ABSOLUTEURI1> arachnode_rvw_Exceptions_COUNT_BY_ABSOLUTEURI1s
		{
			get
			{
				return this.GetTable<arachnode_rvw_Exceptions_COUNT_BY_ABSOLUTEURI1>();
			}
		}
		
		public System.Data.Linq.Table<arachnode_rvw_Exceptions_COUNT_BY_ABSOLUTEURI2> arachnode_rvw_Exceptions_COUNT_BY_ABSOLUTEURI2s
		{
			get
			{
				return this.GetTable<arachnode_rvw_Exceptions_COUNT_BY_ABSOLUTEURI2>();
			}
		}
		
		public System.Data.Linq.Table<arachnode_rvw_Exceptions_COUNT_BY_ABSOLUTEURI> arachnode_rvw_Exceptions_COUNT_BY_ABSOLUTEURIs
		{
			get
			{
				return this.GetTable<arachnode_rvw_Exceptions_COUNT_BY_ABSOLUTEURI>();
			}
		}
		
		public System.Data.Linq.Table<arachnode_rvw_Exceptions_COUNT_BY_DOMAIN1> arachnode_rvw_Exceptions_COUNT_BY_DOMAIN1s
		{
			get
			{
				return this.GetTable<arachnode_rvw_Exceptions_COUNT_BY_DOMAIN1>();
			}
		}
		
		public System.Data.Linq.Table<arachnode_rvw_Exceptions_COUNT_BY_DOMAIN2> arachnode_rvw_Exceptions_COUNT_BY_DOMAIN2s
		{
			get
			{
				return this.GetTable<arachnode_rvw_Exceptions_COUNT_BY_DOMAIN2>();
			}
		}
		
		public System.Data.Linq.Table<arachnode_rvw_Exceptions_COUNT_BY_DOMAIN> arachnode_rvw_Exceptions_COUNT_BY_DOMAINs
		{
			get
			{
				return this.GetTable<arachnode_rvw_Exceptions_COUNT_BY_DOMAIN>();
			}
		}
		
		public System.Data.Linq.Table<arachnode_rvw_Exceptions_COUNT_BY_EXTENSION1> arachnode_rvw_Exceptions_COUNT_BY_EXTENSION1s
		{
			get
			{
				return this.GetTable<arachnode_rvw_Exceptions_COUNT_BY_EXTENSION1>();
			}
		}
		
		public System.Data.Linq.Table<arachnode_rvw_Exceptions_COUNT_BY_EXTENSION2> arachnode_rvw_Exceptions_COUNT_BY_EXTENSION2s
		{
			get
			{
				return this.GetTable<arachnode_rvw_Exceptions_COUNT_BY_EXTENSION2>();
			}
		}
		
		public System.Data.Linq.Table<arachnode_rvw_Exceptions_COUNT_BY_EXTENSION> arachnode_rvw_Exceptions_COUNT_BY_EXTENSIONs
		{
			get
			{
				return this.GetTable<arachnode_rvw_Exceptions_COUNT_BY_EXTENSION>();
			}
		}
		
		public System.Data.Linq.Table<arachnode_rvw_Exceptions_COUNT_BY_HOST1> arachnode_rvw_Exceptions_COUNT_BY_HOST1s
		{
			get
			{
				return this.GetTable<arachnode_rvw_Exceptions_COUNT_BY_HOST1>();
			}
		}
		
		public System.Data.Linq.Table<arachnode_rvw_Exceptions_COUNT_BY_HOST2> arachnode_rvw_Exceptions_COUNT_BY_HOST2s
		{
			get
			{
				return this.GetTable<arachnode_rvw_Exceptions_COUNT_BY_HOST2>();
			}
		}
		
		public System.Data.Linq.Table<arachnode_rvw_Exceptions_COUNT_BY_HOST> arachnode_rvw_Exceptions_COUNT_BY_HOSTs
		{
			get
			{
				return this.GetTable<arachnode_rvw_Exceptions_COUNT_BY_HOST>();
			}
		}
		
		public System.Data.Linq.Table<arachnode_rvw_Exceptions_COUNT_BY_MESSAGE> arachnode_rvw_Exceptions_COUNT_BY_MESSAGEs
		{
			get
			{
				return this.GetTable<arachnode_rvw_Exceptions_COUNT_BY_MESSAGE>();
			}
		}
		
		public System.Data.Linq.Table<arachnode_rvw_Exceptions_COUNT_BY_SCHEME1> arachnode_rvw_Exceptions_COUNT_BY_SCHEME1s
		{
			get
			{
				return this.GetTable<arachnode_rvw_Exceptions_COUNT_BY_SCHEME1>();
			}
		}
		
		public System.Data.Linq.Table<arachnode_rvw_Exceptions_COUNT_BY_SCHEME2> arachnode_rvw_Exceptions_COUNT_BY_SCHEME2s
		{
			get
			{
				return this.GetTable<arachnode_rvw_Exceptions_COUNT_BY_SCHEME2>();
			}
		}
		
		public System.Data.Linq.Table<arachnode_rvw_Exceptions_COUNT_BY_SCHEME> arachnode_rvw_Exceptions_COUNT_BY_SCHEMEs
		{
			get
			{
				return this.GetTable<arachnode_rvw_Exceptions_COUNT_BY_SCHEME>();
			}
		}
		
		public System.Data.Linq.Table<arachnode_rvw_Exceptions_COUNT_BY_SOURCE> arachnode_rvw_Exceptions_COUNT_BY_SOURCEs
		{
			get
			{
				return this.GetTable<arachnode_rvw_Exceptions_COUNT_BY_SOURCE>();
			}
		}
		
		public System.Data.Linq.Table<arachnode_rvw_Exceptions_COUNT_BY_STACKTRACE> arachnode_rvw_Exceptions_COUNT_BY_STACKTRACEs
		{
			get
			{
				return this.GetTable<arachnode_rvw_Exceptions_COUNT_BY_STACKTRACE>();
			}
		}
		
		public System.Data.Linq.Table<arachnode_rvw_Exceptions_COUNT_NEW_BY_DATE> arachnode_rvw_Exceptions_COUNT_NEW_BY_DATEs
		{
			get
			{
				return this.GetTable<arachnode_rvw_Exceptions_COUNT_NEW_BY_DATE>();
			}
		}
		
		public System.Data.Linq.Table<arachnode_rvw_ExceptionsWithoutHosts_Discovery> arachnode_rvw_ExceptionsWithoutHosts_Discoveries
		{
			get
			{
				return this.GetTable<arachnode_rvw_ExceptionsWithoutHosts_Discovery>();
			}
		}
		
		public System.Data.Linq.Table<arachnode_rvw_ExceptionsWithoutSchemes_Discovery> arachnode_rvw_ExceptionsWithoutSchemes_Discoveries
		{
			get
			{
				return this.GetTable<arachnode_rvw_ExceptionsWithoutSchemes_Discovery>();
			}
		}
		
		public System.Data.Linq.Table<arachnode_rvw_Extensions_ALL> arachnode_rvw_Extensions_ALLs
		{
			get
			{
				return this.GetTable<arachnode_rvw_Extensions_ALL>();
			}
		}
		
		public System.Data.Linq.Table<arachnode_rvw_Extensions_NEW> arachnode_rvw_Extensions_NEWs
		{
			get
			{
				return this.GetTable<arachnode_rvw_Extensions_NEW>();
			}
		}
		
		public System.Data.Linq.Table<arachnode_rvw_Files_COUNT_BY_ABSOLUTEURI> arachnode_rvw_Files_COUNT_BY_ABSOLUTEURIs
		{
			get
			{
				return this.GetTable<arachnode_rvw_Files_COUNT_BY_ABSOLUTEURI>();
			}
		}
		
		public System.Data.Linq.Table<arachnode_rvw_Files_COUNT_BY_DOMAIN> arachnode_rvw_Files_COUNT_BY_DOMAINs
		{
			get
			{
				return this.GetTable<arachnode_rvw_Files_COUNT_BY_DOMAIN>();
			}
		}
		
		public System.Data.Linq.Table<arachnode_rvw_Files_COUNT_BY_EXTENSION> arachnode_rvw_Files_COUNT_BY_EXTENSIONs
		{
			get
			{
				return this.GetTable<arachnode_rvw_Files_COUNT_BY_EXTENSION>();
			}
		}
		
		public System.Data.Linq.Table<arachnode_rvw_Files_COUNT_BY_FULLTEXTINDEXTYPE> arachnode_rvw_Files_COUNT_BY_FULLTEXTINDEXTYPEs
		{
			get
			{
				return this.GetTable<arachnode_rvw_Files_COUNT_BY_FULLTEXTINDEXTYPE>();
			}
		}
		
		public System.Data.Linq.Table<arachnode_rvw_Files_COUNT_BY_HOST> arachnode_rvw_Files_COUNT_BY_HOSTs
		{
			get
			{
				return this.GetTable<arachnode_rvw_Files_COUNT_BY_HOST>();
			}
		}
		
		public System.Data.Linq.Table<arachnode_rvw_Files_COUNT_BY_SCHEME> arachnode_rvw_Files_COUNT_BY_SCHEMEs
		{
			get
			{
				return this.GetTable<arachnode_rvw_Files_COUNT_BY_SCHEME>();
			}
		}
		
		public System.Data.Linq.Table<arachnode_rvw_Files_COUNT_NEW_BY_DATE> arachnode_rvw_Files_COUNT_NEW_BY_DATEs
		{
			get
			{
				return this.GetTable<arachnode_rvw_Files_COUNT_NEW_BY_DATE>();
			}
		}
		
		public System.Data.Linq.Table<arachnode_rvw_FilesWithoutDiscovery> arachnode_rvw_FilesWithoutDiscoveries
		{
			get
			{
				return this.GetTable<arachnode_rvw_FilesWithoutDiscovery>();
			}
		}
		
		public System.Data.Linq.Table<arachnode_rvw_FilesWithoutHosts_Discovery> arachnode_rvw_FilesWithoutHosts_Discoveries
		{
			get
			{
				return this.GetTable<arachnode_rvw_FilesWithoutHosts_Discovery>();
			}
		}
		
		public System.Data.Linq.Table<arachnode_rvw_FilesWithoutSchemes_Discovery> arachnode_rvw_FilesWithoutSchemes_Discoveries
		{
			get
			{
				return this.GetTable<arachnode_rvw_FilesWithoutSchemes_Discovery>();
			}
		}
		
		public System.Data.Linq.Table<arachnode_rvw_Hosts_ALL> arachnode_rvw_Hosts_ALLs
		{
			get
			{
				return this.GetTable<arachnode_rvw_Hosts_ALL>();
			}
		}
		
		public System.Data.Linq.Table<arachnode_rvw_Hosts_NEW> arachnode_rvw_Hosts_NEWs
		{
			get
			{
				return this.GetTable<arachnode_rvw_Hosts_NEW>();
			}
		}
		
		public System.Data.Linq.Table<arachnode_rvw_HyperLinks_COUNT_BY_ABSOLUTEURI> arachnode_rvw_HyperLinks_COUNT_BY_ABSOLUTEURIs
		{
			get
			{
				return this.GetTable<arachnode_rvw_HyperLinks_COUNT_BY_ABSOLUTEURI>();
			}
		}
		
		public System.Data.Linq.Table<arachnode_rvw_HyperLinks_COUNT_BY_DOMAIN> arachnode_rvw_HyperLinks_COUNT_BY_DOMAINs
		{
			get
			{
				return this.GetTable<arachnode_rvw_HyperLinks_COUNT_BY_DOMAIN>();
			}
		}
		
		public System.Data.Linq.Table<arachnode_rvw_HyperLinks_COUNT_BY_EXTENSION> arachnode_rvw_HyperLinks_COUNT_BY_EXTENSIONs
		{
			get
			{
				return this.GetTable<arachnode_rvw_HyperLinks_COUNT_BY_EXTENSION>();
			}
		}
		
		public System.Data.Linq.Table<arachnode_rvw_HyperLinks_COUNT_BY_HOST> arachnode_rvw_HyperLinks_COUNT_BY_HOSTs
		{
			get
			{
				return this.GetTable<arachnode_rvw_HyperLinks_COUNT_BY_HOST>();
			}
		}
		
		public System.Data.Linq.Table<arachnode_rvw_HyperLinks_COUNT_BY_SCHEME> arachnode_rvw_HyperLinks_COUNT_BY_SCHEMEs
		{
			get
			{
				return this.GetTable<arachnode_rvw_HyperLinks_COUNT_BY_SCHEME>();
			}
		}
		
		public System.Data.Linq.Table<arachnode_rvw_HyperLinks_COUNT_NEW_BY_DATE> arachnode_rvw_HyperLinks_COUNT_NEW_BY_DATEs
		{
			get
			{
				return this.GetTable<arachnode_rvw_HyperLinks_COUNT_NEW_BY_DATE>();
			}
		}
		
		public System.Data.Linq.Table<arachnode_rvw_HyperLinksWithoutDiscovery> arachnode_rvw_HyperLinksWithoutDiscoveries
		{
			get
			{
				return this.GetTable<arachnode_rvw_HyperLinksWithoutDiscovery>();
			}
		}
		
		public System.Data.Linq.Table<arachnode_rvw_HyperLinksWithoutHosts_Discovery> arachnode_rvw_HyperLinksWithoutHosts_Discoveries
		{
			get
			{
				return this.GetTable<arachnode_rvw_HyperLinksWithoutHosts_Discovery>();
			}
		}
		
		public System.Data.Linq.Table<arachnode_rvw_HyperLinksWithoutSchemes_Discovery> arachnode_rvw_HyperLinksWithoutSchemes_Discoveries
		{
			get
			{
				return this.GetTable<arachnode_rvw_HyperLinksWithoutSchemes_Discovery>();
			}
		}
		
		public System.Data.Linq.Table<arachnode_rvw_Images_COUNT_BY_ABSOLUTEURI> arachnode_rvw_Images_COUNT_BY_ABSOLUTEURIs
		{
			get
			{
				return this.GetTable<arachnode_rvw_Images_COUNT_BY_ABSOLUTEURI>();
			}
		}
		
		public System.Data.Linq.Table<arachnode_rvw_Images_COUNT_BY_DOMAIN> arachnode_rvw_Images_COUNT_BY_DOMAINs
		{
			get
			{
				return this.GetTable<arachnode_rvw_Images_COUNT_BY_DOMAIN>();
			}
		}
		
		public System.Data.Linq.Table<arachnode_rvw_Images_COUNT_BY_EXTENSION> arachnode_rvw_Images_COUNT_BY_EXTENSIONs
		{
			get
			{
				return this.GetTable<arachnode_rvw_Images_COUNT_BY_EXTENSION>();
			}
		}
		
		public System.Data.Linq.Table<arachnode_rvw_Images_COUNT_BY_FULLTEXTINDEXTYPE> arachnode_rvw_Images_COUNT_BY_FULLTEXTINDEXTYPEs
		{
			get
			{
				return this.GetTable<arachnode_rvw_Images_COUNT_BY_FULLTEXTINDEXTYPE>();
			}
		}
		
		public System.Data.Linq.Table<arachnode_rvw_Images_COUNT_BY_HOST> arachnode_rvw_Images_COUNT_BY_HOSTs
		{
			get
			{
				return this.GetTable<arachnode_rvw_Images_COUNT_BY_HOST>();
			}
		}
		
		public System.Data.Linq.Table<arachnode_rvw_Images_COUNT_BY_SCHEME> arachnode_rvw_Images_COUNT_BY_SCHEMEs
		{
			get
			{
				return this.GetTable<arachnode_rvw_Images_COUNT_BY_SCHEME>();
			}
		}
		
		public System.Data.Linq.Table<arachnode_rvw_Images_COUNT_NEW_BY_DATE> arachnode_rvw_Images_COUNT_NEW_BY_DATEs
		{
			get
			{
				return this.GetTable<arachnode_rvw_Images_COUNT_NEW_BY_DATE>();
			}
		}
		
		public System.Data.Linq.Table<arachnode_rvw_ImagesWithoutDiscovery> arachnode_rvw_ImagesWithoutDiscoveries
		{
			get
			{
				return this.GetTable<arachnode_rvw_ImagesWithoutDiscovery>();
			}
		}
		
		public System.Data.Linq.Table<arachnode_rvw_ImagesWithoutHosts_Discovery> arachnode_rvw_ImagesWithoutHosts_Discoveries
		{
			get
			{
				return this.GetTable<arachnode_rvw_ImagesWithoutHosts_Discovery>();
			}
		}
		
		public System.Data.Linq.Table<arachnode_rvw_ImagesWithoutSchemes_Discovery> arachnode_rvw_ImagesWithoutSchemes_Discoveries
		{
			get
			{
				return this.GetTable<arachnode_rvw_ImagesWithoutSchemes_Discovery>();
			}
		}
		
		public System.Data.Linq.Table<arachnode_rvw_Schemes_ALL> arachnode_rvw_Schemes_ALLs
		{
			get
			{
				return this.GetTable<arachnode_rvw_Schemes_ALL>();
			}
		}
		
		public System.Data.Linq.Table<arachnode_rvw_Schemes_Discoveries_ALL> arachnode_rvw_Schemes_Discoveries_ALLs
		{
			get
			{
				return this.GetTable<arachnode_rvw_Schemes_Discoveries_ALL>();
			}
		}
		
		public System.Data.Linq.Table<arachnode_rvw_Schemes_NEW> arachnode_rvw_Schemes_NEWs
		{
			get
			{
				return this.GetTable<arachnode_rvw_Schemes_NEW>();
			}
		}
		
		public System.Data.Linq.Table<arachnode_rvw_WebPages_COUNT_BY_DOMAIN> arachnode_rvw_WebPages_COUNT_BY_DOMAINs
		{
			get
			{
				return this.GetTable<arachnode_rvw_WebPages_COUNT_BY_DOMAIN>();
			}
		}
		
		public System.Data.Linq.Table<arachnode_rvw_WebPages_COUNT_BY_EXTENSION> arachnode_rvw_WebPages_COUNT_BY_EXTENSIONs
		{
			get
			{
				return this.GetTable<arachnode_rvw_WebPages_COUNT_BY_EXTENSION>();
			}
		}
		
		public System.Data.Linq.Table<arachnode_rvw_WebPages_COUNT_BY_FULLTEXTINDEXTYPE> arachnode_rvw_WebPages_COUNT_BY_FULLTEXTINDEXTYPEs
		{
			get
			{
				return this.GetTable<arachnode_rvw_WebPages_COUNT_BY_FULLTEXTINDEXTYPE>();
			}
		}
		
		public System.Data.Linq.Table<arachnode_rvw_WebPages_COUNT_BY_HOST> arachnode_rvw_WebPages_COUNT_BY_HOSTs
		{
			get
			{
				return this.GetTable<arachnode_rvw_WebPages_COUNT_BY_HOST>();
			}
		}
		
		public System.Data.Linq.Table<arachnode_rvw_WebPages_COUNT_BY_SCHEME> arachnode_rvw_WebPages_COUNT_BY_SCHEMEs
		{
			get
			{
				return this.GetTable<arachnode_rvw_WebPages_COUNT_BY_SCHEME>();
			}
		}
		
		public System.Data.Linq.Table<arachnode_rvw_WebPages_COUNT_NEW_BY_DATE> arachnode_rvw_WebPages_COUNT_NEW_BY_DATEs
		{
			get
			{
				return this.GetTable<arachnode_rvw_WebPages_COUNT_NEW_BY_DATE>();
			}
		}
		
		public System.Data.Linq.Table<arachnode_rvw_WebPagesWithoutHosts_Discovery> arachnode_rvw_WebPagesWithoutHosts_Discoveries
		{
			get
			{
				return this.GetTable<arachnode_rvw_WebPagesWithoutHosts_Discovery>();
			}
		}
	}
	
	[Table(Name="cfg.AllowedDataTypes")]
	public partial class AllowedDataType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _ContentTypeID;
		
		private byte _DiscoveryTypeID;
		
		private string _FullTextIndexType;
		
		private string _Overrides;
		
		private EntityRef<ContentType> _ContentType;
		
		private EntityRef<DiscoveryType> _DiscoveryType;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnContentTypeIDChanging(int value);
    partial void OnContentTypeIDChanged();
    partial void OnDiscoveryTypeIDChanging(byte value);
    partial void OnDiscoveryTypeIDChanged();
    partial void OnFullTextIndexTypeChanging(string value);
    partial void OnFullTextIndexTypeChanged();
    partial void OnOverridesChanging(string value);
    partial void OnOverridesChanged();
    #endregion
		
		public AllowedDataType()
		{
			this._ContentType = default(EntityRef<ContentType>);
			this._DiscoveryType = default(EntityRef<DiscoveryType>);
			OnCreated();
		}
		
		[Column(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[Column(Storage="_ContentTypeID", DbType="Int NOT NULL")]
		public int ContentTypeID
		{
			get
			{
				return this._ContentTypeID;
			}
			set
			{
				if ((this._ContentTypeID != value))
				{
					if (this._ContentType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnContentTypeIDChanging(value);
					this.SendPropertyChanging();
					this._ContentTypeID = value;
					this.SendPropertyChanged("ContentTypeID");
					this.OnContentTypeIDChanged();
				}
			}
		}
		
		[Column(Storage="_DiscoveryTypeID", DbType="TinyInt NOT NULL")]
		public byte DiscoveryTypeID
		{
			get
			{
				return this._DiscoveryTypeID;
			}
			set
			{
				if ((this._DiscoveryTypeID != value))
				{
					if (this._DiscoveryType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDiscoveryTypeIDChanging(value);
					this.SendPropertyChanging();
					this._DiscoveryTypeID = value;
					this.SendPropertyChanged("DiscoveryTypeID");
					this.OnDiscoveryTypeIDChanged();
				}
			}
		}
		
		[Column(Storage="_FullTextIndexType", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string FullTextIndexType
		{
			get
			{
				return this._FullTextIndexType;
			}
			set
			{
				if ((this._FullTextIndexType != value))
				{
					this.OnFullTextIndexTypeChanging(value);
					this.SendPropertyChanging();
					this._FullTextIndexType = value;
					this.SendPropertyChanged("FullTextIndexType");
					this.OnFullTextIndexTypeChanged();
				}
			}
		}
		
		[Column(Storage="_Overrides", DbType="VarChar(255)")]
		public string Overrides
		{
			get
			{
				return this._Overrides;
			}
			set
			{
				if ((this._Overrides != value))
				{
					this.OnOverridesChanging(value);
					this.SendPropertyChanging();
					this._Overrides = value;
					this.SendPropertyChanged("Overrides");
					this.OnOverridesChanged();
				}
			}
		}
		
		[Association(Name="ContentType_AllowedDataType", Storage="_ContentType", ThisKey="ContentTypeID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public ContentType ContentType
		{
			get
			{
				return this._ContentType.Entity;
			}
			set
			{
				ContentType previousValue = this._ContentType.Entity;
				if (((previousValue != value) 
							|| (this._ContentType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ContentType.Entity = null;
						previousValue.AllowedDataTypes.Remove(this);
					}
					this._ContentType.Entity = value;
					if ((value != null))
					{
						value.AllowedDataTypes.Add(this);
						this._ContentTypeID = value.ID;
					}
					else
					{
						this._ContentTypeID = default(int);
					}
					this.SendPropertyChanged("ContentType");
				}
			}
		}
		
		[Association(Name="DiscoveryType_AllowedDataType", Storage="_DiscoveryType", ThisKey="DiscoveryTypeID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public DiscoveryType DiscoveryType
		{
			get
			{
				return this._DiscoveryType.Entity;
			}
			set
			{
				DiscoveryType previousValue = this._DiscoveryType.Entity;
				if (((previousValue != value) 
							|| (this._DiscoveryType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DiscoveryType.Entity = null;
						previousValue.AllowedDataTypes.Remove(this);
					}
					this._DiscoveryType.Entity = value;
					if ((value != null))
					{
						value.AllowedDataTypes.Add(this);
						this._DiscoveryTypeID = value.ID;
					}
					else
					{
						this._DiscoveryTypeID = default(byte);
					}
					this.SendPropertyChanged("DiscoveryType");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="rpt.WebPages_COUNT_BY_SCHEME")]
	public partial class WebPages_COUNT_BY_SCHEME : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RowNumber;
		
		private string _Scheme;
		
		private int _Count;
		
		private int _Rank;
		
		private int _DenseRank;
		
		private byte _NTile;
		
		private EntityRef<Scheme> _Scheme1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRowNumberChanging(int value);
    partial void OnRowNumberChanged();
    partial void OnSchemeChanging(string value);
    partial void OnSchemeChanged();
    partial void OnCountChanging(int value);
    partial void OnCountChanged();
    partial void OnRankChanging(int value);
    partial void OnRankChanged();
    partial void OnDenseRankChanging(int value);
    partial void OnDenseRankChanged();
    partial void OnNTileChanging(byte value);
    partial void OnNTileChanged();
    #endregion
		
		public WebPages_COUNT_BY_SCHEME()
		{
			this._Scheme1 = default(EntityRef<Scheme>);
			OnCreated();
		}
		
		[Column(Storage="_RowNumber", DbType="Int NOT NULL")]
		public int RowNumber
		{
			get
			{
				return this._RowNumber;
			}
			set
			{
				if ((this._RowNumber != value))
				{
					this.OnRowNumberChanging(value);
					this.SendPropertyChanging();
					this._RowNumber = value;
					this.SendPropertyChanged("RowNumber");
					this.OnRowNumberChanged();
				}
			}
		}
		
		[Column(Storage="_Scheme", DbType="VarChar(884) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Scheme
		{
			get
			{
				return this._Scheme;
			}
			set
			{
				if ((this._Scheme != value))
				{
					if (this._Scheme1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSchemeChanging(value);
					this.SendPropertyChanging();
					this._Scheme = value;
					this.SendPropertyChanged("Scheme");
					this.OnSchemeChanged();
				}
			}
		}
		
		[Column(Storage="_Count", DbType="Int NOT NULL")]
		public int Count
		{
			get
			{
				return this._Count;
			}
			set
			{
				if ((this._Count != value))
				{
					this.OnCountChanging(value);
					this.SendPropertyChanging();
					this._Count = value;
					this.SendPropertyChanged("Count");
					this.OnCountChanged();
				}
			}
		}
		
		[Column(Storage="_Rank", DbType="Int NOT NULL")]
		public int Rank
		{
			get
			{
				return this._Rank;
			}
			set
			{
				if ((this._Rank != value))
				{
					this.OnRankChanging(value);
					this.SendPropertyChanging();
					this._Rank = value;
					this.SendPropertyChanged("Rank");
					this.OnRankChanged();
				}
			}
		}
		
		[Column(Storage="_DenseRank", DbType="Int NOT NULL")]
		public int DenseRank
		{
			get
			{
				return this._DenseRank;
			}
			set
			{
				if ((this._DenseRank != value))
				{
					this.OnDenseRankChanging(value);
					this.SendPropertyChanging();
					this._DenseRank = value;
					this.SendPropertyChanged("DenseRank");
					this.OnDenseRankChanged();
				}
			}
		}
		
		[Column(Storage="_NTile", DbType="TinyInt NOT NULL")]
		public byte NTile
		{
			get
			{
				return this._NTile;
			}
			set
			{
				if ((this._NTile != value))
				{
					this.OnNTileChanging(value);
					this.SendPropertyChanging();
					this._NTile = value;
					this.SendPropertyChanged("NTile");
					this.OnNTileChanged();
				}
			}
		}
		
		[Association(Name="Scheme_WebPages_COUNT_BY_SCHEME", Storage="_Scheme1", ThisKey="Scheme", OtherKey="Scheme1", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Scheme Scheme1
		{
			get
			{
				return this._Scheme1.Entity;
			}
			set
			{
				Scheme previousValue = this._Scheme1.Entity;
				if (((previousValue != value) 
							|| (this._Scheme1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Scheme1.Entity = null;
						previousValue.WebPages_COUNT_BY_SCHEME = null;
					}
					this._Scheme1.Entity = value;
					if ((value != null))
					{
						value.WebPages_COUNT_BY_SCHEME = this;
						this._Scheme = value.Scheme1;
					}
					else
					{
						this._Scheme = default(string);
					}
					this.SendPropertyChanged("Scheme1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="cfg.AllowedExtensions")]
	public partial class AllowedExtension : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Extension;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnExtensionChanging(string value);
    partial void OnExtensionChanged();
    #endregion
		
		public AllowedExtension()
		{
			OnCreated();
		}
		
		[Column(Storage="_Extension", DbType="VarChar(884) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Extension
		{
			get
			{
				return this._Extension;
			}
			set
			{
				if ((this._Extension != value))
				{
					this.OnExtensionChanging(value);
					this.SendPropertyChanging();
					this._Extension = value;
					this.SendPropertyChanged("Extension");
					this.OnExtensionChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="cfg.AllowedSchemes")]
	public partial class AllowedScheme : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Scheme;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSchemeChanging(string value);
    partial void OnSchemeChanged();
    #endregion
		
		public AllowedScheme()
		{
			OnCreated();
		}
		
		[Column(Storage="_Scheme", DbType="VarChar(25) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Scheme
		{
			get
			{
				return this._Scheme;
			}
			set
			{
				if ((this._Scheme != value))
				{
					this.OnSchemeChanging(value);
					this.SendPropertyChanging();
					this._Scheme = value;
					this.SendPropertyChanged("Scheme");
					this.OnSchemeChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="cfg.Configuration")]
	public partial class Configuration : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private byte _ConfigurationTypeID;
		
		private string _Key;
		
		private object _Value;
		
		private string _Help;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnConfigurationTypeIDChanging(byte value);
    partial void OnConfigurationTypeIDChanged();
    partial void OnKeyChanging(string value);
    partial void OnKeyChanged();
    partial void OnValueChanging(object value);
    partial void OnValueChanged();
    partial void OnHelpChanging(string value);
    partial void OnHelpChanged();
    #endregion
		
		public Configuration()
		{
			OnCreated();
		}
		
		[Column(Storage="_ConfigurationTypeID", DbType="TinyInt NOT NULL", IsPrimaryKey=true)]
		public byte ConfigurationTypeID
		{
			get
			{
				return this._ConfigurationTypeID;
			}
			set
			{
				if ((this._ConfigurationTypeID != value))
				{
					this.OnConfigurationTypeIDChanging(value);
					this.SendPropertyChanging();
					this._ConfigurationTypeID = value;
					this.SendPropertyChanged("ConfigurationTypeID");
					this.OnConfigurationTypeIDChanged();
				}
			}
		}
		
		[Column(Name="[Key]", Storage="_Key", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Key
		{
			get
			{
				return this._Key;
			}
			set
			{
				if ((this._Key != value))
				{
					this.OnKeyChanging(value);
					this.SendPropertyChanging();
					this._Key = value;
					this.SendPropertyChanged("Key");
					this.OnKeyChanged();
				}
			}
		}
		
		[Column(Storage="_Value", DbType="Variant NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public object Value
		{
			get
			{
				return this._Value;
			}
			set
			{
				if ((this._Value != value))
				{
					this.OnValueChanging(value);
					this.SendPropertyChanging();
					this._Value = value;
					this.SendPropertyChanged("Value");
					this.OnValueChanged();
				}
			}
		}
		
		[Column(Storage="_Help", DbType="VarChar(500)")]
		public string Help
		{
			get
			{
				return this._Help;
			}
			set
			{
				if ((this._Help != value))
				{
					this.OnHelpChanging(value);
					this.SendPropertyChanging();
					this._Help = value;
					this.SendPropertyChanged("Help");
					this.OnHelpChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="cfg.ConfigurationTypes")]
	public partial class ConfigurationType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Name;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    #endregion
		
		public ConfigurationType()
		{
			OnCreated();
		}
		
		[Column(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[Column(Storage="_Name", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="cfg.ContentTypes")]
	public partial class ContentType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _ContentTypeTypeID;
		
		private string _Name;
		
		private EntitySet<AllowedDataType> _AllowedDataTypes;
		
		private EntitySet<DisallowedAbsoluteUri> _DisallowedAbsoluteUris;
		
		private EntityRef<ContentTypeType> _ContentTypeType;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnContentTypeTypeIDChanging(int value);
    partial void OnContentTypeTypeIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    #endregion
		
		public ContentType()
		{
			this._AllowedDataTypes = new EntitySet<AllowedDataType>(new Action<AllowedDataType>(this.attach_AllowedDataTypes), new Action<AllowedDataType>(this.detach_AllowedDataTypes));
			this._DisallowedAbsoluteUris = new EntitySet<DisallowedAbsoluteUri>(new Action<DisallowedAbsoluteUri>(this.attach_DisallowedAbsoluteUris), new Action<DisallowedAbsoluteUri>(this.detach_DisallowedAbsoluteUris));
			this._ContentTypeType = default(EntityRef<ContentTypeType>);
			OnCreated();
		}
		
		[Column(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[Column(Storage="_ContentTypeTypeID", DbType="Int NOT NULL")]
		public int ContentTypeTypeID
		{
			get
			{
				return this._ContentTypeTypeID;
			}
			set
			{
				if ((this._ContentTypeTypeID != value))
				{
					if (this._ContentTypeType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnContentTypeTypeIDChanging(value);
					this.SendPropertyChanging();
					this._ContentTypeTypeID = value;
					this.SendPropertyChanged("ContentTypeTypeID");
					this.OnContentTypeTypeIDChanged();
				}
			}
		}
		
		[Column(Storage="_Name", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[Association(Name="ContentType_AllowedDataType", Storage="_AllowedDataTypes", ThisKey="ID", OtherKey="ContentTypeID")]
		public EntitySet<AllowedDataType> AllowedDataTypes
		{
			get
			{
				return this._AllowedDataTypes;
			}
			set
			{
				this._AllowedDataTypes.Assign(value);
			}
		}
		
		[Association(Name="ContentType_DisallowedAbsoluteUri", Storage="_DisallowedAbsoluteUris", ThisKey="ID", OtherKey="ContentTypeID")]
		public EntitySet<DisallowedAbsoluteUri> DisallowedAbsoluteUris
		{
			get
			{
				return this._DisallowedAbsoluteUris;
			}
			set
			{
				this._DisallowedAbsoluteUris.Assign(value);
			}
		}
		
		[Association(Name="ContentTypeType_ContentType", Storage="_ContentTypeType", ThisKey="ContentTypeTypeID", OtherKey="ID", IsForeignKey=true)]
		public ContentTypeType ContentTypeType
		{
			get
			{
				return this._ContentTypeType.Entity;
			}
			set
			{
				ContentTypeType previousValue = this._ContentTypeType.Entity;
				if (((previousValue != value) 
							|| (this._ContentTypeType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ContentTypeType.Entity = null;
						previousValue.ContentTypes.Remove(this);
					}
					this._ContentTypeType.Entity = value;
					if ((value != null))
					{
						value.ContentTypes.Add(this);
						this._ContentTypeTypeID = value.ID;
					}
					else
					{
						this._ContentTypeTypeID = default(int);
					}
					this.SendPropertyChanged("ContentTypeType");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_AllowedDataTypes(AllowedDataType entity)
		{
			this.SendPropertyChanging();
			entity.ContentType = this;
		}
		
		private void detach_AllowedDataTypes(AllowedDataType entity)
		{
			this.SendPropertyChanging();
			entity.ContentType = null;
		}
		
		private void attach_DisallowedAbsoluteUris(DisallowedAbsoluteUri entity)
		{
			this.SendPropertyChanging();
			entity.ContentType = this;
		}
		
		private void detach_DisallowedAbsoluteUris(DisallowedAbsoluteUri entity)
		{
			this.SendPropertyChanging();
			entity.ContentType = null;
		}
	}
	
	[Table(Name="cfg.ContentTypeTypes")]
	public partial class ContentTypeType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Name;
		
		private EntitySet<ContentType> _ContentTypes;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    #endregion
		
		public ContentTypeType()
		{
			this._ContentTypes = new EntitySet<ContentType>(new Action<ContentType>(this.attach_ContentTypes), new Action<ContentType>(this.detach_ContentTypes));
			OnCreated();
		}
		
		[Column(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[Column(Storage="_Name", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[Association(Name="ContentTypeType_ContentType", Storage="_ContentTypes", ThisKey="ID", OtherKey="ContentTypeTypeID")]
		public EntitySet<ContentType> ContentTypes
		{
			get
			{
				return this._ContentTypes;
			}
			set
			{
				this._ContentTypes.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ContentTypes(ContentType entity)
		{
			this.SendPropertyChanging();
			entity.ContentTypeType = this;
		}
		
		private void detach_ContentTypes(ContentType entity)
		{
			this.SendPropertyChanging();
			entity.ContentTypeType = null;
		}
	}
	
	[Table(Name="cfg.CrawlActions")]
	public partial class CrawlAction : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private byte _CrawlActionTypeID;
		
		private string _AssemblyName;
		
		private string _TypeName;
		
		private bool _IsEnabled;
		
		private byte _Order;
		
		private string _Settings;
		
		private EntityRef<CrawlActionType> _CrawlActionType;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnCrawlActionTypeIDChanging(byte value);
    partial void OnCrawlActionTypeIDChanged();
    partial void OnAssemblyNameChanging(string value);
    partial void OnAssemblyNameChanged();
    partial void OnTypeNameChanging(string value);
    partial void OnTypeNameChanged();
    partial void OnIsEnabledChanging(bool value);
    partial void OnIsEnabledChanged();
    partial void OnOrderChanging(byte value);
    partial void OnOrderChanged();
    partial void OnSettingsChanging(string value);
    partial void OnSettingsChanged();
    #endregion
		
		public CrawlAction()
		{
			this._CrawlActionType = default(EntityRef<CrawlActionType>);
			OnCreated();
		}
		
		[Column(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[Column(Storage="_CrawlActionTypeID", DbType="TinyInt NOT NULL")]
		public byte CrawlActionTypeID
		{
			get
			{
				return this._CrawlActionTypeID;
			}
			set
			{
				if ((this._CrawlActionTypeID != value))
				{
					if (this._CrawlActionType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCrawlActionTypeIDChanging(value);
					this.SendPropertyChanging();
					this._CrawlActionTypeID = value;
					this.SendPropertyChanged("CrawlActionTypeID");
					this.OnCrawlActionTypeIDChanged();
				}
			}
		}
		
		[Column(Storage="_AssemblyName", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string AssemblyName
		{
			get
			{
				return this._AssemblyName;
			}
			set
			{
				if ((this._AssemblyName != value))
				{
					this.OnAssemblyNameChanging(value);
					this.SendPropertyChanging();
					this._AssemblyName = value;
					this.SendPropertyChanged("AssemblyName");
					this.OnAssemblyNameChanged();
				}
			}
		}
		
		[Column(Storage="_TypeName", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string TypeName
		{
			get
			{
				return this._TypeName;
			}
			set
			{
				if ((this._TypeName != value))
				{
					this.OnTypeNameChanging(value);
					this.SendPropertyChanging();
					this._TypeName = value;
					this.SendPropertyChanged("TypeName");
					this.OnTypeNameChanged();
				}
			}
		}
		
		[Column(Storage="_IsEnabled", DbType="Bit NOT NULL")]
		public bool IsEnabled
		{
			get
			{
				return this._IsEnabled;
			}
			set
			{
				if ((this._IsEnabled != value))
				{
					this.OnIsEnabledChanging(value);
					this.SendPropertyChanging();
					this._IsEnabled = value;
					this.SendPropertyChanged("IsEnabled");
					this.OnIsEnabledChanged();
				}
			}
		}
		
		[Column(Name="[Order]", Storage="_Order", DbType="TinyInt NOT NULL")]
		public byte Order
		{
			get
			{
				return this._Order;
			}
			set
			{
				if ((this._Order != value))
				{
					this.OnOrderChanging(value);
					this.SendPropertyChanging();
					this._Order = value;
					this.SendPropertyChanged("Order");
					this.OnOrderChanged();
				}
			}
		}
		
		[Column(Storage="_Settings", DbType="VarChar(1000)")]
		public string Settings
		{
			get
			{
				return this._Settings;
			}
			set
			{
				if ((this._Settings != value))
				{
					this.OnSettingsChanging(value);
					this.SendPropertyChanging();
					this._Settings = value;
					this.SendPropertyChanged("Settings");
					this.OnSettingsChanged();
				}
			}
		}
		
		[Association(Name="CrawlActionType_CrawlAction", Storage="_CrawlActionType", ThisKey="CrawlActionTypeID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public CrawlActionType CrawlActionType
		{
			get
			{
				return this._CrawlActionType.Entity;
			}
			set
			{
				CrawlActionType previousValue = this._CrawlActionType.Entity;
				if (((previousValue != value) 
							|| (this._CrawlActionType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CrawlActionType.Entity = null;
						previousValue.CrawlActions.Remove(this);
					}
					this._CrawlActionType.Entity = value;
					if ((value != null))
					{
						value.CrawlActions.Add(this);
						this._CrawlActionTypeID = value.ID;
					}
					else
					{
						this._CrawlActionTypeID = default(byte);
					}
					this.SendPropertyChanged("CrawlActionType");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="cfg.CrawlActionTypes")]
	public partial class CrawlActionType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private byte _ID;
		
		private string _Name;
		
		private EntitySet<CrawlAction> _CrawlActions;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(byte value);
    partial void OnIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    #endregion
		
		public CrawlActionType()
		{
			this._CrawlActions = new EntitySet<CrawlAction>(new Action<CrawlAction>(this.attach_CrawlActions), new Action<CrawlAction>(this.detach_CrawlActions));
			OnCreated();
		}
		
		[Column(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="TinyInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public byte ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[Column(Storage="_Name", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[Association(Name="CrawlActionType_CrawlAction", Storage="_CrawlActions", ThisKey="ID", OtherKey="CrawlActionTypeID")]
		public EntitySet<CrawlAction> CrawlActions
		{
			get
			{
				return this._CrawlActions;
			}
			set
			{
				this._CrawlActions.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CrawlActions(CrawlAction entity)
		{
			this.SendPropertyChanging();
			entity.CrawlActionType = this;
		}
		
		private void detach_CrawlActions(CrawlAction entity)
		{
			this.SendPropertyChanging();
			entity.CrawlActionType = null;
		}
	}
	
	[Table(Name="cfg.CrawlRules")]
	public partial class CrawlRule : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private byte _CrawlRuleTypeID;
		
		private string _AssemblyName;
		
		private string _TypeName;
		
		private bool _IsEnabled;
		
		private byte _Order;
		
		private bool _OutputIsDisallowedReason;
		
		private string _Settings;
		
		private EntityRef<CrawlRuleType> _CrawlRuleType;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnCrawlRuleTypeIDChanging(byte value);
    partial void OnCrawlRuleTypeIDChanged();
    partial void OnAssemblyNameChanging(string value);
    partial void OnAssemblyNameChanged();
    partial void OnTypeNameChanging(string value);
    partial void OnTypeNameChanged();
    partial void OnIsEnabledChanging(bool value);
    partial void OnIsEnabledChanged();
    partial void OnOrderChanging(byte value);
    partial void OnOrderChanged();
    partial void OnOutputIsDisallowedReasonChanging(bool value);
    partial void OnOutputIsDisallowedReasonChanged();
    partial void OnSettingsChanging(string value);
    partial void OnSettingsChanged();
    #endregion
		
		public CrawlRule()
		{
			this._CrawlRuleType = default(EntityRef<CrawlRuleType>);
			OnCreated();
		}
		
		[Column(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[Column(Storage="_CrawlRuleTypeID", DbType="TinyInt NOT NULL")]
		public byte CrawlRuleTypeID
		{
			get
			{
				return this._CrawlRuleTypeID;
			}
			set
			{
				if ((this._CrawlRuleTypeID != value))
				{
					if (this._CrawlRuleType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCrawlRuleTypeIDChanging(value);
					this.SendPropertyChanging();
					this._CrawlRuleTypeID = value;
					this.SendPropertyChanged("CrawlRuleTypeID");
					this.OnCrawlRuleTypeIDChanged();
				}
			}
		}
		
		[Column(Storage="_AssemblyName", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string AssemblyName
		{
			get
			{
				return this._AssemblyName;
			}
			set
			{
				if ((this._AssemblyName != value))
				{
					this.OnAssemblyNameChanging(value);
					this.SendPropertyChanging();
					this._AssemblyName = value;
					this.SendPropertyChanged("AssemblyName");
					this.OnAssemblyNameChanged();
				}
			}
		}
		
		[Column(Storage="_TypeName", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string TypeName
		{
			get
			{
				return this._TypeName;
			}
			set
			{
				if ((this._TypeName != value))
				{
					this.OnTypeNameChanging(value);
					this.SendPropertyChanging();
					this._TypeName = value;
					this.SendPropertyChanged("TypeName");
					this.OnTypeNameChanged();
				}
			}
		}
		
		[Column(Storage="_IsEnabled", DbType="Bit NOT NULL")]
		public bool IsEnabled
		{
			get
			{
				return this._IsEnabled;
			}
			set
			{
				if ((this._IsEnabled != value))
				{
					this.OnIsEnabledChanging(value);
					this.SendPropertyChanging();
					this._IsEnabled = value;
					this.SendPropertyChanged("IsEnabled");
					this.OnIsEnabledChanged();
				}
			}
		}
		
		[Column(Name="[Order]", Storage="_Order", DbType="TinyInt NOT NULL")]
		public byte Order
		{
			get
			{
				return this._Order;
			}
			set
			{
				if ((this._Order != value))
				{
					this.OnOrderChanging(value);
					this.SendPropertyChanging();
					this._Order = value;
					this.SendPropertyChanged("Order");
					this.OnOrderChanged();
				}
			}
		}
		
		[Column(Storage="_OutputIsDisallowedReason", DbType="Bit NOT NULL")]
		public bool OutputIsDisallowedReason
		{
			get
			{
				return this._OutputIsDisallowedReason;
			}
			set
			{
				if ((this._OutputIsDisallowedReason != value))
				{
					this.OnOutputIsDisallowedReasonChanging(value);
					this.SendPropertyChanging();
					this._OutputIsDisallowedReason = value;
					this.SendPropertyChanged("OutputIsDisallowedReason");
					this.OnOutputIsDisallowedReasonChanged();
				}
			}
		}
		
		[Column(Storage="_Settings", DbType="VarChar(1000)")]
		public string Settings
		{
			get
			{
				return this._Settings;
			}
			set
			{
				if ((this._Settings != value))
				{
					this.OnSettingsChanging(value);
					this.SendPropertyChanging();
					this._Settings = value;
					this.SendPropertyChanged("Settings");
					this.OnSettingsChanged();
				}
			}
		}
		
		[Association(Name="CrawlRuleType_CrawlRule", Storage="_CrawlRuleType", ThisKey="CrawlRuleTypeID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public CrawlRuleType CrawlRuleType
		{
			get
			{
				return this._CrawlRuleType.Entity;
			}
			set
			{
				CrawlRuleType previousValue = this._CrawlRuleType.Entity;
				if (((previousValue != value) 
							|| (this._CrawlRuleType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CrawlRuleType.Entity = null;
						previousValue.CrawlRules.Remove(this);
					}
					this._CrawlRuleType.Entity = value;
					if ((value != null))
					{
						value.CrawlRules.Add(this);
						this._CrawlRuleTypeID = value.ID;
					}
					else
					{
						this._CrawlRuleTypeID = default(byte);
					}
					this.SendPropertyChanged("CrawlRuleType");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="cfg.CrawlRuleTypes")]
	public partial class CrawlRuleType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private byte _ID;
		
		private string _Name;
		
		private EntitySet<CrawlRule> _CrawlRules;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(byte value);
    partial void OnIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    #endregion
		
		public CrawlRuleType()
		{
			this._CrawlRules = new EntitySet<CrawlRule>(new Action<CrawlRule>(this.attach_CrawlRules), new Action<CrawlRule>(this.detach_CrawlRules));
			OnCreated();
		}
		
		[Column(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="TinyInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public byte ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[Column(Storage="_Name", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[Association(Name="CrawlRuleType_CrawlRule", Storage="_CrawlRules", ThisKey="ID", OtherKey="CrawlRuleTypeID")]
		public EntitySet<CrawlRule> CrawlRules
		{
			get
			{
				return this._CrawlRules;
			}
			set
			{
				this._CrawlRules.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CrawlRules(CrawlRule entity)
		{
			this.SendPropertyChanging();
			entity.CrawlRuleType = this;
		}
		
		private void detach_CrawlRules(CrawlRule entity)
		{
			this.SendPropertyChanging();
			entity.CrawlRuleType = null;
		}
	}
	
	[Table(Name="cfg.DisallowedDomains")]
	public partial class DisallowedDomain : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Domain;
		
		private bool _IsDisallowed;
		
		private string _Reason;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnDomainChanging(string value);
    partial void OnDomainChanged();
    partial void OnIsDisallowedChanging(bool value);
    partial void OnIsDisallowedChanged();
    partial void OnReasonChanging(string value);
    partial void OnReasonChanged();
    #endregion
		
		public DisallowedDomain()
		{
			OnCreated();
		}
		
		[Column(Storage="_Domain", DbType="VarChar(884) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Domain
		{
			get
			{
				return this._Domain;
			}
			set
			{
				if ((this._Domain != value))
				{
					this.OnDomainChanging(value);
					this.SendPropertyChanging();
					this._Domain = value;
					this.SendPropertyChanged("Domain");
					this.OnDomainChanged();
				}
			}
		}
		
		[Column(Storage="_IsDisallowed", DbType="Bit NOT NULL")]
		public bool IsDisallowed
		{
			get
			{
				return this._IsDisallowed;
			}
			set
			{
				if ((this._IsDisallowed != value))
				{
					this.OnIsDisallowedChanging(value);
					this.SendPropertyChanging();
					this._IsDisallowed = value;
					this.SendPropertyChanged("IsDisallowed");
					this.OnIsDisallowedChanged();
				}
			}
		}
		
		[Column(Storage="_Reason", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Reason
		{
			get
			{
				return this._Reason;
			}
			set
			{
				if ((this._Reason != value))
				{
					this.OnReasonChanging(value);
					this.SendPropertyChanging();
					this._Reason = value;
					this.SendPropertyChanged("Reason");
					this.OnReasonChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="cfg.DisallowedExtensions")]
	public partial class DisallowedExtension : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Extension;
		
		private bool _IsDisallowed;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnExtensionChanging(string value);
    partial void OnExtensionChanged();
    partial void OnIsDisallowedChanging(bool value);
    partial void OnIsDisallowedChanged();
    #endregion
		
		public DisallowedExtension()
		{
			OnCreated();
		}
		
		[Column(Storage="_Extension", DbType="VarChar(884) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Extension
		{
			get
			{
				return this._Extension;
			}
			set
			{
				if ((this._Extension != value))
				{
					this.OnExtensionChanging(value);
					this.SendPropertyChanging();
					this._Extension = value;
					this.SendPropertyChanged("Extension");
					this.OnExtensionChanged();
				}
			}
		}
		
		[Column(Storage="_IsDisallowed", DbType="Bit NOT NULL")]
		public bool IsDisallowed
		{
			get
			{
				return this._IsDisallowed;
			}
			set
			{
				if ((this._IsDisallowed != value))
				{
					this.OnIsDisallowedChanging(value);
					this.SendPropertyChanging();
					this._IsDisallowed = value;
					this.SendPropertyChanged("IsDisallowed");
					this.OnIsDisallowedChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="cfg.DisallowedFileExtensions")]
	public partial class DisallowedFileExtension : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _FileExtension;
		
		private bool _IsDisallowed;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnFileExtensionChanging(string value);
    partial void OnFileExtensionChanged();
    partial void OnIsDisallowedChanging(bool value);
    partial void OnIsDisallowedChanged();
    #endregion
		
		public DisallowedFileExtension()
		{
			OnCreated();
		}
		
		[Column(Storage="_FileExtension", DbType="VarChar(884) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string FileExtension
		{
			get
			{
				return this._FileExtension;
			}
			set
			{
				if ((this._FileExtension != value))
				{
					this.OnFileExtensionChanging(value);
					this.SendPropertyChanging();
					this._FileExtension = value;
					this.SendPropertyChanged("FileExtension");
					this.OnFileExtensionChanged();
				}
			}
		}
		
		[Column(Storage="_IsDisallowed", DbType="Bit NOT NULL")]
		public bool IsDisallowed
		{
			get
			{
				return this._IsDisallowed;
			}
			set
			{
				if ((this._IsDisallowed != value))
				{
					this.OnIsDisallowedChanging(value);
					this.SendPropertyChanging();
					this._IsDisallowed = value;
					this.SendPropertyChanged("IsDisallowed");
					this.OnIsDisallowedChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="cfg.DisallowedHosts")]
	public partial class DisallowedHost : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Host;
		
		private bool _IsDisallowed;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnHostChanging(string value);
    partial void OnHostChanged();
    partial void OnIsDisallowedChanging(bool value);
    partial void OnIsDisallowedChanged();
    #endregion
		
		public DisallowedHost()
		{
			OnCreated();
		}
		
		[Column(Storage="_Host", DbType="VarChar(884) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Host
		{
			get
			{
				return this._Host;
			}
			set
			{
				if ((this._Host != value))
				{
					this.OnHostChanging(value);
					this.SendPropertyChanging();
					this._Host = value;
					this.SendPropertyChanged("Host");
					this.OnHostChanged();
				}
			}
		}
		
		[Column(Storage="_IsDisallowed", DbType="Bit NOT NULL")]
		public bool IsDisallowed
		{
			get
			{
				return this._IsDisallowed;
			}
			set
			{
				if ((this._IsDisallowed != value))
				{
					this.OnIsDisallowedChanging(value);
					this.SendPropertyChanging();
					this._IsDisallowed = value;
					this.SendPropertyChanged("IsDisallowed");
					this.OnIsDisallowedChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="cfg.DisallowedSchemes")]
	public partial class DisallowedScheme : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Scheme;
		
		private bool _IsDisallowed;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSchemeChanging(string value);
    partial void OnSchemeChanged();
    partial void OnIsDisallowedChanging(bool value);
    partial void OnIsDisallowedChanged();
    #endregion
		
		public DisallowedScheme()
		{
			OnCreated();
		}
		
		[Column(Storage="_Scheme", DbType="VarChar(884) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Scheme
		{
			get
			{
				return this._Scheme;
			}
			set
			{
				if ((this._Scheme != value))
				{
					this.OnSchemeChanging(value);
					this.SendPropertyChanging();
					this._Scheme = value;
					this.SendPropertyChanged("Scheme");
					this.OnSchemeChanged();
				}
			}
		}
		
		[Column(Storage="_IsDisallowed", DbType="Bit NOT NULL")]
		public bool IsDisallowed
		{
			get
			{
				return this._IsDisallowed;
			}
			set
			{
				if ((this._IsDisallowed != value))
				{
					this.OnIsDisallowedChanging(value);
					this.SendPropertyChanging();
					this._IsDisallowed = value;
					this.SendPropertyChanged("IsDisallowed");
					this.OnIsDisallowedChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="cfg.DisallowedWords")]
	public partial class DisallowedWord : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Word;
		
		private bool _IsDisallowedForAbsoluteUri;
		
		private bool _IsDisallowedForResponseHeaders;
		
		private bool _IsDisallowedForSource;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnWordChanging(string value);
    partial void OnWordChanged();
    partial void OnIsDisallowedForAbsoluteUriChanging(bool value);
    partial void OnIsDisallowedForAbsoluteUriChanged();
    partial void OnIsDisallowedForResponseHeadersChanging(bool value);
    partial void OnIsDisallowedForResponseHeadersChanged();
    partial void OnIsDisallowedForSourceChanging(bool value);
    partial void OnIsDisallowedForSourceChanged();
    #endregion
		
		public DisallowedWord()
		{
			OnCreated();
		}
		
		[Column(Storage="_Word", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Word
		{
			get
			{
				return this._Word;
			}
			set
			{
				if ((this._Word != value))
				{
					this.OnWordChanging(value);
					this.SendPropertyChanging();
					this._Word = value;
					this.SendPropertyChanged("Word");
					this.OnWordChanged();
				}
			}
		}
		
		[Column(Storage="_IsDisallowedForAbsoluteUri", DbType="Bit NOT NULL")]
		public bool IsDisallowedForAbsoluteUri
		{
			get
			{
				return this._IsDisallowedForAbsoluteUri;
			}
			set
			{
				if ((this._IsDisallowedForAbsoluteUri != value))
				{
					this.OnIsDisallowedForAbsoluteUriChanging(value);
					this.SendPropertyChanging();
					this._IsDisallowedForAbsoluteUri = value;
					this.SendPropertyChanged("IsDisallowedForAbsoluteUri");
					this.OnIsDisallowedForAbsoluteUriChanged();
				}
			}
		}
		
		[Column(Storage="_IsDisallowedForResponseHeaders", DbType="Bit NOT NULL")]
		public bool IsDisallowedForResponseHeaders
		{
			get
			{
				return this._IsDisallowedForResponseHeaders;
			}
			set
			{
				if ((this._IsDisallowedForResponseHeaders != value))
				{
					this.OnIsDisallowedForResponseHeadersChanging(value);
					this.SendPropertyChanging();
					this._IsDisallowedForResponseHeaders = value;
					this.SendPropertyChanged("IsDisallowedForResponseHeaders");
					this.OnIsDisallowedForResponseHeadersChanged();
				}
			}
		}
		
		[Column(Storage="_IsDisallowedForSource", DbType="Bit NOT NULL")]
		public bool IsDisallowedForSource
		{
			get
			{
				return this._IsDisallowedForSource;
			}
			set
			{
				if ((this._IsDisallowedForSource != value))
				{
					this.OnIsDisallowedForSourceChanging(value);
					this.SendPropertyChanging();
					this._IsDisallowedForSource = value;
					this.SendPropertyChanged("IsDisallowedForSource");
					this.OnIsDisallowedForSourceChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="cfg.EngineActions")]
	public partial class EngineAction : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private byte _EngineActionTypeID;
		
		private string _AssemblyName;
		
		private string _TypeName;
		
		private bool _IsEnabled;
		
		private byte _Order;
		
		private string _Settings;
		
		private EntityRef<EngineActionType> _EngineActionType;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnEngineActionTypeIDChanging(byte value);
    partial void OnEngineActionTypeIDChanged();
    partial void OnAssemblyNameChanging(string value);
    partial void OnAssemblyNameChanged();
    partial void OnTypeNameChanging(string value);
    partial void OnTypeNameChanged();
    partial void OnIsEnabledChanging(bool value);
    partial void OnIsEnabledChanged();
    partial void OnOrderChanging(byte value);
    partial void OnOrderChanged();
    partial void OnSettingsChanging(string value);
    partial void OnSettingsChanged();
    #endregion
		
		public EngineAction()
		{
			this._EngineActionType = default(EntityRef<EngineActionType>);
			OnCreated();
		}
		
		[Column(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[Column(Storage="_EngineActionTypeID", DbType="TinyInt NOT NULL")]
		public byte EngineActionTypeID
		{
			get
			{
				return this._EngineActionTypeID;
			}
			set
			{
				if ((this._EngineActionTypeID != value))
				{
					if (this._EngineActionType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnEngineActionTypeIDChanging(value);
					this.SendPropertyChanging();
					this._EngineActionTypeID = value;
					this.SendPropertyChanged("EngineActionTypeID");
					this.OnEngineActionTypeIDChanged();
				}
			}
		}
		
		[Column(Storage="_AssemblyName", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string AssemblyName
		{
			get
			{
				return this._AssemblyName;
			}
			set
			{
				if ((this._AssemblyName != value))
				{
					this.OnAssemblyNameChanging(value);
					this.SendPropertyChanging();
					this._AssemblyName = value;
					this.SendPropertyChanged("AssemblyName");
					this.OnAssemblyNameChanged();
				}
			}
		}
		
		[Column(Storage="_TypeName", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string TypeName
		{
			get
			{
				return this._TypeName;
			}
			set
			{
				if ((this._TypeName != value))
				{
					this.OnTypeNameChanging(value);
					this.SendPropertyChanging();
					this._TypeName = value;
					this.SendPropertyChanged("TypeName");
					this.OnTypeNameChanged();
				}
			}
		}
		
		[Column(Storage="_IsEnabled", DbType="Bit NOT NULL")]
		public bool IsEnabled
		{
			get
			{
				return this._IsEnabled;
			}
			set
			{
				if ((this._IsEnabled != value))
				{
					this.OnIsEnabledChanging(value);
					this.SendPropertyChanging();
					this._IsEnabled = value;
					this.SendPropertyChanged("IsEnabled");
					this.OnIsEnabledChanged();
				}
			}
		}
		
		[Column(Name="[Order]", Storage="_Order", DbType="TinyInt NOT NULL")]
		public byte Order
		{
			get
			{
				return this._Order;
			}
			set
			{
				if ((this._Order != value))
				{
					this.OnOrderChanging(value);
					this.SendPropertyChanging();
					this._Order = value;
					this.SendPropertyChanged("Order");
					this.OnOrderChanged();
				}
			}
		}
		
		[Column(Storage="_Settings", DbType="VarChar(1000)")]
		public string Settings
		{
			get
			{
				return this._Settings;
			}
			set
			{
				if ((this._Settings != value))
				{
					this.OnSettingsChanging(value);
					this.SendPropertyChanging();
					this._Settings = value;
					this.SendPropertyChanged("Settings");
					this.OnSettingsChanged();
				}
			}
		}
		
		[Association(Name="EngineActionType_EngineAction", Storage="_EngineActionType", ThisKey="EngineActionTypeID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public EngineActionType EngineActionType
		{
			get
			{
				return this._EngineActionType.Entity;
			}
			set
			{
				EngineActionType previousValue = this._EngineActionType.Entity;
				if (((previousValue != value) 
							|| (this._EngineActionType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._EngineActionType.Entity = null;
						previousValue.EngineActions.Remove(this);
					}
					this._EngineActionType.Entity = value;
					if ((value != null))
					{
						value.EngineActions.Add(this);
						this._EngineActionTypeID = value.ID;
					}
					else
					{
						this._EngineActionTypeID = default(byte);
					}
					this.SendPropertyChanged("EngineActionType");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="cfg.EngineActionTypes")]
	public partial class EngineActionType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private byte _ID;
		
		private string _Name;
		
		private EntitySet<EngineAction> _EngineActions;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(byte value);
    partial void OnIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    #endregion
		
		public EngineActionType()
		{
			this._EngineActions = new EntitySet<EngineAction>(new Action<EngineAction>(this.attach_EngineActions), new Action<EngineAction>(this.detach_EngineActions));
			OnCreated();
		}
		
		[Column(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="TinyInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public byte ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[Column(Storage="_Name", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[Association(Name="EngineActionType_EngineAction", Storage="_EngineActions", ThisKey="ID", OtherKey="EngineActionTypeID")]
		public EntitySet<EngineAction> EngineActions
		{
			get
			{
				return this._EngineActions;
			}
			set
			{
				this._EngineActions.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_EngineActions(EngineAction entity)
		{
			this.SendPropertyChanging();
			entity.EngineActionType = this;
		}
		
		private void detach_EngineActions(EngineAction entity)
		{
			this.SendPropertyChanging();
			entity.EngineActionType = null;
		}
	}
	
	[Table(Name="cfg.FullTextIndexTypes")]
	public partial class FullTextIndexType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _FullTextIndexType1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnFullTextIndexType1Changing(string value);
    partial void OnFullTextIndexType1Changed();
    #endregion
		
		public FullTextIndexType()
		{
			OnCreated();
		}
		
		[Column(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[Column(Name="FullTextIndexType", Storage="_FullTextIndexType1", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string FullTextIndexType1
		{
			get
			{
				return this._FullTextIndexType1;
			}
			set
			{
				if ((this._FullTextIndexType1 != value))
				{
					this.OnFullTextIndexType1Changing(value);
					this.SendPropertyChanging();
					this._FullTextIndexType1 = value;
					this.SendPropertyChanged("FullTextIndexType1");
					this.OnFullTextIndexType1Changed();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="cfg.Priorities")]
	public partial class Priority : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Host;
		
		private double _Value;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnHostChanging(string value);
    partial void OnHostChanged();
    partial void OnValueChanging(double value);
    partial void OnValueChanged();
    #endregion
		
		public Priority()
		{
			OnCreated();
		}
		
		[Column(Storage="_Host", DbType="VarChar(255) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Host
		{
			get
			{
				return this._Host;
			}
			set
			{
				if ((this._Host != value))
				{
					this.OnHostChanging(value);
					this.SendPropertyChanging();
					this._Host = value;
					this.SendPropertyChanged("Host");
					this.OnHostChanged();
				}
			}
		}
		
		[Column(Storage="_Value", DbType="Float NOT NULL")]
		public double Value
		{
			get
			{
				return this._Value;
			}
			set
			{
				if ((this._Value != value))
				{
					this.OnValueChanging(value);
					this.SendPropertyChanging();
					this._Value = value;
					this.SendPropertyChanged("Value");
					this.OnValueChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="cfg.Version")]
	public partial class Version : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Value;
		
		private int _ID;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnValueChanging(string value);
    partial void OnValueChanged();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    #endregion
		
		public Version()
		{
			OnCreated();
		}
		
		[Column(Storage="_Value", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Value
		{
			get
			{
				return this._Value;
			}
			set
			{
				if ((this._Value != value))
				{
					this.OnValueChanging(value);
					this.SendPropertyChanging();
					this._Value = value;
					this.SendPropertyChanged("Value");
					this.OnValueChanged();
				}
			}
		}
		
		[Column(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.CrawlRequests")]
	public partial class CrawlRequest : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ID;
		
		private System.DateTime _Created;
		
		private string _AbsoluteUri1;
		
		private string _AbsoluteUri2;
		
		private int _CurrentDepth;
		
		private int _MaximumDepth;
		
		private short _RestrictCrawlTo;
		
		private short _RestrictDiscoveriesTo;
		
		private double _Priority;
		
		private byte _RenderType;
		
		private byte _RenderTypeForChildren;
		
		private string _AbsoluteUri0;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(long value);
    partial void OnIDChanged();
    partial void OnCreatedChanging(System.DateTime value);
    partial void OnCreatedChanged();
    partial void OnAbsoluteUri1Changing(string value);
    partial void OnAbsoluteUri1Changed();
    partial void OnAbsoluteUri2Changing(string value);
    partial void OnAbsoluteUri2Changed();
    partial void OnCurrentDepthChanging(int value);
    partial void OnCurrentDepthChanged();
    partial void OnMaximumDepthChanging(int value);
    partial void OnMaximumDepthChanged();
    partial void OnRestrictCrawlToChanging(short value);
    partial void OnRestrictCrawlToChanged();
    partial void OnRestrictDiscoveriesToChanging(short value);
    partial void OnRestrictDiscoveriesToChanged();
    partial void OnPriorityChanging(double value);
    partial void OnPriorityChanged();
    partial void OnRenderTypeChanging(byte value);
    partial void OnRenderTypeChanged();
    partial void OnRenderTypeForChildrenChanging(byte value);
    partial void OnRenderTypeForChildrenChanged();
    partial void OnAbsoluteUri0Changing(string value);
    partial void OnAbsoluteUri0Changed();
    #endregion
		
		public CrawlRequest()
		{
			OnCreated();
		}
		
		[Column(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[Column(Storage="_Created", DbType="DateTime NOT NULL")]
		public System.DateTime Created
		{
			get
			{
				return this._Created;
			}
			set
			{
				if ((this._Created != value))
				{
					this.OnCreatedChanging(value);
					this.SendPropertyChanging();
					this._Created = value;
					this.SendPropertyChanged("Created");
					this.OnCreatedChanged();
				}
			}
		}
		
		[Column(Storage="_AbsoluteUri1", DbType="VarChar(884) NOT NULL", CanBeNull=false)]
		public string AbsoluteUri1
		{
			get
			{
				return this._AbsoluteUri1;
			}
			set
			{
				if ((this._AbsoluteUri1 != value))
				{
					this.OnAbsoluteUri1Changing(value);
					this.SendPropertyChanging();
					this._AbsoluteUri1 = value;
					this.SendPropertyChanged("AbsoluteUri1");
					this.OnAbsoluteUri1Changed();
				}
			}
		}
		
		[Column(Storage="_AbsoluteUri2", DbType="VarChar(884) NOT NULL", CanBeNull=false)]
		public string AbsoluteUri2
		{
			get
			{
				return this._AbsoluteUri2;
			}
			set
			{
				if ((this._AbsoluteUri2 != value))
				{
					this.OnAbsoluteUri2Changing(value);
					this.SendPropertyChanging();
					this._AbsoluteUri2 = value;
					this.SendPropertyChanged("AbsoluteUri2");
					this.OnAbsoluteUri2Changed();
				}
			}
		}
		
		[Column(Storage="_CurrentDepth", DbType="Int NOT NULL")]
		public int CurrentDepth
		{
			get
			{
				return this._CurrentDepth;
			}
			set
			{
				if ((this._CurrentDepth != value))
				{
					this.OnCurrentDepthChanging(value);
					this.SendPropertyChanging();
					this._CurrentDepth = value;
					this.SendPropertyChanged("CurrentDepth");
					this.OnCurrentDepthChanged();
				}
			}
		}
		
		[Column(Storage="_MaximumDepth", DbType="Int NOT NULL")]
		public int MaximumDepth
		{
			get
			{
				return this._MaximumDepth;
			}
			set
			{
				if ((this._MaximumDepth != value))
				{
					this.OnMaximumDepthChanging(value);
					this.SendPropertyChanging();
					this._MaximumDepth = value;
					this.SendPropertyChanged("MaximumDepth");
					this.OnMaximumDepthChanged();
				}
			}
		}
		
		[Column(Storage="_RestrictCrawlTo", DbType="SmallInt NOT NULL")]
		public short RestrictCrawlTo
		{
			get
			{
				return this._RestrictCrawlTo;
			}
			set
			{
				if ((this._RestrictCrawlTo != value))
				{
					this.OnRestrictCrawlToChanging(value);
					this.SendPropertyChanging();
					this._RestrictCrawlTo = value;
					this.SendPropertyChanged("RestrictCrawlTo");
					this.OnRestrictCrawlToChanged();
				}
			}
		}
		
		[Column(Storage="_RestrictDiscoveriesTo", DbType="SmallInt NOT NULL")]
		public short RestrictDiscoveriesTo
		{
			get
			{
				return this._RestrictDiscoveriesTo;
			}
			set
			{
				if ((this._RestrictDiscoveriesTo != value))
				{
					this.OnRestrictDiscoveriesToChanging(value);
					this.SendPropertyChanging();
					this._RestrictDiscoveriesTo = value;
					this.SendPropertyChanged("RestrictDiscoveriesTo");
					this.OnRestrictDiscoveriesToChanged();
				}
			}
		}
		
		[Column(Storage="_Priority", DbType="Float NOT NULL")]
		public double Priority
		{
			get
			{
				return this._Priority;
			}
			set
			{
				if ((this._Priority != value))
				{
					this.OnPriorityChanging(value);
					this.SendPropertyChanging();
					this._Priority = value;
					this.SendPropertyChanged("Priority");
					this.OnPriorityChanged();
				}
			}
		}
		
		[Column(Storage="_RenderType", DbType="TinyInt NOT NULL")]
		public byte RenderType
		{
			get
			{
				return this._RenderType;
			}
			set
			{
				if ((this._RenderType != value))
				{
					this.OnRenderTypeChanging(value);
					this.SendPropertyChanging();
					this._RenderType = value;
					this.SendPropertyChanged("RenderType");
					this.OnRenderTypeChanged();
				}
			}
		}
		
		[Column(Storage="_RenderTypeForChildren", DbType="TinyInt NOT NULL")]
		public byte RenderTypeForChildren
		{
			get
			{
				return this._RenderTypeForChildren;
			}
			set
			{
				if ((this._RenderTypeForChildren != value))
				{
					this.OnRenderTypeForChildrenChanging(value);
					this.SendPropertyChanging();
					this._RenderTypeForChildren = value;
					this.SendPropertyChanged("RenderTypeForChildren");
					this.OnRenderTypeForChildrenChanged();
				}
			}
		}
		
		[Column(Storage="_AbsoluteUri0", DbType="VarChar(884)")]
		public string AbsoluteUri0
		{
			get
			{
				return this._AbsoluteUri0;
			}
			set
			{
				if ((this._AbsoluteUri0 != value))
				{
					this.OnAbsoluteUri0Changing(value);
					this.SendPropertyChanging();
					this._AbsoluteUri0 = value;
					this.SendPropertyChanged("AbsoluteUri0");
					this.OnAbsoluteUri0Changed();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.DisallowedAbsoluteUris")]
	public partial class DisallowedAbsoluteUri : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ID;
		
		private int _ContentTypeID;
		
		private byte _DiscoveryTypeID;
		
		private string _AbsoluteUri;
		
		private string _Reason;
		
		private EntitySet<DisallowedAbsoluteUris_Discovery> _DisallowedAbsoluteUris_Discoveries;
		
		private EntityRef<DisallowedAbsoluteUris_Hosts_Discovery> _DisallowedAbsoluteUris_Hosts_Discovery;
		
		private EntityRef<DisallowedAbsoluteUris_Schemes_Discovery> _DisallowedAbsoluteUris_Schemes_Discovery;
		
		private EntityRef<DisallowedAbsoluteUris_COUNT_BY_ABSOLUTEURI> _DisallowedAbsoluteUris_COUNT_BY_ABSOLUTEURI;
		
		private EntityRef<DisallowedAbsoluteUris_MOST_POPULAR_ABSOLUTEURIS_BY_ABSOLUTEURI> _DisallowedAbsoluteUris_MOST_POPULAR_ABSOLUTEURIS_BY_ABSOLUTEURI;
		
		private EntityRef<DisallowedAbsoluteUris_MOST_POPULAR_ABSOLUTEURIS_BY_DOMAIN> _DisallowedAbsoluteUris_MOST_POPULAR_ABSOLUTEURIS_BY_DOMAIN;
		
		private EntityRef<DisallowedAbsoluteUris_MOST_POPULAR_ABSOLUTEURIS_BY_EXTENSION> _DisallowedAbsoluteUris_MOST_POPULAR_ABSOLUTEURIS_BY_EXTENSION;
		
		private EntityRef<DisallowedAbsoluteUris_MOST_POPULAR_ABSOLUTEURIS_BY_HOST> _DisallowedAbsoluteUris_MOST_POPULAR_ABSOLUTEURIS_BY_HOST;
		
		private EntityRef<DisallowedAbsoluteUris_MOST_POPULAR_ABSOLUTEURIS_BY_SCHEME> _DisallowedAbsoluteUris_MOST_POPULAR_ABSOLUTEURIS_BY_SCHEME;
		
		private EntityRef<ContentType> _ContentType;
		
		private EntityRef<DiscoveryType> _DiscoveryType;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(long value);
    partial void OnIDChanged();
    partial void OnContentTypeIDChanging(int value);
    partial void OnContentTypeIDChanged();
    partial void OnDiscoveryTypeIDChanging(byte value);
    partial void OnDiscoveryTypeIDChanged();
    partial void OnAbsoluteUriChanging(string value);
    partial void OnAbsoluteUriChanged();
    partial void OnReasonChanging(string value);
    partial void OnReasonChanged();
    #endregion
		
		public DisallowedAbsoluteUri()
		{
			this._DisallowedAbsoluteUris_Discoveries = new EntitySet<DisallowedAbsoluteUris_Discovery>(new Action<DisallowedAbsoluteUris_Discovery>(this.attach_DisallowedAbsoluteUris_Discoveries), new Action<DisallowedAbsoluteUris_Discovery>(this.detach_DisallowedAbsoluteUris_Discoveries));
			this._DisallowedAbsoluteUris_Hosts_Discovery = default(EntityRef<DisallowedAbsoluteUris_Hosts_Discovery>);
			this._DisallowedAbsoluteUris_Schemes_Discovery = default(EntityRef<DisallowedAbsoluteUris_Schemes_Discovery>);
			this._DisallowedAbsoluteUris_COUNT_BY_ABSOLUTEURI = default(EntityRef<DisallowedAbsoluteUris_COUNT_BY_ABSOLUTEURI>);
			this._DisallowedAbsoluteUris_MOST_POPULAR_ABSOLUTEURIS_BY_ABSOLUTEURI = default(EntityRef<DisallowedAbsoluteUris_MOST_POPULAR_ABSOLUTEURIS_BY_ABSOLUTEURI>);
			this._DisallowedAbsoluteUris_MOST_POPULAR_ABSOLUTEURIS_BY_DOMAIN = default(EntityRef<DisallowedAbsoluteUris_MOST_POPULAR_ABSOLUTEURIS_BY_DOMAIN>);
			this._DisallowedAbsoluteUris_MOST_POPULAR_ABSOLUTEURIS_BY_EXTENSION = default(EntityRef<DisallowedAbsoluteUris_MOST_POPULAR_ABSOLUTEURIS_BY_EXTENSION>);
			this._DisallowedAbsoluteUris_MOST_POPULAR_ABSOLUTEURIS_BY_HOST = default(EntityRef<DisallowedAbsoluteUris_MOST_POPULAR_ABSOLUTEURIS_BY_HOST>);
			this._DisallowedAbsoluteUris_MOST_POPULAR_ABSOLUTEURIS_BY_SCHEME = default(EntityRef<DisallowedAbsoluteUris_MOST_POPULAR_ABSOLUTEURIS_BY_SCHEME>);
			this._ContentType = default(EntityRef<ContentType>);
			this._DiscoveryType = default(EntityRef<DiscoveryType>);
			OnCreated();
		}
		
		[Column(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[Column(Storage="_ContentTypeID", DbType="Int NOT NULL")]
		public int ContentTypeID
		{
			get
			{
				return this._ContentTypeID;
			}
			set
			{
				if ((this._ContentTypeID != value))
				{
					if (this._ContentType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnContentTypeIDChanging(value);
					this.SendPropertyChanging();
					this._ContentTypeID = value;
					this.SendPropertyChanged("ContentTypeID");
					this.OnContentTypeIDChanged();
				}
			}
		}
		
		[Column(Storage="_DiscoveryTypeID", DbType="TinyInt NOT NULL")]
		public byte DiscoveryTypeID
		{
			get
			{
				return this._DiscoveryTypeID;
			}
			set
			{
				if ((this._DiscoveryTypeID != value))
				{
					if (this._DiscoveryType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDiscoveryTypeIDChanging(value);
					this.SendPropertyChanging();
					this._DiscoveryTypeID = value;
					this.SendPropertyChanged("DiscoveryTypeID");
					this.OnDiscoveryTypeIDChanged();
				}
			}
		}
		
		[Column(Storage="_AbsoluteUri", DbType="VarChar(884) NOT NULL", CanBeNull=false)]
		public string AbsoluteUri
		{
			get
			{
				return this._AbsoluteUri;
			}
			set
			{
				if ((this._AbsoluteUri != value))
				{
					this.OnAbsoluteUriChanging(value);
					this.SendPropertyChanging();
					this._AbsoluteUri = value;
					this.SendPropertyChanged("AbsoluteUri");
					this.OnAbsoluteUriChanged();
				}
			}
		}
		
		[Column(Storage="_Reason", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string Reason
		{
			get
			{
				return this._Reason;
			}
			set
			{
				if ((this._Reason != value))
				{
					this.OnReasonChanging(value);
					this.SendPropertyChanging();
					this._Reason = value;
					this.SendPropertyChanged("Reason");
					this.OnReasonChanged();
				}
			}
		}
		
		[Association(Name="DisallowedAbsoluteUri_DisallowedAbsoluteUris_Discovery", Storage="_DisallowedAbsoluteUris_Discoveries", ThisKey="ID", OtherKey="DisallowedAbsoluteUriID")]
		public EntitySet<DisallowedAbsoluteUris_Discovery> DisallowedAbsoluteUris_Discoveries
		{
			get
			{
				return this._DisallowedAbsoluteUris_Discoveries;
			}
			set
			{
				this._DisallowedAbsoluteUris_Discoveries.Assign(value);
			}
		}
		
		[Association(Name="DisallowedAbsoluteUri_DisallowedAbsoluteUris_Hosts_Discovery", Storage="_DisallowedAbsoluteUris_Hosts_Discovery", ThisKey="ID", OtherKey="DisallowedAbsoluteUriID", IsUnique=true, IsForeignKey=false)]
		public DisallowedAbsoluteUris_Hosts_Discovery DisallowedAbsoluteUris_Hosts_Discovery
		{
			get
			{
				return this._DisallowedAbsoluteUris_Hosts_Discovery.Entity;
			}
			set
			{
				DisallowedAbsoluteUris_Hosts_Discovery previousValue = this._DisallowedAbsoluteUris_Hosts_Discovery.Entity;
				if (((previousValue != value) 
							|| (this._DisallowedAbsoluteUris_Hosts_Discovery.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DisallowedAbsoluteUris_Hosts_Discovery.Entity = null;
						previousValue.DisallowedAbsoluteUri = null;
					}
					this._DisallowedAbsoluteUris_Hosts_Discovery.Entity = value;
					if ((value != null))
					{
						value.DisallowedAbsoluteUri = this;
					}
					this.SendPropertyChanged("DisallowedAbsoluteUris_Hosts_Discovery");
				}
			}
		}
		
		[Association(Name="DisallowedAbsoluteUri_DisallowedAbsoluteUris_Schemes_Discovery", Storage="_DisallowedAbsoluteUris_Schemes_Discovery", ThisKey="ID", OtherKey="DisallowedAbsoluteUriID", IsUnique=true, IsForeignKey=false)]
		public DisallowedAbsoluteUris_Schemes_Discovery DisallowedAbsoluteUris_Schemes_Discovery
		{
			get
			{
				return this._DisallowedAbsoluteUris_Schemes_Discovery.Entity;
			}
			set
			{
				DisallowedAbsoluteUris_Schemes_Discovery previousValue = this._DisallowedAbsoluteUris_Schemes_Discovery.Entity;
				if (((previousValue != value) 
							|| (this._DisallowedAbsoluteUris_Schemes_Discovery.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DisallowedAbsoluteUris_Schemes_Discovery.Entity = null;
						previousValue.DisallowedAbsoluteUri = null;
					}
					this._DisallowedAbsoluteUris_Schemes_Discovery.Entity = value;
					if ((value != null))
					{
						value.DisallowedAbsoluteUri = this;
					}
					this.SendPropertyChanged("DisallowedAbsoluteUris_Schemes_Discovery");
				}
			}
		}
		
		[Association(Name="DisallowedAbsoluteUri_DisallowedAbsoluteUris_COUNT_BY_ABSOLUTEURI", Storage="_DisallowedAbsoluteUris_COUNT_BY_ABSOLUTEURI", ThisKey="ID", OtherKey="DisallowedAbsoluteUriID", IsUnique=true, IsForeignKey=false)]
		public DisallowedAbsoluteUris_COUNT_BY_ABSOLUTEURI DisallowedAbsoluteUris_COUNT_BY_ABSOLUTEURI
		{
			get
			{
				return this._DisallowedAbsoluteUris_COUNT_BY_ABSOLUTEURI.Entity;
			}
			set
			{
				DisallowedAbsoluteUris_COUNT_BY_ABSOLUTEURI previousValue = this._DisallowedAbsoluteUris_COUNT_BY_ABSOLUTEURI.Entity;
				if (((previousValue != value) 
							|| (this._DisallowedAbsoluteUris_COUNT_BY_ABSOLUTEURI.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DisallowedAbsoluteUris_COUNT_BY_ABSOLUTEURI.Entity = null;
						previousValue.DisallowedAbsoluteUri = null;
					}
					this._DisallowedAbsoluteUris_COUNT_BY_ABSOLUTEURI.Entity = value;
					if ((value != null))
					{
						value.DisallowedAbsoluteUri = this;
					}
					this.SendPropertyChanged("DisallowedAbsoluteUris_COUNT_BY_ABSOLUTEURI");
				}
			}
		}
		
		[Association(Name="DisallowedAbsoluteUri_DisallowedAbsoluteUris_MOST_POPULAR_ABSOLUTEURIS_BY_ABSOLUT" +
			"EURI", Storage="_DisallowedAbsoluteUris_MOST_POPULAR_ABSOLUTEURIS_BY_ABSOLUTEURI", ThisKey="ID", OtherKey="DisallowedAbsoluteUriID", IsUnique=true, IsForeignKey=false)]
		public DisallowedAbsoluteUris_MOST_POPULAR_ABSOLUTEURIS_BY_ABSOLUTEURI DisallowedAbsoluteUris_MOST_POPULAR_ABSOLUTEURIS_BY_ABSOLUTEURI
		{
			get
			{
				return this._DisallowedAbsoluteUris_MOST_POPULAR_ABSOLUTEURIS_BY_ABSOLUTEURI.Entity;
			}
			set
			{
				DisallowedAbsoluteUris_MOST_POPULAR_ABSOLUTEURIS_BY_ABSOLUTEURI previousValue = this._DisallowedAbsoluteUris_MOST_POPULAR_ABSOLUTEURIS_BY_ABSOLUTEURI.Entity;
				if (((previousValue != value) 
							|| (this._DisallowedAbsoluteUris_MOST_POPULAR_ABSOLUTEURIS_BY_ABSOLUTEURI.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DisallowedAbsoluteUris_MOST_POPULAR_ABSOLUTEURIS_BY_ABSOLUTEURI.Entity = null;
						previousValue.DisallowedAbsoluteUri = null;
					}
					this._DisallowedAbsoluteUris_MOST_POPULAR_ABSOLUTEURIS_BY_ABSOLUTEURI.Entity = value;
					if ((value != null))
					{
						value.DisallowedAbsoluteUri = this;
					}
					this.SendPropertyChanged("DisallowedAbsoluteUris_MOST_POPULAR_ABSOLUTEURIS_BY_ABSOLUTEURI");
				}
			}
		}
		
		[Association(Name="DisallowedAbsoluteUri_DisallowedAbsoluteUris_MOST_POPULAR_ABSOLUTEURIS_BY_DOMAIN", Storage="_DisallowedAbsoluteUris_MOST_POPULAR_ABSOLUTEURIS_BY_DOMAIN", ThisKey="ID", OtherKey="DisallowedAbsoluteUriID", IsUnique=true, IsForeignKey=false)]
		public DisallowedAbsoluteUris_MOST_POPULAR_ABSOLUTEURIS_BY_DOMAIN DisallowedAbsoluteUris_MOST_POPULAR_ABSOLUTEURIS_BY_DOMAIN
		{
			get
			{
				return this._DisallowedAbsoluteUris_MOST_POPULAR_ABSOLUTEURIS_BY_DOMAIN.Entity;
			}
			set
			{
				DisallowedAbsoluteUris_MOST_POPULAR_ABSOLUTEURIS_BY_DOMAIN previousValue = this._DisallowedAbsoluteUris_MOST_POPULAR_ABSOLUTEURIS_BY_DOMAIN.Entity;
				if (((previousValue != value) 
							|| (this._DisallowedAbsoluteUris_MOST_POPULAR_ABSOLUTEURIS_BY_DOMAIN.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DisallowedAbsoluteUris_MOST_POPULAR_ABSOLUTEURIS_BY_DOMAIN.Entity = null;
						previousValue.DisallowedAbsoluteUri = null;
					}
					this._DisallowedAbsoluteUris_MOST_POPULAR_ABSOLUTEURIS_BY_DOMAIN.Entity = value;
					if ((value != null))
					{
						value.DisallowedAbsoluteUri = this;
					}
					this.SendPropertyChanged("DisallowedAbsoluteUris_MOST_POPULAR_ABSOLUTEURIS_BY_DOMAIN");
				}
			}
		}
		
		[Association(Name="DisallowedAbsoluteUri_DisallowedAbsoluteUris_MOST_POPULAR_ABSOLUTEURIS_BY_EXTENSI" +
			"ON", Storage="_DisallowedAbsoluteUris_MOST_POPULAR_ABSOLUTEURIS_BY_EXTENSION", ThisKey="ID", OtherKey="DisallowedAbsoluteUriID", IsUnique=true, IsForeignKey=false)]
		public DisallowedAbsoluteUris_MOST_POPULAR_ABSOLUTEURIS_BY_EXTENSION DisallowedAbsoluteUris_MOST_POPULAR_ABSOLUTEURIS_BY_EXTENSION
		{
			get
			{
				return this._DisallowedAbsoluteUris_MOST_POPULAR_ABSOLUTEURIS_BY_EXTENSION.Entity;
			}
			set
			{
				DisallowedAbsoluteUris_MOST_POPULAR_ABSOLUTEURIS_BY_EXTENSION previousValue = this._DisallowedAbsoluteUris_MOST_POPULAR_ABSOLUTEURIS_BY_EXTENSION.Entity;
				if (((previousValue != value) 
							|| (this._DisallowedAbsoluteUris_MOST_POPULAR_ABSOLUTEURIS_BY_EXTENSION.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DisallowedAbsoluteUris_MOST_POPULAR_ABSOLUTEURIS_BY_EXTENSION.Entity = null;
						previousValue.DisallowedAbsoluteUri = null;
					}
					this._DisallowedAbsoluteUris_MOST_POPULAR_ABSOLUTEURIS_BY_EXTENSION.Entity = value;
					if ((value != null))
					{
						value.DisallowedAbsoluteUri = this;
					}
					this.SendPropertyChanged("DisallowedAbsoluteUris_MOST_POPULAR_ABSOLUTEURIS_BY_EXTENSION");
				}
			}
		}
		
		[Association(Name="DisallowedAbsoluteUri_DisallowedAbsoluteUris_MOST_POPULAR_ABSOLUTEURIS_BY_HOST", Storage="_DisallowedAbsoluteUris_MOST_POPULAR_ABSOLUTEURIS_BY_HOST", ThisKey="ID", OtherKey="DisallowedAbsoluteUriID", IsUnique=true, IsForeignKey=false)]
		public DisallowedAbsoluteUris_MOST_POPULAR_ABSOLUTEURIS_BY_HOST DisallowedAbsoluteUris_MOST_POPULAR_ABSOLUTEURIS_BY_HOST
		{
			get
			{
				return this._DisallowedAbsoluteUris_MOST_POPULAR_ABSOLUTEURIS_BY_HOST.Entity;
			}
			set
			{
				DisallowedAbsoluteUris_MOST_POPULAR_ABSOLUTEURIS_BY_HOST previousValue = this._DisallowedAbsoluteUris_MOST_POPULAR_ABSOLUTEURIS_BY_HOST.Entity;
				if (((previousValue != value) 
							|| (this._DisallowedAbsoluteUris_MOST_POPULAR_ABSOLUTEURIS_BY_HOST.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DisallowedAbsoluteUris_MOST_POPULAR_ABSOLUTEURIS_BY_HOST.Entity = null;
						previousValue.DisallowedAbsoluteUri = null;
					}
					this._DisallowedAbsoluteUris_MOST_POPULAR_ABSOLUTEURIS_BY_HOST.Entity = value;
					if ((value != null))
					{
						value.DisallowedAbsoluteUri = this;
					}
					this.SendPropertyChanged("DisallowedAbsoluteUris_MOST_POPULAR_ABSOLUTEURIS_BY_HOST");
				}
			}
		}
		
		[Association(Name="DisallowedAbsoluteUri_DisallowedAbsoluteUris_MOST_POPULAR_ABSOLUTEURIS_BY_SCHEME", Storage="_DisallowedAbsoluteUris_MOST_POPULAR_ABSOLUTEURIS_BY_SCHEME", ThisKey="ID", OtherKey="DisallowedAbsoluteUriID", IsUnique=true, IsForeignKey=false)]
		public DisallowedAbsoluteUris_MOST_POPULAR_ABSOLUTEURIS_BY_SCHEME DisallowedAbsoluteUris_MOST_POPULAR_ABSOLUTEURIS_BY_SCHEME
		{
			get
			{
				return this._DisallowedAbsoluteUris_MOST_POPULAR_ABSOLUTEURIS_BY_SCHEME.Entity;
			}
			set
			{
				DisallowedAbsoluteUris_MOST_POPULAR_ABSOLUTEURIS_BY_SCHEME previousValue = this._DisallowedAbsoluteUris_MOST_POPULAR_ABSOLUTEURIS_BY_SCHEME.Entity;
				if (((previousValue != value) 
							|| (this._DisallowedAbsoluteUris_MOST_POPULAR_ABSOLUTEURIS_BY_SCHEME.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DisallowedAbsoluteUris_MOST_POPULAR_ABSOLUTEURIS_BY_SCHEME.Entity = null;
						previousValue.DisallowedAbsoluteUri = null;
					}
					this._DisallowedAbsoluteUris_MOST_POPULAR_ABSOLUTEURIS_BY_SCHEME.Entity = value;
					if ((value != null))
					{
						value.DisallowedAbsoluteUri = this;
					}
					this.SendPropertyChanged("DisallowedAbsoluteUris_MOST_POPULAR_ABSOLUTEURIS_BY_SCHEME");
				}
			}
		}
		
		[Association(Name="ContentType_DisallowedAbsoluteUri", Storage="_ContentType", ThisKey="ContentTypeID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public ContentType ContentType
		{
			get
			{
				return this._ContentType.Entity;
			}
			set
			{
				ContentType previousValue = this._ContentType.Entity;
				if (((previousValue != value) 
							|| (this._ContentType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ContentType.Entity = null;
						previousValue.DisallowedAbsoluteUris.Remove(this);
					}
					this._ContentType.Entity = value;
					if ((value != null))
					{
						value.DisallowedAbsoluteUris.Add(this);
						this._ContentTypeID = value.ID;
					}
					else
					{
						this._ContentTypeID = default(int);
					}
					this.SendPropertyChanged("ContentType");
				}
			}
		}
		
		[Association(Name="DiscoveryType_DisallowedAbsoluteUri", Storage="_DiscoveryType", ThisKey="DiscoveryTypeID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public DiscoveryType DiscoveryType
		{
			get
			{
				return this._DiscoveryType.Entity;
			}
			set
			{
				DiscoveryType previousValue = this._DiscoveryType.Entity;
				if (((previousValue != value) 
							|| (this._DiscoveryType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DiscoveryType.Entity = null;
						previousValue.DisallowedAbsoluteUris.Remove(this);
					}
					this._DiscoveryType.Entity = value;
					if ((value != null))
					{
						value.DisallowedAbsoluteUris.Add(this);
						this._DiscoveryTypeID = value.ID;
					}
					else
					{
						this._DiscoveryTypeID = default(byte);
					}
					this.SendPropertyChanged("DiscoveryType");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_DisallowedAbsoluteUris_Discoveries(DisallowedAbsoluteUris_Discovery entity)
		{
			this.SendPropertyChanging();
			entity.DisallowedAbsoluteUri = this;
		}
		
		private void detach_DisallowedAbsoluteUris_Discoveries(DisallowedAbsoluteUris_Discovery entity)
		{
			this.SendPropertyChanging();
			entity.DisallowedAbsoluteUri = null;
		}
	}
	
	[Table(Name="dbo.DisallowedAbsoluteUris_Discoveries")]
	public partial class DisallowedAbsoluteUris_Discovery : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.DateTime _InitiallyDiscovered;
		
		private System.DateTime _LastDiscovered;
		
		private int _ID;
		
		private long _WebPageID;
		
		private long _DisallowedAbsoluteUriID;
		
		private EntityRef<DisallowedAbsoluteUri> _DisallowedAbsoluteUri;
		
		private EntityRef<WebPage> _WebPage;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnInitiallyDiscoveredChanging(System.DateTime value);
    partial void OnInitiallyDiscoveredChanged();
    partial void OnLastDiscoveredChanging(System.DateTime value);
    partial void OnLastDiscoveredChanged();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnWebPageIDChanging(long value);
    partial void OnWebPageIDChanged();
    partial void OnDisallowedAbsoluteUriIDChanging(long value);
    partial void OnDisallowedAbsoluteUriIDChanged();
    #endregion
		
		public DisallowedAbsoluteUris_Discovery()
		{
			this._DisallowedAbsoluteUri = default(EntityRef<DisallowedAbsoluteUri>);
			this._WebPage = default(EntityRef<WebPage>);
			OnCreated();
		}
		
		[Column(Storage="_InitiallyDiscovered", DbType="DateTime NOT NULL")]
		public System.DateTime InitiallyDiscovered
		{
			get
			{
				return this._InitiallyDiscovered;
			}
			set
			{
				if ((this._InitiallyDiscovered != value))
				{
					this.OnInitiallyDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._InitiallyDiscovered = value;
					this.SendPropertyChanged("InitiallyDiscovered");
					this.OnInitiallyDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_LastDiscovered", DbType="DateTime NOT NULL")]
		public System.DateTime LastDiscovered
		{
			get
			{
				return this._LastDiscovered;
			}
			set
			{
				if ((this._LastDiscovered != value))
				{
					this.OnLastDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._LastDiscovered = value;
					this.SendPropertyChanged("LastDiscovered");
					this.OnLastDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_ID", AutoSync=AutoSync.Always, DbType="Int NOT NULL IDENTITY", IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[Column(Storage="_WebPageID", DbType="BigInt NOT NULL", IsPrimaryKey=true)]
		public long WebPageID
		{
			get
			{
				return this._WebPageID;
			}
			set
			{
				if ((this._WebPageID != value))
				{
					if (this._WebPage.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnWebPageIDChanging(value);
					this.SendPropertyChanging();
					this._WebPageID = value;
					this.SendPropertyChanged("WebPageID");
					this.OnWebPageIDChanged();
				}
			}
		}
		
		[Column(Storage="_DisallowedAbsoluteUriID", DbType="BigInt NOT NULL", IsPrimaryKey=true)]
		public long DisallowedAbsoluteUriID
		{
			get
			{
				return this._DisallowedAbsoluteUriID;
			}
			set
			{
				if ((this._DisallowedAbsoluteUriID != value))
				{
					if (this._DisallowedAbsoluteUri.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDisallowedAbsoluteUriIDChanging(value);
					this.SendPropertyChanging();
					this._DisallowedAbsoluteUriID = value;
					this.SendPropertyChanged("DisallowedAbsoluteUriID");
					this.OnDisallowedAbsoluteUriIDChanged();
				}
			}
		}
		
		[Association(Name="DisallowedAbsoluteUri_DisallowedAbsoluteUris_Discovery", Storage="_DisallowedAbsoluteUri", ThisKey="DisallowedAbsoluteUriID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public DisallowedAbsoluteUri DisallowedAbsoluteUri
		{
			get
			{
				return this._DisallowedAbsoluteUri.Entity;
			}
			set
			{
				DisallowedAbsoluteUri previousValue = this._DisallowedAbsoluteUri.Entity;
				if (((previousValue != value) 
							|| (this._DisallowedAbsoluteUri.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DisallowedAbsoluteUri.Entity = null;
						previousValue.DisallowedAbsoluteUris_Discoveries.Remove(this);
					}
					this._DisallowedAbsoluteUri.Entity = value;
					if ((value != null))
					{
						value.DisallowedAbsoluteUris_Discoveries.Add(this);
						this._DisallowedAbsoluteUriID = value.ID;
					}
					else
					{
						this._DisallowedAbsoluteUriID = default(long);
					}
					this.SendPropertyChanged("DisallowedAbsoluteUri");
				}
			}
		}
		
		[Association(Name="WebPage_DisallowedAbsoluteUris_Discovery", Storage="_WebPage", ThisKey="WebPageID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public WebPage WebPage
		{
			get
			{
				return this._WebPage.Entity;
			}
			set
			{
				WebPage previousValue = this._WebPage.Entity;
				if (((previousValue != value) 
							|| (this._WebPage.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._WebPage.Entity = null;
						previousValue.DisallowedAbsoluteUris_Discoveries.Remove(this);
					}
					this._WebPage.Entity = value;
					if ((value != null))
					{
						value.DisallowedAbsoluteUris_Discoveries.Add(this);
						this._WebPageID = value.ID;
					}
					else
					{
						this._WebPageID = default(long);
					}
					this.SendPropertyChanged("WebPage");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.DisallowedAbsoluteUris_Hosts_Discoveries")]
	public partial class DisallowedAbsoluteUris_Hosts_Discovery : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _DisallowedAbsoluteUriID;
		
		private int _Host_DiscoveryID;
		
		private EntityRef<DisallowedAbsoluteUri> _DisallowedAbsoluteUri;
		
		private EntityRef<Hosts_Discovery> _Hosts_Discovery;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnDisallowedAbsoluteUriIDChanging(long value);
    partial void OnDisallowedAbsoluteUriIDChanged();
    partial void OnHost_DiscoveryIDChanging(int value);
    partial void OnHost_DiscoveryIDChanged();
    #endregion
		
		public DisallowedAbsoluteUris_Hosts_Discovery()
		{
			this._DisallowedAbsoluteUri = default(EntityRef<DisallowedAbsoluteUri>);
			this._Hosts_Discovery = default(EntityRef<Hosts_Discovery>);
			OnCreated();
		}
		
		[Column(Storage="_DisallowedAbsoluteUriID", DbType="BigInt NOT NULL", IsPrimaryKey=true)]
		public long DisallowedAbsoluteUriID
		{
			get
			{
				return this._DisallowedAbsoluteUriID;
			}
			set
			{
				if ((this._DisallowedAbsoluteUriID != value))
				{
					if (this._DisallowedAbsoluteUri.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDisallowedAbsoluteUriIDChanging(value);
					this.SendPropertyChanging();
					this._DisallowedAbsoluteUriID = value;
					this.SendPropertyChanged("DisallowedAbsoluteUriID");
					this.OnDisallowedAbsoluteUriIDChanged();
				}
			}
		}
		
		[Column(Storage="_Host_DiscoveryID", DbType="Int NOT NULL")]
		public int Host_DiscoveryID
		{
			get
			{
				return this._Host_DiscoveryID;
			}
			set
			{
				if ((this._Host_DiscoveryID != value))
				{
					if (this._Hosts_Discovery.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnHost_DiscoveryIDChanging(value);
					this.SendPropertyChanging();
					this._Host_DiscoveryID = value;
					this.SendPropertyChanged("Host_DiscoveryID");
					this.OnHost_DiscoveryIDChanged();
				}
			}
		}
		
		[Association(Name="DisallowedAbsoluteUri_DisallowedAbsoluteUris_Hosts_Discovery", Storage="_DisallowedAbsoluteUri", ThisKey="DisallowedAbsoluteUriID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public DisallowedAbsoluteUri DisallowedAbsoluteUri
		{
			get
			{
				return this._DisallowedAbsoluteUri.Entity;
			}
			set
			{
				DisallowedAbsoluteUri previousValue = this._DisallowedAbsoluteUri.Entity;
				if (((previousValue != value) 
							|| (this._DisallowedAbsoluteUri.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DisallowedAbsoluteUri.Entity = null;
						previousValue.DisallowedAbsoluteUris_Hosts_Discovery = null;
					}
					this._DisallowedAbsoluteUri.Entity = value;
					if ((value != null))
					{
						value.DisallowedAbsoluteUris_Hosts_Discovery = this;
						this._DisallowedAbsoluteUriID = value.ID;
					}
					else
					{
						this._DisallowedAbsoluteUriID = default(long);
					}
					this.SendPropertyChanged("DisallowedAbsoluteUri");
				}
			}
		}
		
		[Association(Name="Hosts_Discovery_DisallowedAbsoluteUris_Hosts_Discovery", Storage="_Hosts_Discovery", ThisKey="Host_DiscoveryID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Hosts_Discovery Hosts_Discovery
		{
			get
			{
				return this._Hosts_Discovery.Entity;
			}
			set
			{
				Hosts_Discovery previousValue = this._Hosts_Discovery.Entity;
				if (((previousValue != value) 
							|| (this._Hosts_Discovery.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Hosts_Discovery.Entity = null;
						previousValue.DisallowedAbsoluteUris_Hosts_Discoveries.Remove(this);
					}
					this._Hosts_Discovery.Entity = value;
					if ((value != null))
					{
						value.DisallowedAbsoluteUris_Hosts_Discoveries.Add(this);
						this._Host_DiscoveryID = value.ID;
					}
					else
					{
						this._Host_DiscoveryID = default(int);
					}
					this.SendPropertyChanged("Hosts_Discovery");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.DisallowedAbsoluteUris_Schemes_Discoveries")]
	public partial class DisallowedAbsoluteUris_Schemes_Discovery : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _DisallowedAbsoluteUriID;
		
		private int _Scheme_DiscoveryID;
		
		private EntityRef<DisallowedAbsoluteUri> _DisallowedAbsoluteUri;
		
		private EntityRef<Schemes_Discovery> _Schemes_Discovery;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnDisallowedAbsoluteUriIDChanging(long value);
    partial void OnDisallowedAbsoluteUriIDChanged();
    partial void OnScheme_DiscoveryIDChanging(int value);
    partial void OnScheme_DiscoveryIDChanged();
    #endregion
		
		public DisallowedAbsoluteUris_Schemes_Discovery()
		{
			this._DisallowedAbsoluteUri = default(EntityRef<DisallowedAbsoluteUri>);
			this._Schemes_Discovery = default(EntityRef<Schemes_Discovery>);
			OnCreated();
		}
		
		[Column(Storage="_DisallowedAbsoluteUriID", DbType="BigInt NOT NULL", IsPrimaryKey=true)]
		public long DisallowedAbsoluteUriID
		{
			get
			{
				return this._DisallowedAbsoluteUriID;
			}
			set
			{
				if ((this._DisallowedAbsoluteUriID != value))
				{
					if (this._DisallowedAbsoluteUri.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDisallowedAbsoluteUriIDChanging(value);
					this.SendPropertyChanging();
					this._DisallowedAbsoluteUriID = value;
					this.SendPropertyChanged("DisallowedAbsoluteUriID");
					this.OnDisallowedAbsoluteUriIDChanged();
				}
			}
		}
		
		[Column(Storage="_Scheme_DiscoveryID", DbType="Int NOT NULL")]
		public int Scheme_DiscoveryID
		{
			get
			{
				return this._Scheme_DiscoveryID;
			}
			set
			{
				if ((this._Scheme_DiscoveryID != value))
				{
					if (this._Schemes_Discovery.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnScheme_DiscoveryIDChanging(value);
					this.SendPropertyChanging();
					this._Scheme_DiscoveryID = value;
					this.SendPropertyChanged("Scheme_DiscoveryID");
					this.OnScheme_DiscoveryIDChanged();
				}
			}
		}
		
		[Association(Name="DisallowedAbsoluteUri_DisallowedAbsoluteUris_Schemes_Discovery", Storage="_DisallowedAbsoluteUri", ThisKey="DisallowedAbsoluteUriID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public DisallowedAbsoluteUri DisallowedAbsoluteUri
		{
			get
			{
				return this._DisallowedAbsoluteUri.Entity;
			}
			set
			{
				DisallowedAbsoluteUri previousValue = this._DisallowedAbsoluteUri.Entity;
				if (((previousValue != value) 
							|| (this._DisallowedAbsoluteUri.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DisallowedAbsoluteUri.Entity = null;
						previousValue.DisallowedAbsoluteUris_Schemes_Discovery = null;
					}
					this._DisallowedAbsoluteUri.Entity = value;
					if ((value != null))
					{
						value.DisallowedAbsoluteUris_Schemes_Discovery = this;
						this._DisallowedAbsoluteUriID = value.ID;
					}
					else
					{
						this._DisallowedAbsoluteUriID = default(long);
					}
					this.SendPropertyChanged("DisallowedAbsoluteUri");
				}
			}
		}
		
		[Association(Name="Schemes_Discovery_DisallowedAbsoluteUris_Schemes_Discovery", Storage="_Schemes_Discovery", ThisKey="Scheme_DiscoveryID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Schemes_Discovery Schemes_Discovery
		{
			get
			{
				return this._Schemes_Discovery.Entity;
			}
			set
			{
				Schemes_Discovery previousValue = this._Schemes_Discovery.Entity;
				if (((previousValue != value) 
							|| (this._Schemes_Discovery.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Schemes_Discovery.Entity = null;
						previousValue.DisallowedAbsoluteUris_Schemes_Discoveries.Remove(this);
					}
					this._Schemes_Discovery.Entity = value;
					if ((value != null))
					{
						value.DisallowedAbsoluteUris_Schemes_Discoveries.Add(this);
						this._Scheme_DiscoveryID = value.ID;
					}
					else
					{
						this._Scheme_DiscoveryID = default(int);
					}
					this.SendPropertyChanged("Schemes_Discovery");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.Discoveries")]
	public partial class Discovery
	{
		
		private System.Nullable<long> _ID;
		
		private string _AbsoluteUri;
		
		private byte _DiscoveryStateID;
		
		private byte _DiscoveryTypeID;
		
		private bool _ExpectFileOrImage;
		
		private int _NumberOfTimesDiscovered;
		
		public Discovery()
		{
		}
		
		[Column(Storage="_ID", DbType="BigInt")]
		public System.Nullable<long> ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this._ID = value;
				}
			}
		}
		
		[Column(Storage="_AbsoluteUri", DbType="VarChar(884) NOT NULL", CanBeNull=false)]
		public string AbsoluteUri
		{
			get
			{
				return this._AbsoluteUri;
			}
			set
			{
				if ((this._AbsoluteUri != value))
				{
					this._AbsoluteUri = value;
				}
			}
		}
		
		[Column(Storage="_DiscoveryStateID", DbType="TinyInt NOT NULL")]
		public byte DiscoveryStateID
		{
			get
			{
				return this._DiscoveryStateID;
			}
			set
			{
				if ((this._DiscoveryStateID != value))
				{
					this._DiscoveryStateID = value;
				}
			}
		}
		
		[Column(Storage="_DiscoveryTypeID", DbType="TinyInt NOT NULL")]
		public byte DiscoveryTypeID
		{
			get
			{
				return this._DiscoveryTypeID;
			}
			set
			{
				if ((this._DiscoveryTypeID != value))
				{
					this._DiscoveryTypeID = value;
				}
			}
		}
		
		[Column(Storage="_ExpectFileOrImage", DbType="Bit NOT NULL")]
		public bool ExpectFileOrImage
		{
			get
			{
				return this._ExpectFileOrImage;
			}
			set
			{
				if ((this._ExpectFileOrImage != value))
				{
					this._ExpectFileOrImage = value;
				}
			}
		}
		
		[Column(Storage="_NumberOfTimesDiscovered", DbType="Int NOT NULL")]
		public int NumberOfTimesDiscovered
		{
			get
			{
				return this._NumberOfTimesDiscovered;
			}
			set
			{
				if ((this._NumberOfTimesDiscovered != value))
				{
					this._NumberOfTimesDiscovered = value;
				}
			}
		}
	}
	
	[Table(Name="dbo.DiscoveryStates")]
	public partial class DiscoveryState : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private byte _ID;
		
		private string _Name;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(byte value);
    partial void OnIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    #endregion
		
		public DiscoveryState()
		{
			OnCreated();
		}
		
		[Column(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="TinyInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public byte ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[Column(Storage="_Name", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.DiscoveryTypes")]
	public partial class DiscoveryType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private byte _ID;
		
		private string _Name;
		
		private EntitySet<AllowedDataType> _AllowedDataTypes;
		
		private EntitySet<DisallowedAbsoluteUri> _DisallowedAbsoluteUris;
		
		private EntitySet<Domains_Discovery> _Domains_Discoveries;
		
		private EntitySet<Extensions_Discovery> _Extensions_Discoveries;
		
		private EntitySet<Hosts_Discovery> _Hosts_Discoveries;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(byte value);
    partial void OnIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    #endregion
		
		public DiscoveryType()
		{
			this._AllowedDataTypes = new EntitySet<AllowedDataType>(new Action<AllowedDataType>(this.attach_AllowedDataTypes), new Action<AllowedDataType>(this.detach_AllowedDataTypes));
			this._DisallowedAbsoluteUris = new EntitySet<DisallowedAbsoluteUri>(new Action<DisallowedAbsoluteUri>(this.attach_DisallowedAbsoluteUris), new Action<DisallowedAbsoluteUri>(this.detach_DisallowedAbsoluteUris));
			this._Domains_Discoveries = new EntitySet<Domains_Discovery>(new Action<Domains_Discovery>(this.attach_Domains_Discoveries), new Action<Domains_Discovery>(this.detach_Domains_Discoveries));
			this._Extensions_Discoveries = new EntitySet<Extensions_Discovery>(new Action<Extensions_Discovery>(this.attach_Extensions_Discoveries), new Action<Extensions_Discovery>(this.detach_Extensions_Discoveries));
			this._Hosts_Discoveries = new EntitySet<Hosts_Discovery>(new Action<Hosts_Discovery>(this.attach_Hosts_Discoveries), new Action<Hosts_Discovery>(this.detach_Hosts_Discoveries));
			OnCreated();
		}
		
		[Column(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="TinyInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public byte ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[Column(Storage="_Name", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[Association(Name="DiscoveryType_AllowedDataType", Storage="_AllowedDataTypes", ThisKey="ID", OtherKey="DiscoveryTypeID")]
		public EntitySet<AllowedDataType> AllowedDataTypes
		{
			get
			{
				return this._AllowedDataTypes;
			}
			set
			{
				this._AllowedDataTypes.Assign(value);
			}
		}
		
		[Association(Name="DiscoveryType_DisallowedAbsoluteUri", Storage="_DisallowedAbsoluteUris", ThisKey="ID", OtherKey="DiscoveryTypeID")]
		public EntitySet<DisallowedAbsoluteUri> DisallowedAbsoluteUris
		{
			get
			{
				return this._DisallowedAbsoluteUris;
			}
			set
			{
				this._DisallowedAbsoluteUris.Assign(value);
			}
		}
		
		[Association(Name="DiscoveryType_Domains_Discovery", Storage="_Domains_Discoveries", ThisKey="ID", OtherKey="DiscoveryTypeID")]
		public EntitySet<Domains_Discovery> Domains_Discoveries
		{
			get
			{
				return this._Domains_Discoveries;
			}
			set
			{
				this._Domains_Discoveries.Assign(value);
			}
		}
		
		[Association(Name="DiscoveryType_Extensions_Discovery", Storage="_Extensions_Discoveries", ThisKey="ID", OtherKey="DiscoveryTypeID")]
		public EntitySet<Extensions_Discovery> Extensions_Discoveries
		{
			get
			{
				return this._Extensions_Discoveries;
			}
			set
			{
				this._Extensions_Discoveries.Assign(value);
			}
		}
		
		[Association(Name="DiscoveryType_Hosts_Discovery", Storage="_Hosts_Discoveries", ThisKey="ID", OtherKey="DiscoveryTypeID")]
		public EntitySet<Hosts_Discovery> Hosts_Discoveries
		{
			get
			{
				return this._Hosts_Discoveries;
			}
			set
			{
				this._Hosts_Discoveries.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_AllowedDataTypes(AllowedDataType entity)
		{
			this.SendPropertyChanging();
			entity.DiscoveryType = this;
		}
		
		private void detach_AllowedDataTypes(AllowedDataType entity)
		{
			this.SendPropertyChanging();
			entity.DiscoveryType = null;
		}
		
		private void attach_DisallowedAbsoluteUris(DisallowedAbsoluteUri entity)
		{
			this.SendPropertyChanging();
			entity.DiscoveryType = this;
		}
		
		private void detach_DisallowedAbsoluteUris(DisallowedAbsoluteUri entity)
		{
			this.SendPropertyChanging();
			entity.DiscoveryType = null;
		}
		
		private void attach_Domains_Discoveries(Domains_Discovery entity)
		{
			this.SendPropertyChanging();
			entity.DiscoveryType = this;
		}
		
		private void detach_Domains_Discoveries(Domains_Discovery entity)
		{
			this.SendPropertyChanging();
			entity.DiscoveryType = null;
		}
		
		private void attach_Extensions_Discoveries(Extensions_Discovery entity)
		{
			this.SendPropertyChanging();
			entity.DiscoveryType = this;
		}
		
		private void detach_Extensions_Discoveries(Extensions_Discovery entity)
		{
			this.SendPropertyChanging();
			entity.DiscoveryType = null;
		}
		
		private void attach_Hosts_Discoveries(Hosts_Discovery entity)
		{
			this.SendPropertyChanging();
			entity.DiscoveryType = this;
		}
		
		private void detach_Hosts_Discoveries(Hosts_Discovery entity)
		{
			this.SendPropertyChanging();
			entity.DiscoveryType = null;
		}
	}
	
	[Table(Name="dbo.Documents")]
	public partial class Document : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ID;
		
		private byte _DocumentTypeID;
		
		private long _WebPageID;
		
		private double _Weight;
		
		private System.Data.Linq.Binary _Field01;
		
		private System.Data.Linq.Binary _Field02;
		
		private System.Data.Linq.Binary _Field03;
		
		private System.Data.Linq.Binary _Field04;
		
		private System.Data.Linq.Binary _Field05;
		
		private System.Data.Linq.Binary _Field06;
		
		private System.Data.Linq.Binary _Field07;
		
		private System.Data.Linq.Binary _Field08;
		
		private System.Data.Linq.Binary _Field09;
		
		private System.Data.Linq.Binary _Field10;
		
		private System.Data.Linq.Binary _Field11;
		
		private System.Data.Linq.Binary _Field12;
		
		private System.Data.Linq.Binary _Field13;
		
		private System.Data.Linq.Binary _Field14;
		
		private System.Data.Linq.Binary _Field15;
		
		private System.Data.Linq.Binary _Field16;
		
		private System.Data.Linq.Binary _Field17;
		
		private System.Data.Linq.Binary _Field18;
		
		private System.Data.Linq.Binary _Field19;
		
		private System.Data.Linq.Binary _Field20;
		
		private string _FullTextIndexType;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(long value);
    partial void OnIDChanged();
    partial void OnDocumentTypeIDChanging(byte value);
    partial void OnDocumentTypeIDChanged();
    partial void OnWebPageIDChanging(long value);
    partial void OnWebPageIDChanged();
    partial void OnWeightChanging(double value);
    partial void OnWeightChanged();
    partial void OnField01Changing(System.Data.Linq.Binary value);
    partial void OnField01Changed();
    partial void OnField02Changing(System.Data.Linq.Binary value);
    partial void OnField02Changed();
    partial void OnField03Changing(System.Data.Linq.Binary value);
    partial void OnField03Changed();
    partial void OnField04Changing(System.Data.Linq.Binary value);
    partial void OnField04Changed();
    partial void OnField05Changing(System.Data.Linq.Binary value);
    partial void OnField05Changed();
    partial void OnField06Changing(System.Data.Linq.Binary value);
    partial void OnField06Changed();
    partial void OnField07Changing(System.Data.Linq.Binary value);
    partial void OnField07Changed();
    partial void OnField08Changing(System.Data.Linq.Binary value);
    partial void OnField08Changed();
    partial void OnField09Changing(System.Data.Linq.Binary value);
    partial void OnField09Changed();
    partial void OnField10Changing(System.Data.Linq.Binary value);
    partial void OnField10Changed();
    partial void OnField11Changing(System.Data.Linq.Binary value);
    partial void OnField11Changed();
    partial void OnField12Changing(System.Data.Linq.Binary value);
    partial void OnField12Changed();
    partial void OnField13Changing(System.Data.Linq.Binary value);
    partial void OnField13Changed();
    partial void OnField14Changing(System.Data.Linq.Binary value);
    partial void OnField14Changed();
    partial void OnField15Changing(System.Data.Linq.Binary value);
    partial void OnField15Changed();
    partial void OnField16Changing(System.Data.Linq.Binary value);
    partial void OnField16Changed();
    partial void OnField17Changing(System.Data.Linq.Binary value);
    partial void OnField17Changed();
    partial void OnField18Changing(System.Data.Linq.Binary value);
    partial void OnField18Changed();
    partial void OnField19Changing(System.Data.Linq.Binary value);
    partial void OnField19Changed();
    partial void OnField20Changing(System.Data.Linq.Binary value);
    partial void OnField20Changed();
    partial void OnFullTextIndexTypeChanging(string value);
    partial void OnFullTextIndexTypeChanged();
    #endregion
		
		public Document()
		{
			OnCreated();
		}
		
		[Column(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[Column(Storage="_DocumentTypeID", DbType="TinyInt NOT NULL")]
		public byte DocumentTypeID
		{
			get
			{
				return this._DocumentTypeID;
			}
			set
			{
				if ((this._DocumentTypeID != value))
				{
					this.OnDocumentTypeIDChanging(value);
					this.SendPropertyChanging();
					this._DocumentTypeID = value;
					this.SendPropertyChanged("DocumentTypeID");
					this.OnDocumentTypeIDChanged();
				}
			}
		}
		
		[Column(Storage="_WebPageID", DbType="BigInt NOT NULL")]
		public long WebPageID
		{
			get
			{
				return this._WebPageID;
			}
			set
			{
				if ((this._WebPageID != value))
				{
					this.OnWebPageIDChanging(value);
					this.SendPropertyChanging();
					this._WebPageID = value;
					this.SendPropertyChanged("WebPageID");
					this.OnWebPageIDChanged();
				}
			}
		}
		
		[Column(Storage="_Weight", DbType="Float NOT NULL")]
		public double Weight
		{
			get
			{
				return this._Weight;
			}
			set
			{
				if ((this._Weight != value))
				{
					this.OnWeightChanging(value);
					this.SendPropertyChanging();
					this._Weight = value;
					this.SendPropertyChanged("Weight");
					this.OnWeightChanged();
				}
			}
		}
		
		[Column(Storage="_Field01", DbType="VarBinary(MAX)", CanBeNull=true, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary Field01
		{
			get
			{
				return this._Field01;
			}
			set
			{
				if ((this._Field01 != value))
				{
					this.OnField01Changing(value);
					this.SendPropertyChanging();
					this._Field01 = value;
					this.SendPropertyChanged("Field01");
					this.OnField01Changed();
				}
			}
		}
		
		[Column(Storage="_Field02", DbType="VarBinary(MAX)", CanBeNull=true, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary Field02
		{
			get
			{
				return this._Field02;
			}
			set
			{
				if ((this._Field02 != value))
				{
					this.OnField02Changing(value);
					this.SendPropertyChanging();
					this._Field02 = value;
					this.SendPropertyChanged("Field02");
					this.OnField02Changed();
				}
			}
		}
		
		[Column(Storage="_Field03", DbType="VarBinary(MAX)", CanBeNull=true, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary Field03
		{
			get
			{
				return this._Field03;
			}
			set
			{
				if ((this._Field03 != value))
				{
					this.OnField03Changing(value);
					this.SendPropertyChanging();
					this._Field03 = value;
					this.SendPropertyChanged("Field03");
					this.OnField03Changed();
				}
			}
		}
		
		[Column(Storage="_Field04", DbType="VarBinary(MAX)", CanBeNull=true, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary Field04
		{
			get
			{
				return this._Field04;
			}
			set
			{
				if ((this._Field04 != value))
				{
					this.OnField04Changing(value);
					this.SendPropertyChanging();
					this._Field04 = value;
					this.SendPropertyChanged("Field04");
					this.OnField04Changed();
				}
			}
		}
		
		[Column(Storage="_Field05", DbType="VarBinary(MAX)", CanBeNull=true, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary Field05
		{
			get
			{
				return this._Field05;
			}
			set
			{
				if ((this._Field05 != value))
				{
					this.OnField05Changing(value);
					this.SendPropertyChanging();
					this._Field05 = value;
					this.SendPropertyChanged("Field05");
					this.OnField05Changed();
				}
			}
		}
		
		[Column(Storage="_Field06", DbType="VarBinary(MAX)", CanBeNull=true, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary Field06
		{
			get
			{
				return this._Field06;
			}
			set
			{
				if ((this._Field06 != value))
				{
					this.OnField06Changing(value);
					this.SendPropertyChanging();
					this._Field06 = value;
					this.SendPropertyChanged("Field06");
					this.OnField06Changed();
				}
			}
		}
		
		[Column(Storage="_Field07", DbType="VarBinary(MAX)", CanBeNull=true, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary Field07
		{
			get
			{
				return this._Field07;
			}
			set
			{
				if ((this._Field07 != value))
				{
					this.OnField07Changing(value);
					this.SendPropertyChanging();
					this._Field07 = value;
					this.SendPropertyChanged("Field07");
					this.OnField07Changed();
				}
			}
		}
		
		[Column(Storage="_Field08", DbType="VarBinary(MAX)", CanBeNull=true, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary Field08
		{
			get
			{
				return this._Field08;
			}
			set
			{
				if ((this._Field08 != value))
				{
					this.OnField08Changing(value);
					this.SendPropertyChanging();
					this._Field08 = value;
					this.SendPropertyChanged("Field08");
					this.OnField08Changed();
				}
			}
		}
		
		[Column(Storage="_Field09", DbType="VarBinary(MAX)", CanBeNull=true, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary Field09
		{
			get
			{
				return this._Field09;
			}
			set
			{
				if ((this._Field09 != value))
				{
					this.OnField09Changing(value);
					this.SendPropertyChanging();
					this._Field09 = value;
					this.SendPropertyChanged("Field09");
					this.OnField09Changed();
				}
			}
		}
		
		[Column(Storage="_Field10", DbType="VarBinary(MAX)", CanBeNull=true, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary Field10
		{
			get
			{
				return this._Field10;
			}
			set
			{
				if ((this._Field10 != value))
				{
					this.OnField10Changing(value);
					this.SendPropertyChanging();
					this._Field10 = value;
					this.SendPropertyChanged("Field10");
					this.OnField10Changed();
				}
			}
		}
		
		[Column(Storage="_Field11", DbType="VarBinary(MAX)", CanBeNull=true, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary Field11
		{
			get
			{
				return this._Field11;
			}
			set
			{
				if ((this._Field11 != value))
				{
					this.OnField11Changing(value);
					this.SendPropertyChanging();
					this._Field11 = value;
					this.SendPropertyChanged("Field11");
					this.OnField11Changed();
				}
			}
		}
		
		[Column(Storage="_Field12", DbType="VarBinary(MAX)", CanBeNull=true, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary Field12
		{
			get
			{
				return this._Field12;
			}
			set
			{
				if ((this._Field12 != value))
				{
					this.OnField12Changing(value);
					this.SendPropertyChanging();
					this._Field12 = value;
					this.SendPropertyChanged("Field12");
					this.OnField12Changed();
				}
			}
		}
		
		[Column(Storage="_Field13", DbType="VarBinary(MAX)", CanBeNull=true, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary Field13
		{
			get
			{
				return this._Field13;
			}
			set
			{
				if ((this._Field13 != value))
				{
					this.OnField13Changing(value);
					this.SendPropertyChanging();
					this._Field13 = value;
					this.SendPropertyChanged("Field13");
					this.OnField13Changed();
				}
			}
		}
		
		[Column(Storage="_Field14", DbType="VarBinary(MAX)", CanBeNull=true, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary Field14
		{
			get
			{
				return this._Field14;
			}
			set
			{
				if ((this._Field14 != value))
				{
					this.OnField14Changing(value);
					this.SendPropertyChanging();
					this._Field14 = value;
					this.SendPropertyChanged("Field14");
					this.OnField14Changed();
				}
			}
		}
		
		[Column(Storage="_Field15", DbType="VarBinary(MAX)", CanBeNull=true, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary Field15
		{
			get
			{
				return this._Field15;
			}
			set
			{
				if ((this._Field15 != value))
				{
					this.OnField15Changing(value);
					this.SendPropertyChanging();
					this._Field15 = value;
					this.SendPropertyChanged("Field15");
					this.OnField15Changed();
				}
			}
		}
		
		[Column(Storage="_Field16", DbType="VarBinary(MAX)", CanBeNull=true, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary Field16
		{
			get
			{
				return this._Field16;
			}
			set
			{
				if ((this._Field16 != value))
				{
					this.OnField16Changing(value);
					this.SendPropertyChanging();
					this._Field16 = value;
					this.SendPropertyChanged("Field16");
					this.OnField16Changed();
				}
			}
		}
		
		[Column(Storage="_Field17", DbType="VarBinary(MAX)", CanBeNull=true, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary Field17
		{
			get
			{
				return this._Field17;
			}
			set
			{
				if ((this._Field17 != value))
				{
					this.OnField17Changing(value);
					this.SendPropertyChanging();
					this._Field17 = value;
					this.SendPropertyChanged("Field17");
					this.OnField17Changed();
				}
			}
		}
		
		[Column(Storage="_Field18", DbType="VarBinary(MAX)", CanBeNull=true, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary Field18
		{
			get
			{
				return this._Field18;
			}
			set
			{
				if ((this._Field18 != value))
				{
					this.OnField18Changing(value);
					this.SendPropertyChanging();
					this._Field18 = value;
					this.SendPropertyChanged("Field18");
					this.OnField18Changed();
				}
			}
		}
		
		[Column(Storage="_Field19", DbType="VarBinary(MAX)", CanBeNull=true, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary Field19
		{
			get
			{
				return this._Field19;
			}
			set
			{
				if ((this._Field19 != value))
				{
					this.OnField19Changing(value);
					this.SendPropertyChanging();
					this._Field19 = value;
					this.SendPropertyChanged("Field19");
					this.OnField19Changed();
				}
			}
		}
		
		[Column(Storage="_Field20", DbType="VarBinary(MAX)", CanBeNull=true, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary Field20
		{
			get
			{
				return this._Field20;
			}
			set
			{
				if ((this._Field20 != value))
				{
					this.OnField20Changing(value);
					this.SendPropertyChanging();
					this._Field20 = value;
					this.SendPropertyChanged("Field20");
					this.OnField20Changed();
				}
			}
		}
		
		[Column(Storage="_FullTextIndexType", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string FullTextIndexType
		{
			get
			{
				return this._FullTextIndexType;
			}
			set
			{
				if ((this._FullTextIndexType != value))
				{
					this.OnFullTextIndexTypeChanging(value);
					this.SendPropertyChanging();
					this._FullTextIndexType = value;
					this.SendPropertyChanged("FullTextIndexType");
					this.OnFullTextIndexTypeChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.DocumentTypes")]
	public partial class DocumentType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private byte _ID;
		
		private string _Name;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(byte value);
    partial void OnIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    #endregion
		
		public DocumentType()
		{
			OnCreated();
		}
		
		[Column(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="TinyInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public byte ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[Column(Storage="_Name", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.Domains")]
	public partial class Domain : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _ExtensionID;
		
		private string _Domain1;
		
		private EntitySet<Domains_Discovery> _Domains_Discoveries;
		
		private EntitySet<Host> _Hosts;
		
		private EntityRef<DisallowedAbsoluteUris_COUNT_BY_DOMAIN> _DisallowedAbsoluteUris_COUNT_BY_DOMAIN;
		
		private EntityRef<DisallowedAbsoluteUris_MOST_POPULAR_DOMAINS_BY_ABSOLUTEURI> _DisallowedAbsoluteUris_MOST_POPULAR_DOMAINS_BY_ABSOLUTEURI;
		
		private EntityRef<DisallowedAbsoluteUris_MOST_POPULAR_DOMAINS_BY_DOMAIN> _DisallowedAbsoluteUris_MOST_POPULAR_DOMAINS_BY_DOMAIN;
		
		private EntityRef<DisallowedAbsoluteUris_MOST_POPULAR_DOMAINS_BY_EXTENSION> _DisallowedAbsoluteUris_MOST_POPULAR_DOMAINS_BY_EXTENSION;
		
		private EntityRef<DisallowedAbsoluteUris_MOST_POPULAR_DOMAINS_BY_HOST> _DisallowedAbsoluteUris_MOST_POPULAR_DOMAINS_BY_HOST;
		
		private EntityRef<DisallowedAbsoluteUris_MOST_POPULAR_DOMAINS_BY_SCHEME> _DisallowedAbsoluteUris_MOST_POPULAR_DOMAINS_BY_SCHEME;
		
		private EntityRef<EmailAddresses_COUNT_BY_DOMAIN> _EmailAddresses_COUNT_BY_DOMAIN;
		
		private EntityRef<EmailAddresses_MOST_POPULAR_DOMAINS_BY_ABSOLUTEURI> _EmailAddresses_MOST_POPULAR_DOMAINS_BY_ABSOLUTEURI;
		
		private EntityRef<EmailAddresses_MOST_POPULAR_DOMAINS_BY_DOMAIN> _EmailAddresses_MOST_POPULAR_DOMAINS_BY_DOMAIN;
		
		private EntityRef<EmailAddresses_MOST_POPULAR_DOMAINS_BY_EXTENSION> _EmailAddresses_MOST_POPULAR_DOMAINS_BY_EXTENSION;
		
		private EntityRef<EmailAddresses_MOST_POPULAR_DOMAINS_BY_HOST> _EmailAddresses_MOST_POPULAR_DOMAINS_BY_HOST;
		
		private EntityRef<EmailAddresses_MOST_POPULAR_DOMAINS_BY_SCHEME> _EmailAddresses_MOST_POPULAR_DOMAINS_BY_SCHEME;
		
		private EntityRef<Exceptions_COUNT_BY_DOMAIN1> _Exceptions_COUNT_BY_DOMAIN1;
		
		private EntityRef<Exceptions_COUNT_BY_DOMAIN2> _Exceptions_COUNT_BY_DOMAIN2;
		
		private EntityRef<Files_COUNT_BY_DOMAIN> _Files_COUNT_BY_DOMAIN;
		
		private EntityRef<Files_MOST_POPULAR_DOMAINS_BY_ABSOLUTEURI> _Files_MOST_POPULAR_DOMAINS_BY_ABSOLUTEURI;
		
		private EntityRef<Files_MOST_POPULAR_DOMAINS_BY_DOMAIN> _Files_MOST_POPULAR_DOMAINS_BY_DOMAIN;
		
		private EntityRef<Files_MOST_POPULAR_DOMAINS_BY_EXTENSION> _Files_MOST_POPULAR_DOMAINS_BY_EXTENSION;
		
		private EntityRef<Files_MOST_POPULAR_DOMAINS_BY_HOST> _Files_MOST_POPULAR_DOMAINS_BY_HOST;
		
		private EntityRef<Files_MOST_POPULAR_DOMAINS_BY_SCHEME> _Files_MOST_POPULAR_DOMAINS_BY_SCHEME;
		
		private EntityRef<HyperLinks_COUNT_BY_DOMAIN> _HyperLinks_COUNT_BY_DOMAIN;
		
		private EntityRef<HyperLinks_MOST_POPULAR_DOMAINS_BY_ABSOLUTEURI> _HyperLinks_MOST_POPULAR_DOMAINS_BY_ABSOLUTEURI;
		
		private EntityRef<HyperLinks_MOST_POPULAR_DOMAINS_BY_DOMAIN> _HyperLinks_MOST_POPULAR_DOMAINS_BY_DOMAIN;
		
		private EntityRef<HyperLinks_MOST_POPULAR_DOMAINS_BY_EXTENSION> _HyperLinks_MOST_POPULAR_DOMAINS_BY_EXTENSION;
		
		private EntityRef<HyperLinks_MOST_POPULAR_DOMAINS_BY_HOST> _HyperLinks_MOST_POPULAR_DOMAINS_BY_HOST;
		
		private EntityRef<HyperLinks_MOST_POPULAR_DOMAINS_BY_SCHEME> _HyperLinks_MOST_POPULAR_DOMAINS_BY_SCHEME;
		
		private EntityRef<Images_COUNT_BY_DOMAIN> _Images_COUNT_BY_DOMAIN;
		
		private EntityRef<Images_MOST_POPULAR_DOMAINS_BY_ABSOLUTEURI> _Images_MOST_POPULAR_DOMAINS_BY_ABSOLUTEURI;
		
		private EntityRef<Images_MOST_POPULAR_DOMAINS_BY_DOMAIN> _Images_MOST_POPULAR_DOMAINS_BY_DOMAIN;
		
		private EntityRef<Images_MOST_POPULAR_DOMAINS_BY_EXTENSION> _Images_MOST_POPULAR_DOMAINS_BY_EXTENSION;
		
		private EntityRef<Images_MOST_POPULAR_DOMAINS_BY_HOST> _Images_MOST_POPULAR_DOMAINS_BY_HOST;
		
		private EntityRef<Images_MOST_POPULAR_DOMAINS_BY_SCHEME> _Images_MOST_POPULAR_DOMAINS_BY_SCHEME;
		
		private EntityRef<WebPages_COUNT_BY_DOMAIN> _WebPages_COUNT_BY_DOMAIN;
		
		private EntityRef<Extension> _Extension;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnExtensionIDChanging(int value);
    partial void OnExtensionIDChanged();
    partial void OnDomain1Changing(string value);
    partial void OnDomain1Changed();
    #endregion
		
		public Domain()
		{
			this._Domains_Discoveries = new EntitySet<Domains_Discovery>(new Action<Domains_Discovery>(this.attach_Domains_Discoveries), new Action<Domains_Discovery>(this.detach_Domains_Discoveries));
			this._Hosts = new EntitySet<Host>(new Action<Host>(this.attach_Hosts), new Action<Host>(this.detach_Hosts));
			this._DisallowedAbsoluteUris_COUNT_BY_DOMAIN = default(EntityRef<DisallowedAbsoluteUris_COUNT_BY_DOMAIN>);
			this._DisallowedAbsoluteUris_MOST_POPULAR_DOMAINS_BY_ABSOLUTEURI = default(EntityRef<DisallowedAbsoluteUris_MOST_POPULAR_DOMAINS_BY_ABSOLUTEURI>);
			this._DisallowedAbsoluteUris_MOST_POPULAR_DOMAINS_BY_DOMAIN = default(EntityRef<DisallowedAbsoluteUris_MOST_POPULAR_DOMAINS_BY_DOMAIN>);
			this._DisallowedAbsoluteUris_MOST_POPULAR_DOMAINS_BY_EXTENSION = default(EntityRef<DisallowedAbsoluteUris_MOST_POPULAR_DOMAINS_BY_EXTENSION>);
			this._DisallowedAbsoluteUris_MOST_POPULAR_DOMAINS_BY_HOST = default(EntityRef<DisallowedAbsoluteUris_MOST_POPULAR_DOMAINS_BY_HOST>);
			this._DisallowedAbsoluteUris_MOST_POPULAR_DOMAINS_BY_SCHEME = default(EntityRef<DisallowedAbsoluteUris_MOST_POPULAR_DOMAINS_BY_SCHEME>);
			this._EmailAddresses_COUNT_BY_DOMAIN = default(EntityRef<EmailAddresses_COUNT_BY_DOMAIN>);
			this._EmailAddresses_MOST_POPULAR_DOMAINS_BY_ABSOLUTEURI = default(EntityRef<EmailAddresses_MOST_POPULAR_DOMAINS_BY_ABSOLUTEURI>);
			this._EmailAddresses_MOST_POPULAR_DOMAINS_BY_DOMAIN = default(EntityRef<EmailAddresses_MOST_POPULAR_DOMAINS_BY_DOMAIN>);
			this._EmailAddresses_MOST_POPULAR_DOMAINS_BY_EXTENSION = default(EntityRef<EmailAddresses_MOST_POPULAR_DOMAINS_BY_EXTENSION>);
			this._EmailAddresses_MOST_POPULAR_DOMAINS_BY_HOST = default(EntityRef<EmailAddresses_MOST_POPULAR_DOMAINS_BY_HOST>);
			this._EmailAddresses_MOST_POPULAR_DOMAINS_BY_SCHEME = default(EntityRef<EmailAddresses_MOST_POPULAR_DOMAINS_BY_SCHEME>);
			this._Exceptions_COUNT_BY_DOMAIN1 = default(EntityRef<Exceptions_COUNT_BY_DOMAIN1>);
			this._Exceptions_COUNT_BY_DOMAIN2 = default(EntityRef<Exceptions_COUNT_BY_DOMAIN2>);
			this._Files_COUNT_BY_DOMAIN = default(EntityRef<Files_COUNT_BY_DOMAIN>);
			this._Files_MOST_POPULAR_DOMAINS_BY_ABSOLUTEURI = default(EntityRef<Files_MOST_POPULAR_DOMAINS_BY_ABSOLUTEURI>);
			this._Files_MOST_POPULAR_DOMAINS_BY_DOMAIN = default(EntityRef<Files_MOST_POPULAR_DOMAINS_BY_DOMAIN>);
			this._Files_MOST_POPULAR_DOMAINS_BY_EXTENSION = default(EntityRef<Files_MOST_POPULAR_DOMAINS_BY_EXTENSION>);
			this._Files_MOST_POPULAR_DOMAINS_BY_HOST = default(EntityRef<Files_MOST_POPULAR_DOMAINS_BY_HOST>);
			this._Files_MOST_POPULAR_DOMAINS_BY_SCHEME = default(EntityRef<Files_MOST_POPULAR_DOMAINS_BY_SCHEME>);
			this._HyperLinks_COUNT_BY_DOMAIN = default(EntityRef<HyperLinks_COUNT_BY_DOMAIN>);
			this._HyperLinks_MOST_POPULAR_DOMAINS_BY_ABSOLUTEURI = default(EntityRef<HyperLinks_MOST_POPULAR_DOMAINS_BY_ABSOLUTEURI>);
			this._HyperLinks_MOST_POPULAR_DOMAINS_BY_DOMAIN = default(EntityRef<HyperLinks_MOST_POPULAR_DOMAINS_BY_DOMAIN>);
			this._HyperLinks_MOST_POPULAR_DOMAINS_BY_EXTENSION = default(EntityRef<HyperLinks_MOST_POPULAR_DOMAINS_BY_EXTENSION>);
			this._HyperLinks_MOST_POPULAR_DOMAINS_BY_HOST = default(EntityRef<HyperLinks_MOST_POPULAR_DOMAINS_BY_HOST>);
			this._HyperLinks_MOST_POPULAR_DOMAINS_BY_SCHEME = default(EntityRef<HyperLinks_MOST_POPULAR_DOMAINS_BY_SCHEME>);
			this._Images_COUNT_BY_DOMAIN = default(EntityRef<Images_COUNT_BY_DOMAIN>);
			this._Images_MOST_POPULAR_DOMAINS_BY_ABSOLUTEURI = default(EntityRef<Images_MOST_POPULAR_DOMAINS_BY_ABSOLUTEURI>);
			this._Images_MOST_POPULAR_DOMAINS_BY_DOMAIN = default(EntityRef<Images_MOST_POPULAR_DOMAINS_BY_DOMAIN>);
			this._Images_MOST_POPULAR_DOMAINS_BY_EXTENSION = default(EntityRef<Images_MOST_POPULAR_DOMAINS_BY_EXTENSION>);
			this._Images_MOST_POPULAR_DOMAINS_BY_HOST = default(EntityRef<Images_MOST_POPULAR_DOMAINS_BY_HOST>);
			this._Images_MOST_POPULAR_DOMAINS_BY_SCHEME = default(EntityRef<Images_MOST_POPULAR_DOMAINS_BY_SCHEME>);
			this._WebPages_COUNT_BY_DOMAIN = default(EntityRef<WebPages_COUNT_BY_DOMAIN>);
			this._Extension = default(EntityRef<Extension>);
			OnCreated();
		}
		
		[Column(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[Column(Storage="_ExtensionID", DbType="Int NOT NULL")]
		public int ExtensionID
		{
			get
			{
				return this._ExtensionID;
			}
			set
			{
				if ((this._ExtensionID != value))
				{
					if (this._Extension.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnExtensionIDChanging(value);
					this.SendPropertyChanging();
					this._ExtensionID = value;
					this.SendPropertyChanged("ExtensionID");
					this.OnExtensionIDChanged();
				}
			}
		}
		
		[Column(Name="Domain", Storage="_Domain1", DbType="VarChar(884) NOT NULL", CanBeNull=false)]
		public string Domain1
		{
			get
			{
				return this._Domain1;
			}
			set
			{
				if ((this._Domain1 != value))
				{
					this.OnDomain1Changing(value);
					this.SendPropertyChanging();
					this._Domain1 = value;
					this.SendPropertyChanged("Domain1");
					this.OnDomain1Changed();
				}
			}
		}
		
		[Association(Name="Domain_Domains_Discovery", Storage="_Domains_Discoveries", ThisKey="ID", OtherKey="DomainID")]
		public EntitySet<Domains_Discovery> Domains_Discoveries
		{
			get
			{
				return this._Domains_Discoveries;
			}
			set
			{
				this._Domains_Discoveries.Assign(value);
			}
		}
		
		[Association(Name="Domain_Host", Storage="_Hosts", ThisKey="ID", OtherKey="DomainID")]
		public EntitySet<Host> Hosts
		{
			get
			{
				return this._Hosts;
			}
			set
			{
				this._Hosts.Assign(value);
			}
		}
		
		[Association(Name="Domain_DisallowedAbsoluteUris_COUNT_BY_DOMAIN", Storage="_DisallowedAbsoluteUris_COUNT_BY_DOMAIN", ThisKey="ID", OtherKey="DomainID", IsUnique=true, IsForeignKey=false)]
		public DisallowedAbsoluteUris_COUNT_BY_DOMAIN DisallowedAbsoluteUris_COUNT_BY_DOMAIN
		{
			get
			{
				return this._DisallowedAbsoluteUris_COUNT_BY_DOMAIN.Entity;
			}
			set
			{
				DisallowedAbsoluteUris_COUNT_BY_DOMAIN previousValue = this._DisallowedAbsoluteUris_COUNT_BY_DOMAIN.Entity;
				if (((previousValue != value) 
							|| (this._DisallowedAbsoluteUris_COUNT_BY_DOMAIN.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DisallowedAbsoluteUris_COUNT_BY_DOMAIN.Entity = null;
						previousValue.Domain = null;
					}
					this._DisallowedAbsoluteUris_COUNT_BY_DOMAIN.Entity = value;
					if ((value != null))
					{
						value.Domain = this;
					}
					this.SendPropertyChanged("DisallowedAbsoluteUris_COUNT_BY_DOMAIN");
				}
			}
		}
		
		[Association(Name="Domain_DisallowedAbsoluteUris_MOST_POPULAR_DOMAINS_BY_ABSOLUTEURI", Storage="_DisallowedAbsoluteUris_MOST_POPULAR_DOMAINS_BY_ABSOLUTEURI", ThisKey="ID", OtherKey="DomainID", IsUnique=true, IsForeignKey=false)]
		public DisallowedAbsoluteUris_MOST_POPULAR_DOMAINS_BY_ABSOLUTEURI DisallowedAbsoluteUris_MOST_POPULAR_DOMAINS_BY_ABSOLUTEURI
		{
			get
			{
				return this._DisallowedAbsoluteUris_MOST_POPULAR_DOMAINS_BY_ABSOLUTEURI.Entity;
			}
			set
			{
				DisallowedAbsoluteUris_MOST_POPULAR_DOMAINS_BY_ABSOLUTEURI previousValue = this._DisallowedAbsoluteUris_MOST_POPULAR_DOMAINS_BY_ABSOLUTEURI.Entity;
				if (((previousValue != value) 
							|| (this._DisallowedAbsoluteUris_MOST_POPULAR_DOMAINS_BY_ABSOLUTEURI.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DisallowedAbsoluteUris_MOST_POPULAR_DOMAINS_BY_ABSOLUTEURI.Entity = null;
						previousValue.Domain = null;
					}
					this._DisallowedAbsoluteUris_MOST_POPULAR_DOMAINS_BY_ABSOLUTEURI.Entity = value;
					if ((value != null))
					{
						value.Domain = this;
					}
					this.SendPropertyChanged("DisallowedAbsoluteUris_MOST_POPULAR_DOMAINS_BY_ABSOLUTEURI");
				}
			}
		}
		
		[Association(Name="Domain_DisallowedAbsoluteUris_MOST_POPULAR_DOMAINS_BY_DOMAIN", Storage="_DisallowedAbsoluteUris_MOST_POPULAR_DOMAINS_BY_DOMAIN", ThisKey="ID", OtherKey="DomainID", IsUnique=true, IsForeignKey=false)]
		public DisallowedAbsoluteUris_MOST_POPULAR_DOMAINS_BY_DOMAIN DisallowedAbsoluteUris_MOST_POPULAR_DOMAINS_BY_DOMAIN
		{
			get
			{
				return this._DisallowedAbsoluteUris_MOST_POPULAR_DOMAINS_BY_DOMAIN.Entity;
			}
			set
			{
				DisallowedAbsoluteUris_MOST_POPULAR_DOMAINS_BY_DOMAIN previousValue = this._DisallowedAbsoluteUris_MOST_POPULAR_DOMAINS_BY_DOMAIN.Entity;
				if (((previousValue != value) 
							|| (this._DisallowedAbsoluteUris_MOST_POPULAR_DOMAINS_BY_DOMAIN.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DisallowedAbsoluteUris_MOST_POPULAR_DOMAINS_BY_DOMAIN.Entity = null;
						previousValue.Domain = null;
					}
					this._DisallowedAbsoluteUris_MOST_POPULAR_DOMAINS_BY_DOMAIN.Entity = value;
					if ((value != null))
					{
						value.Domain = this;
					}
					this.SendPropertyChanged("DisallowedAbsoluteUris_MOST_POPULAR_DOMAINS_BY_DOMAIN");
				}
			}
		}
		
		[Association(Name="Domain_DisallowedAbsoluteUris_MOST_POPULAR_DOMAINS_BY_EXTENSION", Storage="_DisallowedAbsoluteUris_MOST_POPULAR_DOMAINS_BY_EXTENSION", ThisKey="ID", OtherKey="DomainID", IsUnique=true, IsForeignKey=false)]
		public DisallowedAbsoluteUris_MOST_POPULAR_DOMAINS_BY_EXTENSION DisallowedAbsoluteUris_MOST_POPULAR_DOMAINS_BY_EXTENSION
		{
			get
			{
				return this._DisallowedAbsoluteUris_MOST_POPULAR_DOMAINS_BY_EXTENSION.Entity;
			}
			set
			{
				DisallowedAbsoluteUris_MOST_POPULAR_DOMAINS_BY_EXTENSION previousValue = this._DisallowedAbsoluteUris_MOST_POPULAR_DOMAINS_BY_EXTENSION.Entity;
				if (((previousValue != value) 
							|| (this._DisallowedAbsoluteUris_MOST_POPULAR_DOMAINS_BY_EXTENSION.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DisallowedAbsoluteUris_MOST_POPULAR_DOMAINS_BY_EXTENSION.Entity = null;
						previousValue.Domain = null;
					}
					this._DisallowedAbsoluteUris_MOST_POPULAR_DOMAINS_BY_EXTENSION.Entity = value;
					if ((value != null))
					{
						value.Domain = this;
					}
					this.SendPropertyChanged("DisallowedAbsoluteUris_MOST_POPULAR_DOMAINS_BY_EXTENSION");
				}
			}
		}
		
		[Association(Name="Domain_DisallowedAbsoluteUris_MOST_POPULAR_DOMAINS_BY_HOST", Storage="_DisallowedAbsoluteUris_MOST_POPULAR_DOMAINS_BY_HOST", ThisKey="ID", OtherKey="DomainID", IsUnique=true, IsForeignKey=false)]
		public DisallowedAbsoluteUris_MOST_POPULAR_DOMAINS_BY_HOST DisallowedAbsoluteUris_MOST_POPULAR_DOMAINS_BY_HOST
		{
			get
			{
				return this._DisallowedAbsoluteUris_MOST_POPULAR_DOMAINS_BY_HOST.Entity;
			}
			set
			{
				DisallowedAbsoluteUris_MOST_POPULAR_DOMAINS_BY_HOST previousValue = this._DisallowedAbsoluteUris_MOST_POPULAR_DOMAINS_BY_HOST.Entity;
				if (((previousValue != value) 
							|| (this._DisallowedAbsoluteUris_MOST_POPULAR_DOMAINS_BY_HOST.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DisallowedAbsoluteUris_MOST_POPULAR_DOMAINS_BY_HOST.Entity = null;
						previousValue.Domain = null;
					}
					this._DisallowedAbsoluteUris_MOST_POPULAR_DOMAINS_BY_HOST.Entity = value;
					if ((value != null))
					{
						value.Domain = this;
					}
					this.SendPropertyChanged("DisallowedAbsoluteUris_MOST_POPULAR_DOMAINS_BY_HOST");
				}
			}
		}
		
		[Association(Name="Domain_DisallowedAbsoluteUris_MOST_POPULAR_DOMAINS_BY_SCHEME", Storage="_DisallowedAbsoluteUris_MOST_POPULAR_DOMAINS_BY_SCHEME", ThisKey="ID", OtherKey="DomainID", IsUnique=true, IsForeignKey=false)]
		public DisallowedAbsoluteUris_MOST_POPULAR_DOMAINS_BY_SCHEME DisallowedAbsoluteUris_MOST_POPULAR_DOMAINS_BY_SCHEME
		{
			get
			{
				return this._DisallowedAbsoluteUris_MOST_POPULAR_DOMAINS_BY_SCHEME.Entity;
			}
			set
			{
				DisallowedAbsoluteUris_MOST_POPULAR_DOMAINS_BY_SCHEME previousValue = this._DisallowedAbsoluteUris_MOST_POPULAR_DOMAINS_BY_SCHEME.Entity;
				if (((previousValue != value) 
							|| (this._DisallowedAbsoluteUris_MOST_POPULAR_DOMAINS_BY_SCHEME.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DisallowedAbsoluteUris_MOST_POPULAR_DOMAINS_BY_SCHEME.Entity = null;
						previousValue.Domain = null;
					}
					this._DisallowedAbsoluteUris_MOST_POPULAR_DOMAINS_BY_SCHEME.Entity = value;
					if ((value != null))
					{
						value.Domain = this;
					}
					this.SendPropertyChanged("DisallowedAbsoluteUris_MOST_POPULAR_DOMAINS_BY_SCHEME");
				}
			}
		}
		
		[Association(Name="Domain_EmailAddresses_COUNT_BY_DOMAIN", Storage="_EmailAddresses_COUNT_BY_DOMAIN", ThisKey="ID", OtherKey="DomainID", IsUnique=true, IsForeignKey=false)]
		public EmailAddresses_COUNT_BY_DOMAIN EmailAddresses_COUNT_BY_DOMAIN
		{
			get
			{
				return this._EmailAddresses_COUNT_BY_DOMAIN.Entity;
			}
			set
			{
				EmailAddresses_COUNT_BY_DOMAIN previousValue = this._EmailAddresses_COUNT_BY_DOMAIN.Entity;
				if (((previousValue != value) 
							|| (this._EmailAddresses_COUNT_BY_DOMAIN.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._EmailAddresses_COUNT_BY_DOMAIN.Entity = null;
						previousValue.Domain = null;
					}
					this._EmailAddresses_COUNT_BY_DOMAIN.Entity = value;
					if ((value != null))
					{
						value.Domain = this;
					}
					this.SendPropertyChanged("EmailAddresses_COUNT_BY_DOMAIN");
				}
			}
		}
		
		[Association(Name="Domain_EmailAddresses_MOST_POPULAR_DOMAINS_BY_ABSOLUTEURI", Storage="_EmailAddresses_MOST_POPULAR_DOMAINS_BY_ABSOLUTEURI", ThisKey="ID", OtherKey="DomainID", IsUnique=true, IsForeignKey=false)]
		public EmailAddresses_MOST_POPULAR_DOMAINS_BY_ABSOLUTEURI EmailAddresses_MOST_POPULAR_DOMAINS_BY_ABSOLUTEURI
		{
			get
			{
				return this._EmailAddresses_MOST_POPULAR_DOMAINS_BY_ABSOLUTEURI.Entity;
			}
			set
			{
				EmailAddresses_MOST_POPULAR_DOMAINS_BY_ABSOLUTEURI previousValue = this._EmailAddresses_MOST_POPULAR_DOMAINS_BY_ABSOLUTEURI.Entity;
				if (((previousValue != value) 
							|| (this._EmailAddresses_MOST_POPULAR_DOMAINS_BY_ABSOLUTEURI.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._EmailAddresses_MOST_POPULAR_DOMAINS_BY_ABSOLUTEURI.Entity = null;
						previousValue.Domain = null;
					}
					this._EmailAddresses_MOST_POPULAR_DOMAINS_BY_ABSOLUTEURI.Entity = value;
					if ((value != null))
					{
						value.Domain = this;
					}
					this.SendPropertyChanged("EmailAddresses_MOST_POPULAR_DOMAINS_BY_ABSOLUTEURI");
				}
			}
		}
		
		[Association(Name="Domain_EmailAddresses_MOST_POPULAR_DOMAINS_BY_DOMAIN", Storage="_EmailAddresses_MOST_POPULAR_DOMAINS_BY_DOMAIN", ThisKey="ID", OtherKey="DomainID", IsUnique=true, IsForeignKey=false)]
		public EmailAddresses_MOST_POPULAR_DOMAINS_BY_DOMAIN EmailAddresses_MOST_POPULAR_DOMAINS_BY_DOMAIN
		{
			get
			{
				return this._EmailAddresses_MOST_POPULAR_DOMAINS_BY_DOMAIN.Entity;
			}
			set
			{
				EmailAddresses_MOST_POPULAR_DOMAINS_BY_DOMAIN previousValue = this._EmailAddresses_MOST_POPULAR_DOMAINS_BY_DOMAIN.Entity;
				if (((previousValue != value) 
							|| (this._EmailAddresses_MOST_POPULAR_DOMAINS_BY_DOMAIN.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._EmailAddresses_MOST_POPULAR_DOMAINS_BY_DOMAIN.Entity = null;
						previousValue.Domain = null;
					}
					this._EmailAddresses_MOST_POPULAR_DOMAINS_BY_DOMAIN.Entity = value;
					if ((value != null))
					{
						value.Domain = this;
					}
					this.SendPropertyChanged("EmailAddresses_MOST_POPULAR_DOMAINS_BY_DOMAIN");
				}
			}
		}
		
		[Association(Name="Domain_EmailAddresses_MOST_POPULAR_DOMAINS_BY_EXTENSION", Storage="_EmailAddresses_MOST_POPULAR_DOMAINS_BY_EXTENSION", ThisKey="ID", OtherKey="DomainID", IsUnique=true, IsForeignKey=false)]
		public EmailAddresses_MOST_POPULAR_DOMAINS_BY_EXTENSION EmailAddresses_MOST_POPULAR_DOMAINS_BY_EXTENSION
		{
			get
			{
				return this._EmailAddresses_MOST_POPULAR_DOMAINS_BY_EXTENSION.Entity;
			}
			set
			{
				EmailAddresses_MOST_POPULAR_DOMAINS_BY_EXTENSION previousValue = this._EmailAddresses_MOST_POPULAR_DOMAINS_BY_EXTENSION.Entity;
				if (((previousValue != value) 
							|| (this._EmailAddresses_MOST_POPULAR_DOMAINS_BY_EXTENSION.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._EmailAddresses_MOST_POPULAR_DOMAINS_BY_EXTENSION.Entity = null;
						previousValue.Domain = null;
					}
					this._EmailAddresses_MOST_POPULAR_DOMAINS_BY_EXTENSION.Entity = value;
					if ((value != null))
					{
						value.Domain = this;
					}
					this.SendPropertyChanged("EmailAddresses_MOST_POPULAR_DOMAINS_BY_EXTENSION");
				}
			}
		}
		
		[Association(Name="Domain_EmailAddresses_MOST_POPULAR_DOMAINS_BY_HOST", Storage="_EmailAddresses_MOST_POPULAR_DOMAINS_BY_HOST", ThisKey="ID", OtherKey="DomainID", IsUnique=true, IsForeignKey=false)]
		public EmailAddresses_MOST_POPULAR_DOMAINS_BY_HOST EmailAddresses_MOST_POPULAR_DOMAINS_BY_HOST
		{
			get
			{
				return this._EmailAddresses_MOST_POPULAR_DOMAINS_BY_HOST.Entity;
			}
			set
			{
				EmailAddresses_MOST_POPULAR_DOMAINS_BY_HOST previousValue = this._EmailAddresses_MOST_POPULAR_DOMAINS_BY_HOST.Entity;
				if (((previousValue != value) 
							|| (this._EmailAddresses_MOST_POPULAR_DOMAINS_BY_HOST.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._EmailAddresses_MOST_POPULAR_DOMAINS_BY_HOST.Entity = null;
						previousValue.Domain = null;
					}
					this._EmailAddresses_MOST_POPULAR_DOMAINS_BY_HOST.Entity = value;
					if ((value != null))
					{
						value.Domain = this;
					}
					this.SendPropertyChanged("EmailAddresses_MOST_POPULAR_DOMAINS_BY_HOST");
				}
			}
		}
		
		[Association(Name="Domain_EmailAddresses_MOST_POPULAR_DOMAINS_BY_SCHEME", Storage="_EmailAddresses_MOST_POPULAR_DOMAINS_BY_SCHEME", ThisKey="ID", OtherKey="DomainID", IsUnique=true, IsForeignKey=false)]
		public EmailAddresses_MOST_POPULAR_DOMAINS_BY_SCHEME EmailAddresses_MOST_POPULAR_DOMAINS_BY_SCHEME
		{
			get
			{
				return this._EmailAddresses_MOST_POPULAR_DOMAINS_BY_SCHEME.Entity;
			}
			set
			{
				EmailAddresses_MOST_POPULAR_DOMAINS_BY_SCHEME previousValue = this._EmailAddresses_MOST_POPULAR_DOMAINS_BY_SCHEME.Entity;
				if (((previousValue != value) 
							|| (this._EmailAddresses_MOST_POPULAR_DOMAINS_BY_SCHEME.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._EmailAddresses_MOST_POPULAR_DOMAINS_BY_SCHEME.Entity = null;
						previousValue.Domain = null;
					}
					this._EmailAddresses_MOST_POPULAR_DOMAINS_BY_SCHEME.Entity = value;
					if ((value != null))
					{
						value.Domain = this;
					}
					this.SendPropertyChanged("EmailAddresses_MOST_POPULAR_DOMAINS_BY_SCHEME");
				}
			}
		}
		
		[Association(Name="Domain_Exceptions_COUNT_BY_DOMAIN1", Storage="_Exceptions_COUNT_BY_DOMAIN1", ThisKey="Domain1", OtherKey="Domain1", IsUnique=true, IsForeignKey=false)]
		public Exceptions_COUNT_BY_DOMAIN1 Exceptions_COUNT_BY_DOMAIN1
		{
			get
			{
				return this._Exceptions_COUNT_BY_DOMAIN1.Entity;
			}
			set
			{
				Exceptions_COUNT_BY_DOMAIN1 previousValue = this._Exceptions_COUNT_BY_DOMAIN1.Entity;
				if (((previousValue != value) 
							|| (this._Exceptions_COUNT_BY_DOMAIN1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Exceptions_COUNT_BY_DOMAIN1.Entity = null;
						previousValue.Domain = null;
					}
					this._Exceptions_COUNT_BY_DOMAIN1.Entity = value;
					if ((value != null))
					{
						value.Domain = this;
					}
					this.SendPropertyChanged("Exceptions_COUNT_BY_DOMAIN1");
				}
			}
		}
		
		[Association(Name="Domain_Exceptions_COUNT_BY_DOMAIN2", Storage="_Exceptions_COUNT_BY_DOMAIN2", ThisKey="Domain1", OtherKey="Domain2", IsUnique=true, IsForeignKey=false)]
		public Exceptions_COUNT_BY_DOMAIN2 Exceptions_COUNT_BY_DOMAIN2
		{
			get
			{
				return this._Exceptions_COUNT_BY_DOMAIN2.Entity;
			}
			set
			{
				Exceptions_COUNT_BY_DOMAIN2 previousValue = this._Exceptions_COUNT_BY_DOMAIN2.Entity;
				if (((previousValue != value) 
							|| (this._Exceptions_COUNT_BY_DOMAIN2.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Exceptions_COUNT_BY_DOMAIN2.Entity = null;
						previousValue.Domain = null;
					}
					this._Exceptions_COUNT_BY_DOMAIN2.Entity = value;
					if ((value != null))
					{
						value.Domain = this;
					}
					this.SendPropertyChanged("Exceptions_COUNT_BY_DOMAIN2");
				}
			}
		}
		
		[Association(Name="Domain_Files_COUNT_BY_DOMAIN", Storage="_Files_COUNT_BY_DOMAIN", ThisKey="ID", OtherKey="DomainID", IsUnique=true, IsForeignKey=false)]
		public Files_COUNT_BY_DOMAIN Files_COUNT_BY_DOMAIN
		{
			get
			{
				return this._Files_COUNT_BY_DOMAIN.Entity;
			}
			set
			{
				Files_COUNT_BY_DOMAIN previousValue = this._Files_COUNT_BY_DOMAIN.Entity;
				if (((previousValue != value) 
							|| (this._Files_COUNT_BY_DOMAIN.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Files_COUNT_BY_DOMAIN.Entity = null;
						previousValue.Domain = null;
					}
					this._Files_COUNT_BY_DOMAIN.Entity = value;
					if ((value != null))
					{
						value.Domain = this;
					}
					this.SendPropertyChanged("Files_COUNT_BY_DOMAIN");
				}
			}
		}
		
		[Association(Name="Domain_Files_MOST_POPULAR_DOMAINS_BY_ABSOLUTEURI", Storage="_Files_MOST_POPULAR_DOMAINS_BY_ABSOLUTEURI", ThisKey="ID", OtherKey="DomainID", IsUnique=true, IsForeignKey=false)]
		public Files_MOST_POPULAR_DOMAINS_BY_ABSOLUTEURI Files_MOST_POPULAR_DOMAINS_BY_ABSOLUTEURI
		{
			get
			{
				return this._Files_MOST_POPULAR_DOMAINS_BY_ABSOLUTEURI.Entity;
			}
			set
			{
				Files_MOST_POPULAR_DOMAINS_BY_ABSOLUTEURI previousValue = this._Files_MOST_POPULAR_DOMAINS_BY_ABSOLUTEURI.Entity;
				if (((previousValue != value) 
							|| (this._Files_MOST_POPULAR_DOMAINS_BY_ABSOLUTEURI.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Files_MOST_POPULAR_DOMAINS_BY_ABSOLUTEURI.Entity = null;
						previousValue.Domain = null;
					}
					this._Files_MOST_POPULAR_DOMAINS_BY_ABSOLUTEURI.Entity = value;
					if ((value != null))
					{
						value.Domain = this;
					}
					this.SendPropertyChanged("Files_MOST_POPULAR_DOMAINS_BY_ABSOLUTEURI");
				}
			}
		}
		
		[Association(Name="Domain_Files_MOST_POPULAR_DOMAINS_BY_DOMAIN", Storage="_Files_MOST_POPULAR_DOMAINS_BY_DOMAIN", ThisKey="ID", OtherKey="DomainID", IsUnique=true, IsForeignKey=false)]
		public Files_MOST_POPULAR_DOMAINS_BY_DOMAIN Files_MOST_POPULAR_DOMAINS_BY_DOMAIN
		{
			get
			{
				return this._Files_MOST_POPULAR_DOMAINS_BY_DOMAIN.Entity;
			}
			set
			{
				Files_MOST_POPULAR_DOMAINS_BY_DOMAIN previousValue = this._Files_MOST_POPULAR_DOMAINS_BY_DOMAIN.Entity;
				if (((previousValue != value) 
							|| (this._Files_MOST_POPULAR_DOMAINS_BY_DOMAIN.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Files_MOST_POPULAR_DOMAINS_BY_DOMAIN.Entity = null;
						previousValue.Domain = null;
					}
					this._Files_MOST_POPULAR_DOMAINS_BY_DOMAIN.Entity = value;
					if ((value != null))
					{
						value.Domain = this;
					}
					this.SendPropertyChanged("Files_MOST_POPULAR_DOMAINS_BY_DOMAIN");
				}
			}
		}
		
		[Association(Name="Domain_Files_MOST_POPULAR_DOMAINS_BY_EXTENSION", Storage="_Files_MOST_POPULAR_DOMAINS_BY_EXTENSION", ThisKey="ID", OtherKey="DomainID", IsUnique=true, IsForeignKey=false)]
		public Files_MOST_POPULAR_DOMAINS_BY_EXTENSION Files_MOST_POPULAR_DOMAINS_BY_EXTENSION
		{
			get
			{
				return this._Files_MOST_POPULAR_DOMAINS_BY_EXTENSION.Entity;
			}
			set
			{
				Files_MOST_POPULAR_DOMAINS_BY_EXTENSION previousValue = this._Files_MOST_POPULAR_DOMAINS_BY_EXTENSION.Entity;
				if (((previousValue != value) 
							|| (this._Files_MOST_POPULAR_DOMAINS_BY_EXTENSION.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Files_MOST_POPULAR_DOMAINS_BY_EXTENSION.Entity = null;
						previousValue.Domain = null;
					}
					this._Files_MOST_POPULAR_DOMAINS_BY_EXTENSION.Entity = value;
					if ((value != null))
					{
						value.Domain = this;
					}
					this.SendPropertyChanged("Files_MOST_POPULAR_DOMAINS_BY_EXTENSION");
				}
			}
		}
		
		[Association(Name="Domain_Files_MOST_POPULAR_DOMAINS_BY_HOST", Storage="_Files_MOST_POPULAR_DOMAINS_BY_HOST", ThisKey="ID", OtherKey="DomainID", IsUnique=true, IsForeignKey=false)]
		public Files_MOST_POPULAR_DOMAINS_BY_HOST Files_MOST_POPULAR_DOMAINS_BY_HOST
		{
			get
			{
				return this._Files_MOST_POPULAR_DOMAINS_BY_HOST.Entity;
			}
			set
			{
				Files_MOST_POPULAR_DOMAINS_BY_HOST previousValue = this._Files_MOST_POPULAR_DOMAINS_BY_HOST.Entity;
				if (((previousValue != value) 
							|| (this._Files_MOST_POPULAR_DOMAINS_BY_HOST.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Files_MOST_POPULAR_DOMAINS_BY_HOST.Entity = null;
						previousValue.Domain = null;
					}
					this._Files_MOST_POPULAR_DOMAINS_BY_HOST.Entity = value;
					if ((value != null))
					{
						value.Domain = this;
					}
					this.SendPropertyChanged("Files_MOST_POPULAR_DOMAINS_BY_HOST");
				}
			}
		}
		
		[Association(Name="Domain_Files_MOST_POPULAR_DOMAINS_BY_SCHEME", Storage="_Files_MOST_POPULAR_DOMAINS_BY_SCHEME", ThisKey="ID", OtherKey="DomainID", IsUnique=true, IsForeignKey=false)]
		public Files_MOST_POPULAR_DOMAINS_BY_SCHEME Files_MOST_POPULAR_DOMAINS_BY_SCHEME
		{
			get
			{
				return this._Files_MOST_POPULAR_DOMAINS_BY_SCHEME.Entity;
			}
			set
			{
				Files_MOST_POPULAR_DOMAINS_BY_SCHEME previousValue = this._Files_MOST_POPULAR_DOMAINS_BY_SCHEME.Entity;
				if (((previousValue != value) 
							|| (this._Files_MOST_POPULAR_DOMAINS_BY_SCHEME.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Files_MOST_POPULAR_DOMAINS_BY_SCHEME.Entity = null;
						previousValue.Domain = null;
					}
					this._Files_MOST_POPULAR_DOMAINS_BY_SCHEME.Entity = value;
					if ((value != null))
					{
						value.Domain = this;
					}
					this.SendPropertyChanged("Files_MOST_POPULAR_DOMAINS_BY_SCHEME");
				}
			}
		}
		
		[Association(Name="Domain_HyperLinks_COUNT_BY_DOMAIN", Storage="_HyperLinks_COUNT_BY_DOMAIN", ThisKey="ID", OtherKey="DomainID", IsUnique=true, IsForeignKey=false)]
		public HyperLinks_COUNT_BY_DOMAIN HyperLinks_COUNT_BY_DOMAIN
		{
			get
			{
				return this._HyperLinks_COUNT_BY_DOMAIN.Entity;
			}
			set
			{
				HyperLinks_COUNT_BY_DOMAIN previousValue = this._HyperLinks_COUNT_BY_DOMAIN.Entity;
				if (((previousValue != value) 
							|| (this._HyperLinks_COUNT_BY_DOMAIN.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._HyperLinks_COUNT_BY_DOMAIN.Entity = null;
						previousValue.Domain = null;
					}
					this._HyperLinks_COUNT_BY_DOMAIN.Entity = value;
					if ((value != null))
					{
						value.Domain = this;
					}
					this.SendPropertyChanged("HyperLinks_COUNT_BY_DOMAIN");
				}
			}
		}
		
		[Association(Name="Domain_HyperLinks_MOST_POPULAR_DOMAINS_BY_ABSOLUTEURI", Storage="_HyperLinks_MOST_POPULAR_DOMAINS_BY_ABSOLUTEURI", ThisKey="ID", OtherKey="DomainID", IsUnique=true, IsForeignKey=false)]
		public HyperLinks_MOST_POPULAR_DOMAINS_BY_ABSOLUTEURI HyperLinks_MOST_POPULAR_DOMAINS_BY_ABSOLUTEURI
		{
			get
			{
				return this._HyperLinks_MOST_POPULAR_DOMAINS_BY_ABSOLUTEURI.Entity;
			}
			set
			{
				HyperLinks_MOST_POPULAR_DOMAINS_BY_ABSOLUTEURI previousValue = this._HyperLinks_MOST_POPULAR_DOMAINS_BY_ABSOLUTEURI.Entity;
				if (((previousValue != value) 
							|| (this._HyperLinks_MOST_POPULAR_DOMAINS_BY_ABSOLUTEURI.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._HyperLinks_MOST_POPULAR_DOMAINS_BY_ABSOLUTEURI.Entity = null;
						previousValue.Domain = null;
					}
					this._HyperLinks_MOST_POPULAR_DOMAINS_BY_ABSOLUTEURI.Entity = value;
					if ((value != null))
					{
						value.Domain = this;
					}
					this.SendPropertyChanged("HyperLinks_MOST_POPULAR_DOMAINS_BY_ABSOLUTEURI");
				}
			}
		}
		
		[Association(Name="Domain_HyperLinks_MOST_POPULAR_DOMAINS_BY_DOMAIN", Storage="_HyperLinks_MOST_POPULAR_DOMAINS_BY_DOMAIN", ThisKey="ID", OtherKey="DomainID", IsUnique=true, IsForeignKey=false)]
		public HyperLinks_MOST_POPULAR_DOMAINS_BY_DOMAIN HyperLinks_MOST_POPULAR_DOMAINS_BY_DOMAIN
		{
			get
			{
				return this._HyperLinks_MOST_POPULAR_DOMAINS_BY_DOMAIN.Entity;
			}
			set
			{
				HyperLinks_MOST_POPULAR_DOMAINS_BY_DOMAIN previousValue = this._HyperLinks_MOST_POPULAR_DOMAINS_BY_DOMAIN.Entity;
				if (((previousValue != value) 
							|| (this._HyperLinks_MOST_POPULAR_DOMAINS_BY_DOMAIN.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._HyperLinks_MOST_POPULAR_DOMAINS_BY_DOMAIN.Entity = null;
						previousValue.Domain = null;
					}
					this._HyperLinks_MOST_POPULAR_DOMAINS_BY_DOMAIN.Entity = value;
					if ((value != null))
					{
						value.Domain = this;
					}
					this.SendPropertyChanged("HyperLinks_MOST_POPULAR_DOMAINS_BY_DOMAIN");
				}
			}
		}
		
		[Association(Name="Domain_HyperLinks_MOST_POPULAR_DOMAINS_BY_EXTENSION", Storage="_HyperLinks_MOST_POPULAR_DOMAINS_BY_EXTENSION", ThisKey="ID", OtherKey="DomainID", IsUnique=true, IsForeignKey=false)]
		public HyperLinks_MOST_POPULAR_DOMAINS_BY_EXTENSION HyperLinks_MOST_POPULAR_DOMAINS_BY_EXTENSION
		{
			get
			{
				return this._HyperLinks_MOST_POPULAR_DOMAINS_BY_EXTENSION.Entity;
			}
			set
			{
				HyperLinks_MOST_POPULAR_DOMAINS_BY_EXTENSION previousValue = this._HyperLinks_MOST_POPULAR_DOMAINS_BY_EXTENSION.Entity;
				if (((previousValue != value) 
							|| (this._HyperLinks_MOST_POPULAR_DOMAINS_BY_EXTENSION.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._HyperLinks_MOST_POPULAR_DOMAINS_BY_EXTENSION.Entity = null;
						previousValue.Domain = null;
					}
					this._HyperLinks_MOST_POPULAR_DOMAINS_BY_EXTENSION.Entity = value;
					if ((value != null))
					{
						value.Domain = this;
					}
					this.SendPropertyChanged("HyperLinks_MOST_POPULAR_DOMAINS_BY_EXTENSION");
				}
			}
		}
		
		[Association(Name="Domain_HyperLinks_MOST_POPULAR_DOMAINS_BY_HOST", Storage="_HyperLinks_MOST_POPULAR_DOMAINS_BY_HOST", ThisKey="ID", OtherKey="DomainID", IsUnique=true, IsForeignKey=false)]
		public HyperLinks_MOST_POPULAR_DOMAINS_BY_HOST HyperLinks_MOST_POPULAR_DOMAINS_BY_HOST
		{
			get
			{
				return this._HyperLinks_MOST_POPULAR_DOMAINS_BY_HOST.Entity;
			}
			set
			{
				HyperLinks_MOST_POPULAR_DOMAINS_BY_HOST previousValue = this._HyperLinks_MOST_POPULAR_DOMAINS_BY_HOST.Entity;
				if (((previousValue != value) 
							|| (this._HyperLinks_MOST_POPULAR_DOMAINS_BY_HOST.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._HyperLinks_MOST_POPULAR_DOMAINS_BY_HOST.Entity = null;
						previousValue.Domain = null;
					}
					this._HyperLinks_MOST_POPULAR_DOMAINS_BY_HOST.Entity = value;
					if ((value != null))
					{
						value.Domain = this;
					}
					this.SendPropertyChanged("HyperLinks_MOST_POPULAR_DOMAINS_BY_HOST");
				}
			}
		}
		
		[Association(Name="Domain_HyperLinks_MOST_POPULAR_DOMAINS_BY_SCHEME", Storage="_HyperLinks_MOST_POPULAR_DOMAINS_BY_SCHEME", ThisKey="ID", OtherKey="DomainID", IsUnique=true, IsForeignKey=false)]
		public HyperLinks_MOST_POPULAR_DOMAINS_BY_SCHEME HyperLinks_MOST_POPULAR_DOMAINS_BY_SCHEME
		{
			get
			{
				return this._HyperLinks_MOST_POPULAR_DOMAINS_BY_SCHEME.Entity;
			}
			set
			{
				HyperLinks_MOST_POPULAR_DOMAINS_BY_SCHEME previousValue = this._HyperLinks_MOST_POPULAR_DOMAINS_BY_SCHEME.Entity;
				if (((previousValue != value) 
							|| (this._HyperLinks_MOST_POPULAR_DOMAINS_BY_SCHEME.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._HyperLinks_MOST_POPULAR_DOMAINS_BY_SCHEME.Entity = null;
						previousValue.Domain = null;
					}
					this._HyperLinks_MOST_POPULAR_DOMAINS_BY_SCHEME.Entity = value;
					if ((value != null))
					{
						value.Domain = this;
					}
					this.SendPropertyChanged("HyperLinks_MOST_POPULAR_DOMAINS_BY_SCHEME");
				}
			}
		}
		
		[Association(Name="Domain_Images_COUNT_BY_DOMAIN", Storage="_Images_COUNT_BY_DOMAIN", ThisKey="ID", OtherKey="DomainID", IsUnique=true, IsForeignKey=false)]
		public Images_COUNT_BY_DOMAIN Images_COUNT_BY_DOMAIN
		{
			get
			{
				return this._Images_COUNT_BY_DOMAIN.Entity;
			}
			set
			{
				Images_COUNT_BY_DOMAIN previousValue = this._Images_COUNT_BY_DOMAIN.Entity;
				if (((previousValue != value) 
							|| (this._Images_COUNT_BY_DOMAIN.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Images_COUNT_BY_DOMAIN.Entity = null;
						previousValue.Domain = null;
					}
					this._Images_COUNT_BY_DOMAIN.Entity = value;
					if ((value != null))
					{
						value.Domain = this;
					}
					this.SendPropertyChanged("Images_COUNT_BY_DOMAIN");
				}
			}
		}
		
		[Association(Name="Domain_Images_MOST_POPULAR_DOMAINS_BY_ABSOLUTEURI", Storage="_Images_MOST_POPULAR_DOMAINS_BY_ABSOLUTEURI", ThisKey="ID", OtherKey="DomainID", IsUnique=true, IsForeignKey=false)]
		public Images_MOST_POPULAR_DOMAINS_BY_ABSOLUTEURI Images_MOST_POPULAR_DOMAINS_BY_ABSOLUTEURI
		{
			get
			{
				return this._Images_MOST_POPULAR_DOMAINS_BY_ABSOLUTEURI.Entity;
			}
			set
			{
				Images_MOST_POPULAR_DOMAINS_BY_ABSOLUTEURI previousValue = this._Images_MOST_POPULAR_DOMAINS_BY_ABSOLUTEURI.Entity;
				if (((previousValue != value) 
							|| (this._Images_MOST_POPULAR_DOMAINS_BY_ABSOLUTEURI.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Images_MOST_POPULAR_DOMAINS_BY_ABSOLUTEURI.Entity = null;
						previousValue.Domain = null;
					}
					this._Images_MOST_POPULAR_DOMAINS_BY_ABSOLUTEURI.Entity = value;
					if ((value != null))
					{
						value.Domain = this;
					}
					this.SendPropertyChanged("Images_MOST_POPULAR_DOMAINS_BY_ABSOLUTEURI");
				}
			}
		}
		
		[Association(Name="Domain_Images_MOST_POPULAR_DOMAINS_BY_DOMAIN", Storage="_Images_MOST_POPULAR_DOMAINS_BY_DOMAIN", ThisKey="ID", OtherKey="DomainID", IsUnique=true, IsForeignKey=false)]
		public Images_MOST_POPULAR_DOMAINS_BY_DOMAIN Images_MOST_POPULAR_DOMAINS_BY_DOMAIN
		{
			get
			{
				return this._Images_MOST_POPULAR_DOMAINS_BY_DOMAIN.Entity;
			}
			set
			{
				Images_MOST_POPULAR_DOMAINS_BY_DOMAIN previousValue = this._Images_MOST_POPULAR_DOMAINS_BY_DOMAIN.Entity;
				if (((previousValue != value) 
							|| (this._Images_MOST_POPULAR_DOMAINS_BY_DOMAIN.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Images_MOST_POPULAR_DOMAINS_BY_DOMAIN.Entity = null;
						previousValue.Domain = null;
					}
					this._Images_MOST_POPULAR_DOMAINS_BY_DOMAIN.Entity = value;
					if ((value != null))
					{
						value.Domain = this;
					}
					this.SendPropertyChanged("Images_MOST_POPULAR_DOMAINS_BY_DOMAIN");
				}
			}
		}
		
		[Association(Name="Domain_Images_MOST_POPULAR_DOMAINS_BY_EXTENSION", Storage="_Images_MOST_POPULAR_DOMAINS_BY_EXTENSION", ThisKey="ID", OtherKey="DomainID", IsUnique=true, IsForeignKey=false)]
		public Images_MOST_POPULAR_DOMAINS_BY_EXTENSION Images_MOST_POPULAR_DOMAINS_BY_EXTENSION
		{
			get
			{
				return this._Images_MOST_POPULAR_DOMAINS_BY_EXTENSION.Entity;
			}
			set
			{
				Images_MOST_POPULAR_DOMAINS_BY_EXTENSION previousValue = this._Images_MOST_POPULAR_DOMAINS_BY_EXTENSION.Entity;
				if (((previousValue != value) 
							|| (this._Images_MOST_POPULAR_DOMAINS_BY_EXTENSION.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Images_MOST_POPULAR_DOMAINS_BY_EXTENSION.Entity = null;
						previousValue.Domain = null;
					}
					this._Images_MOST_POPULAR_DOMAINS_BY_EXTENSION.Entity = value;
					if ((value != null))
					{
						value.Domain = this;
					}
					this.SendPropertyChanged("Images_MOST_POPULAR_DOMAINS_BY_EXTENSION");
				}
			}
		}
		
		[Association(Name="Domain_Images_MOST_POPULAR_DOMAINS_BY_HOST", Storage="_Images_MOST_POPULAR_DOMAINS_BY_HOST", ThisKey="ID", OtherKey="DomainID", IsUnique=true, IsForeignKey=false)]
		public Images_MOST_POPULAR_DOMAINS_BY_HOST Images_MOST_POPULAR_DOMAINS_BY_HOST
		{
			get
			{
				return this._Images_MOST_POPULAR_DOMAINS_BY_HOST.Entity;
			}
			set
			{
				Images_MOST_POPULAR_DOMAINS_BY_HOST previousValue = this._Images_MOST_POPULAR_DOMAINS_BY_HOST.Entity;
				if (((previousValue != value) 
							|| (this._Images_MOST_POPULAR_DOMAINS_BY_HOST.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Images_MOST_POPULAR_DOMAINS_BY_HOST.Entity = null;
						previousValue.Domain = null;
					}
					this._Images_MOST_POPULAR_DOMAINS_BY_HOST.Entity = value;
					if ((value != null))
					{
						value.Domain = this;
					}
					this.SendPropertyChanged("Images_MOST_POPULAR_DOMAINS_BY_HOST");
				}
			}
		}
		
		[Association(Name="Domain_Images_MOST_POPULAR_DOMAINS_BY_SCHEME", Storage="_Images_MOST_POPULAR_DOMAINS_BY_SCHEME", ThisKey="ID", OtherKey="DomainID", IsUnique=true, IsForeignKey=false)]
		public Images_MOST_POPULAR_DOMAINS_BY_SCHEME Images_MOST_POPULAR_DOMAINS_BY_SCHEME
		{
			get
			{
				return this._Images_MOST_POPULAR_DOMAINS_BY_SCHEME.Entity;
			}
			set
			{
				Images_MOST_POPULAR_DOMAINS_BY_SCHEME previousValue = this._Images_MOST_POPULAR_DOMAINS_BY_SCHEME.Entity;
				if (((previousValue != value) 
							|| (this._Images_MOST_POPULAR_DOMAINS_BY_SCHEME.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Images_MOST_POPULAR_DOMAINS_BY_SCHEME.Entity = null;
						previousValue.Domain = null;
					}
					this._Images_MOST_POPULAR_DOMAINS_BY_SCHEME.Entity = value;
					if ((value != null))
					{
						value.Domain = this;
					}
					this.SendPropertyChanged("Images_MOST_POPULAR_DOMAINS_BY_SCHEME");
				}
			}
		}
		
		[Association(Name="Domain_WebPages_COUNT_BY_DOMAIN", Storage="_WebPages_COUNT_BY_DOMAIN", ThisKey="Domain1", OtherKey="Domain", IsUnique=true, IsForeignKey=false)]
		public WebPages_COUNT_BY_DOMAIN WebPages_COUNT_BY_DOMAIN
		{
			get
			{
				return this._WebPages_COUNT_BY_DOMAIN.Entity;
			}
			set
			{
				WebPages_COUNT_BY_DOMAIN previousValue = this._WebPages_COUNT_BY_DOMAIN.Entity;
				if (((previousValue != value) 
							|| (this._WebPages_COUNT_BY_DOMAIN.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._WebPages_COUNT_BY_DOMAIN.Entity = null;
						previousValue.Domain1 = null;
					}
					this._WebPages_COUNT_BY_DOMAIN.Entity = value;
					if ((value != null))
					{
						value.Domain1 = this;
					}
					this.SendPropertyChanged("WebPages_COUNT_BY_DOMAIN");
				}
			}
		}
		
		[Association(Name="Extension_Domain", Storage="_Extension", ThisKey="ExtensionID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Extension Extension
		{
			get
			{
				return this._Extension.Entity;
			}
			set
			{
				Extension previousValue = this._Extension.Entity;
				if (((previousValue != value) 
							|| (this._Extension.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Extension.Entity = null;
						previousValue.Domains.Remove(this);
					}
					this._Extension.Entity = value;
					if ((value != null))
					{
						value.Domains.Add(this);
						this._ExtensionID = value.ID;
					}
					else
					{
						this._ExtensionID = default(int);
					}
					this.SendPropertyChanged("Extension");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Domains_Discoveries(Domains_Discovery entity)
		{
			this.SendPropertyChanging();
			entity.Domain = this;
		}
		
		private void detach_Domains_Discoveries(Domains_Discovery entity)
		{
			this.SendPropertyChanging();
			entity.Domain = null;
		}
		
		private void attach_Hosts(Host entity)
		{
			this.SendPropertyChanging();
			entity.Domain = this;
		}
		
		private void detach_Hosts(Host entity)
		{
			this.SendPropertyChanging();
			entity.Domain = null;
		}
	}
	
	[Table(Name="dbo.Domains_Discoveries")]
	public partial class Domains_Discovery : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Nullable<System.DateTime> _InitiallyDiscovered;
		
		private System.Nullable<System.DateTime> _LastDiscovered;
		
		private int _ID;
		
		private byte _DiscoveryTypeID;
		
		private int _DomainID;
		
		private EntityRef<DiscoveryType> _DiscoveryType;
		
		private EntityRef<Domain> _Domain;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnInitiallyDiscoveredChanging(System.Nullable<System.DateTime> value);
    partial void OnInitiallyDiscoveredChanged();
    partial void OnLastDiscoveredChanging(System.Nullable<System.DateTime> value);
    partial void OnLastDiscoveredChanged();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnDiscoveryTypeIDChanging(byte value);
    partial void OnDiscoveryTypeIDChanged();
    partial void OnDomainIDChanging(int value);
    partial void OnDomainIDChanged();
    #endregion
		
		public Domains_Discovery()
		{
			this._DiscoveryType = default(EntityRef<DiscoveryType>);
			this._Domain = default(EntityRef<Domain>);
			OnCreated();
		}
		
		[Column(Storage="_InitiallyDiscovered", DbType="DateTime")]
		public System.Nullable<System.DateTime> InitiallyDiscovered
		{
			get
			{
				return this._InitiallyDiscovered;
			}
			set
			{
				if ((this._InitiallyDiscovered != value))
				{
					this.OnInitiallyDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._InitiallyDiscovered = value;
					this.SendPropertyChanged("InitiallyDiscovered");
					this.OnInitiallyDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_LastDiscovered", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastDiscovered
		{
			get
			{
				return this._LastDiscovered;
			}
			set
			{
				if ((this._LastDiscovered != value))
				{
					this.OnLastDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._LastDiscovered = value;
					this.SendPropertyChanged("LastDiscovered");
					this.OnLastDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[Column(Storage="_DiscoveryTypeID", DbType="TinyInt NOT NULL")]
		public byte DiscoveryTypeID
		{
			get
			{
				return this._DiscoveryTypeID;
			}
			set
			{
				if ((this._DiscoveryTypeID != value))
				{
					if (this._DiscoveryType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDiscoveryTypeIDChanging(value);
					this.SendPropertyChanging();
					this._DiscoveryTypeID = value;
					this.SendPropertyChanged("DiscoveryTypeID");
					this.OnDiscoveryTypeIDChanged();
				}
			}
		}
		
		[Column(Storage="_DomainID", DbType="Int NOT NULL")]
		public int DomainID
		{
			get
			{
				return this._DomainID;
			}
			set
			{
				if ((this._DomainID != value))
				{
					if (this._Domain.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDomainIDChanging(value);
					this.SendPropertyChanging();
					this._DomainID = value;
					this.SendPropertyChanged("DomainID");
					this.OnDomainIDChanged();
				}
			}
		}
		
		[Association(Name="DiscoveryType_Domains_Discovery", Storage="_DiscoveryType", ThisKey="DiscoveryTypeID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public DiscoveryType DiscoveryType
		{
			get
			{
				return this._DiscoveryType.Entity;
			}
			set
			{
				DiscoveryType previousValue = this._DiscoveryType.Entity;
				if (((previousValue != value) 
							|| (this._DiscoveryType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DiscoveryType.Entity = null;
						previousValue.Domains_Discoveries.Remove(this);
					}
					this._DiscoveryType.Entity = value;
					if ((value != null))
					{
						value.Domains_Discoveries.Add(this);
						this._DiscoveryTypeID = value.ID;
					}
					else
					{
						this._DiscoveryTypeID = default(byte);
					}
					this.SendPropertyChanged("DiscoveryType");
				}
			}
		}
		
		[Association(Name="Domain_Domains_Discovery", Storage="_Domain", ThisKey="DomainID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Domain Domain
		{
			get
			{
				return this._Domain.Entity;
			}
			set
			{
				Domain previousValue = this._Domain.Entity;
				if (((previousValue != value) 
							|| (this._Domain.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Domain.Entity = null;
						previousValue.Domains_Discoveries.Remove(this);
					}
					this._Domain.Entity = value;
					if ((value != null))
					{
						value.Domains_Discoveries.Add(this);
						this._DomainID = value.ID;
					}
					else
					{
						this._DomainID = default(int);
					}
					this.SendPropertyChanged("Domain");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.EmailAddresses")]
	public partial class EmailAddress : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ID;
		
		private string _AbsoluteUri;
		
		private EntitySet<EmailAddresses_Discovery> _EmailAddresses_Discoveries;
		
		private EntityRef<EmailAddresses_Hosts_Discovery> _EmailAddresses_Hosts_Discovery;
		
		private EntityRef<EmailAddresses_Schemes_Discovery> _EmailAddresses_Schemes_Discovery;
		
		private EntityRef<EmailAddresses_COUNT_BY_ABSOLUTEURI> _EmailAddresses_COUNT_BY_ABSOLUTEURI;
		
		private EntityRef<EmailAddresses_MOST_POPULAR_ABSOLUTEURIS_BY_ABSOLUTEURI> _EmailAddresses_MOST_POPULAR_ABSOLUTEURIS_BY_ABSOLUTEURI;
		
		private EntityRef<EmailAddresses_MOST_POPULAR_ABSOLUTEURIS_BY_DOMAIN> _EmailAddresses_MOST_POPULAR_ABSOLUTEURIS_BY_DOMAIN;
		
		private EntityRef<EmailAddresses_MOST_POPULAR_ABSOLUTEURIS_BY_EXTENSION> _EmailAddresses_MOST_POPULAR_ABSOLUTEURIS_BY_EXTENSION;
		
		private EntityRef<EmailAddresses_MOST_POPULAR_ABSOLUTEURIS_BY_HOST> _EmailAddresses_MOST_POPULAR_ABSOLUTEURIS_BY_HOST;
		
		private EntityRef<EmailAddresses_MOST_POPULAR_ABSOLUTEURIS_BY_SCHEME> _EmailAddresses_MOST_POPULAR_ABSOLUTEURIS_BY_SCHEME;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(long value);
    partial void OnIDChanged();
    partial void OnAbsoluteUriChanging(string value);
    partial void OnAbsoluteUriChanged();
    #endregion
		
		public EmailAddress()
		{
			this._EmailAddresses_Discoveries = new EntitySet<EmailAddresses_Discovery>(new Action<EmailAddresses_Discovery>(this.attach_EmailAddresses_Discoveries), new Action<EmailAddresses_Discovery>(this.detach_EmailAddresses_Discoveries));
			this._EmailAddresses_Hosts_Discovery = default(EntityRef<EmailAddresses_Hosts_Discovery>);
			this._EmailAddresses_Schemes_Discovery = default(EntityRef<EmailAddresses_Schemes_Discovery>);
			this._EmailAddresses_COUNT_BY_ABSOLUTEURI = default(EntityRef<EmailAddresses_COUNT_BY_ABSOLUTEURI>);
			this._EmailAddresses_MOST_POPULAR_ABSOLUTEURIS_BY_ABSOLUTEURI = default(EntityRef<EmailAddresses_MOST_POPULAR_ABSOLUTEURIS_BY_ABSOLUTEURI>);
			this._EmailAddresses_MOST_POPULAR_ABSOLUTEURIS_BY_DOMAIN = default(EntityRef<EmailAddresses_MOST_POPULAR_ABSOLUTEURIS_BY_DOMAIN>);
			this._EmailAddresses_MOST_POPULAR_ABSOLUTEURIS_BY_EXTENSION = default(EntityRef<EmailAddresses_MOST_POPULAR_ABSOLUTEURIS_BY_EXTENSION>);
			this._EmailAddresses_MOST_POPULAR_ABSOLUTEURIS_BY_HOST = default(EntityRef<EmailAddresses_MOST_POPULAR_ABSOLUTEURIS_BY_HOST>);
			this._EmailAddresses_MOST_POPULAR_ABSOLUTEURIS_BY_SCHEME = default(EntityRef<EmailAddresses_MOST_POPULAR_ABSOLUTEURIS_BY_SCHEME>);
			OnCreated();
		}
		
		[Column(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[Column(Storage="_AbsoluteUri", DbType="VarChar(884) NOT NULL", CanBeNull=false)]
		public string AbsoluteUri
		{
			get
			{
				return this._AbsoluteUri;
			}
			set
			{
				if ((this._AbsoluteUri != value))
				{
					this.OnAbsoluteUriChanging(value);
					this.SendPropertyChanging();
					this._AbsoluteUri = value;
					this.SendPropertyChanged("AbsoluteUri");
					this.OnAbsoluteUriChanged();
				}
			}
		}
		
		[Association(Name="EmailAddress_EmailAddresses_Discovery", Storage="_EmailAddresses_Discoveries", ThisKey="ID", OtherKey="EmailAddressID")]
		public EntitySet<EmailAddresses_Discovery> EmailAddresses_Discoveries
		{
			get
			{
				return this._EmailAddresses_Discoveries;
			}
			set
			{
				this._EmailAddresses_Discoveries.Assign(value);
			}
		}
		
		[Association(Name="EmailAddress_EmailAddresses_Hosts_Discovery", Storage="_EmailAddresses_Hosts_Discovery", ThisKey="ID", OtherKey="EmailAddressID", IsUnique=true, IsForeignKey=false)]
		public EmailAddresses_Hosts_Discovery EmailAddresses_Hosts_Discovery
		{
			get
			{
				return this._EmailAddresses_Hosts_Discovery.Entity;
			}
			set
			{
				EmailAddresses_Hosts_Discovery previousValue = this._EmailAddresses_Hosts_Discovery.Entity;
				if (((previousValue != value) 
							|| (this._EmailAddresses_Hosts_Discovery.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._EmailAddresses_Hosts_Discovery.Entity = null;
						previousValue.EmailAddress = null;
					}
					this._EmailAddresses_Hosts_Discovery.Entity = value;
					if ((value != null))
					{
						value.EmailAddress = this;
					}
					this.SendPropertyChanged("EmailAddresses_Hosts_Discovery");
				}
			}
		}
		
		[Association(Name="EmailAddress_EmailAddresses_Schemes_Discovery", Storage="_EmailAddresses_Schemes_Discovery", ThisKey="ID", OtherKey="EmailAddressID", IsUnique=true, IsForeignKey=false)]
		public EmailAddresses_Schemes_Discovery EmailAddresses_Schemes_Discovery
		{
			get
			{
				return this._EmailAddresses_Schemes_Discovery.Entity;
			}
			set
			{
				EmailAddresses_Schemes_Discovery previousValue = this._EmailAddresses_Schemes_Discovery.Entity;
				if (((previousValue != value) 
							|| (this._EmailAddresses_Schemes_Discovery.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._EmailAddresses_Schemes_Discovery.Entity = null;
						previousValue.EmailAddress = null;
					}
					this._EmailAddresses_Schemes_Discovery.Entity = value;
					if ((value != null))
					{
						value.EmailAddress = this;
					}
					this.SendPropertyChanged("EmailAddresses_Schemes_Discovery");
				}
			}
		}
		
		[Association(Name="EmailAddress_EmailAddresses_COUNT_BY_ABSOLUTEURI", Storage="_EmailAddresses_COUNT_BY_ABSOLUTEURI", ThisKey="ID", OtherKey="EmailAddressID", IsUnique=true, IsForeignKey=false)]
		public EmailAddresses_COUNT_BY_ABSOLUTEURI EmailAddresses_COUNT_BY_ABSOLUTEURI
		{
			get
			{
				return this._EmailAddresses_COUNT_BY_ABSOLUTEURI.Entity;
			}
			set
			{
				EmailAddresses_COUNT_BY_ABSOLUTEURI previousValue = this._EmailAddresses_COUNT_BY_ABSOLUTEURI.Entity;
				if (((previousValue != value) 
							|| (this._EmailAddresses_COUNT_BY_ABSOLUTEURI.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._EmailAddresses_COUNT_BY_ABSOLUTEURI.Entity = null;
						previousValue.EmailAddress = null;
					}
					this._EmailAddresses_COUNT_BY_ABSOLUTEURI.Entity = value;
					if ((value != null))
					{
						value.EmailAddress = this;
					}
					this.SendPropertyChanged("EmailAddresses_COUNT_BY_ABSOLUTEURI");
				}
			}
		}
		
		[Association(Name="EmailAddress_EmailAddresses_MOST_POPULAR_ABSOLUTEURIS_BY_ABSOLUTEURI", Storage="_EmailAddresses_MOST_POPULAR_ABSOLUTEURIS_BY_ABSOLUTEURI", ThisKey="ID", OtherKey="EmailAddressID", IsUnique=true, IsForeignKey=false)]
		public EmailAddresses_MOST_POPULAR_ABSOLUTEURIS_BY_ABSOLUTEURI EmailAddresses_MOST_POPULAR_ABSOLUTEURIS_BY_ABSOLUTEURI
		{
			get
			{
				return this._EmailAddresses_MOST_POPULAR_ABSOLUTEURIS_BY_ABSOLUTEURI.Entity;
			}
			set
			{
				EmailAddresses_MOST_POPULAR_ABSOLUTEURIS_BY_ABSOLUTEURI previousValue = this._EmailAddresses_MOST_POPULAR_ABSOLUTEURIS_BY_ABSOLUTEURI.Entity;
				if (((previousValue != value) 
							|| (this._EmailAddresses_MOST_POPULAR_ABSOLUTEURIS_BY_ABSOLUTEURI.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._EmailAddresses_MOST_POPULAR_ABSOLUTEURIS_BY_ABSOLUTEURI.Entity = null;
						previousValue.EmailAddress = null;
					}
					this._EmailAddresses_MOST_POPULAR_ABSOLUTEURIS_BY_ABSOLUTEURI.Entity = value;
					if ((value != null))
					{
						value.EmailAddress = this;
					}
					this.SendPropertyChanged("EmailAddresses_MOST_POPULAR_ABSOLUTEURIS_BY_ABSOLUTEURI");
				}
			}
		}
		
		[Association(Name="EmailAddress_EmailAddresses_MOST_POPULAR_ABSOLUTEURIS_BY_DOMAIN", Storage="_EmailAddresses_MOST_POPULAR_ABSOLUTEURIS_BY_DOMAIN", ThisKey="ID", OtherKey="EmailAddressID", IsUnique=true, IsForeignKey=false)]
		public EmailAddresses_MOST_POPULAR_ABSOLUTEURIS_BY_DOMAIN EmailAddresses_MOST_POPULAR_ABSOLUTEURIS_BY_DOMAIN
		{
			get
			{
				return this._EmailAddresses_MOST_POPULAR_ABSOLUTEURIS_BY_DOMAIN.Entity;
			}
			set
			{
				EmailAddresses_MOST_POPULAR_ABSOLUTEURIS_BY_DOMAIN previousValue = this._EmailAddresses_MOST_POPULAR_ABSOLUTEURIS_BY_DOMAIN.Entity;
				if (((previousValue != value) 
							|| (this._EmailAddresses_MOST_POPULAR_ABSOLUTEURIS_BY_DOMAIN.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._EmailAddresses_MOST_POPULAR_ABSOLUTEURIS_BY_DOMAIN.Entity = null;
						previousValue.EmailAddress = null;
					}
					this._EmailAddresses_MOST_POPULAR_ABSOLUTEURIS_BY_DOMAIN.Entity = value;
					if ((value != null))
					{
						value.EmailAddress = this;
					}
					this.SendPropertyChanged("EmailAddresses_MOST_POPULAR_ABSOLUTEURIS_BY_DOMAIN");
				}
			}
		}
		
		[Association(Name="EmailAddress_EmailAddresses_MOST_POPULAR_ABSOLUTEURIS_BY_EXTENSION", Storage="_EmailAddresses_MOST_POPULAR_ABSOLUTEURIS_BY_EXTENSION", ThisKey="ID", OtherKey="EmailAddressID", IsUnique=true, IsForeignKey=false)]
		public EmailAddresses_MOST_POPULAR_ABSOLUTEURIS_BY_EXTENSION EmailAddresses_MOST_POPULAR_ABSOLUTEURIS_BY_EXTENSION
		{
			get
			{
				return this._EmailAddresses_MOST_POPULAR_ABSOLUTEURIS_BY_EXTENSION.Entity;
			}
			set
			{
				EmailAddresses_MOST_POPULAR_ABSOLUTEURIS_BY_EXTENSION previousValue = this._EmailAddresses_MOST_POPULAR_ABSOLUTEURIS_BY_EXTENSION.Entity;
				if (((previousValue != value) 
							|| (this._EmailAddresses_MOST_POPULAR_ABSOLUTEURIS_BY_EXTENSION.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._EmailAddresses_MOST_POPULAR_ABSOLUTEURIS_BY_EXTENSION.Entity = null;
						previousValue.EmailAddress = null;
					}
					this._EmailAddresses_MOST_POPULAR_ABSOLUTEURIS_BY_EXTENSION.Entity = value;
					if ((value != null))
					{
						value.EmailAddress = this;
					}
					this.SendPropertyChanged("EmailAddresses_MOST_POPULAR_ABSOLUTEURIS_BY_EXTENSION");
				}
			}
		}
		
		[Association(Name="EmailAddress_EmailAddresses_MOST_POPULAR_ABSOLUTEURIS_BY_HOST", Storage="_EmailAddresses_MOST_POPULAR_ABSOLUTEURIS_BY_HOST", ThisKey="ID", OtherKey="EmailAddressID", IsUnique=true, IsForeignKey=false)]
		public EmailAddresses_MOST_POPULAR_ABSOLUTEURIS_BY_HOST EmailAddresses_MOST_POPULAR_ABSOLUTEURIS_BY_HOST
		{
			get
			{
				return this._EmailAddresses_MOST_POPULAR_ABSOLUTEURIS_BY_HOST.Entity;
			}
			set
			{
				EmailAddresses_MOST_POPULAR_ABSOLUTEURIS_BY_HOST previousValue = this._EmailAddresses_MOST_POPULAR_ABSOLUTEURIS_BY_HOST.Entity;
				if (((previousValue != value) 
							|| (this._EmailAddresses_MOST_POPULAR_ABSOLUTEURIS_BY_HOST.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._EmailAddresses_MOST_POPULAR_ABSOLUTEURIS_BY_HOST.Entity = null;
						previousValue.EmailAddress = null;
					}
					this._EmailAddresses_MOST_POPULAR_ABSOLUTEURIS_BY_HOST.Entity = value;
					if ((value != null))
					{
						value.EmailAddress = this;
					}
					this.SendPropertyChanged("EmailAddresses_MOST_POPULAR_ABSOLUTEURIS_BY_HOST");
				}
			}
		}
		
		[Association(Name="EmailAddress_EmailAddresses_MOST_POPULAR_ABSOLUTEURIS_BY_SCHEME", Storage="_EmailAddresses_MOST_POPULAR_ABSOLUTEURIS_BY_SCHEME", ThisKey="ID", OtherKey="EmailAddressID", IsUnique=true, IsForeignKey=false)]
		public EmailAddresses_MOST_POPULAR_ABSOLUTEURIS_BY_SCHEME EmailAddresses_MOST_POPULAR_ABSOLUTEURIS_BY_SCHEME
		{
			get
			{
				return this._EmailAddresses_MOST_POPULAR_ABSOLUTEURIS_BY_SCHEME.Entity;
			}
			set
			{
				EmailAddresses_MOST_POPULAR_ABSOLUTEURIS_BY_SCHEME previousValue = this._EmailAddresses_MOST_POPULAR_ABSOLUTEURIS_BY_SCHEME.Entity;
				if (((previousValue != value) 
							|| (this._EmailAddresses_MOST_POPULAR_ABSOLUTEURIS_BY_SCHEME.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._EmailAddresses_MOST_POPULAR_ABSOLUTEURIS_BY_SCHEME.Entity = null;
						previousValue.EmailAddress = null;
					}
					this._EmailAddresses_MOST_POPULAR_ABSOLUTEURIS_BY_SCHEME.Entity = value;
					if ((value != null))
					{
						value.EmailAddress = this;
					}
					this.SendPropertyChanged("EmailAddresses_MOST_POPULAR_ABSOLUTEURIS_BY_SCHEME");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_EmailAddresses_Discoveries(EmailAddresses_Discovery entity)
		{
			this.SendPropertyChanging();
			entity.EmailAddress = this;
		}
		
		private void detach_EmailAddresses_Discoveries(EmailAddresses_Discovery entity)
		{
			this.SendPropertyChanging();
			entity.EmailAddress = null;
		}
	}
	
	[Table(Name="dbo.EmailAddresses_Discoveries")]
	public partial class EmailAddresses_Discovery : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.DateTime _InitiallyDiscovered;
		
		private System.DateTime _LastDiscovered;
		
		private long _ID;
		
		private long _WebPageID;
		
		private long _EmailAddressID;
		
		private EntityRef<EmailAddress> _EmailAddress;
		
		private EntityRef<WebPage> _WebPage;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnInitiallyDiscoveredChanging(System.DateTime value);
    partial void OnInitiallyDiscoveredChanged();
    partial void OnLastDiscoveredChanging(System.DateTime value);
    partial void OnLastDiscoveredChanged();
    partial void OnIDChanging(long value);
    partial void OnIDChanged();
    partial void OnWebPageIDChanging(long value);
    partial void OnWebPageIDChanged();
    partial void OnEmailAddressIDChanging(long value);
    partial void OnEmailAddressIDChanged();
    #endregion
		
		public EmailAddresses_Discovery()
		{
			this._EmailAddress = default(EntityRef<EmailAddress>);
			this._WebPage = default(EntityRef<WebPage>);
			OnCreated();
		}
		
		[Column(Storage="_InitiallyDiscovered", DbType="DateTime NOT NULL")]
		public System.DateTime InitiallyDiscovered
		{
			get
			{
				return this._InitiallyDiscovered;
			}
			set
			{
				if ((this._InitiallyDiscovered != value))
				{
					this.OnInitiallyDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._InitiallyDiscovered = value;
					this.SendPropertyChanged("InitiallyDiscovered");
					this.OnInitiallyDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_LastDiscovered", DbType="DateTime NOT NULL")]
		public System.DateTime LastDiscovered
		{
			get
			{
				return this._LastDiscovered;
			}
			set
			{
				if ((this._LastDiscovered != value))
				{
					this.OnLastDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._LastDiscovered = value;
					this.SendPropertyChanged("LastDiscovered");
					this.OnLastDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_ID", AutoSync=AutoSync.Always, DbType="BigInt NOT NULL IDENTITY", IsDbGenerated=true)]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[Column(Storage="_WebPageID", DbType="BigInt NOT NULL", IsPrimaryKey=true)]
		public long WebPageID
		{
			get
			{
				return this._WebPageID;
			}
			set
			{
				if ((this._WebPageID != value))
				{
					if (this._WebPage.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnWebPageIDChanging(value);
					this.SendPropertyChanging();
					this._WebPageID = value;
					this.SendPropertyChanged("WebPageID");
					this.OnWebPageIDChanged();
				}
			}
		}
		
		[Column(Storage="_EmailAddressID", DbType="BigInt NOT NULL", IsPrimaryKey=true)]
		public long EmailAddressID
		{
			get
			{
				return this._EmailAddressID;
			}
			set
			{
				if ((this._EmailAddressID != value))
				{
					if (this._EmailAddress.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnEmailAddressIDChanging(value);
					this.SendPropertyChanging();
					this._EmailAddressID = value;
					this.SendPropertyChanged("EmailAddressID");
					this.OnEmailAddressIDChanged();
				}
			}
		}
		
		[Association(Name="EmailAddress_EmailAddresses_Discovery", Storage="_EmailAddress", ThisKey="EmailAddressID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public EmailAddress EmailAddress
		{
			get
			{
				return this._EmailAddress.Entity;
			}
			set
			{
				EmailAddress previousValue = this._EmailAddress.Entity;
				if (((previousValue != value) 
							|| (this._EmailAddress.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._EmailAddress.Entity = null;
						previousValue.EmailAddresses_Discoveries.Remove(this);
					}
					this._EmailAddress.Entity = value;
					if ((value != null))
					{
						value.EmailAddresses_Discoveries.Add(this);
						this._EmailAddressID = value.ID;
					}
					else
					{
						this._EmailAddressID = default(long);
					}
					this.SendPropertyChanged("EmailAddress");
				}
			}
		}
		
		[Association(Name="WebPage_EmailAddresses_Discovery", Storage="_WebPage", ThisKey="WebPageID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public WebPage WebPage
		{
			get
			{
				return this._WebPage.Entity;
			}
			set
			{
				WebPage previousValue = this._WebPage.Entity;
				if (((previousValue != value) 
							|| (this._WebPage.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._WebPage.Entity = null;
						previousValue.EmailAddresses_Discoveries.Remove(this);
					}
					this._WebPage.Entity = value;
					if ((value != null))
					{
						value.EmailAddresses_Discoveries.Add(this);
						this._WebPageID = value.ID;
					}
					else
					{
						this._WebPageID = default(long);
					}
					this.SendPropertyChanged("WebPage");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.EmailAddresses_Hosts_Discoveries")]
	public partial class EmailAddresses_Hosts_Discovery : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _EmailAddressID;
		
		private int _Host_DiscoveryID;
		
		private EntityRef<EmailAddress> _EmailAddress;
		
		private EntityRef<Hosts_Discovery> _Hosts_Discovery;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnEmailAddressIDChanging(long value);
    partial void OnEmailAddressIDChanged();
    partial void OnHost_DiscoveryIDChanging(int value);
    partial void OnHost_DiscoveryIDChanged();
    #endregion
		
		public EmailAddresses_Hosts_Discovery()
		{
			this._EmailAddress = default(EntityRef<EmailAddress>);
			this._Hosts_Discovery = default(EntityRef<Hosts_Discovery>);
			OnCreated();
		}
		
		[Column(Storage="_EmailAddressID", DbType="BigInt NOT NULL", IsPrimaryKey=true)]
		public long EmailAddressID
		{
			get
			{
				return this._EmailAddressID;
			}
			set
			{
				if ((this._EmailAddressID != value))
				{
					if (this._EmailAddress.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnEmailAddressIDChanging(value);
					this.SendPropertyChanging();
					this._EmailAddressID = value;
					this.SendPropertyChanged("EmailAddressID");
					this.OnEmailAddressIDChanged();
				}
			}
		}
		
		[Column(Storage="_Host_DiscoveryID", DbType="Int NOT NULL")]
		public int Host_DiscoveryID
		{
			get
			{
				return this._Host_DiscoveryID;
			}
			set
			{
				if ((this._Host_DiscoveryID != value))
				{
					if (this._Hosts_Discovery.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnHost_DiscoveryIDChanging(value);
					this.SendPropertyChanging();
					this._Host_DiscoveryID = value;
					this.SendPropertyChanged("Host_DiscoveryID");
					this.OnHost_DiscoveryIDChanged();
				}
			}
		}
		
		[Association(Name="EmailAddress_EmailAddresses_Hosts_Discovery", Storage="_EmailAddress", ThisKey="EmailAddressID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public EmailAddress EmailAddress
		{
			get
			{
				return this._EmailAddress.Entity;
			}
			set
			{
				EmailAddress previousValue = this._EmailAddress.Entity;
				if (((previousValue != value) 
							|| (this._EmailAddress.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._EmailAddress.Entity = null;
						previousValue.EmailAddresses_Hosts_Discovery = null;
					}
					this._EmailAddress.Entity = value;
					if ((value != null))
					{
						value.EmailAddresses_Hosts_Discovery = this;
						this._EmailAddressID = value.ID;
					}
					else
					{
						this._EmailAddressID = default(long);
					}
					this.SendPropertyChanged("EmailAddress");
				}
			}
		}
		
		[Association(Name="Hosts_Discovery_EmailAddresses_Hosts_Discovery", Storage="_Hosts_Discovery", ThisKey="Host_DiscoveryID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Hosts_Discovery Hosts_Discovery
		{
			get
			{
				return this._Hosts_Discovery.Entity;
			}
			set
			{
				Hosts_Discovery previousValue = this._Hosts_Discovery.Entity;
				if (((previousValue != value) 
							|| (this._Hosts_Discovery.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Hosts_Discovery.Entity = null;
						previousValue.EmailAddresses_Hosts_Discoveries.Remove(this);
					}
					this._Hosts_Discovery.Entity = value;
					if ((value != null))
					{
						value.EmailAddresses_Hosts_Discoveries.Add(this);
						this._Host_DiscoveryID = value.ID;
					}
					else
					{
						this._Host_DiscoveryID = default(int);
					}
					this.SendPropertyChanged("Hosts_Discovery");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.EmailAddresses_Schemes_Discoveries")]
	public partial class EmailAddresses_Schemes_Discovery : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _EmailAddressID;
		
		private int _Scheme_DiscoveryID;
		
		private EntityRef<EmailAddress> _EmailAddress;
		
		private EntityRef<Schemes_Discovery> _Schemes_Discovery;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnEmailAddressIDChanging(long value);
    partial void OnEmailAddressIDChanged();
    partial void OnScheme_DiscoveryIDChanging(int value);
    partial void OnScheme_DiscoveryIDChanged();
    #endregion
		
		public EmailAddresses_Schemes_Discovery()
		{
			this._EmailAddress = default(EntityRef<EmailAddress>);
			this._Schemes_Discovery = default(EntityRef<Schemes_Discovery>);
			OnCreated();
		}
		
		[Column(Storage="_EmailAddressID", DbType="BigInt NOT NULL", IsPrimaryKey=true)]
		public long EmailAddressID
		{
			get
			{
				return this._EmailAddressID;
			}
			set
			{
				if ((this._EmailAddressID != value))
				{
					if (this._EmailAddress.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnEmailAddressIDChanging(value);
					this.SendPropertyChanging();
					this._EmailAddressID = value;
					this.SendPropertyChanged("EmailAddressID");
					this.OnEmailAddressIDChanged();
				}
			}
		}
		
		[Column(Storage="_Scheme_DiscoveryID", DbType="Int NOT NULL")]
		public int Scheme_DiscoveryID
		{
			get
			{
				return this._Scheme_DiscoveryID;
			}
			set
			{
				if ((this._Scheme_DiscoveryID != value))
				{
					if (this._Schemes_Discovery.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnScheme_DiscoveryIDChanging(value);
					this.SendPropertyChanging();
					this._Scheme_DiscoveryID = value;
					this.SendPropertyChanged("Scheme_DiscoveryID");
					this.OnScheme_DiscoveryIDChanged();
				}
			}
		}
		
		[Association(Name="EmailAddress_EmailAddresses_Schemes_Discovery", Storage="_EmailAddress", ThisKey="EmailAddressID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public EmailAddress EmailAddress
		{
			get
			{
				return this._EmailAddress.Entity;
			}
			set
			{
				EmailAddress previousValue = this._EmailAddress.Entity;
				if (((previousValue != value) 
							|| (this._EmailAddress.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._EmailAddress.Entity = null;
						previousValue.EmailAddresses_Schemes_Discovery = null;
					}
					this._EmailAddress.Entity = value;
					if ((value != null))
					{
						value.EmailAddresses_Schemes_Discovery = this;
						this._EmailAddressID = value.ID;
					}
					else
					{
						this._EmailAddressID = default(long);
					}
					this.SendPropertyChanged("EmailAddress");
				}
			}
		}
		
		[Association(Name="Schemes_Discovery_EmailAddresses_Schemes_Discovery", Storage="_Schemes_Discovery", ThisKey="Scheme_DiscoveryID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Schemes_Discovery Schemes_Discovery
		{
			get
			{
				return this._Schemes_Discovery.Entity;
			}
			set
			{
				Schemes_Discovery previousValue = this._Schemes_Discovery.Entity;
				if (((previousValue != value) 
							|| (this._Schemes_Discovery.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Schemes_Discovery.Entity = null;
						previousValue.EmailAddresses_Schemes_Discoveries.Remove(this);
					}
					this._Schemes_Discovery.Entity = value;
					if ((value != null))
					{
						value.EmailAddresses_Schemes_Discoveries.Add(this);
						this._Scheme_DiscoveryID = value.ID;
					}
					else
					{
						this._Scheme_DiscoveryID = default(int);
					}
					this.SendPropertyChanged("Schemes_Discovery");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.Exceptions")]
	public partial class Exception : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.DateTime _Created;
		
		private long _ID;
		
		private string _AbsoluteUri1;
		
		private string _AbsoluteUri2;
		
		private string _HelpLink;
		
		private string _Message;
		
		private string _Source;
		
		private string _StackTrace;
		
		private EntityRef<Exceptions_Hosts_Discovery> _Exceptions_Hosts_Discovery;
		
		private EntityRef<Exceptions_Schemes_Discovery> _Exceptions_Schemes_Discovery;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCreatedChanging(System.DateTime value);
    partial void OnCreatedChanged();
    partial void OnIDChanging(long value);
    partial void OnIDChanged();
    partial void OnAbsoluteUri1Changing(string value);
    partial void OnAbsoluteUri1Changed();
    partial void OnAbsoluteUri2Changing(string value);
    partial void OnAbsoluteUri2Changed();
    partial void OnHelpLinkChanging(string value);
    partial void OnHelpLinkChanged();
    partial void OnMessageChanging(string value);
    partial void OnMessageChanged();
    partial void OnSourceChanging(string value);
    partial void OnSourceChanged();
    partial void OnStackTraceChanging(string value);
    partial void OnStackTraceChanged();
    #endregion
		
		public Exception()
		{
			this._Exceptions_Hosts_Discovery = default(EntityRef<Exceptions_Hosts_Discovery>);
			this._Exceptions_Schemes_Discovery = default(EntityRef<Exceptions_Schemes_Discovery>);
			OnCreated();
		}
		
		[Column(Storage="_Created", DbType="DateTime NOT NULL")]
		public System.DateTime Created
		{
			get
			{
				return this._Created;
			}
			set
			{
				if ((this._Created != value))
				{
					this.OnCreatedChanging(value);
					this.SendPropertyChanging();
					this._Created = value;
					this.SendPropertyChanged("Created");
					this.OnCreatedChanged();
				}
			}
		}
		
		[Column(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[Column(Storage="_AbsoluteUri1", DbType="VarChar(884)")]
		public string AbsoluteUri1
		{
			get
			{
				return this._AbsoluteUri1;
			}
			set
			{
				if ((this._AbsoluteUri1 != value))
				{
					this.OnAbsoluteUri1Changing(value);
					this.SendPropertyChanging();
					this._AbsoluteUri1 = value;
					this.SendPropertyChanged("AbsoluteUri1");
					this.OnAbsoluteUri1Changed();
				}
			}
		}
		
		[Column(Storage="_AbsoluteUri2", DbType="VarChar(884)")]
		public string AbsoluteUri2
		{
			get
			{
				return this._AbsoluteUri2;
			}
			set
			{
				if ((this._AbsoluteUri2 != value))
				{
					this.OnAbsoluteUri2Changing(value);
					this.SendPropertyChanging();
					this._AbsoluteUri2 = value;
					this.SendPropertyChanged("AbsoluteUri2");
					this.OnAbsoluteUri2Changed();
				}
			}
		}
		
		[Column(Storage="_HelpLink", DbType="VarChar(400)")]
		public string HelpLink
		{
			get
			{
				return this._HelpLink;
			}
			set
			{
				if ((this._HelpLink != value))
				{
					this.OnHelpLinkChanging(value);
					this.SendPropertyChanging();
					this._HelpLink = value;
					this.SendPropertyChanged("HelpLink");
					this.OnHelpLinkChanged();
				}
			}
		}
		
		[Column(Storage="_Message", DbType="VarChar(2000) NOT NULL", CanBeNull=false)]
		public string Message
		{
			get
			{
				return this._Message;
			}
			set
			{
				if ((this._Message != value))
				{
					this.OnMessageChanging(value);
					this.SendPropertyChanging();
					this._Message = value;
					this.SendPropertyChanged("Message");
					this.OnMessageChanged();
				}
			}
		}
		
		[Column(Storage="_Source", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Source
		{
			get
			{
				return this._Source;
			}
			set
			{
				if ((this._Source != value))
				{
					this.OnSourceChanging(value);
					this.SendPropertyChanging();
					this._Source = value;
					this.SendPropertyChanged("Source");
					this.OnSourceChanged();
				}
			}
		}
		
		[Column(Storage="_StackTrace", DbType="VarChar(4000) NOT NULL", CanBeNull=false)]
		public string StackTrace
		{
			get
			{
				return this._StackTrace;
			}
			set
			{
				if ((this._StackTrace != value))
				{
					this.OnStackTraceChanging(value);
					this.SendPropertyChanging();
					this._StackTrace = value;
					this.SendPropertyChanged("StackTrace");
					this.OnStackTraceChanged();
				}
			}
		}
		
		[Association(Name="Exception_Exceptions_Hosts_Discovery", Storage="_Exceptions_Hosts_Discovery", ThisKey="ID", OtherKey="ExceptionID", IsUnique=true, IsForeignKey=false)]
		public Exceptions_Hosts_Discovery Exceptions_Hosts_Discovery
		{
			get
			{
				return this._Exceptions_Hosts_Discovery.Entity;
			}
			set
			{
				Exceptions_Hosts_Discovery previousValue = this._Exceptions_Hosts_Discovery.Entity;
				if (((previousValue != value) 
							|| (this._Exceptions_Hosts_Discovery.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Exceptions_Hosts_Discovery.Entity = null;
						previousValue.Exception = null;
					}
					this._Exceptions_Hosts_Discovery.Entity = value;
					if ((value != null))
					{
						value.Exception = this;
					}
					this.SendPropertyChanged("Exceptions_Hosts_Discovery");
				}
			}
		}
		
		[Association(Name="Exception_Exceptions_Schemes_Discovery", Storage="_Exceptions_Schemes_Discovery", ThisKey="ID", OtherKey="ExceptionID", IsUnique=true, IsForeignKey=false)]
		public Exceptions_Schemes_Discovery Exceptions_Schemes_Discovery
		{
			get
			{
				return this._Exceptions_Schemes_Discovery.Entity;
			}
			set
			{
				Exceptions_Schemes_Discovery previousValue = this._Exceptions_Schemes_Discovery.Entity;
				if (((previousValue != value) 
							|| (this._Exceptions_Schemes_Discovery.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Exceptions_Schemes_Discovery.Entity = null;
						previousValue.Exception = null;
					}
					this._Exceptions_Schemes_Discovery.Entity = value;
					if ((value != null))
					{
						value.Exception = this;
					}
					this.SendPropertyChanged("Exceptions_Schemes_Discovery");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.Exceptions_Hosts_Discoveries")]
	public partial class Exceptions_Hosts_Discovery : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ExceptionID;
		
		private int _Host_DiscoveryID1;
		
		private int _Host_DiscoveryID2;
		
		private EntityRef<Exception> _Exception;
		
		private EntityRef<Hosts_Discovery> _Hosts_Discovery;
		
		private EntityRef<Hosts_Discovery> _Hosts_Discovery1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnExceptionIDChanging(long value);
    partial void OnExceptionIDChanged();
    partial void OnHost_DiscoveryID1Changing(int value);
    partial void OnHost_DiscoveryID1Changed();
    partial void OnHost_DiscoveryID2Changing(int value);
    partial void OnHost_DiscoveryID2Changed();
    #endregion
		
		public Exceptions_Hosts_Discovery()
		{
			this._Exception = default(EntityRef<Exception>);
			this._Hosts_Discovery = default(EntityRef<Hosts_Discovery>);
			this._Hosts_Discovery1 = default(EntityRef<Hosts_Discovery>);
			OnCreated();
		}
		
		[Column(Storage="_ExceptionID", DbType="BigInt NOT NULL", IsPrimaryKey=true)]
		public long ExceptionID
		{
			get
			{
				return this._ExceptionID;
			}
			set
			{
				if ((this._ExceptionID != value))
				{
					if (this._Exception.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnExceptionIDChanging(value);
					this.SendPropertyChanging();
					this._ExceptionID = value;
					this.SendPropertyChanged("ExceptionID");
					this.OnExceptionIDChanged();
				}
			}
		}
		
		[Column(Storage="_Host_DiscoveryID1", DbType="Int NOT NULL")]
		public int Host_DiscoveryID1
		{
			get
			{
				return this._Host_DiscoveryID1;
			}
			set
			{
				if ((this._Host_DiscoveryID1 != value))
				{
					if (this._Hosts_Discovery.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnHost_DiscoveryID1Changing(value);
					this.SendPropertyChanging();
					this._Host_DiscoveryID1 = value;
					this.SendPropertyChanged("Host_DiscoveryID1");
					this.OnHost_DiscoveryID1Changed();
				}
			}
		}
		
		[Column(Storage="_Host_DiscoveryID2", DbType="Int NOT NULL")]
		public int Host_DiscoveryID2
		{
			get
			{
				return this._Host_DiscoveryID2;
			}
			set
			{
				if ((this._Host_DiscoveryID2 != value))
				{
					if (this._Hosts_Discovery1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnHost_DiscoveryID2Changing(value);
					this.SendPropertyChanging();
					this._Host_DiscoveryID2 = value;
					this.SendPropertyChanged("Host_DiscoveryID2");
					this.OnHost_DiscoveryID2Changed();
				}
			}
		}
		
		[Association(Name="Exception_Exceptions_Hosts_Discovery", Storage="_Exception", ThisKey="ExceptionID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Exception Exception
		{
			get
			{
				return this._Exception.Entity;
			}
			set
			{
				Exception previousValue = this._Exception.Entity;
				if (((previousValue != value) 
							|| (this._Exception.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Exception.Entity = null;
						previousValue.Exceptions_Hosts_Discovery = null;
					}
					this._Exception.Entity = value;
					if ((value != null))
					{
						value.Exceptions_Hosts_Discovery = this;
						this._ExceptionID = value.ID;
					}
					else
					{
						this._ExceptionID = default(long);
					}
					this.SendPropertyChanged("Exception");
				}
			}
		}
		
		[Association(Name="Hosts_Discovery_Exceptions_Hosts_Discovery", Storage="_Hosts_Discovery", ThisKey="Host_DiscoveryID1", OtherKey="ID", IsForeignKey=true)]
		public Hosts_Discovery Hosts_Discovery
		{
			get
			{
				return this._Hosts_Discovery.Entity;
			}
			set
			{
				Hosts_Discovery previousValue = this._Hosts_Discovery.Entity;
				if (((previousValue != value) 
							|| (this._Hosts_Discovery.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Hosts_Discovery.Entity = null;
						previousValue.Exceptions_Hosts_Discoveries.Remove(this);
					}
					this._Hosts_Discovery.Entity = value;
					if ((value != null))
					{
						value.Exceptions_Hosts_Discoveries.Add(this);
						this._Host_DiscoveryID1 = value.ID;
					}
					else
					{
						this._Host_DiscoveryID1 = default(int);
					}
					this.SendPropertyChanged("Hosts_Discovery");
				}
			}
		}
		
		[Association(Name="Hosts_Discovery_Exceptions_Hosts_Discovery1", Storage="_Hosts_Discovery1", ThisKey="Host_DiscoveryID2", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Hosts_Discovery Hosts_Discovery1
		{
			get
			{
				return this._Hosts_Discovery1.Entity;
			}
			set
			{
				Hosts_Discovery previousValue = this._Hosts_Discovery1.Entity;
				if (((previousValue != value) 
							|| (this._Hosts_Discovery1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Hosts_Discovery1.Entity = null;
						previousValue.Exceptions_Hosts_Discoveries1.Remove(this);
					}
					this._Hosts_Discovery1.Entity = value;
					if ((value != null))
					{
						value.Exceptions_Hosts_Discoveries1.Add(this);
						this._Host_DiscoveryID2 = value.ID;
					}
					else
					{
						this._Host_DiscoveryID2 = default(int);
					}
					this.SendPropertyChanged("Hosts_Discovery1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.Exceptions_Schemes_Discoveries")]
	public partial class Exceptions_Schemes_Discovery : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ExceptionID;
		
		private int _Scheme_DiscoveryID1;
		
		private int _Scheme_DiscoveryID2;
		
		private EntityRef<Exception> _Exception;
		
		private EntityRef<Schemes_Discovery> _Schemes_Discovery;
		
		private EntityRef<Schemes_Discovery> _Schemes_Discovery1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnExceptionIDChanging(long value);
    partial void OnExceptionIDChanged();
    partial void OnScheme_DiscoveryID1Changing(int value);
    partial void OnScheme_DiscoveryID1Changed();
    partial void OnScheme_DiscoveryID2Changing(int value);
    partial void OnScheme_DiscoveryID2Changed();
    #endregion
		
		public Exceptions_Schemes_Discovery()
		{
			this._Exception = default(EntityRef<Exception>);
			this._Schemes_Discovery = default(EntityRef<Schemes_Discovery>);
			this._Schemes_Discovery1 = default(EntityRef<Schemes_Discovery>);
			OnCreated();
		}
		
		[Column(Storage="_ExceptionID", DbType="BigInt NOT NULL", IsPrimaryKey=true)]
		public long ExceptionID
		{
			get
			{
				return this._ExceptionID;
			}
			set
			{
				if ((this._ExceptionID != value))
				{
					if (this._Exception.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnExceptionIDChanging(value);
					this.SendPropertyChanging();
					this._ExceptionID = value;
					this.SendPropertyChanged("ExceptionID");
					this.OnExceptionIDChanged();
				}
			}
		}
		
		[Column(Storage="_Scheme_DiscoveryID1", DbType="Int NOT NULL")]
		public int Scheme_DiscoveryID1
		{
			get
			{
				return this._Scheme_DiscoveryID1;
			}
			set
			{
				if ((this._Scheme_DiscoveryID1 != value))
				{
					if (this._Schemes_Discovery.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnScheme_DiscoveryID1Changing(value);
					this.SendPropertyChanging();
					this._Scheme_DiscoveryID1 = value;
					this.SendPropertyChanged("Scheme_DiscoveryID1");
					this.OnScheme_DiscoveryID1Changed();
				}
			}
		}
		
		[Column(Storage="_Scheme_DiscoveryID2", DbType="Int NOT NULL")]
		public int Scheme_DiscoveryID2
		{
			get
			{
				return this._Scheme_DiscoveryID2;
			}
			set
			{
				if ((this._Scheme_DiscoveryID2 != value))
				{
					if (this._Schemes_Discovery1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnScheme_DiscoveryID2Changing(value);
					this.SendPropertyChanging();
					this._Scheme_DiscoveryID2 = value;
					this.SendPropertyChanged("Scheme_DiscoveryID2");
					this.OnScheme_DiscoveryID2Changed();
				}
			}
		}
		
		[Association(Name="Exception_Exceptions_Schemes_Discovery", Storage="_Exception", ThisKey="ExceptionID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Exception Exception
		{
			get
			{
				return this._Exception.Entity;
			}
			set
			{
				Exception previousValue = this._Exception.Entity;
				if (((previousValue != value) 
							|| (this._Exception.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Exception.Entity = null;
						previousValue.Exceptions_Schemes_Discovery = null;
					}
					this._Exception.Entity = value;
					if ((value != null))
					{
						value.Exceptions_Schemes_Discovery = this;
						this._ExceptionID = value.ID;
					}
					else
					{
						this._ExceptionID = default(long);
					}
					this.SendPropertyChanged("Exception");
				}
			}
		}
		
		[Association(Name="Schemes_Discovery_Exceptions_Schemes_Discovery", Storage="_Schemes_Discovery", ThisKey="Scheme_DiscoveryID1", OtherKey="ID", IsForeignKey=true)]
		public Schemes_Discovery Schemes_Discovery
		{
			get
			{
				return this._Schemes_Discovery.Entity;
			}
			set
			{
				Schemes_Discovery previousValue = this._Schemes_Discovery.Entity;
				if (((previousValue != value) 
							|| (this._Schemes_Discovery.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Schemes_Discovery.Entity = null;
						previousValue.Exceptions_Schemes_Discoveries.Remove(this);
					}
					this._Schemes_Discovery.Entity = value;
					if ((value != null))
					{
						value.Exceptions_Schemes_Discoveries.Add(this);
						this._Scheme_DiscoveryID1 = value.ID;
					}
					else
					{
						this._Scheme_DiscoveryID1 = default(int);
					}
					this.SendPropertyChanged("Schemes_Discovery");
				}
			}
		}
		
		[Association(Name="Schemes_Discovery_Exceptions_Schemes_Discovery1", Storage="_Schemes_Discovery1", ThisKey="Scheme_DiscoveryID2", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Schemes_Discovery Schemes_Discovery1
		{
			get
			{
				return this._Schemes_Discovery1.Entity;
			}
			set
			{
				Schemes_Discovery previousValue = this._Schemes_Discovery1.Entity;
				if (((previousValue != value) 
							|| (this._Schemes_Discovery1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Schemes_Discovery1.Entity = null;
						previousValue.Exceptions_Schemes_Discoveries1.Remove(this);
					}
					this._Schemes_Discovery1.Entity = value;
					if ((value != null))
					{
						value.Exceptions_Schemes_Discoveries1.Add(this);
						this._Scheme_DiscoveryID2 = value.ID;
					}
					else
					{
						this._Scheme_DiscoveryID2 = default(int);
					}
					this.SendPropertyChanged("Schemes_Discovery1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.Extensions")]
	public partial class Extension : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Extension1;
		
		private EntitySet<Domain> _Domains;
		
		private EntitySet<Extensions_Discovery> _Extensions_Discoveries;
		
		private EntityRef<DisallowedAbsoluteUris_COUNT_BY_EXTENSION> _DisallowedAbsoluteUris_COUNT_BY_EXTENSION;
		
		private EntityRef<DisallowedAbsoluteUris_MOST_POPULAR_EXTENSIONS_BY_ABSOLUTEURI> _DisallowedAbsoluteUris_MOST_POPULAR_EXTENSIONS_BY_ABSOLUTEURI;
		
		private EntityRef<DisallowedAbsoluteUris_MOST_POPULAR_EXTENSIONS_BY_DOMAIN> _DisallowedAbsoluteUris_MOST_POPULAR_EXTENSIONS_BY_DOMAIN;
		
		private EntityRef<DisallowedAbsoluteUris_MOST_POPULAR_EXTENSIONS_BY_EXTENSION> _DisallowedAbsoluteUris_MOST_POPULAR_EXTENSIONS_BY_EXTENSION;
		
		private EntityRef<DisallowedAbsoluteUris_MOST_POPULAR_EXTENSIONS_BY_HOST> _DisallowedAbsoluteUris_MOST_POPULAR_EXTENSIONS_BY_HOST;
		
		private EntityRef<DisallowedAbsoluteUris_MOST_POPULAR_EXTENSIONS_BY_SCHEME> _DisallowedAbsoluteUris_MOST_POPULAR_EXTENSIONS_BY_SCHEME;
		
		private EntityRef<EmailAddresses_COUNT_BY_EXTENSION> _EmailAddresses_COUNT_BY_EXTENSION;
		
		private EntityRef<EmailAddresses_MOST_POPULAR_EXTENSIONS_BY_ABSOLUTEURI> _EmailAddresses_MOST_POPULAR_EXTENSIONS_BY_ABSOLUTEURI;
		
		private EntityRef<EmailAddresses_MOST_POPULAR_EXTENSIONS_BY_DOMAIN> _EmailAddresses_MOST_POPULAR_EXTENSIONS_BY_DOMAIN;
		
		private EntityRef<EmailAddresses_MOST_POPULAR_EXTENSIONS_BY_EXTENSION> _EmailAddresses_MOST_POPULAR_EXTENSIONS_BY_EXTENSION;
		
		private EntityRef<EmailAddresses_MOST_POPULAR_EXTENSIONS_BY_HOST> _EmailAddresses_MOST_POPULAR_EXTENSIONS_BY_HOST;
		
		private EntityRef<EmailAddresses_MOST_POPULAR_EXTENSIONS_BY_SCHEME> _EmailAddresses_MOST_POPULAR_EXTENSIONS_BY_SCHEME;
		
		private EntityRef<Exceptions_COUNT_BY_EXTENSION1> _Exceptions_COUNT_BY_EXTENSION1;
		
		private EntityRef<Exceptions_COUNT_BY_EXTENSION2> _Exceptions_COUNT_BY_EXTENSION2;
		
		private EntityRef<Files_COUNT_BY_EXTENSION> _Files_COUNT_BY_EXTENSION;
		
		private EntityRef<Files_MOST_POPULAR_EXTENSIONS_BY_ABSOLUTEURI> _Files_MOST_POPULAR_EXTENSIONS_BY_ABSOLUTEURI;
		
		private EntityRef<Files_MOST_POPULAR_EXTENSIONS_BY_DOMAIN> _Files_MOST_POPULAR_EXTENSIONS_BY_DOMAIN;
		
		private EntityRef<Files_MOST_POPULAR_EXTENSIONS_BY_EXTENSION> _Files_MOST_POPULAR_EXTENSIONS_BY_EXTENSION;
		
		private EntityRef<Files_MOST_POPULAR_EXTENSIONS_BY_HOST> _Files_MOST_POPULAR_EXTENSIONS_BY_HOST;
		
		private EntityRef<Files_MOST_POPULAR_EXTENSIONS_BY_SCHEME> _Files_MOST_POPULAR_EXTENSIONS_BY_SCHEME;
		
		private EntityRef<HyperLinks_COUNT_BY_EXTENSION> _HyperLinks_COUNT_BY_EXTENSION;
		
		private EntityRef<HyperLinks_MOST_POPULAR_EXTENSIONS_BY_ABSOLUTEURI> _HyperLinks_MOST_POPULAR_EXTENSIONS_BY_ABSOLUTEURI;
		
		private EntityRef<HyperLinks_MOST_POPULAR_EXTENSIONS_BY_DOMAIN> _HyperLinks_MOST_POPULAR_EXTENSIONS_BY_DOMAIN;
		
		private EntityRef<HyperLinks_MOST_POPULAR_EXTENSIONS_BY_EXTENSION> _HyperLinks_MOST_POPULAR_EXTENSIONS_BY_EXTENSION;
		
		private EntityRef<HyperLinks_MOST_POPULAR_EXTENSIONS_BY_HOST> _HyperLinks_MOST_POPULAR_EXTENSIONS_BY_HOST;
		
		private EntityRef<HyperLinks_MOST_POPULAR_EXTENSIONS_BY_SCHEME> _HyperLinks_MOST_POPULAR_EXTENSIONS_BY_SCHEME;
		
		private EntityRef<Images_COUNT_BY_EXTENSION> _Images_COUNT_BY_EXTENSION;
		
		private EntityRef<Images_MOST_POPULAR_EXTENSIONS_BY_ABSOLUTEURI> _Images_MOST_POPULAR_EXTENSIONS_BY_ABSOLUTEURI;
		
		private EntityRef<Images_MOST_POPULAR_EXTENSIONS_BY_DOMAIN> _Images_MOST_POPULAR_EXTENSIONS_BY_DOMAIN;
		
		private EntityRef<Images_MOST_POPULAR_EXTENSIONS_BY_EXTENSION> _Images_MOST_POPULAR_EXTENSIONS_BY_EXTENSION;
		
		private EntityRef<Images_MOST_POPULAR_EXTENSIONS_BY_HOST> _Images_MOST_POPULAR_EXTENSIONS_BY_HOST;
		
		private EntityRef<Images_MOST_POPULAR_EXTENSIONS_BY_SCHEME> _Images_MOST_POPULAR_EXTENSIONS_BY_SCHEME;
		
		private EntityRef<WebPages_COUNT_BY_EXTENSION> _WebPages_COUNT_BY_EXTENSION;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnExtension1Changing(string value);
    partial void OnExtension1Changed();
    #endregion
		
		public Extension()
		{
			this._Domains = new EntitySet<Domain>(new Action<Domain>(this.attach_Domains), new Action<Domain>(this.detach_Domains));
			this._Extensions_Discoveries = new EntitySet<Extensions_Discovery>(new Action<Extensions_Discovery>(this.attach_Extensions_Discoveries), new Action<Extensions_Discovery>(this.detach_Extensions_Discoveries));
			this._DisallowedAbsoluteUris_COUNT_BY_EXTENSION = default(EntityRef<DisallowedAbsoluteUris_COUNT_BY_EXTENSION>);
			this._DisallowedAbsoluteUris_MOST_POPULAR_EXTENSIONS_BY_ABSOLUTEURI = default(EntityRef<DisallowedAbsoluteUris_MOST_POPULAR_EXTENSIONS_BY_ABSOLUTEURI>);
			this._DisallowedAbsoluteUris_MOST_POPULAR_EXTENSIONS_BY_DOMAIN = default(EntityRef<DisallowedAbsoluteUris_MOST_POPULAR_EXTENSIONS_BY_DOMAIN>);
			this._DisallowedAbsoluteUris_MOST_POPULAR_EXTENSIONS_BY_EXTENSION = default(EntityRef<DisallowedAbsoluteUris_MOST_POPULAR_EXTENSIONS_BY_EXTENSION>);
			this._DisallowedAbsoluteUris_MOST_POPULAR_EXTENSIONS_BY_HOST = default(EntityRef<DisallowedAbsoluteUris_MOST_POPULAR_EXTENSIONS_BY_HOST>);
			this._DisallowedAbsoluteUris_MOST_POPULAR_EXTENSIONS_BY_SCHEME = default(EntityRef<DisallowedAbsoluteUris_MOST_POPULAR_EXTENSIONS_BY_SCHEME>);
			this._EmailAddresses_COUNT_BY_EXTENSION = default(EntityRef<EmailAddresses_COUNT_BY_EXTENSION>);
			this._EmailAddresses_MOST_POPULAR_EXTENSIONS_BY_ABSOLUTEURI = default(EntityRef<EmailAddresses_MOST_POPULAR_EXTENSIONS_BY_ABSOLUTEURI>);
			this._EmailAddresses_MOST_POPULAR_EXTENSIONS_BY_DOMAIN = default(EntityRef<EmailAddresses_MOST_POPULAR_EXTENSIONS_BY_DOMAIN>);
			this._EmailAddresses_MOST_POPULAR_EXTENSIONS_BY_EXTENSION = default(EntityRef<EmailAddresses_MOST_POPULAR_EXTENSIONS_BY_EXTENSION>);
			this._EmailAddresses_MOST_POPULAR_EXTENSIONS_BY_HOST = default(EntityRef<EmailAddresses_MOST_POPULAR_EXTENSIONS_BY_HOST>);
			this._EmailAddresses_MOST_POPULAR_EXTENSIONS_BY_SCHEME = default(EntityRef<EmailAddresses_MOST_POPULAR_EXTENSIONS_BY_SCHEME>);
			this._Exceptions_COUNT_BY_EXTENSION1 = default(EntityRef<Exceptions_COUNT_BY_EXTENSION1>);
			this._Exceptions_COUNT_BY_EXTENSION2 = default(EntityRef<Exceptions_COUNT_BY_EXTENSION2>);
			this._Files_COUNT_BY_EXTENSION = default(EntityRef<Files_COUNT_BY_EXTENSION>);
			this._Files_MOST_POPULAR_EXTENSIONS_BY_ABSOLUTEURI = default(EntityRef<Files_MOST_POPULAR_EXTENSIONS_BY_ABSOLUTEURI>);
			this._Files_MOST_POPULAR_EXTENSIONS_BY_DOMAIN = default(EntityRef<Files_MOST_POPULAR_EXTENSIONS_BY_DOMAIN>);
			this._Files_MOST_POPULAR_EXTENSIONS_BY_EXTENSION = default(EntityRef<Files_MOST_POPULAR_EXTENSIONS_BY_EXTENSION>);
			this._Files_MOST_POPULAR_EXTENSIONS_BY_HOST = default(EntityRef<Files_MOST_POPULAR_EXTENSIONS_BY_HOST>);
			this._Files_MOST_POPULAR_EXTENSIONS_BY_SCHEME = default(EntityRef<Files_MOST_POPULAR_EXTENSIONS_BY_SCHEME>);
			this._HyperLinks_COUNT_BY_EXTENSION = default(EntityRef<HyperLinks_COUNT_BY_EXTENSION>);
			this._HyperLinks_MOST_POPULAR_EXTENSIONS_BY_ABSOLUTEURI = default(EntityRef<HyperLinks_MOST_POPULAR_EXTENSIONS_BY_ABSOLUTEURI>);
			this._HyperLinks_MOST_POPULAR_EXTENSIONS_BY_DOMAIN = default(EntityRef<HyperLinks_MOST_POPULAR_EXTENSIONS_BY_DOMAIN>);
			this._HyperLinks_MOST_POPULAR_EXTENSIONS_BY_EXTENSION = default(EntityRef<HyperLinks_MOST_POPULAR_EXTENSIONS_BY_EXTENSION>);
			this._HyperLinks_MOST_POPULAR_EXTENSIONS_BY_HOST = default(EntityRef<HyperLinks_MOST_POPULAR_EXTENSIONS_BY_HOST>);
			this._HyperLinks_MOST_POPULAR_EXTENSIONS_BY_SCHEME = default(EntityRef<HyperLinks_MOST_POPULAR_EXTENSIONS_BY_SCHEME>);
			this._Images_COUNT_BY_EXTENSION = default(EntityRef<Images_COUNT_BY_EXTENSION>);
			this._Images_MOST_POPULAR_EXTENSIONS_BY_ABSOLUTEURI = default(EntityRef<Images_MOST_POPULAR_EXTENSIONS_BY_ABSOLUTEURI>);
			this._Images_MOST_POPULAR_EXTENSIONS_BY_DOMAIN = default(EntityRef<Images_MOST_POPULAR_EXTENSIONS_BY_DOMAIN>);
			this._Images_MOST_POPULAR_EXTENSIONS_BY_EXTENSION = default(EntityRef<Images_MOST_POPULAR_EXTENSIONS_BY_EXTENSION>);
			this._Images_MOST_POPULAR_EXTENSIONS_BY_HOST = default(EntityRef<Images_MOST_POPULAR_EXTENSIONS_BY_HOST>);
			this._Images_MOST_POPULAR_EXTENSIONS_BY_SCHEME = default(EntityRef<Images_MOST_POPULAR_EXTENSIONS_BY_SCHEME>);
			this._WebPages_COUNT_BY_EXTENSION = default(EntityRef<WebPages_COUNT_BY_EXTENSION>);
			OnCreated();
		}
		
		[Column(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[Column(Name="Extension", Storage="_Extension1", DbType="VarChar(884) NOT NULL", CanBeNull=false)]
		public string Extension1
		{
			get
			{
				return this._Extension1;
			}
			set
			{
				if ((this._Extension1 != value))
				{
					this.OnExtension1Changing(value);
					this.SendPropertyChanging();
					this._Extension1 = value;
					this.SendPropertyChanged("Extension1");
					this.OnExtension1Changed();
				}
			}
		}
		
		[Association(Name="Extension_Domain", Storage="_Domains", ThisKey="ID", OtherKey="ExtensionID")]
		public EntitySet<Domain> Domains
		{
			get
			{
				return this._Domains;
			}
			set
			{
				this._Domains.Assign(value);
			}
		}
		
		[Association(Name="Extension_Extensions_Discovery", Storage="_Extensions_Discoveries", ThisKey="ID", OtherKey="ExtensionID")]
		public EntitySet<Extensions_Discovery> Extensions_Discoveries
		{
			get
			{
				return this._Extensions_Discoveries;
			}
			set
			{
				this._Extensions_Discoveries.Assign(value);
			}
		}
		
		[Association(Name="Extension_DisallowedAbsoluteUris_COUNT_BY_EXTENSION", Storage="_DisallowedAbsoluteUris_COUNT_BY_EXTENSION", ThisKey="ID", OtherKey="ExtensionID", IsUnique=true, IsForeignKey=false)]
		public DisallowedAbsoluteUris_COUNT_BY_EXTENSION DisallowedAbsoluteUris_COUNT_BY_EXTENSION
		{
			get
			{
				return this._DisallowedAbsoluteUris_COUNT_BY_EXTENSION.Entity;
			}
			set
			{
				DisallowedAbsoluteUris_COUNT_BY_EXTENSION previousValue = this._DisallowedAbsoluteUris_COUNT_BY_EXTENSION.Entity;
				if (((previousValue != value) 
							|| (this._DisallowedAbsoluteUris_COUNT_BY_EXTENSION.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DisallowedAbsoluteUris_COUNT_BY_EXTENSION.Entity = null;
						previousValue.Extension = null;
					}
					this._DisallowedAbsoluteUris_COUNT_BY_EXTENSION.Entity = value;
					if ((value != null))
					{
						value.Extension = this;
					}
					this.SendPropertyChanged("DisallowedAbsoluteUris_COUNT_BY_EXTENSION");
				}
			}
		}
		
		[Association(Name="Extension_DisallowedAbsoluteUris_MOST_POPULAR_EXTENSIONS_BY_ABSOLUTEURI", Storage="_DisallowedAbsoluteUris_MOST_POPULAR_EXTENSIONS_BY_ABSOLUTEURI", ThisKey="ID", OtherKey="ExtensionID", IsUnique=true, IsForeignKey=false)]
		public DisallowedAbsoluteUris_MOST_POPULAR_EXTENSIONS_BY_ABSOLUTEURI DisallowedAbsoluteUris_MOST_POPULAR_EXTENSIONS_BY_ABSOLUTEURI
		{
			get
			{
				return this._DisallowedAbsoluteUris_MOST_POPULAR_EXTENSIONS_BY_ABSOLUTEURI.Entity;
			}
			set
			{
				DisallowedAbsoluteUris_MOST_POPULAR_EXTENSIONS_BY_ABSOLUTEURI previousValue = this._DisallowedAbsoluteUris_MOST_POPULAR_EXTENSIONS_BY_ABSOLUTEURI.Entity;
				if (((previousValue != value) 
							|| (this._DisallowedAbsoluteUris_MOST_POPULAR_EXTENSIONS_BY_ABSOLUTEURI.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DisallowedAbsoluteUris_MOST_POPULAR_EXTENSIONS_BY_ABSOLUTEURI.Entity = null;
						previousValue.Extension = null;
					}
					this._DisallowedAbsoluteUris_MOST_POPULAR_EXTENSIONS_BY_ABSOLUTEURI.Entity = value;
					if ((value != null))
					{
						value.Extension = this;
					}
					this.SendPropertyChanged("DisallowedAbsoluteUris_MOST_POPULAR_EXTENSIONS_BY_ABSOLUTEURI");
				}
			}
		}
		
		[Association(Name="Extension_DisallowedAbsoluteUris_MOST_POPULAR_EXTENSIONS_BY_DOMAIN", Storage="_DisallowedAbsoluteUris_MOST_POPULAR_EXTENSIONS_BY_DOMAIN", ThisKey="ID", OtherKey="ExtensionID", IsUnique=true, IsForeignKey=false)]
		public DisallowedAbsoluteUris_MOST_POPULAR_EXTENSIONS_BY_DOMAIN DisallowedAbsoluteUris_MOST_POPULAR_EXTENSIONS_BY_DOMAIN
		{
			get
			{
				return this._DisallowedAbsoluteUris_MOST_POPULAR_EXTENSIONS_BY_DOMAIN.Entity;
			}
			set
			{
				DisallowedAbsoluteUris_MOST_POPULAR_EXTENSIONS_BY_DOMAIN previousValue = this._DisallowedAbsoluteUris_MOST_POPULAR_EXTENSIONS_BY_DOMAIN.Entity;
				if (((previousValue != value) 
							|| (this._DisallowedAbsoluteUris_MOST_POPULAR_EXTENSIONS_BY_DOMAIN.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DisallowedAbsoluteUris_MOST_POPULAR_EXTENSIONS_BY_DOMAIN.Entity = null;
						previousValue.Extension = null;
					}
					this._DisallowedAbsoluteUris_MOST_POPULAR_EXTENSIONS_BY_DOMAIN.Entity = value;
					if ((value != null))
					{
						value.Extension = this;
					}
					this.SendPropertyChanged("DisallowedAbsoluteUris_MOST_POPULAR_EXTENSIONS_BY_DOMAIN");
				}
			}
		}
		
		[Association(Name="Extension_DisallowedAbsoluteUris_MOST_POPULAR_EXTENSIONS_BY_EXTENSION", Storage="_DisallowedAbsoluteUris_MOST_POPULAR_EXTENSIONS_BY_EXTENSION", ThisKey="ID", OtherKey="ExtensionID", IsUnique=true, IsForeignKey=false)]
		public DisallowedAbsoluteUris_MOST_POPULAR_EXTENSIONS_BY_EXTENSION DisallowedAbsoluteUris_MOST_POPULAR_EXTENSIONS_BY_EXTENSION
		{
			get
			{
				return this._DisallowedAbsoluteUris_MOST_POPULAR_EXTENSIONS_BY_EXTENSION.Entity;
			}
			set
			{
				DisallowedAbsoluteUris_MOST_POPULAR_EXTENSIONS_BY_EXTENSION previousValue = this._DisallowedAbsoluteUris_MOST_POPULAR_EXTENSIONS_BY_EXTENSION.Entity;
				if (((previousValue != value) 
							|| (this._DisallowedAbsoluteUris_MOST_POPULAR_EXTENSIONS_BY_EXTENSION.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DisallowedAbsoluteUris_MOST_POPULAR_EXTENSIONS_BY_EXTENSION.Entity = null;
						previousValue.Extension = null;
					}
					this._DisallowedAbsoluteUris_MOST_POPULAR_EXTENSIONS_BY_EXTENSION.Entity = value;
					if ((value != null))
					{
						value.Extension = this;
					}
					this.SendPropertyChanged("DisallowedAbsoluteUris_MOST_POPULAR_EXTENSIONS_BY_EXTENSION");
				}
			}
		}
		
		[Association(Name="Extension_DisallowedAbsoluteUris_MOST_POPULAR_EXTENSIONS_BY_HOST", Storage="_DisallowedAbsoluteUris_MOST_POPULAR_EXTENSIONS_BY_HOST", ThisKey="ID", OtherKey="ExtensionID", IsUnique=true, IsForeignKey=false)]
		public DisallowedAbsoluteUris_MOST_POPULAR_EXTENSIONS_BY_HOST DisallowedAbsoluteUris_MOST_POPULAR_EXTENSIONS_BY_HOST
		{
			get
			{
				return this._DisallowedAbsoluteUris_MOST_POPULAR_EXTENSIONS_BY_HOST.Entity;
			}
			set
			{
				DisallowedAbsoluteUris_MOST_POPULAR_EXTENSIONS_BY_HOST previousValue = this._DisallowedAbsoluteUris_MOST_POPULAR_EXTENSIONS_BY_HOST.Entity;
				if (((previousValue != value) 
							|| (this._DisallowedAbsoluteUris_MOST_POPULAR_EXTENSIONS_BY_HOST.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DisallowedAbsoluteUris_MOST_POPULAR_EXTENSIONS_BY_HOST.Entity = null;
						previousValue.Extension = null;
					}
					this._DisallowedAbsoluteUris_MOST_POPULAR_EXTENSIONS_BY_HOST.Entity = value;
					if ((value != null))
					{
						value.Extension = this;
					}
					this.SendPropertyChanged("DisallowedAbsoluteUris_MOST_POPULAR_EXTENSIONS_BY_HOST");
				}
			}
		}
		
		[Association(Name="Extension_DisallowedAbsoluteUris_MOST_POPULAR_EXTENSIONS_BY_SCHEME", Storage="_DisallowedAbsoluteUris_MOST_POPULAR_EXTENSIONS_BY_SCHEME", ThisKey="ID", OtherKey="ExtensionID", IsUnique=true, IsForeignKey=false)]
		public DisallowedAbsoluteUris_MOST_POPULAR_EXTENSIONS_BY_SCHEME DisallowedAbsoluteUris_MOST_POPULAR_EXTENSIONS_BY_SCHEME
		{
			get
			{
				return this._DisallowedAbsoluteUris_MOST_POPULAR_EXTENSIONS_BY_SCHEME.Entity;
			}
			set
			{
				DisallowedAbsoluteUris_MOST_POPULAR_EXTENSIONS_BY_SCHEME previousValue = this._DisallowedAbsoluteUris_MOST_POPULAR_EXTENSIONS_BY_SCHEME.Entity;
				if (((previousValue != value) 
							|| (this._DisallowedAbsoluteUris_MOST_POPULAR_EXTENSIONS_BY_SCHEME.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DisallowedAbsoluteUris_MOST_POPULAR_EXTENSIONS_BY_SCHEME.Entity = null;
						previousValue.Extension = null;
					}
					this._DisallowedAbsoluteUris_MOST_POPULAR_EXTENSIONS_BY_SCHEME.Entity = value;
					if ((value != null))
					{
						value.Extension = this;
					}
					this.SendPropertyChanged("DisallowedAbsoluteUris_MOST_POPULAR_EXTENSIONS_BY_SCHEME");
				}
			}
		}
		
		[Association(Name="Extension_EmailAddresses_COUNT_BY_EXTENSION", Storage="_EmailAddresses_COUNT_BY_EXTENSION", ThisKey="ID", OtherKey="ExtensionID", IsUnique=true, IsForeignKey=false)]
		public EmailAddresses_COUNT_BY_EXTENSION EmailAddresses_COUNT_BY_EXTENSION
		{
			get
			{
				return this._EmailAddresses_COUNT_BY_EXTENSION.Entity;
			}
			set
			{
				EmailAddresses_COUNT_BY_EXTENSION previousValue = this._EmailAddresses_COUNT_BY_EXTENSION.Entity;
				if (((previousValue != value) 
							|| (this._EmailAddresses_COUNT_BY_EXTENSION.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._EmailAddresses_COUNT_BY_EXTENSION.Entity = null;
						previousValue.Extension = null;
					}
					this._EmailAddresses_COUNT_BY_EXTENSION.Entity = value;
					if ((value != null))
					{
						value.Extension = this;
					}
					this.SendPropertyChanged("EmailAddresses_COUNT_BY_EXTENSION");
				}
			}
		}
		
		[Association(Name="Extension_EmailAddresses_MOST_POPULAR_EXTENSIONS_BY_ABSOLUTEURI", Storage="_EmailAddresses_MOST_POPULAR_EXTENSIONS_BY_ABSOLUTEURI", ThisKey="ID", OtherKey="ExtensionID", IsUnique=true, IsForeignKey=false)]
		public EmailAddresses_MOST_POPULAR_EXTENSIONS_BY_ABSOLUTEURI EmailAddresses_MOST_POPULAR_EXTENSIONS_BY_ABSOLUTEURI
		{
			get
			{
				return this._EmailAddresses_MOST_POPULAR_EXTENSIONS_BY_ABSOLUTEURI.Entity;
			}
			set
			{
				EmailAddresses_MOST_POPULAR_EXTENSIONS_BY_ABSOLUTEURI previousValue = this._EmailAddresses_MOST_POPULAR_EXTENSIONS_BY_ABSOLUTEURI.Entity;
				if (((previousValue != value) 
							|| (this._EmailAddresses_MOST_POPULAR_EXTENSIONS_BY_ABSOLUTEURI.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._EmailAddresses_MOST_POPULAR_EXTENSIONS_BY_ABSOLUTEURI.Entity = null;
						previousValue.Extension = null;
					}
					this._EmailAddresses_MOST_POPULAR_EXTENSIONS_BY_ABSOLUTEURI.Entity = value;
					if ((value != null))
					{
						value.Extension = this;
					}
					this.SendPropertyChanged("EmailAddresses_MOST_POPULAR_EXTENSIONS_BY_ABSOLUTEURI");
				}
			}
		}
		
		[Association(Name="Extension_EmailAddresses_MOST_POPULAR_EXTENSIONS_BY_DOMAIN", Storage="_EmailAddresses_MOST_POPULAR_EXTENSIONS_BY_DOMAIN", ThisKey="ID", OtherKey="ExtensionID", IsUnique=true, IsForeignKey=false)]
		public EmailAddresses_MOST_POPULAR_EXTENSIONS_BY_DOMAIN EmailAddresses_MOST_POPULAR_EXTENSIONS_BY_DOMAIN
		{
			get
			{
				return this._EmailAddresses_MOST_POPULAR_EXTENSIONS_BY_DOMAIN.Entity;
			}
			set
			{
				EmailAddresses_MOST_POPULAR_EXTENSIONS_BY_DOMAIN previousValue = this._EmailAddresses_MOST_POPULAR_EXTENSIONS_BY_DOMAIN.Entity;
				if (((previousValue != value) 
							|| (this._EmailAddresses_MOST_POPULAR_EXTENSIONS_BY_DOMAIN.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._EmailAddresses_MOST_POPULAR_EXTENSIONS_BY_DOMAIN.Entity = null;
						previousValue.Extension = null;
					}
					this._EmailAddresses_MOST_POPULAR_EXTENSIONS_BY_DOMAIN.Entity = value;
					if ((value != null))
					{
						value.Extension = this;
					}
					this.SendPropertyChanged("EmailAddresses_MOST_POPULAR_EXTENSIONS_BY_DOMAIN");
				}
			}
		}
		
		[Association(Name="Extension_EmailAddresses_MOST_POPULAR_EXTENSIONS_BY_EXTENSION", Storage="_EmailAddresses_MOST_POPULAR_EXTENSIONS_BY_EXTENSION", ThisKey="ID", OtherKey="ExtensionID", IsUnique=true, IsForeignKey=false)]
		public EmailAddresses_MOST_POPULAR_EXTENSIONS_BY_EXTENSION EmailAddresses_MOST_POPULAR_EXTENSIONS_BY_EXTENSION
		{
			get
			{
				return this._EmailAddresses_MOST_POPULAR_EXTENSIONS_BY_EXTENSION.Entity;
			}
			set
			{
				EmailAddresses_MOST_POPULAR_EXTENSIONS_BY_EXTENSION previousValue = this._EmailAddresses_MOST_POPULAR_EXTENSIONS_BY_EXTENSION.Entity;
				if (((previousValue != value) 
							|| (this._EmailAddresses_MOST_POPULAR_EXTENSIONS_BY_EXTENSION.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._EmailAddresses_MOST_POPULAR_EXTENSIONS_BY_EXTENSION.Entity = null;
						previousValue.Extension = null;
					}
					this._EmailAddresses_MOST_POPULAR_EXTENSIONS_BY_EXTENSION.Entity = value;
					if ((value != null))
					{
						value.Extension = this;
					}
					this.SendPropertyChanged("EmailAddresses_MOST_POPULAR_EXTENSIONS_BY_EXTENSION");
				}
			}
		}
		
		[Association(Name="Extension_EmailAddresses_MOST_POPULAR_EXTENSIONS_BY_HOST", Storage="_EmailAddresses_MOST_POPULAR_EXTENSIONS_BY_HOST", ThisKey="ID", OtherKey="ExtensionID", IsUnique=true, IsForeignKey=false)]
		public EmailAddresses_MOST_POPULAR_EXTENSIONS_BY_HOST EmailAddresses_MOST_POPULAR_EXTENSIONS_BY_HOST
		{
			get
			{
				return this._EmailAddresses_MOST_POPULAR_EXTENSIONS_BY_HOST.Entity;
			}
			set
			{
				EmailAddresses_MOST_POPULAR_EXTENSIONS_BY_HOST previousValue = this._EmailAddresses_MOST_POPULAR_EXTENSIONS_BY_HOST.Entity;
				if (((previousValue != value) 
							|| (this._EmailAddresses_MOST_POPULAR_EXTENSIONS_BY_HOST.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._EmailAddresses_MOST_POPULAR_EXTENSIONS_BY_HOST.Entity = null;
						previousValue.Extension = null;
					}
					this._EmailAddresses_MOST_POPULAR_EXTENSIONS_BY_HOST.Entity = value;
					if ((value != null))
					{
						value.Extension = this;
					}
					this.SendPropertyChanged("EmailAddresses_MOST_POPULAR_EXTENSIONS_BY_HOST");
				}
			}
		}
		
		[Association(Name="Extension_EmailAddresses_MOST_POPULAR_EXTENSIONS_BY_SCHEME", Storage="_EmailAddresses_MOST_POPULAR_EXTENSIONS_BY_SCHEME", ThisKey="ID", OtherKey="ExtensionID", IsUnique=true, IsForeignKey=false)]
		public EmailAddresses_MOST_POPULAR_EXTENSIONS_BY_SCHEME EmailAddresses_MOST_POPULAR_EXTENSIONS_BY_SCHEME
		{
			get
			{
				return this._EmailAddresses_MOST_POPULAR_EXTENSIONS_BY_SCHEME.Entity;
			}
			set
			{
				EmailAddresses_MOST_POPULAR_EXTENSIONS_BY_SCHEME previousValue = this._EmailAddresses_MOST_POPULAR_EXTENSIONS_BY_SCHEME.Entity;
				if (((previousValue != value) 
							|| (this._EmailAddresses_MOST_POPULAR_EXTENSIONS_BY_SCHEME.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._EmailAddresses_MOST_POPULAR_EXTENSIONS_BY_SCHEME.Entity = null;
						previousValue.Extension = null;
					}
					this._EmailAddresses_MOST_POPULAR_EXTENSIONS_BY_SCHEME.Entity = value;
					if ((value != null))
					{
						value.Extension = this;
					}
					this.SendPropertyChanged("EmailAddresses_MOST_POPULAR_EXTENSIONS_BY_SCHEME");
				}
			}
		}
		
		[Association(Name="Extension_Exceptions_COUNT_BY_EXTENSION1", Storage="_Exceptions_COUNT_BY_EXTENSION1", ThisKey="Extension1", OtherKey="Extension1", IsUnique=true, IsForeignKey=false)]
		public Exceptions_COUNT_BY_EXTENSION1 Exceptions_COUNT_BY_EXTENSION1
		{
			get
			{
				return this._Exceptions_COUNT_BY_EXTENSION1.Entity;
			}
			set
			{
				Exceptions_COUNT_BY_EXTENSION1 previousValue = this._Exceptions_COUNT_BY_EXTENSION1.Entity;
				if (((previousValue != value) 
							|| (this._Exceptions_COUNT_BY_EXTENSION1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Exceptions_COUNT_BY_EXTENSION1.Entity = null;
						previousValue.Extension = null;
					}
					this._Exceptions_COUNT_BY_EXTENSION1.Entity = value;
					if ((value != null))
					{
						value.Extension = this;
					}
					this.SendPropertyChanged("Exceptions_COUNT_BY_EXTENSION1");
				}
			}
		}
		
		[Association(Name="Extension_Exceptions_COUNT_BY_EXTENSION2", Storage="_Exceptions_COUNT_BY_EXTENSION2", ThisKey="Extension1", OtherKey="Extension2", IsUnique=true, IsForeignKey=false)]
		public Exceptions_COUNT_BY_EXTENSION2 Exceptions_COUNT_BY_EXTENSION2
		{
			get
			{
				return this._Exceptions_COUNT_BY_EXTENSION2.Entity;
			}
			set
			{
				Exceptions_COUNT_BY_EXTENSION2 previousValue = this._Exceptions_COUNT_BY_EXTENSION2.Entity;
				if (((previousValue != value) 
							|| (this._Exceptions_COUNT_BY_EXTENSION2.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Exceptions_COUNT_BY_EXTENSION2.Entity = null;
						previousValue.Extension = null;
					}
					this._Exceptions_COUNT_BY_EXTENSION2.Entity = value;
					if ((value != null))
					{
						value.Extension = this;
					}
					this.SendPropertyChanged("Exceptions_COUNT_BY_EXTENSION2");
				}
			}
		}
		
		[Association(Name="Extension_Files_COUNT_BY_EXTENSION", Storage="_Files_COUNT_BY_EXTENSION", ThisKey="ID", OtherKey="ExtensionID", IsUnique=true, IsForeignKey=false)]
		public Files_COUNT_BY_EXTENSION Files_COUNT_BY_EXTENSION
		{
			get
			{
				return this._Files_COUNT_BY_EXTENSION.Entity;
			}
			set
			{
				Files_COUNT_BY_EXTENSION previousValue = this._Files_COUNT_BY_EXTENSION.Entity;
				if (((previousValue != value) 
							|| (this._Files_COUNT_BY_EXTENSION.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Files_COUNT_BY_EXTENSION.Entity = null;
						previousValue.Extension = null;
					}
					this._Files_COUNT_BY_EXTENSION.Entity = value;
					if ((value != null))
					{
						value.Extension = this;
					}
					this.SendPropertyChanged("Files_COUNT_BY_EXTENSION");
				}
			}
		}
		
		[Association(Name="Extension_Files_MOST_POPULAR_EXTENSIONS_BY_ABSOLUTEURI", Storage="_Files_MOST_POPULAR_EXTENSIONS_BY_ABSOLUTEURI", ThisKey="ID", OtherKey="ExtensionID", IsUnique=true, IsForeignKey=false)]
		public Files_MOST_POPULAR_EXTENSIONS_BY_ABSOLUTEURI Files_MOST_POPULAR_EXTENSIONS_BY_ABSOLUTEURI
		{
			get
			{
				return this._Files_MOST_POPULAR_EXTENSIONS_BY_ABSOLUTEURI.Entity;
			}
			set
			{
				Files_MOST_POPULAR_EXTENSIONS_BY_ABSOLUTEURI previousValue = this._Files_MOST_POPULAR_EXTENSIONS_BY_ABSOLUTEURI.Entity;
				if (((previousValue != value) 
							|| (this._Files_MOST_POPULAR_EXTENSIONS_BY_ABSOLUTEURI.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Files_MOST_POPULAR_EXTENSIONS_BY_ABSOLUTEURI.Entity = null;
						previousValue.Extension = null;
					}
					this._Files_MOST_POPULAR_EXTENSIONS_BY_ABSOLUTEURI.Entity = value;
					if ((value != null))
					{
						value.Extension = this;
					}
					this.SendPropertyChanged("Files_MOST_POPULAR_EXTENSIONS_BY_ABSOLUTEURI");
				}
			}
		}
		
		[Association(Name="Extension_Files_MOST_POPULAR_EXTENSIONS_BY_DOMAIN", Storage="_Files_MOST_POPULAR_EXTENSIONS_BY_DOMAIN", ThisKey="ID", OtherKey="ExtensionID", IsUnique=true, IsForeignKey=false)]
		public Files_MOST_POPULAR_EXTENSIONS_BY_DOMAIN Files_MOST_POPULAR_EXTENSIONS_BY_DOMAIN
		{
			get
			{
				return this._Files_MOST_POPULAR_EXTENSIONS_BY_DOMAIN.Entity;
			}
			set
			{
				Files_MOST_POPULAR_EXTENSIONS_BY_DOMAIN previousValue = this._Files_MOST_POPULAR_EXTENSIONS_BY_DOMAIN.Entity;
				if (((previousValue != value) 
							|| (this._Files_MOST_POPULAR_EXTENSIONS_BY_DOMAIN.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Files_MOST_POPULAR_EXTENSIONS_BY_DOMAIN.Entity = null;
						previousValue.Extension = null;
					}
					this._Files_MOST_POPULAR_EXTENSIONS_BY_DOMAIN.Entity = value;
					if ((value != null))
					{
						value.Extension = this;
					}
					this.SendPropertyChanged("Files_MOST_POPULAR_EXTENSIONS_BY_DOMAIN");
				}
			}
		}
		
		[Association(Name="Extension_Files_MOST_POPULAR_EXTENSIONS_BY_EXTENSION", Storage="_Files_MOST_POPULAR_EXTENSIONS_BY_EXTENSION", ThisKey="ID", OtherKey="ExtensionID", IsUnique=true, IsForeignKey=false)]
		public Files_MOST_POPULAR_EXTENSIONS_BY_EXTENSION Files_MOST_POPULAR_EXTENSIONS_BY_EXTENSION
		{
			get
			{
				return this._Files_MOST_POPULAR_EXTENSIONS_BY_EXTENSION.Entity;
			}
			set
			{
				Files_MOST_POPULAR_EXTENSIONS_BY_EXTENSION previousValue = this._Files_MOST_POPULAR_EXTENSIONS_BY_EXTENSION.Entity;
				if (((previousValue != value) 
							|| (this._Files_MOST_POPULAR_EXTENSIONS_BY_EXTENSION.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Files_MOST_POPULAR_EXTENSIONS_BY_EXTENSION.Entity = null;
						previousValue.Extension = null;
					}
					this._Files_MOST_POPULAR_EXTENSIONS_BY_EXTENSION.Entity = value;
					if ((value != null))
					{
						value.Extension = this;
					}
					this.SendPropertyChanged("Files_MOST_POPULAR_EXTENSIONS_BY_EXTENSION");
				}
			}
		}
		
		[Association(Name="Extension_Files_MOST_POPULAR_EXTENSIONS_BY_HOST", Storage="_Files_MOST_POPULAR_EXTENSIONS_BY_HOST", ThisKey="ID", OtherKey="ExtensionID", IsUnique=true, IsForeignKey=false)]
		public Files_MOST_POPULAR_EXTENSIONS_BY_HOST Files_MOST_POPULAR_EXTENSIONS_BY_HOST
		{
			get
			{
				return this._Files_MOST_POPULAR_EXTENSIONS_BY_HOST.Entity;
			}
			set
			{
				Files_MOST_POPULAR_EXTENSIONS_BY_HOST previousValue = this._Files_MOST_POPULAR_EXTENSIONS_BY_HOST.Entity;
				if (((previousValue != value) 
							|| (this._Files_MOST_POPULAR_EXTENSIONS_BY_HOST.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Files_MOST_POPULAR_EXTENSIONS_BY_HOST.Entity = null;
						previousValue.Extension = null;
					}
					this._Files_MOST_POPULAR_EXTENSIONS_BY_HOST.Entity = value;
					if ((value != null))
					{
						value.Extension = this;
					}
					this.SendPropertyChanged("Files_MOST_POPULAR_EXTENSIONS_BY_HOST");
				}
			}
		}
		
		[Association(Name="Extension_Files_MOST_POPULAR_EXTENSIONS_BY_SCHEME", Storage="_Files_MOST_POPULAR_EXTENSIONS_BY_SCHEME", ThisKey="ID", OtherKey="ExtensionID", IsUnique=true, IsForeignKey=false)]
		public Files_MOST_POPULAR_EXTENSIONS_BY_SCHEME Files_MOST_POPULAR_EXTENSIONS_BY_SCHEME
		{
			get
			{
				return this._Files_MOST_POPULAR_EXTENSIONS_BY_SCHEME.Entity;
			}
			set
			{
				Files_MOST_POPULAR_EXTENSIONS_BY_SCHEME previousValue = this._Files_MOST_POPULAR_EXTENSIONS_BY_SCHEME.Entity;
				if (((previousValue != value) 
							|| (this._Files_MOST_POPULAR_EXTENSIONS_BY_SCHEME.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Files_MOST_POPULAR_EXTENSIONS_BY_SCHEME.Entity = null;
						previousValue.Extension = null;
					}
					this._Files_MOST_POPULAR_EXTENSIONS_BY_SCHEME.Entity = value;
					if ((value != null))
					{
						value.Extension = this;
					}
					this.SendPropertyChanged("Files_MOST_POPULAR_EXTENSIONS_BY_SCHEME");
				}
			}
		}
		
		[Association(Name="Extension_HyperLinks_COUNT_BY_EXTENSION", Storage="_HyperLinks_COUNT_BY_EXTENSION", ThisKey="ID", OtherKey="ExtensionID", IsUnique=true, IsForeignKey=false)]
		public HyperLinks_COUNT_BY_EXTENSION HyperLinks_COUNT_BY_EXTENSION
		{
			get
			{
				return this._HyperLinks_COUNT_BY_EXTENSION.Entity;
			}
			set
			{
				HyperLinks_COUNT_BY_EXTENSION previousValue = this._HyperLinks_COUNT_BY_EXTENSION.Entity;
				if (((previousValue != value) 
							|| (this._HyperLinks_COUNT_BY_EXTENSION.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._HyperLinks_COUNT_BY_EXTENSION.Entity = null;
						previousValue.Extension = null;
					}
					this._HyperLinks_COUNT_BY_EXTENSION.Entity = value;
					if ((value != null))
					{
						value.Extension = this;
					}
					this.SendPropertyChanged("HyperLinks_COUNT_BY_EXTENSION");
				}
			}
		}
		
		[Association(Name="Extension_HyperLinks_MOST_POPULAR_EXTENSIONS_BY_ABSOLUTEURI", Storage="_HyperLinks_MOST_POPULAR_EXTENSIONS_BY_ABSOLUTEURI", ThisKey="ID", OtherKey="ExtensionID", IsUnique=true, IsForeignKey=false)]
		public HyperLinks_MOST_POPULAR_EXTENSIONS_BY_ABSOLUTEURI HyperLinks_MOST_POPULAR_EXTENSIONS_BY_ABSOLUTEURI
		{
			get
			{
				return this._HyperLinks_MOST_POPULAR_EXTENSIONS_BY_ABSOLUTEURI.Entity;
			}
			set
			{
				HyperLinks_MOST_POPULAR_EXTENSIONS_BY_ABSOLUTEURI previousValue = this._HyperLinks_MOST_POPULAR_EXTENSIONS_BY_ABSOLUTEURI.Entity;
				if (((previousValue != value) 
							|| (this._HyperLinks_MOST_POPULAR_EXTENSIONS_BY_ABSOLUTEURI.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._HyperLinks_MOST_POPULAR_EXTENSIONS_BY_ABSOLUTEURI.Entity = null;
						previousValue.Extension = null;
					}
					this._HyperLinks_MOST_POPULAR_EXTENSIONS_BY_ABSOLUTEURI.Entity = value;
					if ((value != null))
					{
						value.Extension = this;
					}
					this.SendPropertyChanged("HyperLinks_MOST_POPULAR_EXTENSIONS_BY_ABSOLUTEURI");
				}
			}
		}
		
		[Association(Name="Extension_HyperLinks_MOST_POPULAR_EXTENSIONS_BY_DOMAIN", Storage="_HyperLinks_MOST_POPULAR_EXTENSIONS_BY_DOMAIN", ThisKey="ID", OtherKey="ExtensionID", IsUnique=true, IsForeignKey=false)]
		public HyperLinks_MOST_POPULAR_EXTENSIONS_BY_DOMAIN HyperLinks_MOST_POPULAR_EXTENSIONS_BY_DOMAIN
		{
			get
			{
				return this._HyperLinks_MOST_POPULAR_EXTENSIONS_BY_DOMAIN.Entity;
			}
			set
			{
				HyperLinks_MOST_POPULAR_EXTENSIONS_BY_DOMAIN previousValue = this._HyperLinks_MOST_POPULAR_EXTENSIONS_BY_DOMAIN.Entity;
				if (((previousValue != value) 
							|| (this._HyperLinks_MOST_POPULAR_EXTENSIONS_BY_DOMAIN.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._HyperLinks_MOST_POPULAR_EXTENSIONS_BY_DOMAIN.Entity = null;
						previousValue.Extension = null;
					}
					this._HyperLinks_MOST_POPULAR_EXTENSIONS_BY_DOMAIN.Entity = value;
					if ((value != null))
					{
						value.Extension = this;
					}
					this.SendPropertyChanged("HyperLinks_MOST_POPULAR_EXTENSIONS_BY_DOMAIN");
				}
			}
		}
		
		[Association(Name="Extension_HyperLinks_MOST_POPULAR_EXTENSIONS_BY_EXTENSION", Storage="_HyperLinks_MOST_POPULAR_EXTENSIONS_BY_EXTENSION", ThisKey="ID", OtherKey="ExtensionID", IsUnique=true, IsForeignKey=false)]
		public HyperLinks_MOST_POPULAR_EXTENSIONS_BY_EXTENSION HyperLinks_MOST_POPULAR_EXTENSIONS_BY_EXTENSION
		{
			get
			{
				return this._HyperLinks_MOST_POPULAR_EXTENSIONS_BY_EXTENSION.Entity;
			}
			set
			{
				HyperLinks_MOST_POPULAR_EXTENSIONS_BY_EXTENSION previousValue = this._HyperLinks_MOST_POPULAR_EXTENSIONS_BY_EXTENSION.Entity;
				if (((previousValue != value) 
							|| (this._HyperLinks_MOST_POPULAR_EXTENSIONS_BY_EXTENSION.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._HyperLinks_MOST_POPULAR_EXTENSIONS_BY_EXTENSION.Entity = null;
						previousValue.Extension = null;
					}
					this._HyperLinks_MOST_POPULAR_EXTENSIONS_BY_EXTENSION.Entity = value;
					if ((value != null))
					{
						value.Extension = this;
					}
					this.SendPropertyChanged("HyperLinks_MOST_POPULAR_EXTENSIONS_BY_EXTENSION");
				}
			}
		}
		
		[Association(Name="Extension_HyperLinks_MOST_POPULAR_EXTENSIONS_BY_HOST", Storage="_HyperLinks_MOST_POPULAR_EXTENSIONS_BY_HOST", ThisKey="ID", OtherKey="ExtensionID", IsUnique=true, IsForeignKey=false)]
		public HyperLinks_MOST_POPULAR_EXTENSIONS_BY_HOST HyperLinks_MOST_POPULAR_EXTENSIONS_BY_HOST
		{
			get
			{
				return this._HyperLinks_MOST_POPULAR_EXTENSIONS_BY_HOST.Entity;
			}
			set
			{
				HyperLinks_MOST_POPULAR_EXTENSIONS_BY_HOST previousValue = this._HyperLinks_MOST_POPULAR_EXTENSIONS_BY_HOST.Entity;
				if (((previousValue != value) 
							|| (this._HyperLinks_MOST_POPULAR_EXTENSIONS_BY_HOST.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._HyperLinks_MOST_POPULAR_EXTENSIONS_BY_HOST.Entity = null;
						previousValue.Extension = null;
					}
					this._HyperLinks_MOST_POPULAR_EXTENSIONS_BY_HOST.Entity = value;
					if ((value != null))
					{
						value.Extension = this;
					}
					this.SendPropertyChanged("HyperLinks_MOST_POPULAR_EXTENSIONS_BY_HOST");
				}
			}
		}
		
		[Association(Name="Extension_HyperLinks_MOST_POPULAR_EXTENSIONS_BY_SCHEME", Storage="_HyperLinks_MOST_POPULAR_EXTENSIONS_BY_SCHEME", ThisKey="ID", OtherKey="ExtensionID", IsUnique=true, IsForeignKey=false)]
		public HyperLinks_MOST_POPULAR_EXTENSIONS_BY_SCHEME HyperLinks_MOST_POPULAR_EXTENSIONS_BY_SCHEME
		{
			get
			{
				return this._HyperLinks_MOST_POPULAR_EXTENSIONS_BY_SCHEME.Entity;
			}
			set
			{
				HyperLinks_MOST_POPULAR_EXTENSIONS_BY_SCHEME previousValue = this._HyperLinks_MOST_POPULAR_EXTENSIONS_BY_SCHEME.Entity;
				if (((previousValue != value) 
							|| (this._HyperLinks_MOST_POPULAR_EXTENSIONS_BY_SCHEME.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._HyperLinks_MOST_POPULAR_EXTENSIONS_BY_SCHEME.Entity = null;
						previousValue.Extension = null;
					}
					this._HyperLinks_MOST_POPULAR_EXTENSIONS_BY_SCHEME.Entity = value;
					if ((value != null))
					{
						value.Extension = this;
					}
					this.SendPropertyChanged("HyperLinks_MOST_POPULAR_EXTENSIONS_BY_SCHEME");
				}
			}
		}
		
		[Association(Name="Extension_Images_COUNT_BY_EXTENSION", Storage="_Images_COUNT_BY_EXTENSION", ThisKey="ID", OtherKey="ExtensionID", IsUnique=true, IsForeignKey=false)]
		public Images_COUNT_BY_EXTENSION Images_COUNT_BY_EXTENSION
		{
			get
			{
				return this._Images_COUNT_BY_EXTENSION.Entity;
			}
			set
			{
				Images_COUNT_BY_EXTENSION previousValue = this._Images_COUNT_BY_EXTENSION.Entity;
				if (((previousValue != value) 
							|| (this._Images_COUNT_BY_EXTENSION.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Images_COUNT_BY_EXTENSION.Entity = null;
						previousValue.Extension = null;
					}
					this._Images_COUNT_BY_EXTENSION.Entity = value;
					if ((value != null))
					{
						value.Extension = this;
					}
					this.SendPropertyChanged("Images_COUNT_BY_EXTENSION");
				}
			}
		}
		
		[Association(Name="Extension_Images_MOST_POPULAR_EXTENSIONS_BY_ABSOLUTEURI", Storage="_Images_MOST_POPULAR_EXTENSIONS_BY_ABSOLUTEURI", ThisKey="ID", OtherKey="ExtensionID", IsUnique=true, IsForeignKey=false)]
		public Images_MOST_POPULAR_EXTENSIONS_BY_ABSOLUTEURI Images_MOST_POPULAR_EXTENSIONS_BY_ABSOLUTEURI
		{
			get
			{
				return this._Images_MOST_POPULAR_EXTENSIONS_BY_ABSOLUTEURI.Entity;
			}
			set
			{
				Images_MOST_POPULAR_EXTENSIONS_BY_ABSOLUTEURI previousValue = this._Images_MOST_POPULAR_EXTENSIONS_BY_ABSOLUTEURI.Entity;
				if (((previousValue != value) 
							|| (this._Images_MOST_POPULAR_EXTENSIONS_BY_ABSOLUTEURI.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Images_MOST_POPULAR_EXTENSIONS_BY_ABSOLUTEURI.Entity = null;
						previousValue.Extension = null;
					}
					this._Images_MOST_POPULAR_EXTENSIONS_BY_ABSOLUTEURI.Entity = value;
					if ((value != null))
					{
						value.Extension = this;
					}
					this.SendPropertyChanged("Images_MOST_POPULAR_EXTENSIONS_BY_ABSOLUTEURI");
				}
			}
		}
		
		[Association(Name="Extension_Images_MOST_POPULAR_EXTENSIONS_BY_DOMAIN", Storage="_Images_MOST_POPULAR_EXTENSIONS_BY_DOMAIN", ThisKey="ID", OtherKey="ExtensionID", IsUnique=true, IsForeignKey=false)]
		public Images_MOST_POPULAR_EXTENSIONS_BY_DOMAIN Images_MOST_POPULAR_EXTENSIONS_BY_DOMAIN
		{
			get
			{
				return this._Images_MOST_POPULAR_EXTENSIONS_BY_DOMAIN.Entity;
			}
			set
			{
				Images_MOST_POPULAR_EXTENSIONS_BY_DOMAIN previousValue = this._Images_MOST_POPULAR_EXTENSIONS_BY_DOMAIN.Entity;
				if (((previousValue != value) 
							|| (this._Images_MOST_POPULAR_EXTENSIONS_BY_DOMAIN.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Images_MOST_POPULAR_EXTENSIONS_BY_DOMAIN.Entity = null;
						previousValue.Extension = null;
					}
					this._Images_MOST_POPULAR_EXTENSIONS_BY_DOMAIN.Entity = value;
					if ((value != null))
					{
						value.Extension = this;
					}
					this.SendPropertyChanged("Images_MOST_POPULAR_EXTENSIONS_BY_DOMAIN");
				}
			}
		}
		
		[Association(Name="Extension_Images_MOST_POPULAR_EXTENSIONS_BY_EXTENSION", Storage="_Images_MOST_POPULAR_EXTENSIONS_BY_EXTENSION", ThisKey="ID", OtherKey="ExtensionID", IsUnique=true, IsForeignKey=false)]
		public Images_MOST_POPULAR_EXTENSIONS_BY_EXTENSION Images_MOST_POPULAR_EXTENSIONS_BY_EXTENSION
		{
			get
			{
				return this._Images_MOST_POPULAR_EXTENSIONS_BY_EXTENSION.Entity;
			}
			set
			{
				Images_MOST_POPULAR_EXTENSIONS_BY_EXTENSION previousValue = this._Images_MOST_POPULAR_EXTENSIONS_BY_EXTENSION.Entity;
				if (((previousValue != value) 
							|| (this._Images_MOST_POPULAR_EXTENSIONS_BY_EXTENSION.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Images_MOST_POPULAR_EXTENSIONS_BY_EXTENSION.Entity = null;
						previousValue.Extension = null;
					}
					this._Images_MOST_POPULAR_EXTENSIONS_BY_EXTENSION.Entity = value;
					if ((value != null))
					{
						value.Extension = this;
					}
					this.SendPropertyChanged("Images_MOST_POPULAR_EXTENSIONS_BY_EXTENSION");
				}
			}
		}
		
		[Association(Name="Extension_Images_MOST_POPULAR_EXTENSIONS_BY_HOST", Storage="_Images_MOST_POPULAR_EXTENSIONS_BY_HOST", ThisKey="ID", OtherKey="ExtensionID", IsUnique=true, IsForeignKey=false)]
		public Images_MOST_POPULAR_EXTENSIONS_BY_HOST Images_MOST_POPULAR_EXTENSIONS_BY_HOST
		{
			get
			{
				return this._Images_MOST_POPULAR_EXTENSIONS_BY_HOST.Entity;
			}
			set
			{
				Images_MOST_POPULAR_EXTENSIONS_BY_HOST previousValue = this._Images_MOST_POPULAR_EXTENSIONS_BY_HOST.Entity;
				if (((previousValue != value) 
							|| (this._Images_MOST_POPULAR_EXTENSIONS_BY_HOST.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Images_MOST_POPULAR_EXTENSIONS_BY_HOST.Entity = null;
						previousValue.Extension = null;
					}
					this._Images_MOST_POPULAR_EXTENSIONS_BY_HOST.Entity = value;
					if ((value != null))
					{
						value.Extension = this;
					}
					this.SendPropertyChanged("Images_MOST_POPULAR_EXTENSIONS_BY_HOST");
				}
			}
		}
		
		[Association(Name="Extension_Images_MOST_POPULAR_EXTENSIONS_BY_SCHEME", Storage="_Images_MOST_POPULAR_EXTENSIONS_BY_SCHEME", ThisKey="ID", OtherKey="ExtensionID", IsUnique=true, IsForeignKey=false)]
		public Images_MOST_POPULAR_EXTENSIONS_BY_SCHEME Images_MOST_POPULAR_EXTENSIONS_BY_SCHEME
		{
			get
			{
				return this._Images_MOST_POPULAR_EXTENSIONS_BY_SCHEME.Entity;
			}
			set
			{
				Images_MOST_POPULAR_EXTENSIONS_BY_SCHEME previousValue = this._Images_MOST_POPULAR_EXTENSIONS_BY_SCHEME.Entity;
				if (((previousValue != value) 
							|| (this._Images_MOST_POPULAR_EXTENSIONS_BY_SCHEME.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Images_MOST_POPULAR_EXTENSIONS_BY_SCHEME.Entity = null;
						previousValue.Extension = null;
					}
					this._Images_MOST_POPULAR_EXTENSIONS_BY_SCHEME.Entity = value;
					if ((value != null))
					{
						value.Extension = this;
					}
					this.SendPropertyChanged("Images_MOST_POPULAR_EXTENSIONS_BY_SCHEME");
				}
			}
		}
		
		[Association(Name="Extension_WebPages_COUNT_BY_EXTENSION", Storage="_WebPages_COUNT_BY_EXTENSION", ThisKey="Extension1", OtherKey="Extension", IsUnique=true, IsForeignKey=false)]
		public WebPages_COUNT_BY_EXTENSION WebPages_COUNT_BY_EXTENSION
		{
			get
			{
				return this._WebPages_COUNT_BY_EXTENSION.Entity;
			}
			set
			{
				WebPages_COUNT_BY_EXTENSION previousValue = this._WebPages_COUNT_BY_EXTENSION.Entity;
				if (((previousValue != value) 
							|| (this._WebPages_COUNT_BY_EXTENSION.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._WebPages_COUNT_BY_EXTENSION.Entity = null;
						previousValue.Extension1 = null;
					}
					this._WebPages_COUNT_BY_EXTENSION.Entity = value;
					if ((value != null))
					{
						value.Extension1 = this;
					}
					this.SendPropertyChanged("WebPages_COUNT_BY_EXTENSION");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Domains(Domain entity)
		{
			this.SendPropertyChanging();
			entity.Extension = this;
		}
		
		private void detach_Domains(Domain entity)
		{
			this.SendPropertyChanging();
			entity.Extension = null;
		}
		
		private void attach_Extensions_Discoveries(Extensions_Discovery entity)
		{
			this.SendPropertyChanging();
			entity.Extension = this;
		}
		
		private void detach_Extensions_Discoveries(Extensions_Discovery entity)
		{
			this.SendPropertyChanging();
			entity.Extension = null;
		}
	}
	
	[Table(Name="dbo.Extensions_Discoveries")]
	public partial class Extensions_Discovery : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Nullable<System.DateTime> _InitiallyDiscovered;
		
		private System.Nullable<System.DateTime> _LastDiscovered;
		
		private int _ID;
		
		private byte _DiscoveryTypeID;
		
		private int _ExtensionID;
		
		private EntityRef<DiscoveryType> _DiscoveryType;
		
		private EntityRef<Extension> _Extension;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnInitiallyDiscoveredChanging(System.Nullable<System.DateTime> value);
    partial void OnInitiallyDiscoveredChanged();
    partial void OnLastDiscoveredChanging(System.Nullable<System.DateTime> value);
    partial void OnLastDiscoveredChanged();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnDiscoveryTypeIDChanging(byte value);
    partial void OnDiscoveryTypeIDChanged();
    partial void OnExtensionIDChanging(int value);
    partial void OnExtensionIDChanged();
    #endregion
		
		public Extensions_Discovery()
		{
			this._DiscoveryType = default(EntityRef<DiscoveryType>);
			this._Extension = default(EntityRef<Extension>);
			OnCreated();
		}
		
		[Column(Storage="_InitiallyDiscovered", DbType="DateTime")]
		public System.Nullable<System.DateTime> InitiallyDiscovered
		{
			get
			{
				return this._InitiallyDiscovered;
			}
			set
			{
				if ((this._InitiallyDiscovered != value))
				{
					this.OnInitiallyDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._InitiallyDiscovered = value;
					this.SendPropertyChanged("InitiallyDiscovered");
					this.OnInitiallyDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_LastDiscovered", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastDiscovered
		{
			get
			{
				return this._LastDiscovered;
			}
			set
			{
				if ((this._LastDiscovered != value))
				{
					this.OnLastDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._LastDiscovered = value;
					this.SendPropertyChanged("LastDiscovered");
					this.OnLastDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[Column(Storage="_DiscoveryTypeID", DbType="TinyInt NOT NULL")]
		public byte DiscoveryTypeID
		{
			get
			{
				return this._DiscoveryTypeID;
			}
			set
			{
				if ((this._DiscoveryTypeID != value))
				{
					if (this._DiscoveryType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDiscoveryTypeIDChanging(value);
					this.SendPropertyChanging();
					this._DiscoveryTypeID = value;
					this.SendPropertyChanged("DiscoveryTypeID");
					this.OnDiscoveryTypeIDChanged();
				}
			}
		}
		
		[Column(Storage="_ExtensionID", DbType="Int NOT NULL")]
		public int ExtensionID
		{
			get
			{
				return this._ExtensionID;
			}
			set
			{
				if ((this._ExtensionID != value))
				{
					if (this._Extension.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnExtensionIDChanging(value);
					this.SendPropertyChanging();
					this._ExtensionID = value;
					this.SendPropertyChanged("ExtensionID");
					this.OnExtensionIDChanged();
				}
			}
		}
		
		[Association(Name="DiscoveryType_Extensions_Discovery", Storage="_DiscoveryType", ThisKey="DiscoveryTypeID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public DiscoveryType DiscoveryType
		{
			get
			{
				return this._DiscoveryType.Entity;
			}
			set
			{
				DiscoveryType previousValue = this._DiscoveryType.Entity;
				if (((previousValue != value) 
							|| (this._DiscoveryType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DiscoveryType.Entity = null;
						previousValue.Extensions_Discoveries.Remove(this);
					}
					this._DiscoveryType.Entity = value;
					if ((value != null))
					{
						value.Extensions_Discoveries.Add(this);
						this._DiscoveryTypeID = value.ID;
					}
					else
					{
						this._DiscoveryTypeID = default(byte);
					}
					this.SendPropertyChanged("DiscoveryType");
				}
			}
		}
		
		[Association(Name="Extension_Extensions_Discovery", Storage="_Extension", ThisKey="ExtensionID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Extension Extension
		{
			get
			{
				return this._Extension.Entity;
			}
			set
			{
				Extension previousValue = this._Extension.Entity;
				if (((previousValue != value) 
							|| (this._Extension.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Extension.Entity = null;
						previousValue.Extensions_Discoveries.Remove(this);
					}
					this._Extension.Entity = value;
					if ((value != null))
					{
						value.Extensions_Discoveries.Add(this);
						this._ExtensionID = value.ID;
					}
					else
					{
						this._ExtensionID = default(int);
					}
					this.SendPropertyChanged("Extension");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.Files")]
	public partial class File : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ID;
		
		private string _AbsoluteUri;
		
		private string _ResponseHeaders;
		
		private System.Data.Linq.Binary _Source;
		
		private string _FullTextIndexType;
		
		private EntitySet<Files_Discovery> _Files_Discoveries;
		
		private EntityRef<Files_Hosts_Discovery> _Files_Hosts_Discovery;
		
		private EntityRef<Files_MetaData> _Files_MetaData;
		
		private EntityRef<Files_Schemes_Discovery> _Files_Schemes_Discovery;
		
		private EntityRef<Files_COUNT_BY_ABSOLUTEURI> _Files_COUNT_BY_ABSOLUTEURI;
		
		private EntityRef<Files_MOST_POPULAR_ABSOLUTEURIS_BY_ABSOLUTEURI> _Files_MOST_POPULAR_ABSOLUTEURIS_BY_ABSOLUTEURI;
		
		private EntityRef<Files_MOST_POPULAR_ABSOLUTEURIS_BY_DOMAIN> _Files_MOST_POPULAR_ABSOLUTEURIS_BY_DOMAIN;
		
		private EntityRef<Files_MOST_POPULAR_ABSOLUTEURIS_BY_EXTENSION> _Files_MOST_POPULAR_ABSOLUTEURIS_BY_EXTENSION;
		
		private EntityRef<Files_MOST_POPULAR_ABSOLUTEURIS_BY_HOST> _Files_MOST_POPULAR_ABSOLUTEURIS_BY_HOST;
		
		private EntityRef<Files_MOST_POPULAR_ABSOLUTEURIS_BY_SCHEME> _Files_MOST_POPULAR_ABSOLUTEURIS_BY_SCHEME;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(long value);
    partial void OnIDChanged();
    partial void OnAbsoluteUriChanging(string value);
    partial void OnAbsoluteUriChanged();
    partial void OnResponseHeadersChanging(string value);
    partial void OnResponseHeadersChanged();
    partial void OnSourceChanging(System.Data.Linq.Binary value);
    partial void OnSourceChanged();
    partial void OnFullTextIndexTypeChanging(string value);
    partial void OnFullTextIndexTypeChanged();
    #endregion
		
		public File()
		{
			this._Files_Discoveries = new EntitySet<Files_Discovery>(new Action<Files_Discovery>(this.attach_Files_Discoveries), new Action<Files_Discovery>(this.detach_Files_Discoveries));
			this._Files_Hosts_Discovery = default(EntityRef<Files_Hosts_Discovery>);
			this._Files_MetaData = default(EntityRef<Files_MetaData>);
			this._Files_Schemes_Discovery = default(EntityRef<Files_Schemes_Discovery>);
			this._Files_COUNT_BY_ABSOLUTEURI = default(EntityRef<Files_COUNT_BY_ABSOLUTEURI>);
			this._Files_MOST_POPULAR_ABSOLUTEURIS_BY_ABSOLUTEURI = default(EntityRef<Files_MOST_POPULAR_ABSOLUTEURIS_BY_ABSOLUTEURI>);
			this._Files_MOST_POPULAR_ABSOLUTEURIS_BY_DOMAIN = default(EntityRef<Files_MOST_POPULAR_ABSOLUTEURIS_BY_DOMAIN>);
			this._Files_MOST_POPULAR_ABSOLUTEURIS_BY_EXTENSION = default(EntityRef<Files_MOST_POPULAR_ABSOLUTEURIS_BY_EXTENSION>);
			this._Files_MOST_POPULAR_ABSOLUTEURIS_BY_HOST = default(EntityRef<Files_MOST_POPULAR_ABSOLUTEURIS_BY_HOST>);
			this._Files_MOST_POPULAR_ABSOLUTEURIS_BY_SCHEME = default(EntityRef<Files_MOST_POPULAR_ABSOLUTEURIS_BY_SCHEME>);
			OnCreated();
		}
		
		[Column(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[Column(Storage="_AbsoluteUri", DbType="VarChar(884) NOT NULL", CanBeNull=false)]
		public string AbsoluteUri
		{
			get
			{
				return this._AbsoluteUri;
			}
			set
			{
				if ((this._AbsoluteUri != value))
				{
					this.OnAbsoluteUriChanging(value);
					this.SendPropertyChanging();
					this._AbsoluteUri = value;
					this.SendPropertyChanged("AbsoluteUri");
					this.OnAbsoluteUriChanged();
				}
			}
		}
		
		[Column(Storage="_ResponseHeaders", DbType="VarChar(4000)")]
		public string ResponseHeaders
		{
			get
			{
				return this._ResponseHeaders;
			}
			set
			{
				if ((this._ResponseHeaders != value))
				{
					this.OnResponseHeadersChanging(value);
					this.SendPropertyChanging();
					this._ResponseHeaders = value;
					this.SendPropertyChanged("ResponseHeaders");
					this.OnResponseHeadersChanged();
				}
			}
		}
		
		[Column(Storage="_Source", DbType="VarBinary(MAX) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary Source
		{
			get
			{
				return this._Source;
			}
			set
			{
				if ((this._Source != value))
				{
					this.OnSourceChanging(value);
					this.SendPropertyChanging();
					this._Source = value;
					this.SendPropertyChanged("Source");
					this.OnSourceChanged();
				}
			}
		}
		
		[Column(Storage="_FullTextIndexType", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string FullTextIndexType
		{
			get
			{
				return this._FullTextIndexType;
			}
			set
			{
				if ((this._FullTextIndexType != value))
				{
					this.OnFullTextIndexTypeChanging(value);
					this.SendPropertyChanging();
					this._FullTextIndexType = value;
					this.SendPropertyChanged("FullTextIndexType");
					this.OnFullTextIndexTypeChanged();
				}
			}
		}
		
		[Association(Name="File_Files_Discovery", Storage="_Files_Discoveries", ThisKey="ID", OtherKey="FileID")]
		public EntitySet<Files_Discovery> Files_Discoveries
		{
			get
			{
				return this._Files_Discoveries;
			}
			set
			{
				this._Files_Discoveries.Assign(value);
			}
		}
		
		[Association(Name="File_Files_Hosts_Discovery", Storage="_Files_Hosts_Discovery", ThisKey="ID", OtherKey="FileID", IsUnique=true, IsForeignKey=false)]
		public Files_Hosts_Discovery Files_Hosts_Discovery
		{
			get
			{
				return this._Files_Hosts_Discovery.Entity;
			}
			set
			{
				Files_Hosts_Discovery previousValue = this._Files_Hosts_Discovery.Entity;
				if (((previousValue != value) 
							|| (this._Files_Hosts_Discovery.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Files_Hosts_Discovery.Entity = null;
						previousValue.File = null;
					}
					this._Files_Hosts_Discovery.Entity = value;
					if ((value != null))
					{
						value.File = this;
					}
					this.SendPropertyChanged("Files_Hosts_Discovery");
				}
			}
		}
		
		[Association(Name="File_Files_MetaData", Storage="_Files_MetaData", ThisKey="ID", OtherKey="FileID", IsUnique=true, IsForeignKey=false)]
		public Files_MetaData Files_MetaData
		{
			get
			{
				return this._Files_MetaData.Entity;
			}
			set
			{
				Files_MetaData previousValue = this._Files_MetaData.Entity;
				if (((previousValue != value) 
							|| (this._Files_MetaData.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Files_MetaData.Entity = null;
						previousValue.File = null;
					}
					this._Files_MetaData.Entity = value;
					if ((value != null))
					{
						value.File = this;
					}
					this.SendPropertyChanged("Files_MetaData");
				}
			}
		}
		
		[Association(Name="File_Files_Schemes_Discovery", Storage="_Files_Schemes_Discovery", ThisKey="ID", OtherKey="FileID", IsUnique=true, IsForeignKey=false)]
		public Files_Schemes_Discovery Files_Schemes_Discovery
		{
			get
			{
				return this._Files_Schemes_Discovery.Entity;
			}
			set
			{
				Files_Schemes_Discovery previousValue = this._Files_Schemes_Discovery.Entity;
				if (((previousValue != value) 
							|| (this._Files_Schemes_Discovery.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Files_Schemes_Discovery.Entity = null;
						previousValue.File = null;
					}
					this._Files_Schemes_Discovery.Entity = value;
					if ((value != null))
					{
						value.File = this;
					}
					this.SendPropertyChanged("Files_Schemes_Discovery");
				}
			}
		}
		
		[Association(Name="File_Files_COUNT_BY_ABSOLUTEURI", Storage="_Files_COUNT_BY_ABSOLUTEURI", ThisKey="ID", OtherKey="FileID", IsUnique=true, IsForeignKey=false)]
		public Files_COUNT_BY_ABSOLUTEURI Files_COUNT_BY_ABSOLUTEURI
		{
			get
			{
				return this._Files_COUNT_BY_ABSOLUTEURI.Entity;
			}
			set
			{
				Files_COUNT_BY_ABSOLUTEURI previousValue = this._Files_COUNT_BY_ABSOLUTEURI.Entity;
				if (((previousValue != value) 
							|| (this._Files_COUNT_BY_ABSOLUTEURI.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Files_COUNT_BY_ABSOLUTEURI.Entity = null;
						previousValue.File = null;
					}
					this._Files_COUNT_BY_ABSOLUTEURI.Entity = value;
					if ((value != null))
					{
						value.File = this;
					}
					this.SendPropertyChanged("Files_COUNT_BY_ABSOLUTEURI");
				}
			}
		}
		
		[Association(Name="File_Files_MOST_POPULAR_ABSOLUTEURIS_BY_ABSOLUTEURI", Storage="_Files_MOST_POPULAR_ABSOLUTEURIS_BY_ABSOLUTEURI", ThisKey="ID", OtherKey="FileID", IsUnique=true, IsForeignKey=false)]
		public Files_MOST_POPULAR_ABSOLUTEURIS_BY_ABSOLUTEURI Files_MOST_POPULAR_ABSOLUTEURIS_BY_ABSOLUTEURI
		{
			get
			{
				return this._Files_MOST_POPULAR_ABSOLUTEURIS_BY_ABSOLUTEURI.Entity;
			}
			set
			{
				Files_MOST_POPULAR_ABSOLUTEURIS_BY_ABSOLUTEURI previousValue = this._Files_MOST_POPULAR_ABSOLUTEURIS_BY_ABSOLUTEURI.Entity;
				if (((previousValue != value) 
							|| (this._Files_MOST_POPULAR_ABSOLUTEURIS_BY_ABSOLUTEURI.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Files_MOST_POPULAR_ABSOLUTEURIS_BY_ABSOLUTEURI.Entity = null;
						previousValue.File = null;
					}
					this._Files_MOST_POPULAR_ABSOLUTEURIS_BY_ABSOLUTEURI.Entity = value;
					if ((value != null))
					{
						value.File = this;
					}
					this.SendPropertyChanged("Files_MOST_POPULAR_ABSOLUTEURIS_BY_ABSOLUTEURI");
				}
			}
		}
		
		[Association(Name="File_Files_MOST_POPULAR_ABSOLUTEURIS_BY_DOMAIN", Storage="_Files_MOST_POPULAR_ABSOLUTEURIS_BY_DOMAIN", ThisKey="ID", OtherKey="FileID", IsUnique=true, IsForeignKey=false)]
		public Files_MOST_POPULAR_ABSOLUTEURIS_BY_DOMAIN Files_MOST_POPULAR_ABSOLUTEURIS_BY_DOMAIN
		{
			get
			{
				return this._Files_MOST_POPULAR_ABSOLUTEURIS_BY_DOMAIN.Entity;
			}
			set
			{
				Files_MOST_POPULAR_ABSOLUTEURIS_BY_DOMAIN previousValue = this._Files_MOST_POPULAR_ABSOLUTEURIS_BY_DOMAIN.Entity;
				if (((previousValue != value) 
							|| (this._Files_MOST_POPULAR_ABSOLUTEURIS_BY_DOMAIN.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Files_MOST_POPULAR_ABSOLUTEURIS_BY_DOMAIN.Entity = null;
						previousValue.File = null;
					}
					this._Files_MOST_POPULAR_ABSOLUTEURIS_BY_DOMAIN.Entity = value;
					if ((value != null))
					{
						value.File = this;
					}
					this.SendPropertyChanged("Files_MOST_POPULAR_ABSOLUTEURIS_BY_DOMAIN");
				}
			}
		}
		
		[Association(Name="File_Files_MOST_POPULAR_ABSOLUTEURIS_BY_EXTENSION", Storage="_Files_MOST_POPULAR_ABSOLUTEURIS_BY_EXTENSION", ThisKey="ID", OtherKey="FileID", IsUnique=true, IsForeignKey=false)]
		public Files_MOST_POPULAR_ABSOLUTEURIS_BY_EXTENSION Files_MOST_POPULAR_ABSOLUTEURIS_BY_EXTENSION
		{
			get
			{
				return this._Files_MOST_POPULAR_ABSOLUTEURIS_BY_EXTENSION.Entity;
			}
			set
			{
				Files_MOST_POPULAR_ABSOLUTEURIS_BY_EXTENSION previousValue = this._Files_MOST_POPULAR_ABSOLUTEURIS_BY_EXTENSION.Entity;
				if (((previousValue != value) 
							|| (this._Files_MOST_POPULAR_ABSOLUTEURIS_BY_EXTENSION.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Files_MOST_POPULAR_ABSOLUTEURIS_BY_EXTENSION.Entity = null;
						previousValue.File = null;
					}
					this._Files_MOST_POPULAR_ABSOLUTEURIS_BY_EXTENSION.Entity = value;
					if ((value != null))
					{
						value.File = this;
					}
					this.SendPropertyChanged("Files_MOST_POPULAR_ABSOLUTEURIS_BY_EXTENSION");
				}
			}
		}
		
		[Association(Name="File_Files_MOST_POPULAR_ABSOLUTEURIS_BY_HOST", Storage="_Files_MOST_POPULAR_ABSOLUTEURIS_BY_HOST", ThisKey="ID", OtherKey="FileID", IsUnique=true, IsForeignKey=false)]
		public Files_MOST_POPULAR_ABSOLUTEURIS_BY_HOST Files_MOST_POPULAR_ABSOLUTEURIS_BY_HOST
		{
			get
			{
				return this._Files_MOST_POPULAR_ABSOLUTEURIS_BY_HOST.Entity;
			}
			set
			{
				Files_MOST_POPULAR_ABSOLUTEURIS_BY_HOST previousValue = this._Files_MOST_POPULAR_ABSOLUTEURIS_BY_HOST.Entity;
				if (((previousValue != value) 
							|| (this._Files_MOST_POPULAR_ABSOLUTEURIS_BY_HOST.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Files_MOST_POPULAR_ABSOLUTEURIS_BY_HOST.Entity = null;
						previousValue.File = null;
					}
					this._Files_MOST_POPULAR_ABSOLUTEURIS_BY_HOST.Entity = value;
					if ((value != null))
					{
						value.File = this;
					}
					this.SendPropertyChanged("Files_MOST_POPULAR_ABSOLUTEURIS_BY_HOST");
				}
			}
		}
		
		[Association(Name="File_Files_MOST_POPULAR_ABSOLUTEURIS_BY_SCHEME", Storage="_Files_MOST_POPULAR_ABSOLUTEURIS_BY_SCHEME", ThisKey="ID", OtherKey="FileID", IsUnique=true, IsForeignKey=false)]
		public Files_MOST_POPULAR_ABSOLUTEURIS_BY_SCHEME Files_MOST_POPULAR_ABSOLUTEURIS_BY_SCHEME
		{
			get
			{
				return this._Files_MOST_POPULAR_ABSOLUTEURIS_BY_SCHEME.Entity;
			}
			set
			{
				Files_MOST_POPULAR_ABSOLUTEURIS_BY_SCHEME previousValue = this._Files_MOST_POPULAR_ABSOLUTEURIS_BY_SCHEME.Entity;
				if (((previousValue != value) 
							|| (this._Files_MOST_POPULAR_ABSOLUTEURIS_BY_SCHEME.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Files_MOST_POPULAR_ABSOLUTEURIS_BY_SCHEME.Entity = null;
						previousValue.File = null;
					}
					this._Files_MOST_POPULAR_ABSOLUTEURIS_BY_SCHEME.Entity = value;
					if ((value != null))
					{
						value.File = this;
					}
					this.SendPropertyChanged("Files_MOST_POPULAR_ABSOLUTEURIS_BY_SCHEME");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Files_Discoveries(Files_Discovery entity)
		{
			this.SendPropertyChanging();
			entity.File = this;
		}
		
		private void detach_Files_Discoveries(Files_Discovery entity)
		{
			this.SendPropertyChanging();
			entity.File = null;
		}
	}
	
	[Table(Name="dbo.Files_Discoveries")]
	public partial class Files_Discovery : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.DateTime _InitiallyDiscovered;
		
		private System.DateTime _LastDiscovered;
		
		private long _ID;
		
		private long _WebPageID;
		
		private long _FileID;
		
		private EntityRef<File> _File;
		
		private EntityRef<WebPage> _WebPage;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnInitiallyDiscoveredChanging(System.DateTime value);
    partial void OnInitiallyDiscoveredChanged();
    partial void OnLastDiscoveredChanging(System.DateTime value);
    partial void OnLastDiscoveredChanged();
    partial void OnIDChanging(long value);
    partial void OnIDChanged();
    partial void OnWebPageIDChanging(long value);
    partial void OnWebPageIDChanged();
    partial void OnFileIDChanging(long value);
    partial void OnFileIDChanged();
    #endregion
		
		public Files_Discovery()
		{
			this._File = default(EntityRef<File>);
			this._WebPage = default(EntityRef<WebPage>);
			OnCreated();
		}
		
		[Column(Storage="_InitiallyDiscovered", DbType="DateTime NOT NULL")]
		public System.DateTime InitiallyDiscovered
		{
			get
			{
				return this._InitiallyDiscovered;
			}
			set
			{
				if ((this._InitiallyDiscovered != value))
				{
					this.OnInitiallyDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._InitiallyDiscovered = value;
					this.SendPropertyChanged("InitiallyDiscovered");
					this.OnInitiallyDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_LastDiscovered", DbType="DateTime NOT NULL")]
		public System.DateTime LastDiscovered
		{
			get
			{
				return this._LastDiscovered;
			}
			set
			{
				if ((this._LastDiscovered != value))
				{
					this.OnLastDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._LastDiscovered = value;
					this.SendPropertyChanged("LastDiscovered");
					this.OnLastDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_ID", AutoSync=AutoSync.Always, DbType="BigInt NOT NULL IDENTITY", IsDbGenerated=true)]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[Column(Storage="_WebPageID", DbType="BigInt NOT NULL", IsPrimaryKey=true)]
		public long WebPageID
		{
			get
			{
				return this._WebPageID;
			}
			set
			{
				if ((this._WebPageID != value))
				{
					if (this._WebPage.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnWebPageIDChanging(value);
					this.SendPropertyChanging();
					this._WebPageID = value;
					this.SendPropertyChanged("WebPageID");
					this.OnWebPageIDChanged();
				}
			}
		}
		
		[Column(Storage="_FileID", DbType="BigInt NOT NULL", IsPrimaryKey=true)]
		public long FileID
		{
			get
			{
				return this._FileID;
			}
			set
			{
				if ((this._FileID != value))
				{
					if (this._File.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFileIDChanging(value);
					this.SendPropertyChanging();
					this._FileID = value;
					this.SendPropertyChanged("FileID");
					this.OnFileIDChanged();
				}
			}
		}
		
		[Association(Name="File_Files_Discovery", Storage="_File", ThisKey="FileID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public File File
		{
			get
			{
				return this._File.Entity;
			}
			set
			{
				File previousValue = this._File.Entity;
				if (((previousValue != value) 
							|| (this._File.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._File.Entity = null;
						previousValue.Files_Discoveries.Remove(this);
					}
					this._File.Entity = value;
					if ((value != null))
					{
						value.Files_Discoveries.Add(this);
						this._FileID = value.ID;
					}
					else
					{
						this._FileID = default(long);
					}
					this.SendPropertyChanged("File");
				}
			}
		}
		
		[Association(Name="WebPage_Files_Discovery", Storage="_WebPage", ThisKey="WebPageID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public WebPage WebPage
		{
			get
			{
				return this._WebPage.Entity;
			}
			set
			{
				WebPage previousValue = this._WebPage.Entity;
				if (((previousValue != value) 
							|| (this._WebPage.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._WebPage.Entity = null;
						previousValue.Files_Discoveries.Remove(this);
					}
					this._WebPage.Entity = value;
					if ((value != null))
					{
						value.Files_Discoveries.Add(this);
						this._WebPageID = value.ID;
					}
					else
					{
						this._WebPageID = default(long);
					}
					this.SendPropertyChanged("WebPage");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.Files_Hosts_Discoveries")]
	public partial class Files_Hosts_Discovery : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _FileID;
		
		private int _Host_DiscoveryID;
		
		private EntityRef<File> _File;
		
		private EntityRef<Hosts_Discovery> _Hosts_Discovery;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnFileIDChanging(long value);
    partial void OnFileIDChanged();
    partial void OnHost_DiscoveryIDChanging(int value);
    partial void OnHost_DiscoveryIDChanged();
    #endregion
		
		public Files_Hosts_Discovery()
		{
			this._File = default(EntityRef<File>);
			this._Hosts_Discovery = default(EntityRef<Hosts_Discovery>);
			OnCreated();
		}
		
		[Column(Storage="_FileID", DbType="BigInt NOT NULL", IsPrimaryKey=true)]
		public long FileID
		{
			get
			{
				return this._FileID;
			}
			set
			{
				if ((this._FileID != value))
				{
					if (this._File.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFileIDChanging(value);
					this.SendPropertyChanging();
					this._FileID = value;
					this.SendPropertyChanged("FileID");
					this.OnFileIDChanged();
				}
			}
		}
		
		[Column(Storage="_Host_DiscoveryID", DbType="Int NOT NULL")]
		public int Host_DiscoveryID
		{
			get
			{
				return this._Host_DiscoveryID;
			}
			set
			{
				if ((this._Host_DiscoveryID != value))
				{
					if (this._Hosts_Discovery.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnHost_DiscoveryIDChanging(value);
					this.SendPropertyChanging();
					this._Host_DiscoveryID = value;
					this.SendPropertyChanged("Host_DiscoveryID");
					this.OnHost_DiscoveryIDChanged();
				}
			}
		}
		
		[Association(Name="File_Files_Hosts_Discovery", Storage="_File", ThisKey="FileID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public File File
		{
			get
			{
				return this._File.Entity;
			}
			set
			{
				File previousValue = this._File.Entity;
				if (((previousValue != value) 
							|| (this._File.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._File.Entity = null;
						previousValue.Files_Hosts_Discovery = null;
					}
					this._File.Entity = value;
					if ((value != null))
					{
						value.Files_Hosts_Discovery = this;
						this._FileID = value.ID;
					}
					else
					{
						this._FileID = default(long);
					}
					this.SendPropertyChanged("File");
				}
			}
		}
		
		[Association(Name="Hosts_Discovery_Files_Hosts_Discovery", Storage="_Hosts_Discovery", ThisKey="Host_DiscoveryID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Hosts_Discovery Hosts_Discovery
		{
			get
			{
				return this._Hosts_Discovery.Entity;
			}
			set
			{
				Hosts_Discovery previousValue = this._Hosts_Discovery.Entity;
				if (((previousValue != value) 
							|| (this._Hosts_Discovery.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Hosts_Discovery.Entity = null;
						previousValue.Files_Hosts_Discoveries.Remove(this);
					}
					this._Hosts_Discovery.Entity = value;
					if ((value != null))
					{
						value.Files_Hosts_Discoveries.Add(this);
						this._Host_DiscoveryID = value.ID;
					}
					else
					{
						this._Host_DiscoveryID = default(int);
					}
					this.SendPropertyChanged("Hosts_Discovery");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.Files_MetaData")]
	public partial class Files_MetaData : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _FileID;
		
		private EntityRef<File> _File;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnFileIDChanging(long value);
    partial void OnFileIDChanged();
    #endregion
		
		public Files_MetaData()
		{
			this._File = default(EntityRef<File>);
			OnCreated();
		}
		
		[Column(Storage="_FileID", DbType="BigInt NOT NULL", IsPrimaryKey=true)]
		public long FileID
		{
			get
			{
				return this._FileID;
			}
			set
			{
				if ((this._FileID != value))
				{
					if (this._File.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFileIDChanging(value);
					this.SendPropertyChanging();
					this._FileID = value;
					this.SendPropertyChanged("FileID");
					this.OnFileIDChanged();
				}
			}
		}
		
		[Association(Name="File_Files_MetaData", Storage="_File", ThisKey="FileID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public File File
		{
			get
			{
				return this._File.Entity;
			}
			set
			{
				File previousValue = this._File.Entity;
				if (((previousValue != value) 
							|| (this._File.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._File.Entity = null;
						previousValue.Files_MetaData = null;
					}
					this._File.Entity = value;
					if ((value != null))
					{
						value.Files_MetaData = this;
						this._FileID = value.ID;
					}
					else
					{
						this._FileID = default(long);
					}
					this.SendPropertyChanged("File");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.Files_Schemes_Discoveries")]
	public partial class Files_Schemes_Discovery : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _FileID;
		
		private int _Scheme_DiscoveryID;
		
		private EntityRef<File> _File;
		
		private EntityRef<Schemes_Discovery> _Schemes_Discovery;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnFileIDChanging(long value);
    partial void OnFileIDChanged();
    partial void OnScheme_DiscoveryIDChanging(int value);
    partial void OnScheme_DiscoveryIDChanged();
    #endregion
		
		public Files_Schemes_Discovery()
		{
			this._File = default(EntityRef<File>);
			this._Schemes_Discovery = default(EntityRef<Schemes_Discovery>);
			OnCreated();
		}
		
		[Column(Storage="_FileID", DbType="BigInt NOT NULL", IsPrimaryKey=true)]
		public long FileID
		{
			get
			{
				return this._FileID;
			}
			set
			{
				if ((this._FileID != value))
				{
					if (this._File.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFileIDChanging(value);
					this.SendPropertyChanging();
					this._FileID = value;
					this.SendPropertyChanged("FileID");
					this.OnFileIDChanged();
				}
			}
		}
		
		[Column(Storage="_Scheme_DiscoveryID", DbType="Int NOT NULL")]
		public int Scheme_DiscoveryID
		{
			get
			{
				return this._Scheme_DiscoveryID;
			}
			set
			{
				if ((this._Scheme_DiscoveryID != value))
				{
					if (this._Schemes_Discovery.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnScheme_DiscoveryIDChanging(value);
					this.SendPropertyChanging();
					this._Scheme_DiscoveryID = value;
					this.SendPropertyChanged("Scheme_DiscoveryID");
					this.OnScheme_DiscoveryIDChanged();
				}
			}
		}
		
		[Association(Name="File_Files_Schemes_Discovery", Storage="_File", ThisKey="FileID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public File File
		{
			get
			{
				return this._File.Entity;
			}
			set
			{
				File previousValue = this._File.Entity;
				if (((previousValue != value) 
							|| (this._File.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._File.Entity = null;
						previousValue.Files_Schemes_Discovery = null;
					}
					this._File.Entity = value;
					if ((value != null))
					{
						value.Files_Schemes_Discovery = this;
						this._FileID = value.ID;
					}
					else
					{
						this._FileID = default(long);
					}
					this.SendPropertyChanged("File");
				}
			}
		}
		
		[Association(Name="Schemes_Discovery_Files_Schemes_Discovery", Storage="_Schemes_Discovery", ThisKey="Scheme_DiscoveryID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Schemes_Discovery Schemes_Discovery
		{
			get
			{
				return this._Schemes_Discovery.Entity;
			}
			set
			{
				Schemes_Discovery previousValue = this._Schemes_Discovery.Entity;
				if (((previousValue != value) 
							|| (this._Schemes_Discovery.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Schemes_Discovery.Entity = null;
						previousValue.Files_Schemes_Discoveries.Remove(this);
					}
					this._Schemes_Discovery.Entity = value;
					if ((value != null))
					{
						value.Files_Schemes_Discoveries.Add(this);
						this._Scheme_DiscoveryID = value.ID;
					}
					else
					{
						this._Scheme_DiscoveryID = default(int);
					}
					this.SendPropertyChanged("Schemes_Discovery");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.Hosts")]
	public partial class Host : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _DomainID;
		
		private string _Host1;
		
		private EntitySet<Hosts_Discovery> _Hosts_Discoveries;
		
		private EntityRef<DisallowedAbsoluteUris_COUNT_BY_HOST> _DisallowedAbsoluteUris_COUNT_BY_HOST;
		
		private EntityRef<DisallowedAbsoluteUris_MOST_POPULAR_HOSTS_BY_ABSOLUTEURI> _DisallowedAbsoluteUris_MOST_POPULAR_HOSTS_BY_ABSOLUTEURI;
		
		private EntityRef<DisallowedAbsoluteUris_MOST_POPULAR_HOSTS_BY_DOMAIN> _DisallowedAbsoluteUris_MOST_POPULAR_HOSTS_BY_DOMAIN;
		
		private EntityRef<DisallowedAbsoluteUris_MOST_POPULAR_HOSTS_BY_EXTENSION> _DisallowedAbsoluteUris_MOST_POPULAR_HOSTS_BY_EXTENSION;
		
		private EntityRef<DisallowedAbsoluteUris_MOST_POPULAR_HOSTS_BY_HOST> _DisallowedAbsoluteUris_MOST_POPULAR_HOSTS_BY_HOST;
		
		private EntityRef<DisallowedAbsoluteUris_MOST_POPULAR_HOSTS_BY_SCHEME> _DisallowedAbsoluteUris_MOST_POPULAR_HOSTS_BY_SCHEME;
		
		private EntityRef<EmailAddresses_COUNT_BY_HOST> _EmailAddresses_COUNT_BY_HOST;
		
		private EntityRef<EmailAddresses_MOST_POPULAR_HOSTS_BY_ABSOLUTEURI> _EmailAddresses_MOST_POPULAR_HOSTS_BY_ABSOLUTEURI;
		
		private EntityRef<EmailAddresses_MOST_POPULAR_HOSTS_BY_DOMAIN> _EmailAddresses_MOST_POPULAR_HOSTS_BY_DOMAIN;
		
		private EntityRef<EmailAddresses_MOST_POPULAR_HOSTS_BY_EXTENSION> _EmailAddresses_MOST_POPULAR_HOSTS_BY_EXTENSION;
		
		private EntityRef<EmailAddresses_MOST_POPULAR_HOSTS_BY_HOST> _EmailAddresses_MOST_POPULAR_HOSTS_BY_HOST;
		
		private EntityRef<EmailAddresses_MOST_POPULAR_HOSTS_BY_SCHEME> _EmailAddresses_MOST_POPULAR_HOSTS_BY_SCHEME;
		
		private EntityRef<Exceptions_COUNT_BY_HOST1> _Exceptions_COUNT_BY_HOST1;
		
		private EntityRef<Exceptions_COUNT_BY_HOST2> _Exceptions_COUNT_BY_HOST2;
		
		private EntityRef<Files_COUNT_BY_HOST> _Files_COUNT_BY_HOST;
		
		private EntityRef<Files_MOST_POPULAR_HOSTS_BY_ABSOLUTEURI> _Files_MOST_POPULAR_HOSTS_BY_ABSOLUTEURI;
		
		private EntityRef<Files_MOST_POPULAR_HOSTS_BY_DOMAIN> _Files_MOST_POPULAR_HOSTS_BY_DOMAIN;
		
		private EntityRef<Files_MOST_POPULAR_HOSTS_BY_EXTENSION> _Files_MOST_POPULAR_HOSTS_BY_EXTENSION;
		
		private EntityRef<Files_MOST_POPULAR_HOSTS_BY_HOST> _Files_MOST_POPULAR_HOSTS_BY_HOST;
		
		private EntityRef<Files_MOST_POPULAR_HOSTS_BY_SCHEME> _Files_MOST_POPULAR_HOSTS_BY_SCHEME;
		
		private EntityRef<HyperLinks_COUNT_BY_HOST> _HyperLinks_COUNT_BY_HOST;
		
		private EntityRef<HyperLinks_MOST_POPULAR_HOSTS_BY_ABSOLUTEURI> _HyperLinks_MOST_POPULAR_HOSTS_BY_ABSOLUTEURI;
		
		private EntityRef<HyperLinks_MOST_POPULAR_HOSTS_BY_DOMAIN> _HyperLinks_MOST_POPULAR_HOSTS_BY_DOMAIN;
		
		private EntityRef<HyperLinks_MOST_POPULAR_HOSTS_BY_EXTENSION> _HyperLinks_MOST_POPULAR_HOSTS_BY_EXTENSION;
		
		private EntityRef<HyperLinks_MOST_POPULAR_HOSTS_BY_HOST> _HyperLinks_MOST_POPULAR_HOSTS_BY_HOST;
		
		private EntityRef<HyperLinks_MOST_POPULAR_HOSTS_BY_SCHEME> _HyperLinks_MOST_POPULAR_HOSTS_BY_SCHEME;
		
		private EntityRef<Images_COUNT_BY_HOST> _Images_COUNT_BY_HOST;
		
		private EntityRef<Images_MOST_POPULAR_HOSTS_BY_ABSOLUTEURI> _Images_MOST_POPULAR_HOSTS_BY_ABSOLUTEURI;
		
		private EntityRef<Images_MOST_POPULAR_HOSTS_BY_DOMAIN> _Images_MOST_POPULAR_HOSTS_BY_DOMAIN;
		
		private EntityRef<Images_MOST_POPULAR_HOSTS_BY_EXTENSION> _Images_MOST_POPULAR_HOSTS_BY_EXTENSION;
		
		private EntityRef<Images_MOST_POPULAR_HOSTS_BY_HOST> _Images_MOST_POPULAR_HOSTS_BY_HOST;
		
		private EntityRef<Images_MOST_POPULAR_HOSTS_BY_SCHEME> _Images_MOST_POPULAR_HOSTS_BY_SCHEME;
		
		private EntityRef<WebPages_COUNT_BY_HOST> _WebPages_COUNT_BY_HOST;
		
		private EntityRef<Domain> _Domain;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnDomainIDChanging(int value);
    partial void OnDomainIDChanged();
    partial void OnHost1Changing(string value);
    partial void OnHost1Changed();
    #endregion
		
		public Host()
		{
			this._Hosts_Discoveries = new EntitySet<Hosts_Discovery>(new Action<Hosts_Discovery>(this.attach_Hosts_Discoveries), new Action<Hosts_Discovery>(this.detach_Hosts_Discoveries));
			this._DisallowedAbsoluteUris_COUNT_BY_HOST = default(EntityRef<DisallowedAbsoluteUris_COUNT_BY_HOST>);
			this._DisallowedAbsoluteUris_MOST_POPULAR_HOSTS_BY_ABSOLUTEURI = default(EntityRef<DisallowedAbsoluteUris_MOST_POPULAR_HOSTS_BY_ABSOLUTEURI>);
			this._DisallowedAbsoluteUris_MOST_POPULAR_HOSTS_BY_DOMAIN = default(EntityRef<DisallowedAbsoluteUris_MOST_POPULAR_HOSTS_BY_DOMAIN>);
			this._DisallowedAbsoluteUris_MOST_POPULAR_HOSTS_BY_EXTENSION = default(EntityRef<DisallowedAbsoluteUris_MOST_POPULAR_HOSTS_BY_EXTENSION>);
			this._DisallowedAbsoluteUris_MOST_POPULAR_HOSTS_BY_HOST = default(EntityRef<DisallowedAbsoluteUris_MOST_POPULAR_HOSTS_BY_HOST>);
			this._DisallowedAbsoluteUris_MOST_POPULAR_HOSTS_BY_SCHEME = default(EntityRef<DisallowedAbsoluteUris_MOST_POPULAR_HOSTS_BY_SCHEME>);
			this._EmailAddresses_COUNT_BY_HOST = default(EntityRef<EmailAddresses_COUNT_BY_HOST>);
			this._EmailAddresses_MOST_POPULAR_HOSTS_BY_ABSOLUTEURI = default(EntityRef<EmailAddresses_MOST_POPULAR_HOSTS_BY_ABSOLUTEURI>);
			this._EmailAddresses_MOST_POPULAR_HOSTS_BY_DOMAIN = default(EntityRef<EmailAddresses_MOST_POPULAR_HOSTS_BY_DOMAIN>);
			this._EmailAddresses_MOST_POPULAR_HOSTS_BY_EXTENSION = default(EntityRef<EmailAddresses_MOST_POPULAR_HOSTS_BY_EXTENSION>);
			this._EmailAddresses_MOST_POPULAR_HOSTS_BY_HOST = default(EntityRef<EmailAddresses_MOST_POPULAR_HOSTS_BY_HOST>);
			this._EmailAddresses_MOST_POPULAR_HOSTS_BY_SCHEME = default(EntityRef<EmailAddresses_MOST_POPULAR_HOSTS_BY_SCHEME>);
			this._Exceptions_COUNT_BY_HOST1 = default(EntityRef<Exceptions_COUNT_BY_HOST1>);
			this._Exceptions_COUNT_BY_HOST2 = default(EntityRef<Exceptions_COUNT_BY_HOST2>);
			this._Files_COUNT_BY_HOST = default(EntityRef<Files_COUNT_BY_HOST>);
			this._Files_MOST_POPULAR_HOSTS_BY_ABSOLUTEURI = default(EntityRef<Files_MOST_POPULAR_HOSTS_BY_ABSOLUTEURI>);
			this._Files_MOST_POPULAR_HOSTS_BY_DOMAIN = default(EntityRef<Files_MOST_POPULAR_HOSTS_BY_DOMAIN>);
			this._Files_MOST_POPULAR_HOSTS_BY_EXTENSION = default(EntityRef<Files_MOST_POPULAR_HOSTS_BY_EXTENSION>);
			this._Files_MOST_POPULAR_HOSTS_BY_HOST = default(EntityRef<Files_MOST_POPULAR_HOSTS_BY_HOST>);
			this._Files_MOST_POPULAR_HOSTS_BY_SCHEME = default(EntityRef<Files_MOST_POPULAR_HOSTS_BY_SCHEME>);
			this._HyperLinks_COUNT_BY_HOST = default(EntityRef<HyperLinks_COUNT_BY_HOST>);
			this._HyperLinks_MOST_POPULAR_HOSTS_BY_ABSOLUTEURI = default(EntityRef<HyperLinks_MOST_POPULAR_HOSTS_BY_ABSOLUTEURI>);
			this._HyperLinks_MOST_POPULAR_HOSTS_BY_DOMAIN = default(EntityRef<HyperLinks_MOST_POPULAR_HOSTS_BY_DOMAIN>);
			this._HyperLinks_MOST_POPULAR_HOSTS_BY_EXTENSION = default(EntityRef<HyperLinks_MOST_POPULAR_HOSTS_BY_EXTENSION>);
			this._HyperLinks_MOST_POPULAR_HOSTS_BY_HOST = default(EntityRef<HyperLinks_MOST_POPULAR_HOSTS_BY_HOST>);
			this._HyperLinks_MOST_POPULAR_HOSTS_BY_SCHEME = default(EntityRef<HyperLinks_MOST_POPULAR_HOSTS_BY_SCHEME>);
			this._Images_COUNT_BY_HOST = default(EntityRef<Images_COUNT_BY_HOST>);
			this._Images_MOST_POPULAR_HOSTS_BY_ABSOLUTEURI = default(EntityRef<Images_MOST_POPULAR_HOSTS_BY_ABSOLUTEURI>);
			this._Images_MOST_POPULAR_HOSTS_BY_DOMAIN = default(EntityRef<Images_MOST_POPULAR_HOSTS_BY_DOMAIN>);
			this._Images_MOST_POPULAR_HOSTS_BY_EXTENSION = default(EntityRef<Images_MOST_POPULAR_HOSTS_BY_EXTENSION>);
			this._Images_MOST_POPULAR_HOSTS_BY_HOST = default(EntityRef<Images_MOST_POPULAR_HOSTS_BY_HOST>);
			this._Images_MOST_POPULAR_HOSTS_BY_SCHEME = default(EntityRef<Images_MOST_POPULAR_HOSTS_BY_SCHEME>);
			this._WebPages_COUNT_BY_HOST = default(EntityRef<WebPages_COUNT_BY_HOST>);
			this._Domain = default(EntityRef<Domain>);
			OnCreated();
		}
		
		[Column(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[Column(Storage="_DomainID", DbType="Int NOT NULL")]
		public int DomainID
		{
			get
			{
				return this._DomainID;
			}
			set
			{
				if ((this._DomainID != value))
				{
					if (this._Domain.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDomainIDChanging(value);
					this.SendPropertyChanging();
					this._DomainID = value;
					this.SendPropertyChanged("DomainID");
					this.OnDomainIDChanged();
				}
			}
		}
		
		[Column(Name="Host", Storage="_Host1", DbType="VarChar(884) NOT NULL", CanBeNull=false)]
		public string Host1
		{
			get
			{
				return this._Host1;
			}
			set
			{
				if ((this._Host1 != value))
				{
					this.OnHost1Changing(value);
					this.SendPropertyChanging();
					this._Host1 = value;
					this.SendPropertyChanged("Host1");
					this.OnHost1Changed();
				}
			}
		}
		
		[Association(Name="Host_Hosts_Discovery", Storage="_Hosts_Discoveries", ThisKey="ID", OtherKey="HostID")]
		public EntitySet<Hosts_Discovery> Hosts_Discoveries
		{
			get
			{
				return this._Hosts_Discoveries;
			}
			set
			{
				this._Hosts_Discoveries.Assign(value);
			}
		}
		
		[Association(Name="Host_DisallowedAbsoluteUris_COUNT_BY_HOST", Storage="_DisallowedAbsoluteUris_COUNT_BY_HOST", ThisKey="ID", OtherKey="HostID", IsUnique=true, IsForeignKey=false)]
		public DisallowedAbsoluteUris_COUNT_BY_HOST DisallowedAbsoluteUris_COUNT_BY_HOST
		{
			get
			{
				return this._DisallowedAbsoluteUris_COUNT_BY_HOST.Entity;
			}
			set
			{
				DisallowedAbsoluteUris_COUNT_BY_HOST previousValue = this._DisallowedAbsoluteUris_COUNT_BY_HOST.Entity;
				if (((previousValue != value) 
							|| (this._DisallowedAbsoluteUris_COUNT_BY_HOST.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DisallowedAbsoluteUris_COUNT_BY_HOST.Entity = null;
						previousValue.Host = null;
					}
					this._DisallowedAbsoluteUris_COUNT_BY_HOST.Entity = value;
					if ((value != null))
					{
						value.Host = this;
					}
					this.SendPropertyChanged("DisallowedAbsoluteUris_COUNT_BY_HOST");
				}
			}
		}
		
		[Association(Name="Host_DisallowedAbsoluteUris_MOST_POPULAR_HOSTS_BY_ABSOLUTEURI", Storage="_DisallowedAbsoluteUris_MOST_POPULAR_HOSTS_BY_ABSOLUTEURI", ThisKey="ID", OtherKey="HostID", IsUnique=true, IsForeignKey=false)]
		public DisallowedAbsoluteUris_MOST_POPULAR_HOSTS_BY_ABSOLUTEURI DisallowedAbsoluteUris_MOST_POPULAR_HOSTS_BY_ABSOLUTEURI
		{
			get
			{
				return this._DisallowedAbsoluteUris_MOST_POPULAR_HOSTS_BY_ABSOLUTEURI.Entity;
			}
			set
			{
				DisallowedAbsoluteUris_MOST_POPULAR_HOSTS_BY_ABSOLUTEURI previousValue = this._DisallowedAbsoluteUris_MOST_POPULAR_HOSTS_BY_ABSOLUTEURI.Entity;
				if (((previousValue != value) 
							|| (this._DisallowedAbsoluteUris_MOST_POPULAR_HOSTS_BY_ABSOLUTEURI.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DisallowedAbsoluteUris_MOST_POPULAR_HOSTS_BY_ABSOLUTEURI.Entity = null;
						previousValue.Host = null;
					}
					this._DisallowedAbsoluteUris_MOST_POPULAR_HOSTS_BY_ABSOLUTEURI.Entity = value;
					if ((value != null))
					{
						value.Host = this;
					}
					this.SendPropertyChanged("DisallowedAbsoluteUris_MOST_POPULAR_HOSTS_BY_ABSOLUTEURI");
				}
			}
		}
		
		[Association(Name="Host_DisallowedAbsoluteUris_MOST_POPULAR_HOSTS_BY_DOMAIN", Storage="_DisallowedAbsoluteUris_MOST_POPULAR_HOSTS_BY_DOMAIN", ThisKey="ID", OtherKey="HostID", IsUnique=true, IsForeignKey=false)]
		public DisallowedAbsoluteUris_MOST_POPULAR_HOSTS_BY_DOMAIN DisallowedAbsoluteUris_MOST_POPULAR_HOSTS_BY_DOMAIN
		{
			get
			{
				return this._DisallowedAbsoluteUris_MOST_POPULAR_HOSTS_BY_DOMAIN.Entity;
			}
			set
			{
				DisallowedAbsoluteUris_MOST_POPULAR_HOSTS_BY_DOMAIN previousValue = this._DisallowedAbsoluteUris_MOST_POPULAR_HOSTS_BY_DOMAIN.Entity;
				if (((previousValue != value) 
							|| (this._DisallowedAbsoluteUris_MOST_POPULAR_HOSTS_BY_DOMAIN.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DisallowedAbsoluteUris_MOST_POPULAR_HOSTS_BY_DOMAIN.Entity = null;
						previousValue.Host = null;
					}
					this._DisallowedAbsoluteUris_MOST_POPULAR_HOSTS_BY_DOMAIN.Entity = value;
					if ((value != null))
					{
						value.Host = this;
					}
					this.SendPropertyChanged("DisallowedAbsoluteUris_MOST_POPULAR_HOSTS_BY_DOMAIN");
				}
			}
		}
		
		[Association(Name="Host_DisallowedAbsoluteUris_MOST_POPULAR_HOSTS_BY_EXTENSION", Storage="_DisallowedAbsoluteUris_MOST_POPULAR_HOSTS_BY_EXTENSION", ThisKey="ID", OtherKey="HostID", IsUnique=true, IsForeignKey=false)]
		public DisallowedAbsoluteUris_MOST_POPULAR_HOSTS_BY_EXTENSION DisallowedAbsoluteUris_MOST_POPULAR_HOSTS_BY_EXTENSION
		{
			get
			{
				return this._DisallowedAbsoluteUris_MOST_POPULAR_HOSTS_BY_EXTENSION.Entity;
			}
			set
			{
				DisallowedAbsoluteUris_MOST_POPULAR_HOSTS_BY_EXTENSION previousValue = this._DisallowedAbsoluteUris_MOST_POPULAR_HOSTS_BY_EXTENSION.Entity;
				if (((previousValue != value) 
							|| (this._DisallowedAbsoluteUris_MOST_POPULAR_HOSTS_BY_EXTENSION.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DisallowedAbsoluteUris_MOST_POPULAR_HOSTS_BY_EXTENSION.Entity = null;
						previousValue.Host = null;
					}
					this._DisallowedAbsoluteUris_MOST_POPULAR_HOSTS_BY_EXTENSION.Entity = value;
					if ((value != null))
					{
						value.Host = this;
					}
					this.SendPropertyChanged("DisallowedAbsoluteUris_MOST_POPULAR_HOSTS_BY_EXTENSION");
				}
			}
		}
		
		[Association(Name="Host_DisallowedAbsoluteUris_MOST_POPULAR_HOSTS_BY_HOST", Storage="_DisallowedAbsoluteUris_MOST_POPULAR_HOSTS_BY_HOST", ThisKey="ID", OtherKey="HostID", IsUnique=true, IsForeignKey=false)]
		public DisallowedAbsoluteUris_MOST_POPULAR_HOSTS_BY_HOST DisallowedAbsoluteUris_MOST_POPULAR_HOSTS_BY_HOST
		{
			get
			{
				return this._DisallowedAbsoluteUris_MOST_POPULAR_HOSTS_BY_HOST.Entity;
			}
			set
			{
				DisallowedAbsoluteUris_MOST_POPULAR_HOSTS_BY_HOST previousValue = this._DisallowedAbsoluteUris_MOST_POPULAR_HOSTS_BY_HOST.Entity;
				if (((previousValue != value) 
							|| (this._DisallowedAbsoluteUris_MOST_POPULAR_HOSTS_BY_HOST.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DisallowedAbsoluteUris_MOST_POPULAR_HOSTS_BY_HOST.Entity = null;
						previousValue.Host = null;
					}
					this._DisallowedAbsoluteUris_MOST_POPULAR_HOSTS_BY_HOST.Entity = value;
					if ((value != null))
					{
						value.Host = this;
					}
					this.SendPropertyChanged("DisallowedAbsoluteUris_MOST_POPULAR_HOSTS_BY_HOST");
				}
			}
		}
		
		[Association(Name="Host_DisallowedAbsoluteUris_MOST_POPULAR_HOSTS_BY_SCHEME", Storage="_DisallowedAbsoluteUris_MOST_POPULAR_HOSTS_BY_SCHEME", ThisKey="ID", OtherKey="HostID", IsUnique=true, IsForeignKey=false)]
		public DisallowedAbsoluteUris_MOST_POPULAR_HOSTS_BY_SCHEME DisallowedAbsoluteUris_MOST_POPULAR_HOSTS_BY_SCHEME
		{
			get
			{
				return this._DisallowedAbsoluteUris_MOST_POPULAR_HOSTS_BY_SCHEME.Entity;
			}
			set
			{
				DisallowedAbsoluteUris_MOST_POPULAR_HOSTS_BY_SCHEME previousValue = this._DisallowedAbsoluteUris_MOST_POPULAR_HOSTS_BY_SCHEME.Entity;
				if (((previousValue != value) 
							|| (this._DisallowedAbsoluteUris_MOST_POPULAR_HOSTS_BY_SCHEME.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DisallowedAbsoluteUris_MOST_POPULAR_HOSTS_BY_SCHEME.Entity = null;
						previousValue.Host = null;
					}
					this._DisallowedAbsoluteUris_MOST_POPULAR_HOSTS_BY_SCHEME.Entity = value;
					if ((value != null))
					{
						value.Host = this;
					}
					this.SendPropertyChanged("DisallowedAbsoluteUris_MOST_POPULAR_HOSTS_BY_SCHEME");
				}
			}
		}
		
		[Association(Name="Host_EmailAddresses_COUNT_BY_HOST", Storage="_EmailAddresses_COUNT_BY_HOST", ThisKey="ID", OtherKey="HostID", IsUnique=true, IsForeignKey=false)]
		public EmailAddresses_COUNT_BY_HOST EmailAddresses_COUNT_BY_HOST
		{
			get
			{
				return this._EmailAddresses_COUNT_BY_HOST.Entity;
			}
			set
			{
				EmailAddresses_COUNT_BY_HOST previousValue = this._EmailAddresses_COUNT_BY_HOST.Entity;
				if (((previousValue != value) 
							|| (this._EmailAddresses_COUNT_BY_HOST.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._EmailAddresses_COUNT_BY_HOST.Entity = null;
						previousValue.Host = null;
					}
					this._EmailAddresses_COUNT_BY_HOST.Entity = value;
					if ((value != null))
					{
						value.Host = this;
					}
					this.SendPropertyChanged("EmailAddresses_COUNT_BY_HOST");
				}
			}
		}
		
		[Association(Name="Host_EmailAddresses_MOST_POPULAR_HOSTS_BY_ABSOLUTEURI", Storage="_EmailAddresses_MOST_POPULAR_HOSTS_BY_ABSOLUTEURI", ThisKey="ID", OtherKey="HostID", IsUnique=true, IsForeignKey=false)]
		public EmailAddresses_MOST_POPULAR_HOSTS_BY_ABSOLUTEURI EmailAddresses_MOST_POPULAR_HOSTS_BY_ABSOLUTEURI
		{
			get
			{
				return this._EmailAddresses_MOST_POPULAR_HOSTS_BY_ABSOLUTEURI.Entity;
			}
			set
			{
				EmailAddresses_MOST_POPULAR_HOSTS_BY_ABSOLUTEURI previousValue = this._EmailAddresses_MOST_POPULAR_HOSTS_BY_ABSOLUTEURI.Entity;
				if (((previousValue != value) 
							|| (this._EmailAddresses_MOST_POPULAR_HOSTS_BY_ABSOLUTEURI.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._EmailAddresses_MOST_POPULAR_HOSTS_BY_ABSOLUTEURI.Entity = null;
						previousValue.Host = null;
					}
					this._EmailAddresses_MOST_POPULAR_HOSTS_BY_ABSOLUTEURI.Entity = value;
					if ((value != null))
					{
						value.Host = this;
					}
					this.SendPropertyChanged("EmailAddresses_MOST_POPULAR_HOSTS_BY_ABSOLUTEURI");
				}
			}
		}
		
		[Association(Name="Host_EmailAddresses_MOST_POPULAR_HOSTS_BY_DOMAIN", Storage="_EmailAddresses_MOST_POPULAR_HOSTS_BY_DOMAIN", ThisKey="ID", OtherKey="HostID", IsUnique=true, IsForeignKey=false)]
		public EmailAddresses_MOST_POPULAR_HOSTS_BY_DOMAIN EmailAddresses_MOST_POPULAR_HOSTS_BY_DOMAIN
		{
			get
			{
				return this._EmailAddresses_MOST_POPULAR_HOSTS_BY_DOMAIN.Entity;
			}
			set
			{
				EmailAddresses_MOST_POPULAR_HOSTS_BY_DOMAIN previousValue = this._EmailAddresses_MOST_POPULAR_HOSTS_BY_DOMAIN.Entity;
				if (((previousValue != value) 
							|| (this._EmailAddresses_MOST_POPULAR_HOSTS_BY_DOMAIN.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._EmailAddresses_MOST_POPULAR_HOSTS_BY_DOMAIN.Entity = null;
						previousValue.Host = null;
					}
					this._EmailAddresses_MOST_POPULAR_HOSTS_BY_DOMAIN.Entity = value;
					if ((value != null))
					{
						value.Host = this;
					}
					this.SendPropertyChanged("EmailAddresses_MOST_POPULAR_HOSTS_BY_DOMAIN");
				}
			}
		}
		
		[Association(Name="Host_EmailAddresses_MOST_POPULAR_HOSTS_BY_EXTENSION", Storage="_EmailAddresses_MOST_POPULAR_HOSTS_BY_EXTENSION", ThisKey="ID", OtherKey="HostID", IsUnique=true, IsForeignKey=false)]
		public EmailAddresses_MOST_POPULAR_HOSTS_BY_EXTENSION EmailAddresses_MOST_POPULAR_HOSTS_BY_EXTENSION
		{
			get
			{
				return this._EmailAddresses_MOST_POPULAR_HOSTS_BY_EXTENSION.Entity;
			}
			set
			{
				EmailAddresses_MOST_POPULAR_HOSTS_BY_EXTENSION previousValue = this._EmailAddresses_MOST_POPULAR_HOSTS_BY_EXTENSION.Entity;
				if (((previousValue != value) 
							|| (this._EmailAddresses_MOST_POPULAR_HOSTS_BY_EXTENSION.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._EmailAddresses_MOST_POPULAR_HOSTS_BY_EXTENSION.Entity = null;
						previousValue.Host = null;
					}
					this._EmailAddresses_MOST_POPULAR_HOSTS_BY_EXTENSION.Entity = value;
					if ((value != null))
					{
						value.Host = this;
					}
					this.SendPropertyChanged("EmailAddresses_MOST_POPULAR_HOSTS_BY_EXTENSION");
				}
			}
		}
		
		[Association(Name="Host_EmailAddresses_MOST_POPULAR_HOSTS_BY_HOST", Storage="_EmailAddresses_MOST_POPULAR_HOSTS_BY_HOST", ThisKey="ID", OtherKey="HostID", IsUnique=true, IsForeignKey=false)]
		public EmailAddresses_MOST_POPULAR_HOSTS_BY_HOST EmailAddresses_MOST_POPULAR_HOSTS_BY_HOST
		{
			get
			{
				return this._EmailAddresses_MOST_POPULAR_HOSTS_BY_HOST.Entity;
			}
			set
			{
				EmailAddresses_MOST_POPULAR_HOSTS_BY_HOST previousValue = this._EmailAddresses_MOST_POPULAR_HOSTS_BY_HOST.Entity;
				if (((previousValue != value) 
							|| (this._EmailAddresses_MOST_POPULAR_HOSTS_BY_HOST.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._EmailAddresses_MOST_POPULAR_HOSTS_BY_HOST.Entity = null;
						previousValue.Host = null;
					}
					this._EmailAddresses_MOST_POPULAR_HOSTS_BY_HOST.Entity = value;
					if ((value != null))
					{
						value.Host = this;
					}
					this.SendPropertyChanged("EmailAddresses_MOST_POPULAR_HOSTS_BY_HOST");
				}
			}
		}
		
		[Association(Name="Host_EmailAddresses_MOST_POPULAR_HOSTS_BY_SCHEME", Storage="_EmailAddresses_MOST_POPULAR_HOSTS_BY_SCHEME", ThisKey="ID", OtherKey="HostID", IsUnique=true, IsForeignKey=false)]
		public EmailAddresses_MOST_POPULAR_HOSTS_BY_SCHEME EmailAddresses_MOST_POPULAR_HOSTS_BY_SCHEME
		{
			get
			{
				return this._EmailAddresses_MOST_POPULAR_HOSTS_BY_SCHEME.Entity;
			}
			set
			{
				EmailAddresses_MOST_POPULAR_HOSTS_BY_SCHEME previousValue = this._EmailAddresses_MOST_POPULAR_HOSTS_BY_SCHEME.Entity;
				if (((previousValue != value) 
							|| (this._EmailAddresses_MOST_POPULAR_HOSTS_BY_SCHEME.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._EmailAddresses_MOST_POPULAR_HOSTS_BY_SCHEME.Entity = null;
						previousValue.Host = null;
					}
					this._EmailAddresses_MOST_POPULAR_HOSTS_BY_SCHEME.Entity = value;
					if ((value != null))
					{
						value.Host = this;
					}
					this.SendPropertyChanged("EmailAddresses_MOST_POPULAR_HOSTS_BY_SCHEME");
				}
			}
		}
		
		[Association(Name="Host_Exceptions_COUNT_BY_HOST1", Storage="_Exceptions_COUNT_BY_HOST1", ThisKey="Host1", OtherKey="Host1", IsUnique=true, IsForeignKey=false)]
		public Exceptions_COUNT_BY_HOST1 Exceptions_COUNT_BY_HOST1
		{
			get
			{
				return this._Exceptions_COUNT_BY_HOST1.Entity;
			}
			set
			{
				Exceptions_COUNT_BY_HOST1 previousValue = this._Exceptions_COUNT_BY_HOST1.Entity;
				if (((previousValue != value) 
							|| (this._Exceptions_COUNT_BY_HOST1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Exceptions_COUNT_BY_HOST1.Entity = null;
						previousValue.Host = null;
					}
					this._Exceptions_COUNT_BY_HOST1.Entity = value;
					if ((value != null))
					{
						value.Host = this;
					}
					this.SendPropertyChanged("Exceptions_COUNT_BY_HOST1");
				}
			}
		}
		
		[Association(Name="Host_Exceptions_COUNT_BY_HOST2", Storage="_Exceptions_COUNT_BY_HOST2", ThisKey="Host1", OtherKey="Host2", IsUnique=true, IsForeignKey=false)]
		public Exceptions_COUNT_BY_HOST2 Exceptions_COUNT_BY_HOST2
		{
			get
			{
				return this._Exceptions_COUNT_BY_HOST2.Entity;
			}
			set
			{
				Exceptions_COUNT_BY_HOST2 previousValue = this._Exceptions_COUNT_BY_HOST2.Entity;
				if (((previousValue != value) 
							|| (this._Exceptions_COUNT_BY_HOST2.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Exceptions_COUNT_BY_HOST2.Entity = null;
						previousValue.Host = null;
					}
					this._Exceptions_COUNT_BY_HOST2.Entity = value;
					if ((value != null))
					{
						value.Host = this;
					}
					this.SendPropertyChanged("Exceptions_COUNT_BY_HOST2");
				}
			}
		}
		
		[Association(Name="Host_Files_COUNT_BY_HOST", Storage="_Files_COUNT_BY_HOST", ThisKey="ID", OtherKey="HostID", IsUnique=true, IsForeignKey=false)]
		public Files_COUNT_BY_HOST Files_COUNT_BY_HOST
		{
			get
			{
				return this._Files_COUNT_BY_HOST.Entity;
			}
			set
			{
				Files_COUNT_BY_HOST previousValue = this._Files_COUNT_BY_HOST.Entity;
				if (((previousValue != value) 
							|| (this._Files_COUNT_BY_HOST.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Files_COUNT_BY_HOST.Entity = null;
						previousValue.Host = null;
					}
					this._Files_COUNT_BY_HOST.Entity = value;
					if ((value != null))
					{
						value.Host = this;
					}
					this.SendPropertyChanged("Files_COUNT_BY_HOST");
				}
			}
		}
		
		[Association(Name="Host_Files_MOST_POPULAR_HOSTS_BY_ABSOLUTEURI", Storage="_Files_MOST_POPULAR_HOSTS_BY_ABSOLUTEURI", ThisKey="ID", OtherKey="HostID", IsUnique=true, IsForeignKey=false)]
		public Files_MOST_POPULAR_HOSTS_BY_ABSOLUTEURI Files_MOST_POPULAR_HOSTS_BY_ABSOLUTEURI
		{
			get
			{
				return this._Files_MOST_POPULAR_HOSTS_BY_ABSOLUTEURI.Entity;
			}
			set
			{
				Files_MOST_POPULAR_HOSTS_BY_ABSOLUTEURI previousValue = this._Files_MOST_POPULAR_HOSTS_BY_ABSOLUTEURI.Entity;
				if (((previousValue != value) 
							|| (this._Files_MOST_POPULAR_HOSTS_BY_ABSOLUTEURI.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Files_MOST_POPULAR_HOSTS_BY_ABSOLUTEURI.Entity = null;
						previousValue.Host = null;
					}
					this._Files_MOST_POPULAR_HOSTS_BY_ABSOLUTEURI.Entity = value;
					if ((value != null))
					{
						value.Host = this;
					}
					this.SendPropertyChanged("Files_MOST_POPULAR_HOSTS_BY_ABSOLUTEURI");
				}
			}
		}
		
		[Association(Name="Host_Files_MOST_POPULAR_HOSTS_BY_DOMAIN", Storage="_Files_MOST_POPULAR_HOSTS_BY_DOMAIN", ThisKey="ID", OtherKey="HostID", IsUnique=true, IsForeignKey=false)]
		public Files_MOST_POPULAR_HOSTS_BY_DOMAIN Files_MOST_POPULAR_HOSTS_BY_DOMAIN
		{
			get
			{
				return this._Files_MOST_POPULAR_HOSTS_BY_DOMAIN.Entity;
			}
			set
			{
				Files_MOST_POPULAR_HOSTS_BY_DOMAIN previousValue = this._Files_MOST_POPULAR_HOSTS_BY_DOMAIN.Entity;
				if (((previousValue != value) 
							|| (this._Files_MOST_POPULAR_HOSTS_BY_DOMAIN.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Files_MOST_POPULAR_HOSTS_BY_DOMAIN.Entity = null;
						previousValue.Host = null;
					}
					this._Files_MOST_POPULAR_HOSTS_BY_DOMAIN.Entity = value;
					if ((value != null))
					{
						value.Host = this;
					}
					this.SendPropertyChanged("Files_MOST_POPULAR_HOSTS_BY_DOMAIN");
				}
			}
		}
		
		[Association(Name="Host_Files_MOST_POPULAR_HOSTS_BY_EXTENSION", Storage="_Files_MOST_POPULAR_HOSTS_BY_EXTENSION", ThisKey="ID", OtherKey="HostID", IsUnique=true, IsForeignKey=false)]
		public Files_MOST_POPULAR_HOSTS_BY_EXTENSION Files_MOST_POPULAR_HOSTS_BY_EXTENSION
		{
			get
			{
				return this._Files_MOST_POPULAR_HOSTS_BY_EXTENSION.Entity;
			}
			set
			{
				Files_MOST_POPULAR_HOSTS_BY_EXTENSION previousValue = this._Files_MOST_POPULAR_HOSTS_BY_EXTENSION.Entity;
				if (((previousValue != value) 
							|| (this._Files_MOST_POPULAR_HOSTS_BY_EXTENSION.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Files_MOST_POPULAR_HOSTS_BY_EXTENSION.Entity = null;
						previousValue.Host = null;
					}
					this._Files_MOST_POPULAR_HOSTS_BY_EXTENSION.Entity = value;
					if ((value != null))
					{
						value.Host = this;
					}
					this.SendPropertyChanged("Files_MOST_POPULAR_HOSTS_BY_EXTENSION");
				}
			}
		}
		
		[Association(Name="Host_Files_MOST_POPULAR_HOSTS_BY_HOST", Storage="_Files_MOST_POPULAR_HOSTS_BY_HOST", ThisKey="ID", OtherKey="HostID", IsUnique=true, IsForeignKey=false)]
		public Files_MOST_POPULAR_HOSTS_BY_HOST Files_MOST_POPULAR_HOSTS_BY_HOST
		{
			get
			{
				return this._Files_MOST_POPULAR_HOSTS_BY_HOST.Entity;
			}
			set
			{
				Files_MOST_POPULAR_HOSTS_BY_HOST previousValue = this._Files_MOST_POPULAR_HOSTS_BY_HOST.Entity;
				if (((previousValue != value) 
							|| (this._Files_MOST_POPULAR_HOSTS_BY_HOST.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Files_MOST_POPULAR_HOSTS_BY_HOST.Entity = null;
						previousValue.Host = null;
					}
					this._Files_MOST_POPULAR_HOSTS_BY_HOST.Entity = value;
					if ((value != null))
					{
						value.Host = this;
					}
					this.SendPropertyChanged("Files_MOST_POPULAR_HOSTS_BY_HOST");
				}
			}
		}
		
		[Association(Name="Host_Files_MOST_POPULAR_HOSTS_BY_SCHEME", Storage="_Files_MOST_POPULAR_HOSTS_BY_SCHEME", ThisKey="ID", OtherKey="HostID", IsUnique=true, IsForeignKey=false)]
		public Files_MOST_POPULAR_HOSTS_BY_SCHEME Files_MOST_POPULAR_HOSTS_BY_SCHEME
		{
			get
			{
				return this._Files_MOST_POPULAR_HOSTS_BY_SCHEME.Entity;
			}
			set
			{
				Files_MOST_POPULAR_HOSTS_BY_SCHEME previousValue = this._Files_MOST_POPULAR_HOSTS_BY_SCHEME.Entity;
				if (((previousValue != value) 
							|| (this._Files_MOST_POPULAR_HOSTS_BY_SCHEME.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Files_MOST_POPULAR_HOSTS_BY_SCHEME.Entity = null;
						previousValue.Host = null;
					}
					this._Files_MOST_POPULAR_HOSTS_BY_SCHEME.Entity = value;
					if ((value != null))
					{
						value.Host = this;
					}
					this.SendPropertyChanged("Files_MOST_POPULAR_HOSTS_BY_SCHEME");
				}
			}
		}
		
		[Association(Name="Host_HyperLinks_COUNT_BY_HOST", Storage="_HyperLinks_COUNT_BY_HOST", ThisKey="ID", OtherKey="HostID", IsUnique=true, IsForeignKey=false)]
		public HyperLinks_COUNT_BY_HOST HyperLinks_COUNT_BY_HOST
		{
			get
			{
				return this._HyperLinks_COUNT_BY_HOST.Entity;
			}
			set
			{
				HyperLinks_COUNT_BY_HOST previousValue = this._HyperLinks_COUNT_BY_HOST.Entity;
				if (((previousValue != value) 
							|| (this._HyperLinks_COUNT_BY_HOST.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._HyperLinks_COUNT_BY_HOST.Entity = null;
						previousValue.Host = null;
					}
					this._HyperLinks_COUNT_BY_HOST.Entity = value;
					if ((value != null))
					{
						value.Host = this;
					}
					this.SendPropertyChanged("HyperLinks_COUNT_BY_HOST");
				}
			}
		}
		
		[Association(Name="Host_HyperLinks_MOST_POPULAR_HOSTS_BY_ABSOLUTEURI", Storage="_HyperLinks_MOST_POPULAR_HOSTS_BY_ABSOLUTEURI", ThisKey="ID", OtherKey="HostID", IsUnique=true, IsForeignKey=false)]
		public HyperLinks_MOST_POPULAR_HOSTS_BY_ABSOLUTEURI HyperLinks_MOST_POPULAR_HOSTS_BY_ABSOLUTEURI
		{
			get
			{
				return this._HyperLinks_MOST_POPULAR_HOSTS_BY_ABSOLUTEURI.Entity;
			}
			set
			{
				HyperLinks_MOST_POPULAR_HOSTS_BY_ABSOLUTEURI previousValue = this._HyperLinks_MOST_POPULAR_HOSTS_BY_ABSOLUTEURI.Entity;
				if (((previousValue != value) 
							|| (this._HyperLinks_MOST_POPULAR_HOSTS_BY_ABSOLUTEURI.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._HyperLinks_MOST_POPULAR_HOSTS_BY_ABSOLUTEURI.Entity = null;
						previousValue.Host = null;
					}
					this._HyperLinks_MOST_POPULAR_HOSTS_BY_ABSOLUTEURI.Entity = value;
					if ((value != null))
					{
						value.Host = this;
					}
					this.SendPropertyChanged("HyperLinks_MOST_POPULAR_HOSTS_BY_ABSOLUTEURI");
				}
			}
		}
		
		[Association(Name="Host_HyperLinks_MOST_POPULAR_HOSTS_BY_DOMAIN", Storage="_HyperLinks_MOST_POPULAR_HOSTS_BY_DOMAIN", ThisKey="ID", OtherKey="HostID", IsUnique=true, IsForeignKey=false)]
		public HyperLinks_MOST_POPULAR_HOSTS_BY_DOMAIN HyperLinks_MOST_POPULAR_HOSTS_BY_DOMAIN
		{
			get
			{
				return this._HyperLinks_MOST_POPULAR_HOSTS_BY_DOMAIN.Entity;
			}
			set
			{
				HyperLinks_MOST_POPULAR_HOSTS_BY_DOMAIN previousValue = this._HyperLinks_MOST_POPULAR_HOSTS_BY_DOMAIN.Entity;
				if (((previousValue != value) 
							|| (this._HyperLinks_MOST_POPULAR_HOSTS_BY_DOMAIN.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._HyperLinks_MOST_POPULAR_HOSTS_BY_DOMAIN.Entity = null;
						previousValue.Host = null;
					}
					this._HyperLinks_MOST_POPULAR_HOSTS_BY_DOMAIN.Entity = value;
					if ((value != null))
					{
						value.Host = this;
					}
					this.SendPropertyChanged("HyperLinks_MOST_POPULAR_HOSTS_BY_DOMAIN");
				}
			}
		}
		
		[Association(Name="Host_HyperLinks_MOST_POPULAR_HOSTS_BY_EXTENSION", Storage="_HyperLinks_MOST_POPULAR_HOSTS_BY_EXTENSION", ThisKey="ID", OtherKey="HostID", IsUnique=true, IsForeignKey=false)]
		public HyperLinks_MOST_POPULAR_HOSTS_BY_EXTENSION HyperLinks_MOST_POPULAR_HOSTS_BY_EXTENSION
		{
			get
			{
				return this._HyperLinks_MOST_POPULAR_HOSTS_BY_EXTENSION.Entity;
			}
			set
			{
				HyperLinks_MOST_POPULAR_HOSTS_BY_EXTENSION previousValue = this._HyperLinks_MOST_POPULAR_HOSTS_BY_EXTENSION.Entity;
				if (((previousValue != value) 
							|| (this._HyperLinks_MOST_POPULAR_HOSTS_BY_EXTENSION.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._HyperLinks_MOST_POPULAR_HOSTS_BY_EXTENSION.Entity = null;
						previousValue.Host = null;
					}
					this._HyperLinks_MOST_POPULAR_HOSTS_BY_EXTENSION.Entity = value;
					if ((value != null))
					{
						value.Host = this;
					}
					this.SendPropertyChanged("HyperLinks_MOST_POPULAR_HOSTS_BY_EXTENSION");
				}
			}
		}
		
		[Association(Name="Host_HyperLinks_MOST_POPULAR_HOSTS_BY_HOST", Storage="_HyperLinks_MOST_POPULAR_HOSTS_BY_HOST", ThisKey="ID", OtherKey="HostID", IsUnique=true, IsForeignKey=false)]
		public HyperLinks_MOST_POPULAR_HOSTS_BY_HOST HyperLinks_MOST_POPULAR_HOSTS_BY_HOST
		{
			get
			{
				return this._HyperLinks_MOST_POPULAR_HOSTS_BY_HOST.Entity;
			}
			set
			{
				HyperLinks_MOST_POPULAR_HOSTS_BY_HOST previousValue = this._HyperLinks_MOST_POPULAR_HOSTS_BY_HOST.Entity;
				if (((previousValue != value) 
							|| (this._HyperLinks_MOST_POPULAR_HOSTS_BY_HOST.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._HyperLinks_MOST_POPULAR_HOSTS_BY_HOST.Entity = null;
						previousValue.Host = null;
					}
					this._HyperLinks_MOST_POPULAR_HOSTS_BY_HOST.Entity = value;
					if ((value != null))
					{
						value.Host = this;
					}
					this.SendPropertyChanged("HyperLinks_MOST_POPULAR_HOSTS_BY_HOST");
				}
			}
		}
		
		[Association(Name="Host_HyperLinks_MOST_POPULAR_HOSTS_BY_SCHEME", Storage="_HyperLinks_MOST_POPULAR_HOSTS_BY_SCHEME", ThisKey="ID", OtherKey="HostID", IsUnique=true, IsForeignKey=false)]
		public HyperLinks_MOST_POPULAR_HOSTS_BY_SCHEME HyperLinks_MOST_POPULAR_HOSTS_BY_SCHEME
		{
			get
			{
				return this._HyperLinks_MOST_POPULAR_HOSTS_BY_SCHEME.Entity;
			}
			set
			{
				HyperLinks_MOST_POPULAR_HOSTS_BY_SCHEME previousValue = this._HyperLinks_MOST_POPULAR_HOSTS_BY_SCHEME.Entity;
				if (((previousValue != value) 
							|| (this._HyperLinks_MOST_POPULAR_HOSTS_BY_SCHEME.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._HyperLinks_MOST_POPULAR_HOSTS_BY_SCHEME.Entity = null;
						previousValue.Host = null;
					}
					this._HyperLinks_MOST_POPULAR_HOSTS_BY_SCHEME.Entity = value;
					if ((value != null))
					{
						value.Host = this;
					}
					this.SendPropertyChanged("HyperLinks_MOST_POPULAR_HOSTS_BY_SCHEME");
				}
			}
		}
		
		[Association(Name="Host_Images_COUNT_BY_HOST", Storage="_Images_COUNT_BY_HOST", ThisKey="ID", OtherKey="HostID", IsUnique=true, IsForeignKey=false)]
		public Images_COUNT_BY_HOST Images_COUNT_BY_HOST
		{
			get
			{
				return this._Images_COUNT_BY_HOST.Entity;
			}
			set
			{
				Images_COUNT_BY_HOST previousValue = this._Images_COUNT_BY_HOST.Entity;
				if (((previousValue != value) 
							|| (this._Images_COUNT_BY_HOST.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Images_COUNT_BY_HOST.Entity = null;
						previousValue.Host = null;
					}
					this._Images_COUNT_BY_HOST.Entity = value;
					if ((value != null))
					{
						value.Host = this;
					}
					this.SendPropertyChanged("Images_COUNT_BY_HOST");
				}
			}
		}
		
		[Association(Name="Host_Images_MOST_POPULAR_HOSTS_BY_ABSOLUTEURI", Storage="_Images_MOST_POPULAR_HOSTS_BY_ABSOLUTEURI", ThisKey="ID", OtherKey="HostID", IsUnique=true, IsForeignKey=false)]
		public Images_MOST_POPULAR_HOSTS_BY_ABSOLUTEURI Images_MOST_POPULAR_HOSTS_BY_ABSOLUTEURI
		{
			get
			{
				return this._Images_MOST_POPULAR_HOSTS_BY_ABSOLUTEURI.Entity;
			}
			set
			{
				Images_MOST_POPULAR_HOSTS_BY_ABSOLUTEURI previousValue = this._Images_MOST_POPULAR_HOSTS_BY_ABSOLUTEURI.Entity;
				if (((previousValue != value) 
							|| (this._Images_MOST_POPULAR_HOSTS_BY_ABSOLUTEURI.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Images_MOST_POPULAR_HOSTS_BY_ABSOLUTEURI.Entity = null;
						previousValue.Host = null;
					}
					this._Images_MOST_POPULAR_HOSTS_BY_ABSOLUTEURI.Entity = value;
					if ((value != null))
					{
						value.Host = this;
					}
					this.SendPropertyChanged("Images_MOST_POPULAR_HOSTS_BY_ABSOLUTEURI");
				}
			}
		}
		
		[Association(Name="Host_Images_MOST_POPULAR_HOSTS_BY_DOMAIN", Storage="_Images_MOST_POPULAR_HOSTS_BY_DOMAIN", ThisKey="ID", OtherKey="HostID", IsUnique=true, IsForeignKey=false)]
		public Images_MOST_POPULAR_HOSTS_BY_DOMAIN Images_MOST_POPULAR_HOSTS_BY_DOMAIN
		{
			get
			{
				return this._Images_MOST_POPULAR_HOSTS_BY_DOMAIN.Entity;
			}
			set
			{
				Images_MOST_POPULAR_HOSTS_BY_DOMAIN previousValue = this._Images_MOST_POPULAR_HOSTS_BY_DOMAIN.Entity;
				if (((previousValue != value) 
							|| (this._Images_MOST_POPULAR_HOSTS_BY_DOMAIN.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Images_MOST_POPULAR_HOSTS_BY_DOMAIN.Entity = null;
						previousValue.Host = null;
					}
					this._Images_MOST_POPULAR_HOSTS_BY_DOMAIN.Entity = value;
					if ((value != null))
					{
						value.Host = this;
					}
					this.SendPropertyChanged("Images_MOST_POPULAR_HOSTS_BY_DOMAIN");
				}
			}
		}
		
		[Association(Name="Host_Images_MOST_POPULAR_HOSTS_BY_EXTENSION", Storage="_Images_MOST_POPULAR_HOSTS_BY_EXTENSION", ThisKey="ID", OtherKey="HostID", IsUnique=true, IsForeignKey=false)]
		public Images_MOST_POPULAR_HOSTS_BY_EXTENSION Images_MOST_POPULAR_HOSTS_BY_EXTENSION
		{
			get
			{
				return this._Images_MOST_POPULAR_HOSTS_BY_EXTENSION.Entity;
			}
			set
			{
				Images_MOST_POPULAR_HOSTS_BY_EXTENSION previousValue = this._Images_MOST_POPULAR_HOSTS_BY_EXTENSION.Entity;
				if (((previousValue != value) 
							|| (this._Images_MOST_POPULAR_HOSTS_BY_EXTENSION.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Images_MOST_POPULAR_HOSTS_BY_EXTENSION.Entity = null;
						previousValue.Host = null;
					}
					this._Images_MOST_POPULAR_HOSTS_BY_EXTENSION.Entity = value;
					if ((value != null))
					{
						value.Host = this;
					}
					this.SendPropertyChanged("Images_MOST_POPULAR_HOSTS_BY_EXTENSION");
				}
			}
		}
		
		[Association(Name="Host_Images_MOST_POPULAR_HOSTS_BY_HOST", Storage="_Images_MOST_POPULAR_HOSTS_BY_HOST", ThisKey="ID", OtherKey="HostID", IsUnique=true, IsForeignKey=false)]
		public Images_MOST_POPULAR_HOSTS_BY_HOST Images_MOST_POPULAR_HOSTS_BY_HOST
		{
			get
			{
				return this._Images_MOST_POPULAR_HOSTS_BY_HOST.Entity;
			}
			set
			{
				Images_MOST_POPULAR_HOSTS_BY_HOST previousValue = this._Images_MOST_POPULAR_HOSTS_BY_HOST.Entity;
				if (((previousValue != value) 
							|| (this._Images_MOST_POPULAR_HOSTS_BY_HOST.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Images_MOST_POPULAR_HOSTS_BY_HOST.Entity = null;
						previousValue.Host = null;
					}
					this._Images_MOST_POPULAR_HOSTS_BY_HOST.Entity = value;
					if ((value != null))
					{
						value.Host = this;
					}
					this.SendPropertyChanged("Images_MOST_POPULAR_HOSTS_BY_HOST");
				}
			}
		}
		
		[Association(Name="Host_Images_MOST_POPULAR_HOSTS_BY_SCHEME", Storage="_Images_MOST_POPULAR_HOSTS_BY_SCHEME", ThisKey="ID", OtherKey="HostID", IsUnique=true, IsForeignKey=false)]
		public Images_MOST_POPULAR_HOSTS_BY_SCHEME Images_MOST_POPULAR_HOSTS_BY_SCHEME
		{
			get
			{
				return this._Images_MOST_POPULAR_HOSTS_BY_SCHEME.Entity;
			}
			set
			{
				Images_MOST_POPULAR_HOSTS_BY_SCHEME previousValue = this._Images_MOST_POPULAR_HOSTS_BY_SCHEME.Entity;
				if (((previousValue != value) 
							|| (this._Images_MOST_POPULAR_HOSTS_BY_SCHEME.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Images_MOST_POPULAR_HOSTS_BY_SCHEME.Entity = null;
						previousValue.Host = null;
					}
					this._Images_MOST_POPULAR_HOSTS_BY_SCHEME.Entity = value;
					if ((value != null))
					{
						value.Host = this;
					}
					this.SendPropertyChanged("Images_MOST_POPULAR_HOSTS_BY_SCHEME");
				}
			}
		}
		
		[Association(Name="Host_WebPages_COUNT_BY_HOST", Storage="_WebPages_COUNT_BY_HOST", ThisKey="Host1", OtherKey="Host", IsUnique=true, IsForeignKey=false)]
		public WebPages_COUNT_BY_HOST WebPages_COUNT_BY_HOST
		{
			get
			{
				return this._WebPages_COUNT_BY_HOST.Entity;
			}
			set
			{
				WebPages_COUNT_BY_HOST previousValue = this._WebPages_COUNT_BY_HOST.Entity;
				if (((previousValue != value) 
							|| (this._WebPages_COUNT_BY_HOST.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._WebPages_COUNT_BY_HOST.Entity = null;
						previousValue.Host1 = null;
					}
					this._WebPages_COUNT_BY_HOST.Entity = value;
					if ((value != null))
					{
						value.Host1 = this;
					}
					this.SendPropertyChanged("WebPages_COUNT_BY_HOST");
				}
			}
		}
		
		[Association(Name="Domain_Host", Storage="_Domain", ThisKey="DomainID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Domain Domain
		{
			get
			{
				return this._Domain.Entity;
			}
			set
			{
				Domain previousValue = this._Domain.Entity;
				if (((previousValue != value) 
							|| (this._Domain.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Domain.Entity = null;
						previousValue.Hosts.Remove(this);
					}
					this._Domain.Entity = value;
					if ((value != null))
					{
						value.Hosts.Add(this);
						this._DomainID = value.ID;
					}
					else
					{
						this._DomainID = default(int);
					}
					this.SendPropertyChanged("Domain");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Hosts_Discoveries(Hosts_Discovery entity)
		{
			this.SendPropertyChanging();
			entity.Host = this;
		}
		
		private void detach_Hosts_Discoveries(Hosts_Discovery entity)
		{
			this.SendPropertyChanging();
			entity.Host = null;
		}
	}
	
	[Table(Name="dbo.Hosts_Discoveries")]
	public partial class Hosts_Discovery : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Nullable<System.DateTime> _InitiallyDiscovered;
		
		private System.Nullable<System.DateTime> _LastDiscovered;
		
		private int _ID;
		
		private byte _DiscoveryTypeID;
		
		private int _HostID;
		
		private EntitySet<DisallowedAbsoluteUris_Hosts_Discovery> _DisallowedAbsoluteUris_Hosts_Discoveries;
		
		private EntitySet<EmailAddresses_Hosts_Discovery> _EmailAddresses_Hosts_Discoveries;
		
		private EntitySet<Exceptions_Hosts_Discovery> _Exceptions_Hosts_Discoveries;
		
		private EntitySet<Exceptions_Hosts_Discovery> _Exceptions_Hosts_Discoveries1;
		
		private EntitySet<Files_Hosts_Discovery> _Files_Hosts_Discoveries;
		
		private EntitySet<HyperLinks_Hosts_Discovery> _HyperLinks_Hosts_Discoveries;
		
		private EntitySet<Images_Hosts_Discovery> _Images_Hosts_Discoveries;
		
		private EntitySet<WebPages_Hosts_Discovery> _WebPages_Hosts_Discoveries;
		
		private EntityRef<DiscoveryType> _DiscoveryType;
		
		private EntityRef<Host> _Host;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnInitiallyDiscoveredChanging(System.Nullable<System.DateTime> value);
    partial void OnInitiallyDiscoveredChanged();
    partial void OnLastDiscoveredChanging(System.Nullable<System.DateTime> value);
    partial void OnLastDiscoveredChanged();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnDiscoveryTypeIDChanging(byte value);
    partial void OnDiscoveryTypeIDChanged();
    partial void OnHostIDChanging(int value);
    partial void OnHostIDChanged();
    #endregion
		
		public Hosts_Discovery()
		{
			this._DisallowedAbsoluteUris_Hosts_Discoveries = new EntitySet<DisallowedAbsoluteUris_Hosts_Discovery>(new Action<DisallowedAbsoluteUris_Hosts_Discovery>(this.attach_DisallowedAbsoluteUris_Hosts_Discoveries), new Action<DisallowedAbsoluteUris_Hosts_Discovery>(this.detach_DisallowedAbsoluteUris_Hosts_Discoveries));
			this._EmailAddresses_Hosts_Discoveries = new EntitySet<EmailAddresses_Hosts_Discovery>(new Action<EmailAddresses_Hosts_Discovery>(this.attach_EmailAddresses_Hosts_Discoveries), new Action<EmailAddresses_Hosts_Discovery>(this.detach_EmailAddresses_Hosts_Discoveries));
			this._Exceptions_Hosts_Discoveries = new EntitySet<Exceptions_Hosts_Discovery>(new Action<Exceptions_Hosts_Discovery>(this.attach_Exceptions_Hosts_Discoveries), new Action<Exceptions_Hosts_Discovery>(this.detach_Exceptions_Hosts_Discoveries));
			this._Exceptions_Hosts_Discoveries1 = new EntitySet<Exceptions_Hosts_Discovery>(new Action<Exceptions_Hosts_Discovery>(this.attach_Exceptions_Hosts_Discoveries1), new Action<Exceptions_Hosts_Discovery>(this.detach_Exceptions_Hosts_Discoveries1));
			this._Files_Hosts_Discoveries = new EntitySet<Files_Hosts_Discovery>(new Action<Files_Hosts_Discovery>(this.attach_Files_Hosts_Discoveries), new Action<Files_Hosts_Discovery>(this.detach_Files_Hosts_Discoveries));
			this._HyperLinks_Hosts_Discoveries = new EntitySet<HyperLinks_Hosts_Discovery>(new Action<HyperLinks_Hosts_Discovery>(this.attach_HyperLinks_Hosts_Discoveries), new Action<HyperLinks_Hosts_Discovery>(this.detach_HyperLinks_Hosts_Discoveries));
			this._Images_Hosts_Discoveries = new EntitySet<Images_Hosts_Discovery>(new Action<Images_Hosts_Discovery>(this.attach_Images_Hosts_Discoveries), new Action<Images_Hosts_Discovery>(this.detach_Images_Hosts_Discoveries));
			this._WebPages_Hosts_Discoveries = new EntitySet<WebPages_Hosts_Discovery>(new Action<WebPages_Hosts_Discovery>(this.attach_WebPages_Hosts_Discoveries), new Action<WebPages_Hosts_Discovery>(this.detach_WebPages_Hosts_Discoveries));
			this._DiscoveryType = default(EntityRef<DiscoveryType>);
			this._Host = default(EntityRef<Host>);
			OnCreated();
		}
		
		[Column(Storage="_InitiallyDiscovered", DbType="DateTime")]
		public System.Nullable<System.DateTime> InitiallyDiscovered
		{
			get
			{
				return this._InitiallyDiscovered;
			}
			set
			{
				if ((this._InitiallyDiscovered != value))
				{
					this.OnInitiallyDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._InitiallyDiscovered = value;
					this.SendPropertyChanged("InitiallyDiscovered");
					this.OnInitiallyDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_LastDiscovered", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastDiscovered
		{
			get
			{
				return this._LastDiscovered;
			}
			set
			{
				if ((this._LastDiscovered != value))
				{
					this.OnLastDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._LastDiscovered = value;
					this.SendPropertyChanged("LastDiscovered");
					this.OnLastDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[Column(Storage="_DiscoveryTypeID", DbType="TinyInt NOT NULL")]
		public byte DiscoveryTypeID
		{
			get
			{
				return this._DiscoveryTypeID;
			}
			set
			{
				if ((this._DiscoveryTypeID != value))
				{
					if (this._DiscoveryType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDiscoveryTypeIDChanging(value);
					this.SendPropertyChanging();
					this._DiscoveryTypeID = value;
					this.SendPropertyChanged("DiscoveryTypeID");
					this.OnDiscoveryTypeIDChanged();
				}
			}
		}
		
		[Column(Storage="_HostID", DbType="Int NOT NULL")]
		public int HostID
		{
			get
			{
				return this._HostID;
			}
			set
			{
				if ((this._HostID != value))
				{
					if (this._Host.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnHostIDChanging(value);
					this.SendPropertyChanging();
					this._HostID = value;
					this.SendPropertyChanged("HostID");
					this.OnHostIDChanged();
				}
			}
		}
		
		[Association(Name="Hosts_Discovery_DisallowedAbsoluteUris_Hosts_Discovery", Storage="_DisallowedAbsoluteUris_Hosts_Discoveries", ThisKey="ID", OtherKey="Host_DiscoveryID")]
		public EntitySet<DisallowedAbsoluteUris_Hosts_Discovery> DisallowedAbsoluteUris_Hosts_Discoveries
		{
			get
			{
				return this._DisallowedAbsoluteUris_Hosts_Discoveries;
			}
			set
			{
				this._DisallowedAbsoluteUris_Hosts_Discoveries.Assign(value);
			}
		}
		
		[Association(Name="Hosts_Discovery_EmailAddresses_Hosts_Discovery", Storage="_EmailAddresses_Hosts_Discoveries", ThisKey="ID", OtherKey="Host_DiscoveryID")]
		public EntitySet<EmailAddresses_Hosts_Discovery> EmailAddresses_Hosts_Discoveries
		{
			get
			{
				return this._EmailAddresses_Hosts_Discoveries;
			}
			set
			{
				this._EmailAddresses_Hosts_Discoveries.Assign(value);
			}
		}
		
		[Association(Name="Hosts_Discovery_Exceptions_Hosts_Discovery", Storage="_Exceptions_Hosts_Discoveries", ThisKey="ID", OtherKey="Host_DiscoveryID1")]
		public EntitySet<Exceptions_Hosts_Discovery> Exceptions_Hosts_Discoveries
		{
			get
			{
				return this._Exceptions_Hosts_Discoveries;
			}
			set
			{
				this._Exceptions_Hosts_Discoveries.Assign(value);
			}
		}
		
		[Association(Name="Hosts_Discovery_Exceptions_Hosts_Discovery1", Storage="_Exceptions_Hosts_Discoveries1", ThisKey="ID", OtherKey="Host_DiscoveryID2")]
		public EntitySet<Exceptions_Hosts_Discovery> Exceptions_Hosts_Discoveries1
		{
			get
			{
				return this._Exceptions_Hosts_Discoveries1;
			}
			set
			{
				this._Exceptions_Hosts_Discoveries1.Assign(value);
			}
		}
		
		[Association(Name="Hosts_Discovery_Files_Hosts_Discovery", Storage="_Files_Hosts_Discoveries", ThisKey="ID", OtherKey="Host_DiscoveryID")]
		public EntitySet<Files_Hosts_Discovery> Files_Hosts_Discoveries
		{
			get
			{
				return this._Files_Hosts_Discoveries;
			}
			set
			{
				this._Files_Hosts_Discoveries.Assign(value);
			}
		}
		
		[Association(Name="Hosts_Discovery_HyperLinks_Hosts_Discovery", Storage="_HyperLinks_Hosts_Discoveries", ThisKey="ID", OtherKey="Host_DiscoveryID")]
		public EntitySet<HyperLinks_Hosts_Discovery> HyperLinks_Hosts_Discoveries
		{
			get
			{
				return this._HyperLinks_Hosts_Discoveries;
			}
			set
			{
				this._HyperLinks_Hosts_Discoveries.Assign(value);
			}
		}
		
		[Association(Name="Hosts_Discovery_Images_Hosts_Discovery", Storage="_Images_Hosts_Discoveries", ThisKey="ID", OtherKey="Host_DiscoveryID")]
		public EntitySet<Images_Hosts_Discovery> Images_Hosts_Discoveries
		{
			get
			{
				return this._Images_Hosts_Discoveries;
			}
			set
			{
				this._Images_Hosts_Discoveries.Assign(value);
			}
		}
		
		[Association(Name="Hosts_Discovery_WebPages_Hosts_Discovery", Storage="_WebPages_Hosts_Discoveries", ThisKey="ID", OtherKey="Host_DiscoveryID")]
		public EntitySet<WebPages_Hosts_Discovery> WebPages_Hosts_Discoveries
		{
			get
			{
				return this._WebPages_Hosts_Discoveries;
			}
			set
			{
				this._WebPages_Hosts_Discoveries.Assign(value);
			}
		}
		
		[Association(Name="DiscoveryType_Hosts_Discovery", Storage="_DiscoveryType", ThisKey="DiscoveryTypeID", OtherKey="ID", IsForeignKey=true)]
		public DiscoveryType DiscoveryType
		{
			get
			{
				return this._DiscoveryType.Entity;
			}
			set
			{
				DiscoveryType previousValue = this._DiscoveryType.Entity;
				if (((previousValue != value) 
							|| (this._DiscoveryType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DiscoveryType.Entity = null;
						previousValue.Hosts_Discoveries.Remove(this);
					}
					this._DiscoveryType.Entity = value;
					if ((value != null))
					{
						value.Hosts_Discoveries.Add(this);
						this._DiscoveryTypeID = value.ID;
					}
					else
					{
						this._DiscoveryTypeID = default(byte);
					}
					this.SendPropertyChanged("DiscoveryType");
				}
			}
		}
		
		[Association(Name="Host_Hosts_Discovery", Storage="_Host", ThisKey="HostID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Host Host
		{
			get
			{
				return this._Host.Entity;
			}
			set
			{
				Host previousValue = this._Host.Entity;
				if (((previousValue != value) 
							|| (this._Host.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Host.Entity = null;
						previousValue.Hosts_Discoveries.Remove(this);
					}
					this._Host.Entity = value;
					if ((value != null))
					{
						value.Hosts_Discoveries.Add(this);
						this._HostID = value.ID;
					}
					else
					{
						this._HostID = default(int);
					}
					this.SendPropertyChanged("Host");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_DisallowedAbsoluteUris_Hosts_Discoveries(DisallowedAbsoluteUris_Hosts_Discovery entity)
		{
			this.SendPropertyChanging();
			entity.Hosts_Discovery = this;
		}
		
		private void detach_DisallowedAbsoluteUris_Hosts_Discoveries(DisallowedAbsoluteUris_Hosts_Discovery entity)
		{
			this.SendPropertyChanging();
			entity.Hosts_Discovery = null;
		}
		
		private void attach_EmailAddresses_Hosts_Discoveries(EmailAddresses_Hosts_Discovery entity)
		{
			this.SendPropertyChanging();
			entity.Hosts_Discovery = this;
		}
		
		private void detach_EmailAddresses_Hosts_Discoveries(EmailAddresses_Hosts_Discovery entity)
		{
			this.SendPropertyChanging();
			entity.Hosts_Discovery = null;
		}
		
		private void attach_Exceptions_Hosts_Discoveries(Exceptions_Hosts_Discovery entity)
		{
			this.SendPropertyChanging();
			entity.Hosts_Discovery = this;
		}
		
		private void detach_Exceptions_Hosts_Discoveries(Exceptions_Hosts_Discovery entity)
		{
			this.SendPropertyChanging();
			entity.Hosts_Discovery = null;
		}
		
		private void attach_Exceptions_Hosts_Discoveries1(Exceptions_Hosts_Discovery entity)
		{
			this.SendPropertyChanging();
			entity.Hosts_Discovery1 = this;
		}
		
		private void detach_Exceptions_Hosts_Discoveries1(Exceptions_Hosts_Discovery entity)
		{
			this.SendPropertyChanging();
			entity.Hosts_Discovery1 = null;
		}
		
		private void attach_Files_Hosts_Discoveries(Files_Hosts_Discovery entity)
		{
			this.SendPropertyChanging();
			entity.Hosts_Discovery = this;
		}
		
		private void detach_Files_Hosts_Discoveries(Files_Hosts_Discovery entity)
		{
			this.SendPropertyChanging();
			entity.Hosts_Discovery = null;
		}
		
		private void attach_HyperLinks_Hosts_Discoveries(HyperLinks_Hosts_Discovery entity)
		{
			this.SendPropertyChanging();
			entity.Hosts_Discovery = this;
		}
		
		private void detach_HyperLinks_Hosts_Discoveries(HyperLinks_Hosts_Discovery entity)
		{
			this.SendPropertyChanging();
			entity.Hosts_Discovery = null;
		}
		
		private void attach_Images_Hosts_Discoveries(Images_Hosts_Discovery entity)
		{
			this.SendPropertyChanging();
			entity.Hosts_Discovery = this;
		}
		
		private void detach_Images_Hosts_Discoveries(Images_Hosts_Discovery entity)
		{
			this.SendPropertyChanging();
			entity.Hosts_Discovery = null;
		}
		
		private void attach_WebPages_Hosts_Discoveries(WebPages_Hosts_Discovery entity)
		{
			this.SendPropertyChanging();
			entity.Hosts_Discovery = this;
		}
		
		private void detach_WebPages_Hosts_Discoveries(WebPages_Hosts_Discovery entity)
		{
			this.SendPropertyChanging();
			entity.Hosts_Discovery = null;
		}
	}
	
	[Table(Name="dbo.HyperLinks")]
	public partial class HyperLink : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ID;
		
		private string _AbsoluteUri;
		
		private EntitySet<HyperLinks_Discovery> _HyperLinks_Discoveries;
		
		private EntityRef<HyperLinks_Hosts_Discovery> _HyperLinks_Hosts_Discovery;
		
		private EntityRef<HyperLinks_Schemes_Discovery> _HyperLinks_Schemes_Discovery;
		
		private EntityRef<HyperLinks_COUNT_BY_ABSOLUTEURI> _HyperLinks_COUNT_BY_ABSOLUTEURI;
		
		private EntityRef<HyperLinks_MOST_POPULAR_ABSOLUTEURIS_BY_ABSOLUTEURI> _HyperLinks_MOST_POPULAR_ABSOLUTEURIS_BY_ABSOLUTEURI;
		
		private EntityRef<HyperLinks_MOST_POPULAR_ABSOLUTEURIS_BY_DOMAIN> _HyperLinks_MOST_POPULAR_ABSOLUTEURIS_BY_DOMAIN;
		
		private EntityRef<HyperLinks_MOST_POPULAR_ABSOLUTEURIS_BY_EXTENSION> _HyperLinks_MOST_POPULAR_ABSOLUTEURIS_BY_EXTENSION;
		
		private EntityRef<HyperLinks_MOST_POPULAR_ABSOLUTEURIS_BY_HOST> _HyperLinks_MOST_POPULAR_ABSOLUTEURIS_BY_HOST;
		
		private EntityRef<HyperLinks_MOST_POPULAR_ABSOLUTEURIS_BY_SCHEME> _HyperLinks_MOST_POPULAR_ABSOLUTEURIS_BY_SCHEME;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(long value);
    partial void OnIDChanged();
    partial void OnAbsoluteUriChanging(string value);
    partial void OnAbsoluteUriChanged();
    #endregion
		
		public HyperLink()
		{
			this._HyperLinks_Discoveries = new EntitySet<HyperLinks_Discovery>(new Action<HyperLinks_Discovery>(this.attach_HyperLinks_Discoveries), new Action<HyperLinks_Discovery>(this.detach_HyperLinks_Discoveries));
			this._HyperLinks_Hosts_Discovery = default(EntityRef<HyperLinks_Hosts_Discovery>);
			this._HyperLinks_Schemes_Discovery = default(EntityRef<HyperLinks_Schemes_Discovery>);
			this._HyperLinks_COUNT_BY_ABSOLUTEURI = default(EntityRef<HyperLinks_COUNT_BY_ABSOLUTEURI>);
			this._HyperLinks_MOST_POPULAR_ABSOLUTEURIS_BY_ABSOLUTEURI = default(EntityRef<HyperLinks_MOST_POPULAR_ABSOLUTEURIS_BY_ABSOLUTEURI>);
			this._HyperLinks_MOST_POPULAR_ABSOLUTEURIS_BY_DOMAIN = default(EntityRef<HyperLinks_MOST_POPULAR_ABSOLUTEURIS_BY_DOMAIN>);
			this._HyperLinks_MOST_POPULAR_ABSOLUTEURIS_BY_EXTENSION = default(EntityRef<HyperLinks_MOST_POPULAR_ABSOLUTEURIS_BY_EXTENSION>);
			this._HyperLinks_MOST_POPULAR_ABSOLUTEURIS_BY_HOST = default(EntityRef<HyperLinks_MOST_POPULAR_ABSOLUTEURIS_BY_HOST>);
			this._HyperLinks_MOST_POPULAR_ABSOLUTEURIS_BY_SCHEME = default(EntityRef<HyperLinks_MOST_POPULAR_ABSOLUTEURIS_BY_SCHEME>);
			OnCreated();
		}
		
		[Column(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[Column(Storage="_AbsoluteUri", DbType="VarChar(884) NOT NULL", CanBeNull=false)]
		public string AbsoluteUri
		{
			get
			{
				return this._AbsoluteUri;
			}
			set
			{
				if ((this._AbsoluteUri != value))
				{
					this.OnAbsoluteUriChanging(value);
					this.SendPropertyChanging();
					this._AbsoluteUri = value;
					this.SendPropertyChanged("AbsoluteUri");
					this.OnAbsoluteUriChanged();
				}
			}
		}
		
		[Association(Name="HyperLink_HyperLinks_Discovery", Storage="_HyperLinks_Discoveries", ThisKey="ID", OtherKey="HyperLinkID")]
		public EntitySet<HyperLinks_Discovery> HyperLinks_Discoveries
		{
			get
			{
				return this._HyperLinks_Discoveries;
			}
			set
			{
				this._HyperLinks_Discoveries.Assign(value);
			}
		}
		
		[Association(Name="HyperLink_HyperLinks_Hosts_Discovery", Storage="_HyperLinks_Hosts_Discovery", ThisKey="ID", OtherKey="HyperLinkID", IsUnique=true, IsForeignKey=false)]
		public HyperLinks_Hosts_Discovery HyperLinks_Hosts_Discovery
		{
			get
			{
				return this._HyperLinks_Hosts_Discovery.Entity;
			}
			set
			{
				HyperLinks_Hosts_Discovery previousValue = this._HyperLinks_Hosts_Discovery.Entity;
				if (((previousValue != value) 
							|| (this._HyperLinks_Hosts_Discovery.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._HyperLinks_Hosts_Discovery.Entity = null;
						previousValue.HyperLink = null;
					}
					this._HyperLinks_Hosts_Discovery.Entity = value;
					if ((value != null))
					{
						value.HyperLink = this;
					}
					this.SendPropertyChanged("HyperLinks_Hosts_Discovery");
				}
			}
		}
		
		[Association(Name="HyperLink_HyperLinks_Schemes_Discovery", Storage="_HyperLinks_Schemes_Discovery", ThisKey="ID", OtherKey="HyperLinkID", IsUnique=true, IsForeignKey=false)]
		public HyperLinks_Schemes_Discovery HyperLinks_Schemes_Discovery
		{
			get
			{
				return this._HyperLinks_Schemes_Discovery.Entity;
			}
			set
			{
				HyperLinks_Schemes_Discovery previousValue = this._HyperLinks_Schemes_Discovery.Entity;
				if (((previousValue != value) 
							|| (this._HyperLinks_Schemes_Discovery.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._HyperLinks_Schemes_Discovery.Entity = null;
						previousValue.HyperLink = null;
					}
					this._HyperLinks_Schemes_Discovery.Entity = value;
					if ((value != null))
					{
						value.HyperLink = this;
					}
					this.SendPropertyChanged("HyperLinks_Schemes_Discovery");
				}
			}
		}
		
		[Association(Name="HyperLink_HyperLinks_COUNT_BY_ABSOLUTEURI", Storage="_HyperLinks_COUNT_BY_ABSOLUTEURI", ThisKey="ID", OtherKey="HyperLinkID", IsUnique=true, IsForeignKey=false)]
		public HyperLinks_COUNT_BY_ABSOLUTEURI HyperLinks_COUNT_BY_ABSOLUTEURI
		{
			get
			{
				return this._HyperLinks_COUNT_BY_ABSOLUTEURI.Entity;
			}
			set
			{
				HyperLinks_COUNT_BY_ABSOLUTEURI previousValue = this._HyperLinks_COUNT_BY_ABSOLUTEURI.Entity;
				if (((previousValue != value) 
							|| (this._HyperLinks_COUNT_BY_ABSOLUTEURI.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._HyperLinks_COUNT_BY_ABSOLUTEURI.Entity = null;
						previousValue.HyperLink = null;
					}
					this._HyperLinks_COUNT_BY_ABSOLUTEURI.Entity = value;
					if ((value != null))
					{
						value.HyperLink = this;
					}
					this.SendPropertyChanged("HyperLinks_COUNT_BY_ABSOLUTEURI");
				}
			}
		}
		
		[Association(Name="HyperLink_HyperLinks_MOST_POPULAR_ABSOLUTEURIS_BY_ABSOLUTEURI", Storage="_HyperLinks_MOST_POPULAR_ABSOLUTEURIS_BY_ABSOLUTEURI", ThisKey="ID", OtherKey="HyperLinkID", IsUnique=true, IsForeignKey=false)]
		public HyperLinks_MOST_POPULAR_ABSOLUTEURIS_BY_ABSOLUTEURI HyperLinks_MOST_POPULAR_ABSOLUTEURIS_BY_ABSOLUTEURI
		{
			get
			{
				return this._HyperLinks_MOST_POPULAR_ABSOLUTEURIS_BY_ABSOLUTEURI.Entity;
			}
			set
			{
				HyperLinks_MOST_POPULAR_ABSOLUTEURIS_BY_ABSOLUTEURI previousValue = this._HyperLinks_MOST_POPULAR_ABSOLUTEURIS_BY_ABSOLUTEURI.Entity;
				if (((previousValue != value) 
							|| (this._HyperLinks_MOST_POPULAR_ABSOLUTEURIS_BY_ABSOLUTEURI.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._HyperLinks_MOST_POPULAR_ABSOLUTEURIS_BY_ABSOLUTEURI.Entity = null;
						previousValue.HyperLink = null;
					}
					this._HyperLinks_MOST_POPULAR_ABSOLUTEURIS_BY_ABSOLUTEURI.Entity = value;
					if ((value != null))
					{
						value.HyperLink = this;
					}
					this.SendPropertyChanged("HyperLinks_MOST_POPULAR_ABSOLUTEURIS_BY_ABSOLUTEURI");
				}
			}
		}
		
		[Association(Name="HyperLink_HyperLinks_MOST_POPULAR_ABSOLUTEURIS_BY_DOMAIN", Storage="_HyperLinks_MOST_POPULAR_ABSOLUTEURIS_BY_DOMAIN", ThisKey="ID", OtherKey="HyperLinkID", IsUnique=true, IsForeignKey=false)]
		public HyperLinks_MOST_POPULAR_ABSOLUTEURIS_BY_DOMAIN HyperLinks_MOST_POPULAR_ABSOLUTEURIS_BY_DOMAIN
		{
			get
			{
				return this._HyperLinks_MOST_POPULAR_ABSOLUTEURIS_BY_DOMAIN.Entity;
			}
			set
			{
				HyperLinks_MOST_POPULAR_ABSOLUTEURIS_BY_DOMAIN previousValue = this._HyperLinks_MOST_POPULAR_ABSOLUTEURIS_BY_DOMAIN.Entity;
				if (((previousValue != value) 
							|| (this._HyperLinks_MOST_POPULAR_ABSOLUTEURIS_BY_DOMAIN.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._HyperLinks_MOST_POPULAR_ABSOLUTEURIS_BY_DOMAIN.Entity = null;
						previousValue.HyperLink = null;
					}
					this._HyperLinks_MOST_POPULAR_ABSOLUTEURIS_BY_DOMAIN.Entity = value;
					if ((value != null))
					{
						value.HyperLink = this;
					}
					this.SendPropertyChanged("HyperLinks_MOST_POPULAR_ABSOLUTEURIS_BY_DOMAIN");
				}
			}
		}
		
		[Association(Name="HyperLink_HyperLinks_MOST_POPULAR_ABSOLUTEURIS_BY_EXTENSION", Storage="_HyperLinks_MOST_POPULAR_ABSOLUTEURIS_BY_EXTENSION", ThisKey="ID", OtherKey="HyperLinkID", IsUnique=true, IsForeignKey=false)]
		public HyperLinks_MOST_POPULAR_ABSOLUTEURIS_BY_EXTENSION HyperLinks_MOST_POPULAR_ABSOLUTEURIS_BY_EXTENSION
		{
			get
			{
				return this._HyperLinks_MOST_POPULAR_ABSOLUTEURIS_BY_EXTENSION.Entity;
			}
			set
			{
				HyperLinks_MOST_POPULAR_ABSOLUTEURIS_BY_EXTENSION previousValue = this._HyperLinks_MOST_POPULAR_ABSOLUTEURIS_BY_EXTENSION.Entity;
				if (((previousValue != value) 
							|| (this._HyperLinks_MOST_POPULAR_ABSOLUTEURIS_BY_EXTENSION.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._HyperLinks_MOST_POPULAR_ABSOLUTEURIS_BY_EXTENSION.Entity = null;
						previousValue.HyperLink = null;
					}
					this._HyperLinks_MOST_POPULAR_ABSOLUTEURIS_BY_EXTENSION.Entity = value;
					if ((value != null))
					{
						value.HyperLink = this;
					}
					this.SendPropertyChanged("HyperLinks_MOST_POPULAR_ABSOLUTEURIS_BY_EXTENSION");
				}
			}
		}
		
		[Association(Name="HyperLink_HyperLinks_MOST_POPULAR_ABSOLUTEURIS_BY_HOST", Storage="_HyperLinks_MOST_POPULAR_ABSOLUTEURIS_BY_HOST", ThisKey="ID", OtherKey="HyperLinkID", IsUnique=true, IsForeignKey=false)]
		public HyperLinks_MOST_POPULAR_ABSOLUTEURIS_BY_HOST HyperLinks_MOST_POPULAR_ABSOLUTEURIS_BY_HOST
		{
			get
			{
				return this._HyperLinks_MOST_POPULAR_ABSOLUTEURIS_BY_HOST.Entity;
			}
			set
			{
				HyperLinks_MOST_POPULAR_ABSOLUTEURIS_BY_HOST previousValue = this._HyperLinks_MOST_POPULAR_ABSOLUTEURIS_BY_HOST.Entity;
				if (((previousValue != value) 
							|| (this._HyperLinks_MOST_POPULAR_ABSOLUTEURIS_BY_HOST.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._HyperLinks_MOST_POPULAR_ABSOLUTEURIS_BY_HOST.Entity = null;
						previousValue.HyperLink = null;
					}
					this._HyperLinks_MOST_POPULAR_ABSOLUTEURIS_BY_HOST.Entity = value;
					if ((value != null))
					{
						value.HyperLink = this;
					}
					this.SendPropertyChanged("HyperLinks_MOST_POPULAR_ABSOLUTEURIS_BY_HOST");
				}
			}
		}
		
		[Association(Name="HyperLink_HyperLinks_MOST_POPULAR_ABSOLUTEURIS_BY_SCHEME", Storage="_HyperLinks_MOST_POPULAR_ABSOLUTEURIS_BY_SCHEME", ThisKey="ID", OtherKey="HyperLinkID", IsUnique=true, IsForeignKey=false)]
		public HyperLinks_MOST_POPULAR_ABSOLUTEURIS_BY_SCHEME HyperLinks_MOST_POPULAR_ABSOLUTEURIS_BY_SCHEME
		{
			get
			{
				return this._HyperLinks_MOST_POPULAR_ABSOLUTEURIS_BY_SCHEME.Entity;
			}
			set
			{
				HyperLinks_MOST_POPULAR_ABSOLUTEURIS_BY_SCHEME previousValue = this._HyperLinks_MOST_POPULAR_ABSOLUTEURIS_BY_SCHEME.Entity;
				if (((previousValue != value) 
							|| (this._HyperLinks_MOST_POPULAR_ABSOLUTEURIS_BY_SCHEME.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._HyperLinks_MOST_POPULAR_ABSOLUTEURIS_BY_SCHEME.Entity = null;
						previousValue.HyperLink = null;
					}
					this._HyperLinks_MOST_POPULAR_ABSOLUTEURIS_BY_SCHEME.Entity = value;
					if ((value != null))
					{
						value.HyperLink = this;
					}
					this.SendPropertyChanged("HyperLinks_MOST_POPULAR_ABSOLUTEURIS_BY_SCHEME");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_HyperLinks_Discoveries(HyperLinks_Discovery entity)
		{
			this.SendPropertyChanging();
			entity.HyperLink = this;
		}
		
		private void detach_HyperLinks_Discoveries(HyperLinks_Discovery entity)
		{
			this.SendPropertyChanging();
			entity.HyperLink = null;
		}
	}
	
	[Table(Name="dbo.HyperLinks_Discoveries")]
	public partial class HyperLinks_Discovery : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.DateTime _InitiallyDiscovered;
		
		private System.DateTime _LastDiscovered;
		
		private int _ID;
		
		private long _WebPageID;
		
		private long _HyperLinkID;
		
		private EntityRef<HyperLink> _HyperLink;
		
		private EntityRef<WebPage> _WebPage;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnInitiallyDiscoveredChanging(System.DateTime value);
    partial void OnInitiallyDiscoveredChanged();
    partial void OnLastDiscoveredChanging(System.DateTime value);
    partial void OnLastDiscoveredChanged();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnWebPageIDChanging(long value);
    partial void OnWebPageIDChanged();
    partial void OnHyperLinkIDChanging(long value);
    partial void OnHyperLinkIDChanged();
    #endregion
		
		public HyperLinks_Discovery()
		{
			this._HyperLink = default(EntityRef<HyperLink>);
			this._WebPage = default(EntityRef<WebPage>);
			OnCreated();
		}
		
		[Column(Storage="_InitiallyDiscovered", DbType="DateTime NOT NULL")]
		public System.DateTime InitiallyDiscovered
		{
			get
			{
				return this._InitiallyDiscovered;
			}
			set
			{
				if ((this._InitiallyDiscovered != value))
				{
					this.OnInitiallyDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._InitiallyDiscovered = value;
					this.SendPropertyChanged("InitiallyDiscovered");
					this.OnInitiallyDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_LastDiscovered", DbType="DateTime NOT NULL")]
		public System.DateTime LastDiscovered
		{
			get
			{
				return this._LastDiscovered;
			}
			set
			{
				if ((this._LastDiscovered != value))
				{
					this.OnLastDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._LastDiscovered = value;
					this.SendPropertyChanged("LastDiscovered");
					this.OnLastDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_ID", AutoSync=AutoSync.Always, DbType="Int NOT NULL IDENTITY", IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[Column(Storage="_WebPageID", DbType="BigInt NOT NULL", IsPrimaryKey=true)]
		public long WebPageID
		{
			get
			{
				return this._WebPageID;
			}
			set
			{
				if ((this._WebPageID != value))
				{
					if (this._WebPage.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnWebPageIDChanging(value);
					this.SendPropertyChanging();
					this._WebPageID = value;
					this.SendPropertyChanged("WebPageID");
					this.OnWebPageIDChanged();
				}
			}
		}
		
		[Column(Storage="_HyperLinkID", DbType="BigInt NOT NULL", IsPrimaryKey=true)]
		public long HyperLinkID
		{
			get
			{
				return this._HyperLinkID;
			}
			set
			{
				if ((this._HyperLinkID != value))
				{
					if (this._HyperLink.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnHyperLinkIDChanging(value);
					this.SendPropertyChanging();
					this._HyperLinkID = value;
					this.SendPropertyChanged("HyperLinkID");
					this.OnHyperLinkIDChanged();
				}
			}
		}
		
		[Association(Name="HyperLink_HyperLinks_Discovery", Storage="_HyperLink", ThisKey="HyperLinkID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public HyperLink HyperLink
		{
			get
			{
				return this._HyperLink.Entity;
			}
			set
			{
				HyperLink previousValue = this._HyperLink.Entity;
				if (((previousValue != value) 
							|| (this._HyperLink.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._HyperLink.Entity = null;
						previousValue.HyperLinks_Discoveries.Remove(this);
					}
					this._HyperLink.Entity = value;
					if ((value != null))
					{
						value.HyperLinks_Discoveries.Add(this);
						this._HyperLinkID = value.ID;
					}
					else
					{
						this._HyperLinkID = default(long);
					}
					this.SendPropertyChanged("HyperLink");
				}
			}
		}
		
		[Association(Name="WebPage_HyperLinks_Discovery", Storage="_WebPage", ThisKey="WebPageID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public WebPage WebPage
		{
			get
			{
				return this._WebPage.Entity;
			}
			set
			{
				WebPage previousValue = this._WebPage.Entity;
				if (((previousValue != value) 
							|| (this._WebPage.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._WebPage.Entity = null;
						previousValue.HyperLinks_Discoveries.Remove(this);
					}
					this._WebPage.Entity = value;
					if ((value != null))
					{
						value.HyperLinks_Discoveries.Add(this);
						this._WebPageID = value.ID;
					}
					else
					{
						this._WebPageID = default(long);
					}
					this.SendPropertyChanged("WebPage");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.HyperLinks_Hosts_Discoveries")]
	public partial class HyperLinks_Hosts_Discovery : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _HyperLinkID;
		
		private int _Host_DiscoveryID;
		
		private EntityRef<Hosts_Discovery> _Hosts_Discovery;
		
		private EntityRef<HyperLink> _HyperLink;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnHyperLinkIDChanging(long value);
    partial void OnHyperLinkIDChanged();
    partial void OnHost_DiscoveryIDChanging(int value);
    partial void OnHost_DiscoveryIDChanged();
    #endregion
		
		public HyperLinks_Hosts_Discovery()
		{
			this._Hosts_Discovery = default(EntityRef<Hosts_Discovery>);
			this._HyperLink = default(EntityRef<HyperLink>);
			OnCreated();
		}
		
		[Column(Storage="_HyperLinkID", DbType="BigInt NOT NULL", IsPrimaryKey=true)]
		public long HyperLinkID
		{
			get
			{
				return this._HyperLinkID;
			}
			set
			{
				if ((this._HyperLinkID != value))
				{
					if (this._HyperLink.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnHyperLinkIDChanging(value);
					this.SendPropertyChanging();
					this._HyperLinkID = value;
					this.SendPropertyChanged("HyperLinkID");
					this.OnHyperLinkIDChanged();
				}
			}
		}
		
		[Column(Storage="_Host_DiscoveryID", DbType="Int NOT NULL")]
		public int Host_DiscoveryID
		{
			get
			{
				return this._Host_DiscoveryID;
			}
			set
			{
				if ((this._Host_DiscoveryID != value))
				{
					if (this._Hosts_Discovery.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnHost_DiscoveryIDChanging(value);
					this.SendPropertyChanging();
					this._Host_DiscoveryID = value;
					this.SendPropertyChanged("Host_DiscoveryID");
					this.OnHost_DiscoveryIDChanged();
				}
			}
		}
		
		[Association(Name="Hosts_Discovery_HyperLinks_Hosts_Discovery", Storage="_Hosts_Discovery", ThisKey="Host_DiscoveryID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Hosts_Discovery Hosts_Discovery
		{
			get
			{
				return this._Hosts_Discovery.Entity;
			}
			set
			{
				Hosts_Discovery previousValue = this._Hosts_Discovery.Entity;
				if (((previousValue != value) 
							|| (this._Hosts_Discovery.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Hosts_Discovery.Entity = null;
						previousValue.HyperLinks_Hosts_Discoveries.Remove(this);
					}
					this._Hosts_Discovery.Entity = value;
					if ((value != null))
					{
						value.HyperLinks_Hosts_Discoveries.Add(this);
						this._Host_DiscoveryID = value.ID;
					}
					else
					{
						this._Host_DiscoveryID = default(int);
					}
					this.SendPropertyChanged("Hosts_Discovery");
				}
			}
		}
		
		[Association(Name="HyperLink_HyperLinks_Hosts_Discovery", Storage="_HyperLink", ThisKey="HyperLinkID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public HyperLink HyperLink
		{
			get
			{
				return this._HyperLink.Entity;
			}
			set
			{
				HyperLink previousValue = this._HyperLink.Entity;
				if (((previousValue != value) 
							|| (this._HyperLink.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._HyperLink.Entity = null;
						previousValue.HyperLinks_Hosts_Discovery = null;
					}
					this._HyperLink.Entity = value;
					if ((value != null))
					{
						value.HyperLinks_Hosts_Discovery = this;
						this._HyperLinkID = value.ID;
					}
					else
					{
						this._HyperLinkID = default(long);
					}
					this.SendPropertyChanged("HyperLink");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.HyperLinks_Schemes_Discoveries")]
	public partial class HyperLinks_Schemes_Discovery : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _HyperLinkID;
		
		private int _Scheme_DiscoveryID;
		
		private EntityRef<HyperLink> _HyperLink;
		
		private EntityRef<Schemes_Discovery> _Schemes_Discovery;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnHyperLinkIDChanging(long value);
    partial void OnHyperLinkIDChanged();
    partial void OnScheme_DiscoveryIDChanging(int value);
    partial void OnScheme_DiscoveryIDChanged();
    #endregion
		
		public HyperLinks_Schemes_Discovery()
		{
			this._HyperLink = default(EntityRef<HyperLink>);
			this._Schemes_Discovery = default(EntityRef<Schemes_Discovery>);
			OnCreated();
		}
		
		[Column(Storage="_HyperLinkID", DbType="BigInt NOT NULL", IsPrimaryKey=true)]
		public long HyperLinkID
		{
			get
			{
				return this._HyperLinkID;
			}
			set
			{
				if ((this._HyperLinkID != value))
				{
					if (this._HyperLink.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnHyperLinkIDChanging(value);
					this.SendPropertyChanging();
					this._HyperLinkID = value;
					this.SendPropertyChanged("HyperLinkID");
					this.OnHyperLinkIDChanged();
				}
			}
		}
		
		[Column(Storage="_Scheme_DiscoveryID", DbType="Int NOT NULL")]
		public int Scheme_DiscoveryID
		{
			get
			{
				return this._Scheme_DiscoveryID;
			}
			set
			{
				if ((this._Scheme_DiscoveryID != value))
				{
					if (this._Schemes_Discovery.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnScheme_DiscoveryIDChanging(value);
					this.SendPropertyChanging();
					this._Scheme_DiscoveryID = value;
					this.SendPropertyChanged("Scheme_DiscoveryID");
					this.OnScheme_DiscoveryIDChanged();
				}
			}
		}
		
		[Association(Name="HyperLink_HyperLinks_Schemes_Discovery", Storage="_HyperLink", ThisKey="HyperLinkID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public HyperLink HyperLink
		{
			get
			{
				return this._HyperLink.Entity;
			}
			set
			{
				HyperLink previousValue = this._HyperLink.Entity;
				if (((previousValue != value) 
							|| (this._HyperLink.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._HyperLink.Entity = null;
						previousValue.HyperLinks_Schemes_Discovery = null;
					}
					this._HyperLink.Entity = value;
					if ((value != null))
					{
						value.HyperLinks_Schemes_Discovery = this;
						this._HyperLinkID = value.ID;
					}
					else
					{
						this._HyperLinkID = default(long);
					}
					this.SendPropertyChanged("HyperLink");
				}
			}
		}
		
		[Association(Name="Schemes_Discovery_HyperLinks_Schemes_Discovery", Storage="_Schemes_Discovery", ThisKey="Scheme_DiscoveryID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Schemes_Discovery Schemes_Discovery
		{
			get
			{
				return this._Schemes_Discovery.Entity;
			}
			set
			{
				Schemes_Discovery previousValue = this._Schemes_Discovery.Entity;
				if (((previousValue != value) 
							|| (this._Schemes_Discovery.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Schemes_Discovery.Entity = null;
						previousValue.HyperLinks_Schemes_Discoveries.Remove(this);
					}
					this._Schemes_Discovery.Entity = value;
					if ((value != null))
					{
						value.HyperLinks_Schemes_Discoveries.Add(this);
						this._Scheme_DiscoveryID = value.ID;
					}
					else
					{
						this._Scheme_DiscoveryID = default(int);
					}
					this.SendPropertyChanged("Schemes_Discovery");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.Images")]
	public partial class Image : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ID;
		
		private string _AbsoluteUri;
		
		private string _ResponseHeaders;
		
		private System.Data.Linq.Binary _Source;
		
		private string _FullTextIndexType;
		
		private EntitySet<Images_Discovery> _Images_Discoveries;
		
		private EntityRef<Images_Hosts_Discovery> _Images_Hosts_Discovery;
		
		private EntityRef<Images_MetaData> _Images_MetaData;
		
		private EntityRef<Images_Schemes_Discovery> _Images_Schemes_Discovery;
		
		private EntityRef<Images_COUNT_BY_ABSOLUTEURI> _Images_COUNT_BY_ABSOLUTEURI;
		
		private EntityRef<Images_MOST_POPULAR_ABSOLUTEURIS_BY_ABSOLUTEURI> _Images_MOST_POPULAR_ABSOLUTEURIS_BY_ABSOLUTEURI;
		
		private EntityRef<Images_MOST_POPULAR_ABSOLUTEURIS_BY_DOMAIN> _Images_MOST_POPULAR_ABSOLUTEURIS_BY_DOMAIN;
		
		private EntityRef<Images_MOST_POPULAR_ABSOLUTEURIS_BY_EXTENSION> _Images_MOST_POPULAR_ABSOLUTEURIS_BY_EXTENSION;
		
		private EntityRef<Images_MOST_POPULAR_ABSOLUTEURIS_BY_HOST> _Images_MOST_POPULAR_ABSOLUTEURIS_BY_HOST;
		
		private EntityRef<Images_MOST_POPULAR_ABSOLUTEURIS_BY_SCHEME> _Images_MOST_POPULAR_ABSOLUTEURIS_BY_SCHEME;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(long value);
    partial void OnIDChanged();
    partial void OnAbsoluteUriChanging(string value);
    partial void OnAbsoluteUriChanged();
    partial void OnResponseHeadersChanging(string value);
    partial void OnResponseHeadersChanged();
    partial void OnSourceChanging(System.Data.Linq.Binary value);
    partial void OnSourceChanged();
    partial void OnFullTextIndexTypeChanging(string value);
    partial void OnFullTextIndexTypeChanged();
    #endregion
		
		public Image()
		{
			this._Images_Discoveries = new EntitySet<Images_Discovery>(new Action<Images_Discovery>(this.attach_Images_Discoveries), new Action<Images_Discovery>(this.detach_Images_Discoveries));
			this._Images_Hosts_Discovery = default(EntityRef<Images_Hosts_Discovery>);
			this._Images_MetaData = default(EntityRef<Images_MetaData>);
			this._Images_Schemes_Discovery = default(EntityRef<Images_Schemes_Discovery>);
			this._Images_COUNT_BY_ABSOLUTEURI = default(EntityRef<Images_COUNT_BY_ABSOLUTEURI>);
			this._Images_MOST_POPULAR_ABSOLUTEURIS_BY_ABSOLUTEURI = default(EntityRef<Images_MOST_POPULAR_ABSOLUTEURIS_BY_ABSOLUTEURI>);
			this._Images_MOST_POPULAR_ABSOLUTEURIS_BY_DOMAIN = default(EntityRef<Images_MOST_POPULAR_ABSOLUTEURIS_BY_DOMAIN>);
			this._Images_MOST_POPULAR_ABSOLUTEURIS_BY_EXTENSION = default(EntityRef<Images_MOST_POPULAR_ABSOLUTEURIS_BY_EXTENSION>);
			this._Images_MOST_POPULAR_ABSOLUTEURIS_BY_HOST = default(EntityRef<Images_MOST_POPULAR_ABSOLUTEURIS_BY_HOST>);
			this._Images_MOST_POPULAR_ABSOLUTEURIS_BY_SCHEME = default(EntityRef<Images_MOST_POPULAR_ABSOLUTEURIS_BY_SCHEME>);
			OnCreated();
		}
		
		[Column(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[Column(Storage="_AbsoluteUri", DbType="VarChar(884) NOT NULL", CanBeNull=false)]
		public string AbsoluteUri
		{
			get
			{
				return this._AbsoluteUri;
			}
			set
			{
				if ((this._AbsoluteUri != value))
				{
					this.OnAbsoluteUriChanging(value);
					this.SendPropertyChanging();
					this._AbsoluteUri = value;
					this.SendPropertyChanged("AbsoluteUri");
					this.OnAbsoluteUriChanged();
				}
			}
		}
		
		[Column(Storage="_ResponseHeaders", DbType="VarChar(4000)")]
		public string ResponseHeaders
		{
			get
			{
				return this._ResponseHeaders;
			}
			set
			{
				if ((this._ResponseHeaders != value))
				{
					this.OnResponseHeadersChanging(value);
					this.SendPropertyChanging();
					this._ResponseHeaders = value;
					this.SendPropertyChanged("ResponseHeaders");
					this.OnResponseHeadersChanged();
				}
			}
		}
		
		[Column(Storage="_Source", DbType="VarBinary(MAX) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary Source
		{
			get
			{
				return this._Source;
			}
			set
			{
				if ((this._Source != value))
				{
					this.OnSourceChanging(value);
					this.SendPropertyChanging();
					this._Source = value;
					this.SendPropertyChanged("Source");
					this.OnSourceChanged();
				}
			}
		}
		
		[Column(Storage="_FullTextIndexType", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string FullTextIndexType
		{
			get
			{
				return this._FullTextIndexType;
			}
			set
			{
				if ((this._FullTextIndexType != value))
				{
					this.OnFullTextIndexTypeChanging(value);
					this.SendPropertyChanging();
					this._FullTextIndexType = value;
					this.SendPropertyChanged("FullTextIndexType");
					this.OnFullTextIndexTypeChanged();
				}
			}
		}
		
		[Association(Name="Image_Images_Discovery", Storage="_Images_Discoveries", ThisKey="ID", OtherKey="ImageID")]
		public EntitySet<Images_Discovery> Images_Discoveries
		{
			get
			{
				return this._Images_Discoveries;
			}
			set
			{
				this._Images_Discoveries.Assign(value);
			}
		}
		
		[Association(Name="Image_Images_Hosts_Discovery", Storage="_Images_Hosts_Discovery", ThisKey="ID", OtherKey="ImageID", IsUnique=true, IsForeignKey=false)]
		public Images_Hosts_Discovery Images_Hosts_Discovery
		{
			get
			{
				return this._Images_Hosts_Discovery.Entity;
			}
			set
			{
				Images_Hosts_Discovery previousValue = this._Images_Hosts_Discovery.Entity;
				if (((previousValue != value) 
							|| (this._Images_Hosts_Discovery.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Images_Hosts_Discovery.Entity = null;
						previousValue.Image = null;
					}
					this._Images_Hosts_Discovery.Entity = value;
					if ((value != null))
					{
						value.Image = this;
					}
					this.SendPropertyChanged("Images_Hosts_Discovery");
				}
			}
		}
		
		[Association(Name="Image_Images_MetaData", Storage="_Images_MetaData", ThisKey="ID", OtherKey="ImageID", IsUnique=true, IsForeignKey=false)]
		public Images_MetaData Images_MetaData
		{
			get
			{
				return this._Images_MetaData.Entity;
			}
			set
			{
				Images_MetaData previousValue = this._Images_MetaData.Entity;
				if (((previousValue != value) 
							|| (this._Images_MetaData.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Images_MetaData.Entity = null;
						previousValue.Image = null;
					}
					this._Images_MetaData.Entity = value;
					if ((value != null))
					{
						value.Image = this;
					}
					this.SendPropertyChanged("Images_MetaData");
				}
			}
		}
		
		[Association(Name="Image_Images_Schemes_Discovery", Storage="_Images_Schemes_Discovery", ThisKey="ID", OtherKey="ImageID", IsUnique=true, IsForeignKey=false)]
		public Images_Schemes_Discovery Images_Schemes_Discovery
		{
			get
			{
				return this._Images_Schemes_Discovery.Entity;
			}
			set
			{
				Images_Schemes_Discovery previousValue = this._Images_Schemes_Discovery.Entity;
				if (((previousValue != value) 
							|| (this._Images_Schemes_Discovery.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Images_Schemes_Discovery.Entity = null;
						previousValue.Image = null;
					}
					this._Images_Schemes_Discovery.Entity = value;
					if ((value != null))
					{
						value.Image = this;
					}
					this.SendPropertyChanged("Images_Schemes_Discovery");
				}
			}
		}
		
		[Association(Name="Image_Images_COUNT_BY_ABSOLUTEURI", Storage="_Images_COUNT_BY_ABSOLUTEURI", ThisKey="ID", OtherKey="ImageID", IsUnique=true, IsForeignKey=false)]
		public Images_COUNT_BY_ABSOLUTEURI Images_COUNT_BY_ABSOLUTEURI
		{
			get
			{
				return this._Images_COUNT_BY_ABSOLUTEURI.Entity;
			}
			set
			{
				Images_COUNT_BY_ABSOLUTEURI previousValue = this._Images_COUNT_BY_ABSOLUTEURI.Entity;
				if (((previousValue != value) 
							|| (this._Images_COUNT_BY_ABSOLUTEURI.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Images_COUNT_BY_ABSOLUTEURI.Entity = null;
						previousValue.Image = null;
					}
					this._Images_COUNT_BY_ABSOLUTEURI.Entity = value;
					if ((value != null))
					{
						value.Image = this;
					}
					this.SendPropertyChanged("Images_COUNT_BY_ABSOLUTEURI");
				}
			}
		}
		
		[Association(Name="Image_Images_MOST_POPULAR_ABSOLUTEURIS_BY_ABSOLUTEURI", Storage="_Images_MOST_POPULAR_ABSOLUTEURIS_BY_ABSOLUTEURI", ThisKey="ID", OtherKey="ImageID", IsUnique=true, IsForeignKey=false)]
		public Images_MOST_POPULAR_ABSOLUTEURIS_BY_ABSOLUTEURI Images_MOST_POPULAR_ABSOLUTEURIS_BY_ABSOLUTEURI
		{
			get
			{
				return this._Images_MOST_POPULAR_ABSOLUTEURIS_BY_ABSOLUTEURI.Entity;
			}
			set
			{
				Images_MOST_POPULAR_ABSOLUTEURIS_BY_ABSOLUTEURI previousValue = this._Images_MOST_POPULAR_ABSOLUTEURIS_BY_ABSOLUTEURI.Entity;
				if (((previousValue != value) 
							|| (this._Images_MOST_POPULAR_ABSOLUTEURIS_BY_ABSOLUTEURI.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Images_MOST_POPULAR_ABSOLUTEURIS_BY_ABSOLUTEURI.Entity = null;
						previousValue.Image = null;
					}
					this._Images_MOST_POPULAR_ABSOLUTEURIS_BY_ABSOLUTEURI.Entity = value;
					if ((value != null))
					{
						value.Image = this;
					}
					this.SendPropertyChanged("Images_MOST_POPULAR_ABSOLUTEURIS_BY_ABSOLUTEURI");
				}
			}
		}
		
		[Association(Name="Image_Images_MOST_POPULAR_ABSOLUTEURIS_BY_DOMAIN", Storage="_Images_MOST_POPULAR_ABSOLUTEURIS_BY_DOMAIN", ThisKey="ID", OtherKey="ImageID", IsUnique=true, IsForeignKey=false)]
		public Images_MOST_POPULAR_ABSOLUTEURIS_BY_DOMAIN Images_MOST_POPULAR_ABSOLUTEURIS_BY_DOMAIN
		{
			get
			{
				return this._Images_MOST_POPULAR_ABSOLUTEURIS_BY_DOMAIN.Entity;
			}
			set
			{
				Images_MOST_POPULAR_ABSOLUTEURIS_BY_DOMAIN previousValue = this._Images_MOST_POPULAR_ABSOLUTEURIS_BY_DOMAIN.Entity;
				if (((previousValue != value) 
							|| (this._Images_MOST_POPULAR_ABSOLUTEURIS_BY_DOMAIN.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Images_MOST_POPULAR_ABSOLUTEURIS_BY_DOMAIN.Entity = null;
						previousValue.Image = null;
					}
					this._Images_MOST_POPULAR_ABSOLUTEURIS_BY_DOMAIN.Entity = value;
					if ((value != null))
					{
						value.Image = this;
					}
					this.SendPropertyChanged("Images_MOST_POPULAR_ABSOLUTEURIS_BY_DOMAIN");
				}
			}
		}
		
		[Association(Name="Image_Images_MOST_POPULAR_ABSOLUTEURIS_BY_EXTENSION", Storage="_Images_MOST_POPULAR_ABSOLUTEURIS_BY_EXTENSION", ThisKey="ID", OtherKey="ImageID", IsUnique=true, IsForeignKey=false)]
		public Images_MOST_POPULAR_ABSOLUTEURIS_BY_EXTENSION Images_MOST_POPULAR_ABSOLUTEURIS_BY_EXTENSION
		{
			get
			{
				return this._Images_MOST_POPULAR_ABSOLUTEURIS_BY_EXTENSION.Entity;
			}
			set
			{
				Images_MOST_POPULAR_ABSOLUTEURIS_BY_EXTENSION previousValue = this._Images_MOST_POPULAR_ABSOLUTEURIS_BY_EXTENSION.Entity;
				if (((previousValue != value) 
							|| (this._Images_MOST_POPULAR_ABSOLUTEURIS_BY_EXTENSION.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Images_MOST_POPULAR_ABSOLUTEURIS_BY_EXTENSION.Entity = null;
						previousValue.Image = null;
					}
					this._Images_MOST_POPULAR_ABSOLUTEURIS_BY_EXTENSION.Entity = value;
					if ((value != null))
					{
						value.Image = this;
					}
					this.SendPropertyChanged("Images_MOST_POPULAR_ABSOLUTEURIS_BY_EXTENSION");
				}
			}
		}
		
		[Association(Name="Image_Images_MOST_POPULAR_ABSOLUTEURIS_BY_HOST", Storage="_Images_MOST_POPULAR_ABSOLUTEURIS_BY_HOST", ThisKey="ID", OtherKey="ImageID", IsUnique=true, IsForeignKey=false)]
		public Images_MOST_POPULAR_ABSOLUTEURIS_BY_HOST Images_MOST_POPULAR_ABSOLUTEURIS_BY_HOST
		{
			get
			{
				return this._Images_MOST_POPULAR_ABSOLUTEURIS_BY_HOST.Entity;
			}
			set
			{
				Images_MOST_POPULAR_ABSOLUTEURIS_BY_HOST previousValue = this._Images_MOST_POPULAR_ABSOLUTEURIS_BY_HOST.Entity;
				if (((previousValue != value) 
							|| (this._Images_MOST_POPULAR_ABSOLUTEURIS_BY_HOST.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Images_MOST_POPULAR_ABSOLUTEURIS_BY_HOST.Entity = null;
						previousValue.Image = null;
					}
					this._Images_MOST_POPULAR_ABSOLUTEURIS_BY_HOST.Entity = value;
					if ((value != null))
					{
						value.Image = this;
					}
					this.SendPropertyChanged("Images_MOST_POPULAR_ABSOLUTEURIS_BY_HOST");
				}
			}
		}
		
		[Association(Name="Image_Images_MOST_POPULAR_ABSOLUTEURIS_BY_SCHEME", Storage="_Images_MOST_POPULAR_ABSOLUTEURIS_BY_SCHEME", ThisKey="ID", OtherKey="ImageID", IsUnique=true, IsForeignKey=false)]
		public Images_MOST_POPULAR_ABSOLUTEURIS_BY_SCHEME Images_MOST_POPULAR_ABSOLUTEURIS_BY_SCHEME
		{
			get
			{
				return this._Images_MOST_POPULAR_ABSOLUTEURIS_BY_SCHEME.Entity;
			}
			set
			{
				Images_MOST_POPULAR_ABSOLUTEURIS_BY_SCHEME previousValue = this._Images_MOST_POPULAR_ABSOLUTEURIS_BY_SCHEME.Entity;
				if (((previousValue != value) 
							|| (this._Images_MOST_POPULAR_ABSOLUTEURIS_BY_SCHEME.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Images_MOST_POPULAR_ABSOLUTEURIS_BY_SCHEME.Entity = null;
						previousValue.Image = null;
					}
					this._Images_MOST_POPULAR_ABSOLUTEURIS_BY_SCHEME.Entity = value;
					if ((value != null))
					{
						value.Image = this;
					}
					this.SendPropertyChanged("Images_MOST_POPULAR_ABSOLUTEURIS_BY_SCHEME");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Images_Discoveries(Images_Discovery entity)
		{
			this.SendPropertyChanging();
			entity.Image = this;
		}
		
		private void detach_Images_Discoveries(Images_Discovery entity)
		{
			this.SendPropertyChanging();
			entity.Image = null;
		}
	}
	
	[Table(Name="dbo.Images_Discoveries")]
	public partial class Images_Discovery : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.DateTime _InitiallyDiscovered;
		
		private System.DateTime _LastDiscovered;
		
		private long _ID;
		
		private long _WebPageID;
		
		private long _ImageID;
		
		private EntityRef<Image> _Image;
		
		private EntityRef<WebPage> _WebPage;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnInitiallyDiscoveredChanging(System.DateTime value);
    partial void OnInitiallyDiscoveredChanged();
    partial void OnLastDiscoveredChanging(System.DateTime value);
    partial void OnLastDiscoveredChanged();
    partial void OnIDChanging(long value);
    partial void OnIDChanged();
    partial void OnWebPageIDChanging(long value);
    partial void OnWebPageIDChanged();
    partial void OnImageIDChanging(long value);
    partial void OnImageIDChanged();
    #endregion
		
		public Images_Discovery()
		{
			this._Image = default(EntityRef<Image>);
			this._WebPage = default(EntityRef<WebPage>);
			OnCreated();
		}
		
		[Column(Storage="_InitiallyDiscovered", DbType="DateTime NOT NULL")]
		public System.DateTime InitiallyDiscovered
		{
			get
			{
				return this._InitiallyDiscovered;
			}
			set
			{
				if ((this._InitiallyDiscovered != value))
				{
					this.OnInitiallyDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._InitiallyDiscovered = value;
					this.SendPropertyChanged("InitiallyDiscovered");
					this.OnInitiallyDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_LastDiscovered", DbType="DateTime NOT NULL")]
		public System.DateTime LastDiscovered
		{
			get
			{
				return this._LastDiscovered;
			}
			set
			{
				if ((this._LastDiscovered != value))
				{
					this.OnLastDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._LastDiscovered = value;
					this.SendPropertyChanged("LastDiscovered");
					this.OnLastDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_ID", AutoSync=AutoSync.Always, DbType="BigInt NOT NULL IDENTITY", IsDbGenerated=true)]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[Column(Storage="_WebPageID", DbType="BigInt NOT NULL", IsPrimaryKey=true)]
		public long WebPageID
		{
			get
			{
				return this._WebPageID;
			}
			set
			{
				if ((this._WebPageID != value))
				{
					if (this._WebPage.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnWebPageIDChanging(value);
					this.SendPropertyChanging();
					this._WebPageID = value;
					this.SendPropertyChanged("WebPageID");
					this.OnWebPageIDChanged();
				}
			}
		}
		
		[Column(Storage="_ImageID", DbType="BigInt NOT NULL", IsPrimaryKey=true)]
		public long ImageID
		{
			get
			{
				return this._ImageID;
			}
			set
			{
				if ((this._ImageID != value))
				{
					if (this._Image.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnImageIDChanging(value);
					this.SendPropertyChanging();
					this._ImageID = value;
					this.SendPropertyChanged("ImageID");
					this.OnImageIDChanged();
				}
			}
		}
		
		[Association(Name="Image_Images_Discovery", Storage="_Image", ThisKey="ImageID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Image Image
		{
			get
			{
				return this._Image.Entity;
			}
			set
			{
				Image previousValue = this._Image.Entity;
				if (((previousValue != value) 
							|| (this._Image.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Image.Entity = null;
						previousValue.Images_Discoveries.Remove(this);
					}
					this._Image.Entity = value;
					if ((value != null))
					{
						value.Images_Discoveries.Add(this);
						this._ImageID = value.ID;
					}
					else
					{
						this._ImageID = default(long);
					}
					this.SendPropertyChanged("Image");
				}
			}
		}
		
		[Association(Name="WebPage_Images_Discovery", Storage="_WebPage", ThisKey="WebPageID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public WebPage WebPage
		{
			get
			{
				return this._WebPage.Entity;
			}
			set
			{
				WebPage previousValue = this._WebPage.Entity;
				if (((previousValue != value) 
							|| (this._WebPage.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._WebPage.Entity = null;
						previousValue.Images_Discoveries.Remove(this);
					}
					this._WebPage.Entity = value;
					if ((value != null))
					{
						value.Images_Discoveries.Add(this);
						this._WebPageID = value.ID;
					}
					else
					{
						this._WebPageID = default(long);
					}
					this.SendPropertyChanged("WebPage");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.Images_Hosts_Discoveries")]
	public partial class Images_Hosts_Discovery : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ImageID;
		
		private int _Host_DiscoveryID;
		
		private EntityRef<Hosts_Discovery> _Hosts_Discovery;
		
		private EntityRef<Image> _Image;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnImageIDChanging(long value);
    partial void OnImageIDChanged();
    partial void OnHost_DiscoveryIDChanging(int value);
    partial void OnHost_DiscoveryIDChanged();
    #endregion
		
		public Images_Hosts_Discovery()
		{
			this._Hosts_Discovery = default(EntityRef<Hosts_Discovery>);
			this._Image = default(EntityRef<Image>);
			OnCreated();
		}
		
		[Column(Storage="_ImageID", DbType="BigInt NOT NULL", IsPrimaryKey=true)]
		public long ImageID
		{
			get
			{
				return this._ImageID;
			}
			set
			{
				if ((this._ImageID != value))
				{
					if (this._Image.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnImageIDChanging(value);
					this.SendPropertyChanging();
					this._ImageID = value;
					this.SendPropertyChanged("ImageID");
					this.OnImageIDChanged();
				}
			}
		}
		
		[Column(Storage="_Host_DiscoveryID", DbType="Int NOT NULL")]
		public int Host_DiscoveryID
		{
			get
			{
				return this._Host_DiscoveryID;
			}
			set
			{
				if ((this._Host_DiscoveryID != value))
				{
					if (this._Hosts_Discovery.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnHost_DiscoveryIDChanging(value);
					this.SendPropertyChanging();
					this._Host_DiscoveryID = value;
					this.SendPropertyChanged("Host_DiscoveryID");
					this.OnHost_DiscoveryIDChanged();
				}
			}
		}
		
		[Association(Name="Hosts_Discovery_Images_Hosts_Discovery", Storage="_Hosts_Discovery", ThisKey="Host_DiscoveryID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Hosts_Discovery Hosts_Discovery
		{
			get
			{
				return this._Hosts_Discovery.Entity;
			}
			set
			{
				Hosts_Discovery previousValue = this._Hosts_Discovery.Entity;
				if (((previousValue != value) 
							|| (this._Hosts_Discovery.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Hosts_Discovery.Entity = null;
						previousValue.Images_Hosts_Discoveries.Remove(this);
					}
					this._Hosts_Discovery.Entity = value;
					if ((value != null))
					{
						value.Images_Hosts_Discoveries.Add(this);
						this._Host_DiscoveryID = value.ID;
					}
					else
					{
						this._Host_DiscoveryID = default(int);
					}
					this.SendPropertyChanged("Hosts_Discovery");
				}
			}
		}
		
		[Association(Name="Image_Images_Hosts_Discovery", Storage="_Image", ThisKey="ImageID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Image Image
		{
			get
			{
				return this._Image.Entity;
			}
			set
			{
				Image previousValue = this._Image.Entity;
				if (((previousValue != value) 
							|| (this._Image.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Image.Entity = null;
						previousValue.Images_Hosts_Discovery = null;
					}
					this._Image.Entity = value;
					if ((value != null))
					{
						value.Images_Hosts_Discovery = this;
						this._ImageID = value.ID;
					}
					else
					{
						this._ImageID = default(long);
					}
					this.SendPropertyChanged("Image");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.Images_MetaData")]
	public partial class Images_MetaData : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ImageID;
		
		private System.Xml.Linq.XElement _EXIFData;
		
		private System.Nullable<int> _Flags;
		
		private System.Nullable<int> _Height;
		
		private System.Nullable<double> _HorizontalResolution;
		
		private System.Nullable<double> _VerticalResolution;
		
		private System.Nullable<int> _Width;
		
		private EntityRef<Image> _Image;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnImageIDChanging(long value);
    partial void OnImageIDChanged();
    partial void OnEXIFDataChanging(System.Xml.Linq.XElement value);
    partial void OnEXIFDataChanged();
    partial void OnFlagsChanging(System.Nullable<int> value);
    partial void OnFlagsChanged();
    partial void OnHeightChanging(System.Nullable<int> value);
    partial void OnHeightChanged();
    partial void OnHorizontalResolutionChanging(System.Nullable<double> value);
    partial void OnHorizontalResolutionChanged();
    partial void OnVerticalResolutionChanging(System.Nullable<double> value);
    partial void OnVerticalResolutionChanged();
    partial void OnWidthChanging(System.Nullable<int> value);
    partial void OnWidthChanged();
    #endregion
		
		public Images_MetaData()
		{
			this._Image = default(EntityRef<Image>);
			OnCreated();
		}
		
		[Column(Storage="_ImageID", DbType="BigInt NOT NULL", IsPrimaryKey=true)]
		public long ImageID
		{
			get
			{
				return this._ImageID;
			}
			set
			{
				if ((this._ImageID != value))
				{
					if (this._Image.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnImageIDChanging(value);
					this.SendPropertyChanging();
					this._ImageID = value;
					this.SendPropertyChanged("ImageID");
					this.OnImageIDChanged();
				}
			}
		}
		
		[Column(Storage="_EXIFData", DbType="Xml", CanBeNull=true, UpdateCheck=UpdateCheck.Never)]
		public System.Xml.Linq.XElement EXIFData
		{
			get
			{
				return this._EXIFData;
			}
			set
			{
				if ((this._EXIFData != value))
				{
					this.OnEXIFDataChanging(value);
					this.SendPropertyChanging();
					this._EXIFData = value;
					this.SendPropertyChanged("EXIFData");
					this.OnEXIFDataChanged();
				}
			}
		}
		
		[Column(Storage="_Flags", DbType="Int")]
		public System.Nullable<int> Flags
		{
			get
			{
				return this._Flags;
			}
			set
			{
				if ((this._Flags != value))
				{
					this.OnFlagsChanging(value);
					this.SendPropertyChanging();
					this._Flags = value;
					this.SendPropertyChanged("Flags");
					this.OnFlagsChanged();
				}
			}
		}
		
		[Column(Storage="_Height", DbType="Int")]
		public System.Nullable<int> Height
		{
			get
			{
				return this._Height;
			}
			set
			{
				if ((this._Height != value))
				{
					this.OnHeightChanging(value);
					this.SendPropertyChanging();
					this._Height = value;
					this.SendPropertyChanged("Height");
					this.OnHeightChanged();
				}
			}
		}
		
		[Column(Storage="_HorizontalResolution", DbType="Float")]
		public System.Nullable<double> HorizontalResolution
		{
			get
			{
				return this._HorizontalResolution;
			}
			set
			{
				if ((this._HorizontalResolution != value))
				{
					this.OnHorizontalResolutionChanging(value);
					this.SendPropertyChanging();
					this._HorizontalResolution = value;
					this.SendPropertyChanged("HorizontalResolution");
					this.OnHorizontalResolutionChanged();
				}
			}
		}
		
		[Column(Storage="_VerticalResolution", DbType="Float")]
		public System.Nullable<double> VerticalResolution
		{
			get
			{
				return this._VerticalResolution;
			}
			set
			{
				if ((this._VerticalResolution != value))
				{
					this.OnVerticalResolutionChanging(value);
					this.SendPropertyChanging();
					this._VerticalResolution = value;
					this.SendPropertyChanged("VerticalResolution");
					this.OnVerticalResolutionChanged();
				}
			}
		}
		
		[Column(Storage="_Width", DbType="Int")]
		public System.Nullable<int> Width
		{
			get
			{
				return this._Width;
			}
			set
			{
				if ((this._Width != value))
				{
					this.OnWidthChanging(value);
					this.SendPropertyChanging();
					this._Width = value;
					this.SendPropertyChanged("Width");
					this.OnWidthChanged();
				}
			}
		}
		
		[Association(Name="Image_Images_MetaData", Storage="_Image", ThisKey="ImageID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Image Image
		{
			get
			{
				return this._Image.Entity;
			}
			set
			{
				Image previousValue = this._Image.Entity;
				if (((previousValue != value) 
							|| (this._Image.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Image.Entity = null;
						previousValue.Images_MetaData = null;
					}
					this._Image.Entity = value;
					if ((value != null))
					{
						value.Images_MetaData = this;
						this._ImageID = value.ID;
					}
					else
					{
						this._ImageID = default(long);
					}
					this.SendPropertyChanged("Image");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.Images_Schemes_Discoveries")]
	public partial class Images_Schemes_Discovery : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ImageID;
		
		private int _Scheme_DiscoveryID;
		
		private EntityRef<Image> _Image;
		
		private EntityRef<Schemes_Discovery> _Schemes_Discovery;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnImageIDChanging(long value);
    partial void OnImageIDChanged();
    partial void OnScheme_DiscoveryIDChanging(int value);
    partial void OnScheme_DiscoveryIDChanged();
    #endregion
		
		public Images_Schemes_Discovery()
		{
			this._Image = default(EntityRef<Image>);
			this._Schemes_Discovery = default(EntityRef<Schemes_Discovery>);
			OnCreated();
		}
		
		[Column(Storage="_ImageID", DbType="BigInt NOT NULL", IsPrimaryKey=true)]
		public long ImageID
		{
			get
			{
				return this._ImageID;
			}
			set
			{
				if ((this._ImageID != value))
				{
					if (this._Image.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnImageIDChanging(value);
					this.SendPropertyChanging();
					this._ImageID = value;
					this.SendPropertyChanged("ImageID");
					this.OnImageIDChanged();
				}
			}
		}
		
		[Column(Storage="_Scheme_DiscoveryID", DbType="Int NOT NULL")]
		public int Scheme_DiscoveryID
		{
			get
			{
				return this._Scheme_DiscoveryID;
			}
			set
			{
				if ((this._Scheme_DiscoveryID != value))
				{
					if (this._Schemes_Discovery.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnScheme_DiscoveryIDChanging(value);
					this.SendPropertyChanging();
					this._Scheme_DiscoveryID = value;
					this.SendPropertyChanged("Scheme_DiscoveryID");
					this.OnScheme_DiscoveryIDChanged();
				}
			}
		}
		
		[Association(Name="Image_Images_Schemes_Discovery", Storage="_Image", ThisKey="ImageID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Image Image
		{
			get
			{
				return this._Image.Entity;
			}
			set
			{
				Image previousValue = this._Image.Entity;
				if (((previousValue != value) 
							|| (this._Image.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Image.Entity = null;
						previousValue.Images_Schemes_Discovery = null;
					}
					this._Image.Entity = value;
					if ((value != null))
					{
						value.Images_Schemes_Discovery = this;
						this._ImageID = value.ID;
					}
					else
					{
						this._ImageID = default(long);
					}
					this.SendPropertyChanged("Image");
				}
			}
		}
		
		[Association(Name="Schemes_Discovery_Images_Schemes_Discovery", Storage="_Schemes_Discovery", ThisKey="Scheme_DiscoveryID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Schemes_Discovery Schemes_Discovery
		{
			get
			{
				return this._Schemes_Discovery.Entity;
			}
			set
			{
				Schemes_Discovery previousValue = this._Schemes_Discovery.Entity;
				if (((previousValue != value) 
							|| (this._Schemes_Discovery.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Schemes_Discovery.Entity = null;
						previousValue.Images_Schemes_Discoveries.Remove(this);
					}
					this._Schemes_Discovery.Entity = value;
					if ((value != null))
					{
						value.Images_Schemes_Discoveries.Add(this);
						this._Scheme_DiscoveryID = value.ID;
					}
					else
					{
						this._Scheme_DiscoveryID = default(int);
					}
					this.SendPropertyChanged("Schemes_Discovery");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.Schemes")]
	public partial class Scheme : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Scheme1;
		
		private EntityRef<WebPages_COUNT_BY_SCHEME> _WebPages_COUNT_BY_SCHEME;
		
		private EntitySet<Schemes_Discovery> _Schemes_Discoveries;
		
		private EntityRef<DisallowedAbsoluteUris_COUNT_BY_SCHEME> _DisallowedAbsoluteUris_COUNT_BY_SCHEME;
		
		private EntityRef<DisallowedAbsoluteUris_MOST_POPULAR_SCHEMES_BY_ABSOLUTEURI> _DisallowedAbsoluteUris_MOST_POPULAR_SCHEMES_BY_ABSOLUTEURI;
		
		private EntityRef<DisallowedAbsoluteUris_MOST_POPULAR_SCHEMES_BY_DOMAIN> _DisallowedAbsoluteUris_MOST_POPULAR_SCHEMES_BY_DOMAIN;
		
		private EntityRef<DisallowedAbsoluteUris_MOST_POPULAR_SCHEMES_BY_EXTENSION> _DisallowedAbsoluteUris_MOST_POPULAR_SCHEMES_BY_EXTENSION;
		
		private EntityRef<DisallowedAbsoluteUris_MOST_POPULAR_SCHEMES_BY_HOST> _DisallowedAbsoluteUris_MOST_POPULAR_SCHEMES_BY_HOST;
		
		private EntityRef<DisallowedAbsoluteUris_MOST_POPULAR_SCHEMES_BY_SCHEME> _DisallowedAbsoluteUris_MOST_POPULAR_SCHEMES_BY_SCHEME;
		
		private EntityRef<EmailAddresses_COUNT_BY_SCHEME> _EmailAddresses_COUNT_BY_SCHEME;
		
		private EntityRef<EmailAddresses_MOST_POPULAR_SCHEMES_BY_ABSOLUTEURI> _EmailAddresses_MOST_POPULAR_SCHEMES_BY_ABSOLUTEURI;
		
		private EntityRef<EmailAddresses_MOST_POPULAR_SCHEMES_BY_DOMAIN> _EmailAddresses_MOST_POPULAR_SCHEMES_BY_DOMAIN;
		
		private EntityRef<EmailAddresses_MOST_POPULAR_SCHEMES_BY_EXTENSION> _EmailAddresses_MOST_POPULAR_SCHEMES_BY_EXTENSION;
		
		private EntityRef<EmailAddresses_MOST_POPULAR_SCHEMES_BY_HOST> _EmailAddresses_MOST_POPULAR_SCHEMES_BY_HOST;
		
		private EntityRef<EmailAddresses_MOST_POPULAR_SCHEMES_BY_SCHEME> _EmailAddresses_MOST_POPULAR_SCHEMES_BY_SCHEME;
		
		private EntityRef<Exceptions_COUNT_BY_SCHEME1> _Exceptions_COUNT_BY_SCHEME1;
		
		private EntityRef<Exceptions_COUNT_BY_SCHEME2> _Exceptions_COUNT_BY_SCHEME2;
		
		private EntityRef<Files_COUNT_BY_SCHEME> _Files_COUNT_BY_SCHEME;
		
		private EntityRef<Files_MOST_POPULAR_SCHEMES_BY_ABSOLUTEURI> _Files_MOST_POPULAR_SCHEMES_BY_ABSOLUTEURI;
		
		private EntityRef<Files_MOST_POPULAR_SCHEMES_BY_DOMAIN> _Files_MOST_POPULAR_SCHEMES_BY_DOMAIN;
		
		private EntityRef<Files_MOST_POPULAR_SCHEMES_BY_EXTENSION> _Files_MOST_POPULAR_SCHEMES_BY_EXTENSION;
		
		private EntityRef<Files_MOST_POPULAR_SCHEMES_BY_HOST> _Files_MOST_POPULAR_SCHEMES_BY_HOST;
		
		private EntityRef<Files_MOST_POPULAR_SCHEMES_BY_SCHEME> _Files_MOST_POPULAR_SCHEMES_BY_SCHEME;
		
		private EntityRef<HyperLinks_COUNT_BY_SCHEME> _HyperLinks_COUNT_BY_SCHEME;
		
		private EntityRef<HyperLinks_MOST_POPULAR_SCHEMES_BY_ABSOLUTEURI> _HyperLinks_MOST_POPULAR_SCHEMES_BY_ABSOLUTEURI;
		
		private EntityRef<HyperLinks_MOST_POPULAR_SCHEMES_BY_DOMAIN> _HyperLinks_MOST_POPULAR_SCHEMES_BY_DOMAIN;
		
		private EntityRef<HyperLinks_MOST_POPULAR_SCHEMES_BY_EXTENSION> _HyperLinks_MOST_POPULAR_SCHEMES_BY_EXTENSION;
		
		private EntityRef<HyperLinks_MOST_POPULAR_SCHEMES_BY_HOST> _HyperLinks_MOST_POPULAR_SCHEMES_BY_HOST;
		
		private EntityRef<HyperLinks_MOST_POPULAR_SCHEMES_BY_SCHEME> _HyperLinks_MOST_POPULAR_SCHEMES_BY_SCHEME;
		
		private EntityRef<Images_COUNT_BY_SCHEME> _Images_COUNT_BY_SCHEME;
		
		private EntityRef<Images_MOST_POPULAR_SCHEMES_BY_ABSOLUTEURI> _Images_MOST_POPULAR_SCHEMES_BY_ABSOLUTEURI;
		
		private EntityRef<Images_MOST_POPULAR_SCHEMES_BY_DOMAIN> _Images_MOST_POPULAR_SCHEMES_BY_DOMAIN;
		
		private EntityRef<Images_MOST_POPULAR_SCHEMES_BY_EXTENSION> _Images_MOST_POPULAR_SCHEMES_BY_EXTENSION;
		
		private EntityRef<Images_MOST_POPULAR_SCHEMES_BY_HOST> _Images_MOST_POPULAR_SCHEMES_BY_HOST;
		
		private EntityRef<Images_MOST_POPULAR_SCHEMES_BY_SCHEME> _Images_MOST_POPULAR_SCHEMES_BY_SCHEME;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnScheme1Changing(string value);
    partial void OnScheme1Changed();
    #endregion
		
		public Scheme()
		{
			this._WebPages_COUNT_BY_SCHEME = default(EntityRef<WebPages_COUNT_BY_SCHEME>);
			this._Schemes_Discoveries = new EntitySet<Schemes_Discovery>(new Action<Schemes_Discovery>(this.attach_Schemes_Discoveries), new Action<Schemes_Discovery>(this.detach_Schemes_Discoveries));
			this._DisallowedAbsoluteUris_COUNT_BY_SCHEME = default(EntityRef<DisallowedAbsoluteUris_COUNT_BY_SCHEME>);
			this._DisallowedAbsoluteUris_MOST_POPULAR_SCHEMES_BY_ABSOLUTEURI = default(EntityRef<DisallowedAbsoluteUris_MOST_POPULAR_SCHEMES_BY_ABSOLUTEURI>);
			this._DisallowedAbsoluteUris_MOST_POPULAR_SCHEMES_BY_DOMAIN = default(EntityRef<DisallowedAbsoluteUris_MOST_POPULAR_SCHEMES_BY_DOMAIN>);
			this._DisallowedAbsoluteUris_MOST_POPULAR_SCHEMES_BY_EXTENSION = default(EntityRef<DisallowedAbsoluteUris_MOST_POPULAR_SCHEMES_BY_EXTENSION>);
			this._DisallowedAbsoluteUris_MOST_POPULAR_SCHEMES_BY_HOST = default(EntityRef<DisallowedAbsoluteUris_MOST_POPULAR_SCHEMES_BY_HOST>);
			this._DisallowedAbsoluteUris_MOST_POPULAR_SCHEMES_BY_SCHEME = default(EntityRef<DisallowedAbsoluteUris_MOST_POPULAR_SCHEMES_BY_SCHEME>);
			this._EmailAddresses_COUNT_BY_SCHEME = default(EntityRef<EmailAddresses_COUNT_BY_SCHEME>);
			this._EmailAddresses_MOST_POPULAR_SCHEMES_BY_ABSOLUTEURI = default(EntityRef<EmailAddresses_MOST_POPULAR_SCHEMES_BY_ABSOLUTEURI>);
			this._EmailAddresses_MOST_POPULAR_SCHEMES_BY_DOMAIN = default(EntityRef<EmailAddresses_MOST_POPULAR_SCHEMES_BY_DOMAIN>);
			this._EmailAddresses_MOST_POPULAR_SCHEMES_BY_EXTENSION = default(EntityRef<EmailAddresses_MOST_POPULAR_SCHEMES_BY_EXTENSION>);
			this._EmailAddresses_MOST_POPULAR_SCHEMES_BY_HOST = default(EntityRef<EmailAddresses_MOST_POPULAR_SCHEMES_BY_HOST>);
			this._EmailAddresses_MOST_POPULAR_SCHEMES_BY_SCHEME = default(EntityRef<EmailAddresses_MOST_POPULAR_SCHEMES_BY_SCHEME>);
			this._Exceptions_COUNT_BY_SCHEME1 = default(EntityRef<Exceptions_COUNT_BY_SCHEME1>);
			this._Exceptions_COUNT_BY_SCHEME2 = default(EntityRef<Exceptions_COUNT_BY_SCHEME2>);
			this._Files_COUNT_BY_SCHEME = default(EntityRef<Files_COUNT_BY_SCHEME>);
			this._Files_MOST_POPULAR_SCHEMES_BY_ABSOLUTEURI = default(EntityRef<Files_MOST_POPULAR_SCHEMES_BY_ABSOLUTEURI>);
			this._Files_MOST_POPULAR_SCHEMES_BY_DOMAIN = default(EntityRef<Files_MOST_POPULAR_SCHEMES_BY_DOMAIN>);
			this._Files_MOST_POPULAR_SCHEMES_BY_EXTENSION = default(EntityRef<Files_MOST_POPULAR_SCHEMES_BY_EXTENSION>);
			this._Files_MOST_POPULAR_SCHEMES_BY_HOST = default(EntityRef<Files_MOST_POPULAR_SCHEMES_BY_HOST>);
			this._Files_MOST_POPULAR_SCHEMES_BY_SCHEME = default(EntityRef<Files_MOST_POPULAR_SCHEMES_BY_SCHEME>);
			this._HyperLinks_COUNT_BY_SCHEME = default(EntityRef<HyperLinks_COUNT_BY_SCHEME>);
			this._HyperLinks_MOST_POPULAR_SCHEMES_BY_ABSOLUTEURI = default(EntityRef<HyperLinks_MOST_POPULAR_SCHEMES_BY_ABSOLUTEURI>);
			this._HyperLinks_MOST_POPULAR_SCHEMES_BY_DOMAIN = default(EntityRef<HyperLinks_MOST_POPULAR_SCHEMES_BY_DOMAIN>);
			this._HyperLinks_MOST_POPULAR_SCHEMES_BY_EXTENSION = default(EntityRef<HyperLinks_MOST_POPULAR_SCHEMES_BY_EXTENSION>);
			this._HyperLinks_MOST_POPULAR_SCHEMES_BY_HOST = default(EntityRef<HyperLinks_MOST_POPULAR_SCHEMES_BY_HOST>);
			this._HyperLinks_MOST_POPULAR_SCHEMES_BY_SCHEME = default(EntityRef<HyperLinks_MOST_POPULAR_SCHEMES_BY_SCHEME>);
			this._Images_COUNT_BY_SCHEME = default(EntityRef<Images_COUNT_BY_SCHEME>);
			this._Images_MOST_POPULAR_SCHEMES_BY_ABSOLUTEURI = default(EntityRef<Images_MOST_POPULAR_SCHEMES_BY_ABSOLUTEURI>);
			this._Images_MOST_POPULAR_SCHEMES_BY_DOMAIN = default(EntityRef<Images_MOST_POPULAR_SCHEMES_BY_DOMAIN>);
			this._Images_MOST_POPULAR_SCHEMES_BY_EXTENSION = default(EntityRef<Images_MOST_POPULAR_SCHEMES_BY_EXTENSION>);
			this._Images_MOST_POPULAR_SCHEMES_BY_HOST = default(EntityRef<Images_MOST_POPULAR_SCHEMES_BY_HOST>);
			this._Images_MOST_POPULAR_SCHEMES_BY_SCHEME = default(EntityRef<Images_MOST_POPULAR_SCHEMES_BY_SCHEME>);
			OnCreated();
		}
		
		[Column(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[Column(Name="Scheme", Storage="_Scheme1", DbType="VarChar(884) NOT NULL", CanBeNull=false)]
		public string Scheme1
		{
			get
			{
				return this._Scheme1;
			}
			set
			{
				if ((this._Scheme1 != value))
				{
					this.OnScheme1Changing(value);
					this.SendPropertyChanging();
					this._Scheme1 = value;
					this.SendPropertyChanged("Scheme1");
					this.OnScheme1Changed();
				}
			}
		}
		
		[Association(Name="Scheme_WebPages_COUNT_BY_SCHEME", Storage="_WebPages_COUNT_BY_SCHEME", ThisKey="Scheme1", OtherKey="Scheme", IsUnique=true, IsForeignKey=false)]
		public WebPages_COUNT_BY_SCHEME WebPages_COUNT_BY_SCHEME
		{
			get
			{
				return this._WebPages_COUNT_BY_SCHEME.Entity;
			}
			set
			{
				WebPages_COUNT_BY_SCHEME previousValue = this._WebPages_COUNT_BY_SCHEME.Entity;
				if (((previousValue != value) 
							|| (this._WebPages_COUNT_BY_SCHEME.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._WebPages_COUNT_BY_SCHEME.Entity = null;
						previousValue.Scheme1 = null;
					}
					this._WebPages_COUNT_BY_SCHEME.Entity = value;
					if ((value != null))
					{
						value.Scheme1 = this;
					}
					this.SendPropertyChanged("WebPages_COUNT_BY_SCHEME");
				}
			}
		}
		
		[Association(Name="Scheme_Schemes_Discovery", Storage="_Schemes_Discoveries", ThisKey="ID", OtherKey="SchemeID")]
		public EntitySet<Schemes_Discovery> Schemes_Discoveries
		{
			get
			{
				return this._Schemes_Discoveries;
			}
			set
			{
				this._Schemes_Discoveries.Assign(value);
			}
		}
		
		[Association(Name="Scheme_DisallowedAbsoluteUris_COUNT_BY_SCHEME", Storage="_DisallowedAbsoluteUris_COUNT_BY_SCHEME", ThisKey="ID", OtherKey="SchemeID", IsUnique=true, IsForeignKey=false)]
		public DisallowedAbsoluteUris_COUNT_BY_SCHEME DisallowedAbsoluteUris_COUNT_BY_SCHEME
		{
			get
			{
				return this._DisallowedAbsoluteUris_COUNT_BY_SCHEME.Entity;
			}
			set
			{
				DisallowedAbsoluteUris_COUNT_BY_SCHEME previousValue = this._DisallowedAbsoluteUris_COUNT_BY_SCHEME.Entity;
				if (((previousValue != value) 
							|| (this._DisallowedAbsoluteUris_COUNT_BY_SCHEME.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DisallowedAbsoluteUris_COUNT_BY_SCHEME.Entity = null;
						previousValue.Scheme = null;
					}
					this._DisallowedAbsoluteUris_COUNT_BY_SCHEME.Entity = value;
					if ((value != null))
					{
						value.Scheme = this;
					}
					this.SendPropertyChanged("DisallowedAbsoluteUris_COUNT_BY_SCHEME");
				}
			}
		}
		
		[Association(Name="Scheme_DisallowedAbsoluteUris_MOST_POPULAR_SCHEMES_BY_ABSOLUTEURI", Storage="_DisallowedAbsoluteUris_MOST_POPULAR_SCHEMES_BY_ABSOLUTEURI", ThisKey="ID", OtherKey="SchemeID", IsUnique=true, IsForeignKey=false)]
		public DisallowedAbsoluteUris_MOST_POPULAR_SCHEMES_BY_ABSOLUTEURI DisallowedAbsoluteUris_MOST_POPULAR_SCHEMES_BY_ABSOLUTEURI
		{
			get
			{
				return this._DisallowedAbsoluteUris_MOST_POPULAR_SCHEMES_BY_ABSOLUTEURI.Entity;
			}
			set
			{
				DisallowedAbsoluteUris_MOST_POPULAR_SCHEMES_BY_ABSOLUTEURI previousValue = this._DisallowedAbsoluteUris_MOST_POPULAR_SCHEMES_BY_ABSOLUTEURI.Entity;
				if (((previousValue != value) 
							|| (this._DisallowedAbsoluteUris_MOST_POPULAR_SCHEMES_BY_ABSOLUTEURI.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DisallowedAbsoluteUris_MOST_POPULAR_SCHEMES_BY_ABSOLUTEURI.Entity = null;
						previousValue.Scheme = null;
					}
					this._DisallowedAbsoluteUris_MOST_POPULAR_SCHEMES_BY_ABSOLUTEURI.Entity = value;
					if ((value != null))
					{
						value.Scheme = this;
					}
					this.SendPropertyChanged("DisallowedAbsoluteUris_MOST_POPULAR_SCHEMES_BY_ABSOLUTEURI");
				}
			}
		}
		
		[Association(Name="Scheme_DisallowedAbsoluteUris_MOST_POPULAR_SCHEMES_BY_DOMAIN", Storage="_DisallowedAbsoluteUris_MOST_POPULAR_SCHEMES_BY_DOMAIN", ThisKey="ID", OtherKey="SchemeID", IsUnique=true, IsForeignKey=false)]
		public DisallowedAbsoluteUris_MOST_POPULAR_SCHEMES_BY_DOMAIN DisallowedAbsoluteUris_MOST_POPULAR_SCHEMES_BY_DOMAIN
		{
			get
			{
				return this._DisallowedAbsoluteUris_MOST_POPULAR_SCHEMES_BY_DOMAIN.Entity;
			}
			set
			{
				DisallowedAbsoluteUris_MOST_POPULAR_SCHEMES_BY_DOMAIN previousValue = this._DisallowedAbsoluteUris_MOST_POPULAR_SCHEMES_BY_DOMAIN.Entity;
				if (((previousValue != value) 
							|| (this._DisallowedAbsoluteUris_MOST_POPULAR_SCHEMES_BY_DOMAIN.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DisallowedAbsoluteUris_MOST_POPULAR_SCHEMES_BY_DOMAIN.Entity = null;
						previousValue.Scheme = null;
					}
					this._DisallowedAbsoluteUris_MOST_POPULAR_SCHEMES_BY_DOMAIN.Entity = value;
					if ((value != null))
					{
						value.Scheme = this;
					}
					this.SendPropertyChanged("DisallowedAbsoluteUris_MOST_POPULAR_SCHEMES_BY_DOMAIN");
				}
			}
		}
		
		[Association(Name="Scheme_DisallowedAbsoluteUris_MOST_POPULAR_SCHEMES_BY_EXTENSION", Storage="_DisallowedAbsoluteUris_MOST_POPULAR_SCHEMES_BY_EXTENSION", ThisKey="ID", OtherKey="SchemeID", IsUnique=true, IsForeignKey=false)]
		public DisallowedAbsoluteUris_MOST_POPULAR_SCHEMES_BY_EXTENSION DisallowedAbsoluteUris_MOST_POPULAR_SCHEMES_BY_EXTENSION
		{
			get
			{
				return this._DisallowedAbsoluteUris_MOST_POPULAR_SCHEMES_BY_EXTENSION.Entity;
			}
			set
			{
				DisallowedAbsoluteUris_MOST_POPULAR_SCHEMES_BY_EXTENSION previousValue = this._DisallowedAbsoluteUris_MOST_POPULAR_SCHEMES_BY_EXTENSION.Entity;
				if (((previousValue != value) 
							|| (this._DisallowedAbsoluteUris_MOST_POPULAR_SCHEMES_BY_EXTENSION.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DisallowedAbsoluteUris_MOST_POPULAR_SCHEMES_BY_EXTENSION.Entity = null;
						previousValue.Scheme = null;
					}
					this._DisallowedAbsoluteUris_MOST_POPULAR_SCHEMES_BY_EXTENSION.Entity = value;
					if ((value != null))
					{
						value.Scheme = this;
					}
					this.SendPropertyChanged("DisallowedAbsoluteUris_MOST_POPULAR_SCHEMES_BY_EXTENSION");
				}
			}
		}
		
		[Association(Name="Scheme_DisallowedAbsoluteUris_MOST_POPULAR_SCHEMES_BY_HOST", Storage="_DisallowedAbsoluteUris_MOST_POPULAR_SCHEMES_BY_HOST", ThisKey="ID", OtherKey="SchemeID", IsUnique=true, IsForeignKey=false)]
		public DisallowedAbsoluteUris_MOST_POPULAR_SCHEMES_BY_HOST DisallowedAbsoluteUris_MOST_POPULAR_SCHEMES_BY_HOST
		{
			get
			{
				return this._DisallowedAbsoluteUris_MOST_POPULAR_SCHEMES_BY_HOST.Entity;
			}
			set
			{
				DisallowedAbsoluteUris_MOST_POPULAR_SCHEMES_BY_HOST previousValue = this._DisallowedAbsoluteUris_MOST_POPULAR_SCHEMES_BY_HOST.Entity;
				if (((previousValue != value) 
							|| (this._DisallowedAbsoluteUris_MOST_POPULAR_SCHEMES_BY_HOST.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DisallowedAbsoluteUris_MOST_POPULAR_SCHEMES_BY_HOST.Entity = null;
						previousValue.Scheme = null;
					}
					this._DisallowedAbsoluteUris_MOST_POPULAR_SCHEMES_BY_HOST.Entity = value;
					if ((value != null))
					{
						value.Scheme = this;
					}
					this.SendPropertyChanged("DisallowedAbsoluteUris_MOST_POPULAR_SCHEMES_BY_HOST");
				}
			}
		}
		
		[Association(Name="Scheme_DisallowedAbsoluteUris_MOST_POPULAR_SCHEMES_BY_SCHEME", Storage="_DisallowedAbsoluteUris_MOST_POPULAR_SCHEMES_BY_SCHEME", ThisKey="ID", OtherKey="SchemeID", IsUnique=true, IsForeignKey=false)]
		public DisallowedAbsoluteUris_MOST_POPULAR_SCHEMES_BY_SCHEME DisallowedAbsoluteUris_MOST_POPULAR_SCHEMES_BY_SCHEME
		{
			get
			{
				return this._DisallowedAbsoluteUris_MOST_POPULAR_SCHEMES_BY_SCHEME.Entity;
			}
			set
			{
				DisallowedAbsoluteUris_MOST_POPULAR_SCHEMES_BY_SCHEME previousValue = this._DisallowedAbsoluteUris_MOST_POPULAR_SCHEMES_BY_SCHEME.Entity;
				if (((previousValue != value) 
							|| (this._DisallowedAbsoluteUris_MOST_POPULAR_SCHEMES_BY_SCHEME.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DisallowedAbsoluteUris_MOST_POPULAR_SCHEMES_BY_SCHEME.Entity = null;
						previousValue.Scheme = null;
					}
					this._DisallowedAbsoluteUris_MOST_POPULAR_SCHEMES_BY_SCHEME.Entity = value;
					if ((value != null))
					{
						value.Scheme = this;
					}
					this.SendPropertyChanged("DisallowedAbsoluteUris_MOST_POPULAR_SCHEMES_BY_SCHEME");
				}
			}
		}
		
		[Association(Name="Scheme_EmailAddresses_COUNT_BY_SCHEME", Storage="_EmailAddresses_COUNT_BY_SCHEME", ThisKey="ID", OtherKey="SchemeID", IsUnique=true, IsForeignKey=false)]
		public EmailAddresses_COUNT_BY_SCHEME EmailAddresses_COUNT_BY_SCHEME
		{
			get
			{
				return this._EmailAddresses_COUNT_BY_SCHEME.Entity;
			}
			set
			{
				EmailAddresses_COUNT_BY_SCHEME previousValue = this._EmailAddresses_COUNT_BY_SCHEME.Entity;
				if (((previousValue != value) 
							|| (this._EmailAddresses_COUNT_BY_SCHEME.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._EmailAddresses_COUNT_BY_SCHEME.Entity = null;
						previousValue.Scheme = null;
					}
					this._EmailAddresses_COUNT_BY_SCHEME.Entity = value;
					if ((value != null))
					{
						value.Scheme = this;
					}
					this.SendPropertyChanged("EmailAddresses_COUNT_BY_SCHEME");
				}
			}
		}
		
		[Association(Name="Scheme_EmailAddresses_MOST_POPULAR_SCHEMES_BY_ABSOLUTEURI", Storage="_EmailAddresses_MOST_POPULAR_SCHEMES_BY_ABSOLUTEURI", ThisKey="ID", OtherKey="SchemeID", IsUnique=true, IsForeignKey=false)]
		public EmailAddresses_MOST_POPULAR_SCHEMES_BY_ABSOLUTEURI EmailAddresses_MOST_POPULAR_SCHEMES_BY_ABSOLUTEURI
		{
			get
			{
				return this._EmailAddresses_MOST_POPULAR_SCHEMES_BY_ABSOLUTEURI.Entity;
			}
			set
			{
				EmailAddresses_MOST_POPULAR_SCHEMES_BY_ABSOLUTEURI previousValue = this._EmailAddresses_MOST_POPULAR_SCHEMES_BY_ABSOLUTEURI.Entity;
				if (((previousValue != value) 
							|| (this._EmailAddresses_MOST_POPULAR_SCHEMES_BY_ABSOLUTEURI.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._EmailAddresses_MOST_POPULAR_SCHEMES_BY_ABSOLUTEURI.Entity = null;
						previousValue.Scheme = null;
					}
					this._EmailAddresses_MOST_POPULAR_SCHEMES_BY_ABSOLUTEURI.Entity = value;
					if ((value != null))
					{
						value.Scheme = this;
					}
					this.SendPropertyChanged("EmailAddresses_MOST_POPULAR_SCHEMES_BY_ABSOLUTEURI");
				}
			}
		}
		
		[Association(Name="Scheme_EmailAddresses_MOST_POPULAR_SCHEMES_BY_DOMAIN", Storage="_EmailAddresses_MOST_POPULAR_SCHEMES_BY_DOMAIN", ThisKey="ID", OtherKey="SchemeID", IsUnique=true, IsForeignKey=false)]
		public EmailAddresses_MOST_POPULAR_SCHEMES_BY_DOMAIN EmailAddresses_MOST_POPULAR_SCHEMES_BY_DOMAIN
		{
			get
			{
				return this._EmailAddresses_MOST_POPULAR_SCHEMES_BY_DOMAIN.Entity;
			}
			set
			{
				EmailAddresses_MOST_POPULAR_SCHEMES_BY_DOMAIN previousValue = this._EmailAddresses_MOST_POPULAR_SCHEMES_BY_DOMAIN.Entity;
				if (((previousValue != value) 
							|| (this._EmailAddresses_MOST_POPULAR_SCHEMES_BY_DOMAIN.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._EmailAddresses_MOST_POPULAR_SCHEMES_BY_DOMAIN.Entity = null;
						previousValue.Scheme = null;
					}
					this._EmailAddresses_MOST_POPULAR_SCHEMES_BY_DOMAIN.Entity = value;
					if ((value != null))
					{
						value.Scheme = this;
					}
					this.SendPropertyChanged("EmailAddresses_MOST_POPULAR_SCHEMES_BY_DOMAIN");
				}
			}
		}
		
		[Association(Name="Scheme_EmailAddresses_MOST_POPULAR_SCHEMES_BY_EXTENSION", Storage="_EmailAddresses_MOST_POPULAR_SCHEMES_BY_EXTENSION", ThisKey="ID", OtherKey="SchemeID", IsUnique=true, IsForeignKey=false)]
		public EmailAddresses_MOST_POPULAR_SCHEMES_BY_EXTENSION EmailAddresses_MOST_POPULAR_SCHEMES_BY_EXTENSION
		{
			get
			{
				return this._EmailAddresses_MOST_POPULAR_SCHEMES_BY_EXTENSION.Entity;
			}
			set
			{
				EmailAddresses_MOST_POPULAR_SCHEMES_BY_EXTENSION previousValue = this._EmailAddresses_MOST_POPULAR_SCHEMES_BY_EXTENSION.Entity;
				if (((previousValue != value) 
							|| (this._EmailAddresses_MOST_POPULAR_SCHEMES_BY_EXTENSION.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._EmailAddresses_MOST_POPULAR_SCHEMES_BY_EXTENSION.Entity = null;
						previousValue.Scheme = null;
					}
					this._EmailAddresses_MOST_POPULAR_SCHEMES_BY_EXTENSION.Entity = value;
					if ((value != null))
					{
						value.Scheme = this;
					}
					this.SendPropertyChanged("EmailAddresses_MOST_POPULAR_SCHEMES_BY_EXTENSION");
				}
			}
		}
		
		[Association(Name="Scheme_EmailAddresses_MOST_POPULAR_SCHEMES_BY_HOST", Storage="_EmailAddresses_MOST_POPULAR_SCHEMES_BY_HOST", ThisKey="ID", OtherKey="SchemeID", IsUnique=true, IsForeignKey=false)]
		public EmailAddresses_MOST_POPULAR_SCHEMES_BY_HOST EmailAddresses_MOST_POPULAR_SCHEMES_BY_HOST
		{
			get
			{
				return this._EmailAddresses_MOST_POPULAR_SCHEMES_BY_HOST.Entity;
			}
			set
			{
				EmailAddresses_MOST_POPULAR_SCHEMES_BY_HOST previousValue = this._EmailAddresses_MOST_POPULAR_SCHEMES_BY_HOST.Entity;
				if (((previousValue != value) 
							|| (this._EmailAddresses_MOST_POPULAR_SCHEMES_BY_HOST.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._EmailAddresses_MOST_POPULAR_SCHEMES_BY_HOST.Entity = null;
						previousValue.Scheme = null;
					}
					this._EmailAddresses_MOST_POPULAR_SCHEMES_BY_HOST.Entity = value;
					if ((value != null))
					{
						value.Scheme = this;
					}
					this.SendPropertyChanged("EmailAddresses_MOST_POPULAR_SCHEMES_BY_HOST");
				}
			}
		}
		
		[Association(Name="Scheme_EmailAddresses_MOST_POPULAR_SCHEMES_BY_SCHEME", Storage="_EmailAddresses_MOST_POPULAR_SCHEMES_BY_SCHEME", ThisKey="ID", OtherKey="SchemeID", IsUnique=true, IsForeignKey=false)]
		public EmailAddresses_MOST_POPULAR_SCHEMES_BY_SCHEME EmailAddresses_MOST_POPULAR_SCHEMES_BY_SCHEME
		{
			get
			{
				return this._EmailAddresses_MOST_POPULAR_SCHEMES_BY_SCHEME.Entity;
			}
			set
			{
				EmailAddresses_MOST_POPULAR_SCHEMES_BY_SCHEME previousValue = this._EmailAddresses_MOST_POPULAR_SCHEMES_BY_SCHEME.Entity;
				if (((previousValue != value) 
							|| (this._EmailAddresses_MOST_POPULAR_SCHEMES_BY_SCHEME.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._EmailAddresses_MOST_POPULAR_SCHEMES_BY_SCHEME.Entity = null;
						previousValue.Scheme = null;
					}
					this._EmailAddresses_MOST_POPULAR_SCHEMES_BY_SCHEME.Entity = value;
					if ((value != null))
					{
						value.Scheme = this;
					}
					this.SendPropertyChanged("EmailAddresses_MOST_POPULAR_SCHEMES_BY_SCHEME");
				}
			}
		}
		
		[Association(Name="Scheme_Exceptions_COUNT_BY_SCHEME1", Storage="_Exceptions_COUNT_BY_SCHEME1", ThisKey="Scheme1", OtherKey="Scheme1", IsUnique=true, IsForeignKey=false)]
		public Exceptions_COUNT_BY_SCHEME1 Exceptions_COUNT_BY_SCHEME1
		{
			get
			{
				return this._Exceptions_COUNT_BY_SCHEME1.Entity;
			}
			set
			{
				Exceptions_COUNT_BY_SCHEME1 previousValue = this._Exceptions_COUNT_BY_SCHEME1.Entity;
				if (((previousValue != value) 
							|| (this._Exceptions_COUNT_BY_SCHEME1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Exceptions_COUNT_BY_SCHEME1.Entity = null;
						previousValue.Scheme = null;
					}
					this._Exceptions_COUNT_BY_SCHEME1.Entity = value;
					if ((value != null))
					{
						value.Scheme = this;
					}
					this.SendPropertyChanged("Exceptions_COUNT_BY_SCHEME1");
				}
			}
		}
		
		[Association(Name="Scheme_Exceptions_COUNT_BY_SCHEME2", Storage="_Exceptions_COUNT_BY_SCHEME2", ThisKey="Scheme1", OtherKey="Scheme2", IsUnique=true, IsForeignKey=false)]
		public Exceptions_COUNT_BY_SCHEME2 Exceptions_COUNT_BY_SCHEME2
		{
			get
			{
				return this._Exceptions_COUNT_BY_SCHEME2.Entity;
			}
			set
			{
				Exceptions_COUNT_BY_SCHEME2 previousValue = this._Exceptions_COUNT_BY_SCHEME2.Entity;
				if (((previousValue != value) 
							|| (this._Exceptions_COUNT_BY_SCHEME2.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Exceptions_COUNT_BY_SCHEME2.Entity = null;
						previousValue.Scheme = null;
					}
					this._Exceptions_COUNT_BY_SCHEME2.Entity = value;
					if ((value != null))
					{
						value.Scheme = this;
					}
					this.SendPropertyChanged("Exceptions_COUNT_BY_SCHEME2");
				}
			}
		}
		
		[Association(Name="Scheme_Files_COUNT_BY_SCHEME", Storage="_Files_COUNT_BY_SCHEME", ThisKey="ID", OtherKey="SchemeID", IsUnique=true, IsForeignKey=false)]
		public Files_COUNT_BY_SCHEME Files_COUNT_BY_SCHEME
		{
			get
			{
				return this._Files_COUNT_BY_SCHEME.Entity;
			}
			set
			{
				Files_COUNT_BY_SCHEME previousValue = this._Files_COUNT_BY_SCHEME.Entity;
				if (((previousValue != value) 
							|| (this._Files_COUNT_BY_SCHEME.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Files_COUNT_BY_SCHEME.Entity = null;
						previousValue.Scheme = null;
					}
					this._Files_COUNT_BY_SCHEME.Entity = value;
					if ((value != null))
					{
						value.Scheme = this;
					}
					this.SendPropertyChanged("Files_COUNT_BY_SCHEME");
				}
			}
		}
		
		[Association(Name="Scheme_Files_MOST_POPULAR_SCHEMES_BY_ABSOLUTEURI", Storage="_Files_MOST_POPULAR_SCHEMES_BY_ABSOLUTEURI", ThisKey="ID", OtherKey="SchemeID", IsUnique=true, IsForeignKey=false)]
		public Files_MOST_POPULAR_SCHEMES_BY_ABSOLUTEURI Files_MOST_POPULAR_SCHEMES_BY_ABSOLUTEURI
		{
			get
			{
				return this._Files_MOST_POPULAR_SCHEMES_BY_ABSOLUTEURI.Entity;
			}
			set
			{
				Files_MOST_POPULAR_SCHEMES_BY_ABSOLUTEURI previousValue = this._Files_MOST_POPULAR_SCHEMES_BY_ABSOLUTEURI.Entity;
				if (((previousValue != value) 
							|| (this._Files_MOST_POPULAR_SCHEMES_BY_ABSOLUTEURI.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Files_MOST_POPULAR_SCHEMES_BY_ABSOLUTEURI.Entity = null;
						previousValue.Scheme = null;
					}
					this._Files_MOST_POPULAR_SCHEMES_BY_ABSOLUTEURI.Entity = value;
					if ((value != null))
					{
						value.Scheme = this;
					}
					this.SendPropertyChanged("Files_MOST_POPULAR_SCHEMES_BY_ABSOLUTEURI");
				}
			}
		}
		
		[Association(Name="Scheme_Files_MOST_POPULAR_SCHEMES_BY_DOMAIN", Storage="_Files_MOST_POPULAR_SCHEMES_BY_DOMAIN", ThisKey="ID", OtherKey="SchemeID", IsUnique=true, IsForeignKey=false)]
		public Files_MOST_POPULAR_SCHEMES_BY_DOMAIN Files_MOST_POPULAR_SCHEMES_BY_DOMAIN
		{
			get
			{
				return this._Files_MOST_POPULAR_SCHEMES_BY_DOMAIN.Entity;
			}
			set
			{
				Files_MOST_POPULAR_SCHEMES_BY_DOMAIN previousValue = this._Files_MOST_POPULAR_SCHEMES_BY_DOMAIN.Entity;
				if (((previousValue != value) 
							|| (this._Files_MOST_POPULAR_SCHEMES_BY_DOMAIN.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Files_MOST_POPULAR_SCHEMES_BY_DOMAIN.Entity = null;
						previousValue.Scheme = null;
					}
					this._Files_MOST_POPULAR_SCHEMES_BY_DOMAIN.Entity = value;
					if ((value != null))
					{
						value.Scheme = this;
					}
					this.SendPropertyChanged("Files_MOST_POPULAR_SCHEMES_BY_DOMAIN");
				}
			}
		}
		
		[Association(Name="Scheme_Files_MOST_POPULAR_SCHEMES_BY_EXTENSION", Storage="_Files_MOST_POPULAR_SCHEMES_BY_EXTENSION", ThisKey="ID", OtherKey="SchemeID", IsUnique=true, IsForeignKey=false)]
		public Files_MOST_POPULAR_SCHEMES_BY_EXTENSION Files_MOST_POPULAR_SCHEMES_BY_EXTENSION
		{
			get
			{
				return this._Files_MOST_POPULAR_SCHEMES_BY_EXTENSION.Entity;
			}
			set
			{
				Files_MOST_POPULAR_SCHEMES_BY_EXTENSION previousValue = this._Files_MOST_POPULAR_SCHEMES_BY_EXTENSION.Entity;
				if (((previousValue != value) 
							|| (this._Files_MOST_POPULAR_SCHEMES_BY_EXTENSION.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Files_MOST_POPULAR_SCHEMES_BY_EXTENSION.Entity = null;
						previousValue.Scheme = null;
					}
					this._Files_MOST_POPULAR_SCHEMES_BY_EXTENSION.Entity = value;
					if ((value != null))
					{
						value.Scheme = this;
					}
					this.SendPropertyChanged("Files_MOST_POPULAR_SCHEMES_BY_EXTENSION");
				}
			}
		}
		
		[Association(Name="Scheme_Files_MOST_POPULAR_SCHEMES_BY_HOST", Storage="_Files_MOST_POPULAR_SCHEMES_BY_HOST", ThisKey="ID", OtherKey="SchemeID", IsUnique=true, IsForeignKey=false)]
		public Files_MOST_POPULAR_SCHEMES_BY_HOST Files_MOST_POPULAR_SCHEMES_BY_HOST
		{
			get
			{
				return this._Files_MOST_POPULAR_SCHEMES_BY_HOST.Entity;
			}
			set
			{
				Files_MOST_POPULAR_SCHEMES_BY_HOST previousValue = this._Files_MOST_POPULAR_SCHEMES_BY_HOST.Entity;
				if (((previousValue != value) 
							|| (this._Files_MOST_POPULAR_SCHEMES_BY_HOST.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Files_MOST_POPULAR_SCHEMES_BY_HOST.Entity = null;
						previousValue.Scheme = null;
					}
					this._Files_MOST_POPULAR_SCHEMES_BY_HOST.Entity = value;
					if ((value != null))
					{
						value.Scheme = this;
					}
					this.SendPropertyChanged("Files_MOST_POPULAR_SCHEMES_BY_HOST");
				}
			}
		}
		
		[Association(Name="Scheme_Files_MOST_POPULAR_SCHEMES_BY_SCHEME", Storage="_Files_MOST_POPULAR_SCHEMES_BY_SCHEME", ThisKey="ID", OtherKey="SchemeID", IsUnique=true, IsForeignKey=false)]
		public Files_MOST_POPULAR_SCHEMES_BY_SCHEME Files_MOST_POPULAR_SCHEMES_BY_SCHEME
		{
			get
			{
				return this._Files_MOST_POPULAR_SCHEMES_BY_SCHEME.Entity;
			}
			set
			{
				Files_MOST_POPULAR_SCHEMES_BY_SCHEME previousValue = this._Files_MOST_POPULAR_SCHEMES_BY_SCHEME.Entity;
				if (((previousValue != value) 
							|| (this._Files_MOST_POPULAR_SCHEMES_BY_SCHEME.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Files_MOST_POPULAR_SCHEMES_BY_SCHEME.Entity = null;
						previousValue.Scheme = null;
					}
					this._Files_MOST_POPULAR_SCHEMES_BY_SCHEME.Entity = value;
					if ((value != null))
					{
						value.Scheme = this;
					}
					this.SendPropertyChanged("Files_MOST_POPULAR_SCHEMES_BY_SCHEME");
				}
			}
		}
		
		[Association(Name="Scheme_HyperLinks_COUNT_BY_SCHEME", Storage="_HyperLinks_COUNT_BY_SCHEME", ThisKey="ID", OtherKey="SchemeID", IsUnique=true, IsForeignKey=false)]
		public HyperLinks_COUNT_BY_SCHEME HyperLinks_COUNT_BY_SCHEME
		{
			get
			{
				return this._HyperLinks_COUNT_BY_SCHEME.Entity;
			}
			set
			{
				HyperLinks_COUNT_BY_SCHEME previousValue = this._HyperLinks_COUNT_BY_SCHEME.Entity;
				if (((previousValue != value) 
							|| (this._HyperLinks_COUNT_BY_SCHEME.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._HyperLinks_COUNT_BY_SCHEME.Entity = null;
						previousValue.Scheme = null;
					}
					this._HyperLinks_COUNT_BY_SCHEME.Entity = value;
					if ((value != null))
					{
						value.Scheme = this;
					}
					this.SendPropertyChanged("HyperLinks_COUNT_BY_SCHEME");
				}
			}
		}
		
		[Association(Name="Scheme_HyperLinks_MOST_POPULAR_SCHEMES_BY_ABSOLUTEURI", Storage="_HyperLinks_MOST_POPULAR_SCHEMES_BY_ABSOLUTEURI", ThisKey="ID", OtherKey="SchemeID", IsUnique=true, IsForeignKey=false)]
		public HyperLinks_MOST_POPULAR_SCHEMES_BY_ABSOLUTEURI HyperLinks_MOST_POPULAR_SCHEMES_BY_ABSOLUTEURI
		{
			get
			{
				return this._HyperLinks_MOST_POPULAR_SCHEMES_BY_ABSOLUTEURI.Entity;
			}
			set
			{
				HyperLinks_MOST_POPULAR_SCHEMES_BY_ABSOLUTEURI previousValue = this._HyperLinks_MOST_POPULAR_SCHEMES_BY_ABSOLUTEURI.Entity;
				if (((previousValue != value) 
							|| (this._HyperLinks_MOST_POPULAR_SCHEMES_BY_ABSOLUTEURI.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._HyperLinks_MOST_POPULAR_SCHEMES_BY_ABSOLUTEURI.Entity = null;
						previousValue.Scheme = null;
					}
					this._HyperLinks_MOST_POPULAR_SCHEMES_BY_ABSOLUTEURI.Entity = value;
					if ((value != null))
					{
						value.Scheme = this;
					}
					this.SendPropertyChanged("HyperLinks_MOST_POPULAR_SCHEMES_BY_ABSOLUTEURI");
				}
			}
		}
		
		[Association(Name="Scheme_HyperLinks_MOST_POPULAR_SCHEMES_BY_DOMAIN", Storage="_HyperLinks_MOST_POPULAR_SCHEMES_BY_DOMAIN", ThisKey="ID", OtherKey="SchemeID", IsUnique=true, IsForeignKey=false)]
		public HyperLinks_MOST_POPULAR_SCHEMES_BY_DOMAIN HyperLinks_MOST_POPULAR_SCHEMES_BY_DOMAIN
		{
			get
			{
				return this._HyperLinks_MOST_POPULAR_SCHEMES_BY_DOMAIN.Entity;
			}
			set
			{
				HyperLinks_MOST_POPULAR_SCHEMES_BY_DOMAIN previousValue = this._HyperLinks_MOST_POPULAR_SCHEMES_BY_DOMAIN.Entity;
				if (((previousValue != value) 
							|| (this._HyperLinks_MOST_POPULAR_SCHEMES_BY_DOMAIN.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._HyperLinks_MOST_POPULAR_SCHEMES_BY_DOMAIN.Entity = null;
						previousValue.Scheme = null;
					}
					this._HyperLinks_MOST_POPULAR_SCHEMES_BY_DOMAIN.Entity = value;
					if ((value != null))
					{
						value.Scheme = this;
					}
					this.SendPropertyChanged("HyperLinks_MOST_POPULAR_SCHEMES_BY_DOMAIN");
				}
			}
		}
		
		[Association(Name="Scheme_HyperLinks_MOST_POPULAR_SCHEMES_BY_EXTENSION", Storage="_HyperLinks_MOST_POPULAR_SCHEMES_BY_EXTENSION", ThisKey="ID", OtherKey="SchemeID", IsUnique=true, IsForeignKey=false)]
		public HyperLinks_MOST_POPULAR_SCHEMES_BY_EXTENSION HyperLinks_MOST_POPULAR_SCHEMES_BY_EXTENSION
		{
			get
			{
				return this._HyperLinks_MOST_POPULAR_SCHEMES_BY_EXTENSION.Entity;
			}
			set
			{
				HyperLinks_MOST_POPULAR_SCHEMES_BY_EXTENSION previousValue = this._HyperLinks_MOST_POPULAR_SCHEMES_BY_EXTENSION.Entity;
				if (((previousValue != value) 
							|| (this._HyperLinks_MOST_POPULAR_SCHEMES_BY_EXTENSION.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._HyperLinks_MOST_POPULAR_SCHEMES_BY_EXTENSION.Entity = null;
						previousValue.Scheme = null;
					}
					this._HyperLinks_MOST_POPULAR_SCHEMES_BY_EXTENSION.Entity = value;
					if ((value != null))
					{
						value.Scheme = this;
					}
					this.SendPropertyChanged("HyperLinks_MOST_POPULAR_SCHEMES_BY_EXTENSION");
				}
			}
		}
		
		[Association(Name="Scheme_HyperLinks_MOST_POPULAR_SCHEMES_BY_HOST", Storage="_HyperLinks_MOST_POPULAR_SCHEMES_BY_HOST", ThisKey="ID", OtherKey="SchemeID", IsUnique=true, IsForeignKey=false)]
		public HyperLinks_MOST_POPULAR_SCHEMES_BY_HOST HyperLinks_MOST_POPULAR_SCHEMES_BY_HOST
		{
			get
			{
				return this._HyperLinks_MOST_POPULAR_SCHEMES_BY_HOST.Entity;
			}
			set
			{
				HyperLinks_MOST_POPULAR_SCHEMES_BY_HOST previousValue = this._HyperLinks_MOST_POPULAR_SCHEMES_BY_HOST.Entity;
				if (((previousValue != value) 
							|| (this._HyperLinks_MOST_POPULAR_SCHEMES_BY_HOST.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._HyperLinks_MOST_POPULAR_SCHEMES_BY_HOST.Entity = null;
						previousValue.Scheme = null;
					}
					this._HyperLinks_MOST_POPULAR_SCHEMES_BY_HOST.Entity = value;
					if ((value != null))
					{
						value.Scheme = this;
					}
					this.SendPropertyChanged("HyperLinks_MOST_POPULAR_SCHEMES_BY_HOST");
				}
			}
		}
		
		[Association(Name="Scheme_HyperLinks_MOST_POPULAR_SCHEMES_BY_SCHEME", Storage="_HyperLinks_MOST_POPULAR_SCHEMES_BY_SCHEME", ThisKey="ID", OtherKey="SchemeID", IsUnique=true, IsForeignKey=false)]
		public HyperLinks_MOST_POPULAR_SCHEMES_BY_SCHEME HyperLinks_MOST_POPULAR_SCHEMES_BY_SCHEME
		{
			get
			{
				return this._HyperLinks_MOST_POPULAR_SCHEMES_BY_SCHEME.Entity;
			}
			set
			{
				HyperLinks_MOST_POPULAR_SCHEMES_BY_SCHEME previousValue = this._HyperLinks_MOST_POPULAR_SCHEMES_BY_SCHEME.Entity;
				if (((previousValue != value) 
							|| (this._HyperLinks_MOST_POPULAR_SCHEMES_BY_SCHEME.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._HyperLinks_MOST_POPULAR_SCHEMES_BY_SCHEME.Entity = null;
						previousValue.Scheme = null;
					}
					this._HyperLinks_MOST_POPULAR_SCHEMES_BY_SCHEME.Entity = value;
					if ((value != null))
					{
						value.Scheme = this;
					}
					this.SendPropertyChanged("HyperLinks_MOST_POPULAR_SCHEMES_BY_SCHEME");
				}
			}
		}
		
		[Association(Name="Scheme_Images_COUNT_BY_SCHEME", Storage="_Images_COUNT_BY_SCHEME", ThisKey="ID", OtherKey="SchemeID", IsUnique=true, IsForeignKey=false)]
		public Images_COUNT_BY_SCHEME Images_COUNT_BY_SCHEME
		{
			get
			{
				return this._Images_COUNT_BY_SCHEME.Entity;
			}
			set
			{
				Images_COUNT_BY_SCHEME previousValue = this._Images_COUNT_BY_SCHEME.Entity;
				if (((previousValue != value) 
							|| (this._Images_COUNT_BY_SCHEME.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Images_COUNT_BY_SCHEME.Entity = null;
						previousValue.Scheme = null;
					}
					this._Images_COUNT_BY_SCHEME.Entity = value;
					if ((value != null))
					{
						value.Scheme = this;
					}
					this.SendPropertyChanged("Images_COUNT_BY_SCHEME");
				}
			}
		}
		
		[Association(Name="Scheme_Images_MOST_POPULAR_SCHEMES_BY_ABSOLUTEURI", Storage="_Images_MOST_POPULAR_SCHEMES_BY_ABSOLUTEURI", ThisKey="ID", OtherKey="SchemeID", IsUnique=true, IsForeignKey=false)]
		public Images_MOST_POPULAR_SCHEMES_BY_ABSOLUTEURI Images_MOST_POPULAR_SCHEMES_BY_ABSOLUTEURI
		{
			get
			{
				return this._Images_MOST_POPULAR_SCHEMES_BY_ABSOLUTEURI.Entity;
			}
			set
			{
				Images_MOST_POPULAR_SCHEMES_BY_ABSOLUTEURI previousValue = this._Images_MOST_POPULAR_SCHEMES_BY_ABSOLUTEURI.Entity;
				if (((previousValue != value) 
							|| (this._Images_MOST_POPULAR_SCHEMES_BY_ABSOLUTEURI.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Images_MOST_POPULAR_SCHEMES_BY_ABSOLUTEURI.Entity = null;
						previousValue.Scheme = null;
					}
					this._Images_MOST_POPULAR_SCHEMES_BY_ABSOLUTEURI.Entity = value;
					if ((value != null))
					{
						value.Scheme = this;
					}
					this.SendPropertyChanged("Images_MOST_POPULAR_SCHEMES_BY_ABSOLUTEURI");
				}
			}
		}
		
		[Association(Name="Scheme_Images_MOST_POPULAR_SCHEMES_BY_DOMAIN", Storage="_Images_MOST_POPULAR_SCHEMES_BY_DOMAIN", ThisKey="ID", OtherKey="SchemeID", IsUnique=true, IsForeignKey=false)]
		public Images_MOST_POPULAR_SCHEMES_BY_DOMAIN Images_MOST_POPULAR_SCHEMES_BY_DOMAIN
		{
			get
			{
				return this._Images_MOST_POPULAR_SCHEMES_BY_DOMAIN.Entity;
			}
			set
			{
				Images_MOST_POPULAR_SCHEMES_BY_DOMAIN previousValue = this._Images_MOST_POPULAR_SCHEMES_BY_DOMAIN.Entity;
				if (((previousValue != value) 
							|| (this._Images_MOST_POPULAR_SCHEMES_BY_DOMAIN.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Images_MOST_POPULAR_SCHEMES_BY_DOMAIN.Entity = null;
						previousValue.Scheme = null;
					}
					this._Images_MOST_POPULAR_SCHEMES_BY_DOMAIN.Entity = value;
					if ((value != null))
					{
						value.Scheme = this;
					}
					this.SendPropertyChanged("Images_MOST_POPULAR_SCHEMES_BY_DOMAIN");
				}
			}
		}
		
		[Association(Name="Scheme_Images_MOST_POPULAR_SCHEMES_BY_EXTENSION", Storage="_Images_MOST_POPULAR_SCHEMES_BY_EXTENSION", ThisKey="ID", OtherKey="SchemeID", IsUnique=true, IsForeignKey=false)]
		public Images_MOST_POPULAR_SCHEMES_BY_EXTENSION Images_MOST_POPULAR_SCHEMES_BY_EXTENSION
		{
			get
			{
				return this._Images_MOST_POPULAR_SCHEMES_BY_EXTENSION.Entity;
			}
			set
			{
				Images_MOST_POPULAR_SCHEMES_BY_EXTENSION previousValue = this._Images_MOST_POPULAR_SCHEMES_BY_EXTENSION.Entity;
				if (((previousValue != value) 
							|| (this._Images_MOST_POPULAR_SCHEMES_BY_EXTENSION.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Images_MOST_POPULAR_SCHEMES_BY_EXTENSION.Entity = null;
						previousValue.Scheme = null;
					}
					this._Images_MOST_POPULAR_SCHEMES_BY_EXTENSION.Entity = value;
					if ((value != null))
					{
						value.Scheme = this;
					}
					this.SendPropertyChanged("Images_MOST_POPULAR_SCHEMES_BY_EXTENSION");
				}
			}
		}
		
		[Association(Name="Scheme_Images_MOST_POPULAR_SCHEMES_BY_HOST", Storage="_Images_MOST_POPULAR_SCHEMES_BY_HOST", ThisKey="ID", OtherKey="SchemeID", IsUnique=true, IsForeignKey=false)]
		public Images_MOST_POPULAR_SCHEMES_BY_HOST Images_MOST_POPULAR_SCHEMES_BY_HOST
		{
			get
			{
				return this._Images_MOST_POPULAR_SCHEMES_BY_HOST.Entity;
			}
			set
			{
				Images_MOST_POPULAR_SCHEMES_BY_HOST previousValue = this._Images_MOST_POPULAR_SCHEMES_BY_HOST.Entity;
				if (((previousValue != value) 
							|| (this._Images_MOST_POPULAR_SCHEMES_BY_HOST.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Images_MOST_POPULAR_SCHEMES_BY_HOST.Entity = null;
						previousValue.Scheme = null;
					}
					this._Images_MOST_POPULAR_SCHEMES_BY_HOST.Entity = value;
					if ((value != null))
					{
						value.Scheme = this;
					}
					this.SendPropertyChanged("Images_MOST_POPULAR_SCHEMES_BY_HOST");
				}
			}
		}
		
		[Association(Name="Scheme_Images_MOST_POPULAR_SCHEMES_BY_SCHEME", Storage="_Images_MOST_POPULAR_SCHEMES_BY_SCHEME", ThisKey="ID", OtherKey="SchemeID", IsUnique=true, IsForeignKey=false)]
		public Images_MOST_POPULAR_SCHEMES_BY_SCHEME Images_MOST_POPULAR_SCHEMES_BY_SCHEME
		{
			get
			{
				return this._Images_MOST_POPULAR_SCHEMES_BY_SCHEME.Entity;
			}
			set
			{
				Images_MOST_POPULAR_SCHEMES_BY_SCHEME previousValue = this._Images_MOST_POPULAR_SCHEMES_BY_SCHEME.Entity;
				if (((previousValue != value) 
							|| (this._Images_MOST_POPULAR_SCHEMES_BY_SCHEME.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Images_MOST_POPULAR_SCHEMES_BY_SCHEME.Entity = null;
						previousValue.Scheme = null;
					}
					this._Images_MOST_POPULAR_SCHEMES_BY_SCHEME.Entity = value;
					if ((value != null))
					{
						value.Scheme = this;
					}
					this.SendPropertyChanged("Images_MOST_POPULAR_SCHEMES_BY_SCHEME");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Schemes_Discoveries(Schemes_Discovery entity)
		{
			this.SendPropertyChanging();
			entity.Scheme = this;
		}
		
		private void detach_Schemes_Discoveries(Schemes_Discovery entity)
		{
			this.SendPropertyChanging();
			entity.Scheme = null;
		}
	}
	
	[Table(Name="dbo.Schemes_Discoveries")]
	public partial class Schemes_Discovery : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Nullable<System.DateTime> _InitiallyDiscovered;
		
		private System.Nullable<System.DateTime> _LastDiscovered;
		
		private int _ID;
		
		private byte _DiscoveryTypeID;
		
		private int _SchemeID;
		
		private EntitySet<DisallowedAbsoluteUris_Schemes_Discovery> _DisallowedAbsoluteUris_Schemes_Discoveries;
		
		private EntitySet<EmailAddresses_Schemes_Discovery> _EmailAddresses_Schemes_Discoveries;
		
		private EntitySet<Exceptions_Schemes_Discovery> _Exceptions_Schemes_Discoveries;
		
		private EntitySet<Exceptions_Schemes_Discovery> _Exceptions_Schemes_Discoveries1;
		
		private EntitySet<Files_Schemes_Discovery> _Files_Schemes_Discoveries;
		
		private EntitySet<HyperLinks_Schemes_Discovery> _HyperLinks_Schemes_Discoveries;
		
		private EntitySet<Images_Schemes_Discovery> _Images_Schemes_Discoveries;
		
		private EntitySet<WebPages_Schemes_Discovery> _WebPages_Schemes_Discoveries;
		
		private EntityRef<Scheme> _Scheme;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnInitiallyDiscoveredChanging(System.Nullable<System.DateTime> value);
    partial void OnInitiallyDiscoveredChanged();
    partial void OnLastDiscoveredChanging(System.Nullable<System.DateTime> value);
    partial void OnLastDiscoveredChanged();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnDiscoveryTypeIDChanging(byte value);
    partial void OnDiscoveryTypeIDChanged();
    partial void OnSchemeIDChanging(int value);
    partial void OnSchemeIDChanged();
    #endregion
		
		public Schemes_Discovery()
		{
			this._DisallowedAbsoluteUris_Schemes_Discoveries = new EntitySet<DisallowedAbsoluteUris_Schemes_Discovery>(new Action<DisallowedAbsoluteUris_Schemes_Discovery>(this.attach_DisallowedAbsoluteUris_Schemes_Discoveries), new Action<DisallowedAbsoluteUris_Schemes_Discovery>(this.detach_DisallowedAbsoluteUris_Schemes_Discoveries));
			this._EmailAddresses_Schemes_Discoveries = new EntitySet<EmailAddresses_Schemes_Discovery>(new Action<EmailAddresses_Schemes_Discovery>(this.attach_EmailAddresses_Schemes_Discoveries), new Action<EmailAddresses_Schemes_Discovery>(this.detach_EmailAddresses_Schemes_Discoveries));
			this._Exceptions_Schemes_Discoveries = new EntitySet<Exceptions_Schemes_Discovery>(new Action<Exceptions_Schemes_Discovery>(this.attach_Exceptions_Schemes_Discoveries), new Action<Exceptions_Schemes_Discovery>(this.detach_Exceptions_Schemes_Discoveries));
			this._Exceptions_Schemes_Discoveries1 = new EntitySet<Exceptions_Schemes_Discovery>(new Action<Exceptions_Schemes_Discovery>(this.attach_Exceptions_Schemes_Discoveries1), new Action<Exceptions_Schemes_Discovery>(this.detach_Exceptions_Schemes_Discoveries1));
			this._Files_Schemes_Discoveries = new EntitySet<Files_Schemes_Discovery>(new Action<Files_Schemes_Discovery>(this.attach_Files_Schemes_Discoveries), new Action<Files_Schemes_Discovery>(this.detach_Files_Schemes_Discoveries));
			this._HyperLinks_Schemes_Discoveries = new EntitySet<HyperLinks_Schemes_Discovery>(new Action<HyperLinks_Schemes_Discovery>(this.attach_HyperLinks_Schemes_Discoveries), new Action<HyperLinks_Schemes_Discovery>(this.detach_HyperLinks_Schemes_Discoveries));
			this._Images_Schemes_Discoveries = new EntitySet<Images_Schemes_Discovery>(new Action<Images_Schemes_Discovery>(this.attach_Images_Schemes_Discoveries), new Action<Images_Schemes_Discovery>(this.detach_Images_Schemes_Discoveries));
			this._WebPages_Schemes_Discoveries = new EntitySet<WebPages_Schemes_Discovery>(new Action<WebPages_Schemes_Discovery>(this.attach_WebPages_Schemes_Discoveries), new Action<WebPages_Schemes_Discovery>(this.detach_WebPages_Schemes_Discoveries));
			this._Scheme = default(EntityRef<Scheme>);
			OnCreated();
		}
		
		[Column(Storage="_InitiallyDiscovered", DbType="DateTime")]
		public System.Nullable<System.DateTime> InitiallyDiscovered
		{
			get
			{
				return this._InitiallyDiscovered;
			}
			set
			{
				if ((this._InitiallyDiscovered != value))
				{
					this.OnInitiallyDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._InitiallyDiscovered = value;
					this.SendPropertyChanged("InitiallyDiscovered");
					this.OnInitiallyDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_LastDiscovered", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastDiscovered
		{
			get
			{
				return this._LastDiscovered;
			}
			set
			{
				if ((this._LastDiscovered != value))
				{
					this.OnLastDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._LastDiscovered = value;
					this.SendPropertyChanged("LastDiscovered");
					this.OnLastDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[Column(Storage="_DiscoveryTypeID", DbType="TinyInt NOT NULL")]
		public byte DiscoveryTypeID
		{
			get
			{
				return this._DiscoveryTypeID;
			}
			set
			{
				if ((this._DiscoveryTypeID != value))
				{
					this.OnDiscoveryTypeIDChanging(value);
					this.SendPropertyChanging();
					this._DiscoveryTypeID = value;
					this.SendPropertyChanged("DiscoveryTypeID");
					this.OnDiscoveryTypeIDChanged();
				}
			}
		}
		
		[Column(Storage="_SchemeID", DbType="Int NOT NULL")]
		public int SchemeID
		{
			get
			{
				return this._SchemeID;
			}
			set
			{
				if ((this._SchemeID != value))
				{
					if (this._Scheme.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSchemeIDChanging(value);
					this.SendPropertyChanging();
					this._SchemeID = value;
					this.SendPropertyChanged("SchemeID");
					this.OnSchemeIDChanged();
				}
			}
		}
		
		[Association(Name="Schemes_Discovery_DisallowedAbsoluteUris_Schemes_Discovery", Storage="_DisallowedAbsoluteUris_Schemes_Discoveries", ThisKey="ID", OtherKey="Scheme_DiscoveryID")]
		public EntitySet<DisallowedAbsoluteUris_Schemes_Discovery> DisallowedAbsoluteUris_Schemes_Discoveries
		{
			get
			{
				return this._DisallowedAbsoluteUris_Schemes_Discoveries;
			}
			set
			{
				this._DisallowedAbsoluteUris_Schemes_Discoveries.Assign(value);
			}
		}
		
		[Association(Name="Schemes_Discovery_EmailAddresses_Schemes_Discovery", Storage="_EmailAddresses_Schemes_Discoveries", ThisKey="ID", OtherKey="Scheme_DiscoveryID")]
		public EntitySet<EmailAddresses_Schemes_Discovery> EmailAddresses_Schemes_Discoveries
		{
			get
			{
				return this._EmailAddresses_Schemes_Discoveries;
			}
			set
			{
				this._EmailAddresses_Schemes_Discoveries.Assign(value);
			}
		}
		
		[Association(Name="Schemes_Discovery_Exceptions_Schemes_Discovery", Storage="_Exceptions_Schemes_Discoveries", ThisKey="ID", OtherKey="Scheme_DiscoveryID1")]
		public EntitySet<Exceptions_Schemes_Discovery> Exceptions_Schemes_Discoveries
		{
			get
			{
				return this._Exceptions_Schemes_Discoveries;
			}
			set
			{
				this._Exceptions_Schemes_Discoveries.Assign(value);
			}
		}
		
		[Association(Name="Schemes_Discovery_Exceptions_Schemes_Discovery1", Storage="_Exceptions_Schemes_Discoveries1", ThisKey="ID", OtherKey="Scheme_DiscoveryID2")]
		public EntitySet<Exceptions_Schemes_Discovery> Exceptions_Schemes_Discoveries1
		{
			get
			{
				return this._Exceptions_Schemes_Discoveries1;
			}
			set
			{
				this._Exceptions_Schemes_Discoveries1.Assign(value);
			}
		}
		
		[Association(Name="Schemes_Discovery_Files_Schemes_Discovery", Storage="_Files_Schemes_Discoveries", ThisKey="ID", OtherKey="Scheme_DiscoveryID")]
		public EntitySet<Files_Schemes_Discovery> Files_Schemes_Discoveries
		{
			get
			{
				return this._Files_Schemes_Discoveries;
			}
			set
			{
				this._Files_Schemes_Discoveries.Assign(value);
			}
		}
		
		[Association(Name="Schemes_Discovery_HyperLinks_Schemes_Discovery", Storage="_HyperLinks_Schemes_Discoveries", ThisKey="ID", OtherKey="Scheme_DiscoveryID")]
		public EntitySet<HyperLinks_Schemes_Discovery> HyperLinks_Schemes_Discoveries
		{
			get
			{
				return this._HyperLinks_Schemes_Discoveries;
			}
			set
			{
				this._HyperLinks_Schemes_Discoveries.Assign(value);
			}
		}
		
		[Association(Name="Schemes_Discovery_Images_Schemes_Discovery", Storage="_Images_Schemes_Discoveries", ThisKey="ID", OtherKey="Scheme_DiscoveryID")]
		public EntitySet<Images_Schemes_Discovery> Images_Schemes_Discoveries
		{
			get
			{
				return this._Images_Schemes_Discoveries;
			}
			set
			{
				this._Images_Schemes_Discoveries.Assign(value);
			}
		}
		
		[Association(Name="Schemes_Discovery_WebPages_Schemes_Discovery", Storage="_WebPages_Schemes_Discoveries", ThisKey="ID", OtherKey="Scheme_DiscoveryID")]
		public EntitySet<WebPages_Schemes_Discovery> WebPages_Schemes_Discoveries
		{
			get
			{
				return this._WebPages_Schemes_Discoveries;
			}
			set
			{
				this._WebPages_Schemes_Discoveries.Assign(value);
			}
		}
		
		[Association(Name="Scheme_Schemes_Discovery", Storage="_Scheme", ThisKey="SchemeID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Scheme Scheme
		{
			get
			{
				return this._Scheme.Entity;
			}
			set
			{
				Scheme previousValue = this._Scheme.Entity;
				if (((previousValue != value) 
							|| (this._Scheme.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Scheme.Entity = null;
						previousValue.Schemes_Discoveries.Remove(this);
					}
					this._Scheme.Entity = value;
					if ((value != null))
					{
						value.Schemes_Discoveries.Add(this);
						this._SchemeID = value.ID;
					}
					else
					{
						this._SchemeID = default(int);
					}
					this.SendPropertyChanged("Scheme");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_DisallowedAbsoluteUris_Schemes_Discoveries(DisallowedAbsoluteUris_Schemes_Discovery entity)
		{
			this.SendPropertyChanging();
			entity.Schemes_Discovery = this;
		}
		
		private void detach_DisallowedAbsoluteUris_Schemes_Discoveries(DisallowedAbsoluteUris_Schemes_Discovery entity)
		{
			this.SendPropertyChanging();
			entity.Schemes_Discovery = null;
		}
		
		private void attach_EmailAddresses_Schemes_Discoveries(EmailAddresses_Schemes_Discovery entity)
		{
			this.SendPropertyChanging();
			entity.Schemes_Discovery = this;
		}
		
		private void detach_EmailAddresses_Schemes_Discoveries(EmailAddresses_Schemes_Discovery entity)
		{
			this.SendPropertyChanging();
			entity.Schemes_Discovery = null;
		}
		
		private void attach_Exceptions_Schemes_Discoveries(Exceptions_Schemes_Discovery entity)
		{
			this.SendPropertyChanging();
			entity.Schemes_Discovery = this;
		}
		
		private void detach_Exceptions_Schemes_Discoveries(Exceptions_Schemes_Discovery entity)
		{
			this.SendPropertyChanging();
			entity.Schemes_Discovery = null;
		}
		
		private void attach_Exceptions_Schemes_Discoveries1(Exceptions_Schemes_Discovery entity)
		{
			this.SendPropertyChanging();
			entity.Schemes_Discovery1 = this;
		}
		
		private void detach_Exceptions_Schemes_Discoveries1(Exceptions_Schemes_Discovery entity)
		{
			this.SendPropertyChanging();
			entity.Schemes_Discovery1 = null;
		}
		
		private void attach_Files_Schemes_Discoveries(Files_Schemes_Discovery entity)
		{
			this.SendPropertyChanging();
			entity.Schemes_Discovery = this;
		}
		
		private void detach_Files_Schemes_Discoveries(Files_Schemes_Discovery entity)
		{
			this.SendPropertyChanging();
			entity.Schemes_Discovery = null;
		}
		
		private void attach_HyperLinks_Schemes_Discoveries(HyperLinks_Schemes_Discovery entity)
		{
			this.SendPropertyChanging();
			entity.Schemes_Discovery = this;
		}
		
		private void detach_HyperLinks_Schemes_Discoveries(HyperLinks_Schemes_Discovery entity)
		{
			this.SendPropertyChanging();
			entity.Schemes_Discovery = null;
		}
		
		private void attach_Images_Schemes_Discoveries(Images_Schemes_Discovery entity)
		{
			this.SendPropertyChanging();
			entity.Schemes_Discovery = this;
		}
		
		private void detach_Images_Schemes_Discoveries(Images_Schemes_Discovery entity)
		{
			this.SendPropertyChanging();
			entity.Schemes_Discovery = null;
		}
		
		private void attach_WebPages_Schemes_Discoveries(WebPages_Schemes_Discovery entity)
		{
			this.SendPropertyChanging();
			entity.Schemes_Discovery = this;
		}
		
		private void detach_WebPages_Schemes_Discoveries(WebPages_Schemes_Discovery entity)
		{
			this.SendPropertyChanging();
			entity.Schemes_Discovery = null;
		}
	}
	
	[Table(Name="dbo.UriClassificationTypes")]
	public partial class UriClassificationType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private byte _ID;
		
		private string _Name;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(byte value);
    partial void OnIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    #endregion
		
		public UriClassificationType()
		{
			OnCreated();
		}
		
		[Column(Storage="_ID", DbType="TinyInt NOT NULL", IsPrimaryKey=true)]
		public byte ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[Column(Storage="_Name", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.WebPages")]
	public partial class WebPage : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.DateTime _InitiallyDiscovered;
		
		private System.DateTime _LastDiscovered;
		
		private System.Nullable<System.DateTime> _LastModified;
		
		private long _ID;
		
		private string _AbsoluteUri;
		
		private string _ResponseHeaders;
		
		private System.Data.Linq.Binary _Source;
		
		private string _FullTextIndexType;
		
		private int _CrawlDepth;
		
		private int _CodePage;
		
		private EntitySet<DisallowedAbsoluteUris_Discovery> _DisallowedAbsoluteUris_Discoveries;
		
		private EntitySet<EmailAddresses_Discovery> _EmailAddresses_Discoveries;
		
		private EntitySet<Files_Discovery> _Files_Discoveries;
		
		private EntitySet<HyperLinks_Discovery> _HyperLinks_Discoveries;
		
		private EntitySet<Images_Discovery> _Images_Discoveries;
		
		private EntityRef<WebPages_Hosts_Discovery> _WebPages_Hosts_Discovery;
		
		private EntityRef<WebPages_MetaData> _WebPages_MetaData;
		
		private EntitySet<WebPages_MetaData_TermLookup> _WebPages_MetaData_TermLookups;
		
		private EntityRef<WebPages_Schemes_Discovery> _WebPages_Schemes_Discovery;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnInitiallyDiscoveredChanging(System.DateTime value);
    partial void OnInitiallyDiscoveredChanged();
    partial void OnLastDiscoveredChanging(System.DateTime value);
    partial void OnLastDiscoveredChanged();
    partial void OnLastModifiedChanging(System.Nullable<System.DateTime> value);
    partial void OnLastModifiedChanged();
    partial void OnIDChanging(long value);
    partial void OnIDChanged();
    partial void OnAbsoluteUriChanging(string value);
    partial void OnAbsoluteUriChanged();
    partial void OnResponseHeadersChanging(string value);
    partial void OnResponseHeadersChanged();
    partial void OnSourceChanging(System.Data.Linq.Binary value);
    partial void OnSourceChanged();
    partial void OnFullTextIndexTypeChanging(string value);
    partial void OnFullTextIndexTypeChanged();
    partial void OnCrawlDepthChanging(int value);
    partial void OnCrawlDepthChanged();
    partial void OnCodePageChanging(int value);
    partial void OnCodePageChanged();
    #endregion
		
		public WebPage()
		{
			this._DisallowedAbsoluteUris_Discoveries = new EntitySet<DisallowedAbsoluteUris_Discovery>(new Action<DisallowedAbsoluteUris_Discovery>(this.attach_DisallowedAbsoluteUris_Discoveries), new Action<DisallowedAbsoluteUris_Discovery>(this.detach_DisallowedAbsoluteUris_Discoveries));
			this._EmailAddresses_Discoveries = new EntitySet<EmailAddresses_Discovery>(new Action<EmailAddresses_Discovery>(this.attach_EmailAddresses_Discoveries), new Action<EmailAddresses_Discovery>(this.detach_EmailAddresses_Discoveries));
			this._Files_Discoveries = new EntitySet<Files_Discovery>(new Action<Files_Discovery>(this.attach_Files_Discoveries), new Action<Files_Discovery>(this.detach_Files_Discoveries));
			this._HyperLinks_Discoveries = new EntitySet<HyperLinks_Discovery>(new Action<HyperLinks_Discovery>(this.attach_HyperLinks_Discoveries), new Action<HyperLinks_Discovery>(this.detach_HyperLinks_Discoveries));
			this._Images_Discoveries = new EntitySet<Images_Discovery>(new Action<Images_Discovery>(this.attach_Images_Discoveries), new Action<Images_Discovery>(this.detach_Images_Discoveries));
			this._WebPages_Hosts_Discovery = default(EntityRef<WebPages_Hosts_Discovery>);
			this._WebPages_MetaData = default(EntityRef<WebPages_MetaData>);
			this._WebPages_MetaData_TermLookups = new EntitySet<WebPages_MetaData_TermLookup>(new Action<WebPages_MetaData_TermLookup>(this.attach_WebPages_MetaData_TermLookups), new Action<WebPages_MetaData_TermLookup>(this.detach_WebPages_MetaData_TermLookups));
			this._WebPages_Schemes_Discovery = default(EntityRef<WebPages_Schemes_Discovery>);
			OnCreated();
		}
		
		[Column(Storage="_InitiallyDiscovered", DbType="DateTime NOT NULL")]
		public System.DateTime InitiallyDiscovered
		{
			get
			{
				return this._InitiallyDiscovered;
			}
			set
			{
				if ((this._InitiallyDiscovered != value))
				{
					this.OnInitiallyDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._InitiallyDiscovered = value;
					this.SendPropertyChanged("InitiallyDiscovered");
					this.OnInitiallyDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_LastDiscovered", DbType="DateTime NOT NULL")]
		public System.DateTime LastDiscovered
		{
			get
			{
				return this._LastDiscovered;
			}
			set
			{
				if ((this._LastDiscovered != value))
				{
					this.OnLastDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._LastDiscovered = value;
					this.SendPropertyChanged("LastDiscovered");
					this.OnLastDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_LastModified", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastModified
		{
			get
			{
				return this._LastModified;
			}
			set
			{
				if ((this._LastModified != value))
				{
					this.OnLastModifiedChanging(value);
					this.SendPropertyChanging();
					this._LastModified = value;
					this.SendPropertyChanged("LastModified");
					this.OnLastModifiedChanged();
				}
			}
		}
		
		[Column(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[Column(Storage="_AbsoluteUri", DbType="VarChar(884) NOT NULL", CanBeNull=false)]
		public string AbsoluteUri
		{
			get
			{
				return this._AbsoluteUri;
			}
			set
			{
				if ((this._AbsoluteUri != value))
				{
					this.OnAbsoluteUriChanging(value);
					this.SendPropertyChanging();
					this._AbsoluteUri = value;
					this.SendPropertyChanged("AbsoluteUri");
					this.OnAbsoluteUriChanged();
				}
			}
		}
		
		[Column(Storage="_ResponseHeaders", DbType="VarChar(4000)")]
		public string ResponseHeaders
		{
			get
			{
				return this._ResponseHeaders;
			}
			set
			{
				if ((this._ResponseHeaders != value))
				{
					this.OnResponseHeadersChanging(value);
					this.SendPropertyChanging();
					this._ResponseHeaders = value;
					this.SendPropertyChanged("ResponseHeaders");
					this.OnResponseHeadersChanged();
				}
			}
		}
		
		[Column(Storage="_Source", DbType="VarBinary(MAX) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary Source
		{
			get
			{
				return this._Source;
			}
			set
			{
				if ((this._Source != value))
				{
					this.OnSourceChanging(value);
					this.SendPropertyChanging();
					this._Source = value;
					this.SendPropertyChanged("Source");
					this.OnSourceChanged();
				}
			}
		}
		
		[Column(Storage="_FullTextIndexType", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string FullTextIndexType
		{
			get
			{
				return this._FullTextIndexType;
			}
			set
			{
				if ((this._FullTextIndexType != value))
				{
					this.OnFullTextIndexTypeChanging(value);
					this.SendPropertyChanging();
					this._FullTextIndexType = value;
					this.SendPropertyChanged("FullTextIndexType");
					this.OnFullTextIndexTypeChanged();
				}
			}
		}
		
		[Column(Storage="_CrawlDepth", DbType="Int NOT NULL")]
		public int CrawlDepth
		{
			get
			{
				return this._CrawlDepth;
			}
			set
			{
				if ((this._CrawlDepth != value))
				{
					this.OnCrawlDepthChanging(value);
					this.SendPropertyChanging();
					this._CrawlDepth = value;
					this.SendPropertyChanged("CrawlDepth");
					this.OnCrawlDepthChanged();
				}
			}
		}
		
		[Column(Storage="_CodePage", DbType="Int NOT NULL")]
		public int CodePage
		{
			get
			{
				return this._CodePage;
			}
			set
			{
				if ((this._CodePage != value))
				{
					this.OnCodePageChanging(value);
					this.SendPropertyChanging();
					this._CodePage = value;
					this.SendPropertyChanged("CodePage");
					this.OnCodePageChanged();
				}
			}
		}
		
		[Association(Name="WebPage_DisallowedAbsoluteUris_Discovery", Storage="_DisallowedAbsoluteUris_Discoveries", ThisKey="ID", OtherKey="WebPageID")]
		public EntitySet<DisallowedAbsoluteUris_Discovery> DisallowedAbsoluteUris_Discoveries
		{
			get
			{
				return this._DisallowedAbsoluteUris_Discoveries;
			}
			set
			{
				this._DisallowedAbsoluteUris_Discoveries.Assign(value);
			}
		}
		
		[Association(Name="WebPage_EmailAddresses_Discovery", Storage="_EmailAddresses_Discoveries", ThisKey="ID", OtherKey="WebPageID")]
		public EntitySet<EmailAddresses_Discovery> EmailAddresses_Discoveries
		{
			get
			{
				return this._EmailAddresses_Discoveries;
			}
			set
			{
				this._EmailAddresses_Discoveries.Assign(value);
			}
		}
		
		[Association(Name="WebPage_Files_Discovery", Storage="_Files_Discoveries", ThisKey="ID", OtherKey="WebPageID")]
		public EntitySet<Files_Discovery> Files_Discoveries
		{
			get
			{
				return this._Files_Discoveries;
			}
			set
			{
				this._Files_Discoveries.Assign(value);
			}
		}
		
		[Association(Name="WebPage_HyperLinks_Discovery", Storage="_HyperLinks_Discoveries", ThisKey="ID", OtherKey="WebPageID")]
		public EntitySet<HyperLinks_Discovery> HyperLinks_Discoveries
		{
			get
			{
				return this._HyperLinks_Discoveries;
			}
			set
			{
				this._HyperLinks_Discoveries.Assign(value);
			}
		}
		
		[Association(Name="WebPage_Images_Discovery", Storage="_Images_Discoveries", ThisKey="ID", OtherKey="WebPageID")]
		public EntitySet<Images_Discovery> Images_Discoveries
		{
			get
			{
				return this._Images_Discoveries;
			}
			set
			{
				this._Images_Discoveries.Assign(value);
			}
		}
		
		[Association(Name="WebPage_WebPages_Hosts_Discovery", Storage="_WebPages_Hosts_Discovery", ThisKey="ID", OtherKey="WebPageID", IsUnique=true, IsForeignKey=false)]
		public WebPages_Hosts_Discovery WebPages_Hosts_Discovery
		{
			get
			{
				return this._WebPages_Hosts_Discovery.Entity;
			}
			set
			{
				WebPages_Hosts_Discovery previousValue = this._WebPages_Hosts_Discovery.Entity;
				if (((previousValue != value) 
							|| (this._WebPages_Hosts_Discovery.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._WebPages_Hosts_Discovery.Entity = null;
						previousValue.WebPage = null;
					}
					this._WebPages_Hosts_Discovery.Entity = value;
					if ((value != null))
					{
						value.WebPage = this;
					}
					this.SendPropertyChanged("WebPages_Hosts_Discovery");
				}
			}
		}
		
		[Association(Name="WebPage_WebPages_MetaData", Storage="_WebPages_MetaData", ThisKey="ID", OtherKey="WebPageID", IsUnique=true, IsForeignKey=false)]
		public WebPages_MetaData WebPages_MetaData
		{
			get
			{
				return this._WebPages_MetaData.Entity;
			}
			set
			{
				WebPages_MetaData previousValue = this._WebPages_MetaData.Entity;
				if (((previousValue != value) 
							|| (this._WebPages_MetaData.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._WebPages_MetaData.Entity = null;
						previousValue.WebPage = null;
					}
					this._WebPages_MetaData.Entity = value;
					if ((value != null))
					{
						value.WebPage = this;
					}
					this.SendPropertyChanged("WebPages_MetaData");
				}
			}
		}
		
		[Association(Name="WebPage_WebPages_MetaData_TermLookup", Storage="_WebPages_MetaData_TermLookups", ThisKey="ID", OtherKey="WebPageID")]
		public EntitySet<WebPages_MetaData_TermLookup> WebPages_MetaData_TermLookups
		{
			get
			{
				return this._WebPages_MetaData_TermLookups;
			}
			set
			{
				this._WebPages_MetaData_TermLookups.Assign(value);
			}
		}
		
		[Association(Name="WebPage_WebPages_Schemes_Discovery", Storage="_WebPages_Schemes_Discovery", ThisKey="ID", OtherKey="WebPageID", IsUnique=true, IsForeignKey=false)]
		public WebPages_Schemes_Discovery WebPages_Schemes_Discovery
		{
			get
			{
				return this._WebPages_Schemes_Discovery.Entity;
			}
			set
			{
				WebPages_Schemes_Discovery previousValue = this._WebPages_Schemes_Discovery.Entity;
				if (((previousValue != value) 
							|| (this._WebPages_Schemes_Discovery.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._WebPages_Schemes_Discovery.Entity = null;
						previousValue.WebPage = null;
					}
					this._WebPages_Schemes_Discovery.Entity = value;
					if ((value != null))
					{
						value.WebPage = this;
					}
					this.SendPropertyChanged("WebPages_Schemes_Discovery");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_DisallowedAbsoluteUris_Discoveries(DisallowedAbsoluteUris_Discovery entity)
		{
			this.SendPropertyChanging();
			entity.WebPage = this;
		}
		
		private void detach_DisallowedAbsoluteUris_Discoveries(DisallowedAbsoluteUris_Discovery entity)
		{
			this.SendPropertyChanging();
			entity.WebPage = null;
		}
		
		private void attach_EmailAddresses_Discoveries(EmailAddresses_Discovery entity)
		{
			this.SendPropertyChanging();
			entity.WebPage = this;
		}
		
		private void detach_EmailAddresses_Discoveries(EmailAddresses_Discovery entity)
		{
			this.SendPropertyChanging();
			entity.WebPage = null;
		}
		
		private void attach_Files_Discoveries(Files_Discovery entity)
		{
			this.SendPropertyChanging();
			entity.WebPage = this;
		}
		
		private void detach_Files_Discoveries(Files_Discovery entity)
		{
			this.SendPropertyChanging();
			entity.WebPage = null;
		}
		
		private void attach_HyperLinks_Discoveries(HyperLinks_Discovery entity)
		{
			this.SendPropertyChanging();
			entity.WebPage = this;
		}
		
		private void detach_HyperLinks_Discoveries(HyperLinks_Discovery entity)
		{
			this.SendPropertyChanging();
			entity.WebPage = null;
		}
		
		private void attach_Images_Discoveries(Images_Discovery entity)
		{
			this.SendPropertyChanging();
			entity.WebPage = this;
		}
		
		private void detach_Images_Discoveries(Images_Discovery entity)
		{
			this.SendPropertyChanging();
			entity.WebPage = null;
		}
		
		private void attach_WebPages_MetaData_TermLookups(WebPages_MetaData_TermLookup entity)
		{
			this.SendPropertyChanging();
			entity.WebPage = this;
		}
		
		private void detach_WebPages_MetaData_TermLookups(WebPages_MetaData_TermLookup entity)
		{
			this.SendPropertyChanging();
			entity.WebPage = null;
		}
	}
	
	[Table(Name="dbo.WebPages_Hosts_Discoveries")]
	public partial class WebPages_Hosts_Discovery : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _WebPageID;
		
		private int _Host_DiscoveryID;
		
		private EntityRef<Hosts_Discovery> _Hosts_Discovery;
		
		private EntityRef<WebPage> _WebPage;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnWebPageIDChanging(long value);
    partial void OnWebPageIDChanged();
    partial void OnHost_DiscoveryIDChanging(int value);
    partial void OnHost_DiscoveryIDChanged();
    #endregion
		
		public WebPages_Hosts_Discovery()
		{
			this._Hosts_Discovery = default(EntityRef<Hosts_Discovery>);
			this._WebPage = default(EntityRef<WebPage>);
			OnCreated();
		}
		
		[Column(Storage="_WebPageID", DbType="BigInt NOT NULL", IsPrimaryKey=true)]
		public long WebPageID
		{
			get
			{
				return this._WebPageID;
			}
			set
			{
				if ((this._WebPageID != value))
				{
					if (this._WebPage.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnWebPageIDChanging(value);
					this.SendPropertyChanging();
					this._WebPageID = value;
					this.SendPropertyChanged("WebPageID");
					this.OnWebPageIDChanged();
				}
			}
		}
		
		[Column(Storage="_Host_DiscoveryID", DbType="Int NOT NULL")]
		public int Host_DiscoveryID
		{
			get
			{
				return this._Host_DiscoveryID;
			}
			set
			{
				if ((this._Host_DiscoveryID != value))
				{
					if (this._Hosts_Discovery.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnHost_DiscoveryIDChanging(value);
					this.SendPropertyChanging();
					this._Host_DiscoveryID = value;
					this.SendPropertyChanged("Host_DiscoveryID");
					this.OnHost_DiscoveryIDChanged();
				}
			}
		}
		
		[Association(Name="Hosts_Discovery_WebPages_Hosts_Discovery", Storage="_Hosts_Discovery", ThisKey="Host_DiscoveryID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Hosts_Discovery Hosts_Discovery
		{
			get
			{
				return this._Hosts_Discovery.Entity;
			}
			set
			{
				Hosts_Discovery previousValue = this._Hosts_Discovery.Entity;
				if (((previousValue != value) 
							|| (this._Hosts_Discovery.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Hosts_Discovery.Entity = null;
						previousValue.WebPages_Hosts_Discoveries.Remove(this);
					}
					this._Hosts_Discovery.Entity = value;
					if ((value != null))
					{
						value.WebPages_Hosts_Discoveries.Add(this);
						this._Host_DiscoveryID = value.ID;
					}
					else
					{
						this._Host_DiscoveryID = default(int);
					}
					this.SendPropertyChanged("Hosts_Discovery");
				}
			}
		}
		
		[Association(Name="WebPage_WebPages_Hosts_Discovery", Storage="_WebPage", ThisKey="WebPageID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public WebPage WebPage
		{
			get
			{
				return this._WebPage.Entity;
			}
			set
			{
				WebPage previousValue = this._WebPage.Entity;
				if (((previousValue != value) 
							|| (this._WebPage.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._WebPage.Entity = null;
						previousValue.WebPages_Hosts_Discovery = null;
					}
					this._WebPage.Entity = value;
					if ((value != null))
					{
						value.WebPages_Hosts_Discovery = this;
						this._WebPageID = value.ID;
					}
					else
					{
						this._WebPageID = default(long);
					}
					this.SendPropertyChanged("WebPage");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.WebPages_MetaData")]
	public partial class WebPages_MetaData : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _WebPageID;
		
		private System.Data.Linq.Binary _Text;
		
		private System.Xml.Linq.XElement _Xml;
		
		private string _FullTextIndexType;
		
		private EntityRef<WebPage> _WebPage;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnWebPageIDChanging(long value);
    partial void OnWebPageIDChanged();
    partial void OnTextChanging(System.Data.Linq.Binary value);
    partial void OnTextChanged();
    partial void OnXmlChanging(System.Xml.Linq.XElement value);
    partial void OnXmlChanged();
    partial void OnFullTextIndexTypeChanging(string value);
    partial void OnFullTextIndexTypeChanged();
    #endregion
		
		public WebPages_MetaData()
		{
			this._WebPage = default(EntityRef<WebPage>);
			OnCreated();
		}
		
		[Column(Storage="_WebPageID", DbType="BigInt NOT NULL", IsPrimaryKey=true)]
		public long WebPageID
		{
			get
			{
				return this._WebPageID;
			}
			set
			{
				if ((this._WebPageID != value))
				{
					if (this._WebPage.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnWebPageIDChanging(value);
					this.SendPropertyChanging();
					this._WebPageID = value;
					this.SendPropertyChanged("WebPageID");
					this.OnWebPageIDChanged();
				}
			}
		}
		
		[Column(Storage="_Text", DbType="VarBinary(MAX) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary Text
		{
			get
			{
				return this._Text;
			}
			set
			{
				if ((this._Text != value))
				{
					this.OnTextChanging(value);
					this.SendPropertyChanging();
					this._Text = value;
					this.SendPropertyChanged("Text");
					this.OnTextChanged();
				}
			}
		}
		
		[Column(Storage="_Xml", DbType="Xml", CanBeNull=true, UpdateCheck=UpdateCheck.Never)]
		public System.Xml.Linq.XElement Xml
		{
			get
			{
				return this._Xml;
			}
			set
			{
				if ((this._Xml != value))
				{
					this.OnXmlChanging(value);
					this.SendPropertyChanging();
					this._Xml = value;
					this.SendPropertyChanged("Xml");
					this.OnXmlChanged();
				}
			}
		}
		
		[Column(Storage="_FullTextIndexType", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string FullTextIndexType
		{
			get
			{
				return this._FullTextIndexType;
			}
			set
			{
				if ((this._FullTextIndexType != value))
				{
					this.OnFullTextIndexTypeChanging(value);
					this.SendPropertyChanging();
					this._FullTextIndexType = value;
					this.SendPropertyChanged("FullTextIndexType");
					this.OnFullTextIndexTypeChanged();
				}
			}
		}
		
		[Association(Name="WebPage_WebPages_MetaData", Storage="_WebPage", ThisKey="WebPageID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public WebPage WebPage
		{
			get
			{
				return this._WebPage.Entity;
			}
			set
			{
				WebPage previousValue = this._WebPage.Entity;
				if (((previousValue != value) 
							|| (this._WebPage.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._WebPage.Entity = null;
						previousValue.WebPages_MetaData = null;
					}
					this._WebPage.Entity = value;
					if ((value != null))
					{
						value.WebPages_MetaData = this;
						this._WebPageID = value.ID;
					}
					else
					{
						this._WebPageID = default(long);
					}
					this.SendPropertyChanged("WebPage");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.WebPages_MetaData_TermExtraction")]
	public partial class WebPages_MetaData_TermExtraction : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Term;
		
		private System.Nullable<double> _Score;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTermChanging(string value);
    partial void OnTermChanged();
    partial void OnScoreChanging(System.Nullable<double> value);
    partial void OnScoreChanged();
    #endregion
		
		public WebPages_MetaData_TermExtraction()
		{
			OnCreated();
		}
		
		[Column(Storage="_Term", DbType="NVarChar(128) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Term
		{
			get
			{
				return this._Term;
			}
			set
			{
				if ((this._Term != value))
				{
					this.OnTermChanging(value);
					this.SendPropertyChanging();
					this._Term = value;
					this.SendPropertyChanged("Term");
					this.OnTermChanged();
				}
			}
		}
		
		[Column(Storage="_Score", DbType="Float")]
		public System.Nullable<double> Score
		{
			get
			{
				return this._Score;
			}
			set
			{
				if ((this._Score != value))
				{
					this.OnScoreChanging(value);
					this.SendPropertyChanging();
					this._Score = value;
					this.SendPropertyChanged("Score");
					this.OnScoreChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.WebPages_MetaData_TermLookup")]
	public partial class WebPages_MetaData_TermLookup : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _WebPageID;
		
		private string _Term;
		
		private System.Nullable<int> _Frequency;
		
		private EntityRef<WebPage> _WebPage;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnWebPageIDChanging(long value);
    partial void OnWebPageIDChanged();
    partial void OnTermChanging(string value);
    partial void OnTermChanged();
    partial void OnFrequencyChanging(System.Nullable<int> value);
    partial void OnFrequencyChanged();
    #endregion
		
		public WebPages_MetaData_TermLookup()
		{
			this._WebPage = default(EntityRef<WebPage>);
			OnCreated();
		}
		
		[Column(Storage="_WebPageID", DbType="BigInt NOT NULL", IsPrimaryKey=true)]
		public long WebPageID
		{
			get
			{
				return this._WebPageID;
			}
			set
			{
				if ((this._WebPageID != value))
				{
					if (this._WebPage.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnWebPageIDChanging(value);
					this.SendPropertyChanging();
					this._WebPageID = value;
					this.SendPropertyChanged("WebPageID");
					this.OnWebPageIDChanged();
				}
			}
		}
		
		[Column(Storage="_Term", DbType="NVarChar(128) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Term
		{
			get
			{
				return this._Term;
			}
			set
			{
				if ((this._Term != value))
				{
					this.OnTermChanging(value);
					this.SendPropertyChanging();
					this._Term = value;
					this.SendPropertyChanged("Term");
					this.OnTermChanged();
				}
			}
		}
		
		[Column(Storage="_Frequency", DbType="Int")]
		public System.Nullable<int> Frequency
		{
			get
			{
				return this._Frequency;
			}
			set
			{
				if ((this._Frequency != value))
				{
					this.OnFrequencyChanging(value);
					this.SendPropertyChanging();
					this._Frequency = value;
					this.SendPropertyChanged("Frequency");
					this.OnFrequencyChanged();
				}
			}
		}
		
		[Association(Name="WebPage_WebPages_MetaData_TermLookup", Storage="_WebPage", ThisKey="WebPageID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public WebPage WebPage
		{
			get
			{
				return this._WebPage.Entity;
			}
			set
			{
				WebPage previousValue = this._WebPage.Entity;
				if (((previousValue != value) 
							|| (this._WebPage.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._WebPage.Entity = null;
						previousValue.WebPages_MetaData_TermLookups.Remove(this);
					}
					this._WebPage.Entity = value;
					if ((value != null))
					{
						value.WebPages_MetaData_TermLookups.Add(this);
						this._WebPageID = value.ID;
					}
					else
					{
						this._WebPageID = default(long);
					}
					this.SendPropertyChanged("WebPage");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.WebPages_Schemes_Discoveries")]
	public partial class WebPages_Schemes_Discovery : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _WebPageID;
		
		private int _Scheme_DiscoveryID;
		
		private EntityRef<Schemes_Discovery> _Schemes_Discovery;
		
		private EntityRef<WebPage> _WebPage;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnWebPageIDChanging(long value);
    partial void OnWebPageIDChanged();
    partial void OnScheme_DiscoveryIDChanging(int value);
    partial void OnScheme_DiscoveryIDChanged();
    #endregion
		
		public WebPages_Schemes_Discovery()
		{
			this._Schemes_Discovery = default(EntityRef<Schemes_Discovery>);
			this._WebPage = default(EntityRef<WebPage>);
			OnCreated();
		}
		
		[Column(Storage="_WebPageID", DbType="BigInt NOT NULL", IsPrimaryKey=true)]
		public long WebPageID
		{
			get
			{
				return this._WebPageID;
			}
			set
			{
				if ((this._WebPageID != value))
				{
					if (this._WebPage.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnWebPageIDChanging(value);
					this.SendPropertyChanging();
					this._WebPageID = value;
					this.SendPropertyChanged("WebPageID");
					this.OnWebPageIDChanged();
				}
			}
		}
		
		[Column(Storage="_Scheme_DiscoveryID", DbType="Int NOT NULL")]
		public int Scheme_DiscoveryID
		{
			get
			{
				return this._Scheme_DiscoveryID;
			}
			set
			{
				if ((this._Scheme_DiscoveryID != value))
				{
					if (this._Schemes_Discovery.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnScheme_DiscoveryIDChanging(value);
					this.SendPropertyChanging();
					this._Scheme_DiscoveryID = value;
					this.SendPropertyChanged("Scheme_DiscoveryID");
					this.OnScheme_DiscoveryIDChanged();
				}
			}
		}
		
		[Association(Name="Schemes_Discovery_WebPages_Schemes_Discovery", Storage="_Schemes_Discovery", ThisKey="Scheme_DiscoveryID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Schemes_Discovery Schemes_Discovery
		{
			get
			{
				return this._Schemes_Discovery.Entity;
			}
			set
			{
				Schemes_Discovery previousValue = this._Schemes_Discovery.Entity;
				if (((previousValue != value) 
							|| (this._Schemes_Discovery.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Schemes_Discovery.Entity = null;
						previousValue.WebPages_Schemes_Discoveries.Remove(this);
					}
					this._Schemes_Discovery.Entity = value;
					if ((value != null))
					{
						value.WebPages_Schemes_Discoveries.Add(this);
						this._Scheme_DiscoveryID = value.ID;
					}
					else
					{
						this._Scheme_DiscoveryID = default(int);
					}
					this.SendPropertyChanged("Schemes_Discovery");
				}
			}
		}
		
		[Association(Name="WebPage_WebPages_Schemes_Discovery", Storage="_WebPage", ThisKey="WebPageID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public WebPage WebPage
		{
			get
			{
				return this._WebPage.Entity;
			}
			set
			{
				WebPage previousValue = this._WebPage.Entity;
				if (((previousValue != value) 
							|| (this._WebPage.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._WebPage.Entity = null;
						previousValue.WebPages_Schemes_Discovery = null;
					}
					this._WebPage.Entity = value;
					if ((value != null))
					{
						value.WebPages_Schemes_Discovery = this;
						this._WebPageID = value.ID;
					}
					else
					{
						this._WebPageID = default(long);
					}
					this.SendPropertyChanged("WebPage");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="rpt.DisallowedAbsoluteUris_COUNT_BY_ABSOLUTEURI")]
	public partial class DisallowedAbsoluteUris_COUNT_BY_ABSOLUTEURI : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RowNumber;
		
		private long _DisallowedAbsoluteUriID;
		
		private int _Count;
		
		private int _Rank;
		
		private int _DenseRank;
		
		private byte _NTile;
		
		private EntityRef<DisallowedAbsoluteUri> _DisallowedAbsoluteUri;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRowNumberChanging(int value);
    partial void OnRowNumberChanged();
    partial void OnDisallowedAbsoluteUriIDChanging(long value);
    partial void OnDisallowedAbsoluteUriIDChanged();
    partial void OnCountChanging(int value);
    partial void OnCountChanged();
    partial void OnRankChanging(int value);
    partial void OnRankChanged();
    partial void OnDenseRankChanging(int value);
    partial void OnDenseRankChanged();
    partial void OnNTileChanging(byte value);
    partial void OnNTileChanged();
    #endregion
		
		public DisallowedAbsoluteUris_COUNT_BY_ABSOLUTEURI()
		{
			this._DisallowedAbsoluteUri = default(EntityRef<DisallowedAbsoluteUri>);
			OnCreated();
		}
		
		[Column(Storage="_RowNumber", DbType="Int NOT NULL")]
		public int RowNumber
		{
			get
			{
				return this._RowNumber;
			}
			set
			{
				if ((this._RowNumber != value))
				{
					this.OnRowNumberChanging(value);
					this.SendPropertyChanging();
					this._RowNumber = value;
					this.SendPropertyChanged("RowNumber");
					this.OnRowNumberChanged();
				}
			}
		}
		
		[Column(Storage="_DisallowedAbsoluteUriID", DbType="BigInt NOT NULL", IsPrimaryKey=true)]
		public long DisallowedAbsoluteUriID
		{
			get
			{
				return this._DisallowedAbsoluteUriID;
			}
			set
			{
				if ((this._DisallowedAbsoluteUriID != value))
				{
					if (this._DisallowedAbsoluteUri.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDisallowedAbsoluteUriIDChanging(value);
					this.SendPropertyChanging();
					this._DisallowedAbsoluteUriID = value;
					this.SendPropertyChanged("DisallowedAbsoluteUriID");
					this.OnDisallowedAbsoluteUriIDChanged();
				}
			}
		}
		
		[Column(Storage="_Count", DbType="Int NOT NULL")]
		public int Count
		{
			get
			{
				return this._Count;
			}
			set
			{
				if ((this._Count != value))
				{
					this.OnCountChanging(value);
					this.SendPropertyChanging();
					this._Count = value;
					this.SendPropertyChanged("Count");
					this.OnCountChanged();
				}
			}
		}
		
		[Column(Storage="_Rank", DbType="Int NOT NULL")]
		public int Rank
		{
			get
			{
				return this._Rank;
			}
			set
			{
				if ((this._Rank != value))
				{
					this.OnRankChanging(value);
					this.SendPropertyChanging();
					this._Rank = value;
					this.SendPropertyChanged("Rank");
					this.OnRankChanged();
				}
			}
		}
		
		[Column(Storage="_DenseRank", DbType="Int NOT NULL")]
		public int DenseRank
		{
			get
			{
				return this._DenseRank;
			}
			set
			{
				if ((this._DenseRank != value))
				{
					this.OnDenseRankChanging(value);
					this.SendPropertyChanging();
					this._DenseRank = value;
					this.SendPropertyChanged("DenseRank");
					this.OnDenseRankChanged();
				}
			}
		}
		
		[Column(Storage="_NTile", DbType="TinyInt NOT NULL")]
		public byte NTile
		{
			get
			{
				return this._NTile;
			}
			set
			{
				if ((this._NTile != value))
				{
					this.OnNTileChanging(value);
					this.SendPropertyChanging();
					this._NTile = value;
					this.SendPropertyChanged("NTile");
					this.OnNTileChanged();
				}
			}
		}
		
		[Association(Name="DisallowedAbsoluteUri_DisallowedAbsoluteUris_COUNT_BY_ABSOLUTEURI", Storage="_DisallowedAbsoluteUri", ThisKey="DisallowedAbsoluteUriID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public DisallowedAbsoluteUri DisallowedAbsoluteUri
		{
			get
			{
				return this._DisallowedAbsoluteUri.Entity;
			}
			set
			{
				DisallowedAbsoluteUri previousValue = this._DisallowedAbsoluteUri.Entity;
				if (((previousValue != value) 
							|| (this._DisallowedAbsoluteUri.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DisallowedAbsoluteUri.Entity = null;
						previousValue.DisallowedAbsoluteUris_COUNT_BY_ABSOLUTEURI = null;
					}
					this._DisallowedAbsoluteUri.Entity = value;
					if ((value != null))
					{
						value.DisallowedAbsoluteUris_COUNT_BY_ABSOLUTEURI = this;
						this._DisallowedAbsoluteUriID = value.ID;
					}
					else
					{
						this._DisallowedAbsoluteUriID = default(long);
					}
					this.SendPropertyChanged("DisallowedAbsoluteUri");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="rpt.DisallowedAbsoluteUris_COUNT_BY_DOMAIN")]
	public partial class DisallowedAbsoluteUris_COUNT_BY_DOMAIN : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RowNumber;
		
		private int _DomainID;
		
		private int _Count;
		
		private int _Rank;
		
		private int _DenseRank;
		
		private byte _NTile;
		
		private EntityRef<Domain> _Domain;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRowNumberChanging(int value);
    partial void OnRowNumberChanged();
    partial void OnDomainIDChanging(int value);
    partial void OnDomainIDChanged();
    partial void OnCountChanging(int value);
    partial void OnCountChanged();
    partial void OnRankChanging(int value);
    partial void OnRankChanged();
    partial void OnDenseRankChanging(int value);
    partial void OnDenseRankChanged();
    partial void OnNTileChanging(byte value);
    partial void OnNTileChanged();
    #endregion
		
		public DisallowedAbsoluteUris_COUNT_BY_DOMAIN()
		{
			this._Domain = default(EntityRef<Domain>);
			OnCreated();
		}
		
		[Column(Storage="_RowNumber", DbType="Int NOT NULL")]
		public int RowNumber
		{
			get
			{
				return this._RowNumber;
			}
			set
			{
				if ((this._RowNumber != value))
				{
					this.OnRowNumberChanging(value);
					this.SendPropertyChanging();
					this._RowNumber = value;
					this.SendPropertyChanged("RowNumber");
					this.OnRowNumberChanged();
				}
			}
		}
		
		[Column(Storage="_DomainID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int DomainID
		{
			get
			{
				return this._DomainID;
			}
			set
			{
				if ((this._DomainID != value))
				{
					if (this._Domain.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDomainIDChanging(value);
					this.SendPropertyChanging();
					this._DomainID = value;
					this.SendPropertyChanged("DomainID");
					this.OnDomainIDChanged();
				}
			}
		}
		
		[Column(Storage="_Count", DbType="Int NOT NULL")]
		public int Count
		{
			get
			{
				return this._Count;
			}
			set
			{
				if ((this._Count != value))
				{
					this.OnCountChanging(value);
					this.SendPropertyChanging();
					this._Count = value;
					this.SendPropertyChanged("Count");
					this.OnCountChanged();
				}
			}
		}
		
		[Column(Storage="_Rank", DbType="Int NOT NULL")]
		public int Rank
		{
			get
			{
				return this._Rank;
			}
			set
			{
				if ((this._Rank != value))
				{
					this.OnRankChanging(value);
					this.SendPropertyChanging();
					this._Rank = value;
					this.SendPropertyChanged("Rank");
					this.OnRankChanged();
				}
			}
		}
		
		[Column(Storage="_DenseRank", DbType="Int NOT NULL")]
		public int DenseRank
		{
			get
			{
				return this._DenseRank;
			}
			set
			{
				if ((this._DenseRank != value))
				{
					this.OnDenseRankChanging(value);
					this.SendPropertyChanging();
					this._DenseRank = value;
					this.SendPropertyChanged("DenseRank");
					this.OnDenseRankChanged();
				}
			}
		}
		
		[Column(Storage="_NTile", DbType="TinyInt NOT NULL")]
		public byte NTile
		{
			get
			{
				return this._NTile;
			}
			set
			{
				if ((this._NTile != value))
				{
					this.OnNTileChanging(value);
					this.SendPropertyChanging();
					this._NTile = value;
					this.SendPropertyChanged("NTile");
					this.OnNTileChanged();
				}
			}
		}
		
		[Association(Name="Domain_DisallowedAbsoluteUris_COUNT_BY_DOMAIN", Storage="_Domain", ThisKey="DomainID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Domain Domain
		{
			get
			{
				return this._Domain.Entity;
			}
			set
			{
				Domain previousValue = this._Domain.Entity;
				if (((previousValue != value) 
							|| (this._Domain.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Domain.Entity = null;
						previousValue.DisallowedAbsoluteUris_COUNT_BY_DOMAIN = null;
					}
					this._Domain.Entity = value;
					if ((value != null))
					{
						value.DisallowedAbsoluteUris_COUNT_BY_DOMAIN = this;
						this._DomainID = value.ID;
					}
					else
					{
						this._DomainID = default(int);
					}
					this.SendPropertyChanged("Domain");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="rpt.DisallowedAbsoluteUris_COUNT_BY_EXTENSION")]
	public partial class DisallowedAbsoluteUris_COUNT_BY_EXTENSION : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RowNumber;
		
		private int _ExtensionID;
		
		private int _Count;
		
		private int _Rank;
		
		private int _DenseRank;
		
		private byte _NTile;
		
		private EntityRef<Extension> _Extension;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRowNumberChanging(int value);
    partial void OnRowNumberChanged();
    partial void OnExtensionIDChanging(int value);
    partial void OnExtensionIDChanged();
    partial void OnCountChanging(int value);
    partial void OnCountChanged();
    partial void OnRankChanging(int value);
    partial void OnRankChanged();
    partial void OnDenseRankChanging(int value);
    partial void OnDenseRankChanged();
    partial void OnNTileChanging(byte value);
    partial void OnNTileChanged();
    #endregion
		
		public DisallowedAbsoluteUris_COUNT_BY_EXTENSION()
		{
			this._Extension = default(EntityRef<Extension>);
			OnCreated();
		}
		
		[Column(Storage="_RowNumber", DbType="Int NOT NULL")]
		public int RowNumber
		{
			get
			{
				return this._RowNumber;
			}
			set
			{
				if ((this._RowNumber != value))
				{
					this.OnRowNumberChanging(value);
					this.SendPropertyChanging();
					this._RowNumber = value;
					this.SendPropertyChanged("RowNumber");
					this.OnRowNumberChanged();
				}
			}
		}
		
		[Column(Storage="_ExtensionID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ExtensionID
		{
			get
			{
				return this._ExtensionID;
			}
			set
			{
				if ((this._ExtensionID != value))
				{
					if (this._Extension.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnExtensionIDChanging(value);
					this.SendPropertyChanging();
					this._ExtensionID = value;
					this.SendPropertyChanged("ExtensionID");
					this.OnExtensionIDChanged();
				}
			}
		}
		
		[Column(Storage="_Count", DbType="Int NOT NULL")]
		public int Count
		{
			get
			{
				return this._Count;
			}
			set
			{
				if ((this._Count != value))
				{
					this.OnCountChanging(value);
					this.SendPropertyChanging();
					this._Count = value;
					this.SendPropertyChanged("Count");
					this.OnCountChanged();
				}
			}
		}
		
		[Column(Storage="_Rank", DbType="Int NOT NULL")]
		public int Rank
		{
			get
			{
				return this._Rank;
			}
			set
			{
				if ((this._Rank != value))
				{
					this.OnRankChanging(value);
					this.SendPropertyChanging();
					this._Rank = value;
					this.SendPropertyChanged("Rank");
					this.OnRankChanged();
				}
			}
		}
		
		[Column(Storage="_DenseRank", DbType="Int NOT NULL")]
		public int DenseRank
		{
			get
			{
				return this._DenseRank;
			}
			set
			{
				if ((this._DenseRank != value))
				{
					this.OnDenseRankChanging(value);
					this.SendPropertyChanging();
					this._DenseRank = value;
					this.SendPropertyChanged("DenseRank");
					this.OnDenseRankChanged();
				}
			}
		}
		
		[Column(Storage="_NTile", DbType="TinyInt NOT NULL")]
		public byte NTile
		{
			get
			{
				return this._NTile;
			}
			set
			{
				if ((this._NTile != value))
				{
					this.OnNTileChanging(value);
					this.SendPropertyChanging();
					this._NTile = value;
					this.SendPropertyChanged("NTile");
					this.OnNTileChanged();
				}
			}
		}
		
		[Association(Name="Extension_DisallowedAbsoluteUris_COUNT_BY_EXTENSION", Storage="_Extension", ThisKey="ExtensionID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Extension Extension
		{
			get
			{
				return this._Extension.Entity;
			}
			set
			{
				Extension previousValue = this._Extension.Entity;
				if (((previousValue != value) 
							|| (this._Extension.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Extension.Entity = null;
						previousValue.DisallowedAbsoluteUris_COUNT_BY_EXTENSION = null;
					}
					this._Extension.Entity = value;
					if ((value != null))
					{
						value.DisallowedAbsoluteUris_COUNT_BY_EXTENSION = this;
						this._ExtensionID = value.ID;
					}
					else
					{
						this._ExtensionID = default(int);
					}
					this.SendPropertyChanged("Extension");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="rpt.DisallowedAbsoluteUris_COUNT_BY_HOST")]
	public partial class DisallowedAbsoluteUris_COUNT_BY_HOST : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RowNumber;
		
		private int _HostID;
		
		private int _Count;
		
		private int _Rank;
		
		private int _DenseRank;
		
		private byte _NTile;
		
		private EntityRef<Host> _Host;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRowNumberChanging(int value);
    partial void OnRowNumberChanged();
    partial void OnHostIDChanging(int value);
    partial void OnHostIDChanged();
    partial void OnCountChanging(int value);
    partial void OnCountChanged();
    partial void OnRankChanging(int value);
    partial void OnRankChanged();
    partial void OnDenseRankChanging(int value);
    partial void OnDenseRankChanged();
    partial void OnNTileChanging(byte value);
    partial void OnNTileChanged();
    #endregion
		
		public DisallowedAbsoluteUris_COUNT_BY_HOST()
		{
			this._Host = default(EntityRef<Host>);
			OnCreated();
		}
		
		[Column(Storage="_RowNumber", DbType="Int NOT NULL")]
		public int RowNumber
		{
			get
			{
				return this._RowNumber;
			}
			set
			{
				if ((this._RowNumber != value))
				{
					this.OnRowNumberChanging(value);
					this.SendPropertyChanging();
					this._RowNumber = value;
					this.SendPropertyChanged("RowNumber");
					this.OnRowNumberChanged();
				}
			}
		}
		
		[Column(Storage="_HostID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int HostID
		{
			get
			{
				return this._HostID;
			}
			set
			{
				if ((this._HostID != value))
				{
					if (this._Host.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnHostIDChanging(value);
					this.SendPropertyChanging();
					this._HostID = value;
					this.SendPropertyChanged("HostID");
					this.OnHostIDChanged();
				}
			}
		}
		
		[Column(Storage="_Count", DbType="Int NOT NULL")]
		public int Count
		{
			get
			{
				return this._Count;
			}
			set
			{
				if ((this._Count != value))
				{
					this.OnCountChanging(value);
					this.SendPropertyChanging();
					this._Count = value;
					this.SendPropertyChanged("Count");
					this.OnCountChanged();
				}
			}
		}
		
		[Column(Storage="_Rank", DbType="Int NOT NULL")]
		public int Rank
		{
			get
			{
				return this._Rank;
			}
			set
			{
				if ((this._Rank != value))
				{
					this.OnRankChanging(value);
					this.SendPropertyChanging();
					this._Rank = value;
					this.SendPropertyChanged("Rank");
					this.OnRankChanged();
				}
			}
		}
		
		[Column(Storage="_DenseRank", DbType="Int NOT NULL")]
		public int DenseRank
		{
			get
			{
				return this._DenseRank;
			}
			set
			{
				if ((this._DenseRank != value))
				{
					this.OnDenseRankChanging(value);
					this.SendPropertyChanging();
					this._DenseRank = value;
					this.SendPropertyChanged("DenseRank");
					this.OnDenseRankChanged();
				}
			}
		}
		
		[Column(Storage="_NTile", DbType="TinyInt NOT NULL")]
		public byte NTile
		{
			get
			{
				return this._NTile;
			}
			set
			{
				if ((this._NTile != value))
				{
					this.OnNTileChanging(value);
					this.SendPropertyChanging();
					this._NTile = value;
					this.SendPropertyChanged("NTile");
					this.OnNTileChanged();
				}
			}
		}
		
		[Association(Name="Host_DisallowedAbsoluteUris_COUNT_BY_HOST", Storage="_Host", ThisKey="HostID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Host Host
		{
			get
			{
				return this._Host.Entity;
			}
			set
			{
				Host previousValue = this._Host.Entity;
				if (((previousValue != value) 
							|| (this._Host.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Host.Entity = null;
						previousValue.DisallowedAbsoluteUris_COUNT_BY_HOST = null;
					}
					this._Host.Entity = value;
					if ((value != null))
					{
						value.DisallowedAbsoluteUris_COUNT_BY_HOST = this;
						this._HostID = value.ID;
					}
					else
					{
						this._HostID = default(int);
					}
					this.SendPropertyChanged("Host");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="rpt.DisallowedAbsoluteUris_COUNT_BY_SCHEME")]
	public partial class DisallowedAbsoluteUris_COUNT_BY_SCHEME : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RowNumber;
		
		private int _SchemeID;
		
		private int _Count;
		
		private int _Rank;
		
		private int _DenseRank;
		
		private byte _NTile;
		
		private EntityRef<Scheme> _Scheme;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRowNumberChanging(int value);
    partial void OnRowNumberChanged();
    partial void OnSchemeIDChanging(int value);
    partial void OnSchemeIDChanged();
    partial void OnCountChanging(int value);
    partial void OnCountChanged();
    partial void OnRankChanging(int value);
    partial void OnRankChanged();
    partial void OnDenseRankChanging(int value);
    partial void OnDenseRankChanged();
    partial void OnNTileChanging(byte value);
    partial void OnNTileChanged();
    #endregion
		
		public DisallowedAbsoluteUris_COUNT_BY_SCHEME()
		{
			this._Scheme = default(EntityRef<Scheme>);
			OnCreated();
		}
		
		[Column(Storage="_RowNumber", DbType="Int NOT NULL")]
		public int RowNumber
		{
			get
			{
				return this._RowNumber;
			}
			set
			{
				if ((this._RowNumber != value))
				{
					this.OnRowNumberChanging(value);
					this.SendPropertyChanging();
					this._RowNumber = value;
					this.SendPropertyChanged("RowNumber");
					this.OnRowNumberChanged();
				}
			}
		}
		
		[Column(Storage="_SchemeID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int SchemeID
		{
			get
			{
				return this._SchemeID;
			}
			set
			{
				if ((this._SchemeID != value))
				{
					if (this._Scheme.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSchemeIDChanging(value);
					this.SendPropertyChanging();
					this._SchemeID = value;
					this.SendPropertyChanged("SchemeID");
					this.OnSchemeIDChanged();
				}
			}
		}
		
		[Column(Storage="_Count", DbType="Int NOT NULL")]
		public int Count
		{
			get
			{
				return this._Count;
			}
			set
			{
				if ((this._Count != value))
				{
					this.OnCountChanging(value);
					this.SendPropertyChanging();
					this._Count = value;
					this.SendPropertyChanged("Count");
					this.OnCountChanged();
				}
			}
		}
		
		[Column(Storage="_Rank", DbType="Int NOT NULL")]
		public int Rank
		{
			get
			{
				return this._Rank;
			}
			set
			{
				if ((this._Rank != value))
				{
					this.OnRankChanging(value);
					this.SendPropertyChanging();
					this._Rank = value;
					this.SendPropertyChanged("Rank");
					this.OnRankChanged();
				}
			}
		}
		
		[Column(Storage="_DenseRank", DbType="Int NOT NULL")]
		public int DenseRank
		{
			get
			{
				return this._DenseRank;
			}
			set
			{
				if ((this._DenseRank != value))
				{
					this.OnDenseRankChanging(value);
					this.SendPropertyChanging();
					this._DenseRank = value;
					this.SendPropertyChanged("DenseRank");
					this.OnDenseRankChanged();
				}
			}
		}
		
		[Column(Storage="_NTile", DbType="TinyInt NOT NULL")]
		public byte NTile
		{
			get
			{
				return this._NTile;
			}
			set
			{
				if ((this._NTile != value))
				{
					this.OnNTileChanging(value);
					this.SendPropertyChanging();
					this._NTile = value;
					this.SendPropertyChanged("NTile");
					this.OnNTileChanged();
				}
			}
		}
		
		[Association(Name="Scheme_DisallowedAbsoluteUris_COUNT_BY_SCHEME", Storage="_Scheme", ThisKey="SchemeID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Scheme Scheme
		{
			get
			{
				return this._Scheme.Entity;
			}
			set
			{
				Scheme previousValue = this._Scheme.Entity;
				if (((previousValue != value) 
							|| (this._Scheme.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Scheme.Entity = null;
						previousValue.DisallowedAbsoluteUris_COUNT_BY_SCHEME = null;
					}
					this._Scheme.Entity = value;
					if ((value != null))
					{
						value.DisallowedAbsoluteUris_COUNT_BY_SCHEME = this;
						this._SchemeID = value.ID;
					}
					else
					{
						this._SchemeID = default(int);
					}
					this.SendPropertyChanged("Scheme");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="rpt.DisallowedAbsoluteUris_MOST_POPULAR_ABSOLUTEURIS_BY_ABSOLUTEURIS")]
	public partial class DisallowedAbsoluteUris_MOST_POPULAR_ABSOLUTEURIS_BY_ABSOLUTEURI : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RowNumber;
		
		private System.Nullable<System.DateTime> _InitiallyDiscovered;
		
		private System.DateTime _LastDiscovered;
		
		private long _DisallowedAbsoluteUriID;
		
		private int _Count;
		
		private System.Nullable<short> _DaysSinceInitiallyDiscovered;
		
		private short _DaysSinceLastDiscovered;
		
		private System.Nullable<double> _Strength;
		
		private int _Rank;
		
		private int _DenseRank;
		
		private byte _NTile;
		
		private EntityRef<DisallowedAbsoluteUri> _DisallowedAbsoluteUri;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRowNumberChanging(int value);
    partial void OnRowNumberChanged();
    partial void OnInitiallyDiscoveredChanging(System.Nullable<System.DateTime> value);
    partial void OnInitiallyDiscoveredChanged();
    partial void OnLastDiscoveredChanging(System.DateTime value);
    partial void OnLastDiscoveredChanged();
    partial void OnDisallowedAbsoluteUriIDChanging(long value);
    partial void OnDisallowedAbsoluteUriIDChanged();
    partial void OnCountChanging(int value);
    partial void OnCountChanged();
    partial void OnDaysSinceInitiallyDiscoveredChanging(System.Nullable<short> value);
    partial void OnDaysSinceInitiallyDiscoveredChanged();
    partial void OnDaysSinceLastDiscoveredChanging(short value);
    partial void OnDaysSinceLastDiscoveredChanged();
    partial void OnStrengthChanging(System.Nullable<double> value);
    partial void OnStrengthChanged();
    partial void OnRankChanging(int value);
    partial void OnRankChanged();
    partial void OnDenseRankChanging(int value);
    partial void OnDenseRankChanged();
    partial void OnNTileChanging(byte value);
    partial void OnNTileChanged();
    #endregion
		
		public DisallowedAbsoluteUris_MOST_POPULAR_ABSOLUTEURIS_BY_ABSOLUTEURI()
		{
			this._DisallowedAbsoluteUri = default(EntityRef<DisallowedAbsoluteUri>);
			OnCreated();
		}
		
		[Column(Storage="_RowNumber", DbType="Int NOT NULL")]
		public int RowNumber
		{
			get
			{
				return this._RowNumber;
			}
			set
			{
				if ((this._RowNumber != value))
				{
					this.OnRowNumberChanging(value);
					this.SendPropertyChanging();
					this._RowNumber = value;
					this.SendPropertyChanged("RowNumber");
					this.OnRowNumberChanged();
				}
			}
		}
		
		[Column(Storage="_InitiallyDiscovered", DbType="DateTime")]
		public System.Nullable<System.DateTime> InitiallyDiscovered
		{
			get
			{
				return this._InitiallyDiscovered;
			}
			set
			{
				if ((this._InitiallyDiscovered != value))
				{
					this.OnInitiallyDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._InitiallyDiscovered = value;
					this.SendPropertyChanged("InitiallyDiscovered");
					this.OnInitiallyDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_LastDiscovered", DbType="DateTime NOT NULL")]
		public System.DateTime LastDiscovered
		{
			get
			{
				return this._LastDiscovered;
			}
			set
			{
				if ((this._LastDiscovered != value))
				{
					this.OnLastDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._LastDiscovered = value;
					this.SendPropertyChanged("LastDiscovered");
					this.OnLastDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_DisallowedAbsoluteUriID", DbType="BigInt NOT NULL", IsPrimaryKey=true)]
		public long DisallowedAbsoluteUriID
		{
			get
			{
				return this._DisallowedAbsoluteUriID;
			}
			set
			{
				if ((this._DisallowedAbsoluteUriID != value))
				{
					if (this._DisallowedAbsoluteUri.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDisallowedAbsoluteUriIDChanging(value);
					this.SendPropertyChanging();
					this._DisallowedAbsoluteUriID = value;
					this.SendPropertyChanged("DisallowedAbsoluteUriID");
					this.OnDisallowedAbsoluteUriIDChanged();
				}
			}
		}
		
		[Column(Storage="_Count", DbType="Int NOT NULL")]
		public int Count
		{
			get
			{
				return this._Count;
			}
			set
			{
				if ((this._Count != value))
				{
					this.OnCountChanging(value);
					this.SendPropertyChanging();
					this._Count = value;
					this.SendPropertyChanged("Count");
					this.OnCountChanged();
				}
			}
		}
		
		[Column(Storage="_DaysSinceInitiallyDiscovered", DbType="SmallInt")]
		public System.Nullable<short> DaysSinceInitiallyDiscovered
		{
			get
			{
				return this._DaysSinceInitiallyDiscovered;
			}
			set
			{
				if ((this._DaysSinceInitiallyDiscovered != value))
				{
					this.OnDaysSinceInitiallyDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._DaysSinceInitiallyDiscovered = value;
					this.SendPropertyChanged("DaysSinceInitiallyDiscovered");
					this.OnDaysSinceInitiallyDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_DaysSinceLastDiscovered", DbType="SmallInt NOT NULL")]
		public short DaysSinceLastDiscovered
		{
			get
			{
				return this._DaysSinceLastDiscovered;
			}
			set
			{
				if ((this._DaysSinceLastDiscovered != value))
				{
					this.OnDaysSinceLastDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._DaysSinceLastDiscovered = value;
					this.SendPropertyChanged("DaysSinceLastDiscovered");
					this.OnDaysSinceLastDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_Strength", DbType="Float")]
		public System.Nullable<double> Strength
		{
			get
			{
				return this._Strength;
			}
			set
			{
				if ((this._Strength != value))
				{
					this.OnStrengthChanging(value);
					this.SendPropertyChanging();
					this._Strength = value;
					this.SendPropertyChanged("Strength");
					this.OnStrengthChanged();
				}
			}
		}
		
		[Column(Storage="_Rank", DbType="Int NOT NULL")]
		public int Rank
		{
			get
			{
				return this._Rank;
			}
			set
			{
				if ((this._Rank != value))
				{
					this.OnRankChanging(value);
					this.SendPropertyChanging();
					this._Rank = value;
					this.SendPropertyChanged("Rank");
					this.OnRankChanged();
				}
			}
		}
		
		[Column(Storage="_DenseRank", DbType="Int NOT NULL")]
		public int DenseRank
		{
			get
			{
				return this._DenseRank;
			}
			set
			{
				if ((this._DenseRank != value))
				{
					this.OnDenseRankChanging(value);
					this.SendPropertyChanging();
					this._DenseRank = value;
					this.SendPropertyChanged("DenseRank");
					this.OnDenseRankChanged();
				}
			}
		}
		
		[Column(Storage="_NTile", DbType="TinyInt NOT NULL")]
		public byte NTile
		{
			get
			{
				return this._NTile;
			}
			set
			{
				if ((this._NTile != value))
				{
					this.OnNTileChanging(value);
					this.SendPropertyChanging();
					this._NTile = value;
					this.SendPropertyChanged("NTile");
					this.OnNTileChanged();
				}
			}
		}
		
		[Association(Name="DisallowedAbsoluteUri_DisallowedAbsoluteUris_MOST_POPULAR_ABSOLUTEURIS_BY_ABSOLUT" +
			"EURI", Storage="_DisallowedAbsoluteUri", ThisKey="DisallowedAbsoluteUriID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public DisallowedAbsoluteUri DisallowedAbsoluteUri
		{
			get
			{
				return this._DisallowedAbsoluteUri.Entity;
			}
			set
			{
				DisallowedAbsoluteUri previousValue = this._DisallowedAbsoluteUri.Entity;
				if (((previousValue != value) 
							|| (this._DisallowedAbsoluteUri.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DisallowedAbsoluteUri.Entity = null;
						previousValue.DisallowedAbsoluteUris_MOST_POPULAR_ABSOLUTEURIS_BY_ABSOLUTEURI = null;
					}
					this._DisallowedAbsoluteUri.Entity = value;
					if ((value != null))
					{
						value.DisallowedAbsoluteUris_MOST_POPULAR_ABSOLUTEURIS_BY_ABSOLUTEURI = this;
						this._DisallowedAbsoluteUriID = value.ID;
					}
					else
					{
						this._DisallowedAbsoluteUriID = default(long);
					}
					this.SendPropertyChanged("DisallowedAbsoluteUri");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="rpt.DisallowedAbsoluteUris_MOST_POPULAR_ABSOLUTEURIS_BY_DOMAINS")]
	public partial class DisallowedAbsoluteUris_MOST_POPULAR_ABSOLUTEURIS_BY_DOMAIN : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RowNumber;
		
		private System.Nullable<System.DateTime> _InitiallyDiscovered;
		
		private System.DateTime _LastDiscovered;
		
		private long _DisallowedAbsoluteUriID;
		
		private int _Count;
		
		private System.Nullable<short> _DaysSinceInitiallyDiscovered;
		
		private short _DaysSinceLastDiscovered;
		
		private System.Nullable<double> _Strength;
		
		private int _Rank;
		
		private int _DenseRank;
		
		private byte _NTile;
		
		private EntityRef<DisallowedAbsoluteUri> _DisallowedAbsoluteUri;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRowNumberChanging(int value);
    partial void OnRowNumberChanged();
    partial void OnInitiallyDiscoveredChanging(System.Nullable<System.DateTime> value);
    partial void OnInitiallyDiscoveredChanged();
    partial void OnLastDiscoveredChanging(System.DateTime value);
    partial void OnLastDiscoveredChanged();
    partial void OnDisallowedAbsoluteUriIDChanging(long value);
    partial void OnDisallowedAbsoluteUriIDChanged();
    partial void OnCountChanging(int value);
    partial void OnCountChanged();
    partial void OnDaysSinceInitiallyDiscoveredChanging(System.Nullable<short> value);
    partial void OnDaysSinceInitiallyDiscoveredChanged();
    partial void OnDaysSinceLastDiscoveredChanging(short value);
    partial void OnDaysSinceLastDiscoveredChanged();
    partial void OnStrengthChanging(System.Nullable<double> value);
    partial void OnStrengthChanged();
    partial void OnRankChanging(int value);
    partial void OnRankChanged();
    partial void OnDenseRankChanging(int value);
    partial void OnDenseRankChanged();
    partial void OnNTileChanging(byte value);
    partial void OnNTileChanged();
    #endregion
		
		public DisallowedAbsoluteUris_MOST_POPULAR_ABSOLUTEURIS_BY_DOMAIN()
		{
			this._DisallowedAbsoluteUri = default(EntityRef<DisallowedAbsoluteUri>);
			OnCreated();
		}
		
		[Column(Storage="_RowNumber", DbType="Int NOT NULL")]
		public int RowNumber
		{
			get
			{
				return this._RowNumber;
			}
			set
			{
				if ((this._RowNumber != value))
				{
					this.OnRowNumberChanging(value);
					this.SendPropertyChanging();
					this._RowNumber = value;
					this.SendPropertyChanged("RowNumber");
					this.OnRowNumberChanged();
				}
			}
		}
		
		[Column(Storage="_InitiallyDiscovered", DbType="DateTime")]
		public System.Nullable<System.DateTime> InitiallyDiscovered
		{
			get
			{
				return this._InitiallyDiscovered;
			}
			set
			{
				if ((this._InitiallyDiscovered != value))
				{
					this.OnInitiallyDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._InitiallyDiscovered = value;
					this.SendPropertyChanged("InitiallyDiscovered");
					this.OnInitiallyDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_LastDiscovered", DbType="DateTime NOT NULL")]
		public System.DateTime LastDiscovered
		{
			get
			{
				return this._LastDiscovered;
			}
			set
			{
				if ((this._LastDiscovered != value))
				{
					this.OnLastDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._LastDiscovered = value;
					this.SendPropertyChanged("LastDiscovered");
					this.OnLastDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_DisallowedAbsoluteUriID", DbType="BigInt NOT NULL", IsPrimaryKey=true)]
		public long DisallowedAbsoluteUriID
		{
			get
			{
				return this._DisallowedAbsoluteUriID;
			}
			set
			{
				if ((this._DisallowedAbsoluteUriID != value))
				{
					if (this._DisallowedAbsoluteUri.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDisallowedAbsoluteUriIDChanging(value);
					this.SendPropertyChanging();
					this._DisallowedAbsoluteUriID = value;
					this.SendPropertyChanged("DisallowedAbsoluteUriID");
					this.OnDisallowedAbsoluteUriIDChanged();
				}
			}
		}
		
		[Column(Storage="_Count", DbType="Int NOT NULL")]
		public int Count
		{
			get
			{
				return this._Count;
			}
			set
			{
				if ((this._Count != value))
				{
					this.OnCountChanging(value);
					this.SendPropertyChanging();
					this._Count = value;
					this.SendPropertyChanged("Count");
					this.OnCountChanged();
				}
			}
		}
		
		[Column(Storage="_DaysSinceInitiallyDiscovered", DbType="SmallInt")]
		public System.Nullable<short> DaysSinceInitiallyDiscovered
		{
			get
			{
				return this._DaysSinceInitiallyDiscovered;
			}
			set
			{
				if ((this._DaysSinceInitiallyDiscovered != value))
				{
					this.OnDaysSinceInitiallyDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._DaysSinceInitiallyDiscovered = value;
					this.SendPropertyChanged("DaysSinceInitiallyDiscovered");
					this.OnDaysSinceInitiallyDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_DaysSinceLastDiscovered", DbType="SmallInt NOT NULL")]
		public short DaysSinceLastDiscovered
		{
			get
			{
				return this._DaysSinceLastDiscovered;
			}
			set
			{
				if ((this._DaysSinceLastDiscovered != value))
				{
					this.OnDaysSinceLastDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._DaysSinceLastDiscovered = value;
					this.SendPropertyChanged("DaysSinceLastDiscovered");
					this.OnDaysSinceLastDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_Strength", DbType="Float")]
		public System.Nullable<double> Strength
		{
			get
			{
				return this._Strength;
			}
			set
			{
				if ((this._Strength != value))
				{
					this.OnStrengthChanging(value);
					this.SendPropertyChanging();
					this._Strength = value;
					this.SendPropertyChanged("Strength");
					this.OnStrengthChanged();
				}
			}
		}
		
		[Column(Storage="_Rank", DbType="Int NOT NULL")]
		public int Rank
		{
			get
			{
				return this._Rank;
			}
			set
			{
				if ((this._Rank != value))
				{
					this.OnRankChanging(value);
					this.SendPropertyChanging();
					this._Rank = value;
					this.SendPropertyChanged("Rank");
					this.OnRankChanged();
				}
			}
		}
		
		[Column(Storage="_DenseRank", DbType="Int NOT NULL")]
		public int DenseRank
		{
			get
			{
				return this._DenseRank;
			}
			set
			{
				if ((this._DenseRank != value))
				{
					this.OnDenseRankChanging(value);
					this.SendPropertyChanging();
					this._DenseRank = value;
					this.SendPropertyChanged("DenseRank");
					this.OnDenseRankChanged();
				}
			}
		}
		
		[Column(Storage="_NTile", DbType="TinyInt NOT NULL")]
		public byte NTile
		{
			get
			{
				return this._NTile;
			}
			set
			{
				if ((this._NTile != value))
				{
					this.OnNTileChanging(value);
					this.SendPropertyChanging();
					this._NTile = value;
					this.SendPropertyChanged("NTile");
					this.OnNTileChanged();
				}
			}
		}
		
		[Association(Name="DisallowedAbsoluteUri_DisallowedAbsoluteUris_MOST_POPULAR_ABSOLUTEURIS_BY_DOMAIN", Storage="_DisallowedAbsoluteUri", ThisKey="DisallowedAbsoluteUriID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public DisallowedAbsoluteUri DisallowedAbsoluteUri
		{
			get
			{
				return this._DisallowedAbsoluteUri.Entity;
			}
			set
			{
				DisallowedAbsoluteUri previousValue = this._DisallowedAbsoluteUri.Entity;
				if (((previousValue != value) 
							|| (this._DisallowedAbsoluteUri.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DisallowedAbsoluteUri.Entity = null;
						previousValue.DisallowedAbsoluteUris_MOST_POPULAR_ABSOLUTEURIS_BY_DOMAIN = null;
					}
					this._DisallowedAbsoluteUri.Entity = value;
					if ((value != null))
					{
						value.DisallowedAbsoluteUris_MOST_POPULAR_ABSOLUTEURIS_BY_DOMAIN = this;
						this._DisallowedAbsoluteUriID = value.ID;
					}
					else
					{
						this._DisallowedAbsoluteUriID = default(long);
					}
					this.SendPropertyChanged("DisallowedAbsoluteUri");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="rpt.DisallowedAbsoluteUris_MOST_POPULAR_ABSOLUTEURIS_BY_EXTENSIONS")]
	public partial class DisallowedAbsoluteUris_MOST_POPULAR_ABSOLUTEURIS_BY_EXTENSION : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RowNumber;
		
		private System.Nullable<System.DateTime> _InitiallyDiscovered;
		
		private System.DateTime _LastDiscovered;
		
		private long _DisallowedAbsoluteUriID;
		
		private int _Count;
		
		private System.Nullable<short> _DaysSinceInitiallyDiscovered;
		
		private short _DaysSinceLastDiscovered;
		
		private System.Nullable<double> _Strength;
		
		private int _Rank;
		
		private int _DenseRank;
		
		private byte _NTile;
		
		private EntityRef<DisallowedAbsoluteUri> _DisallowedAbsoluteUri;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRowNumberChanging(int value);
    partial void OnRowNumberChanged();
    partial void OnInitiallyDiscoveredChanging(System.Nullable<System.DateTime> value);
    partial void OnInitiallyDiscoveredChanged();
    partial void OnLastDiscoveredChanging(System.DateTime value);
    partial void OnLastDiscoveredChanged();
    partial void OnDisallowedAbsoluteUriIDChanging(long value);
    partial void OnDisallowedAbsoluteUriIDChanged();
    partial void OnCountChanging(int value);
    partial void OnCountChanged();
    partial void OnDaysSinceInitiallyDiscoveredChanging(System.Nullable<short> value);
    partial void OnDaysSinceInitiallyDiscoveredChanged();
    partial void OnDaysSinceLastDiscoveredChanging(short value);
    partial void OnDaysSinceLastDiscoveredChanged();
    partial void OnStrengthChanging(System.Nullable<double> value);
    partial void OnStrengthChanged();
    partial void OnRankChanging(int value);
    partial void OnRankChanged();
    partial void OnDenseRankChanging(int value);
    partial void OnDenseRankChanged();
    partial void OnNTileChanging(byte value);
    partial void OnNTileChanged();
    #endregion
		
		public DisallowedAbsoluteUris_MOST_POPULAR_ABSOLUTEURIS_BY_EXTENSION()
		{
			this._DisallowedAbsoluteUri = default(EntityRef<DisallowedAbsoluteUri>);
			OnCreated();
		}
		
		[Column(Storage="_RowNumber", DbType="Int NOT NULL")]
		public int RowNumber
		{
			get
			{
				return this._RowNumber;
			}
			set
			{
				if ((this._RowNumber != value))
				{
					this.OnRowNumberChanging(value);
					this.SendPropertyChanging();
					this._RowNumber = value;
					this.SendPropertyChanged("RowNumber");
					this.OnRowNumberChanged();
				}
			}
		}
		
		[Column(Storage="_InitiallyDiscovered", DbType="DateTime")]
		public System.Nullable<System.DateTime> InitiallyDiscovered
		{
			get
			{
				return this._InitiallyDiscovered;
			}
			set
			{
				if ((this._InitiallyDiscovered != value))
				{
					this.OnInitiallyDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._InitiallyDiscovered = value;
					this.SendPropertyChanged("InitiallyDiscovered");
					this.OnInitiallyDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_LastDiscovered", DbType="DateTime NOT NULL")]
		public System.DateTime LastDiscovered
		{
			get
			{
				return this._LastDiscovered;
			}
			set
			{
				if ((this._LastDiscovered != value))
				{
					this.OnLastDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._LastDiscovered = value;
					this.SendPropertyChanged("LastDiscovered");
					this.OnLastDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_DisallowedAbsoluteUriID", DbType="BigInt NOT NULL", IsPrimaryKey=true)]
		public long DisallowedAbsoluteUriID
		{
			get
			{
				return this._DisallowedAbsoluteUriID;
			}
			set
			{
				if ((this._DisallowedAbsoluteUriID != value))
				{
					if (this._DisallowedAbsoluteUri.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDisallowedAbsoluteUriIDChanging(value);
					this.SendPropertyChanging();
					this._DisallowedAbsoluteUriID = value;
					this.SendPropertyChanged("DisallowedAbsoluteUriID");
					this.OnDisallowedAbsoluteUriIDChanged();
				}
			}
		}
		
		[Column(Storage="_Count", DbType="Int NOT NULL")]
		public int Count
		{
			get
			{
				return this._Count;
			}
			set
			{
				if ((this._Count != value))
				{
					this.OnCountChanging(value);
					this.SendPropertyChanging();
					this._Count = value;
					this.SendPropertyChanged("Count");
					this.OnCountChanged();
				}
			}
		}
		
		[Column(Storage="_DaysSinceInitiallyDiscovered", DbType="SmallInt")]
		public System.Nullable<short> DaysSinceInitiallyDiscovered
		{
			get
			{
				return this._DaysSinceInitiallyDiscovered;
			}
			set
			{
				if ((this._DaysSinceInitiallyDiscovered != value))
				{
					this.OnDaysSinceInitiallyDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._DaysSinceInitiallyDiscovered = value;
					this.SendPropertyChanged("DaysSinceInitiallyDiscovered");
					this.OnDaysSinceInitiallyDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_DaysSinceLastDiscovered", DbType="SmallInt NOT NULL")]
		public short DaysSinceLastDiscovered
		{
			get
			{
				return this._DaysSinceLastDiscovered;
			}
			set
			{
				if ((this._DaysSinceLastDiscovered != value))
				{
					this.OnDaysSinceLastDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._DaysSinceLastDiscovered = value;
					this.SendPropertyChanged("DaysSinceLastDiscovered");
					this.OnDaysSinceLastDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_Strength", DbType="Float")]
		public System.Nullable<double> Strength
		{
			get
			{
				return this._Strength;
			}
			set
			{
				if ((this._Strength != value))
				{
					this.OnStrengthChanging(value);
					this.SendPropertyChanging();
					this._Strength = value;
					this.SendPropertyChanged("Strength");
					this.OnStrengthChanged();
				}
			}
		}
		
		[Column(Storage="_Rank", DbType="Int NOT NULL")]
		public int Rank
		{
			get
			{
				return this._Rank;
			}
			set
			{
				if ((this._Rank != value))
				{
					this.OnRankChanging(value);
					this.SendPropertyChanging();
					this._Rank = value;
					this.SendPropertyChanged("Rank");
					this.OnRankChanged();
				}
			}
		}
		
		[Column(Storage="_DenseRank", DbType="Int NOT NULL")]
		public int DenseRank
		{
			get
			{
				return this._DenseRank;
			}
			set
			{
				if ((this._DenseRank != value))
				{
					this.OnDenseRankChanging(value);
					this.SendPropertyChanging();
					this._DenseRank = value;
					this.SendPropertyChanged("DenseRank");
					this.OnDenseRankChanged();
				}
			}
		}
		
		[Column(Storage="_NTile", DbType="TinyInt NOT NULL")]
		public byte NTile
		{
			get
			{
				return this._NTile;
			}
			set
			{
				if ((this._NTile != value))
				{
					this.OnNTileChanging(value);
					this.SendPropertyChanging();
					this._NTile = value;
					this.SendPropertyChanged("NTile");
					this.OnNTileChanged();
				}
			}
		}
		
		[Association(Name="DisallowedAbsoluteUri_DisallowedAbsoluteUris_MOST_POPULAR_ABSOLUTEURIS_BY_EXTENSI" +
			"ON", Storage="_DisallowedAbsoluteUri", ThisKey="DisallowedAbsoluteUriID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public DisallowedAbsoluteUri DisallowedAbsoluteUri
		{
			get
			{
				return this._DisallowedAbsoluteUri.Entity;
			}
			set
			{
				DisallowedAbsoluteUri previousValue = this._DisallowedAbsoluteUri.Entity;
				if (((previousValue != value) 
							|| (this._DisallowedAbsoluteUri.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DisallowedAbsoluteUri.Entity = null;
						previousValue.DisallowedAbsoluteUris_MOST_POPULAR_ABSOLUTEURIS_BY_EXTENSION = null;
					}
					this._DisallowedAbsoluteUri.Entity = value;
					if ((value != null))
					{
						value.DisallowedAbsoluteUris_MOST_POPULAR_ABSOLUTEURIS_BY_EXTENSION = this;
						this._DisallowedAbsoluteUriID = value.ID;
					}
					else
					{
						this._DisallowedAbsoluteUriID = default(long);
					}
					this.SendPropertyChanged("DisallowedAbsoluteUri");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="rpt.DisallowedAbsoluteUris_MOST_POPULAR_ABSOLUTEURIS_BY_HOSTS")]
	public partial class DisallowedAbsoluteUris_MOST_POPULAR_ABSOLUTEURIS_BY_HOST : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RowNumber;
		
		private System.Nullable<System.DateTime> _InitiallyDiscovered;
		
		private System.DateTime _LastDiscovered;
		
		private long _DisallowedAbsoluteUriID;
		
		private int _Count;
		
		private System.Nullable<short> _DaysSinceInitiallyDiscovered;
		
		private short _DaysSinceLastDiscovered;
		
		private System.Nullable<double> _Strength;
		
		private int _Rank;
		
		private int _DenseRank;
		
		private byte _NTile;
		
		private EntityRef<DisallowedAbsoluteUri> _DisallowedAbsoluteUri;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRowNumberChanging(int value);
    partial void OnRowNumberChanged();
    partial void OnInitiallyDiscoveredChanging(System.Nullable<System.DateTime> value);
    partial void OnInitiallyDiscoveredChanged();
    partial void OnLastDiscoveredChanging(System.DateTime value);
    partial void OnLastDiscoveredChanged();
    partial void OnDisallowedAbsoluteUriIDChanging(long value);
    partial void OnDisallowedAbsoluteUriIDChanged();
    partial void OnCountChanging(int value);
    partial void OnCountChanged();
    partial void OnDaysSinceInitiallyDiscoveredChanging(System.Nullable<short> value);
    partial void OnDaysSinceInitiallyDiscoveredChanged();
    partial void OnDaysSinceLastDiscoveredChanging(short value);
    partial void OnDaysSinceLastDiscoveredChanged();
    partial void OnStrengthChanging(System.Nullable<double> value);
    partial void OnStrengthChanged();
    partial void OnRankChanging(int value);
    partial void OnRankChanged();
    partial void OnDenseRankChanging(int value);
    partial void OnDenseRankChanged();
    partial void OnNTileChanging(byte value);
    partial void OnNTileChanged();
    #endregion
		
		public DisallowedAbsoluteUris_MOST_POPULAR_ABSOLUTEURIS_BY_HOST()
		{
			this._DisallowedAbsoluteUri = default(EntityRef<DisallowedAbsoluteUri>);
			OnCreated();
		}
		
		[Column(Storage="_RowNumber", DbType="Int NOT NULL")]
		public int RowNumber
		{
			get
			{
				return this._RowNumber;
			}
			set
			{
				if ((this._RowNumber != value))
				{
					this.OnRowNumberChanging(value);
					this.SendPropertyChanging();
					this._RowNumber = value;
					this.SendPropertyChanged("RowNumber");
					this.OnRowNumberChanged();
				}
			}
		}
		
		[Column(Storage="_InitiallyDiscovered", DbType="DateTime")]
		public System.Nullable<System.DateTime> InitiallyDiscovered
		{
			get
			{
				return this._InitiallyDiscovered;
			}
			set
			{
				if ((this._InitiallyDiscovered != value))
				{
					this.OnInitiallyDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._InitiallyDiscovered = value;
					this.SendPropertyChanged("InitiallyDiscovered");
					this.OnInitiallyDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_LastDiscovered", DbType="DateTime NOT NULL")]
		public System.DateTime LastDiscovered
		{
			get
			{
				return this._LastDiscovered;
			}
			set
			{
				if ((this._LastDiscovered != value))
				{
					this.OnLastDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._LastDiscovered = value;
					this.SendPropertyChanged("LastDiscovered");
					this.OnLastDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_DisallowedAbsoluteUriID", DbType="BigInt NOT NULL", IsPrimaryKey=true)]
		public long DisallowedAbsoluteUriID
		{
			get
			{
				return this._DisallowedAbsoluteUriID;
			}
			set
			{
				if ((this._DisallowedAbsoluteUriID != value))
				{
					if (this._DisallowedAbsoluteUri.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDisallowedAbsoluteUriIDChanging(value);
					this.SendPropertyChanging();
					this._DisallowedAbsoluteUriID = value;
					this.SendPropertyChanged("DisallowedAbsoluteUriID");
					this.OnDisallowedAbsoluteUriIDChanged();
				}
			}
		}
		
		[Column(Storage="_Count", DbType="Int NOT NULL")]
		public int Count
		{
			get
			{
				return this._Count;
			}
			set
			{
				if ((this._Count != value))
				{
					this.OnCountChanging(value);
					this.SendPropertyChanging();
					this._Count = value;
					this.SendPropertyChanged("Count");
					this.OnCountChanged();
				}
			}
		}
		
		[Column(Storage="_DaysSinceInitiallyDiscovered", DbType="SmallInt")]
		public System.Nullable<short> DaysSinceInitiallyDiscovered
		{
			get
			{
				return this._DaysSinceInitiallyDiscovered;
			}
			set
			{
				if ((this._DaysSinceInitiallyDiscovered != value))
				{
					this.OnDaysSinceInitiallyDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._DaysSinceInitiallyDiscovered = value;
					this.SendPropertyChanged("DaysSinceInitiallyDiscovered");
					this.OnDaysSinceInitiallyDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_DaysSinceLastDiscovered", DbType="SmallInt NOT NULL")]
		public short DaysSinceLastDiscovered
		{
			get
			{
				return this._DaysSinceLastDiscovered;
			}
			set
			{
				if ((this._DaysSinceLastDiscovered != value))
				{
					this.OnDaysSinceLastDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._DaysSinceLastDiscovered = value;
					this.SendPropertyChanged("DaysSinceLastDiscovered");
					this.OnDaysSinceLastDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_Strength", DbType="Float")]
		public System.Nullable<double> Strength
		{
			get
			{
				return this._Strength;
			}
			set
			{
				if ((this._Strength != value))
				{
					this.OnStrengthChanging(value);
					this.SendPropertyChanging();
					this._Strength = value;
					this.SendPropertyChanged("Strength");
					this.OnStrengthChanged();
				}
			}
		}
		
		[Column(Storage="_Rank", DbType="Int NOT NULL")]
		public int Rank
		{
			get
			{
				return this._Rank;
			}
			set
			{
				if ((this._Rank != value))
				{
					this.OnRankChanging(value);
					this.SendPropertyChanging();
					this._Rank = value;
					this.SendPropertyChanged("Rank");
					this.OnRankChanged();
				}
			}
		}
		
		[Column(Storage="_DenseRank", DbType="Int NOT NULL")]
		public int DenseRank
		{
			get
			{
				return this._DenseRank;
			}
			set
			{
				if ((this._DenseRank != value))
				{
					this.OnDenseRankChanging(value);
					this.SendPropertyChanging();
					this._DenseRank = value;
					this.SendPropertyChanged("DenseRank");
					this.OnDenseRankChanged();
				}
			}
		}
		
		[Column(Storage="_NTile", DbType="TinyInt NOT NULL")]
		public byte NTile
		{
			get
			{
				return this._NTile;
			}
			set
			{
				if ((this._NTile != value))
				{
					this.OnNTileChanging(value);
					this.SendPropertyChanging();
					this._NTile = value;
					this.SendPropertyChanged("NTile");
					this.OnNTileChanged();
				}
			}
		}
		
		[Association(Name="DisallowedAbsoluteUri_DisallowedAbsoluteUris_MOST_POPULAR_ABSOLUTEURIS_BY_HOST", Storage="_DisallowedAbsoluteUri", ThisKey="DisallowedAbsoluteUriID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public DisallowedAbsoluteUri DisallowedAbsoluteUri
		{
			get
			{
				return this._DisallowedAbsoluteUri.Entity;
			}
			set
			{
				DisallowedAbsoluteUri previousValue = this._DisallowedAbsoluteUri.Entity;
				if (((previousValue != value) 
							|| (this._DisallowedAbsoluteUri.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DisallowedAbsoluteUri.Entity = null;
						previousValue.DisallowedAbsoluteUris_MOST_POPULAR_ABSOLUTEURIS_BY_HOST = null;
					}
					this._DisallowedAbsoluteUri.Entity = value;
					if ((value != null))
					{
						value.DisallowedAbsoluteUris_MOST_POPULAR_ABSOLUTEURIS_BY_HOST = this;
						this._DisallowedAbsoluteUriID = value.ID;
					}
					else
					{
						this._DisallowedAbsoluteUriID = default(long);
					}
					this.SendPropertyChanged("DisallowedAbsoluteUri");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="rpt.DisallowedAbsoluteUris_MOST_POPULAR_ABSOLUTEURIS_BY_SCHEMES")]
	public partial class DisallowedAbsoluteUris_MOST_POPULAR_ABSOLUTEURIS_BY_SCHEME : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RowNumber;
		
		private System.Nullable<System.DateTime> _InitiallyDiscovered;
		
		private System.DateTime _LastDiscovered;
		
		private long _DisallowedAbsoluteUriID;
		
		private int _Count;
		
		private System.Nullable<short> _DaysSinceInitiallyDiscovered;
		
		private short _DaysSinceLastDiscovered;
		
		private System.Nullable<double> _Strength;
		
		private int _Rank;
		
		private int _DenseRank;
		
		private byte _NTile;
		
		private EntityRef<DisallowedAbsoluteUri> _DisallowedAbsoluteUri;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRowNumberChanging(int value);
    partial void OnRowNumberChanged();
    partial void OnInitiallyDiscoveredChanging(System.Nullable<System.DateTime> value);
    partial void OnInitiallyDiscoveredChanged();
    partial void OnLastDiscoveredChanging(System.DateTime value);
    partial void OnLastDiscoveredChanged();
    partial void OnDisallowedAbsoluteUriIDChanging(long value);
    partial void OnDisallowedAbsoluteUriIDChanged();
    partial void OnCountChanging(int value);
    partial void OnCountChanged();
    partial void OnDaysSinceInitiallyDiscoveredChanging(System.Nullable<short> value);
    partial void OnDaysSinceInitiallyDiscoveredChanged();
    partial void OnDaysSinceLastDiscoveredChanging(short value);
    partial void OnDaysSinceLastDiscoveredChanged();
    partial void OnStrengthChanging(System.Nullable<double> value);
    partial void OnStrengthChanged();
    partial void OnRankChanging(int value);
    partial void OnRankChanged();
    partial void OnDenseRankChanging(int value);
    partial void OnDenseRankChanged();
    partial void OnNTileChanging(byte value);
    partial void OnNTileChanged();
    #endregion
		
		public DisallowedAbsoluteUris_MOST_POPULAR_ABSOLUTEURIS_BY_SCHEME()
		{
			this._DisallowedAbsoluteUri = default(EntityRef<DisallowedAbsoluteUri>);
			OnCreated();
		}
		
		[Column(Storage="_RowNumber", DbType="Int NOT NULL")]
		public int RowNumber
		{
			get
			{
				return this._RowNumber;
			}
			set
			{
				if ((this._RowNumber != value))
				{
					this.OnRowNumberChanging(value);
					this.SendPropertyChanging();
					this._RowNumber = value;
					this.SendPropertyChanged("RowNumber");
					this.OnRowNumberChanged();
				}
			}
		}
		
		[Column(Storage="_InitiallyDiscovered", DbType="DateTime")]
		public System.Nullable<System.DateTime> InitiallyDiscovered
		{
			get
			{
				return this._InitiallyDiscovered;
			}
			set
			{
				if ((this._InitiallyDiscovered != value))
				{
					this.OnInitiallyDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._InitiallyDiscovered = value;
					this.SendPropertyChanged("InitiallyDiscovered");
					this.OnInitiallyDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_LastDiscovered", DbType="DateTime NOT NULL")]
		public System.DateTime LastDiscovered
		{
			get
			{
				return this._LastDiscovered;
			}
			set
			{
				if ((this._LastDiscovered != value))
				{
					this.OnLastDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._LastDiscovered = value;
					this.SendPropertyChanged("LastDiscovered");
					this.OnLastDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_DisallowedAbsoluteUriID", DbType="BigInt NOT NULL", IsPrimaryKey=true)]
		public long DisallowedAbsoluteUriID
		{
			get
			{
				return this._DisallowedAbsoluteUriID;
			}
			set
			{
				if ((this._DisallowedAbsoluteUriID != value))
				{
					if (this._DisallowedAbsoluteUri.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDisallowedAbsoluteUriIDChanging(value);
					this.SendPropertyChanging();
					this._DisallowedAbsoluteUriID = value;
					this.SendPropertyChanged("DisallowedAbsoluteUriID");
					this.OnDisallowedAbsoluteUriIDChanged();
				}
			}
		}
		
		[Column(Storage="_Count", DbType="Int NOT NULL")]
		public int Count
		{
			get
			{
				return this._Count;
			}
			set
			{
				if ((this._Count != value))
				{
					this.OnCountChanging(value);
					this.SendPropertyChanging();
					this._Count = value;
					this.SendPropertyChanged("Count");
					this.OnCountChanged();
				}
			}
		}
		
		[Column(Storage="_DaysSinceInitiallyDiscovered", DbType="SmallInt")]
		public System.Nullable<short> DaysSinceInitiallyDiscovered
		{
			get
			{
				return this._DaysSinceInitiallyDiscovered;
			}
			set
			{
				if ((this._DaysSinceInitiallyDiscovered != value))
				{
					this.OnDaysSinceInitiallyDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._DaysSinceInitiallyDiscovered = value;
					this.SendPropertyChanged("DaysSinceInitiallyDiscovered");
					this.OnDaysSinceInitiallyDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_DaysSinceLastDiscovered", DbType="SmallInt NOT NULL")]
		public short DaysSinceLastDiscovered
		{
			get
			{
				return this._DaysSinceLastDiscovered;
			}
			set
			{
				if ((this._DaysSinceLastDiscovered != value))
				{
					this.OnDaysSinceLastDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._DaysSinceLastDiscovered = value;
					this.SendPropertyChanged("DaysSinceLastDiscovered");
					this.OnDaysSinceLastDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_Strength", DbType="Float")]
		public System.Nullable<double> Strength
		{
			get
			{
				return this._Strength;
			}
			set
			{
				if ((this._Strength != value))
				{
					this.OnStrengthChanging(value);
					this.SendPropertyChanging();
					this._Strength = value;
					this.SendPropertyChanged("Strength");
					this.OnStrengthChanged();
				}
			}
		}
		
		[Column(Storage="_Rank", DbType="Int NOT NULL")]
		public int Rank
		{
			get
			{
				return this._Rank;
			}
			set
			{
				if ((this._Rank != value))
				{
					this.OnRankChanging(value);
					this.SendPropertyChanging();
					this._Rank = value;
					this.SendPropertyChanged("Rank");
					this.OnRankChanged();
				}
			}
		}
		
		[Column(Storage="_DenseRank", DbType="Int NOT NULL")]
		public int DenseRank
		{
			get
			{
				return this._DenseRank;
			}
			set
			{
				if ((this._DenseRank != value))
				{
					this.OnDenseRankChanging(value);
					this.SendPropertyChanging();
					this._DenseRank = value;
					this.SendPropertyChanged("DenseRank");
					this.OnDenseRankChanged();
				}
			}
		}
		
		[Column(Storage="_NTile", DbType="TinyInt NOT NULL")]
		public byte NTile
		{
			get
			{
				return this._NTile;
			}
			set
			{
				if ((this._NTile != value))
				{
					this.OnNTileChanging(value);
					this.SendPropertyChanging();
					this._NTile = value;
					this.SendPropertyChanged("NTile");
					this.OnNTileChanged();
				}
			}
		}
		
		[Association(Name="DisallowedAbsoluteUri_DisallowedAbsoluteUris_MOST_POPULAR_ABSOLUTEURIS_BY_SCHEME", Storage="_DisallowedAbsoluteUri", ThisKey="DisallowedAbsoluteUriID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public DisallowedAbsoluteUri DisallowedAbsoluteUri
		{
			get
			{
				return this._DisallowedAbsoluteUri.Entity;
			}
			set
			{
				DisallowedAbsoluteUri previousValue = this._DisallowedAbsoluteUri.Entity;
				if (((previousValue != value) 
							|| (this._DisallowedAbsoluteUri.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DisallowedAbsoluteUri.Entity = null;
						previousValue.DisallowedAbsoluteUris_MOST_POPULAR_ABSOLUTEURIS_BY_SCHEME = null;
					}
					this._DisallowedAbsoluteUri.Entity = value;
					if ((value != null))
					{
						value.DisallowedAbsoluteUris_MOST_POPULAR_ABSOLUTEURIS_BY_SCHEME = this;
						this._DisallowedAbsoluteUriID = value.ID;
					}
					else
					{
						this._DisallowedAbsoluteUriID = default(long);
					}
					this.SendPropertyChanged("DisallowedAbsoluteUri");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="rpt.DisallowedAbsoluteUris_MOST_POPULAR_DOMAINS_BY_ABSOLUTEURIS")]
	public partial class DisallowedAbsoluteUris_MOST_POPULAR_DOMAINS_BY_ABSOLUTEURI : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RowNumber;
		
		private System.Nullable<System.DateTime> _InitiallyDiscovered;
		
		private System.DateTime _LastDiscovered;
		
		private int _DomainID;
		
		private int _Count;
		
		private System.Nullable<short> _DaysSinceInitiallyDiscovered;
		
		private short _DaysSinceLastDiscovered;
		
		private System.Nullable<double> _Strength;
		
		private int _Rank;
		
		private int _DenseRank;
		
		private short _NTile;
		
		private EntityRef<Domain> _Domain;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRowNumberChanging(int value);
    partial void OnRowNumberChanged();
    partial void OnInitiallyDiscoveredChanging(System.Nullable<System.DateTime> value);
    partial void OnInitiallyDiscoveredChanged();
    partial void OnLastDiscoveredChanging(System.DateTime value);
    partial void OnLastDiscoveredChanged();
    partial void OnDomainIDChanging(int value);
    partial void OnDomainIDChanged();
    partial void OnCountChanging(int value);
    partial void OnCountChanged();
    partial void OnDaysSinceInitiallyDiscoveredChanging(System.Nullable<short> value);
    partial void OnDaysSinceInitiallyDiscoveredChanged();
    partial void OnDaysSinceLastDiscoveredChanging(short value);
    partial void OnDaysSinceLastDiscoveredChanged();
    partial void OnStrengthChanging(System.Nullable<double> value);
    partial void OnStrengthChanged();
    partial void OnRankChanging(int value);
    partial void OnRankChanged();
    partial void OnDenseRankChanging(int value);
    partial void OnDenseRankChanged();
    partial void OnNTileChanging(short value);
    partial void OnNTileChanged();
    #endregion
		
		public DisallowedAbsoluteUris_MOST_POPULAR_DOMAINS_BY_ABSOLUTEURI()
		{
			this._Domain = default(EntityRef<Domain>);
			OnCreated();
		}
		
		[Column(Storage="_RowNumber", DbType="Int NOT NULL")]
		public int RowNumber
		{
			get
			{
				return this._RowNumber;
			}
			set
			{
				if ((this._RowNumber != value))
				{
					this.OnRowNumberChanging(value);
					this.SendPropertyChanging();
					this._RowNumber = value;
					this.SendPropertyChanged("RowNumber");
					this.OnRowNumberChanged();
				}
			}
		}
		
		[Column(Storage="_InitiallyDiscovered", DbType="DateTime")]
		public System.Nullable<System.DateTime> InitiallyDiscovered
		{
			get
			{
				return this._InitiallyDiscovered;
			}
			set
			{
				if ((this._InitiallyDiscovered != value))
				{
					this.OnInitiallyDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._InitiallyDiscovered = value;
					this.SendPropertyChanged("InitiallyDiscovered");
					this.OnInitiallyDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_LastDiscovered", DbType="DateTime NOT NULL")]
		public System.DateTime LastDiscovered
		{
			get
			{
				return this._LastDiscovered;
			}
			set
			{
				if ((this._LastDiscovered != value))
				{
					this.OnLastDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._LastDiscovered = value;
					this.SendPropertyChanged("LastDiscovered");
					this.OnLastDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_DomainID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int DomainID
		{
			get
			{
				return this._DomainID;
			}
			set
			{
				if ((this._DomainID != value))
				{
					if (this._Domain.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDomainIDChanging(value);
					this.SendPropertyChanging();
					this._DomainID = value;
					this.SendPropertyChanged("DomainID");
					this.OnDomainIDChanged();
				}
			}
		}
		
		[Column(Storage="_Count", DbType="Int NOT NULL")]
		public int Count
		{
			get
			{
				return this._Count;
			}
			set
			{
				if ((this._Count != value))
				{
					this.OnCountChanging(value);
					this.SendPropertyChanging();
					this._Count = value;
					this.SendPropertyChanged("Count");
					this.OnCountChanged();
				}
			}
		}
		
		[Column(Storage="_DaysSinceInitiallyDiscovered", DbType="SmallInt")]
		public System.Nullable<short> DaysSinceInitiallyDiscovered
		{
			get
			{
				return this._DaysSinceInitiallyDiscovered;
			}
			set
			{
				if ((this._DaysSinceInitiallyDiscovered != value))
				{
					this.OnDaysSinceInitiallyDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._DaysSinceInitiallyDiscovered = value;
					this.SendPropertyChanged("DaysSinceInitiallyDiscovered");
					this.OnDaysSinceInitiallyDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_DaysSinceLastDiscovered", DbType="SmallInt NOT NULL")]
		public short DaysSinceLastDiscovered
		{
			get
			{
				return this._DaysSinceLastDiscovered;
			}
			set
			{
				if ((this._DaysSinceLastDiscovered != value))
				{
					this.OnDaysSinceLastDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._DaysSinceLastDiscovered = value;
					this.SendPropertyChanged("DaysSinceLastDiscovered");
					this.OnDaysSinceLastDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_Strength", DbType="Float")]
		public System.Nullable<double> Strength
		{
			get
			{
				return this._Strength;
			}
			set
			{
				if ((this._Strength != value))
				{
					this.OnStrengthChanging(value);
					this.SendPropertyChanging();
					this._Strength = value;
					this.SendPropertyChanged("Strength");
					this.OnStrengthChanged();
				}
			}
		}
		
		[Column(Storage="_Rank", DbType="Int NOT NULL")]
		public int Rank
		{
			get
			{
				return this._Rank;
			}
			set
			{
				if ((this._Rank != value))
				{
					this.OnRankChanging(value);
					this.SendPropertyChanging();
					this._Rank = value;
					this.SendPropertyChanged("Rank");
					this.OnRankChanged();
				}
			}
		}
		
		[Column(Storage="_DenseRank", DbType="Int NOT NULL")]
		public int DenseRank
		{
			get
			{
				return this._DenseRank;
			}
			set
			{
				if ((this._DenseRank != value))
				{
					this.OnDenseRankChanging(value);
					this.SendPropertyChanging();
					this._DenseRank = value;
					this.SendPropertyChanged("DenseRank");
					this.OnDenseRankChanged();
				}
			}
		}
		
		[Column(Storage="_NTile", DbType="SmallInt NOT NULL")]
		public short NTile
		{
			get
			{
				return this._NTile;
			}
			set
			{
				if ((this._NTile != value))
				{
					this.OnNTileChanging(value);
					this.SendPropertyChanging();
					this._NTile = value;
					this.SendPropertyChanged("NTile");
					this.OnNTileChanged();
				}
			}
		}
		
		[Association(Name="Domain_DisallowedAbsoluteUris_MOST_POPULAR_DOMAINS_BY_ABSOLUTEURI", Storage="_Domain", ThisKey="DomainID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Domain Domain
		{
			get
			{
				return this._Domain.Entity;
			}
			set
			{
				Domain previousValue = this._Domain.Entity;
				if (((previousValue != value) 
							|| (this._Domain.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Domain.Entity = null;
						previousValue.DisallowedAbsoluteUris_MOST_POPULAR_DOMAINS_BY_ABSOLUTEURI = null;
					}
					this._Domain.Entity = value;
					if ((value != null))
					{
						value.DisallowedAbsoluteUris_MOST_POPULAR_DOMAINS_BY_ABSOLUTEURI = this;
						this._DomainID = value.ID;
					}
					else
					{
						this._DomainID = default(int);
					}
					this.SendPropertyChanged("Domain");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="rpt.DisallowedAbsoluteUris_MOST_POPULAR_DOMAINS_BY_DOMAINS")]
	public partial class DisallowedAbsoluteUris_MOST_POPULAR_DOMAINS_BY_DOMAIN : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RowNumber;
		
		private System.Nullable<System.DateTime> _InitiallyDiscovered;
		
		private System.DateTime _LastDiscovered;
		
		private int _DomainID;
		
		private int _Count;
		
		private System.Nullable<short> _DaysSinceInitiallyDiscovered;
		
		private short _DaysSinceLastDiscovered;
		
		private System.Nullable<double> _Strength;
		
		private int _Rank;
		
		private int _DenseRank;
		
		private byte _NTile;
		
		private EntityRef<Domain> _Domain;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRowNumberChanging(int value);
    partial void OnRowNumberChanged();
    partial void OnInitiallyDiscoveredChanging(System.Nullable<System.DateTime> value);
    partial void OnInitiallyDiscoveredChanged();
    partial void OnLastDiscoveredChanging(System.DateTime value);
    partial void OnLastDiscoveredChanged();
    partial void OnDomainIDChanging(int value);
    partial void OnDomainIDChanged();
    partial void OnCountChanging(int value);
    partial void OnCountChanged();
    partial void OnDaysSinceInitiallyDiscoveredChanging(System.Nullable<short> value);
    partial void OnDaysSinceInitiallyDiscoveredChanged();
    partial void OnDaysSinceLastDiscoveredChanging(short value);
    partial void OnDaysSinceLastDiscoveredChanged();
    partial void OnStrengthChanging(System.Nullable<double> value);
    partial void OnStrengthChanged();
    partial void OnRankChanging(int value);
    partial void OnRankChanged();
    partial void OnDenseRankChanging(int value);
    partial void OnDenseRankChanged();
    partial void OnNTileChanging(byte value);
    partial void OnNTileChanged();
    #endregion
		
		public DisallowedAbsoluteUris_MOST_POPULAR_DOMAINS_BY_DOMAIN()
		{
			this._Domain = default(EntityRef<Domain>);
			OnCreated();
		}
		
		[Column(Storage="_RowNumber", DbType="Int NOT NULL")]
		public int RowNumber
		{
			get
			{
				return this._RowNumber;
			}
			set
			{
				if ((this._RowNumber != value))
				{
					this.OnRowNumberChanging(value);
					this.SendPropertyChanging();
					this._RowNumber = value;
					this.SendPropertyChanged("RowNumber");
					this.OnRowNumberChanged();
				}
			}
		}
		
		[Column(Storage="_InitiallyDiscovered", DbType="DateTime")]
		public System.Nullable<System.DateTime> InitiallyDiscovered
		{
			get
			{
				return this._InitiallyDiscovered;
			}
			set
			{
				if ((this._InitiallyDiscovered != value))
				{
					this.OnInitiallyDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._InitiallyDiscovered = value;
					this.SendPropertyChanged("InitiallyDiscovered");
					this.OnInitiallyDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_LastDiscovered", DbType="DateTime NOT NULL")]
		public System.DateTime LastDiscovered
		{
			get
			{
				return this._LastDiscovered;
			}
			set
			{
				if ((this._LastDiscovered != value))
				{
					this.OnLastDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._LastDiscovered = value;
					this.SendPropertyChanged("LastDiscovered");
					this.OnLastDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_DomainID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int DomainID
		{
			get
			{
				return this._DomainID;
			}
			set
			{
				if ((this._DomainID != value))
				{
					if (this._Domain.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDomainIDChanging(value);
					this.SendPropertyChanging();
					this._DomainID = value;
					this.SendPropertyChanged("DomainID");
					this.OnDomainIDChanged();
				}
			}
		}
		
		[Column(Storage="_Count", DbType="Int NOT NULL")]
		public int Count
		{
			get
			{
				return this._Count;
			}
			set
			{
				if ((this._Count != value))
				{
					this.OnCountChanging(value);
					this.SendPropertyChanging();
					this._Count = value;
					this.SendPropertyChanged("Count");
					this.OnCountChanged();
				}
			}
		}
		
		[Column(Storage="_DaysSinceInitiallyDiscovered", DbType="SmallInt")]
		public System.Nullable<short> DaysSinceInitiallyDiscovered
		{
			get
			{
				return this._DaysSinceInitiallyDiscovered;
			}
			set
			{
				if ((this._DaysSinceInitiallyDiscovered != value))
				{
					this.OnDaysSinceInitiallyDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._DaysSinceInitiallyDiscovered = value;
					this.SendPropertyChanged("DaysSinceInitiallyDiscovered");
					this.OnDaysSinceInitiallyDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_DaysSinceLastDiscovered", DbType="SmallInt NOT NULL")]
		public short DaysSinceLastDiscovered
		{
			get
			{
				return this._DaysSinceLastDiscovered;
			}
			set
			{
				if ((this._DaysSinceLastDiscovered != value))
				{
					this.OnDaysSinceLastDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._DaysSinceLastDiscovered = value;
					this.SendPropertyChanged("DaysSinceLastDiscovered");
					this.OnDaysSinceLastDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_Strength", DbType="Float")]
		public System.Nullable<double> Strength
		{
			get
			{
				return this._Strength;
			}
			set
			{
				if ((this._Strength != value))
				{
					this.OnStrengthChanging(value);
					this.SendPropertyChanging();
					this._Strength = value;
					this.SendPropertyChanged("Strength");
					this.OnStrengthChanged();
				}
			}
		}
		
		[Column(Storage="_Rank", DbType="Int NOT NULL")]
		public int Rank
		{
			get
			{
				return this._Rank;
			}
			set
			{
				if ((this._Rank != value))
				{
					this.OnRankChanging(value);
					this.SendPropertyChanging();
					this._Rank = value;
					this.SendPropertyChanged("Rank");
					this.OnRankChanged();
				}
			}
		}
		
		[Column(Storage="_DenseRank", DbType="Int NOT NULL")]
		public int DenseRank
		{
			get
			{
				return this._DenseRank;
			}
			set
			{
				if ((this._DenseRank != value))
				{
					this.OnDenseRankChanging(value);
					this.SendPropertyChanging();
					this._DenseRank = value;
					this.SendPropertyChanged("DenseRank");
					this.OnDenseRankChanged();
				}
			}
		}
		
		[Column(Storage="_NTile", DbType="TinyInt NOT NULL")]
		public byte NTile
		{
			get
			{
				return this._NTile;
			}
			set
			{
				if ((this._NTile != value))
				{
					this.OnNTileChanging(value);
					this.SendPropertyChanging();
					this._NTile = value;
					this.SendPropertyChanged("NTile");
					this.OnNTileChanged();
				}
			}
		}
		
		[Association(Name="Domain_DisallowedAbsoluteUris_MOST_POPULAR_DOMAINS_BY_DOMAIN", Storage="_Domain", ThisKey="DomainID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Domain Domain
		{
			get
			{
				return this._Domain.Entity;
			}
			set
			{
				Domain previousValue = this._Domain.Entity;
				if (((previousValue != value) 
							|| (this._Domain.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Domain.Entity = null;
						previousValue.DisallowedAbsoluteUris_MOST_POPULAR_DOMAINS_BY_DOMAIN = null;
					}
					this._Domain.Entity = value;
					if ((value != null))
					{
						value.DisallowedAbsoluteUris_MOST_POPULAR_DOMAINS_BY_DOMAIN = this;
						this._DomainID = value.ID;
					}
					else
					{
						this._DomainID = default(int);
					}
					this.SendPropertyChanged("Domain");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="rpt.DisallowedAbsoluteUris_MOST_POPULAR_DOMAINS_BY_EXTENSIONS")]
	public partial class DisallowedAbsoluteUris_MOST_POPULAR_DOMAINS_BY_EXTENSION : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RowNumber;
		
		private System.Nullable<System.DateTime> _InitiallyDiscovered;
		
		private System.DateTime _LastDiscovered;
		
		private int _DomainID;
		
		private int _Count;
		
		private System.Nullable<short> _DaysSinceInitiallyDiscovered;
		
		private short _DaysSinceLastDiscovered;
		
		private System.Nullable<double> _Strength;
		
		private int _Rank;
		
		private int _DenseRank;
		
		private byte _NTile;
		
		private EntityRef<Domain> _Domain;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRowNumberChanging(int value);
    partial void OnRowNumberChanged();
    partial void OnInitiallyDiscoveredChanging(System.Nullable<System.DateTime> value);
    partial void OnInitiallyDiscoveredChanged();
    partial void OnLastDiscoveredChanging(System.DateTime value);
    partial void OnLastDiscoveredChanged();
    partial void OnDomainIDChanging(int value);
    partial void OnDomainIDChanged();
    partial void OnCountChanging(int value);
    partial void OnCountChanged();
    partial void OnDaysSinceInitiallyDiscoveredChanging(System.Nullable<short> value);
    partial void OnDaysSinceInitiallyDiscoveredChanged();
    partial void OnDaysSinceLastDiscoveredChanging(short value);
    partial void OnDaysSinceLastDiscoveredChanged();
    partial void OnStrengthChanging(System.Nullable<double> value);
    partial void OnStrengthChanged();
    partial void OnRankChanging(int value);
    partial void OnRankChanged();
    partial void OnDenseRankChanging(int value);
    partial void OnDenseRankChanged();
    partial void OnNTileChanging(byte value);
    partial void OnNTileChanged();
    #endregion
		
		public DisallowedAbsoluteUris_MOST_POPULAR_DOMAINS_BY_EXTENSION()
		{
			this._Domain = default(EntityRef<Domain>);
			OnCreated();
		}
		
		[Column(Storage="_RowNumber", DbType="Int NOT NULL")]
		public int RowNumber
		{
			get
			{
				return this._RowNumber;
			}
			set
			{
				if ((this._RowNumber != value))
				{
					this.OnRowNumberChanging(value);
					this.SendPropertyChanging();
					this._RowNumber = value;
					this.SendPropertyChanged("RowNumber");
					this.OnRowNumberChanged();
				}
			}
		}
		
		[Column(Storage="_InitiallyDiscovered", DbType="DateTime")]
		public System.Nullable<System.DateTime> InitiallyDiscovered
		{
			get
			{
				return this._InitiallyDiscovered;
			}
			set
			{
				if ((this._InitiallyDiscovered != value))
				{
					this.OnInitiallyDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._InitiallyDiscovered = value;
					this.SendPropertyChanged("InitiallyDiscovered");
					this.OnInitiallyDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_LastDiscovered", DbType="DateTime NOT NULL")]
		public System.DateTime LastDiscovered
		{
			get
			{
				return this._LastDiscovered;
			}
			set
			{
				if ((this._LastDiscovered != value))
				{
					this.OnLastDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._LastDiscovered = value;
					this.SendPropertyChanged("LastDiscovered");
					this.OnLastDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_DomainID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int DomainID
		{
			get
			{
				return this._DomainID;
			}
			set
			{
				if ((this._DomainID != value))
				{
					if (this._Domain.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDomainIDChanging(value);
					this.SendPropertyChanging();
					this._DomainID = value;
					this.SendPropertyChanged("DomainID");
					this.OnDomainIDChanged();
				}
			}
		}
		
		[Column(Storage="_Count", DbType="Int NOT NULL")]
		public int Count
		{
			get
			{
				return this._Count;
			}
			set
			{
				if ((this._Count != value))
				{
					this.OnCountChanging(value);
					this.SendPropertyChanging();
					this._Count = value;
					this.SendPropertyChanged("Count");
					this.OnCountChanged();
				}
			}
		}
		
		[Column(Storage="_DaysSinceInitiallyDiscovered", DbType="SmallInt")]
		public System.Nullable<short> DaysSinceInitiallyDiscovered
		{
			get
			{
				return this._DaysSinceInitiallyDiscovered;
			}
			set
			{
				if ((this._DaysSinceInitiallyDiscovered != value))
				{
					this.OnDaysSinceInitiallyDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._DaysSinceInitiallyDiscovered = value;
					this.SendPropertyChanged("DaysSinceInitiallyDiscovered");
					this.OnDaysSinceInitiallyDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_DaysSinceLastDiscovered", DbType="SmallInt NOT NULL")]
		public short DaysSinceLastDiscovered
		{
			get
			{
				return this._DaysSinceLastDiscovered;
			}
			set
			{
				if ((this._DaysSinceLastDiscovered != value))
				{
					this.OnDaysSinceLastDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._DaysSinceLastDiscovered = value;
					this.SendPropertyChanged("DaysSinceLastDiscovered");
					this.OnDaysSinceLastDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_Strength", DbType="Float")]
		public System.Nullable<double> Strength
		{
			get
			{
				return this._Strength;
			}
			set
			{
				if ((this._Strength != value))
				{
					this.OnStrengthChanging(value);
					this.SendPropertyChanging();
					this._Strength = value;
					this.SendPropertyChanged("Strength");
					this.OnStrengthChanged();
				}
			}
		}
		
		[Column(Storage="_Rank", DbType="Int NOT NULL")]
		public int Rank
		{
			get
			{
				return this._Rank;
			}
			set
			{
				if ((this._Rank != value))
				{
					this.OnRankChanging(value);
					this.SendPropertyChanging();
					this._Rank = value;
					this.SendPropertyChanged("Rank");
					this.OnRankChanged();
				}
			}
		}
		
		[Column(Storage="_DenseRank", DbType="Int NOT NULL")]
		public int DenseRank
		{
			get
			{
				return this._DenseRank;
			}
			set
			{
				if ((this._DenseRank != value))
				{
					this.OnDenseRankChanging(value);
					this.SendPropertyChanging();
					this._DenseRank = value;
					this.SendPropertyChanged("DenseRank");
					this.OnDenseRankChanged();
				}
			}
		}
		
		[Column(Storage="_NTile", DbType="TinyInt NOT NULL")]
		public byte NTile
		{
			get
			{
				return this._NTile;
			}
			set
			{
				if ((this._NTile != value))
				{
					this.OnNTileChanging(value);
					this.SendPropertyChanging();
					this._NTile = value;
					this.SendPropertyChanged("NTile");
					this.OnNTileChanged();
				}
			}
		}
		
		[Association(Name="Domain_DisallowedAbsoluteUris_MOST_POPULAR_DOMAINS_BY_EXTENSION", Storage="_Domain", ThisKey="DomainID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Domain Domain
		{
			get
			{
				return this._Domain.Entity;
			}
			set
			{
				Domain previousValue = this._Domain.Entity;
				if (((previousValue != value) 
							|| (this._Domain.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Domain.Entity = null;
						previousValue.DisallowedAbsoluteUris_MOST_POPULAR_DOMAINS_BY_EXTENSION = null;
					}
					this._Domain.Entity = value;
					if ((value != null))
					{
						value.DisallowedAbsoluteUris_MOST_POPULAR_DOMAINS_BY_EXTENSION = this;
						this._DomainID = value.ID;
					}
					else
					{
						this._DomainID = default(int);
					}
					this.SendPropertyChanged("Domain");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="rpt.DisallowedAbsoluteUris_MOST_POPULAR_DOMAINS_BY_HOSTS")]
	public partial class DisallowedAbsoluteUris_MOST_POPULAR_DOMAINS_BY_HOST : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RowNumber;
		
		private System.Nullable<System.DateTime> _InitiallyDiscovered;
		
		private System.DateTime _LastDiscovered;
		
		private int _DomainID;
		
		private int _Count;
		
		private System.Nullable<short> _DaysSinceInitiallyDiscovered;
		
		private short _DaysSinceLastDiscovered;
		
		private System.Nullable<double> _Strength;
		
		private int _Rank;
		
		private int _DenseRank;
		
		private byte _NTile;
		
		private EntityRef<Domain> _Domain;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRowNumberChanging(int value);
    partial void OnRowNumberChanged();
    partial void OnInitiallyDiscoveredChanging(System.Nullable<System.DateTime> value);
    partial void OnInitiallyDiscoveredChanged();
    partial void OnLastDiscoveredChanging(System.DateTime value);
    partial void OnLastDiscoveredChanged();
    partial void OnDomainIDChanging(int value);
    partial void OnDomainIDChanged();
    partial void OnCountChanging(int value);
    partial void OnCountChanged();
    partial void OnDaysSinceInitiallyDiscoveredChanging(System.Nullable<short> value);
    partial void OnDaysSinceInitiallyDiscoveredChanged();
    partial void OnDaysSinceLastDiscoveredChanging(short value);
    partial void OnDaysSinceLastDiscoveredChanged();
    partial void OnStrengthChanging(System.Nullable<double> value);
    partial void OnStrengthChanged();
    partial void OnRankChanging(int value);
    partial void OnRankChanged();
    partial void OnDenseRankChanging(int value);
    partial void OnDenseRankChanged();
    partial void OnNTileChanging(byte value);
    partial void OnNTileChanged();
    #endregion
		
		public DisallowedAbsoluteUris_MOST_POPULAR_DOMAINS_BY_HOST()
		{
			this._Domain = default(EntityRef<Domain>);
			OnCreated();
		}
		
		[Column(Storage="_RowNumber", DbType="Int NOT NULL")]
		public int RowNumber
		{
			get
			{
				return this._RowNumber;
			}
			set
			{
				if ((this._RowNumber != value))
				{
					this.OnRowNumberChanging(value);
					this.SendPropertyChanging();
					this._RowNumber = value;
					this.SendPropertyChanged("RowNumber");
					this.OnRowNumberChanged();
				}
			}
		}
		
		[Column(Storage="_InitiallyDiscovered", DbType="DateTime")]
		public System.Nullable<System.DateTime> InitiallyDiscovered
		{
			get
			{
				return this._InitiallyDiscovered;
			}
			set
			{
				if ((this._InitiallyDiscovered != value))
				{
					this.OnInitiallyDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._InitiallyDiscovered = value;
					this.SendPropertyChanged("InitiallyDiscovered");
					this.OnInitiallyDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_LastDiscovered", DbType="DateTime NOT NULL")]
		public System.DateTime LastDiscovered
		{
			get
			{
				return this._LastDiscovered;
			}
			set
			{
				if ((this._LastDiscovered != value))
				{
					this.OnLastDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._LastDiscovered = value;
					this.SendPropertyChanged("LastDiscovered");
					this.OnLastDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_DomainID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int DomainID
		{
			get
			{
				return this._DomainID;
			}
			set
			{
				if ((this._DomainID != value))
				{
					if (this._Domain.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDomainIDChanging(value);
					this.SendPropertyChanging();
					this._DomainID = value;
					this.SendPropertyChanged("DomainID");
					this.OnDomainIDChanged();
				}
			}
		}
		
		[Column(Storage="_Count", DbType="Int NOT NULL")]
		public int Count
		{
			get
			{
				return this._Count;
			}
			set
			{
				if ((this._Count != value))
				{
					this.OnCountChanging(value);
					this.SendPropertyChanging();
					this._Count = value;
					this.SendPropertyChanged("Count");
					this.OnCountChanged();
				}
			}
		}
		
		[Column(Storage="_DaysSinceInitiallyDiscovered", DbType="SmallInt")]
		public System.Nullable<short> DaysSinceInitiallyDiscovered
		{
			get
			{
				return this._DaysSinceInitiallyDiscovered;
			}
			set
			{
				if ((this._DaysSinceInitiallyDiscovered != value))
				{
					this.OnDaysSinceInitiallyDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._DaysSinceInitiallyDiscovered = value;
					this.SendPropertyChanged("DaysSinceInitiallyDiscovered");
					this.OnDaysSinceInitiallyDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_DaysSinceLastDiscovered", DbType="SmallInt NOT NULL")]
		public short DaysSinceLastDiscovered
		{
			get
			{
				return this._DaysSinceLastDiscovered;
			}
			set
			{
				if ((this._DaysSinceLastDiscovered != value))
				{
					this.OnDaysSinceLastDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._DaysSinceLastDiscovered = value;
					this.SendPropertyChanged("DaysSinceLastDiscovered");
					this.OnDaysSinceLastDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_Strength", DbType="Float")]
		public System.Nullable<double> Strength
		{
			get
			{
				return this._Strength;
			}
			set
			{
				if ((this._Strength != value))
				{
					this.OnStrengthChanging(value);
					this.SendPropertyChanging();
					this._Strength = value;
					this.SendPropertyChanged("Strength");
					this.OnStrengthChanged();
				}
			}
		}
		
		[Column(Storage="_Rank", DbType="Int NOT NULL")]
		public int Rank
		{
			get
			{
				return this._Rank;
			}
			set
			{
				if ((this._Rank != value))
				{
					this.OnRankChanging(value);
					this.SendPropertyChanging();
					this._Rank = value;
					this.SendPropertyChanged("Rank");
					this.OnRankChanged();
				}
			}
		}
		
		[Column(Storage="_DenseRank", DbType="Int NOT NULL")]
		public int DenseRank
		{
			get
			{
				return this._DenseRank;
			}
			set
			{
				if ((this._DenseRank != value))
				{
					this.OnDenseRankChanging(value);
					this.SendPropertyChanging();
					this._DenseRank = value;
					this.SendPropertyChanged("DenseRank");
					this.OnDenseRankChanged();
				}
			}
		}
		
		[Column(Storage="_NTile", DbType="TinyInt NOT NULL")]
		public byte NTile
		{
			get
			{
				return this._NTile;
			}
			set
			{
				if ((this._NTile != value))
				{
					this.OnNTileChanging(value);
					this.SendPropertyChanging();
					this._NTile = value;
					this.SendPropertyChanged("NTile");
					this.OnNTileChanged();
				}
			}
		}
		
		[Association(Name="Domain_DisallowedAbsoluteUris_MOST_POPULAR_DOMAINS_BY_HOST", Storage="_Domain", ThisKey="DomainID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Domain Domain
		{
			get
			{
				return this._Domain.Entity;
			}
			set
			{
				Domain previousValue = this._Domain.Entity;
				if (((previousValue != value) 
							|| (this._Domain.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Domain.Entity = null;
						previousValue.DisallowedAbsoluteUris_MOST_POPULAR_DOMAINS_BY_HOST = null;
					}
					this._Domain.Entity = value;
					if ((value != null))
					{
						value.DisallowedAbsoluteUris_MOST_POPULAR_DOMAINS_BY_HOST = this;
						this._DomainID = value.ID;
					}
					else
					{
						this._DomainID = default(int);
					}
					this.SendPropertyChanged("Domain");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="rpt.DisallowedAbsoluteUris_MOST_POPULAR_DOMAINS_BY_SCHEMES")]
	public partial class DisallowedAbsoluteUris_MOST_POPULAR_DOMAINS_BY_SCHEME : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RowNumber;
		
		private System.Nullable<System.DateTime> _InitiallyDiscovered;
		
		private System.DateTime _LastDiscovered;
		
		private int _DomainID;
		
		private int _Count;
		
		private System.Nullable<short> _DaysSinceInitiallyDiscovered;
		
		private short _DaysSinceLastDiscovered;
		
		private System.Nullable<double> _Strength;
		
		private int _Rank;
		
		private int _DenseRank;
		
		private byte _NTile;
		
		private EntityRef<Domain> _Domain;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRowNumberChanging(int value);
    partial void OnRowNumberChanged();
    partial void OnInitiallyDiscoveredChanging(System.Nullable<System.DateTime> value);
    partial void OnInitiallyDiscoveredChanged();
    partial void OnLastDiscoveredChanging(System.DateTime value);
    partial void OnLastDiscoveredChanged();
    partial void OnDomainIDChanging(int value);
    partial void OnDomainIDChanged();
    partial void OnCountChanging(int value);
    partial void OnCountChanged();
    partial void OnDaysSinceInitiallyDiscoveredChanging(System.Nullable<short> value);
    partial void OnDaysSinceInitiallyDiscoveredChanged();
    partial void OnDaysSinceLastDiscoveredChanging(short value);
    partial void OnDaysSinceLastDiscoveredChanged();
    partial void OnStrengthChanging(System.Nullable<double> value);
    partial void OnStrengthChanged();
    partial void OnRankChanging(int value);
    partial void OnRankChanged();
    partial void OnDenseRankChanging(int value);
    partial void OnDenseRankChanged();
    partial void OnNTileChanging(byte value);
    partial void OnNTileChanged();
    #endregion
		
		public DisallowedAbsoluteUris_MOST_POPULAR_DOMAINS_BY_SCHEME()
		{
			this._Domain = default(EntityRef<Domain>);
			OnCreated();
		}
		
		[Column(Storage="_RowNumber", DbType="Int NOT NULL")]
		public int RowNumber
		{
			get
			{
				return this._RowNumber;
			}
			set
			{
				if ((this._RowNumber != value))
				{
					this.OnRowNumberChanging(value);
					this.SendPropertyChanging();
					this._RowNumber = value;
					this.SendPropertyChanged("RowNumber");
					this.OnRowNumberChanged();
				}
			}
		}
		
		[Column(Storage="_InitiallyDiscovered", DbType="DateTime")]
		public System.Nullable<System.DateTime> InitiallyDiscovered
		{
			get
			{
				return this._InitiallyDiscovered;
			}
			set
			{
				if ((this._InitiallyDiscovered != value))
				{
					this.OnInitiallyDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._InitiallyDiscovered = value;
					this.SendPropertyChanged("InitiallyDiscovered");
					this.OnInitiallyDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_LastDiscovered", DbType="DateTime NOT NULL")]
		public System.DateTime LastDiscovered
		{
			get
			{
				return this._LastDiscovered;
			}
			set
			{
				if ((this._LastDiscovered != value))
				{
					this.OnLastDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._LastDiscovered = value;
					this.SendPropertyChanged("LastDiscovered");
					this.OnLastDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_DomainID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int DomainID
		{
			get
			{
				return this._DomainID;
			}
			set
			{
				if ((this._DomainID != value))
				{
					if (this._Domain.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDomainIDChanging(value);
					this.SendPropertyChanging();
					this._DomainID = value;
					this.SendPropertyChanged("DomainID");
					this.OnDomainIDChanged();
				}
			}
		}
		
		[Column(Storage="_Count", DbType="Int NOT NULL")]
		public int Count
		{
			get
			{
				return this._Count;
			}
			set
			{
				if ((this._Count != value))
				{
					this.OnCountChanging(value);
					this.SendPropertyChanging();
					this._Count = value;
					this.SendPropertyChanged("Count");
					this.OnCountChanged();
				}
			}
		}
		
		[Column(Storage="_DaysSinceInitiallyDiscovered", DbType="SmallInt")]
		public System.Nullable<short> DaysSinceInitiallyDiscovered
		{
			get
			{
				return this._DaysSinceInitiallyDiscovered;
			}
			set
			{
				if ((this._DaysSinceInitiallyDiscovered != value))
				{
					this.OnDaysSinceInitiallyDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._DaysSinceInitiallyDiscovered = value;
					this.SendPropertyChanged("DaysSinceInitiallyDiscovered");
					this.OnDaysSinceInitiallyDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_DaysSinceLastDiscovered", DbType="SmallInt NOT NULL")]
		public short DaysSinceLastDiscovered
		{
			get
			{
				return this._DaysSinceLastDiscovered;
			}
			set
			{
				if ((this._DaysSinceLastDiscovered != value))
				{
					this.OnDaysSinceLastDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._DaysSinceLastDiscovered = value;
					this.SendPropertyChanged("DaysSinceLastDiscovered");
					this.OnDaysSinceLastDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_Strength", DbType="Float")]
		public System.Nullable<double> Strength
		{
			get
			{
				return this._Strength;
			}
			set
			{
				if ((this._Strength != value))
				{
					this.OnStrengthChanging(value);
					this.SendPropertyChanging();
					this._Strength = value;
					this.SendPropertyChanged("Strength");
					this.OnStrengthChanged();
				}
			}
		}
		
		[Column(Storage="_Rank", DbType="Int NOT NULL")]
		public int Rank
		{
			get
			{
				return this._Rank;
			}
			set
			{
				if ((this._Rank != value))
				{
					this.OnRankChanging(value);
					this.SendPropertyChanging();
					this._Rank = value;
					this.SendPropertyChanged("Rank");
					this.OnRankChanged();
				}
			}
		}
		
		[Column(Storage="_DenseRank", DbType="Int NOT NULL")]
		public int DenseRank
		{
			get
			{
				return this._DenseRank;
			}
			set
			{
				if ((this._DenseRank != value))
				{
					this.OnDenseRankChanging(value);
					this.SendPropertyChanging();
					this._DenseRank = value;
					this.SendPropertyChanged("DenseRank");
					this.OnDenseRankChanged();
				}
			}
		}
		
		[Column(Storage="_NTile", DbType="TinyInt NOT NULL")]
		public byte NTile
		{
			get
			{
				return this._NTile;
			}
			set
			{
				if ((this._NTile != value))
				{
					this.OnNTileChanging(value);
					this.SendPropertyChanging();
					this._NTile = value;
					this.SendPropertyChanged("NTile");
					this.OnNTileChanged();
				}
			}
		}
		
		[Association(Name="Domain_DisallowedAbsoluteUris_MOST_POPULAR_DOMAINS_BY_SCHEME", Storage="_Domain", ThisKey="DomainID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Domain Domain
		{
			get
			{
				return this._Domain.Entity;
			}
			set
			{
				Domain previousValue = this._Domain.Entity;
				if (((previousValue != value) 
							|| (this._Domain.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Domain.Entity = null;
						previousValue.DisallowedAbsoluteUris_MOST_POPULAR_DOMAINS_BY_SCHEME = null;
					}
					this._Domain.Entity = value;
					if ((value != null))
					{
						value.DisallowedAbsoluteUris_MOST_POPULAR_DOMAINS_BY_SCHEME = this;
						this._DomainID = value.ID;
					}
					else
					{
						this._DomainID = default(int);
					}
					this.SendPropertyChanged("Domain");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="rpt.DisallowedAbsoluteUris_MOST_POPULAR_EXTENSIONS_BY_ABSOLUTEURIS")]
	public partial class DisallowedAbsoluteUris_MOST_POPULAR_EXTENSIONS_BY_ABSOLUTEURI : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RowNumber;
		
		private System.Nullable<System.DateTime> _InitiallyDiscovered;
		
		private System.DateTime _LastDiscovered;
		
		private int _ExtensionID;
		
		private int _Count;
		
		private System.Nullable<short> _DaysSinceInitiallyDiscovered;
		
		private short _DaysSinceLastDiscovered;
		
		private System.Nullable<double> _Strength;
		
		private int _Rank;
		
		private int _DenseRank;
		
		private byte _NTile;
		
		private EntityRef<Extension> _Extension;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRowNumberChanging(int value);
    partial void OnRowNumberChanged();
    partial void OnInitiallyDiscoveredChanging(System.Nullable<System.DateTime> value);
    partial void OnInitiallyDiscoveredChanged();
    partial void OnLastDiscoveredChanging(System.DateTime value);
    partial void OnLastDiscoveredChanged();
    partial void OnExtensionIDChanging(int value);
    partial void OnExtensionIDChanged();
    partial void OnCountChanging(int value);
    partial void OnCountChanged();
    partial void OnDaysSinceInitiallyDiscoveredChanging(System.Nullable<short> value);
    partial void OnDaysSinceInitiallyDiscoveredChanged();
    partial void OnDaysSinceLastDiscoveredChanging(short value);
    partial void OnDaysSinceLastDiscoveredChanged();
    partial void OnStrengthChanging(System.Nullable<double> value);
    partial void OnStrengthChanged();
    partial void OnRankChanging(int value);
    partial void OnRankChanged();
    partial void OnDenseRankChanging(int value);
    partial void OnDenseRankChanged();
    partial void OnNTileChanging(byte value);
    partial void OnNTileChanged();
    #endregion
		
		public DisallowedAbsoluteUris_MOST_POPULAR_EXTENSIONS_BY_ABSOLUTEURI()
		{
			this._Extension = default(EntityRef<Extension>);
			OnCreated();
		}
		
		[Column(Storage="_RowNumber", DbType="Int NOT NULL")]
		public int RowNumber
		{
			get
			{
				return this._RowNumber;
			}
			set
			{
				if ((this._RowNumber != value))
				{
					this.OnRowNumberChanging(value);
					this.SendPropertyChanging();
					this._RowNumber = value;
					this.SendPropertyChanged("RowNumber");
					this.OnRowNumberChanged();
				}
			}
		}
		
		[Column(Storage="_InitiallyDiscovered", DbType="DateTime")]
		public System.Nullable<System.DateTime> InitiallyDiscovered
		{
			get
			{
				return this._InitiallyDiscovered;
			}
			set
			{
				if ((this._InitiallyDiscovered != value))
				{
					this.OnInitiallyDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._InitiallyDiscovered = value;
					this.SendPropertyChanged("InitiallyDiscovered");
					this.OnInitiallyDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_LastDiscovered", DbType="DateTime NOT NULL")]
		public System.DateTime LastDiscovered
		{
			get
			{
				return this._LastDiscovered;
			}
			set
			{
				if ((this._LastDiscovered != value))
				{
					this.OnLastDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._LastDiscovered = value;
					this.SendPropertyChanged("LastDiscovered");
					this.OnLastDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_ExtensionID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ExtensionID
		{
			get
			{
				return this._ExtensionID;
			}
			set
			{
				if ((this._ExtensionID != value))
				{
					if (this._Extension.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnExtensionIDChanging(value);
					this.SendPropertyChanging();
					this._ExtensionID = value;
					this.SendPropertyChanged("ExtensionID");
					this.OnExtensionIDChanged();
				}
			}
		}
		
		[Column(Storage="_Count", DbType="Int NOT NULL")]
		public int Count
		{
			get
			{
				return this._Count;
			}
			set
			{
				if ((this._Count != value))
				{
					this.OnCountChanging(value);
					this.SendPropertyChanging();
					this._Count = value;
					this.SendPropertyChanged("Count");
					this.OnCountChanged();
				}
			}
		}
		
		[Column(Storage="_DaysSinceInitiallyDiscovered", DbType="SmallInt")]
		public System.Nullable<short> DaysSinceInitiallyDiscovered
		{
			get
			{
				return this._DaysSinceInitiallyDiscovered;
			}
			set
			{
				if ((this._DaysSinceInitiallyDiscovered != value))
				{
					this.OnDaysSinceInitiallyDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._DaysSinceInitiallyDiscovered = value;
					this.SendPropertyChanged("DaysSinceInitiallyDiscovered");
					this.OnDaysSinceInitiallyDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_DaysSinceLastDiscovered", DbType="SmallInt NOT NULL")]
		public short DaysSinceLastDiscovered
		{
			get
			{
				return this._DaysSinceLastDiscovered;
			}
			set
			{
				if ((this._DaysSinceLastDiscovered != value))
				{
					this.OnDaysSinceLastDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._DaysSinceLastDiscovered = value;
					this.SendPropertyChanged("DaysSinceLastDiscovered");
					this.OnDaysSinceLastDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_Strength", DbType="Float")]
		public System.Nullable<double> Strength
		{
			get
			{
				return this._Strength;
			}
			set
			{
				if ((this._Strength != value))
				{
					this.OnStrengthChanging(value);
					this.SendPropertyChanging();
					this._Strength = value;
					this.SendPropertyChanged("Strength");
					this.OnStrengthChanged();
				}
			}
		}
		
		[Column(Storage="_Rank", DbType="Int NOT NULL")]
		public int Rank
		{
			get
			{
				return this._Rank;
			}
			set
			{
				if ((this._Rank != value))
				{
					this.OnRankChanging(value);
					this.SendPropertyChanging();
					this._Rank = value;
					this.SendPropertyChanged("Rank");
					this.OnRankChanged();
				}
			}
		}
		
		[Column(Storage="_DenseRank", DbType="Int NOT NULL")]
		public int DenseRank
		{
			get
			{
				return this._DenseRank;
			}
			set
			{
				if ((this._DenseRank != value))
				{
					this.OnDenseRankChanging(value);
					this.SendPropertyChanging();
					this._DenseRank = value;
					this.SendPropertyChanged("DenseRank");
					this.OnDenseRankChanged();
				}
			}
		}
		
		[Column(Storage="_NTile", DbType="TinyInt NOT NULL")]
		public byte NTile
		{
			get
			{
				return this._NTile;
			}
			set
			{
				if ((this._NTile != value))
				{
					this.OnNTileChanging(value);
					this.SendPropertyChanging();
					this._NTile = value;
					this.SendPropertyChanged("NTile");
					this.OnNTileChanged();
				}
			}
		}
		
		[Association(Name="Extension_DisallowedAbsoluteUris_MOST_POPULAR_EXTENSIONS_BY_ABSOLUTEURI", Storage="_Extension", ThisKey="ExtensionID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Extension Extension
		{
			get
			{
				return this._Extension.Entity;
			}
			set
			{
				Extension previousValue = this._Extension.Entity;
				if (((previousValue != value) 
							|| (this._Extension.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Extension.Entity = null;
						previousValue.DisallowedAbsoluteUris_MOST_POPULAR_EXTENSIONS_BY_ABSOLUTEURI = null;
					}
					this._Extension.Entity = value;
					if ((value != null))
					{
						value.DisallowedAbsoluteUris_MOST_POPULAR_EXTENSIONS_BY_ABSOLUTEURI = this;
						this._ExtensionID = value.ID;
					}
					else
					{
						this._ExtensionID = default(int);
					}
					this.SendPropertyChanged("Extension");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="rpt.DisallowedAbsoluteUris_MOST_POPULAR_EXTENSIONS_BY_DOMAINS")]
	public partial class DisallowedAbsoluteUris_MOST_POPULAR_EXTENSIONS_BY_DOMAIN : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RowNumber;
		
		private System.Nullable<System.DateTime> _InitiallyDiscovered;
		
		private System.DateTime _LastDiscovered;
		
		private int _ExtensionID;
		
		private int _Count;
		
		private System.Nullable<short> _DaysSinceInitiallyDiscovered;
		
		private short _DaysSinceLastDiscovered;
		
		private System.Nullable<double> _Strength;
		
		private int _Rank;
		
		private int _DenseRank;
		
		private byte _NTile;
		
		private EntityRef<Extension> _Extension;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRowNumberChanging(int value);
    partial void OnRowNumberChanged();
    partial void OnInitiallyDiscoveredChanging(System.Nullable<System.DateTime> value);
    partial void OnInitiallyDiscoveredChanged();
    partial void OnLastDiscoveredChanging(System.DateTime value);
    partial void OnLastDiscoveredChanged();
    partial void OnExtensionIDChanging(int value);
    partial void OnExtensionIDChanged();
    partial void OnCountChanging(int value);
    partial void OnCountChanged();
    partial void OnDaysSinceInitiallyDiscoveredChanging(System.Nullable<short> value);
    partial void OnDaysSinceInitiallyDiscoveredChanged();
    partial void OnDaysSinceLastDiscoveredChanging(short value);
    partial void OnDaysSinceLastDiscoveredChanged();
    partial void OnStrengthChanging(System.Nullable<double> value);
    partial void OnStrengthChanged();
    partial void OnRankChanging(int value);
    partial void OnRankChanged();
    partial void OnDenseRankChanging(int value);
    partial void OnDenseRankChanged();
    partial void OnNTileChanging(byte value);
    partial void OnNTileChanged();
    #endregion
		
		public DisallowedAbsoluteUris_MOST_POPULAR_EXTENSIONS_BY_DOMAIN()
		{
			this._Extension = default(EntityRef<Extension>);
			OnCreated();
		}
		
		[Column(Storage="_RowNumber", DbType="Int NOT NULL")]
		public int RowNumber
		{
			get
			{
				return this._RowNumber;
			}
			set
			{
				if ((this._RowNumber != value))
				{
					this.OnRowNumberChanging(value);
					this.SendPropertyChanging();
					this._RowNumber = value;
					this.SendPropertyChanged("RowNumber");
					this.OnRowNumberChanged();
				}
			}
		}
		
		[Column(Storage="_InitiallyDiscovered", DbType="DateTime")]
		public System.Nullable<System.DateTime> InitiallyDiscovered
		{
			get
			{
				return this._InitiallyDiscovered;
			}
			set
			{
				if ((this._InitiallyDiscovered != value))
				{
					this.OnInitiallyDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._InitiallyDiscovered = value;
					this.SendPropertyChanged("InitiallyDiscovered");
					this.OnInitiallyDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_LastDiscovered", DbType="DateTime NOT NULL")]
		public System.DateTime LastDiscovered
		{
			get
			{
				return this._LastDiscovered;
			}
			set
			{
				if ((this._LastDiscovered != value))
				{
					this.OnLastDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._LastDiscovered = value;
					this.SendPropertyChanged("LastDiscovered");
					this.OnLastDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_ExtensionID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ExtensionID
		{
			get
			{
				return this._ExtensionID;
			}
			set
			{
				if ((this._ExtensionID != value))
				{
					if (this._Extension.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnExtensionIDChanging(value);
					this.SendPropertyChanging();
					this._ExtensionID = value;
					this.SendPropertyChanged("ExtensionID");
					this.OnExtensionIDChanged();
				}
			}
		}
		
		[Column(Storage="_Count", DbType="Int NOT NULL")]
		public int Count
		{
			get
			{
				return this._Count;
			}
			set
			{
				if ((this._Count != value))
				{
					this.OnCountChanging(value);
					this.SendPropertyChanging();
					this._Count = value;
					this.SendPropertyChanged("Count");
					this.OnCountChanged();
				}
			}
		}
		
		[Column(Storage="_DaysSinceInitiallyDiscovered", DbType="SmallInt")]
		public System.Nullable<short> DaysSinceInitiallyDiscovered
		{
			get
			{
				return this._DaysSinceInitiallyDiscovered;
			}
			set
			{
				if ((this._DaysSinceInitiallyDiscovered != value))
				{
					this.OnDaysSinceInitiallyDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._DaysSinceInitiallyDiscovered = value;
					this.SendPropertyChanged("DaysSinceInitiallyDiscovered");
					this.OnDaysSinceInitiallyDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_DaysSinceLastDiscovered", DbType="SmallInt NOT NULL")]
		public short DaysSinceLastDiscovered
		{
			get
			{
				return this._DaysSinceLastDiscovered;
			}
			set
			{
				if ((this._DaysSinceLastDiscovered != value))
				{
					this.OnDaysSinceLastDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._DaysSinceLastDiscovered = value;
					this.SendPropertyChanged("DaysSinceLastDiscovered");
					this.OnDaysSinceLastDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_Strength", DbType="Float")]
		public System.Nullable<double> Strength
		{
			get
			{
				return this._Strength;
			}
			set
			{
				if ((this._Strength != value))
				{
					this.OnStrengthChanging(value);
					this.SendPropertyChanging();
					this._Strength = value;
					this.SendPropertyChanged("Strength");
					this.OnStrengthChanged();
				}
			}
		}
		
		[Column(Storage="_Rank", DbType="Int NOT NULL")]
		public int Rank
		{
			get
			{
				return this._Rank;
			}
			set
			{
				if ((this._Rank != value))
				{
					this.OnRankChanging(value);
					this.SendPropertyChanging();
					this._Rank = value;
					this.SendPropertyChanged("Rank");
					this.OnRankChanged();
				}
			}
		}
		
		[Column(Storage="_DenseRank", DbType="Int NOT NULL")]
		public int DenseRank
		{
			get
			{
				return this._DenseRank;
			}
			set
			{
				if ((this._DenseRank != value))
				{
					this.OnDenseRankChanging(value);
					this.SendPropertyChanging();
					this._DenseRank = value;
					this.SendPropertyChanged("DenseRank");
					this.OnDenseRankChanged();
				}
			}
		}
		
		[Column(Storage="_NTile", DbType="TinyInt NOT NULL")]
		public byte NTile
		{
			get
			{
				return this._NTile;
			}
			set
			{
				if ((this._NTile != value))
				{
					this.OnNTileChanging(value);
					this.SendPropertyChanging();
					this._NTile = value;
					this.SendPropertyChanged("NTile");
					this.OnNTileChanged();
				}
			}
		}
		
		[Association(Name="Extension_DisallowedAbsoluteUris_MOST_POPULAR_EXTENSIONS_BY_DOMAIN", Storage="_Extension", ThisKey="ExtensionID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Extension Extension
		{
			get
			{
				return this._Extension.Entity;
			}
			set
			{
				Extension previousValue = this._Extension.Entity;
				if (((previousValue != value) 
							|| (this._Extension.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Extension.Entity = null;
						previousValue.DisallowedAbsoluteUris_MOST_POPULAR_EXTENSIONS_BY_DOMAIN = null;
					}
					this._Extension.Entity = value;
					if ((value != null))
					{
						value.DisallowedAbsoluteUris_MOST_POPULAR_EXTENSIONS_BY_DOMAIN = this;
						this._ExtensionID = value.ID;
					}
					else
					{
						this._ExtensionID = default(int);
					}
					this.SendPropertyChanged("Extension");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="rpt.DisallowedAbsoluteUris_MOST_POPULAR_EXTENSIONS_BY_EXTENSIONS")]
	public partial class DisallowedAbsoluteUris_MOST_POPULAR_EXTENSIONS_BY_EXTENSION : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RowNumber;
		
		private System.Nullable<System.DateTime> _InitiallyDiscovered;
		
		private System.DateTime _LastDiscovered;
		
		private int _ExtensionID;
		
		private int _Count;
		
		private System.Nullable<short> _DaysSinceInitiallyDiscovered;
		
		private short _DaysSinceLastDiscovered;
		
		private System.Nullable<double> _Strength;
		
		private int _Rank;
		
		private int _DenseRank;
		
		private byte _NTile;
		
		private EntityRef<Extension> _Extension;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRowNumberChanging(int value);
    partial void OnRowNumberChanged();
    partial void OnInitiallyDiscoveredChanging(System.Nullable<System.DateTime> value);
    partial void OnInitiallyDiscoveredChanged();
    partial void OnLastDiscoveredChanging(System.DateTime value);
    partial void OnLastDiscoveredChanged();
    partial void OnExtensionIDChanging(int value);
    partial void OnExtensionIDChanged();
    partial void OnCountChanging(int value);
    partial void OnCountChanged();
    partial void OnDaysSinceInitiallyDiscoveredChanging(System.Nullable<short> value);
    partial void OnDaysSinceInitiallyDiscoveredChanged();
    partial void OnDaysSinceLastDiscoveredChanging(short value);
    partial void OnDaysSinceLastDiscoveredChanged();
    partial void OnStrengthChanging(System.Nullable<double> value);
    partial void OnStrengthChanged();
    partial void OnRankChanging(int value);
    partial void OnRankChanged();
    partial void OnDenseRankChanging(int value);
    partial void OnDenseRankChanged();
    partial void OnNTileChanging(byte value);
    partial void OnNTileChanged();
    #endregion
		
		public DisallowedAbsoluteUris_MOST_POPULAR_EXTENSIONS_BY_EXTENSION()
		{
			this._Extension = default(EntityRef<Extension>);
			OnCreated();
		}
		
		[Column(Storage="_RowNumber", DbType="Int NOT NULL")]
		public int RowNumber
		{
			get
			{
				return this._RowNumber;
			}
			set
			{
				if ((this._RowNumber != value))
				{
					this.OnRowNumberChanging(value);
					this.SendPropertyChanging();
					this._RowNumber = value;
					this.SendPropertyChanged("RowNumber");
					this.OnRowNumberChanged();
				}
			}
		}
		
		[Column(Storage="_InitiallyDiscovered", DbType="DateTime")]
		public System.Nullable<System.DateTime> InitiallyDiscovered
		{
			get
			{
				return this._InitiallyDiscovered;
			}
			set
			{
				if ((this._InitiallyDiscovered != value))
				{
					this.OnInitiallyDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._InitiallyDiscovered = value;
					this.SendPropertyChanged("InitiallyDiscovered");
					this.OnInitiallyDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_LastDiscovered", DbType="DateTime NOT NULL")]
		public System.DateTime LastDiscovered
		{
			get
			{
				return this._LastDiscovered;
			}
			set
			{
				if ((this._LastDiscovered != value))
				{
					this.OnLastDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._LastDiscovered = value;
					this.SendPropertyChanged("LastDiscovered");
					this.OnLastDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_ExtensionID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ExtensionID
		{
			get
			{
				return this._ExtensionID;
			}
			set
			{
				if ((this._ExtensionID != value))
				{
					if (this._Extension.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnExtensionIDChanging(value);
					this.SendPropertyChanging();
					this._ExtensionID = value;
					this.SendPropertyChanged("ExtensionID");
					this.OnExtensionIDChanged();
				}
			}
		}
		
		[Column(Storage="_Count", DbType="Int NOT NULL")]
		public int Count
		{
			get
			{
				return this._Count;
			}
			set
			{
				if ((this._Count != value))
				{
					this.OnCountChanging(value);
					this.SendPropertyChanging();
					this._Count = value;
					this.SendPropertyChanged("Count");
					this.OnCountChanged();
				}
			}
		}
		
		[Column(Storage="_DaysSinceInitiallyDiscovered", DbType="SmallInt")]
		public System.Nullable<short> DaysSinceInitiallyDiscovered
		{
			get
			{
				return this._DaysSinceInitiallyDiscovered;
			}
			set
			{
				if ((this._DaysSinceInitiallyDiscovered != value))
				{
					this.OnDaysSinceInitiallyDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._DaysSinceInitiallyDiscovered = value;
					this.SendPropertyChanged("DaysSinceInitiallyDiscovered");
					this.OnDaysSinceInitiallyDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_DaysSinceLastDiscovered", DbType="SmallInt NOT NULL")]
		public short DaysSinceLastDiscovered
		{
			get
			{
				return this._DaysSinceLastDiscovered;
			}
			set
			{
				if ((this._DaysSinceLastDiscovered != value))
				{
					this.OnDaysSinceLastDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._DaysSinceLastDiscovered = value;
					this.SendPropertyChanged("DaysSinceLastDiscovered");
					this.OnDaysSinceLastDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_Strength", DbType="Float")]
		public System.Nullable<double> Strength
		{
			get
			{
				return this._Strength;
			}
			set
			{
				if ((this._Strength != value))
				{
					this.OnStrengthChanging(value);
					this.SendPropertyChanging();
					this._Strength = value;
					this.SendPropertyChanged("Strength");
					this.OnStrengthChanged();
				}
			}
		}
		
		[Column(Storage="_Rank", DbType="Int NOT NULL")]
		public int Rank
		{
			get
			{
				return this._Rank;
			}
			set
			{
				if ((this._Rank != value))
				{
					this.OnRankChanging(value);
					this.SendPropertyChanging();
					this._Rank = value;
					this.SendPropertyChanged("Rank");
					this.OnRankChanged();
				}
			}
		}
		
		[Column(Storage="_DenseRank", DbType="Int NOT NULL")]
		public int DenseRank
		{
			get
			{
				return this._DenseRank;
			}
			set
			{
				if ((this._DenseRank != value))
				{
					this.OnDenseRankChanging(value);
					this.SendPropertyChanging();
					this._DenseRank = value;
					this.SendPropertyChanged("DenseRank");
					this.OnDenseRankChanged();
				}
			}
		}
		
		[Column(Storage="_NTile", DbType="TinyInt NOT NULL")]
		public byte NTile
		{
			get
			{
				return this._NTile;
			}
			set
			{
				if ((this._NTile != value))
				{
					this.OnNTileChanging(value);
					this.SendPropertyChanging();
					this._NTile = value;
					this.SendPropertyChanged("NTile");
					this.OnNTileChanged();
				}
			}
		}
		
		[Association(Name="Extension_DisallowedAbsoluteUris_MOST_POPULAR_EXTENSIONS_BY_EXTENSION", Storage="_Extension", ThisKey="ExtensionID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Extension Extension
		{
			get
			{
				return this._Extension.Entity;
			}
			set
			{
				Extension previousValue = this._Extension.Entity;
				if (((previousValue != value) 
							|| (this._Extension.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Extension.Entity = null;
						previousValue.DisallowedAbsoluteUris_MOST_POPULAR_EXTENSIONS_BY_EXTENSION = null;
					}
					this._Extension.Entity = value;
					if ((value != null))
					{
						value.DisallowedAbsoluteUris_MOST_POPULAR_EXTENSIONS_BY_EXTENSION = this;
						this._ExtensionID = value.ID;
					}
					else
					{
						this._ExtensionID = default(int);
					}
					this.SendPropertyChanged("Extension");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="rpt.DisallowedAbsoluteUris_MOST_POPULAR_EXTENSIONS_BY_HOSTS")]
	public partial class DisallowedAbsoluteUris_MOST_POPULAR_EXTENSIONS_BY_HOST : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RowNumber;
		
		private System.Nullable<System.DateTime> _InitiallyDiscovered;
		
		private System.DateTime _LastDiscovered;
		
		private int _ExtensionID;
		
		private int _Count;
		
		private System.Nullable<short> _DaysSinceInitiallyDiscovered;
		
		private short _DaysSinceLastDiscovered;
		
		private System.Nullable<double> _Strength;
		
		private int _Rank;
		
		private int _DenseRank;
		
		private byte _NTile;
		
		private EntityRef<Extension> _Extension;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRowNumberChanging(int value);
    partial void OnRowNumberChanged();
    partial void OnInitiallyDiscoveredChanging(System.Nullable<System.DateTime> value);
    partial void OnInitiallyDiscoveredChanged();
    partial void OnLastDiscoveredChanging(System.DateTime value);
    partial void OnLastDiscoveredChanged();
    partial void OnExtensionIDChanging(int value);
    partial void OnExtensionIDChanged();
    partial void OnCountChanging(int value);
    partial void OnCountChanged();
    partial void OnDaysSinceInitiallyDiscoveredChanging(System.Nullable<short> value);
    partial void OnDaysSinceInitiallyDiscoveredChanged();
    partial void OnDaysSinceLastDiscoveredChanging(short value);
    partial void OnDaysSinceLastDiscoveredChanged();
    partial void OnStrengthChanging(System.Nullable<double> value);
    partial void OnStrengthChanged();
    partial void OnRankChanging(int value);
    partial void OnRankChanged();
    partial void OnDenseRankChanging(int value);
    partial void OnDenseRankChanged();
    partial void OnNTileChanging(byte value);
    partial void OnNTileChanged();
    #endregion
		
		public DisallowedAbsoluteUris_MOST_POPULAR_EXTENSIONS_BY_HOST()
		{
			this._Extension = default(EntityRef<Extension>);
			OnCreated();
		}
		
		[Column(Storage="_RowNumber", DbType="Int NOT NULL")]
		public int RowNumber
		{
			get
			{
				return this._RowNumber;
			}
			set
			{
				if ((this._RowNumber != value))
				{
					this.OnRowNumberChanging(value);
					this.SendPropertyChanging();
					this._RowNumber = value;
					this.SendPropertyChanged("RowNumber");
					this.OnRowNumberChanged();
				}
			}
		}
		
		[Column(Storage="_InitiallyDiscovered", DbType="DateTime")]
		public System.Nullable<System.DateTime> InitiallyDiscovered
		{
			get
			{
				return this._InitiallyDiscovered;
			}
			set
			{
				if ((this._InitiallyDiscovered != value))
				{
					this.OnInitiallyDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._InitiallyDiscovered = value;
					this.SendPropertyChanged("InitiallyDiscovered");
					this.OnInitiallyDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_LastDiscovered", DbType="DateTime NOT NULL")]
		public System.DateTime LastDiscovered
		{
			get
			{
				return this._LastDiscovered;
			}
			set
			{
				if ((this._LastDiscovered != value))
				{
					this.OnLastDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._LastDiscovered = value;
					this.SendPropertyChanged("LastDiscovered");
					this.OnLastDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_ExtensionID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ExtensionID
		{
			get
			{
				return this._ExtensionID;
			}
			set
			{
				if ((this._ExtensionID != value))
				{
					if (this._Extension.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnExtensionIDChanging(value);
					this.SendPropertyChanging();
					this._ExtensionID = value;
					this.SendPropertyChanged("ExtensionID");
					this.OnExtensionIDChanged();
				}
			}
		}
		
		[Column(Storage="_Count", DbType="Int NOT NULL")]
		public int Count
		{
			get
			{
				return this._Count;
			}
			set
			{
				if ((this._Count != value))
				{
					this.OnCountChanging(value);
					this.SendPropertyChanging();
					this._Count = value;
					this.SendPropertyChanged("Count");
					this.OnCountChanged();
				}
			}
		}
		
		[Column(Storage="_DaysSinceInitiallyDiscovered", DbType="SmallInt")]
		public System.Nullable<short> DaysSinceInitiallyDiscovered
		{
			get
			{
				return this._DaysSinceInitiallyDiscovered;
			}
			set
			{
				if ((this._DaysSinceInitiallyDiscovered != value))
				{
					this.OnDaysSinceInitiallyDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._DaysSinceInitiallyDiscovered = value;
					this.SendPropertyChanged("DaysSinceInitiallyDiscovered");
					this.OnDaysSinceInitiallyDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_DaysSinceLastDiscovered", DbType="SmallInt NOT NULL")]
		public short DaysSinceLastDiscovered
		{
			get
			{
				return this._DaysSinceLastDiscovered;
			}
			set
			{
				if ((this._DaysSinceLastDiscovered != value))
				{
					this.OnDaysSinceLastDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._DaysSinceLastDiscovered = value;
					this.SendPropertyChanged("DaysSinceLastDiscovered");
					this.OnDaysSinceLastDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_Strength", DbType="Float")]
		public System.Nullable<double> Strength
		{
			get
			{
				return this._Strength;
			}
			set
			{
				if ((this._Strength != value))
				{
					this.OnStrengthChanging(value);
					this.SendPropertyChanging();
					this._Strength = value;
					this.SendPropertyChanged("Strength");
					this.OnStrengthChanged();
				}
			}
		}
		
		[Column(Storage="_Rank", DbType="Int NOT NULL")]
		public int Rank
		{
			get
			{
				return this._Rank;
			}
			set
			{
				if ((this._Rank != value))
				{
					this.OnRankChanging(value);
					this.SendPropertyChanging();
					this._Rank = value;
					this.SendPropertyChanged("Rank");
					this.OnRankChanged();
				}
			}
		}
		
		[Column(Storage="_DenseRank", DbType="Int NOT NULL")]
		public int DenseRank
		{
			get
			{
				return this._DenseRank;
			}
			set
			{
				if ((this._DenseRank != value))
				{
					this.OnDenseRankChanging(value);
					this.SendPropertyChanging();
					this._DenseRank = value;
					this.SendPropertyChanged("DenseRank");
					this.OnDenseRankChanged();
				}
			}
		}
		
		[Column(Storage="_NTile", DbType="TinyInt NOT NULL")]
		public byte NTile
		{
			get
			{
				return this._NTile;
			}
			set
			{
				if ((this._NTile != value))
				{
					this.OnNTileChanging(value);
					this.SendPropertyChanging();
					this._NTile = value;
					this.SendPropertyChanged("NTile");
					this.OnNTileChanged();
				}
			}
		}
		
		[Association(Name="Extension_DisallowedAbsoluteUris_MOST_POPULAR_EXTENSIONS_BY_HOST", Storage="_Extension", ThisKey="ExtensionID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Extension Extension
		{
			get
			{
				return this._Extension.Entity;
			}
			set
			{
				Extension previousValue = this._Extension.Entity;
				if (((previousValue != value) 
							|| (this._Extension.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Extension.Entity = null;
						previousValue.DisallowedAbsoluteUris_MOST_POPULAR_EXTENSIONS_BY_HOST = null;
					}
					this._Extension.Entity = value;
					if ((value != null))
					{
						value.DisallowedAbsoluteUris_MOST_POPULAR_EXTENSIONS_BY_HOST = this;
						this._ExtensionID = value.ID;
					}
					else
					{
						this._ExtensionID = default(int);
					}
					this.SendPropertyChanged("Extension");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="rpt.DisallowedAbsoluteUris_MOST_POPULAR_EXTENSIONS_BY_SCHEMES")]
	public partial class DisallowedAbsoluteUris_MOST_POPULAR_EXTENSIONS_BY_SCHEME : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RowNumber;
		
		private System.Nullable<System.DateTime> _InitiallyDiscovered;
		
		private System.DateTime _LastDiscovered;
		
		private int _ExtensionID;
		
		private int _Count;
		
		private System.Nullable<short> _DaysSinceInitiallyDiscovered;
		
		private short _DaysSinceLastDiscovered;
		
		private System.Nullable<double> _Strength;
		
		private int _Rank;
		
		private int _DenseRank;
		
		private byte _NTile;
		
		private EntityRef<Extension> _Extension;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRowNumberChanging(int value);
    partial void OnRowNumberChanged();
    partial void OnInitiallyDiscoveredChanging(System.Nullable<System.DateTime> value);
    partial void OnInitiallyDiscoveredChanged();
    partial void OnLastDiscoveredChanging(System.DateTime value);
    partial void OnLastDiscoveredChanged();
    partial void OnExtensionIDChanging(int value);
    partial void OnExtensionIDChanged();
    partial void OnCountChanging(int value);
    partial void OnCountChanged();
    partial void OnDaysSinceInitiallyDiscoveredChanging(System.Nullable<short> value);
    partial void OnDaysSinceInitiallyDiscoveredChanged();
    partial void OnDaysSinceLastDiscoveredChanging(short value);
    partial void OnDaysSinceLastDiscoveredChanged();
    partial void OnStrengthChanging(System.Nullable<double> value);
    partial void OnStrengthChanged();
    partial void OnRankChanging(int value);
    partial void OnRankChanged();
    partial void OnDenseRankChanging(int value);
    partial void OnDenseRankChanged();
    partial void OnNTileChanging(byte value);
    partial void OnNTileChanged();
    #endregion
		
		public DisallowedAbsoluteUris_MOST_POPULAR_EXTENSIONS_BY_SCHEME()
		{
			this._Extension = default(EntityRef<Extension>);
			OnCreated();
		}
		
		[Column(Storage="_RowNumber", DbType="Int NOT NULL")]
		public int RowNumber
		{
			get
			{
				return this._RowNumber;
			}
			set
			{
				if ((this._RowNumber != value))
				{
					this.OnRowNumberChanging(value);
					this.SendPropertyChanging();
					this._RowNumber = value;
					this.SendPropertyChanged("RowNumber");
					this.OnRowNumberChanged();
				}
			}
		}
		
		[Column(Storage="_InitiallyDiscovered", DbType="DateTime")]
		public System.Nullable<System.DateTime> InitiallyDiscovered
		{
			get
			{
				return this._InitiallyDiscovered;
			}
			set
			{
				if ((this._InitiallyDiscovered != value))
				{
					this.OnInitiallyDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._InitiallyDiscovered = value;
					this.SendPropertyChanged("InitiallyDiscovered");
					this.OnInitiallyDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_LastDiscovered", DbType="DateTime NOT NULL")]
		public System.DateTime LastDiscovered
		{
			get
			{
				return this._LastDiscovered;
			}
			set
			{
				if ((this._LastDiscovered != value))
				{
					this.OnLastDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._LastDiscovered = value;
					this.SendPropertyChanged("LastDiscovered");
					this.OnLastDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_ExtensionID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ExtensionID
		{
			get
			{
				return this._ExtensionID;
			}
			set
			{
				if ((this._ExtensionID != value))
				{
					if (this._Extension.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnExtensionIDChanging(value);
					this.SendPropertyChanging();
					this._ExtensionID = value;
					this.SendPropertyChanged("ExtensionID");
					this.OnExtensionIDChanged();
				}
			}
		}
		
		[Column(Storage="_Count", DbType="Int NOT NULL")]
		public int Count
		{
			get
			{
				return this._Count;
			}
			set
			{
				if ((this._Count != value))
				{
					this.OnCountChanging(value);
					this.SendPropertyChanging();
					this._Count = value;
					this.SendPropertyChanged("Count");
					this.OnCountChanged();
				}
			}
		}
		
		[Column(Storage="_DaysSinceInitiallyDiscovered", DbType="SmallInt")]
		public System.Nullable<short> DaysSinceInitiallyDiscovered
		{
			get
			{
				return this._DaysSinceInitiallyDiscovered;
			}
			set
			{
				if ((this._DaysSinceInitiallyDiscovered != value))
				{
					this.OnDaysSinceInitiallyDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._DaysSinceInitiallyDiscovered = value;
					this.SendPropertyChanged("DaysSinceInitiallyDiscovered");
					this.OnDaysSinceInitiallyDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_DaysSinceLastDiscovered", DbType="SmallInt NOT NULL")]
		public short DaysSinceLastDiscovered
		{
			get
			{
				return this._DaysSinceLastDiscovered;
			}
			set
			{
				if ((this._DaysSinceLastDiscovered != value))
				{
					this.OnDaysSinceLastDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._DaysSinceLastDiscovered = value;
					this.SendPropertyChanged("DaysSinceLastDiscovered");
					this.OnDaysSinceLastDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_Strength", DbType="Float")]
		public System.Nullable<double> Strength
		{
			get
			{
				return this._Strength;
			}
			set
			{
				if ((this._Strength != value))
				{
					this.OnStrengthChanging(value);
					this.SendPropertyChanging();
					this._Strength = value;
					this.SendPropertyChanged("Strength");
					this.OnStrengthChanged();
				}
			}
		}
		
		[Column(Storage="_Rank", DbType="Int NOT NULL")]
		public int Rank
		{
			get
			{
				return this._Rank;
			}
			set
			{
				if ((this._Rank != value))
				{
					this.OnRankChanging(value);
					this.SendPropertyChanging();
					this._Rank = value;
					this.SendPropertyChanged("Rank");
					this.OnRankChanged();
				}
			}
		}
		
		[Column(Storage="_DenseRank", DbType="Int NOT NULL")]
		public int DenseRank
		{
			get
			{
				return this._DenseRank;
			}
			set
			{
				if ((this._DenseRank != value))
				{
					this.OnDenseRankChanging(value);
					this.SendPropertyChanging();
					this._DenseRank = value;
					this.SendPropertyChanged("DenseRank");
					this.OnDenseRankChanged();
				}
			}
		}
		
		[Column(Storage="_NTile", DbType="TinyInt NOT NULL")]
		public byte NTile
		{
			get
			{
				return this._NTile;
			}
			set
			{
				if ((this._NTile != value))
				{
					this.OnNTileChanging(value);
					this.SendPropertyChanging();
					this._NTile = value;
					this.SendPropertyChanged("NTile");
					this.OnNTileChanged();
				}
			}
		}
		
		[Association(Name="Extension_DisallowedAbsoluteUris_MOST_POPULAR_EXTENSIONS_BY_SCHEME", Storage="_Extension", ThisKey="ExtensionID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Extension Extension
		{
			get
			{
				return this._Extension.Entity;
			}
			set
			{
				Extension previousValue = this._Extension.Entity;
				if (((previousValue != value) 
							|| (this._Extension.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Extension.Entity = null;
						previousValue.DisallowedAbsoluteUris_MOST_POPULAR_EXTENSIONS_BY_SCHEME = null;
					}
					this._Extension.Entity = value;
					if ((value != null))
					{
						value.DisallowedAbsoluteUris_MOST_POPULAR_EXTENSIONS_BY_SCHEME = this;
						this._ExtensionID = value.ID;
					}
					else
					{
						this._ExtensionID = default(int);
					}
					this.SendPropertyChanged("Extension");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="rpt.DisallowedAbsoluteUris_MOST_POPULAR_HOSTS_BY_ABSOLUTEURIS")]
	public partial class DisallowedAbsoluteUris_MOST_POPULAR_HOSTS_BY_ABSOLUTEURI : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RowNumber;
		
		private System.Nullable<System.DateTime> _InitiallyDiscovered;
		
		private System.DateTime _LastDiscovered;
		
		private int _HostID;
		
		private int _Count;
		
		private System.Nullable<short> _DaysSinceInitiallyDiscovered;
		
		private short _DaysSinceLastDiscovered;
		
		private System.Nullable<double> _Strength;
		
		private int _Rank;
		
		private int _DenseRank;
		
		private byte _NTile;
		
		private EntityRef<Host> _Host;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRowNumberChanging(int value);
    partial void OnRowNumberChanged();
    partial void OnInitiallyDiscoveredChanging(System.Nullable<System.DateTime> value);
    partial void OnInitiallyDiscoveredChanged();
    partial void OnLastDiscoveredChanging(System.DateTime value);
    partial void OnLastDiscoveredChanged();
    partial void OnHostIDChanging(int value);
    partial void OnHostIDChanged();
    partial void OnCountChanging(int value);
    partial void OnCountChanged();
    partial void OnDaysSinceInitiallyDiscoveredChanging(System.Nullable<short> value);
    partial void OnDaysSinceInitiallyDiscoveredChanged();
    partial void OnDaysSinceLastDiscoveredChanging(short value);
    partial void OnDaysSinceLastDiscoveredChanged();
    partial void OnStrengthChanging(System.Nullable<double> value);
    partial void OnStrengthChanged();
    partial void OnRankChanging(int value);
    partial void OnRankChanged();
    partial void OnDenseRankChanging(int value);
    partial void OnDenseRankChanged();
    partial void OnNTileChanging(byte value);
    partial void OnNTileChanged();
    #endregion
		
		public DisallowedAbsoluteUris_MOST_POPULAR_HOSTS_BY_ABSOLUTEURI()
		{
			this._Host = default(EntityRef<Host>);
			OnCreated();
		}
		
		[Column(Storage="_RowNumber", DbType="Int NOT NULL")]
		public int RowNumber
		{
			get
			{
				return this._RowNumber;
			}
			set
			{
				if ((this._RowNumber != value))
				{
					this.OnRowNumberChanging(value);
					this.SendPropertyChanging();
					this._RowNumber = value;
					this.SendPropertyChanged("RowNumber");
					this.OnRowNumberChanged();
				}
			}
		}
		
		[Column(Storage="_InitiallyDiscovered", DbType="DateTime")]
		public System.Nullable<System.DateTime> InitiallyDiscovered
		{
			get
			{
				return this._InitiallyDiscovered;
			}
			set
			{
				if ((this._InitiallyDiscovered != value))
				{
					this.OnInitiallyDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._InitiallyDiscovered = value;
					this.SendPropertyChanged("InitiallyDiscovered");
					this.OnInitiallyDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_LastDiscovered", DbType="DateTime NOT NULL")]
		public System.DateTime LastDiscovered
		{
			get
			{
				return this._LastDiscovered;
			}
			set
			{
				if ((this._LastDiscovered != value))
				{
					this.OnLastDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._LastDiscovered = value;
					this.SendPropertyChanged("LastDiscovered");
					this.OnLastDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_HostID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int HostID
		{
			get
			{
				return this._HostID;
			}
			set
			{
				if ((this._HostID != value))
				{
					if (this._Host.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnHostIDChanging(value);
					this.SendPropertyChanging();
					this._HostID = value;
					this.SendPropertyChanged("HostID");
					this.OnHostIDChanged();
				}
			}
		}
		
		[Column(Storage="_Count", DbType="Int NOT NULL")]
		public int Count
		{
			get
			{
				return this._Count;
			}
			set
			{
				if ((this._Count != value))
				{
					this.OnCountChanging(value);
					this.SendPropertyChanging();
					this._Count = value;
					this.SendPropertyChanged("Count");
					this.OnCountChanged();
				}
			}
		}
		
		[Column(Storage="_DaysSinceInitiallyDiscovered", DbType="SmallInt")]
		public System.Nullable<short> DaysSinceInitiallyDiscovered
		{
			get
			{
				return this._DaysSinceInitiallyDiscovered;
			}
			set
			{
				if ((this._DaysSinceInitiallyDiscovered != value))
				{
					this.OnDaysSinceInitiallyDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._DaysSinceInitiallyDiscovered = value;
					this.SendPropertyChanged("DaysSinceInitiallyDiscovered");
					this.OnDaysSinceInitiallyDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_DaysSinceLastDiscovered", DbType="SmallInt NOT NULL")]
		public short DaysSinceLastDiscovered
		{
			get
			{
				return this._DaysSinceLastDiscovered;
			}
			set
			{
				if ((this._DaysSinceLastDiscovered != value))
				{
					this.OnDaysSinceLastDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._DaysSinceLastDiscovered = value;
					this.SendPropertyChanged("DaysSinceLastDiscovered");
					this.OnDaysSinceLastDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_Strength", DbType="Float")]
		public System.Nullable<double> Strength
		{
			get
			{
				return this._Strength;
			}
			set
			{
				if ((this._Strength != value))
				{
					this.OnStrengthChanging(value);
					this.SendPropertyChanging();
					this._Strength = value;
					this.SendPropertyChanged("Strength");
					this.OnStrengthChanged();
				}
			}
		}
		
		[Column(Storage="_Rank", DbType="Int NOT NULL")]
		public int Rank
		{
			get
			{
				return this._Rank;
			}
			set
			{
				if ((this._Rank != value))
				{
					this.OnRankChanging(value);
					this.SendPropertyChanging();
					this._Rank = value;
					this.SendPropertyChanged("Rank");
					this.OnRankChanged();
				}
			}
		}
		
		[Column(Storage="_DenseRank", DbType="Int NOT NULL")]
		public int DenseRank
		{
			get
			{
				return this._DenseRank;
			}
			set
			{
				if ((this._DenseRank != value))
				{
					this.OnDenseRankChanging(value);
					this.SendPropertyChanging();
					this._DenseRank = value;
					this.SendPropertyChanged("DenseRank");
					this.OnDenseRankChanged();
				}
			}
		}
		
		[Column(Storage="_NTile", DbType="TinyInt NOT NULL")]
		public byte NTile
		{
			get
			{
				return this._NTile;
			}
			set
			{
				if ((this._NTile != value))
				{
					this.OnNTileChanging(value);
					this.SendPropertyChanging();
					this._NTile = value;
					this.SendPropertyChanged("NTile");
					this.OnNTileChanged();
				}
			}
		}
		
		[Association(Name="Host_DisallowedAbsoluteUris_MOST_POPULAR_HOSTS_BY_ABSOLUTEURI", Storage="_Host", ThisKey="HostID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Host Host
		{
			get
			{
				return this._Host.Entity;
			}
			set
			{
				Host previousValue = this._Host.Entity;
				if (((previousValue != value) 
							|| (this._Host.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Host.Entity = null;
						previousValue.DisallowedAbsoluteUris_MOST_POPULAR_HOSTS_BY_ABSOLUTEURI = null;
					}
					this._Host.Entity = value;
					if ((value != null))
					{
						value.DisallowedAbsoluteUris_MOST_POPULAR_HOSTS_BY_ABSOLUTEURI = this;
						this._HostID = value.ID;
					}
					else
					{
						this._HostID = default(int);
					}
					this.SendPropertyChanged("Host");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="rpt.DisallowedAbsoluteUris_MOST_POPULAR_HOSTS_BY_DOMAINS")]
	public partial class DisallowedAbsoluteUris_MOST_POPULAR_HOSTS_BY_DOMAIN : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RowNumber;
		
		private System.Nullable<System.DateTime> _InitiallyDiscovered;
		
		private System.DateTime _LastDiscovered;
		
		private int _HostID;
		
		private int _Count;
		
		private System.Nullable<short> _DaysSinceInitiallyDiscovered;
		
		private short _DaysSinceLastDiscovered;
		
		private System.Nullable<double> _Strength;
		
		private int _Rank;
		
		private int _DenseRank;
		
		private byte _NTile;
		
		private EntityRef<Host> _Host;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRowNumberChanging(int value);
    partial void OnRowNumberChanged();
    partial void OnInitiallyDiscoveredChanging(System.Nullable<System.DateTime> value);
    partial void OnInitiallyDiscoveredChanged();
    partial void OnLastDiscoveredChanging(System.DateTime value);
    partial void OnLastDiscoveredChanged();
    partial void OnHostIDChanging(int value);
    partial void OnHostIDChanged();
    partial void OnCountChanging(int value);
    partial void OnCountChanged();
    partial void OnDaysSinceInitiallyDiscoveredChanging(System.Nullable<short> value);
    partial void OnDaysSinceInitiallyDiscoveredChanged();
    partial void OnDaysSinceLastDiscoveredChanging(short value);
    partial void OnDaysSinceLastDiscoveredChanged();
    partial void OnStrengthChanging(System.Nullable<double> value);
    partial void OnStrengthChanged();
    partial void OnRankChanging(int value);
    partial void OnRankChanged();
    partial void OnDenseRankChanging(int value);
    partial void OnDenseRankChanged();
    partial void OnNTileChanging(byte value);
    partial void OnNTileChanged();
    #endregion
		
		public DisallowedAbsoluteUris_MOST_POPULAR_HOSTS_BY_DOMAIN()
		{
			this._Host = default(EntityRef<Host>);
			OnCreated();
		}
		
		[Column(Storage="_RowNumber", DbType="Int NOT NULL")]
		public int RowNumber
		{
			get
			{
				return this._RowNumber;
			}
			set
			{
				if ((this._RowNumber != value))
				{
					this.OnRowNumberChanging(value);
					this.SendPropertyChanging();
					this._RowNumber = value;
					this.SendPropertyChanged("RowNumber");
					this.OnRowNumberChanged();
				}
			}
		}
		
		[Column(Storage="_InitiallyDiscovered", DbType="DateTime")]
		public System.Nullable<System.DateTime> InitiallyDiscovered
		{
			get
			{
				return this._InitiallyDiscovered;
			}
			set
			{
				if ((this._InitiallyDiscovered != value))
				{
					this.OnInitiallyDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._InitiallyDiscovered = value;
					this.SendPropertyChanged("InitiallyDiscovered");
					this.OnInitiallyDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_LastDiscovered", DbType="DateTime NOT NULL")]
		public System.DateTime LastDiscovered
		{
			get
			{
				return this._LastDiscovered;
			}
			set
			{
				if ((this._LastDiscovered != value))
				{
					this.OnLastDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._LastDiscovered = value;
					this.SendPropertyChanged("LastDiscovered");
					this.OnLastDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_HostID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int HostID
		{
			get
			{
				return this._HostID;
			}
			set
			{
				if ((this._HostID != value))
				{
					if (this._Host.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnHostIDChanging(value);
					this.SendPropertyChanging();
					this._HostID = value;
					this.SendPropertyChanged("HostID");
					this.OnHostIDChanged();
				}
			}
		}
		
		[Column(Storage="_Count", DbType="Int NOT NULL")]
		public int Count
		{
			get
			{
				return this._Count;
			}
			set
			{
				if ((this._Count != value))
				{
					this.OnCountChanging(value);
					this.SendPropertyChanging();
					this._Count = value;
					this.SendPropertyChanged("Count");
					this.OnCountChanged();
				}
			}
		}
		
		[Column(Storage="_DaysSinceInitiallyDiscovered", DbType="SmallInt")]
		public System.Nullable<short> DaysSinceInitiallyDiscovered
		{
			get
			{
				return this._DaysSinceInitiallyDiscovered;
			}
			set
			{
				if ((this._DaysSinceInitiallyDiscovered != value))
				{
					this.OnDaysSinceInitiallyDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._DaysSinceInitiallyDiscovered = value;
					this.SendPropertyChanged("DaysSinceInitiallyDiscovered");
					this.OnDaysSinceInitiallyDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_DaysSinceLastDiscovered", DbType="SmallInt NOT NULL")]
		public short DaysSinceLastDiscovered
		{
			get
			{
				return this._DaysSinceLastDiscovered;
			}
			set
			{
				if ((this._DaysSinceLastDiscovered != value))
				{
					this.OnDaysSinceLastDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._DaysSinceLastDiscovered = value;
					this.SendPropertyChanged("DaysSinceLastDiscovered");
					this.OnDaysSinceLastDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_Strength", DbType="Float")]
		public System.Nullable<double> Strength
		{
			get
			{
				return this._Strength;
			}
			set
			{
				if ((this._Strength != value))
				{
					this.OnStrengthChanging(value);
					this.SendPropertyChanging();
					this._Strength = value;
					this.SendPropertyChanged("Strength");
					this.OnStrengthChanged();
				}
			}
		}
		
		[Column(Storage="_Rank", DbType="Int NOT NULL")]
		public int Rank
		{
			get
			{
				return this._Rank;
			}
			set
			{
				if ((this._Rank != value))
				{
					this.OnRankChanging(value);
					this.SendPropertyChanging();
					this._Rank = value;
					this.SendPropertyChanged("Rank");
					this.OnRankChanged();
				}
			}
		}
		
		[Column(Storage="_DenseRank", DbType="Int NOT NULL")]
		public int DenseRank
		{
			get
			{
				return this._DenseRank;
			}
			set
			{
				if ((this._DenseRank != value))
				{
					this.OnDenseRankChanging(value);
					this.SendPropertyChanging();
					this._DenseRank = value;
					this.SendPropertyChanged("DenseRank");
					this.OnDenseRankChanged();
				}
			}
		}
		
		[Column(Storage="_NTile", DbType="TinyInt NOT NULL")]
		public byte NTile
		{
			get
			{
				return this._NTile;
			}
			set
			{
				if ((this._NTile != value))
				{
					this.OnNTileChanging(value);
					this.SendPropertyChanging();
					this._NTile = value;
					this.SendPropertyChanged("NTile");
					this.OnNTileChanged();
				}
			}
		}
		
		[Association(Name="Host_DisallowedAbsoluteUris_MOST_POPULAR_HOSTS_BY_DOMAIN", Storage="_Host", ThisKey="HostID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Host Host
		{
			get
			{
				return this._Host.Entity;
			}
			set
			{
				Host previousValue = this._Host.Entity;
				if (((previousValue != value) 
							|| (this._Host.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Host.Entity = null;
						previousValue.DisallowedAbsoluteUris_MOST_POPULAR_HOSTS_BY_DOMAIN = null;
					}
					this._Host.Entity = value;
					if ((value != null))
					{
						value.DisallowedAbsoluteUris_MOST_POPULAR_HOSTS_BY_DOMAIN = this;
						this._HostID = value.ID;
					}
					else
					{
						this._HostID = default(int);
					}
					this.SendPropertyChanged("Host");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="rpt.DisallowedAbsoluteUris_MOST_POPULAR_HOSTS_BY_EXTENSIONS")]
	public partial class DisallowedAbsoluteUris_MOST_POPULAR_HOSTS_BY_EXTENSION : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RowNumber;
		
		private System.Nullable<System.DateTime> _InitiallyDiscovered;
		
		private System.DateTime _LastDiscovered;
		
		private int _HostID;
		
		private int _Count;
		
		private System.Nullable<short> _DaysSinceInitiallyDiscovered;
		
		private short _DaysSinceLastDiscovered;
		
		private System.Nullable<double> _Strength;
		
		private int _Rank;
		
		private int _DenseRank;
		
		private byte _NTile;
		
		private EntityRef<Host> _Host;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRowNumberChanging(int value);
    partial void OnRowNumberChanged();
    partial void OnInitiallyDiscoveredChanging(System.Nullable<System.DateTime> value);
    partial void OnInitiallyDiscoveredChanged();
    partial void OnLastDiscoveredChanging(System.DateTime value);
    partial void OnLastDiscoveredChanged();
    partial void OnHostIDChanging(int value);
    partial void OnHostIDChanged();
    partial void OnCountChanging(int value);
    partial void OnCountChanged();
    partial void OnDaysSinceInitiallyDiscoveredChanging(System.Nullable<short> value);
    partial void OnDaysSinceInitiallyDiscoveredChanged();
    partial void OnDaysSinceLastDiscoveredChanging(short value);
    partial void OnDaysSinceLastDiscoveredChanged();
    partial void OnStrengthChanging(System.Nullable<double> value);
    partial void OnStrengthChanged();
    partial void OnRankChanging(int value);
    partial void OnRankChanged();
    partial void OnDenseRankChanging(int value);
    partial void OnDenseRankChanged();
    partial void OnNTileChanging(byte value);
    partial void OnNTileChanged();
    #endregion
		
		public DisallowedAbsoluteUris_MOST_POPULAR_HOSTS_BY_EXTENSION()
		{
			this._Host = default(EntityRef<Host>);
			OnCreated();
		}
		
		[Column(Storage="_RowNumber", DbType="Int NOT NULL")]
		public int RowNumber
		{
			get
			{
				return this._RowNumber;
			}
			set
			{
				if ((this._RowNumber != value))
				{
					this.OnRowNumberChanging(value);
					this.SendPropertyChanging();
					this._RowNumber = value;
					this.SendPropertyChanged("RowNumber");
					this.OnRowNumberChanged();
				}
			}
		}
		
		[Column(Storage="_InitiallyDiscovered", DbType="DateTime")]
		public System.Nullable<System.DateTime> InitiallyDiscovered
		{
			get
			{
				return this._InitiallyDiscovered;
			}
			set
			{
				if ((this._InitiallyDiscovered != value))
				{
					this.OnInitiallyDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._InitiallyDiscovered = value;
					this.SendPropertyChanged("InitiallyDiscovered");
					this.OnInitiallyDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_LastDiscovered", DbType="DateTime NOT NULL")]
		public System.DateTime LastDiscovered
		{
			get
			{
				return this._LastDiscovered;
			}
			set
			{
				if ((this._LastDiscovered != value))
				{
					this.OnLastDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._LastDiscovered = value;
					this.SendPropertyChanged("LastDiscovered");
					this.OnLastDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_HostID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int HostID
		{
			get
			{
				return this._HostID;
			}
			set
			{
				if ((this._HostID != value))
				{
					if (this._Host.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnHostIDChanging(value);
					this.SendPropertyChanging();
					this._HostID = value;
					this.SendPropertyChanged("HostID");
					this.OnHostIDChanged();
				}
			}
		}
		
		[Column(Storage="_Count", DbType="Int NOT NULL")]
		public int Count
		{
			get
			{
				return this._Count;
			}
			set
			{
				if ((this._Count != value))
				{
					this.OnCountChanging(value);
					this.SendPropertyChanging();
					this._Count = value;
					this.SendPropertyChanged("Count");
					this.OnCountChanged();
				}
			}
		}
		
		[Column(Storage="_DaysSinceInitiallyDiscovered", DbType="SmallInt")]
		public System.Nullable<short> DaysSinceInitiallyDiscovered
		{
			get
			{
				return this._DaysSinceInitiallyDiscovered;
			}
			set
			{
				if ((this._DaysSinceInitiallyDiscovered != value))
				{
					this.OnDaysSinceInitiallyDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._DaysSinceInitiallyDiscovered = value;
					this.SendPropertyChanged("DaysSinceInitiallyDiscovered");
					this.OnDaysSinceInitiallyDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_DaysSinceLastDiscovered", DbType="SmallInt NOT NULL")]
		public short DaysSinceLastDiscovered
		{
			get
			{
				return this._DaysSinceLastDiscovered;
			}
			set
			{
				if ((this._DaysSinceLastDiscovered != value))
				{
					this.OnDaysSinceLastDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._DaysSinceLastDiscovered = value;
					this.SendPropertyChanged("DaysSinceLastDiscovered");
					this.OnDaysSinceLastDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_Strength", DbType="Float")]
		public System.Nullable<double> Strength
		{
			get
			{
				return this._Strength;
			}
			set
			{
				if ((this._Strength != value))
				{
					this.OnStrengthChanging(value);
					this.SendPropertyChanging();
					this._Strength = value;
					this.SendPropertyChanged("Strength");
					this.OnStrengthChanged();
				}
			}
		}
		
		[Column(Storage="_Rank", DbType="Int NOT NULL")]
		public int Rank
		{
			get
			{
				return this._Rank;
			}
			set
			{
				if ((this._Rank != value))
				{
					this.OnRankChanging(value);
					this.SendPropertyChanging();
					this._Rank = value;
					this.SendPropertyChanged("Rank");
					this.OnRankChanged();
				}
			}
		}
		
		[Column(Storage="_DenseRank", DbType="Int NOT NULL")]
		public int DenseRank
		{
			get
			{
				return this._DenseRank;
			}
			set
			{
				if ((this._DenseRank != value))
				{
					this.OnDenseRankChanging(value);
					this.SendPropertyChanging();
					this._DenseRank = value;
					this.SendPropertyChanged("DenseRank");
					this.OnDenseRankChanged();
				}
			}
		}
		
		[Column(Storage="_NTile", DbType="TinyInt NOT NULL")]
		public byte NTile
		{
			get
			{
				return this._NTile;
			}
			set
			{
				if ((this._NTile != value))
				{
					this.OnNTileChanging(value);
					this.SendPropertyChanging();
					this._NTile = value;
					this.SendPropertyChanged("NTile");
					this.OnNTileChanged();
				}
			}
		}
		
		[Association(Name="Host_DisallowedAbsoluteUris_MOST_POPULAR_HOSTS_BY_EXTENSION", Storage="_Host", ThisKey="HostID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Host Host
		{
			get
			{
				return this._Host.Entity;
			}
			set
			{
				Host previousValue = this._Host.Entity;
				if (((previousValue != value) 
							|| (this._Host.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Host.Entity = null;
						previousValue.DisallowedAbsoluteUris_MOST_POPULAR_HOSTS_BY_EXTENSION = null;
					}
					this._Host.Entity = value;
					if ((value != null))
					{
						value.DisallowedAbsoluteUris_MOST_POPULAR_HOSTS_BY_EXTENSION = this;
						this._HostID = value.ID;
					}
					else
					{
						this._HostID = default(int);
					}
					this.SendPropertyChanged("Host");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="rpt.DisallowedAbsoluteUris_MOST_POPULAR_HOSTS_BY_HOSTS")]
	public partial class DisallowedAbsoluteUris_MOST_POPULAR_HOSTS_BY_HOST : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RowNumber;
		
		private System.Nullable<System.DateTime> _InitiallyDiscovered;
		
		private System.DateTime _LastDiscovered;
		
		private int _HostID;
		
		private int _Count;
		
		private System.Nullable<short> _DaysSinceInitiallyDiscovered;
		
		private short _DaysSinceLastDiscovered;
		
		private System.Nullable<double> _Strength;
		
		private int _Rank;
		
		private int _DenseRank;
		
		private byte _NTile;
		
		private EntityRef<Host> _Host;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRowNumberChanging(int value);
    partial void OnRowNumberChanged();
    partial void OnInitiallyDiscoveredChanging(System.Nullable<System.DateTime> value);
    partial void OnInitiallyDiscoveredChanged();
    partial void OnLastDiscoveredChanging(System.DateTime value);
    partial void OnLastDiscoveredChanged();
    partial void OnHostIDChanging(int value);
    partial void OnHostIDChanged();
    partial void OnCountChanging(int value);
    partial void OnCountChanged();
    partial void OnDaysSinceInitiallyDiscoveredChanging(System.Nullable<short> value);
    partial void OnDaysSinceInitiallyDiscoveredChanged();
    partial void OnDaysSinceLastDiscoveredChanging(short value);
    partial void OnDaysSinceLastDiscoveredChanged();
    partial void OnStrengthChanging(System.Nullable<double> value);
    partial void OnStrengthChanged();
    partial void OnRankChanging(int value);
    partial void OnRankChanged();
    partial void OnDenseRankChanging(int value);
    partial void OnDenseRankChanged();
    partial void OnNTileChanging(byte value);
    partial void OnNTileChanged();
    #endregion
		
		public DisallowedAbsoluteUris_MOST_POPULAR_HOSTS_BY_HOST()
		{
			this._Host = default(EntityRef<Host>);
			OnCreated();
		}
		
		[Column(Storage="_RowNumber", DbType="Int NOT NULL")]
		public int RowNumber
		{
			get
			{
				return this._RowNumber;
			}
			set
			{
				if ((this._RowNumber != value))
				{
					this.OnRowNumberChanging(value);
					this.SendPropertyChanging();
					this._RowNumber = value;
					this.SendPropertyChanged("RowNumber");
					this.OnRowNumberChanged();
				}
			}
		}
		
		[Column(Storage="_InitiallyDiscovered", DbType="DateTime")]
		public System.Nullable<System.DateTime> InitiallyDiscovered
		{
			get
			{
				return this._InitiallyDiscovered;
			}
			set
			{
				if ((this._InitiallyDiscovered != value))
				{
					this.OnInitiallyDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._InitiallyDiscovered = value;
					this.SendPropertyChanged("InitiallyDiscovered");
					this.OnInitiallyDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_LastDiscovered", DbType="DateTime NOT NULL")]
		public System.DateTime LastDiscovered
		{
			get
			{
				return this._LastDiscovered;
			}
			set
			{
				if ((this._LastDiscovered != value))
				{
					this.OnLastDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._LastDiscovered = value;
					this.SendPropertyChanged("LastDiscovered");
					this.OnLastDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_HostID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int HostID
		{
			get
			{
				return this._HostID;
			}
			set
			{
				if ((this._HostID != value))
				{
					if (this._Host.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnHostIDChanging(value);
					this.SendPropertyChanging();
					this._HostID = value;
					this.SendPropertyChanged("HostID");
					this.OnHostIDChanged();
				}
			}
		}
		
		[Column(Storage="_Count", DbType="Int NOT NULL")]
		public int Count
		{
			get
			{
				return this._Count;
			}
			set
			{
				if ((this._Count != value))
				{
					this.OnCountChanging(value);
					this.SendPropertyChanging();
					this._Count = value;
					this.SendPropertyChanged("Count");
					this.OnCountChanged();
				}
			}
		}
		
		[Column(Storage="_DaysSinceInitiallyDiscovered", DbType="SmallInt")]
		public System.Nullable<short> DaysSinceInitiallyDiscovered
		{
			get
			{
				return this._DaysSinceInitiallyDiscovered;
			}
			set
			{
				if ((this._DaysSinceInitiallyDiscovered != value))
				{
					this.OnDaysSinceInitiallyDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._DaysSinceInitiallyDiscovered = value;
					this.SendPropertyChanged("DaysSinceInitiallyDiscovered");
					this.OnDaysSinceInitiallyDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_DaysSinceLastDiscovered", DbType="SmallInt NOT NULL")]
		public short DaysSinceLastDiscovered
		{
			get
			{
				return this._DaysSinceLastDiscovered;
			}
			set
			{
				if ((this._DaysSinceLastDiscovered != value))
				{
					this.OnDaysSinceLastDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._DaysSinceLastDiscovered = value;
					this.SendPropertyChanged("DaysSinceLastDiscovered");
					this.OnDaysSinceLastDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_Strength", DbType="Float")]
		public System.Nullable<double> Strength
		{
			get
			{
				return this._Strength;
			}
			set
			{
				if ((this._Strength != value))
				{
					this.OnStrengthChanging(value);
					this.SendPropertyChanging();
					this._Strength = value;
					this.SendPropertyChanged("Strength");
					this.OnStrengthChanged();
				}
			}
		}
		
		[Column(Storage="_Rank", DbType="Int NOT NULL")]
		public int Rank
		{
			get
			{
				return this._Rank;
			}
			set
			{
				if ((this._Rank != value))
				{
					this.OnRankChanging(value);
					this.SendPropertyChanging();
					this._Rank = value;
					this.SendPropertyChanged("Rank");
					this.OnRankChanged();
				}
			}
		}
		
		[Column(Storage="_DenseRank", DbType="Int NOT NULL")]
		public int DenseRank
		{
			get
			{
				return this._DenseRank;
			}
			set
			{
				if ((this._DenseRank != value))
				{
					this.OnDenseRankChanging(value);
					this.SendPropertyChanging();
					this._DenseRank = value;
					this.SendPropertyChanged("DenseRank");
					this.OnDenseRankChanged();
				}
			}
		}
		
		[Column(Storage="_NTile", DbType="TinyInt NOT NULL")]
		public byte NTile
		{
			get
			{
				return this._NTile;
			}
			set
			{
				if ((this._NTile != value))
				{
					this.OnNTileChanging(value);
					this.SendPropertyChanging();
					this._NTile = value;
					this.SendPropertyChanged("NTile");
					this.OnNTileChanged();
				}
			}
		}
		
		[Association(Name="Host_DisallowedAbsoluteUris_MOST_POPULAR_HOSTS_BY_HOST", Storage="_Host", ThisKey="HostID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Host Host
		{
			get
			{
				return this._Host.Entity;
			}
			set
			{
				Host previousValue = this._Host.Entity;
				if (((previousValue != value) 
							|| (this._Host.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Host.Entity = null;
						previousValue.DisallowedAbsoluteUris_MOST_POPULAR_HOSTS_BY_HOST = null;
					}
					this._Host.Entity = value;
					if ((value != null))
					{
						value.DisallowedAbsoluteUris_MOST_POPULAR_HOSTS_BY_HOST = this;
						this._HostID = value.ID;
					}
					else
					{
						this._HostID = default(int);
					}
					this.SendPropertyChanged("Host");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="rpt.DisallowedAbsoluteUris_MOST_POPULAR_HOSTS_BY_SCHEMES")]
	public partial class DisallowedAbsoluteUris_MOST_POPULAR_HOSTS_BY_SCHEME : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RowNumber;
		
		private System.Nullable<System.DateTime> _InitiallyDiscovered;
		
		private System.DateTime _LastDiscovered;
		
		private int _HostID;
		
		private int _Count;
		
		private System.Nullable<short> _DaysSinceInitiallyDiscovered;
		
		private short _DaysSinceLastDiscovered;
		
		private System.Nullable<double> _Strength;
		
		private int _Rank;
		
		private int _DenseRank;
		
		private byte _NTile;
		
		private EntityRef<Host> _Host;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRowNumberChanging(int value);
    partial void OnRowNumberChanged();
    partial void OnInitiallyDiscoveredChanging(System.Nullable<System.DateTime> value);
    partial void OnInitiallyDiscoveredChanged();
    partial void OnLastDiscoveredChanging(System.DateTime value);
    partial void OnLastDiscoveredChanged();
    partial void OnHostIDChanging(int value);
    partial void OnHostIDChanged();
    partial void OnCountChanging(int value);
    partial void OnCountChanged();
    partial void OnDaysSinceInitiallyDiscoveredChanging(System.Nullable<short> value);
    partial void OnDaysSinceInitiallyDiscoveredChanged();
    partial void OnDaysSinceLastDiscoveredChanging(short value);
    partial void OnDaysSinceLastDiscoveredChanged();
    partial void OnStrengthChanging(System.Nullable<double> value);
    partial void OnStrengthChanged();
    partial void OnRankChanging(int value);
    partial void OnRankChanged();
    partial void OnDenseRankChanging(int value);
    partial void OnDenseRankChanged();
    partial void OnNTileChanging(byte value);
    partial void OnNTileChanged();
    #endregion
		
		public DisallowedAbsoluteUris_MOST_POPULAR_HOSTS_BY_SCHEME()
		{
			this._Host = default(EntityRef<Host>);
			OnCreated();
		}
		
		[Column(Storage="_RowNumber", DbType="Int NOT NULL")]
		public int RowNumber
		{
			get
			{
				return this._RowNumber;
			}
			set
			{
				if ((this._RowNumber != value))
				{
					this.OnRowNumberChanging(value);
					this.SendPropertyChanging();
					this._RowNumber = value;
					this.SendPropertyChanged("RowNumber");
					this.OnRowNumberChanged();
				}
			}
		}
		
		[Column(Storage="_InitiallyDiscovered", DbType="DateTime")]
		public System.Nullable<System.DateTime> InitiallyDiscovered
		{
			get
			{
				return this._InitiallyDiscovered;
			}
			set
			{
				if ((this._InitiallyDiscovered != value))
				{
					this.OnInitiallyDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._InitiallyDiscovered = value;
					this.SendPropertyChanged("InitiallyDiscovered");
					this.OnInitiallyDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_LastDiscovered", DbType="DateTime NOT NULL")]
		public System.DateTime LastDiscovered
		{
			get
			{
				return this._LastDiscovered;
			}
			set
			{
				if ((this._LastDiscovered != value))
				{
					this.OnLastDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._LastDiscovered = value;
					this.SendPropertyChanged("LastDiscovered");
					this.OnLastDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_HostID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int HostID
		{
			get
			{
				return this._HostID;
			}
			set
			{
				if ((this._HostID != value))
				{
					if (this._Host.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnHostIDChanging(value);
					this.SendPropertyChanging();
					this._HostID = value;
					this.SendPropertyChanged("HostID");
					this.OnHostIDChanged();
				}
			}
		}
		
		[Column(Storage="_Count", DbType="Int NOT NULL")]
		public int Count
		{
			get
			{
				return this._Count;
			}
			set
			{
				if ((this._Count != value))
				{
					this.OnCountChanging(value);
					this.SendPropertyChanging();
					this._Count = value;
					this.SendPropertyChanged("Count");
					this.OnCountChanged();
				}
			}
		}
		
		[Column(Storage="_DaysSinceInitiallyDiscovered", DbType="SmallInt")]
		public System.Nullable<short> DaysSinceInitiallyDiscovered
		{
			get
			{
				return this._DaysSinceInitiallyDiscovered;
			}
			set
			{
				if ((this._DaysSinceInitiallyDiscovered != value))
				{
					this.OnDaysSinceInitiallyDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._DaysSinceInitiallyDiscovered = value;
					this.SendPropertyChanged("DaysSinceInitiallyDiscovered");
					this.OnDaysSinceInitiallyDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_DaysSinceLastDiscovered", DbType="SmallInt NOT NULL")]
		public short DaysSinceLastDiscovered
		{
			get
			{
				return this._DaysSinceLastDiscovered;
			}
			set
			{
				if ((this._DaysSinceLastDiscovered != value))
				{
					this.OnDaysSinceLastDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._DaysSinceLastDiscovered = value;
					this.SendPropertyChanged("DaysSinceLastDiscovered");
					this.OnDaysSinceLastDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_Strength", DbType="Float")]
		public System.Nullable<double> Strength
		{
			get
			{
				return this._Strength;
			}
			set
			{
				if ((this._Strength != value))
				{
					this.OnStrengthChanging(value);
					this.SendPropertyChanging();
					this._Strength = value;
					this.SendPropertyChanged("Strength");
					this.OnStrengthChanged();
				}
			}
		}
		
		[Column(Storage="_Rank", DbType="Int NOT NULL")]
		public int Rank
		{
			get
			{
				return this._Rank;
			}
			set
			{
				if ((this._Rank != value))
				{
					this.OnRankChanging(value);
					this.SendPropertyChanging();
					this._Rank = value;
					this.SendPropertyChanged("Rank");
					this.OnRankChanged();
				}
			}
		}
		
		[Column(Storage="_DenseRank", DbType="Int NOT NULL")]
		public int DenseRank
		{
			get
			{
				return this._DenseRank;
			}
			set
			{
				if ((this._DenseRank != value))
				{
					this.OnDenseRankChanging(value);
					this.SendPropertyChanging();
					this._DenseRank = value;
					this.SendPropertyChanged("DenseRank");
					this.OnDenseRankChanged();
				}
			}
		}
		
		[Column(Storage="_NTile", DbType="TinyInt NOT NULL")]
		public byte NTile
		{
			get
			{
				return this._NTile;
			}
			set
			{
				if ((this._NTile != value))
				{
					this.OnNTileChanging(value);
					this.SendPropertyChanging();
					this._NTile = value;
					this.SendPropertyChanged("NTile");
					this.OnNTileChanged();
				}
			}
		}
		
		[Association(Name="Host_DisallowedAbsoluteUris_MOST_POPULAR_HOSTS_BY_SCHEME", Storage="_Host", ThisKey="HostID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Host Host
		{
			get
			{
				return this._Host.Entity;
			}
			set
			{
				Host previousValue = this._Host.Entity;
				if (((previousValue != value) 
							|| (this._Host.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Host.Entity = null;
						previousValue.DisallowedAbsoluteUris_MOST_POPULAR_HOSTS_BY_SCHEME = null;
					}
					this._Host.Entity = value;
					if ((value != null))
					{
						value.DisallowedAbsoluteUris_MOST_POPULAR_HOSTS_BY_SCHEME = this;
						this._HostID = value.ID;
					}
					else
					{
						this._HostID = default(int);
					}
					this.SendPropertyChanged("Host");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="rpt.DisallowedAbsoluteUris_MOST_POPULAR_SCHEMES_BY_ABSOLUTEURIS")]
	public partial class DisallowedAbsoluteUris_MOST_POPULAR_SCHEMES_BY_ABSOLUTEURI : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RowNumber;
		
		private System.Nullable<System.DateTime> _InitiallyDiscovered;
		
		private System.DateTime _LastDiscovered;
		
		private int _SchemeID;
		
		private int _Count;
		
		private System.Nullable<short> _DaysSinceInitiallyDiscovered;
		
		private short _DaysSinceLastDiscovered;
		
		private System.Nullable<double> _Strength;
		
		private int _Rank;
		
		private int _DenseRank;
		
		private short _NTile;
		
		private EntityRef<Scheme> _Scheme;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRowNumberChanging(int value);
    partial void OnRowNumberChanged();
    partial void OnInitiallyDiscoveredChanging(System.Nullable<System.DateTime> value);
    partial void OnInitiallyDiscoveredChanged();
    partial void OnLastDiscoveredChanging(System.DateTime value);
    partial void OnLastDiscoveredChanged();
    partial void OnSchemeIDChanging(int value);
    partial void OnSchemeIDChanged();
    partial void OnCountChanging(int value);
    partial void OnCountChanged();
    partial void OnDaysSinceInitiallyDiscoveredChanging(System.Nullable<short> value);
    partial void OnDaysSinceInitiallyDiscoveredChanged();
    partial void OnDaysSinceLastDiscoveredChanging(short value);
    partial void OnDaysSinceLastDiscoveredChanged();
    partial void OnStrengthChanging(System.Nullable<double> value);
    partial void OnStrengthChanged();
    partial void OnRankChanging(int value);
    partial void OnRankChanged();
    partial void OnDenseRankChanging(int value);
    partial void OnDenseRankChanged();
    partial void OnNTileChanging(short value);
    partial void OnNTileChanged();
    #endregion
		
		public DisallowedAbsoluteUris_MOST_POPULAR_SCHEMES_BY_ABSOLUTEURI()
		{
			this._Scheme = default(EntityRef<Scheme>);
			OnCreated();
		}
		
		[Column(Storage="_RowNumber", DbType="Int NOT NULL")]
		public int RowNumber
		{
			get
			{
				return this._RowNumber;
			}
			set
			{
				if ((this._RowNumber != value))
				{
					this.OnRowNumberChanging(value);
					this.SendPropertyChanging();
					this._RowNumber = value;
					this.SendPropertyChanged("RowNumber");
					this.OnRowNumberChanged();
				}
			}
		}
		
		[Column(Storage="_InitiallyDiscovered", DbType="DateTime")]
		public System.Nullable<System.DateTime> InitiallyDiscovered
		{
			get
			{
				return this._InitiallyDiscovered;
			}
			set
			{
				if ((this._InitiallyDiscovered != value))
				{
					this.OnInitiallyDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._InitiallyDiscovered = value;
					this.SendPropertyChanged("InitiallyDiscovered");
					this.OnInitiallyDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_LastDiscovered", DbType="DateTime NOT NULL")]
		public System.DateTime LastDiscovered
		{
			get
			{
				return this._LastDiscovered;
			}
			set
			{
				if ((this._LastDiscovered != value))
				{
					this.OnLastDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._LastDiscovered = value;
					this.SendPropertyChanged("LastDiscovered");
					this.OnLastDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_SchemeID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int SchemeID
		{
			get
			{
				return this._SchemeID;
			}
			set
			{
				if ((this._SchemeID != value))
				{
					if (this._Scheme.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSchemeIDChanging(value);
					this.SendPropertyChanging();
					this._SchemeID = value;
					this.SendPropertyChanged("SchemeID");
					this.OnSchemeIDChanged();
				}
			}
		}
		
		[Column(Storage="_Count", DbType="Int NOT NULL")]
		public int Count
		{
			get
			{
				return this._Count;
			}
			set
			{
				if ((this._Count != value))
				{
					this.OnCountChanging(value);
					this.SendPropertyChanging();
					this._Count = value;
					this.SendPropertyChanged("Count");
					this.OnCountChanged();
				}
			}
		}
		
		[Column(Storage="_DaysSinceInitiallyDiscovered", DbType="SmallInt")]
		public System.Nullable<short> DaysSinceInitiallyDiscovered
		{
			get
			{
				return this._DaysSinceInitiallyDiscovered;
			}
			set
			{
				if ((this._DaysSinceInitiallyDiscovered != value))
				{
					this.OnDaysSinceInitiallyDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._DaysSinceInitiallyDiscovered = value;
					this.SendPropertyChanged("DaysSinceInitiallyDiscovered");
					this.OnDaysSinceInitiallyDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_DaysSinceLastDiscovered", DbType="SmallInt NOT NULL")]
		public short DaysSinceLastDiscovered
		{
			get
			{
				return this._DaysSinceLastDiscovered;
			}
			set
			{
				if ((this._DaysSinceLastDiscovered != value))
				{
					this.OnDaysSinceLastDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._DaysSinceLastDiscovered = value;
					this.SendPropertyChanged("DaysSinceLastDiscovered");
					this.OnDaysSinceLastDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_Strength", DbType="Float")]
		public System.Nullable<double> Strength
		{
			get
			{
				return this._Strength;
			}
			set
			{
				if ((this._Strength != value))
				{
					this.OnStrengthChanging(value);
					this.SendPropertyChanging();
					this._Strength = value;
					this.SendPropertyChanged("Strength");
					this.OnStrengthChanged();
				}
			}
		}
		
		[Column(Storage="_Rank", DbType="Int NOT NULL")]
		public int Rank
		{
			get
			{
				return this._Rank;
			}
			set
			{
				if ((this._Rank != value))
				{
					this.OnRankChanging(value);
					this.SendPropertyChanging();
					this._Rank = value;
					this.SendPropertyChanged("Rank");
					this.OnRankChanged();
				}
			}
		}
		
		[Column(Storage="_DenseRank", DbType="Int NOT NULL")]
		public int DenseRank
		{
			get
			{
				return this._DenseRank;
			}
			set
			{
				if ((this._DenseRank != value))
				{
					this.OnDenseRankChanging(value);
					this.SendPropertyChanging();
					this._DenseRank = value;
					this.SendPropertyChanged("DenseRank");
					this.OnDenseRankChanged();
				}
			}
		}
		
		[Column(Storage="_NTile", DbType="SmallInt NOT NULL")]
		public short NTile
		{
			get
			{
				return this._NTile;
			}
			set
			{
				if ((this._NTile != value))
				{
					this.OnNTileChanging(value);
					this.SendPropertyChanging();
					this._NTile = value;
					this.SendPropertyChanged("NTile");
					this.OnNTileChanged();
				}
			}
		}
		
		[Association(Name="Scheme_DisallowedAbsoluteUris_MOST_POPULAR_SCHEMES_BY_ABSOLUTEURI", Storage="_Scheme", ThisKey="SchemeID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Scheme Scheme
		{
			get
			{
				return this._Scheme.Entity;
			}
			set
			{
				Scheme previousValue = this._Scheme.Entity;
				if (((previousValue != value) 
							|| (this._Scheme.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Scheme.Entity = null;
						previousValue.DisallowedAbsoluteUris_MOST_POPULAR_SCHEMES_BY_ABSOLUTEURI = null;
					}
					this._Scheme.Entity = value;
					if ((value != null))
					{
						value.DisallowedAbsoluteUris_MOST_POPULAR_SCHEMES_BY_ABSOLUTEURI = this;
						this._SchemeID = value.ID;
					}
					else
					{
						this._SchemeID = default(int);
					}
					this.SendPropertyChanged("Scheme");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="rpt.DisallowedAbsoluteUris_MOST_POPULAR_SCHEMES_BY_DOMAINS")]
	public partial class DisallowedAbsoluteUris_MOST_POPULAR_SCHEMES_BY_DOMAIN : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RowNumber;
		
		private System.Nullable<System.DateTime> _InitiallyDiscovered;
		
		private System.DateTime _LastDiscovered;
		
		private int _SchemeID;
		
		private int _Count;
		
		private System.Nullable<short> _DaysSinceInitiallyDiscovered;
		
		private short _DaysSinceLastDiscovered;
		
		private System.Nullable<double> _Strength;
		
		private int _Rank;
		
		private int _DenseRank;
		
		private short _NTile;
		
		private EntityRef<Scheme> _Scheme;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRowNumberChanging(int value);
    partial void OnRowNumberChanged();
    partial void OnInitiallyDiscoveredChanging(System.Nullable<System.DateTime> value);
    partial void OnInitiallyDiscoveredChanged();
    partial void OnLastDiscoveredChanging(System.DateTime value);
    partial void OnLastDiscoveredChanged();
    partial void OnSchemeIDChanging(int value);
    partial void OnSchemeIDChanged();
    partial void OnCountChanging(int value);
    partial void OnCountChanged();
    partial void OnDaysSinceInitiallyDiscoveredChanging(System.Nullable<short> value);
    partial void OnDaysSinceInitiallyDiscoveredChanged();
    partial void OnDaysSinceLastDiscoveredChanging(short value);
    partial void OnDaysSinceLastDiscoveredChanged();
    partial void OnStrengthChanging(System.Nullable<double> value);
    partial void OnStrengthChanged();
    partial void OnRankChanging(int value);
    partial void OnRankChanged();
    partial void OnDenseRankChanging(int value);
    partial void OnDenseRankChanged();
    partial void OnNTileChanging(short value);
    partial void OnNTileChanged();
    #endregion
		
		public DisallowedAbsoluteUris_MOST_POPULAR_SCHEMES_BY_DOMAIN()
		{
			this._Scheme = default(EntityRef<Scheme>);
			OnCreated();
		}
		
		[Column(Storage="_RowNumber", DbType="Int NOT NULL")]
		public int RowNumber
		{
			get
			{
				return this._RowNumber;
			}
			set
			{
				if ((this._RowNumber != value))
				{
					this.OnRowNumberChanging(value);
					this.SendPropertyChanging();
					this._RowNumber = value;
					this.SendPropertyChanged("RowNumber");
					this.OnRowNumberChanged();
				}
			}
		}
		
		[Column(Storage="_InitiallyDiscovered", DbType="DateTime")]
		public System.Nullable<System.DateTime> InitiallyDiscovered
		{
			get
			{
				return this._InitiallyDiscovered;
			}
			set
			{
				if ((this._InitiallyDiscovered != value))
				{
					this.OnInitiallyDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._InitiallyDiscovered = value;
					this.SendPropertyChanged("InitiallyDiscovered");
					this.OnInitiallyDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_LastDiscovered", DbType="DateTime NOT NULL")]
		public System.DateTime LastDiscovered
		{
			get
			{
				return this._LastDiscovered;
			}
			set
			{
				if ((this._LastDiscovered != value))
				{
					this.OnLastDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._LastDiscovered = value;
					this.SendPropertyChanged("LastDiscovered");
					this.OnLastDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_SchemeID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int SchemeID
		{
			get
			{
				return this._SchemeID;
			}
			set
			{
				if ((this._SchemeID != value))
				{
					if (this._Scheme.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSchemeIDChanging(value);
					this.SendPropertyChanging();
					this._SchemeID = value;
					this.SendPropertyChanged("SchemeID");
					this.OnSchemeIDChanged();
				}
			}
		}
		
		[Column(Storage="_Count", DbType="Int NOT NULL")]
		public int Count
		{
			get
			{
				return this._Count;
			}
			set
			{
				if ((this._Count != value))
				{
					this.OnCountChanging(value);
					this.SendPropertyChanging();
					this._Count = value;
					this.SendPropertyChanged("Count");
					this.OnCountChanged();
				}
			}
		}
		
		[Column(Storage="_DaysSinceInitiallyDiscovered", DbType="SmallInt")]
		public System.Nullable<short> DaysSinceInitiallyDiscovered
		{
			get
			{
				return this._DaysSinceInitiallyDiscovered;
			}
			set
			{
				if ((this._DaysSinceInitiallyDiscovered != value))
				{
					this.OnDaysSinceInitiallyDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._DaysSinceInitiallyDiscovered = value;
					this.SendPropertyChanged("DaysSinceInitiallyDiscovered");
					this.OnDaysSinceInitiallyDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_DaysSinceLastDiscovered", DbType="SmallInt NOT NULL")]
		public short DaysSinceLastDiscovered
		{
			get
			{
				return this._DaysSinceLastDiscovered;
			}
			set
			{
				if ((this._DaysSinceLastDiscovered != value))
				{
					this.OnDaysSinceLastDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._DaysSinceLastDiscovered = value;
					this.SendPropertyChanged("DaysSinceLastDiscovered");
					this.OnDaysSinceLastDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_Strength", DbType="Float")]
		public System.Nullable<double> Strength
		{
			get
			{
				return this._Strength;
			}
			set
			{
				if ((this._Strength != value))
				{
					this.OnStrengthChanging(value);
					this.SendPropertyChanging();
					this._Strength = value;
					this.SendPropertyChanged("Strength");
					this.OnStrengthChanged();
				}
			}
		}
		
		[Column(Storage="_Rank", DbType="Int NOT NULL")]
		public int Rank
		{
			get
			{
				return this._Rank;
			}
			set
			{
				if ((this._Rank != value))
				{
					this.OnRankChanging(value);
					this.SendPropertyChanging();
					this._Rank = value;
					this.SendPropertyChanged("Rank");
					this.OnRankChanged();
				}
			}
		}
		
		[Column(Storage="_DenseRank", DbType="Int NOT NULL")]
		public int DenseRank
		{
			get
			{
				return this._DenseRank;
			}
			set
			{
				if ((this._DenseRank != value))
				{
					this.OnDenseRankChanging(value);
					this.SendPropertyChanging();
					this._DenseRank = value;
					this.SendPropertyChanged("DenseRank");
					this.OnDenseRankChanged();
				}
			}
		}
		
		[Column(Storage="_NTile", DbType="SmallInt NOT NULL")]
		public short NTile
		{
			get
			{
				return this._NTile;
			}
			set
			{
				if ((this._NTile != value))
				{
					this.OnNTileChanging(value);
					this.SendPropertyChanging();
					this._NTile = value;
					this.SendPropertyChanged("NTile");
					this.OnNTileChanged();
				}
			}
		}
		
		[Association(Name="Scheme_DisallowedAbsoluteUris_MOST_POPULAR_SCHEMES_BY_DOMAIN", Storage="_Scheme", ThisKey="SchemeID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Scheme Scheme
		{
			get
			{
				return this._Scheme.Entity;
			}
			set
			{
				Scheme previousValue = this._Scheme.Entity;
				if (((previousValue != value) 
							|| (this._Scheme.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Scheme.Entity = null;
						previousValue.DisallowedAbsoluteUris_MOST_POPULAR_SCHEMES_BY_DOMAIN = null;
					}
					this._Scheme.Entity = value;
					if ((value != null))
					{
						value.DisallowedAbsoluteUris_MOST_POPULAR_SCHEMES_BY_DOMAIN = this;
						this._SchemeID = value.ID;
					}
					else
					{
						this._SchemeID = default(int);
					}
					this.SendPropertyChanged("Scheme");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="rpt.DisallowedAbsoluteUris_MOST_POPULAR_SCHEMES_BY_EXTENSIONS")]
	public partial class DisallowedAbsoluteUris_MOST_POPULAR_SCHEMES_BY_EXTENSION : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RowNumber;
		
		private System.Nullable<System.DateTime> _InitiallyDiscovered;
		
		private System.DateTime _LastDiscovered;
		
		private int _SchemeID;
		
		private int _Count;
		
		private System.Nullable<short> _DaysSinceInitiallyDiscovered;
		
		private short _DaysSinceLastDiscovered;
		
		private System.Nullable<double> _Strength;
		
		private int _Rank;
		
		private int _DenseRank;
		
		private short _NTile;
		
		private EntityRef<Scheme> _Scheme;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRowNumberChanging(int value);
    partial void OnRowNumberChanged();
    partial void OnInitiallyDiscoveredChanging(System.Nullable<System.DateTime> value);
    partial void OnInitiallyDiscoveredChanged();
    partial void OnLastDiscoveredChanging(System.DateTime value);
    partial void OnLastDiscoveredChanged();
    partial void OnSchemeIDChanging(int value);
    partial void OnSchemeIDChanged();
    partial void OnCountChanging(int value);
    partial void OnCountChanged();
    partial void OnDaysSinceInitiallyDiscoveredChanging(System.Nullable<short> value);
    partial void OnDaysSinceInitiallyDiscoveredChanged();
    partial void OnDaysSinceLastDiscoveredChanging(short value);
    partial void OnDaysSinceLastDiscoveredChanged();
    partial void OnStrengthChanging(System.Nullable<double> value);
    partial void OnStrengthChanged();
    partial void OnRankChanging(int value);
    partial void OnRankChanged();
    partial void OnDenseRankChanging(int value);
    partial void OnDenseRankChanged();
    partial void OnNTileChanging(short value);
    partial void OnNTileChanged();
    #endregion
		
		public DisallowedAbsoluteUris_MOST_POPULAR_SCHEMES_BY_EXTENSION()
		{
			this._Scheme = default(EntityRef<Scheme>);
			OnCreated();
		}
		
		[Column(Storage="_RowNumber", DbType="Int NOT NULL")]
		public int RowNumber
		{
			get
			{
				return this._RowNumber;
			}
			set
			{
				if ((this._RowNumber != value))
				{
					this.OnRowNumberChanging(value);
					this.SendPropertyChanging();
					this._RowNumber = value;
					this.SendPropertyChanged("RowNumber");
					this.OnRowNumberChanged();
				}
			}
		}
		
		[Column(Storage="_InitiallyDiscovered", DbType="DateTime")]
		public System.Nullable<System.DateTime> InitiallyDiscovered
		{
			get
			{
				return this._InitiallyDiscovered;
			}
			set
			{
				if ((this._InitiallyDiscovered != value))
				{
					this.OnInitiallyDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._InitiallyDiscovered = value;
					this.SendPropertyChanged("InitiallyDiscovered");
					this.OnInitiallyDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_LastDiscovered", DbType="DateTime NOT NULL")]
		public System.DateTime LastDiscovered
		{
			get
			{
				return this._LastDiscovered;
			}
			set
			{
				if ((this._LastDiscovered != value))
				{
					this.OnLastDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._LastDiscovered = value;
					this.SendPropertyChanged("LastDiscovered");
					this.OnLastDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_SchemeID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int SchemeID
		{
			get
			{
				return this._SchemeID;
			}
			set
			{
				if ((this._SchemeID != value))
				{
					if (this._Scheme.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSchemeIDChanging(value);
					this.SendPropertyChanging();
					this._SchemeID = value;
					this.SendPropertyChanged("SchemeID");
					this.OnSchemeIDChanged();
				}
			}
		}
		
		[Column(Storage="_Count", DbType="Int NOT NULL")]
		public int Count
		{
			get
			{
				return this._Count;
			}
			set
			{
				if ((this._Count != value))
				{
					this.OnCountChanging(value);
					this.SendPropertyChanging();
					this._Count = value;
					this.SendPropertyChanged("Count");
					this.OnCountChanged();
				}
			}
		}
		
		[Column(Storage="_DaysSinceInitiallyDiscovered", DbType="SmallInt")]
		public System.Nullable<short> DaysSinceInitiallyDiscovered
		{
			get
			{
				return this._DaysSinceInitiallyDiscovered;
			}
			set
			{
				if ((this._DaysSinceInitiallyDiscovered != value))
				{
					this.OnDaysSinceInitiallyDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._DaysSinceInitiallyDiscovered = value;
					this.SendPropertyChanged("DaysSinceInitiallyDiscovered");
					this.OnDaysSinceInitiallyDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_DaysSinceLastDiscovered", DbType="SmallInt NOT NULL")]
		public short DaysSinceLastDiscovered
		{
			get
			{
				return this._DaysSinceLastDiscovered;
			}
			set
			{
				if ((this._DaysSinceLastDiscovered != value))
				{
					this.OnDaysSinceLastDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._DaysSinceLastDiscovered = value;
					this.SendPropertyChanged("DaysSinceLastDiscovered");
					this.OnDaysSinceLastDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_Strength", DbType="Float")]
		public System.Nullable<double> Strength
		{
			get
			{
				return this._Strength;
			}
			set
			{
				if ((this._Strength != value))
				{
					this.OnStrengthChanging(value);
					this.SendPropertyChanging();
					this._Strength = value;
					this.SendPropertyChanged("Strength");
					this.OnStrengthChanged();
				}
			}
		}
		
		[Column(Storage="_Rank", DbType="Int NOT NULL")]
		public int Rank
		{
			get
			{
				return this._Rank;
			}
			set
			{
				if ((this._Rank != value))
				{
					this.OnRankChanging(value);
					this.SendPropertyChanging();
					this._Rank = value;
					this.SendPropertyChanged("Rank");
					this.OnRankChanged();
				}
			}
		}
		
		[Column(Storage="_DenseRank", DbType="Int NOT NULL")]
		public int DenseRank
		{
			get
			{
				return this._DenseRank;
			}
			set
			{
				if ((this._DenseRank != value))
				{
					this.OnDenseRankChanging(value);
					this.SendPropertyChanging();
					this._DenseRank = value;
					this.SendPropertyChanged("DenseRank");
					this.OnDenseRankChanged();
				}
			}
		}
		
		[Column(Storage="_NTile", DbType="SmallInt NOT NULL")]
		public short NTile
		{
			get
			{
				return this._NTile;
			}
			set
			{
				if ((this._NTile != value))
				{
					this.OnNTileChanging(value);
					this.SendPropertyChanging();
					this._NTile = value;
					this.SendPropertyChanged("NTile");
					this.OnNTileChanged();
				}
			}
		}
		
		[Association(Name="Scheme_DisallowedAbsoluteUris_MOST_POPULAR_SCHEMES_BY_EXTENSION", Storage="_Scheme", ThisKey="SchemeID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Scheme Scheme
		{
			get
			{
				return this._Scheme.Entity;
			}
			set
			{
				Scheme previousValue = this._Scheme.Entity;
				if (((previousValue != value) 
							|| (this._Scheme.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Scheme.Entity = null;
						previousValue.DisallowedAbsoluteUris_MOST_POPULAR_SCHEMES_BY_EXTENSION = null;
					}
					this._Scheme.Entity = value;
					if ((value != null))
					{
						value.DisallowedAbsoluteUris_MOST_POPULAR_SCHEMES_BY_EXTENSION = this;
						this._SchemeID = value.ID;
					}
					else
					{
						this._SchemeID = default(int);
					}
					this.SendPropertyChanged("Scheme");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="rpt.DisallowedAbsoluteUris_MOST_POPULAR_SCHEMES_BY_HOSTS")]
	public partial class DisallowedAbsoluteUris_MOST_POPULAR_SCHEMES_BY_HOST : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RowNumber;
		
		private System.Nullable<System.DateTime> _InitiallyDiscovered;
		
		private System.DateTime _LastDiscovered;
		
		private int _SchemeID;
		
		private int _Count;
		
		private System.Nullable<short> _DaysSinceInitiallyDiscovered;
		
		private short _DaysSinceLastDiscovered;
		
		private System.Nullable<double> _Strength;
		
		private int _Rank;
		
		private int _DenseRank;
		
		private short _NTile;
		
		private EntityRef<Scheme> _Scheme;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRowNumberChanging(int value);
    partial void OnRowNumberChanged();
    partial void OnInitiallyDiscoveredChanging(System.Nullable<System.DateTime> value);
    partial void OnInitiallyDiscoveredChanged();
    partial void OnLastDiscoveredChanging(System.DateTime value);
    partial void OnLastDiscoveredChanged();
    partial void OnSchemeIDChanging(int value);
    partial void OnSchemeIDChanged();
    partial void OnCountChanging(int value);
    partial void OnCountChanged();
    partial void OnDaysSinceInitiallyDiscoveredChanging(System.Nullable<short> value);
    partial void OnDaysSinceInitiallyDiscoveredChanged();
    partial void OnDaysSinceLastDiscoveredChanging(short value);
    partial void OnDaysSinceLastDiscoveredChanged();
    partial void OnStrengthChanging(System.Nullable<double> value);
    partial void OnStrengthChanged();
    partial void OnRankChanging(int value);
    partial void OnRankChanged();
    partial void OnDenseRankChanging(int value);
    partial void OnDenseRankChanged();
    partial void OnNTileChanging(short value);
    partial void OnNTileChanged();
    #endregion
		
		public DisallowedAbsoluteUris_MOST_POPULAR_SCHEMES_BY_HOST()
		{
			this._Scheme = default(EntityRef<Scheme>);
			OnCreated();
		}
		
		[Column(Storage="_RowNumber", DbType="Int NOT NULL")]
		public int RowNumber
		{
			get
			{
				return this._RowNumber;
			}
			set
			{
				if ((this._RowNumber != value))
				{
					this.OnRowNumberChanging(value);
					this.SendPropertyChanging();
					this._RowNumber = value;
					this.SendPropertyChanged("RowNumber");
					this.OnRowNumberChanged();
				}
			}
		}
		
		[Column(Storage="_InitiallyDiscovered", DbType="DateTime")]
		public System.Nullable<System.DateTime> InitiallyDiscovered
		{
			get
			{
				return this._InitiallyDiscovered;
			}
			set
			{
				if ((this._InitiallyDiscovered != value))
				{
					this.OnInitiallyDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._InitiallyDiscovered = value;
					this.SendPropertyChanged("InitiallyDiscovered");
					this.OnInitiallyDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_LastDiscovered", DbType="DateTime NOT NULL")]
		public System.DateTime LastDiscovered
		{
			get
			{
				return this._LastDiscovered;
			}
			set
			{
				if ((this._LastDiscovered != value))
				{
					this.OnLastDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._LastDiscovered = value;
					this.SendPropertyChanged("LastDiscovered");
					this.OnLastDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_SchemeID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int SchemeID
		{
			get
			{
				return this._SchemeID;
			}
			set
			{
				if ((this._SchemeID != value))
				{
					if (this._Scheme.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSchemeIDChanging(value);
					this.SendPropertyChanging();
					this._SchemeID = value;
					this.SendPropertyChanged("SchemeID");
					this.OnSchemeIDChanged();
				}
			}
		}
		
		[Column(Storage="_Count", DbType="Int NOT NULL")]
		public int Count
		{
			get
			{
				return this._Count;
			}
			set
			{
				if ((this._Count != value))
				{
					this.OnCountChanging(value);
					this.SendPropertyChanging();
					this._Count = value;
					this.SendPropertyChanged("Count");
					this.OnCountChanged();
				}
			}
		}
		
		[Column(Storage="_DaysSinceInitiallyDiscovered", DbType="SmallInt")]
		public System.Nullable<short> DaysSinceInitiallyDiscovered
		{
			get
			{
				return this._DaysSinceInitiallyDiscovered;
			}
			set
			{
				if ((this._DaysSinceInitiallyDiscovered != value))
				{
					this.OnDaysSinceInitiallyDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._DaysSinceInitiallyDiscovered = value;
					this.SendPropertyChanged("DaysSinceInitiallyDiscovered");
					this.OnDaysSinceInitiallyDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_DaysSinceLastDiscovered", DbType="SmallInt NOT NULL")]
		public short DaysSinceLastDiscovered
		{
			get
			{
				return this._DaysSinceLastDiscovered;
			}
			set
			{
				if ((this._DaysSinceLastDiscovered != value))
				{
					this.OnDaysSinceLastDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._DaysSinceLastDiscovered = value;
					this.SendPropertyChanged("DaysSinceLastDiscovered");
					this.OnDaysSinceLastDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_Strength", DbType="Float")]
		public System.Nullable<double> Strength
		{
			get
			{
				return this._Strength;
			}
			set
			{
				if ((this._Strength != value))
				{
					this.OnStrengthChanging(value);
					this.SendPropertyChanging();
					this._Strength = value;
					this.SendPropertyChanged("Strength");
					this.OnStrengthChanged();
				}
			}
		}
		
		[Column(Storage="_Rank", DbType="Int NOT NULL")]
		public int Rank
		{
			get
			{
				return this._Rank;
			}
			set
			{
				if ((this._Rank != value))
				{
					this.OnRankChanging(value);
					this.SendPropertyChanging();
					this._Rank = value;
					this.SendPropertyChanged("Rank");
					this.OnRankChanged();
				}
			}
		}
		
		[Column(Storage="_DenseRank", DbType="Int NOT NULL")]
		public int DenseRank
		{
			get
			{
				return this._DenseRank;
			}
			set
			{
				if ((this._DenseRank != value))
				{
					this.OnDenseRankChanging(value);
					this.SendPropertyChanging();
					this._DenseRank = value;
					this.SendPropertyChanged("DenseRank");
					this.OnDenseRankChanged();
				}
			}
		}
		
		[Column(Storage="_NTile", DbType="SmallInt NOT NULL")]
		public short NTile
		{
			get
			{
				return this._NTile;
			}
			set
			{
				if ((this._NTile != value))
				{
					this.OnNTileChanging(value);
					this.SendPropertyChanging();
					this._NTile = value;
					this.SendPropertyChanged("NTile");
					this.OnNTileChanged();
				}
			}
		}
		
		[Association(Name="Scheme_DisallowedAbsoluteUris_MOST_POPULAR_SCHEMES_BY_HOST", Storage="_Scheme", ThisKey="SchemeID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Scheme Scheme
		{
			get
			{
				return this._Scheme.Entity;
			}
			set
			{
				Scheme previousValue = this._Scheme.Entity;
				if (((previousValue != value) 
							|| (this._Scheme.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Scheme.Entity = null;
						previousValue.DisallowedAbsoluteUris_MOST_POPULAR_SCHEMES_BY_HOST = null;
					}
					this._Scheme.Entity = value;
					if ((value != null))
					{
						value.DisallowedAbsoluteUris_MOST_POPULAR_SCHEMES_BY_HOST = this;
						this._SchemeID = value.ID;
					}
					else
					{
						this._SchemeID = default(int);
					}
					this.SendPropertyChanged("Scheme");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="rpt.DisallowedAbsoluteUris_MOST_POPULAR_SCHEMES_BY_SCHEMES")]
	public partial class DisallowedAbsoluteUris_MOST_POPULAR_SCHEMES_BY_SCHEME : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RowNumber;
		
		private System.Nullable<System.DateTime> _InitiallyDiscovered;
		
		private System.DateTime _LastDiscovered;
		
		private int _SchemeID;
		
		private int _Count;
		
		private System.Nullable<short> _DaysSinceInitiallyDiscovered;
		
		private short _DaysSinceLastDiscovered;
		
		private System.Nullable<double> _Strength;
		
		private int _Rank;
		
		private int _DenseRank;
		
		private short _NTile;
		
		private EntityRef<Scheme> _Scheme;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRowNumberChanging(int value);
    partial void OnRowNumberChanged();
    partial void OnInitiallyDiscoveredChanging(System.Nullable<System.DateTime> value);
    partial void OnInitiallyDiscoveredChanged();
    partial void OnLastDiscoveredChanging(System.DateTime value);
    partial void OnLastDiscoveredChanged();
    partial void OnSchemeIDChanging(int value);
    partial void OnSchemeIDChanged();
    partial void OnCountChanging(int value);
    partial void OnCountChanged();
    partial void OnDaysSinceInitiallyDiscoveredChanging(System.Nullable<short> value);
    partial void OnDaysSinceInitiallyDiscoveredChanged();
    partial void OnDaysSinceLastDiscoveredChanging(short value);
    partial void OnDaysSinceLastDiscoveredChanged();
    partial void OnStrengthChanging(System.Nullable<double> value);
    partial void OnStrengthChanged();
    partial void OnRankChanging(int value);
    partial void OnRankChanged();
    partial void OnDenseRankChanging(int value);
    partial void OnDenseRankChanged();
    partial void OnNTileChanging(short value);
    partial void OnNTileChanged();
    #endregion
		
		public DisallowedAbsoluteUris_MOST_POPULAR_SCHEMES_BY_SCHEME()
		{
			this._Scheme = default(EntityRef<Scheme>);
			OnCreated();
		}
		
		[Column(Storage="_RowNumber", DbType="Int NOT NULL")]
		public int RowNumber
		{
			get
			{
				return this._RowNumber;
			}
			set
			{
				if ((this._RowNumber != value))
				{
					this.OnRowNumberChanging(value);
					this.SendPropertyChanging();
					this._RowNumber = value;
					this.SendPropertyChanged("RowNumber");
					this.OnRowNumberChanged();
				}
			}
		}
		
		[Column(Storage="_InitiallyDiscovered", DbType="DateTime")]
		public System.Nullable<System.DateTime> InitiallyDiscovered
		{
			get
			{
				return this._InitiallyDiscovered;
			}
			set
			{
				if ((this._InitiallyDiscovered != value))
				{
					this.OnInitiallyDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._InitiallyDiscovered = value;
					this.SendPropertyChanged("InitiallyDiscovered");
					this.OnInitiallyDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_LastDiscovered", DbType="DateTime NOT NULL")]
		public System.DateTime LastDiscovered
		{
			get
			{
				return this._LastDiscovered;
			}
			set
			{
				if ((this._LastDiscovered != value))
				{
					this.OnLastDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._LastDiscovered = value;
					this.SendPropertyChanged("LastDiscovered");
					this.OnLastDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_SchemeID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int SchemeID
		{
			get
			{
				return this._SchemeID;
			}
			set
			{
				if ((this._SchemeID != value))
				{
					if (this._Scheme.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSchemeIDChanging(value);
					this.SendPropertyChanging();
					this._SchemeID = value;
					this.SendPropertyChanged("SchemeID");
					this.OnSchemeIDChanged();
				}
			}
		}
		
		[Column(Storage="_Count", DbType="Int NOT NULL")]
		public int Count
		{
			get
			{
				return this._Count;
			}
			set
			{
				if ((this._Count != value))
				{
					this.OnCountChanging(value);
					this.SendPropertyChanging();
					this._Count = value;
					this.SendPropertyChanged("Count");
					this.OnCountChanged();
				}
			}
		}
		
		[Column(Storage="_DaysSinceInitiallyDiscovered", DbType="SmallInt")]
		public System.Nullable<short> DaysSinceInitiallyDiscovered
		{
			get
			{
				return this._DaysSinceInitiallyDiscovered;
			}
			set
			{
				if ((this._DaysSinceInitiallyDiscovered != value))
				{
					this.OnDaysSinceInitiallyDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._DaysSinceInitiallyDiscovered = value;
					this.SendPropertyChanged("DaysSinceInitiallyDiscovered");
					this.OnDaysSinceInitiallyDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_DaysSinceLastDiscovered", DbType="SmallInt NOT NULL")]
		public short DaysSinceLastDiscovered
		{
			get
			{
				return this._DaysSinceLastDiscovered;
			}
			set
			{
				if ((this._DaysSinceLastDiscovered != value))
				{
					this.OnDaysSinceLastDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._DaysSinceLastDiscovered = value;
					this.SendPropertyChanged("DaysSinceLastDiscovered");
					this.OnDaysSinceLastDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_Strength", DbType="Float")]
		public System.Nullable<double> Strength
		{
			get
			{
				return this._Strength;
			}
			set
			{
				if ((this._Strength != value))
				{
					this.OnStrengthChanging(value);
					this.SendPropertyChanging();
					this._Strength = value;
					this.SendPropertyChanged("Strength");
					this.OnStrengthChanged();
				}
			}
		}
		
		[Column(Storage="_Rank", DbType="Int NOT NULL")]
		public int Rank
		{
			get
			{
				return this._Rank;
			}
			set
			{
				if ((this._Rank != value))
				{
					this.OnRankChanging(value);
					this.SendPropertyChanging();
					this._Rank = value;
					this.SendPropertyChanged("Rank");
					this.OnRankChanged();
				}
			}
		}
		
		[Column(Storage="_DenseRank", DbType="Int NOT NULL")]
		public int DenseRank
		{
			get
			{
				return this._DenseRank;
			}
			set
			{
				if ((this._DenseRank != value))
				{
					this.OnDenseRankChanging(value);
					this.SendPropertyChanging();
					this._DenseRank = value;
					this.SendPropertyChanged("DenseRank");
					this.OnDenseRankChanged();
				}
			}
		}
		
		[Column(Storage="_NTile", DbType="SmallInt NOT NULL")]
		public short NTile
		{
			get
			{
				return this._NTile;
			}
			set
			{
				if ((this._NTile != value))
				{
					this.OnNTileChanging(value);
					this.SendPropertyChanging();
					this._NTile = value;
					this.SendPropertyChanged("NTile");
					this.OnNTileChanged();
				}
			}
		}
		
		[Association(Name="Scheme_DisallowedAbsoluteUris_MOST_POPULAR_SCHEMES_BY_SCHEME", Storage="_Scheme", ThisKey="SchemeID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Scheme Scheme
		{
			get
			{
				return this._Scheme.Entity;
			}
			set
			{
				Scheme previousValue = this._Scheme.Entity;
				if (((previousValue != value) 
							|| (this._Scheme.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Scheme.Entity = null;
						previousValue.DisallowedAbsoluteUris_MOST_POPULAR_SCHEMES_BY_SCHEME = null;
					}
					this._Scheme.Entity = value;
					if ((value != null))
					{
						value.DisallowedAbsoluteUris_MOST_POPULAR_SCHEMES_BY_SCHEME = this;
						this._SchemeID = value.ID;
					}
					else
					{
						this._SchemeID = default(int);
					}
					this.SendPropertyChanged("Scheme");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="rpt.EmailAddresses_COUNT_BY_ABSOLUTEURI")]
	public partial class EmailAddresses_COUNT_BY_ABSOLUTEURI : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RowNumber;
		
		private long _EmailAddressID;
		
		private int _Count;
		
		private int _Rank;
		
		private int _DenseRank;
		
		private byte _NTile;
		
		private EntityRef<EmailAddress> _EmailAddress;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRowNumberChanging(int value);
    partial void OnRowNumberChanged();
    partial void OnEmailAddressIDChanging(long value);
    partial void OnEmailAddressIDChanged();
    partial void OnCountChanging(int value);
    partial void OnCountChanged();
    partial void OnRankChanging(int value);
    partial void OnRankChanged();
    partial void OnDenseRankChanging(int value);
    partial void OnDenseRankChanged();
    partial void OnNTileChanging(byte value);
    partial void OnNTileChanged();
    #endregion
		
		public EmailAddresses_COUNT_BY_ABSOLUTEURI()
		{
			this._EmailAddress = default(EntityRef<EmailAddress>);
			OnCreated();
		}
		
		[Column(Storage="_RowNumber", DbType="Int NOT NULL")]
		public int RowNumber
		{
			get
			{
				return this._RowNumber;
			}
			set
			{
				if ((this._RowNumber != value))
				{
					this.OnRowNumberChanging(value);
					this.SendPropertyChanging();
					this._RowNumber = value;
					this.SendPropertyChanged("RowNumber");
					this.OnRowNumberChanged();
				}
			}
		}
		
		[Column(Storage="_EmailAddressID", DbType="BigInt NOT NULL", IsPrimaryKey=true)]
		public long EmailAddressID
		{
			get
			{
				return this._EmailAddressID;
			}
			set
			{
				if ((this._EmailAddressID != value))
				{
					if (this._EmailAddress.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnEmailAddressIDChanging(value);
					this.SendPropertyChanging();
					this._EmailAddressID = value;
					this.SendPropertyChanged("EmailAddressID");
					this.OnEmailAddressIDChanged();
				}
			}
		}
		
		[Column(Storage="_Count", DbType="Int NOT NULL")]
		public int Count
		{
			get
			{
				return this._Count;
			}
			set
			{
				if ((this._Count != value))
				{
					this.OnCountChanging(value);
					this.SendPropertyChanging();
					this._Count = value;
					this.SendPropertyChanged("Count");
					this.OnCountChanged();
				}
			}
		}
		
		[Column(Storage="_Rank", DbType="Int NOT NULL")]
		public int Rank
		{
			get
			{
				return this._Rank;
			}
			set
			{
				if ((this._Rank != value))
				{
					this.OnRankChanging(value);
					this.SendPropertyChanging();
					this._Rank = value;
					this.SendPropertyChanged("Rank");
					this.OnRankChanged();
				}
			}
		}
		
		[Column(Storage="_DenseRank", DbType="Int NOT NULL")]
		public int DenseRank
		{
			get
			{
				return this._DenseRank;
			}
			set
			{
				if ((this._DenseRank != value))
				{
					this.OnDenseRankChanging(value);
					this.SendPropertyChanging();
					this._DenseRank = value;
					this.SendPropertyChanged("DenseRank");
					this.OnDenseRankChanged();
				}
			}
		}
		
		[Column(Storage="_NTile", DbType="TinyInt NOT NULL")]
		public byte NTile
		{
			get
			{
				return this._NTile;
			}
			set
			{
				if ((this._NTile != value))
				{
					this.OnNTileChanging(value);
					this.SendPropertyChanging();
					this._NTile = value;
					this.SendPropertyChanged("NTile");
					this.OnNTileChanged();
				}
			}
		}
		
		[Association(Name="EmailAddress_EmailAddresses_COUNT_BY_ABSOLUTEURI", Storage="_EmailAddress", ThisKey="EmailAddressID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public EmailAddress EmailAddress
		{
			get
			{
				return this._EmailAddress.Entity;
			}
			set
			{
				EmailAddress previousValue = this._EmailAddress.Entity;
				if (((previousValue != value) 
							|| (this._EmailAddress.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._EmailAddress.Entity = null;
						previousValue.EmailAddresses_COUNT_BY_ABSOLUTEURI = null;
					}
					this._EmailAddress.Entity = value;
					if ((value != null))
					{
						value.EmailAddresses_COUNT_BY_ABSOLUTEURI = this;
						this._EmailAddressID = value.ID;
					}
					else
					{
						this._EmailAddressID = default(long);
					}
					this.SendPropertyChanged("EmailAddress");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="rpt.EmailAddresses_COUNT_BY_DOMAIN")]
	public partial class EmailAddresses_COUNT_BY_DOMAIN : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RowNumber;
		
		private int _DomainID;
		
		private int _Count;
		
		private int _Rank;
		
		private int _DenseRank;
		
		private byte _NTile;
		
		private EntityRef<Domain> _Domain;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRowNumberChanging(int value);
    partial void OnRowNumberChanged();
    partial void OnDomainIDChanging(int value);
    partial void OnDomainIDChanged();
    partial void OnCountChanging(int value);
    partial void OnCountChanged();
    partial void OnRankChanging(int value);
    partial void OnRankChanged();
    partial void OnDenseRankChanging(int value);
    partial void OnDenseRankChanged();
    partial void OnNTileChanging(byte value);
    partial void OnNTileChanged();
    #endregion
		
		public EmailAddresses_COUNT_BY_DOMAIN()
		{
			this._Domain = default(EntityRef<Domain>);
			OnCreated();
		}
		
		[Column(Storage="_RowNumber", DbType="Int NOT NULL")]
		public int RowNumber
		{
			get
			{
				return this._RowNumber;
			}
			set
			{
				if ((this._RowNumber != value))
				{
					this.OnRowNumberChanging(value);
					this.SendPropertyChanging();
					this._RowNumber = value;
					this.SendPropertyChanged("RowNumber");
					this.OnRowNumberChanged();
				}
			}
		}
		
		[Column(Storage="_DomainID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int DomainID
		{
			get
			{
				return this._DomainID;
			}
			set
			{
				if ((this._DomainID != value))
				{
					if (this._Domain.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDomainIDChanging(value);
					this.SendPropertyChanging();
					this._DomainID = value;
					this.SendPropertyChanged("DomainID");
					this.OnDomainIDChanged();
				}
			}
		}
		
		[Column(Storage="_Count", DbType="Int NOT NULL")]
		public int Count
		{
			get
			{
				return this._Count;
			}
			set
			{
				if ((this._Count != value))
				{
					this.OnCountChanging(value);
					this.SendPropertyChanging();
					this._Count = value;
					this.SendPropertyChanged("Count");
					this.OnCountChanged();
				}
			}
		}
		
		[Column(Storage="_Rank", DbType="Int NOT NULL")]
		public int Rank
		{
			get
			{
				return this._Rank;
			}
			set
			{
				if ((this._Rank != value))
				{
					this.OnRankChanging(value);
					this.SendPropertyChanging();
					this._Rank = value;
					this.SendPropertyChanged("Rank");
					this.OnRankChanged();
				}
			}
		}
		
		[Column(Storage="_DenseRank", DbType="Int NOT NULL")]
		public int DenseRank
		{
			get
			{
				return this._DenseRank;
			}
			set
			{
				if ((this._DenseRank != value))
				{
					this.OnDenseRankChanging(value);
					this.SendPropertyChanging();
					this._DenseRank = value;
					this.SendPropertyChanged("DenseRank");
					this.OnDenseRankChanged();
				}
			}
		}
		
		[Column(Storage="_NTile", DbType="TinyInt NOT NULL")]
		public byte NTile
		{
			get
			{
				return this._NTile;
			}
			set
			{
				if ((this._NTile != value))
				{
					this.OnNTileChanging(value);
					this.SendPropertyChanging();
					this._NTile = value;
					this.SendPropertyChanged("NTile");
					this.OnNTileChanged();
				}
			}
		}
		
		[Association(Name="Domain_EmailAddresses_COUNT_BY_DOMAIN", Storage="_Domain", ThisKey="DomainID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Domain Domain
		{
			get
			{
				return this._Domain.Entity;
			}
			set
			{
				Domain previousValue = this._Domain.Entity;
				if (((previousValue != value) 
							|| (this._Domain.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Domain.Entity = null;
						previousValue.EmailAddresses_COUNT_BY_DOMAIN = null;
					}
					this._Domain.Entity = value;
					if ((value != null))
					{
						value.EmailAddresses_COUNT_BY_DOMAIN = this;
						this._DomainID = value.ID;
					}
					else
					{
						this._DomainID = default(int);
					}
					this.SendPropertyChanged("Domain");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="rpt.EmailAddresses_COUNT_BY_EXTENSION")]
	public partial class EmailAddresses_COUNT_BY_EXTENSION : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RowNumber;
		
		private int _ExtensionID;
		
		private int _Count;
		
		private int _Rank;
		
		private int _DenseRank;
		
		private byte _NTile;
		
		private EntityRef<Extension> _Extension;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRowNumberChanging(int value);
    partial void OnRowNumberChanged();
    partial void OnExtensionIDChanging(int value);
    partial void OnExtensionIDChanged();
    partial void OnCountChanging(int value);
    partial void OnCountChanged();
    partial void OnRankChanging(int value);
    partial void OnRankChanged();
    partial void OnDenseRankChanging(int value);
    partial void OnDenseRankChanged();
    partial void OnNTileChanging(byte value);
    partial void OnNTileChanged();
    #endregion
		
		public EmailAddresses_COUNT_BY_EXTENSION()
		{
			this._Extension = default(EntityRef<Extension>);
			OnCreated();
		}
		
		[Column(Storage="_RowNumber", DbType="Int NOT NULL")]
		public int RowNumber
		{
			get
			{
				return this._RowNumber;
			}
			set
			{
				if ((this._RowNumber != value))
				{
					this.OnRowNumberChanging(value);
					this.SendPropertyChanging();
					this._RowNumber = value;
					this.SendPropertyChanged("RowNumber");
					this.OnRowNumberChanged();
				}
			}
		}
		
		[Column(Storage="_ExtensionID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ExtensionID
		{
			get
			{
				return this._ExtensionID;
			}
			set
			{
				if ((this._ExtensionID != value))
				{
					if (this._Extension.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnExtensionIDChanging(value);
					this.SendPropertyChanging();
					this._ExtensionID = value;
					this.SendPropertyChanged("ExtensionID");
					this.OnExtensionIDChanged();
				}
			}
		}
		
		[Column(Storage="_Count", DbType="Int NOT NULL")]
		public int Count
		{
			get
			{
				return this._Count;
			}
			set
			{
				if ((this._Count != value))
				{
					this.OnCountChanging(value);
					this.SendPropertyChanging();
					this._Count = value;
					this.SendPropertyChanged("Count");
					this.OnCountChanged();
				}
			}
		}
		
		[Column(Storage="_Rank", DbType="Int NOT NULL")]
		public int Rank
		{
			get
			{
				return this._Rank;
			}
			set
			{
				if ((this._Rank != value))
				{
					this.OnRankChanging(value);
					this.SendPropertyChanging();
					this._Rank = value;
					this.SendPropertyChanged("Rank");
					this.OnRankChanged();
				}
			}
		}
		
		[Column(Storage="_DenseRank", DbType="Int NOT NULL")]
		public int DenseRank
		{
			get
			{
				return this._DenseRank;
			}
			set
			{
				if ((this._DenseRank != value))
				{
					this.OnDenseRankChanging(value);
					this.SendPropertyChanging();
					this._DenseRank = value;
					this.SendPropertyChanged("DenseRank");
					this.OnDenseRankChanged();
				}
			}
		}
		
		[Column(Storage="_NTile", DbType="TinyInt NOT NULL")]
		public byte NTile
		{
			get
			{
				return this._NTile;
			}
			set
			{
				if ((this._NTile != value))
				{
					this.OnNTileChanging(value);
					this.SendPropertyChanging();
					this._NTile = value;
					this.SendPropertyChanged("NTile");
					this.OnNTileChanged();
				}
			}
		}
		
		[Association(Name="Extension_EmailAddresses_COUNT_BY_EXTENSION", Storage="_Extension", ThisKey="ExtensionID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Extension Extension
		{
			get
			{
				return this._Extension.Entity;
			}
			set
			{
				Extension previousValue = this._Extension.Entity;
				if (((previousValue != value) 
							|| (this._Extension.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Extension.Entity = null;
						previousValue.EmailAddresses_COUNT_BY_EXTENSION = null;
					}
					this._Extension.Entity = value;
					if ((value != null))
					{
						value.EmailAddresses_COUNT_BY_EXTENSION = this;
						this._ExtensionID = value.ID;
					}
					else
					{
						this._ExtensionID = default(int);
					}
					this.SendPropertyChanged("Extension");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="rpt.EmailAddresses_COUNT_BY_HOST")]
	public partial class EmailAddresses_COUNT_BY_HOST : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RowNumber;
		
		private int _HostID;
		
		private int _Count;
		
		private int _Rank;
		
		private int _DenseRank;
		
		private byte _NTile;
		
		private EntityRef<Host> _Host;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRowNumberChanging(int value);
    partial void OnRowNumberChanged();
    partial void OnHostIDChanging(int value);
    partial void OnHostIDChanged();
    partial void OnCountChanging(int value);
    partial void OnCountChanged();
    partial void OnRankChanging(int value);
    partial void OnRankChanged();
    partial void OnDenseRankChanging(int value);
    partial void OnDenseRankChanged();
    partial void OnNTileChanging(byte value);
    partial void OnNTileChanged();
    #endregion
		
		public EmailAddresses_COUNT_BY_HOST()
		{
			this._Host = default(EntityRef<Host>);
			OnCreated();
		}
		
		[Column(Storage="_RowNumber", DbType="Int NOT NULL")]
		public int RowNumber
		{
			get
			{
				return this._RowNumber;
			}
			set
			{
				if ((this._RowNumber != value))
				{
					this.OnRowNumberChanging(value);
					this.SendPropertyChanging();
					this._RowNumber = value;
					this.SendPropertyChanged("RowNumber");
					this.OnRowNumberChanged();
				}
			}
		}
		
		[Column(Storage="_HostID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int HostID
		{
			get
			{
				return this._HostID;
			}
			set
			{
				if ((this._HostID != value))
				{
					if (this._Host.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnHostIDChanging(value);
					this.SendPropertyChanging();
					this._HostID = value;
					this.SendPropertyChanged("HostID");
					this.OnHostIDChanged();
				}
			}
		}
		
		[Column(Storage="_Count", DbType="Int NOT NULL")]
		public int Count
		{
			get
			{
				return this._Count;
			}
			set
			{
				if ((this._Count != value))
				{
					this.OnCountChanging(value);
					this.SendPropertyChanging();
					this._Count = value;
					this.SendPropertyChanged("Count");
					this.OnCountChanged();
				}
			}
		}
		
		[Column(Storage="_Rank", DbType="Int NOT NULL")]
		public int Rank
		{
			get
			{
				return this._Rank;
			}
			set
			{
				if ((this._Rank != value))
				{
					this.OnRankChanging(value);
					this.SendPropertyChanging();
					this._Rank = value;
					this.SendPropertyChanged("Rank");
					this.OnRankChanged();
				}
			}
		}
		
		[Column(Storage="_DenseRank", DbType="Int NOT NULL")]
		public int DenseRank
		{
			get
			{
				return this._DenseRank;
			}
			set
			{
				if ((this._DenseRank != value))
				{
					this.OnDenseRankChanging(value);
					this.SendPropertyChanging();
					this._DenseRank = value;
					this.SendPropertyChanged("DenseRank");
					this.OnDenseRankChanged();
				}
			}
		}
		
		[Column(Storage="_NTile", DbType="TinyInt NOT NULL")]
		public byte NTile
		{
			get
			{
				return this._NTile;
			}
			set
			{
				if ((this._NTile != value))
				{
					this.OnNTileChanging(value);
					this.SendPropertyChanging();
					this._NTile = value;
					this.SendPropertyChanged("NTile");
					this.OnNTileChanged();
				}
			}
		}
		
		[Association(Name="Host_EmailAddresses_COUNT_BY_HOST", Storage="_Host", ThisKey="HostID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Host Host
		{
			get
			{
				return this._Host.Entity;
			}
			set
			{
				Host previousValue = this._Host.Entity;
				if (((previousValue != value) 
							|| (this._Host.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Host.Entity = null;
						previousValue.EmailAddresses_COUNT_BY_HOST = null;
					}
					this._Host.Entity = value;
					if ((value != null))
					{
						value.EmailAddresses_COUNT_BY_HOST = this;
						this._HostID = value.ID;
					}
					else
					{
						this._HostID = default(int);
					}
					this.SendPropertyChanged("Host");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="rpt.EmailAddresses_COUNT_BY_SCHEME")]
	public partial class EmailAddresses_COUNT_BY_SCHEME : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RowNumber;
		
		private int _SchemeID;
		
		private int _Count;
		
		private int _Rank;
		
		private int _DenseRank;
		
		private byte _NTile;
		
		private EntityRef<Scheme> _Scheme;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRowNumberChanging(int value);
    partial void OnRowNumberChanged();
    partial void OnSchemeIDChanging(int value);
    partial void OnSchemeIDChanged();
    partial void OnCountChanging(int value);
    partial void OnCountChanged();
    partial void OnRankChanging(int value);
    partial void OnRankChanged();
    partial void OnDenseRankChanging(int value);
    partial void OnDenseRankChanged();
    partial void OnNTileChanging(byte value);
    partial void OnNTileChanged();
    #endregion
		
		public EmailAddresses_COUNT_BY_SCHEME()
		{
			this._Scheme = default(EntityRef<Scheme>);
			OnCreated();
		}
		
		[Column(Storage="_RowNumber", DbType="Int NOT NULL")]
		public int RowNumber
		{
			get
			{
				return this._RowNumber;
			}
			set
			{
				if ((this._RowNumber != value))
				{
					this.OnRowNumberChanging(value);
					this.SendPropertyChanging();
					this._RowNumber = value;
					this.SendPropertyChanged("RowNumber");
					this.OnRowNumberChanged();
				}
			}
		}
		
		[Column(Storage="_SchemeID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int SchemeID
		{
			get
			{
				return this._SchemeID;
			}
			set
			{
				if ((this._SchemeID != value))
				{
					if (this._Scheme.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSchemeIDChanging(value);
					this.SendPropertyChanging();
					this._SchemeID = value;
					this.SendPropertyChanged("SchemeID");
					this.OnSchemeIDChanged();
				}
			}
		}
		
		[Column(Storage="_Count", DbType="Int NOT NULL")]
		public int Count
		{
			get
			{
				return this._Count;
			}
			set
			{
				if ((this._Count != value))
				{
					this.OnCountChanging(value);
					this.SendPropertyChanging();
					this._Count = value;
					this.SendPropertyChanged("Count");
					this.OnCountChanged();
				}
			}
		}
		
		[Column(Storage="_Rank", DbType="Int NOT NULL")]
		public int Rank
		{
			get
			{
				return this._Rank;
			}
			set
			{
				if ((this._Rank != value))
				{
					this.OnRankChanging(value);
					this.SendPropertyChanging();
					this._Rank = value;
					this.SendPropertyChanged("Rank");
					this.OnRankChanged();
				}
			}
		}
		
		[Column(Storage="_DenseRank", DbType="Int NOT NULL")]
		public int DenseRank
		{
			get
			{
				return this._DenseRank;
			}
			set
			{
				if ((this._DenseRank != value))
				{
					this.OnDenseRankChanging(value);
					this.SendPropertyChanging();
					this._DenseRank = value;
					this.SendPropertyChanged("DenseRank");
					this.OnDenseRankChanged();
				}
			}
		}
		
		[Column(Storage="_NTile", DbType="TinyInt NOT NULL")]
		public byte NTile
		{
			get
			{
				return this._NTile;
			}
			set
			{
				if ((this._NTile != value))
				{
					this.OnNTileChanging(value);
					this.SendPropertyChanging();
					this._NTile = value;
					this.SendPropertyChanged("NTile");
					this.OnNTileChanged();
				}
			}
		}
		
		[Association(Name="Scheme_EmailAddresses_COUNT_BY_SCHEME", Storage="_Scheme", ThisKey="SchemeID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Scheme Scheme
		{
			get
			{
				return this._Scheme.Entity;
			}
			set
			{
				Scheme previousValue = this._Scheme.Entity;
				if (((previousValue != value) 
							|| (this._Scheme.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Scheme.Entity = null;
						previousValue.EmailAddresses_COUNT_BY_SCHEME = null;
					}
					this._Scheme.Entity = value;
					if ((value != null))
					{
						value.EmailAddresses_COUNT_BY_SCHEME = this;
						this._SchemeID = value.ID;
					}
					else
					{
						this._SchemeID = default(int);
					}
					this.SendPropertyChanged("Scheme");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="rpt.EmailAddresses_MOST_POPULAR_ABSOLUTEURIS_BY_ABSOLUTEURIS")]
	public partial class EmailAddresses_MOST_POPULAR_ABSOLUTEURIS_BY_ABSOLUTEURI : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RowNumber;
		
		private System.Nullable<System.DateTime> _InitiallyDiscovered;
		
		private System.DateTime _LastDiscovered;
		
		private long _EmailAddressID;
		
		private int _Count;
		
		private System.Nullable<short> _DaysSinceInitiallyDiscovered;
		
		private short _DaysSinceLastDiscovered;
		
		private System.Nullable<double> _Strength;
		
		private int _Rank;
		
		private int _DenseRank;
		
		private byte _NTile;
		
		private EntityRef<EmailAddress> _EmailAddress;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRowNumberChanging(int value);
    partial void OnRowNumberChanged();
    partial void OnInitiallyDiscoveredChanging(System.Nullable<System.DateTime> value);
    partial void OnInitiallyDiscoveredChanged();
    partial void OnLastDiscoveredChanging(System.DateTime value);
    partial void OnLastDiscoveredChanged();
    partial void OnEmailAddressIDChanging(long value);
    partial void OnEmailAddressIDChanged();
    partial void OnCountChanging(int value);
    partial void OnCountChanged();
    partial void OnDaysSinceInitiallyDiscoveredChanging(System.Nullable<short> value);
    partial void OnDaysSinceInitiallyDiscoveredChanged();
    partial void OnDaysSinceLastDiscoveredChanging(short value);
    partial void OnDaysSinceLastDiscoveredChanged();
    partial void OnStrengthChanging(System.Nullable<double> value);
    partial void OnStrengthChanged();
    partial void OnRankChanging(int value);
    partial void OnRankChanged();
    partial void OnDenseRankChanging(int value);
    partial void OnDenseRankChanged();
    partial void OnNTileChanging(byte value);
    partial void OnNTileChanged();
    #endregion
		
		public EmailAddresses_MOST_POPULAR_ABSOLUTEURIS_BY_ABSOLUTEURI()
		{
			this._EmailAddress = default(EntityRef<EmailAddress>);
			OnCreated();
		}
		
		[Column(Storage="_RowNumber", DbType="Int NOT NULL")]
		public int RowNumber
		{
			get
			{
				return this._RowNumber;
			}
			set
			{
				if ((this._RowNumber != value))
				{
					this.OnRowNumberChanging(value);
					this.SendPropertyChanging();
					this._RowNumber = value;
					this.SendPropertyChanged("RowNumber");
					this.OnRowNumberChanged();
				}
			}
		}
		
		[Column(Storage="_InitiallyDiscovered", DbType="DateTime")]
		public System.Nullable<System.DateTime> InitiallyDiscovered
		{
			get
			{
				return this._InitiallyDiscovered;
			}
			set
			{
				if ((this._InitiallyDiscovered != value))
				{
					this.OnInitiallyDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._InitiallyDiscovered = value;
					this.SendPropertyChanged("InitiallyDiscovered");
					this.OnInitiallyDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_LastDiscovered", DbType="DateTime NOT NULL")]
		public System.DateTime LastDiscovered
		{
			get
			{
				return this._LastDiscovered;
			}
			set
			{
				if ((this._LastDiscovered != value))
				{
					this.OnLastDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._LastDiscovered = value;
					this.SendPropertyChanged("LastDiscovered");
					this.OnLastDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_EmailAddressID", DbType="BigInt NOT NULL", IsPrimaryKey=true)]
		public long EmailAddressID
		{
			get
			{
				return this._EmailAddressID;
			}
			set
			{
				if ((this._EmailAddressID != value))
				{
					if (this._EmailAddress.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnEmailAddressIDChanging(value);
					this.SendPropertyChanging();
					this._EmailAddressID = value;
					this.SendPropertyChanged("EmailAddressID");
					this.OnEmailAddressIDChanged();
				}
			}
		}
		
		[Column(Storage="_Count", DbType="Int NOT NULL")]
		public int Count
		{
			get
			{
				return this._Count;
			}
			set
			{
				if ((this._Count != value))
				{
					this.OnCountChanging(value);
					this.SendPropertyChanging();
					this._Count = value;
					this.SendPropertyChanged("Count");
					this.OnCountChanged();
				}
			}
		}
		
		[Column(Storage="_DaysSinceInitiallyDiscovered", DbType="SmallInt")]
		public System.Nullable<short> DaysSinceInitiallyDiscovered
		{
			get
			{
				return this._DaysSinceInitiallyDiscovered;
			}
			set
			{
				if ((this._DaysSinceInitiallyDiscovered != value))
				{
					this.OnDaysSinceInitiallyDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._DaysSinceInitiallyDiscovered = value;
					this.SendPropertyChanged("DaysSinceInitiallyDiscovered");
					this.OnDaysSinceInitiallyDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_DaysSinceLastDiscovered", DbType="SmallInt NOT NULL")]
		public short DaysSinceLastDiscovered
		{
			get
			{
				return this._DaysSinceLastDiscovered;
			}
			set
			{
				if ((this._DaysSinceLastDiscovered != value))
				{
					this.OnDaysSinceLastDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._DaysSinceLastDiscovered = value;
					this.SendPropertyChanged("DaysSinceLastDiscovered");
					this.OnDaysSinceLastDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_Strength", DbType="Float")]
		public System.Nullable<double> Strength
		{
			get
			{
				return this._Strength;
			}
			set
			{
				if ((this._Strength != value))
				{
					this.OnStrengthChanging(value);
					this.SendPropertyChanging();
					this._Strength = value;
					this.SendPropertyChanged("Strength");
					this.OnStrengthChanged();
				}
			}
		}
		
		[Column(Storage="_Rank", DbType="Int NOT NULL")]
		public int Rank
		{
			get
			{
				return this._Rank;
			}
			set
			{
				if ((this._Rank != value))
				{
					this.OnRankChanging(value);
					this.SendPropertyChanging();
					this._Rank = value;
					this.SendPropertyChanged("Rank");
					this.OnRankChanged();
				}
			}
		}
		
		[Column(Storage="_DenseRank", DbType="Int NOT NULL")]
		public int DenseRank
		{
			get
			{
				return this._DenseRank;
			}
			set
			{
				if ((this._DenseRank != value))
				{
					this.OnDenseRankChanging(value);
					this.SendPropertyChanging();
					this._DenseRank = value;
					this.SendPropertyChanged("DenseRank");
					this.OnDenseRankChanged();
				}
			}
		}
		
		[Column(Storage="_NTile", DbType="TinyInt NOT NULL")]
		public byte NTile
		{
			get
			{
				return this._NTile;
			}
			set
			{
				if ((this._NTile != value))
				{
					this.OnNTileChanging(value);
					this.SendPropertyChanging();
					this._NTile = value;
					this.SendPropertyChanged("NTile");
					this.OnNTileChanged();
				}
			}
		}
		
		[Association(Name="EmailAddress_EmailAddresses_MOST_POPULAR_ABSOLUTEURIS_BY_ABSOLUTEURI", Storage="_EmailAddress", ThisKey="EmailAddressID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public EmailAddress EmailAddress
		{
			get
			{
				return this._EmailAddress.Entity;
			}
			set
			{
				EmailAddress previousValue = this._EmailAddress.Entity;
				if (((previousValue != value) 
							|| (this._EmailAddress.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._EmailAddress.Entity = null;
						previousValue.EmailAddresses_MOST_POPULAR_ABSOLUTEURIS_BY_ABSOLUTEURI = null;
					}
					this._EmailAddress.Entity = value;
					if ((value != null))
					{
						value.EmailAddresses_MOST_POPULAR_ABSOLUTEURIS_BY_ABSOLUTEURI = this;
						this._EmailAddressID = value.ID;
					}
					else
					{
						this._EmailAddressID = default(long);
					}
					this.SendPropertyChanged("EmailAddress");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="rpt.EmailAddresses_MOST_POPULAR_ABSOLUTEURIS_BY_DOMAINS")]
	public partial class EmailAddresses_MOST_POPULAR_ABSOLUTEURIS_BY_DOMAIN : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RowNumber;
		
		private System.Nullable<System.DateTime> _InitiallyDiscovered;
		
		private System.DateTime _LastDiscovered;
		
		private long _EmailAddressID;
		
		private int _Count;
		
		private System.Nullable<short> _DaysSinceInitiallyDiscovered;
		
		private short _DaysSinceLastDiscovered;
		
		private System.Nullable<double> _Strength;
		
		private int _Rank;
		
		private int _DenseRank;
		
		private byte _NTile;
		
		private EntityRef<EmailAddress> _EmailAddress;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRowNumberChanging(int value);
    partial void OnRowNumberChanged();
    partial void OnInitiallyDiscoveredChanging(System.Nullable<System.DateTime> value);
    partial void OnInitiallyDiscoveredChanged();
    partial void OnLastDiscoveredChanging(System.DateTime value);
    partial void OnLastDiscoveredChanged();
    partial void OnEmailAddressIDChanging(long value);
    partial void OnEmailAddressIDChanged();
    partial void OnCountChanging(int value);
    partial void OnCountChanged();
    partial void OnDaysSinceInitiallyDiscoveredChanging(System.Nullable<short> value);
    partial void OnDaysSinceInitiallyDiscoveredChanged();
    partial void OnDaysSinceLastDiscoveredChanging(short value);
    partial void OnDaysSinceLastDiscoveredChanged();
    partial void OnStrengthChanging(System.Nullable<double> value);
    partial void OnStrengthChanged();
    partial void OnRankChanging(int value);
    partial void OnRankChanged();
    partial void OnDenseRankChanging(int value);
    partial void OnDenseRankChanged();
    partial void OnNTileChanging(byte value);
    partial void OnNTileChanged();
    #endregion
		
		public EmailAddresses_MOST_POPULAR_ABSOLUTEURIS_BY_DOMAIN()
		{
			this._EmailAddress = default(EntityRef<EmailAddress>);
			OnCreated();
		}
		
		[Column(Storage="_RowNumber", DbType="Int NOT NULL")]
		public int RowNumber
		{
			get
			{
				return this._RowNumber;
			}
			set
			{
				if ((this._RowNumber != value))
				{
					this.OnRowNumberChanging(value);
					this.SendPropertyChanging();
					this._RowNumber = value;
					this.SendPropertyChanged("RowNumber");
					this.OnRowNumberChanged();
				}
			}
		}
		
		[Column(Storage="_InitiallyDiscovered", DbType="DateTime")]
		public System.Nullable<System.DateTime> InitiallyDiscovered
		{
			get
			{
				return this._InitiallyDiscovered;
			}
			set
			{
				if ((this._InitiallyDiscovered != value))
				{
					this.OnInitiallyDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._InitiallyDiscovered = value;
					this.SendPropertyChanged("InitiallyDiscovered");
					this.OnInitiallyDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_LastDiscovered", DbType="DateTime NOT NULL")]
		public System.DateTime LastDiscovered
		{
			get
			{
				return this._LastDiscovered;
			}
			set
			{
				if ((this._LastDiscovered != value))
				{
					this.OnLastDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._LastDiscovered = value;
					this.SendPropertyChanged("LastDiscovered");
					this.OnLastDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_EmailAddressID", DbType="BigInt NOT NULL", IsPrimaryKey=true)]
		public long EmailAddressID
		{
			get
			{
				return this._EmailAddressID;
			}
			set
			{
				if ((this._EmailAddressID != value))
				{
					if (this._EmailAddress.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnEmailAddressIDChanging(value);
					this.SendPropertyChanging();
					this._EmailAddressID = value;
					this.SendPropertyChanged("EmailAddressID");
					this.OnEmailAddressIDChanged();
				}
			}
		}
		
		[Column(Storage="_Count", DbType="Int NOT NULL")]
		public int Count
		{
			get
			{
				return this._Count;
			}
			set
			{
				if ((this._Count != value))
				{
					this.OnCountChanging(value);
					this.SendPropertyChanging();
					this._Count = value;
					this.SendPropertyChanged("Count");
					this.OnCountChanged();
				}
			}
		}
		
		[Column(Storage="_DaysSinceInitiallyDiscovered", DbType="SmallInt")]
		public System.Nullable<short> DaysSinceInitiallyDiscovered
		{
			get
			{
				return this._DaysSinceInitiallyDiscovered;
			}
			set
			{
				if ((this._DaysSinceInitiallyDiscovered != value))
				{
					this.OnDaysSinceInitiallyDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._DaysSinceInitiallyDiscovered = value;
					this.SendPropertyChanged("DaysSinceInitiallyDiscovered");
					this.OnDaysSinceInitiallyDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_DaysSinceLastDiscovered", DbType="SmallInt NOT NULL")]
		public short DaysSinceLastDiscovered
		{
			get
			{
				return this._DaysSinceLastDiscovered;
			}
			set
			{
				if ((this._DaysSinceLastDiscovered != value))
				{
					this.OnDaysSinceLastDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._DaysSinceLastDiscovered = value;
					this.SendPropertyChanged("DaysSinceLastDiscovered");
					this.OnDaysSinceLastDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_Strength", DbType="Float")]
		public System.Nullable<double> Strength
		{
			get
			{
				return this._Strength;
			}
			set
			{
				if ((this._Strength != value))
				{
					this.OnStrengthChanging(value);
					this.SendPropertyChanging();
					this._Strength = value;
					this.SendPropertyChanged("Strength");
					this.OnStrengthChanged();
				}
			}
		}
		
		[Column(Storage="_Rank", DbType="Int NOT NULL")]
		public int Rank
		{
			get
			{
				return this._Rank;
			}
			set
			{
				if ((this._Rank != value))
				{
					this.OnRankChanging(value);
					this.SendPropertyChanging();
					this._Rank = value;
					this.SendPropertyChanged("Rank");
					this.OnRankChanged();
				}
			}
		}
		
		[Column(Storage="_DenseRank", DbType="Int NOT NULL")]
		public int DenseRank
		{
			get
			{
				return this._DenseRank;
			}
			set
			{
				if ((this._DenseRank != value))
				{
					this.OnDenseRankChanging(value);
					this.SendPropertyChanging();
					this._DenseRank = value;
					this.SendPropertyChanged("DenseRank");
					this.OnDenseRankChanged();
				}
			}
		}
		
		[Column(Storage="_NTile", DbType="TinyInt NOT NULL")]
		public byte NTile
		{
			get
			{
				return this._NTile;
			}
			set
			{
				if ((this._NTile != value))
				{
					this.OnNTileChanging(value);
					this.SendPropertyChanging();
					this._NTile = value;
					this.SendPropertyChanged("NTile");
					this.OnNTileChanged();
				}
			}
		}
		
		[Association(Name="EmailAddress_EmailAddresses_MOST_POPULAR_ABSOLUTEURIS_BY_DOMAIN", Storage="_EmailAddress", ThisKey="EmailAddressID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public EmailAddress EmailAddress
		{
			get
			{
				return this._EmailAddress.Entity;
			}
			set
			{
				EmailAddress previousValue = this._EmailAddress.Entity;
				if (((previousValue != value) 
							|| (this._EmailAddress.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._EmailAddress.Entity = null;
						previousValue.EmailAddresses_MOST_POPULAR_ABSOLUTEURIS_BY_DOMAIN = null;
					}
					this._EmailAddress.Entity = value;
					if ((value != null))
					{
						value.EmailAddresses_MOST_POPULAR_ABSOLUTEURIS_BY_DOMAIN = this;
						this._EmailAddressID = value.ID;
					}
					else
					{
						this._EmailAddressID = default(long);
					}
					this.SendPropertyChanged("EmailAddress");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="rpt.EmailAddresses_MOST_POPULAR_ABSOLUTEURIS_BY_EXTENSIONS")]
	public partial class EmailAddresses_MOST_POPULAR_ABSOLUTEURIS_BY_EXTENSION : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RowNumber;
		
		private System.Nullable<System.DateTime> _InitiallyDiscovered;
		
		private System.DateTime _LastDiscovered;
		
		private long _EmailAddressID;
		
		private int _Count;
		
		private System.Nullable<short> _DaysSinceInitiallyDiscovered;
		
		private short _DaysSinceLastDiscovered;
		
		private System.Nullable<double> _Strength;
		
		private int _Rank;
		
		private int _DenseRank;
		
		private byte _NTile;
		
		private EntityRef<EmailAddress> _EmailAddress;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRowNumberChanging(int value);
    partial void OnRowNumberChanged();
    partial void OnInitiallyDiscoveredChanging(System.Nullable<System.DateTime> value);
    partial void OnInitiallyDiscoveredChanged();
    partial void OnLastDiscoveredChanging(System.DateTime value);
    partial void OnLastDiscoveredChanged();
    partial void OnEmailAddressIDChanging(long value);
    partial void OnEmailAddressIDChanged();
    partial void OnCountChanging(int value);
    partial void OnCountChanged();
    partial void OnDaysSinceInitiallyDiscoveredChanging(System.Nullable<short> value);
    partial void OnDaysSinceInitiallyDiscoveredChanged();
    partial void OnDaysSinceLastDiscoveredChanging(short value);
    partial void OnDaysSinceLastDiscoveredChanged();
    partial void OnStrengthChanging(System.Nullable<double> value);
    partial void OnStrengthChanged();
    partial void OnRankChanging(int value);
    partial void OnRankChanged();
    partial void OnDenseRankChanging(int value);
    partial void OnDenseRankChanged();
    partial void OnNTileChanging(byte value);
    partial void OnNTileChanged();
    #endregion
		
		public EmailAddresses_MOST_POPULAR_ABSOLUTEURIS_BY_EXTENSION()
		{
			this._EmailAddress = default(EntityRef<EmailAddress>);
			OnCreated();
		}
		
		[Column(Storage="_RowNumber", DbType="Int NOT NULL")]
		public int RowNumber
		{
			get
			{
				return this._RowNumber;
			}
			set
			{
				if ((this._RowNumber != value))
				{
					this.OnRowNumberChanging(value);
					this.SendPropertyChanging();
					this._RowNumber = value;
					this.SendPropertyChanged("RowNumber");
					this.OnRowNumberChanged();
				}
			}
		}
		
		[Column(Storage="_InitiallyDiscovered", DbType="DateTime")]
		public System.Nullable<System.DateTime> InitiallyDiscovered
		{
			get
			{
				return this._InitiallyDiscovered;
			}
			set
			{
				if ((this._InitiallyDiscovered != value))
				{
					this.OnInitiallyDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._InitiallyDiscovered = value;
					this.SendPropertyChanged("InitiallyDiscovered");
					this.OnInitiallyDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_LastDiscovered", DbType="DateTime NOT NULL")]
		public System.DateTime LastDiscovered
		{
			get
			{
				return this._LastDiscovered;
			}
			set
			{
				if ((this._LastDiscovered != value))
				{
					this.OnLastDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._LastDiscovered = value;
					this.SendPropertyChanged("LastDiscovered");
					this.OnLastDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_EmailAddressID", DbType="BigInt NOT NULL", IsPrimaryKey=true)]
		public long EmailAddressID
		{
			get
			{
				return this._EmailAddressID;
			}
			set
			{
				if ((this._EmailAddressID != value))
				{
					if (this._EmailAddress.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnEmailAddressIDChanging(value);
					this.SendPropertyChanging();
					this._EmailAddressID = value;
					this.SendPropertyChanged("EmailAddressID");
					this.OnEmailAddressIDChanged();
				}
			}
		}
		
		[Column(Storage="_Count", DbType="Int NOT NULL")]
		public int Count
		{
			get
			{
				return this._Count;
			}
			set
			{
				if ((this._Count != value))
				{
					this.OnCountChanging(value);
					this.SendPropertyChanging();
					this._Count = value;
					this.SendPropertyChanged("Count");
					this.OnCountChanged();
				}
			}
		}
		
		[Column(Storage="_DaysSinceInitiallyDiscovered", DbType="SmallInt")]
		public System.Nullable<short> DaysSinceInitiallyDiscovered
		{
			get
			{
				return this._DaysSinceInitiallyDiscovered;
			}
			set
			{
				if ((this._DaysSinceInitiallyDiscovered != value))
				{
					this.OnDaysSinceInitiallyDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._DaysSinceInitiallyDiscovered = value;
					this.SendPropertyChanged("DaysSinceInitiallyDiscovered");
					this.OnDaysSinceInitiallyDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_DaysSinceLastDiscovered", DbType="SmallInt NOT NULL")]
		public short DaysSinceLastDiscovered
		{
			get
			{
				return this._DaysSinceLastDiscovered;
			}
			set
			{
				if ((this._DaysSinceLastDiscovered != value))
				{
					this.OnDaysSinceLastDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._DaysSinceLastDiscovered = value;
					this.SendPropertyChanged("DaysSinceLastDiscovered");
					this.OnDaysSinceLastDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_Strength", DbType="Float")]
		public System.Nullable<double> Strength
		{
			get
			{
				return this._Strength;
			}
			set
			{
				if ((this._Strength != value))
				{
					this.OnStrengthChanging(value);
					this.SendPropertyChanging();
					this._Strength = value;
					this.SendPropertyChanged("Strength");
					this.OnStrengthChanged();
				}
			}
		}
		
		[Column(Storage="_Rank", DbType="Int NOT NULL")]
		public int Rank
		{
			get
			{
				return this._Rank;
			}
			set
			{
				if ((this._Rank != value))
				{
					this.OnRankChanging(value);
					this.SendPropertyChanging();
					this._Rank = value;
					this.SendPropertyChanged("Rank");
					this.OnRankChanged();
				}
			}
		}
		
		[Column(Storage="_DenseRank", DbType="Int NOT NULL")]
		public int DenseRank
		{
			get
			{
				return this._DenseRank;
			}
			set
			{
				if ((this._DenseRank != value))
				{
					this.OnDenseRankChanging(value);
					this.SendPropertyChanging();
					this._DenseRank = value;
					this.SendPropertyChanged("DenseRank");
					this.OnDenseRankChanged();
				}
			}
		}
		
		[Column(Storage="_NTile", DbType="TinyInt NOT NULL")]
		public byte NTile
		{
			get
			{
				return this._NTile;
			}
			set
			{
				if ((this._NTile != value))
				{
					this.OnNTileChanging(value);
					this.SendPropertyChanging();
					this._NTile = value;
					this.SendPropertyChanged("NTile");
					this.OnNTileChanged();
				}
			}
		}
		
		[Association(Name="EmailAddress_EmailAddresses_MOST_POPULAR_ABSOLUTEURIS_BY_EXTENSION", Storage="_EmailAddress", ThisKey="EmailAddressID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public EmailAddress EmailAddress
		{
			get
			{
				return this._EmailAddress.Entity;
			}
			set
			{
				EmailAddress previousValue = this._EmailAddress.Entity;
				if (((previousValue != value) 
							|| (this._EmailAddress.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._EmailAddress.Entity = null;
						previousValue.EmailAddresses_MOST_POPULAR_ABSOLUTEURIS_BY_EXTENSION = null;
					}
					this._EmailAddress.Entity = value;
					if ((value != null))
					{
						value.EmailAddresses_MOST_POPULAR_ABSOLUTEURIS_BY_EXTENSION = this;
						this._EmailAddressID = value.ID;
					}
					else
					{
						this._EmailAddressID = default(long);
					}
					this.SendPropertyChanged("EmailAddress");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="rpt.EmailAddresses_MOST_POPULAR_ABSOLUTEURIS_BY_HOSTS")]
	public partial class EmailAddresses_MOST_POPULAR_ABSOLUTEURIS_BY_HOST : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RowNumber;
		
		private System.Nullable<System.DateTime> _InitiallyDiscovered;
		
		private System.DateTime _LastDiscovered;
		
		private long _EmailAddressID;
		
		private int _Count;
		
		private System.Nullable<short> _DaysSinceInitiallyDiscovered;
		
		private short _DaysSinceLastDiscovered;
		
		private System.Nullable<double> _Strength;
		
		private int _Rank;
		
		private int _DenseRank;
		
		private byte _NTile;
		
		private EntityRef<EmailAddress> _EmailAddress;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRowNumberChanging(int value);
    partial void OnRowNumberChanged();
    partial void OnInitiallyDiscoveredChanging(System.Nullable<System.DateTime> value);
    partial void OnInitiallyDiscoveredChanged();
    partial void OnLastDiscoveredChanging(System.DateTime value);
    partial void OnLastDiscoveredChanged();
    partial void OnEmailAddressIDChanging(long value);
    partial void OnEmailAddressIDChanged();
    partial void OnCountChanging(int value);
    partial void OnCountChanged();
    partial void OnDaysSinceInitiallyDiscoveredChanging(System.Nullable<short> value);
    partial void OnDaysSinceInitiallyDiscoveredChanged();
    partial void OnDaysSinceLastDiscoveredChanging(short value);
    partial void OnDaysSinceLastDiscoveredChanged();
    partial void OnStrengthChanging(System.Nullable<double> value);
    partial void OnStrengthChanged();
    partial void OnRankChanging(int value);
    partial void OnRankChanged();
    partial void OnDenseRankChanging(int value);
    partial void OnDenseRankChanged();
    partial void OnNTileChanging(byte value);
    partial void OnNTileChanged();
    #endregion
		
		public EmailAddresses_MOST_POPULAR_ABSOLUTEURIS_BY_HOST()
		{
			this._EmailAddress = default(EntityRef<EmailAddress>);
			OnCreated();
		}
		
		[Column(Storage="_RowNumber", DbType="Int NOT NULL")]
		public int RowNumber
		{
			get
			{
				return this._RowNumber;
			}
			set
			{
				if ((this._RowNumber != value))
				{
					this.OnRowNumberChanging(value);
					this.SendPropertyChanging();
					this._RowNumber = value;
					this.SendPropertyChanged("RowNumber");
					this.OnRowNumberChanged();
				}
			}
		}
		
		[Column(Storage="_InitiallyDiscovered", DbType="DateTime")]
		public System.Nullable<System.DateTime> InitiallyDiscovered
		{
			get
			{
				return this._InitiallyDiscovered;
			}
			set
			{
				if ((this._InitiallyDiscovered != value))
				{
					this.OnInitiallyDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._InitiallyDiscovered = value;
					this.SendPropertyChanged("InitiallyDiscovered");
					this.OnInitiallyDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_LastDiscovered", DbType="DateTime NOT NULL")]
		public System.DateTime LastDiscovered
		{
			get
			{
				return this._LastDiscovered;
			}
			set
			{
				if ((this._LastDiscovered != value))
				{
					this.OnLastDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._LastDiscovered = value;
					this.SendPropertyChanged("LastDiscovered");
					this.OnLastDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_EmailAddressID", DbType="BigInt NOT NULL", IsPrimaryKey=true)]
		public long EmailAddressID
		{
			get
			{
				return this._EmailAddressID;
			}
			set
			{
				if ((this._EmailAddressID != value))
				{
					if (this._EmailAddress.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnEmailAddressIDChanging(value);
					this.SendPropertyChanging();
					this._EmailAddressID = value;
					this.SendPropertyChanged("EmailAddressID");
					this.OnEmailAddressIDChanged();
				}
			}
		}
		
		[Column(Storage="_Count", DbType="Int NOT NULL")]
		public int Count
		{
			get
			{
				return this._Count;
			}
			set
			{
				if ((this._Count != value))
				{
					this.OnCountChanging(value);
					this.SendPropertyChanging();
					this._Count = value;
					this.SendPropertyChanged("Count");
					this.OnCountChanged();
				}
			}
		}
		
		[Column(Storage="_DaysSinceInitiallyDiscovered", DbType="SmallInt")]
		public System.Nullable<short> DaysSinceInitiallyDiscovered
		{
			get
			{
				return this._DaysSinceInitiallyDiscovered;
			}
			set
			{
				if ((this._DaysSinceInitiallyDiscovered != value))
				{
					this.OnDaysSinceInitiallyDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._DaysSinceInitiallyDiscovered = value;
					this.SendPropertyChanged("DaysSinceInitiallyDiscovered");
					this.OnDaysSinceInitiallyDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_DaysSinceLastDiscovered", DbType="SmallInt NOT NULL")]
		public short DaysSinceLastDiscovered
		{
			get
			{
				return this._DaysSinceLastDiscovered;
			}
			set
			{
				if ((this._DaysSinceLastDiscovered != value))
				{
					this.OnDaysSinceLastDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._DaysSinceLastDiscovered = value;
					this.SendPropertyChanged("DaysSinceLastDiscovered");
					this.OnDaysSinceLastDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_Strength", DbType="Float")]
		public System.Nullable<double> Strength
		{
			get
			{
				return this._Strength;
			}
			set
			{
				if ((this._Strength != value))
				{
					this.OnStrengthChanging(value);
					this.SendPropertyChanging();
					this._Strength = value;
					this.SendPropertyChanged("Strength");
					this.OnStrengthChanged();
				}
			}
		}
		
		[Column(Storage="_Rank", DbType="Int NOT NULL")]
		public int Rank
		{
			get
			{
				return this._Rank;
			}
			set
			{
				if ((this._Rank != value))
				{
					this.OnRankChanging(value);
					this.SendPropertyChanging();
					this._Rank = value;
					this.SendPropertyChanged("Rank");
					this.OnRankChanged();
				}
			}
		}
		
		[Column(Storage="_DenseRank", DbType="Int NOT NULL")]
		public int DenseRank
		{
			get
			{
				return this._DenseRank;
			}
			set
			{
				if ((this._DenseRank != value))
				{
					this.OnDenseRankChanging(value);
					this.SendPropertyChanging();
					this._DenseRank = value;
					this.SendPropertyChanged("DenseRank");
					this.OnDenseRankChanged();
				}
			}
		}
		
		[Column(Storage="_NTile", DbType="TinyInt NOT NULL")]
		public byte NTile
		{
			get
			{
				return this._NTile;
			}
			set
			{
				if ((this._NTile != value))
				{
					this.OnNTileChanging(value);
					this.SendPropertyChanging();
					this._NTile = value;
					this.SendPropertyChanged("NTile");
					this.OnNTileChanged();
				}
			}
		}
		
		[Association(Name="EmailAddress_EmailAddresses_MOST_POPULAR_ABSOLUTEURIS_BY_HOST", Storage="_EmailAddress", ThisKey="EmailAddressID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public EmailAddress EmailAddress
		{
			get
			{
				return this._EmailAddress.Entity;
			}
			set
			{
				EmailAddress previousValue = this._EmailAddress.Entity;
				if (((previousValue != value) 
							|| (this._EmailAddress.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._EmailAddress.Entity = null;
						previousValue.EmailAddresses_MOST_POPULAR_ABSOLUTEURIS_BY_HOST = null;
					}
					this._EmailAddress.Entity = value;
					if ((value != null))
					{
						value.EmailAddresses_MOST_POPULAR_ABSOLUTEURIS_BY_HOST = this;
						this._EmailAddressID = value.ID;
					}
					else
					{
						this._EmailAddressID = default(long);
					}
					this.SendPropertyChanged("EmailAddress");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="rpt.EmailAddresses_MOST_POPULAR_ABSOLUTEURIS_BY_SCHEMES")]
	public partial class EmailAddresses_MOST_POPULAR_ABSOLUTEURIS_BY_SCHEME : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RowNumber;
		
		private System.Nullable<System.DateTime> _InitiallyDiscovered;
		
		private System.DateTime _LastDiscovered;
		
		private long _EmailAddressID;
		
		private int _Count;
		
		private System.Nullable<short> _DaysSinceInitiallyDiscovered;
		
		private short _DaysSinceLastDiscovered;
		
		private System.Nullable<double> _Strength;
		
		private int _Rank;
		
		private int _DenseRank;
		
		private byte _NTile;
		
		private EntityRef<EmailAddress> _EmailAddress;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRowNumberChanging(int value);
    partial void OnRowNumberChanged();
    partial void OnInitiallyDiscoveredChanging(System.Nullable<System.DateTime> value);
    partial void OnInitiallyDiscoveredChanged();
    partial void OnLastDiscoveredChanging(System.DateTime value);
    partial void OnLastDiscoveredChanged();
    partial void OnEmailAddressIDChanging(long value);
    partial void OnEmailAddressIDChanged();
    partial void OnCountChanging(int value);
    partial void OnCountChanged();
    partial void OnDaysSinceInitiallyDiscoveredChanging(System.Nullable<short> value);
    partial void OnDaysSinceInitiallyDiscoveredChanged();
    partial void OnDaysSinceLastDiscoveredChanging(short value);
    partial void OnDaysSinceLastDiscoveredChanged();
    partial void OnStrengthChanging(System.Nullable<double> value);
    partial void OnStrengthChanged();
    partial void OnRankChanging(int value);
    partial void OnRankChanged();
    partial void OnDenseRankChanging(int value);
    partial void OnDenseRankChanged();
    partial void OnNTileChanging(byte value);
    partial void OnNTileChanged();
    #endregion
		
		public EmailAddresses_MOST_POPULAR_ABSOLUTEURIS_BY_SCHEME()
		{
			this._EmailAddress = default(EntityRef<EmailAddress>);
			OnCreated();
		}
		
		[Column(Storage="_RowNumber", DbType="Int NOT NULL")]
		public int RowNumber
		{
			get
			{
				return this._RowNumber;
			}
			set
			{
				if ((this._RowNumber != value))
				{
					this.OnRowNumberChanging(value);
					this.SendPropertyChanging();
					this._RowNumber = value;
					this.SendPropertyChanged("RowNumber");
					this.OnRowNumberChanged();
				}
			}
		}
		
		[Column(Storage="_InitiallyDiscovered", DbType="DateTime")]
		public System.Nullable<System.DateTime> InitiallyDiscovered
		{
			get
			{
				return this._InitiallyDiscovered;
			}
			set
			{
				if ((this._InitiallyDiscovered != value))
				{
					this.OnInitiallyDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._InitiallyDiscovered = value;
					this.SendPropertyChanged("InitiallyDiscovered");
					this.OnInitiallyDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_LastDiscovered", DbType="DateTime NOT NULL")]
		public System.DateTime LastDiscovered
		{
			get
			{
				return this._LastDiscovered;
			}
			set
			{
				if ((this._LastDiscovered != value))
				{
					this.OnLastDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._LastDiscovered = value;
					this.SendPropertyChanged("LastDiscovered");
					this.OnLastDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_EmailAddressID", DbType="BigInt NOT NULL", IsPrimaryKey=true)]
		public long EmailAddressID
		{
			get
			{
				return this._EmailAddressID;
			}
			set
			{
				if ((this._EmailAddressID != value))
				{
					if (this._EmailAddress.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnEmailAddressIDChanging(value);
					this.SendPropertyChanging();
					this._EmailAddressID = value;
					this.SendPropertyChanged("EmailAddressID");
					this.OnEmailAddressIDChanged();
				}
			}
		}
		
		[Column(Storage="_Count", DbType="Int NOT NULL")]
		public int Count
		{
			get
			{
				return this._Count;
			}
			set
			{
				if ((this._Count != value))
				{
					this.OnCountChanging(value);
					this.SendPropertyChanging();
					this._Count = value;
					this.SendPropertyChanged("Count");
					this.OnCountChanged();
				}
			}
		}
		
		[Column(Storage="_DaysSinceInitiallyDiscovered", DbType="SmallInt")]
		public System.Nullable<short> DaysSinceInitiallyDiscovered
		{
			get
			{
				return this._DaysSinceInitiallyDiscovered;
			}
			set
			{
				if ((this._DaysSinceInitiallyDiscovered != value))
				{
					this.OnDaysSinceInitiallyDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._DaysSinceInitiallyDiscovered = value;
					this.SendPropertyChanged("DaysSinceInitiallyDiscovered");
					this.OnDaysSinceInitiallyDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_DaysSinceLastDiscovered", DbType="SmallInt NOT NULL")]
		public short DaysSinceLastDiscovered
		{
			get
			{
				return this._DaysSinceLastDiscovered;
			}
			set
			{
				if ((this._DaysSinceLastDiscovered != value))
				{
					this.OnDaysSinceLastDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._DaysSinceLastDiscovered = value;
					this.SendPropertyChanged("DaysSinceLastDiscovered");
					this.OnDaysSinceLastDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_Strength", DbType="Float")]
		public System.Nullable<double> Strength
		{
			get
			{
				return this._Strength;
			}
			set
			{
				if ((this._Strength != value))
				{
					this.OnStrengthChanging(value);
					this.SendPropertyChanging();
					this._Strength = value;
					this.SendPropertyChanged("Strength");
					this.OnStrengthChanged();
				}
			}
		}
		
		[Column(Storage="_Rank", DbType="Int NOT NULL")]
		public int Rank
		{
			get
			{
				return this._Rank;
			}
			set
			{
				if ((this._Rank != value))
				{
					this.OnRankChanging(value);
					this.SendPropertyChanging();
					this._Rank = value;
					this.SendPropertyChanged("Rank");
					this.OnRankChanged();
				}
			}
		}
		
		[Column(Storage="_DenseRank", DbType="Int NOT NULL")]
		public int DenseRank
		{
			get
			{
				return this._DenseRank;
			}
			set
			{
				if ((this._DenseRank != value))
				{
					this.OnDenseRankChanging(value);
					this.SendPropertyChanging();
					this._DenseRank = value;
					this.SendPropertyChanged("DenseRank");
					this.OnDenseRankChanged();
				}
			}
		}
		
		[Column(Storage="_NTile", DbType="TinyInt NOT NULL")]
		public byte NTile
		{
			get
			{
				return this._NTile;
			}
			set
			{
				if ((this._NTile != value))
				{
					this.OnNTileChanging(value);
					this.SendPropertyChanging();
					this._NTile = value;
					this.SendPropertyChanged("NTile");
					this.OnNTileChanged();
				}
			}
		}
		
		[Association(Name="EmailAddress_EmailAddresses_MOST_POPULAR_ABSOLUTEURIS_BY_SCHEME", Storage="_EmailAddress", ThisKey="EmailAddressID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public EmailAddress EmailAddress
		{
			get
			{
				return this._EmailAddress.Entity;
			}
			set
			{
				EmailAddress previousValue = this._EmailAddress.Entity;
				if (((previousValue != value) 
							|| (this._EmailAddress.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._EmailAddress.Entity = null;
						previousValue.EmailAddresses_MOST_POPULAR_ABSOLUTEURIS_BY_SCHEME = null;
					}
					this._EmailAddress.Entity = value;
					if ((value != null))
					{
						value.EmailAddresses_MOST_POPULAR_ABSOLUTEURIS_BY_SCHEME = this;
						this._EmailAddressID = value.ID;
					}
					else
					{
						this._EmailAddressID = default(long);
					}
					this.SendPropertyChanged("EmailAddress");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="rpt.EmailAddresses_MOST_POPULAR_DOMAINS_BY_ABSOLUTEURIS")]
	public partial class EmailAddresses_MOST_POPULAR_DOMAINS_BY_ABSOLUTEURI : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RowNumber;
		
		private System.Nullable<System.DateTime> _InitiallyDiscovered;
		
		private System.DateTime _LastDiscovered;
		
		private int _DomainID;
		
		private int _Count;
		
		private System.Nullable<short> _DaysSinceInitiallyDiscovered;
		
		private short _DaysSinceLastDiscovered;
		
		private System.Nullable<double> _Strength;
		
		private int _Rank;
		
		private int _DenseRank;
		
		private short _NTile;
		
		private EntityRef<Domain> _Domain;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRowNumberChanging(int value);
    partial void OnRowNumberChanged();
    partial void OnInitiallyDiscoveredChanging(System.Nullable<System.DateTime> value);
    partial void OnInitiallyDiscoveredChanged();
    partial void OnLastDiscoveredChanging(System.DateTime value);
    partial void OnLastDiscoveredChanged();
    partial void OnDomainIDChanging(int value);
    partial void OnDomainIDChanged();
    partial void OnCountChanging(int value);
    partial void OnCountChanged();
    partial void OnDaysSinceInitiallyDiscoveredChanging(System.Nullable<short> value);
    partial void OnDaysSinceInitiallyDiscoveredChanged();
    partial void OnDaysSinceLastDiscoveredChanging(short value);
    partial void OnDaysSinceLastDiscoveredChanged();
    partial void OnStrengthChanging(System.Nullable<double> value);
    partial void OnStrengthChanged();
    partial void OnRankChanging(int value);
    partial void OnRankChanged();
    partial void OnDenseRankChanging(int value);
    partial void OnDenseRankChanged();
    partial void OnNTileChanging(short value);
    partial void OnNTileChanged();
    #endregion
		
		public EmailAddresses_MOST_POPULAR_DOMAINS_BY_ABSOLUTEURI()
		{
			this._Domain = default(EntityRef<Domain>);
			OnCreated();
		}
		
		[Column(Storage="_RowNumber", DbType="Int NOT NULL")]
		public int RowNumber
		{
			get
			{
				return this._RowNumber;
			}
			set
			{
				if ((this._RowNumber != value))
				{
					this.OnRowNumberChanging(value);
					this.SendPropertyChanging();
					this._RowNumber = value;
					this.SendPropertyChanged("RowNumber");
					this.OnRowNumberChanged();
				}
			}
		}
		
		[Column(Storage="_InitiallyDiscovered", DbType="DateTime")]
		public System.Nullable<System.DateTime> InitiallyDiscovered
		{
			get
			{
				return this._InitiallyDiscovered;
			}
			set
			{
				if ((this._InitiallyDiscovered != value))
				{
					this.OnInitiallyDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._InitiallyDiscovered = value;
					this.SendPropertyChanged("InitiallyDiscovered");
					this.OnInitiallyDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_LastDiscovered", DbType="DateTime NOT NULL")]
		public System.DateTime LastDiscovered
		{
			get
			{
				return this._LastDiscovered;
			}
			set
			{
				if ((this._LastDiscovered != value))
				{
					this.OnLastDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._LastDiscovered = value;
					this.SendPropertyChanged("LastDiscovered");
					this.OnLastDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_DomainID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int DomainID
		{
			get
			{
				return this._DomainID;
			}
			set
			{
				if ((this._DomainID != value))
				{
					if (this._Domain.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDomainIDChanging(value);
					this.SendPropertyChanging();
					this._DomainID = value;
					this.SendPropertyChanged("DomainID");
					this.OnDomainIDChanged();
				}
			}
		}
		
		[Column(Storage="_Count", DbType="Int NOT NULL")]
		public int Count
		{
			get
			{
				return this._Count;
			}
			set
			{
				if ((this._Count != value))
				{
					this.OnCountChanging(value);
					this.SendPropertyChanging();
					this._Count = value;
					this.SendPropertyChanged("Count");
					this.OnCountChanged();
				}
			}
		}
		
		[Column(Storage="_DaysSinceInitiallyDiscovered", DbType="SmallInt")]
		public System.Nullable<short> DaysSinceInitiallyDiscovered
		{
			get
			{
				return this._DaysSinceInitiallyDiscovered;
			}
			set
			{
				if ((this._DaysSinceInitiallyDiscovered != value))
				{
					this.OnDaysSinceInitiallyDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._DaysSinceInitiallyDiscovered = value;
					this.SendPropertyChanged("DaysSinceInitiallyDiscovered");
					this.OnDaysSinceInitiallyDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_DaysSinceLastDiscovered", DbType="SmallInt NOT NULL")]
		public short DaysSinceLastDiscovered
		{
			get
			{
				return this._DaysSinceLastDiscovered;
			}
			set
			{
				if ((this._DaysSinceLastDiscovered != value))
				{
					this.OnDaysSinceLastDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._DaysSinceLastDiscovered = value;
					this.SendPropertyChanged("DaysSinceLastDiscovered");
					this.OnDaysSinceLastDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_Strength", DbType="Float")]
		public System.Nullable<double> Strength
		{
			get
			{
				return this._Strength;
			}
			set
			{
				if ((this._Strength != value))
				{
					this.OnStrengthChanging(value);
					this.SendPropertyChanging();
					this._Strength = value;
					this.SendPropertyChanged("Strength");
					this.OnStrengthChanged();
				}
			}
		}
		
		[Column(Storage="_Rank", DbType="Int NOT NULL")]
		public int Rank
		{
			get
			{
				return this._Rank;
			}
			set
			{
				if ((this._Rank != value))
				{
					this.OnRankChanging(value);
					this.SendPropertyChanging();
					this._Rank = value;
					this.SendPropertyChanged("Rank");
					this.OnRankChanged();
				}
			}
		}
		
		[Column(Storage="_DenseRank", DbType="Int NOT NULL")]
		public int DenseRank
		{
			get
			{
				return this._DenseRank;
			}
			set
			{
				if ((this._DenseRank != value))
				{
					this.OnDenseRankChanging(value);
					this.SendPropertyChanging();
					this._DenseRank = value;
					this.SendPropertyChanged("DenseRank");
					this.OnDenseRankChanged();
				}
			}
		}
		
		[Column(Storage="_NTile", DbType="SmallInt NOT NULL")]
		public short NTile
		{
			get
			{
				return this._NTile;
			}
			set
			{
				if ((this._NTile != value))
				{
					this.OnNTileChanging(value);
					this.SendPropertyChanging();
					this._NTile = value;
					this.SendPropertyChanged("NTile");
					this.OnNTileChanged();
				}
			}
		}
		
		[Association(Name="Domain_EmailAddresses_MOST_POPULAR_DOMAINS_BY_ABSOLUTEURI", Storage="_Domain", ThisKey="DomainID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Domain Domain
		{
			get
			{
				return this._Domain.Entity;
			}
			set
			{
				Domain previousValue = this._Domain.Entity;
				if (((previousValue != value) 
							|| (this._Domain.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Domain.Entity = null;
						previousValue.EmailAddresses_MOST_POPULAR_DOMAINS_BY_ABSOLUTEURI = null;
					}
					this._Domain.Entity = value;
					if ((value != null))
					{
						value.EmailAddresses_MOST_POPULAR_DOMAINS_BY_ABSOLUTEURI = this;
						this._DomainID = value.ID;
					}
					else
					{
						this._DomainID = default(int);
					}
					this.SendPropertyChanged("Domain");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="rpt.EmailAddresses_MOST_POPULAR_DOMAINS_BY_DOMAINS")]
	public partial class EmailAddresses_MOST_POPULAR_DOMAINS_BY_DOMAIN : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RowNumber;
		
		private System.Nullable<System.DateTime> _InitiallyDiscovered;
		
		private System.DateTime _LastDiscovered;
		
		private int _DomainID;
		
		private int _Count;
		
		private System.Nullable<short> _DaysSinceInitiallyDiscovered;
		
		private short _DaysSinceLastDiscovered;
		
		private System.Nullable<double> _Strength;
		
		private int _Rank;
		
		private int _DenseRank;
		
		private byte _NTile;
		
		private EntityRef<Domain> _Domain;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRowNumberChanging(int value);
    partial void OnRowNumberChanged();
    partial void OnInitiallyDiscoveredChanging(System.Nullable<System.DateTime> value);
    partial void OnInitiallyDiscoveredChanged();
    partial void OnLastDiscoveredChanging(System.DateTime value);
    partial void OnLastDiscoveredChanged();
    partial void OnDomainIDChanging(int value);
    partial void OnDomainIDChanged();
    partial void OnCountChanging(int value);
    partial void OnCountChanged();
    partial void OnDaysSinceInitiallyDiscoveredChanging(System.Nullable<short> value);
    partial void OnDaysSinceInitiallyDiscoveredChanged();
    partial void OnDaysSinceLastDiscoveredChanging(short value);
    partial void OnDaysSinceLastDiscoveredChanged();
    partial void OnStrengthChanging(System.Nullable<double> value);
    partial void OnStrengthChanged();
    partial void OnRankChanging(int value);
    partial void OnRankChanged();
    partial void OnDenseRankChanging(int value);
    partial void OnDenseRankChanged();
    partial void OnNTileChanging(byte value);
    partial void OnNTileChanged();
    #endregion
		
		public EmailAddresses_MOST_POPULAR_DOMAINS_BY_DOMAIN()
		{
			this._Domain = default(EntityRef<Domain>);
			OnCreated();
		}
		
		[Column(Storage="_RowNumber", DbType="Int NOT NULL")]
		public int RowNumber
		{
			get
			{
				return this._RowNumber;
			}
			set
			{
				if ((this._RowNumber != value))
				{
					this.OnRowNumberChanging(value);
					this.SendPropertyChanging();
					this._RowNumber = value;
					this.SendPropertyChanged("RowNumber");
					this.OnRowNumberChanged();
				}
			}
		}
		
		[Column(Storage="_InitiallyDiscovered", DbType="DateTime")]
		public System.Nullable<System.DateTime> InitiallyDiscovered
		{
			get
			{
				return this._InitiallyDiscovered;
			}
			set
			{
				if ((this._InitiallyDiscovered != value))
				{
					this.OnInitiallyDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._InitiallyDiscovered = value;
					this.SendPropertyChanged("InitiallyDiscovered");
					this.OnInitiallyDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_LastDiscovered", DbType="DateTime NOT NULL")]
		public System.DateTime LastDiscovered
		{
			get
			{
				return this._LastDiscovered;
			}
			set
			{
				if ((this._LastDiscovered != value))
				{
					this.OnLastDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._LastDiscovered = value;
					this.SendPropertyChanged("LastDiscovered");
					this.OnLastDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_DomainID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int DomainID
		{
			get
			{
				return this._DomainID;
			}
			set
			{
				if ((this._DomainID != value))
				{
					if (this._Domain.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDomainIDChanging(value);
					this.SendPropertyChanging();
					this._DomainID = value;
					this.SendPropertyChanged("DomainID");
					this.OnDomainIDChanged();
				}
			}
		}
		
		[Column(Storage="_Count", DbType="Int NOT NULL")]
		public int Count
		{
			get
			{
				return this._Count;
			}
			set
			{
				if ((this._Count != value))
				{
					this.OnCountChanging(value);
					this.SendPropertyChanging();
					this._Count = value;
					this.SendPropertyChanged("Count");
					this.OnCountChanged();
				}
			}
		}
		
		[Column(Storage="_DaysSinceInitiallyDiscovered", DbType="SmallInt")]
		public System.Nullable<short> DaysSinceInitiallyDiscovered
		{
			get
			{
				return this._DaysSinceInitiallyDiscovered;
			}
			set
			{
				if ((this._DaysSinceInitiallyDiscovered != value))
				{
					this.OnDaysSinceInitiallyDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._DaysSinceInitiallyDiscovered = value;
					this.SendPropertyChanged("DaysSinceInitiallyDiscovered");
					this.OnDaysSinceInitiallyDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_DaysSinceLastDiscovered", DbType="SmallInt NOT NULL")]
		public short DaysSinceLastDiscovered
		{
			get
			{
				return this._DaysSinceLastDiscovered;
			}
			set
			{
				if ((this._DaysSinceLastDiscovered != value))
				{
					this.OnDaysSinceLastDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._DaysSinceLastDiscovered = value;
					this.SendPropertyChanged("DaysSinceLastDiscovered");
					this.OnDaysSinceLastDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_Strength", DbType="Float")]
		public System.Nullable<double> Strength
		{
			get
			{
				return this._Strength;
			}
			set
			{
				if ((this._Strength != value))
				{
					this.OnStrengthChanging(value);
					this.SendPropertyChanging();
					this._Strength = value;
					this.SendPropertyChanged("Strength");
					this.OnStrengthChanged();
				}
			}
		}
		
		[Column(Storage="_Rank", DbType="Int NOT NULL")]
		public int Rank
		{
			get
			{
				return this._Rank;
			}
			set
			{
				if ((this._Rank != value))
				{
					this.OnRankChanging(value);
					this.SendPropertyChanging();
					this._Rank = value;
					this.SendPropertyChanged("Rank");
					this.OnRankChanged();
				}
			}
		}
		
		[Column(Storage="_DenseRank", DbType="Int NOT NULL")]
		public int DenseRank
		{
			get
			{
				return this._DenseRank;
			}
			set
			{
				if ((this._DenseRank != value))
				{
					this.OnDenseRankChanging(value);
					this.SendPropertyChanging();
					this._DenseRank = value;
					this.SendPropertyChanged("DenseRank");
					this.OnDenseRankChanged();
				}
			}
		}
		
		[Column(Storage="_NTile", DbType="TinyInt NOT NULL")]
		public byte NTile
		{
			get
			{
				return this._NTile;
			}
			set
			{
				if ((this._NTile != value))
				{
					this.OnNTileChanging(value);
					this.SendPropertyChanging();
					this._NTile = value;
					this.SendPropertyChanged("NTile");
					this.OnNTileChanged();
				}
			}
		}
		
		[Association(Name="Domain_EmailAddresses_MOST_POPULAR_DOMAINS_BY_DOMAIN", Storage="_Domain", ThisKey="DomainID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Domain Domain
		{
			get
			{
				return this._Domain.Entity;
			}
			set
			{
				Domain previousValue = this._Domain.Entity;
				if (((previousValue != value) 
							|| (this._Domain.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Domain.Entity = null;
						previousValue.EmailAddresses_MOST_POPULAR_DOMAINS_BY_DOMAIN = null;
					}
					this._Domain.Entity = value;
					if ((value != null))
					{
						value.EmailAddresses_MOST_POPULAR_DOMAINS_BY_DOMAIN = this;
						this._DomainID = value.ID;
					}
					else
					{
						this._DomainID = default(int);
					}
					this.SendPropertyChanged("Domain");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="rpt.EmailAddresses_MOST_POPULAR_DOMAINS_BY_EXTENSIONS")]
	public partial class EmailAddresses_MOST_POPULAR_DOMAINS_BY_EXTENSION : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RowNumber;
		
		private System.Nullable<System.DateTime> _InitiallyDiscovered;
		
		private System.DateTime _LastDiscovered;
		
		private int _DomainID;
		
		private int _Count;
		
		private System.Nullable<short> _DaysSinceInitiallyDiscovered;
		
		private short _DaysSinceLastDiscovered;
		
		private System.Nullable<double> _Strength;
		
		private int _Rank;
		
		private int _DenseRank;
		
		private byte _NTile;
		
		private EntityRef<Domain> _Domain;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRowNumberChanging(int value);
    partial void OnRowNumberChanged();
    partial void OnInitiallyDiscoveredChanging(System.Nullable<System.DateTime> value);
    partial void OnInitiallyDiscoveredChanged();
    partial void OnLastDiscoveredChanging(System.DateTime value);
    partial void OnLastDiscoveredChanged();
    partial void OnDomainIDChanging(int value);
    partial void OnDomainIDChanged();
    partial void OnCountChanging(int value);
    partial void OnCountChanged();
    partial void OnDaysSinceInitiallyDiscoveredChanging(System.Nullable<short> value);
    partial void OnDaysSinceInitiallyDiscoveredChanged();
    partial void OnDaysSinceLastDiscoveredChanging(short value);
    partial void OnDaysSinceLastDiscoveredChanged();
    partial void OnStrengthChanging(System.Nullable<double> value);
    partial void OnStrengthChanged();
    partial void OnRankChanging(int value);
    partial void OnRankChanged();
    partial void OnDenseRankChanging(int value);
    partial void OnDenseRankChanged();
    partial void OnNTileChanging(byte value);
    partial void OnNTileChanged();
    #endregion
		
		public EmailAddresses_MOST_POPULAR_DOMAINS_BY_EXTENSION()
		{
			this._Domain = default(EntityRef<Domain>);
			OnCreated();
		}
		
		[Column(Storage="_RowNumber", DbType="Int NOT NULL")]
		public int RowNumber
		{
			get
			{
				return this._RowNumber;
			}
			set
			{
				if ((this._RowNumber != value))
				{
					this.OnRowNumberChanging(value);
					this.SendPropertyChanging();
					this._RowNumber = value;
					this.SendPropertyChanged("RowNumber");
					this.OnRowNumberChanged();
				}
			}
		}
		
		[Column(Storage="_InitiallyDiscovered", DbType="DateTime")]
		public System.Nullable<System.DateTime> InitiallyDiscovered
		{
			get
			{
				return this._InitiallyDiscovered;
			}
			set
			{
				if ((this._InitiallyDiscovered != value))
				{
					this.OnInitiallyDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._InitiallyDiscovered = value;
					this.SendPropertyChanged("InitiallyDiscovered");
					this.OnInitiallyDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_LastDiscovered", DbType="DateTime NOT NULL")]
		public System.DateTime LastDiscovered
		{
			get
			{
				return this._LastDiscovered;
			}
			set
			{
				if ((this._LastDiscovered != value))
				{
					this.OnLastDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._LastDiscovered = value;
					this.SendPropertyChanged("LastDiscovered");
					this.OnLastDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_DomainID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int DomainID
		{
			get
			{
				return this._DomainID;
			}
			set
			{
				if ((this._DomainID != value))
				{
					if (this._Domain.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDomainIDChanging(value);
					this.SendPropertyChanging();
					this._DomainID = value;
					this.SendPropertyChanged("DomainID");
					this.OnDomainIDChanged();
				}
			}
		}
		
		[Column(Storage="_Count", DbType="Int NOT NULL")]
		public int Count
		{
			get
			{
				return this._Count;
			}
			set
			{
				if ((this._Count != value))
				{
					this.OnCountChanging(value);
					this.SendPropertyChanging();
					this._Count = value;
					this.SendPropertyChanged("Count");
					this.OnCountChanged();
				}
			}
		}
		
		[Column(Storage="_DaysSinceInitiallyDiscovered", DbType="SmallInt")]
		public System.Nullable<short> DaysSinceInitiallyDiscovered
		{
			get
			{
				return this._DaysSinceInitiallyDiscovered;
			}
			set
			{
				if ((this._DaysSinceInitiallyDiscovered != value))
				{
					this.OnDaysSinceInitiallyDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._DaysSinceInitiallyDiscovered = value;
					this.SendPropertyChanged("DaysSinceInitiallyDiscovered");
					this.OnDaysSinceInitiallyDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_DaysSinceLastDiscovered", DbType="SmallInt NOT NULL")]
		public short DaysSinceLastDiscovered
		{
			get
			{
				return this._DaysSinceLastDiscovered;
			}
			set
			{
				if ((this._DaysSinceLastDiscovered != value))
				{
					this.OnDaysSinceLastDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._DaysSinceLastDiscovered = value;
					this.SendPropertyChanged("DaysSinceLastDiscovered");
					this.OnDaysSinceLastDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_Strength", DbType="Float")]
		public System.Nullable<double> Strength
		{
			get
			{
				return this._Strength;
			}
			set
			{
				if ((this._Strength != value))
				{
					this.OnStrengthChanging(value);
					this.SendPropertyChanging();
					this._Strength = value;
					this.SendPropertyChanged("Strength");
					this.OnStrengthChanged();
				}
			}
		}
		
		[Column(Storage="_Rank", DbType="Int NOT NULL")]
		public int Rank
		{
			get
			{
				return this._Rank;
			}
			set
			{
				if ((this._Rank != value))
				{
					this.OnRankChanging(value);
					this.SendPropertyChanging();
					this._Rank = value;
					this.SendPropertyChanged("Rank");
					this.OnRankChanged();
				}
			}
		}
		
		[Column(Storage="_DenseRank", DbType="Int NOT NULL")]
		public int DenseRank
		{
			get
			{
				return this._DenseRank;
			}
			set
			{
				if ((this._DenseRank != value))
				{
					this.OnDenseRankChanging(value);
					this.SendPropertyChanging();
					this._DenseRank = value;
					this.SendPropertyChanged("DenseRank");
					this.OnDenseRankChanged();
				}
			}
		}
		
		[Column(Storage="_NTile", DbType="TinyInt NOT NULL")]
		public byte NTile
		{
			get
			{
				return this._NTile;
			}
			set
			{
				if ((this._NTile != value))
				{
					this.OnNTileChanging(value);
					this.SendPropertyChanging();
					this._NTile = value;
					this.SendPropertyChanged("NTile");
					this.OnNTileChanged();
				}
			}
		}
		
		[Association(Name="Domain_EmailAddresses_MOST_POPULAR_DOMAINS_BY_EXTENSION", Storage="_Domain", ThisKey="DomainID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Domain Domain
		{
			get
			{
				return this._Domain.Entity;
			}
			set
			{
				Domain previousValue = this._Domain.Entity;
				if (((previousValue != value) 
							|| (this._Domain.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Domain.Entity = null;
						previousValue.EmailAddresses_MOST_POPULAR_DOMAINS_BY_EXTENSION = null;
					}
					this._Domain.Entity = value;
					if ((value != null))
					{
						value.EmailAddresses_MOST_POPULAR_DOMAINS_BY_EXTENSION = this;
						this._DomainID = value.ID;
					}
					else
					{
						this._DomainID = default(int);
					}
					this.SendPropertyChanged("Domain");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="rpt.EmailAddresses_MOST_POPULAR_DOMAINS_BY_HOSTS")]
	public partial class EmailAddresses_MOST_POPULAR_DOMAINS_BY_HOST : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RowNumber;
		
		private System.Nullable<System.DateTime> _InitiallyDiscovered;
		
		private System.DateTime _LastDiscovered;
		
		private int _DomainID;
		
		private int _Count;
		
		private System.Nullable<short> _DaysSinceInitiallyDiscovered;
		
		private short _DaysSinceLastDiscovered;
		
		private System.Nullable<double> _Strength;
		
		private int _Rank;
		
		private int _DenseRank;
		
		private byte _NTile;
		
		private EntityRef<Domain> _Domain;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRowNumberChanging(int value);
    partial void OnRowNumberChanged();
    partial void OnInitiallyDiscoveredChanging(System.Nullable<System.DateTime> value);
    partial void OnInitiallyDiscoveredChanged();
    partial void OnLastDiscoveredChanging(System.DateTime value);
    partial void OnLastDiscoveredChanged();
    partial void OnDomainIDChanging(int value);
    partial void OnDomainIDChanged();
    partial void OnCountChanging(int value);
    partial void OnCountChanged();
    partial void OnDaysSinceInitiallyDiscoveredChanging(System.Nullable<short> value);
    partial void OnDaysSinceInitiallyDiscoveredChanged();
    partial void OnDaysSinceLastDiscoveredChanging(short value);
    partial void OnDaysSinceLastDiscoveredChanged();
    partial void OnStrengthChanging(System.Nullable<double> value);
    partial void OnStrengthChanged();
    partial void OnRankChanging(int value);
    partial void OnRankChanged();
    partial void OnDenseRankChanging(int value);
    partial void OnDenseRankChanged();
    partial void OnNTileChanging(byte value);
    partial void OnNTileChanged();
    #endregion
		
		public EmailAddresses_MOST_POPULAR_DOMAINS_BY_HOST()
		{
			this._Domain = default(EntityRef<Domain>);
			OnCreated();
		}
		
		[Column(Storage="_RowNumber", DbType="Int NOT NULL")]
		public int RowNumber
		{
			get
			{
				return this._RowNumber;
			}
			set
			{
				if ((this._RowNumber != value))
				{
					this.OnRowNumberChanging(value);
					this.SendPropertyChanging();
					this._RowNumber = value;
					this.SendPropertyChanged("RowNumber");
					this.OnRowNumberChanged();
				}
			}
		}
		
		[Column(Storage="_InitiallyDiscovered", DbType="DateTime")]
		public System.Nullable<System.DateTime> InitiallyDiscovered
		{
			get
			{
				return this._InitiallyDiscovered;
			}
			set
			{
				if ((this._InitiallyDiscovered != value))
				{
					this.OnInitiallyDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._InitiallyDiscovered = value;
					this.SendPropertyChanged("InitiallyDiscovered");
					this.OnInitiallyDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_LastDiscovered", DbType="DateTime NOT NULL")]
		public System.DateTime LastDiscovered
		{
			get
			{
				return this._LastDiscovered;
			}
			set
			{
				if ((this._LastDiscovered != value))
				{
					this.OnLastDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._LastDiscovered = value;
					this.SendPropertyChanged("LastDiscovered");
					this.OnLastDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_DomainID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int DomainID
		{
			get
			{
				return this._DomainID;
			}
			set
			{
				if ((this._DomainID != value))
				{
					if (this._Domain.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDomainIDChanging(value);
					this.SendPropertyChanging();
					this._DomainID = value;
					this.SendPropertyChanged("DomainID");
					this.OnDomainIDChanged();
				}
			}
		}
		
		[Column(Storage="_Count", DbType="Int NOT NULL")]
		public int Count
		{
			get
			{
				return this._Count;
			}
			set
			{
				if ((this._Count != value))
				{
					this.OnCountChanging(value);
					this.SendPropertyChanging();
					this._Count = value;
					this.SendPropertyChanged("Count");
					this.OnCountChanged();
				}
			}
		}
		
		[Column(Storage="_DaysSinceInitiallyDiscovered", DbType="SmallInt")]
		public System.Nullable<short> DaysSinceInitiallyDiscovered
		{
			get
			{
				return this._DaysSinceInitiallyDiscovered;
			}
			set
			{
				if ((this._DaysSinceInitiallyDiscovered != value))
				{
					this.OnDaysSinceInitiallyDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._DaysSinceInitiallyDiscovered = value;
					this.SendPropertyChanged("DaysSinceInitiallyDiscovered");
					this.OnDaysSinceInitiallyDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_DaysSinceLastDiscovered", DbType="SmallInt NOT NULL")]
		public short DaysSinceLastDiscovered
		{
			get
			{
				return this._DaysSinceLastDiscovered;
			}
			set
			{
				if ((this._DaysSinceLastDiscovered != value))
				{
					this.OnDaysSinceLastDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._DaysSinceLastDiscovered = value;
					this.SendPropertyChanged("DaysSinceLastDiscovered");
					this.OnDaysSinceLastDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_Strength", DbType="Float")]
		public System.Nullable<double> Strength
		{
			get
			{
				return this._Strength;
			}
			set
			{
				if ((this._Strength != value))
				{
					this.OnStrengthChanging(value);
					this.SendPropertyChanging();
					this._Strength = value;
					this.SendPropertyChanged("Strength");
					this.OnStrengthChanged();
				}
			}
		}
		
		[Column(Storage="_Rank", DbType="Int NOT NULL")]
		public int Rank
		{
			get
			{
				return this._Rank;
			}
			set
			{
				if ((this._Rank != value))
				{
					this.OnRankChanging(value);
					this.SendPropertyChanging();
					this._Rank = value;
					this.SendPropertyChanged("Rank");
					this.OnRankChanged();
				}
			}
		}
		
		[Column(Storage="_DenseRank", DbType="Int NOT NULL")]
		public int DenseRank
		{
			get
			{
				return this._DenseRank;
			}
			set
			{
				if ((this._DenseRank != value))
				{
					this.OnDenseRankChanging(value);
					this.SendPropertyChanging();
					this._DenseRank = value;
					this.SendPropertyChanged("DenseRank");
					this.OnDenseRankChanged();
				}
			}
		}
		
		[Column(Storage="_NTile", DbType="TinyInt NOT NULL")]
		public byte NTile
		{
			get
			{
				return this._NTile;
			}
			set
			{
				if ((this._NTile != value))
				{
					this.OnNTileChanging(value);
					this.SendPropertyChanging();
					this._NTile = value;
					this.SendPropertyChanged("NTile");
					this.OnNTileChanged();
				}
			}
		}
		
		[Association(Name="Domain_EmailAddresses_MOST_POPULAR_DOMAINS_BY_HOST", Storage="_Domain", ThisKey="DomainID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Domain Domain
		{
			get
			{
				return this._Domain.Entity;
			}
			set
			{
				Domain previousValue = this._Domain.Entity;
				if (((previousValue != value) 
							|| (this._Domain.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Domain.Entity = null;
						previousValue.EmailAddresses_MOST_POPULAR_DOMAINS_BY_HOST = null;
					}
					this._Domain.Entity = value;
					if ((value != null))
					{
						value.EmailAddresses_MOST_POPULAR_DOMAINS_BY_HOST = this;
						this._DomainID = value.ID;
					}
					else
					{
						this._DomainID = default(int);
					}
					this.SendPropertyChanged("Domain");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="rpt.EmailAddresses_MOST_POPULAR_DOMAINS_BY_SCHEMES")]
	public partial class EmailAddresses_MOST_POPULAR_DOMAINS_BY_SCHEME : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RowNumber;
		
		private System.Nullable<System.DateTime> _InitiallyDiscovered;
		
		private System.DateTime _LastDiscovered;
		
		private int _DomainID;
		
		private int _Count;
		
		private System.Nullable<short> _DaysSinceInitiallyDiscovered;
		
		private short _DaysSinceLastDiscovered;
		
		private System.Nullable<double> _Strength;
		
		private int _Rank;
		
		private int _DenseRank;
		
		private byte _NTile;
		
		private EntityRef<Domain> _Domain;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRowNumberChanging(int value);
    partial void OnRowNumberChanged();
    partial void OnInitiallyDiscoveredChanging(System.Nullable<System.DateTime> value);
    partial void OnInitiallyDiscoveredChanged();
    partial void OnLastDiscoveredChanging(System.DateTime value);
    partial void OnLastDiscoveredChanged();
    partial void OnDomainIDChanging(int value);
    partial void OnDomainIDChanged();
    partial void OnCountChanging(int value);
    partial void OnCountChanged();
    partial void OnDaysSinceInitiallyDiscoveredChanging(System.Nullable<short> value);
    partial void OnDaysSinceInitiallyDiscoveredChanged();
    partial void OnDaysSinceLastDiscoveredChanging(short value);
    partial void OnDaysSinceLastDiscoveredChanged();
    partial void OnStrengthChanging(System.Nullable<double> value);
    partial void OnStrengthChanged();
    partial void OnRankChanging(int value);
    partial void OnRankChanged();
    partial void OnDenseRankChanging(int value);
    partial void OnDenseRankChanged();
    partial void OnNTileChanging(byte value);
    partial void OnNTileChanged();
    #endregion
		
		public EmailAddresses_MOST_POPULAR_DOMAINS_BY_SCHEME()
		{
			this._Domain = default(EntityRef<Domain>);
			OnCreated();
		}
		
		[Column(Storage="_RowNumber", DbType="Int NOT NULL")]
		public int RowNumber
		{
			get
			{
				return this._RowNumber;
			}
			set
			{
				if ((this._RowNumber != value))
				{
					this.OnRowNumberChanging(value);
					this.SendPropertyChanging();
					this._RowNumber = value;
					this.SendPropertyChanged("RowNumber");
					this.OnRowNumberChanged();
				}
			}
		}
		
		[Column(Storage="_InitiallyDiscovered", DbType="DateTime")]
		public System.Nullable<System.DateTime> InitiallyDiscovered
		{
			get
			{
				return this._InitiallyDiscovered;
			}
			set
			{
				if ((this._InitiallyDiscovered != value))
				{
					this.OnInitiallyDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._InitiallyDiscovered = value;
					this.SendPropertyChanged("InitiallyDiscovered");
					this.OnInitiallyDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_LastDiscovered", DbType="DateTime NOT NULL")]
		public System.DateTime LastDiscovered
		{
			get
			{
				return this._LastDiscovered;
			}
			set
			{
				if ((this._LastDiscovered != value))
				{
					this.OnLastDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._LastDiscovered = value;
					this.SendPropertyChanged("LastDiscovered");
					this.OnLastDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_DomainID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int DomainID
		{
			get
			{
				return this._DomainID;
			}
			set
			{
				if ((this._DomainID != value))
				{
					if (this._Domain.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDomainIDChanging(value);
					this.SendPropertyChanging();
					this._DomainID = value;
					this.SendPropertyChanged("DomainID");
					this.OnDomainIDChanged();
				}
			}
		}
		
		[Column(Storage="_Count", DbType="Int NOT NULL")]
		public int Count
		{
			get
			{
				return this._Count;
			}
			set
			{
				if ((this._Count != value))
				{
					this.OnCountChanging(value);
					this.SendPropertyChanging();
					this._Count = value;
					this.SendPropertyChanged("Count");
					this.OnCountChanged();
				}
			}
		}
		
		[Column(Storage="_DaysSinceInitiallyDiscovered", DbType="SmallInt")]
		public System.Nullable<short> DaysSinceInitiallyDiscovered
		{
			get
			{
				return this._DaysSinceInitiallyDiscovered;
			}
			set
			{
				if ((this._DaysSinceInitiallyDiscovered != value))
				{
					this.OnDaysSinceInitiallyDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._DaysSinceInitiallyDiscovered = value;
					this.SendPropertyChanged("DaysSinceInitiallyDiscovered");
					this.OnDaysSinceInitiallyDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_DaysSinceLastDiscovered", DbType="SmallInt NOT NULL")]
		public short DaysSinceLastDiscovered
		{
			get
			{
				return this._DaysSinceLastDiscovered;
			}
			set
			{
				if ((this._DaysSinceLastDiscovered != value))
				{
					this.OnDaysSinceLastDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._DaysSinceLastDiscovered = value;
					this.SendPropertyChanged("DaysSinceLastDiscovered");
					this.OnDaysSinceLastDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_Strength", DbType="Float")]
		public System.Nullable<double> Strength
		{
			get
			{
				return this._Strength;
			}
			set
			{
				if ((this._Strength != value))
				{
					this.OnStrengthChanging(value);
					this.SendPropertyChanging();
					this._Strength = value;
					this.SendPropertyChanged("Strength");
					this.OnStrengthChanged();
				}
			}
		}
		
		[Column(Storage="_Rank", DbType="Int NOT NULL")]
		public int Rank
		{
			get
			{
				return this._Rank;
			}
			set
			{
				if ((this._Rank != value))
				{
					this.OnRankChanging(value);
					this.SendPropertyChanging();
					this._Rank = value;
					this.SendPropertyChanged("Rank");
					this.OnRankChanged();
				}
			}
		}
		
		[Column(Storage="_DenseRank", DbType="Int NOT NULL")]
		public int DenseRank
		{
			get
			{
				return this._DenseRank;
			}
			set
			{
				if ((this._DenseRank != value))
				{
					this.OnDenseRankChanging(value);
					this.SendPropertyChanging();
					this._DenseRank = value;
					this.SendPropertyChanged("DenseRank");
					this.OnDenseRankChanged();
				}
			}
		}
		
		[Column(Storage="_NTile", DbType="TinyInt NOT NULL")]
		public byte NTile
		{
			get
			{
				return this._NTile;
			}
			set
			{
				if ((this._NTile != value))
				{
					this.OnNTileChanging(value);
					this.SendPropertyChanging();
					this._NTile = value;
					this.SendPropertyChanged("NTile");
					this.OnNTileChanged();
				}
			}
		}
		
		[Association(Name="Domain_EmailAddresses_MOST_POPULAR_DOMAINS_BY_SCHEME", Storage="_Domain", ThisKey="DomainID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Domain Domain
		{
			get
			{
				return this._Domain.Entity;
			}
			set
			{
				Domain previousValue = this._Domain.Entity;
				if (((previousValue != value) 
							|| (this._Domain.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Domain.Entity = null;
						previousValue.EmailAddresses_MOST_POPULAR_DOMAINS_BY_SCHEME = null;
					}
					this._Domain.Entity = value;
					if ((value != null))
					{
						value.EmailAddresses_MOST_POPULAR_DOMAINS_BY_SCHEME = this;
						this._DomainID = value.ID;
					}
					else
					{
						this._DomainID = default(int);
					}
					this.SendPropertyChanged("Domain");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="rpt.EmailAddresses_MOST_POPULAR_EXTENSIONS_BY_ABSOLUTEURIS")]
	public partial class EmailAddresses_MOST_POPULAR_EXTENSIONS_BY_ABSOLUTEURI : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RowNumber;
		
		private System.Nullable<System.DateTime> _InitiallyDiscovered;
		
		private System.DateTime _LastDiscovered;
		
		private int _ExtensionID;
		
		private int _Count;
		
		private System.Nullable<short> _DaysSinceInitiallyDiscovered;
		
		private short _DaysSinceLastDiscovered;
		
		private System.Nullable<double> _Strength;
		
		private int _Rank;
		
		private int _DenseRank;
		
		private byte _NTile;
		
		private EntityRef<Extension> _Extension;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRowNumberChanging(int value);
    partial void OnRowNumberChanged();
    partial void OnInitiallyDiscoveredChanging(System.Nullable<System.DateTime> value);
    partial void OnInitiallyDiscoveredChanged();
    partial void OnLastDiscoveredChanging(System.DateTime value);
    partial void OnLastDiscoveredChanged();
    partial void OnExtensionIDChanging(int value);
    partial void OnExtensionIDChanged();
    partial void OnCountChanging(int value);
    partial void OnCountChanged();
    partial void OnDaysSinceInitiallyDiscoveredChanging(System.Nullable<short> value);
    partial void OnDaysSinceInitiallyDiscoveredChanged();
    partial void OnDaysSinceLastDiscoveredChanging(short value);
    partial void OnDaysSinceLastDiscoveredChanged();
    partial void OnStrengthChanging(System.Nullable<double> value);
    partial void OnStrengthChanged();
    partial void OnRankChanging(int value);
    partial void OnRankChanged();
    partial void OnDenseRankChanging(int value);
    partial void OnDenseRankChanged();
    partial void OnNTileChanging(byte value);
    partial void OnNTileChanged();
    #endregion
		
		public EmailAddresses_MOST_POPULAR_EXTENSIONS_BY_ABSOLUTEURI()
		{
			this._Extension = default(EntityRef<Extension>);
			OnCreated();
		}
		
		[Column(Storage="_RowNumber", DbType="Int NOT NULL")]
		public int RowNumber
		{
			get
			{
				return this._RowNumber;
			}
			set
			{
				if ((this._RowNumber != value))
				{
					this.OnRowNumberChanging(value);
					this.SendPropertyChanging();
					this._RowNumber = value;
					this.SendPropertyChanged("RowNumber");
					this.OnRowNumberChanged();
				}
			}
		}
		
		[Column(Storage="_InitiallyDiscovered", DbType="DateTime")]
		public System.Nullable<System.DateTime> InitiallyDiscovered
		{
			get
			{
				return this._InitiallyDiscovered;
			}
			set
			{
				if ((this._InitiallyDiscovered != value))
				{
					this.OnInitiallyDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._InitiallyDiscovered = value;
					this.SendPropertyChanged("InitiallyDiscovered");
					this.OnInitiallyDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_LastDiscovered", DbType="DateTime NOT NULL")]
		public System.DateTime LastDiscovered
		{
			get
			{
				return this._LastDiscovered;
			}
			set
			{
				if ((this._LastDiscovered != value))
				{
					this.OnLastDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._LastDiscovered = value;
					this.SendPropertyChanged("LastDiscovered");
					this.OnLastDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_ExtensionID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ExtensionID
		{
			get
			{
				return this._ExtensionID;
			}
			set
			{
				if ((this._ExtensionID != value))
				{
					if (this._Extension.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnExtensionIDChanging(value);
					this.SendPropertyChanging();
					this._ExtensionID = value;
					this.SendPropertyChanged("ExtensionID");
					this.OnExtensionIDChanged();
				}
			}
		}
		
		[Column(Storage="_Count", DbType="Int NOT NULL")]
		public int Count
		{
			get
			{
				return this._Count;
			}
			set
			{
				if ((this._Count != value))
				{
					this.OnCountChanging(value);
					this.SendPropertyChanging();
					this._Count = value;
					this.SendPropertyChanged("Count");
					this.OnCountChanged();
				}
			}
		}
		
		[Column(Storage="_DaysSinceInitiallyDiscovered", DbType="SmallInt")]
		public System.Nullable<short> DaysSinceInitiallyDiscovered
		{
			get
			{
				return this._DaysSinceInitiallyDiscovered;
			}
			set
			{
				if ((this._DaysSinceInitiallyDiscovered != value))
				{
					this.OnDaysSinceInitiallyDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._DaysSinceInitiallyDiscovered = value;
					this.SendPropertyChanged("DaysSinceInitiallyDiscovered");
					this.OnDaysSinceInitiallyDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_DaysSinceLastDiscovered", DbType="SmallInt NOT NULL")]
		public short DaysSinceLastDiscovered
		{
			get
			{
				return this._DaysSinceLastDiscovered;
			}
			set
			{
				if ((this._DaysSinceLastDiscovered != value))
				{
					this.OnDaysSinceLastDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._DaysSinceLastDiscovered = value;
					this.SendPropertyChanged("DaysSinceLastDiscovered");
					this.OnDaysSinceLastDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_Strength", DbType="Float")]
		public System.Nullable<double> Strength
		{
			get
			{
				return this._Strength;
			}
			set
			{
				if ((this._Strength != value))
				{
					this.OnStrengthChanging(value);
					this.SendPropertyChanging();
					this._Strength = value;
					this.SendPropertyChanged("Strength");
					this.OnStrengthChanged();
				}
			}
		}
		
		[Column(Storage="_Rank", DbType="Int NOT NULL")]
		public int Rank
		{
			get
			{
				return this._Rank;
			}
			set
			{
				if ((this._Rank != value))
				{
					this.OnRankChanging(value);
					this.SendPropertyChanging();
					this._Rank = value;
					this.SendPropertyChanged("Rank");
					this.OnRankChanged();
				}
			}
		}
		
		[Column(Storage="_DenseRank", DbType="Int NOT NULL")]
		public int DenseRank
		{
			get
			{
				return this._DenseRank;
			}
			set
			{
				if ((this._DenseRank != value))
				{
					this.OnDenseRankChanging(value);
					this.SendPropertyChanging();
					this._DenseRank = value;
					this.SendPropertyChanged("DenseRank");
					this.OnDenseRankChanged();
				}
			}
		}
		
		[Column(Storage="_NTile", DbType="TinyInt NOT NULL")]
		public byte NTile
		{
			get
			{
				return this._NTile;
			}
			set
			{
				if ((this._NTile != value))
				{
					this.OnNTileChanging(value);
					this.SendPropertyChanging();
					this._NTile = value;
					this.SendPropertyChanged("NTile");
					this.OnNTileChanged();
				}
			}
		}
		
		[Association(Name="Extension_EmailAddresses_MOST_POPULAR_EXTENSIONS_BY_ABSOLUTEURI", Storage="_Extension", ThisKey="ExtensionID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Extension Extension
		{
			get
			{
				return this._Extension.Entity;
			}
			set
			{
				Extension previousValue = this._Extension.Entity;
				if (((previousValue != value) 
							|| (this._Extension.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Extension.Entity = null;
						previousValue.EmailAddresses_MOST_POPULAR_EXTENSIONS_BY_ABSOLUTEURI = null;
					}
					this._Extension.Entity = value;
					if ((value != null))
					{
						value.EmailAddresses_MOST_POPULAR_EXTENSIONS_BY_ABSOLUTEURI = this;
						this._ExtensionID = value.ID;
					}
					else
					{
						this._ExtensionID = default(int);
					}
					this.SendPropertyChanged("Extension");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="rpt.EmailAddresses_MOST_POPULAR_EXTENSIONS_BY_DOMAINS")]
	public partial class EmailAddresses_MOST_POPULAR_EXTENSIONS_BY_DOMAIN : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RowNumber;
		
		private System.Nullable<System.DateTime> _InitiallyDiscovered;
		
		private System.DateTime _LastDiscovered;
		
		private int _ExtensionID;
		
		private int _Count;
		
		private System.Nullable<short> _DaysSinceInitiallyDiscovered;
		
		private short _DaysSinceLastDiscovered;
		
		private System.Nullable<double> _Strength;
		
		private int _Rank;
		
		private int _DenseRank;
		
		private byte _NTile;
		
		private EntityRef<Extension> _Extension;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRowNumberChanging(int value);
    partial void OnRowNumberChanged();
    partial void OnInitiallyDiscoveredChanging(System.Nullable<System.DateTime> value);
    partial void OnInitiallyDiscoveredChanged();
    partial void OnLastDiscoveredChanging(System.DateTime value);
    partial void OnLastDiscoveredChanged();
    partial void OnExtensionIDChanging(int value);
    partial void OnExtensionIDChanged();
    partial void OnCountChanging(int value);
    partial void OnCountChanged();
    partial void OnDaysSinceInitiallyDiscoveredChanging(System.Nullable<short> value);
    partial void OnDaysSinceInitiallyDiscoveredChanged();
    partial void OnDaysSinceLastDiscoveredChanging(short value);
    partial void OnDaysSinceLastDiscoveredChanged();
    partial void OnStrengthChanging(System.Nullable<double> value);
    partial void OnStrengthChanged();
    partial void OnRankChanging(int value);
    partial void OnRankChanged();
    partial void OnDenseRankChanging(int value);
    partial void OnDenseRankChanged();
    partial void OnNTileChanging(byte value);
    partial void OnNTileChanged();
    #endregion
		
		public EmailAddresses_MOST_POPULAR_EXTENSIONS_BY_DOMAIN()
		{
			this._Extension = default(EntityRef<Extension>);
			OnCreated();
		}
		
		[Column(Storage="_RowNumber", DbType="Int NOT NULL")]
		public int RowNumber
		{
			get
			{
				return this._RowNumber;
			}
			set
			{
				if ((this._RowNumber != value))
				{
					this.OnRowNumberChanging(value);
					this.SendPropertyChanging();
					this._RowNumber = value;
					this.SendPropertyChanged("RowNumber");
					this.OnRowNumberChanged();
				}
			}
		}
		
		[Column(Storage="_InitiallyDiscovered", DbType="DateTime")]
		public System.Nullable<System.DateTime> InitiallyDiscovered
		{
			get
			{
				return this._InitiallyDiscovered;
			}
			set
			{
				if ((this._InitiallyDiscovered != value))
				{
					this.OnInitiallyDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._InitiallyDiscovered = value;
					this.SendPropertyChanged("InitiallyDiscovered");
					this.OnInitiallyDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_LastDiscovered", DbType="DateTime NOT NULL")]
		public System.DateTime LastDiscovered
		{
			get
			{
				return this._LastDiscovered;
			}
			set
			{
				if ((this._LastDiscovered != value))
				{
					this.OnLastDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._LastDiscovered = value;
					this.SendPropertyChanged("LastDiscovered");
					this.OnLastDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_ExtensionID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ExtensionID
		{
			get
			{
				return this._ExtensionID;
			}
			set
			{
				if ((this._ExtensionID != value))
				{
					if (this._Extension.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnExtensionIDChanging(value);
					this.SendPropertyChanging();
					this._ExtensionID = value;
					this.SendPropertyChanged("ExtensionID");
					this.OnExtensionIDChanged();
				}
			}
		}
		
		[Column(Storage="_Count", DbType="Int NOT NULL")]
		public int Count
		{
			get
			{
				return this._Count;
			}
			set
			{
				if ((this._Count != value))
				{
					this.OnCountChanging(value);
					this.SendPropertyChanging();
					this._Count = value;
					this.SendPropertyChanged("Count");
					this.OnCountChanged();
				}
			}
		}
		
		[Column(Storage="_DaysSinceInitiallyDiscovered", DbType="SmallInt")]
		public System.Nullable<short> DaysSinceInitiallyDiscovered
		{
			get
			{
				return this._DaysSinceInitiallyDiscovered;
			}
			set
			{
				if ((this._DaysSinceInitiallyDiscovered != value))
				{
					this.OnDaysSinceInitiallyDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._DaysSinceInitiallyDiscovered = value;
					this.SendPropertyChanged("DaysSinceInitiallyDiscovered");
					this.OnDaysSinceInitiallyDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_DaysSinceLastDiscovered", DbType="SmallInt NOT NULL")]
		public short DaysSinceLastDiscovered
		{
			get
			{
				return this._DaysSinceLastDiscovered;
			}
			set
			{
				if ((this._DaysSinceLastDiscovered != value))
				{
					this.OnDaysSinceLastDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._DaysSinceLastDiscovered = value;
					this.SendPropertyChanged("DaysSinceLastDiscovered");
					this.OnDaysSinceLastDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_Strength", DbType="Float")]
		public System.Nullable<double> Strength
		{
			get
			{
				return this._Strength;
			}
			set
			{
				if ((this._Strength != value))
				{
					this.OnStrengthChanging(value);
					this.SendPropertyChanging();
					this._Strength = value;
					this.SendPropertyChanged("Strength");
					this.OnStrengthChanged();
				}
			}
		}
		
		[Column(Storage="_Rank", DbType="Int NOT NULL")]
		public int Rank
		{
			get
			{
				return this._Rank;
			}
			set
			{
				if ((this._Rank != value))
				{
					this.OnRankChanging(value);
					this.SendPropertyChanging();
					this._Rank = value;
					this.SendPropertyChanged("Rank");
					this.OnRankChanged();
				}
			}
		}
		
		[Column(Storage="_DenseRank", DbType="Int NOT NULL")]
		public int DenseRank
		{
			get
			{
				return this._DenseRank;
			}
			set
			{
				if ((this._DenseRank != value))
				{
					this.OnDenseRankChanging(value);
					this.SendPropertyChanging();
					this._DenseRank = value;
					this.SendPropertyChanged("DenseRank");
					this.OnDenseRankChanged();
				}
			}
		}
		
		[Column(Storage="_NTile", DbType="TinyInt NOT NULL")]
		public byte NTile
		{
			get
			{
				return this._NTile;
			}
			set
			{
				if ((this._NTile != value))
				{
					this.OnNTileChanging(value);
					this.SendPropertyChanging();
					this._NTile = value;
					this.SendPropertyChanged("NTile");
					this.OnNTileChanged();
				}
			}
		}
		
		[Association(Name="Extension_EmailAddresses_MOST_POPULAR_EXTENSIONS_BY_DOMAIN", Storage="_Extension", ThisKey="ExtensionID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Extension Extension
		{
			get
			{
				return this._Extension.Entity;
			}
			set
			{
				Extension previousValue = this._Extension.Entity;
				if (((previousValue != value) 
							|| (this._Extension.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Extension.Entity = null;
						previousValue.EmailAddresses_MOST_POPULAR_EXTENSIONS_BY_DOMAIN = null;
					}
					this._Extension.Entity = value;
					if ((value != null))
					{
						value.EmailAddresses_MOST_POPULAR_EXTENSIONS_BY_DOMAIN = this;
						this._ExtensionID = value.ID;
					}
					else
					{
						this._ExtensionID = default(int);
					}
					this.SendPropertyChanged("Extension");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="rpt.EmailAddresses_MOST_POPULAR_EXTENSIONS_BY_EXTENSIONS")]
	public partial class EmailAddresses_MOST_POPULAR_EXTENSIONS_BY_EXTENSION : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RowNumber;
		
		private System.Nullable<System.DateTime> _InitiallyDiscovered;
		
		private System.DateTime _LastDiscovered;
		
		private int _ExtensionID;
		
		private int _Count;
		
		private System.Nullable<short> _DaysSinceInitiallyDiscovered;
		
		private short _DaysSinceLastDiscovered;
		
		private System.Nullable<double> _Strength;
		
		private int _Rank;
		
		private int _DenseRank;
		
		private byte _NTile;
		
		private EntityRef<Extension> _Extension;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRowNumberChanging(int value);
    partial void OnRowNumberChanged();
    partial void OnInitiallyDiscoveredChanging(System.Nullable<System.DateTime> value);
    partial void OnInitiallyDiscoveredChanged();
    partial void OnLastDiscoveredChanging(System.DateTime value);
    partial void OnLastDiscoveredChanged();
    partial void OnExtensionIDChanging(int value);
    partial void OnExtensionIDChanged();
    partial void OnCountChanging(int value);
    partial void OnCountChanged();
    partial void OnDaysSinceInitiallyDiscoveredChanging(System.Nullable<short> value);
    partial void OnDaysSinceInitiallyDiscoveredChanged();
    partial void OnDaysSinceLastDiscoveredChanging(short value);
    partial void OnDaysSinceLastDiscoveredChanged();
    partial void OnStrengthChanging(System.Nullable<double> value);
    partial void OnStrengthChanged();
    partial void OnRankChanging(int value);
    partial void OnRankChanged();
    partial void OnDenseRankChanging(int value);
    partial void OnDenseRankChanged();
    partial void OnNTileChanging(byte value);
    partial void OnNTileChanged();
    #endregion
		
		public EmailAddresses_MOST_POPULAR_EXTENSIONS_BY_EXTENSION()
		{
			this._Extension = default(EntityRef<Extension>);
			OnCreated();
		}
		
		[Column(Storage="_RowNumber", DbType="Int NOT NULL")]
		public int RowNumber
		{
			get
			{
				return this._RowNumber;
			}
			set
			{
				if ((this._RowNumber != value))
				{
					this.OnRowNumberChanging(value);
					this.SendPropertyChanging();
					this._RowNumber = value;
					this.SendPropertyChanged("RowNumber");
					this.OnRowNumberChanged();
				}
			}
		}
		
		[Column(Storage="_InitiallyDiscovered", DbType="DateTime")]
		public System.Nullable<System.DateTime> InitiallyDiscovered
		{
			get
			{
				return this._InitiallyDiscovered;
			}
			set
			{
				if ((this._InitiallyDiscovered != value))
				{
					this.OnInitiallyDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._InitiallyDiscovered = value;
					this.SendPropertyChanged("InitiallyDiscovered");
					this.OnInitiallyDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_LastDiscovered", DbType="DateTime NOT NULL")]
		public System.DateTime LastDiscovered
		{
			get
			{
				return this._LastDiscovered;
			}
			set
			{
				if ((this._LastDiscovered != value))
				{
					this.OnLastDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._LastDiscovered = value;
					this.SendPropertyChanged("LastDiscovered");
					this.OnLastDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_ExtensionID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ExtensionID
		{
			get
			{
				return this._ExtensionID;
			}
			set
			{
				if ((this._ExtensionID != value))
				{
					if (this._Extension.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnExtensionIDChanging(value);
					this.SendPropertyChanging();
					this._ExtensionID = value;
					this.SendPropertyChanged("ExtensionID");
					this.OnExtensionIDChanged();
				}
			}
		}
		
		[Column(Storage="_Count", DbType="Int NOT NULL")]
		public int Count
		{
			get
			{
				return this._Count;
			}
			set
			{
				if ((this._Count != value))
				{
					this.OnCountChanging(value);
					this.SendPropertyChanging();
					this._Count = value;
					this.SendPropertyChanged("Count");
					this.OnCountChanged();
				}
			}
		}
		
		[Column(Storage="_DaysSinceInitiallyDiscovered", DbType="SmallInt")]
		public System.Nullable<short> DaysSinceInitiallyDiscovered
		{
			get
			{
				return this._DaysSinceInitiallyDiscovered;
			}
			set
			{
				if ((this._DaysSinceInitiallyDiscovered != value))
				{
					this.OnDaysSinceInitiallyDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._DaysSinceInitiallyDiscovered = value;
					this.SendPropertyChanged("DaysSinceInitiallyDiscovered");
					this.OnDaysSinceInitiallyDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_DaysSinceLastDiscovered", DbType="SmallInt NOT NULL")]
		public short DaysSinceLastDiscovered
		{
			get
			{
				return this._DaysSinceLastDiscovered;
			}
			set
			{
				if ((this._DaysSinceLastDiscovered != value))
				{
					this.OnDaysSinceLastDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._DaysSinceLastDiscovered = value;
					this.SendPropertyChanged("DaysSinceLastDiscovered");
					this.OnDaysSinceLastDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_Strength", DbType="Float")]
		public System.Nullable<double> Strength
		{
			get
			{
				return this._Strength;
			}
			set
			{
				if ((this._Strength != value))
				{
					this.OnStrengthChanging(value);
					this.SendPropertyChanging();
					this._Strength = value;
					this.SendPropertyChanged("Strength");
					this.OnStrengthChanged();
				}
			}
		}
		
		[Column(Storage="_Rank", DbType="Int NOT NULL")]
		public int Rank
		{
			get
			{
				return this._Rank;
			}
			set
			{
				if ((this._Rank != value))
				{
					this.OnRankChanging(value);
					this.SendPropertyChanging();
					this._Rank = value;
					this.SendPropertyChanged("Rank");
					this.OnRankChanged();
				}
			}
		}
		
		[Column(Storage="_DenseRank", DbType="Int NOT NULL")]
		public int DenseRank
		{
			get
			{
				return this._DenseRank;
			}
			set
			{
				if ((this._DenseRank != value))
				{
					this.OnDenseRankChanging(value);
					this.SendPropertyChanging();
					this._DenseRank = value;
					this.SendPropertyChanged("DenseRank");
					this.OnDenseRankChanged();
				}
			}
		}
		
		[Column(Storage="_NTile", DbType="TinyInt NOT NULL")]
		public byte NTile
		{
			get
			{
				return this._NTile;
			}
			set
			{
				if ((this._NTile != value))
				{
					this.OnNTileChanging(value);
					this.SendPropertyChanging();
					this._NTile = value;
					this.SendPropertyChanged("NTile");
					this.OnNTileChanged();
				}
			}
		}
		
		[Association(Name="Extension_EmailAddresses_MOST_POPULAR_EXTENSIONS_BY_EXTENSION", Storage="_Extension", ThisKey="ExtensionID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Extension Extension
		{
			get
			{
				return this._Extension.Entity;
			}
			set
			{
				Extension previousValue = this._Extension.Entity;
				if (((previousValue != value) 
							|| (this._Extension.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Extension.Entity = null;
						previousValue.EmailAddresses_MOST_POPULAR_EXTENSIONS_BY_EXTENSION = null;
					}
					this._Extension.Entity = value;
					if ((value != null))
					{
						value.EmailAddresses_MOST_POPULAR_EXTENSIONS_BY_EXTENSION = this;
						this._ExtensionID = value.ID;
					}
					else
					{
						this._ExtensionID = default(int);
					}
					this.SendPropertyChanged("Extension");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="rpt.EmailAddresses_MOST_POPULAR_EXTENSIONS_BY_HOSTS")]
	public partial class EmailAddresses_MOST_POPULAR_EXTENSIONS_BY_HOST : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RowNumber;
		
		private System.Nullable<System.DateTime> _InitiallyDiscovered;
		
		private System.DateTime _LastDiscovered;
		
		private int _ExtensionID;
		
		private int _Count;
		
		private System.Nullable<short> _DaysSinceInitiallyDiscovered;
		
		private short _DaysSinceLastDiscovered;
		
		private System.Nullable<double> _Strength;
		
		private int _Rank;
		
		private int _DenseRank;
		
		private byte _NTile;
		
		private EntityRef<Extension> _Extension;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRowNumberChanging(int value);
    partial void OnRowNumberChanged();
    partial void OnInitiallyDiscoveredChanging(System.Nullable<System.DateTime> value);
    partial void OnInitiallyDiscoveredChanged();
    partial void OnLastDiscoveredChanging(System.DateTime value);
    partial void OnLastDiscoveredChanged();
    partial void OnExtensionIDChanging(int value);
    partial void OnExtensionIDChanged();
    partial void OnCountChanging(int value);
    partial void OnCountChanged();
    partial void OnDaysSinceInitiallyDiscoveredChanging(System.Nullable<short> value);
    partial void OnDaysSinceInitiallyDiscoveredChanged();
    partial void OnDaysSinceLastDiscoveredChanging(short value);
    partial void OnDaysSinceLastDiscoveredChanged();
    partial void OnStrengthChanging(System.Nullable<double> value);
    partial void OnStrengthChanged();
    partial void OnRankChanging(int value);
    partial void OnRankChanged();
    partial void OnDenseRankChanging(int value);
    partial void OnDenseRankChanged();
    partial void OnNTileChanging(byte value);
    partial void OnNTileChanged();
    #endregion
		
		public EmailAddresses_MOST_POPULAR_EXTENSIONS_BY_HOST()
		{
			this._Extension = default(EntityRef<Extension>);
			OnCreated();
		}
		
		[Column(Storage="_RowNumber", DbType="Int NOT NULL")]
		public int RowNumber
		{
			get
			{
				return this._RowNumber;
			}
			set
			{
				if ((this._RowNumber != value))
				{
					this.OnRowNumberChanging(value);
					this.SendPropertyChanging();
					this._RowNumber = value;
					this.SendPropertyChanged("RowNumber");
					this.OnRowNumberChanged();
				}
			}
		}
		
		[Column(Storage="_InitiallyDiscovered", DbType="DateTime")]
		public System.Nullable<System.DateTime> InitiallyDiscovered
		{
			get
			{
				return this._InitiallyDiscovered;
			}
			set
			{
				if ((this._InitiallyDiscovered != value))
				{
					this.OnInitiallyDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._InitiallyDiscovered = value;
					this.SendPropertyChanged("InitiallyDiscovered");
					this.OnInitiallyDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_LastDiscovered", DbType="DateTime NOT NULL")]
		public System.DateTime LastDiscovered
		{
			get
			{
				return this._LastDiscovered;
			}
			set
			{
				if ((this._LastDiscovered != value))
				{
					this.OnLastDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._LastDiscovered = value;
					this.SendPropertyChanged("LastDiscovered");
					this.OnLastDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_ExtensionID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ExtensionID
		{
			get
			{
				return this._ExtensionID;
			}
			set
			{
				if ((this._ExtensionID != value))
				{
					if (this._Extension.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnExtensionIDChanging(value);
					this.SendPropertyChanging();
					this._ExtensionID = value;
					this.SendPropertyChanged("ExtensionID");
					this.OnExtensionIDChanged();
				}
			}
		}
		
		[Column(Storage="_Count", DbType="Int NOT NULL")]
		public int Count
		{
			get
			{
				return this._Count;
			}
			set
			{
				if ((this._Count != value))
				{
					this.OnCountChanging(value);
					this.SendPropertyChanging();
					this._Count = value;
					this.SendPropertyChanged("Count");
					this.OnCountChanged();
				}
			}
		}
		
		[Column(Storage="_DaysSinceInitiallyDiscovered", DbType="SmallInt")]
		public System.Nullable<short> DaysSinceInitiallyDiscovered
		{
			get
			{
				return this._DaysSinceInitiallyDiscovered;
			}
			set
			{
				if ((this._DaysSinceInitiallyDiscovered != value))
				{
					this.OnDaysSinceInitiallyDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._DaysSinceInitiallyDiscovered = value;
					this.SendPropertyChanged("DaysSinceInitiallyDiscovered");
					this.OnDaysSinceInitiallyDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_DaysSinceLastDiscovered", DbType="SmallInt NOT NULL")]
		public short DaysSinceLastDiscovered
		{
			get
			{
				return this._DaysSinceLastDiscovered;
			}
			set
			{
				if ((this._DaysSinceLastDiscovered != value))
				{
					this.OnDaysSinceLastDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._DaysSinceLastDiscovered = value;
					this.SendPropertyChanged("DaysSinceLastDiscovered");
					this.OnDaysSinceLastDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_Strength", DbType="Float")]
		public System.Nullable<double> Strength
		{
			get
			{
				return this._Strength;
			}
			set
			{
				if ((this._Strength != value))
				{
					this.OnStrengthChanging(value);
					this.SendPropertyChanging();
					this._Strength = value;
					this.SendPropertyChanged("Strength");
					this.OnStrengthChanged();
				}
			}
		}
		
		[Column(Storage="_Rank", DbType="Int NOT NULL")]
		public int Rank
		{
			get
			{
				return this._Rank;
			}
			set
			{
				if ((this._Rank != value))
				{
					this.OnRankChanging(value);
					this.SendPropertyChanging();
					this._Rank = value;
					this.SendPropertyChanged("Rank");
					this.OnRankChanged();
				}
			}
		}
		
		[Column(Storage="_DenseRank", DbType="Int NOT NULL")]
		public int DenseRank
		{
			get
			{
				return this._DenseRank;
			}
			set
			{
				if ((this._DenseRank != value))
				{
					this.OnDenseRankChanging(value);
					this.SendPropertyChanging();
					this._DenseRank = value;
					this.SendPropertyChanged("DenseRank");
					this.OnDenseRankChanged();
				}
			}
		}
		
		[Column(Storage="_NTile", DbType="TinyInt NOT NULL")]
		public byte NTile
		{
			get
			{
				return this._NTile;
			}
			set
			{
				if ((this._NTile != value))
				{
					this.OnNTileChanging(value);
					this.SendPropertyChanging();
					this._NTile = value;
					this.SendPropertyChanged("NTile");
					this.OnNTileChanged();
				}
			}
		}
		
		[Association(Name="Extension_EmailAddresses_MOST_POPULAR_EXTENSIONS_BY_HOST", Storage="_Extension", ThisKey="ExtensionID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Extension Extension
		{
			get
			{
				return this._Extension.Entity;
			}
			set
			{
				Extension previousValue = this._Extension.Entity;
				if (((previousValue != value) 
							|| (this._Extension.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Extension.Entity = null;
						previousValue.EmailAddresses_MOST_POPULAR_EXTENSIONS_BY_HOST = null;
					}
					this._Extension.Entity = value;
					if ((value != null))
					{
						value.EmailAddresses_MOST_POPULAR_EXTENSIONS_BY_HOST = this;
						this._ExtensionID = value.ID;
					}
					else
					{
						this._ExtensionID = default(int);
					}
					this.SendPropertyChanged("Extension");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="rpt.EmailAddresses_MOST_POPULAR_EXTENSIONS_BY_SCHEMES")]
	public partial class EmailAddresses_MOST_POPULAR_EXTENSIONS_BY_SCHEME : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RowNumber;
		
		private System.Nullable<System.DateTime> _InitiallyDiscovered;
		
		private System.DateTime _LastDiscovered;
		
		private int _ExtensionID;
		
		private int _Count;
		
		private System.Nullable<short> _DaysSinceInitiallyDiscovered;
		
		private short _DaysSinceLastDiscovered;
		
		private System.Nullable<double> _Strength;
		
		private int _Rank;
		
		private int _DenseRank;
		
		private byte _NTile;
		
		private EntityRef<Extension> _Extension;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRowNumberChanging(int value);
    partial void OnRowNumberChanged();
    partial void OnInitiallyDiscoveredChanging(System.Nullable<System.DateTime> value);
    partial void OnInitiallyDiscoveredChanged();
    partial void OnLastDiscoveredChanging(System.DateTime value);
    partial void OnLastDiscoveredChanged();
    partial void OnExtensionIDChanging(int value);
    partial void OnExtensionIDChanged();
    partial void OnCountChanging(int value);
    partial void OnCountChanged();
    partial void OnDaysSinceInitiallyDiscoveredChanging(System.Nullable<short> value);
    partial void OnDaysSinceInitiallyDiscoveredChanged();
    partial void OnDaysSinceLastDiscoveredChanging(short value);
    partial void OnDaysSinceLastDiscoveredChanged();
    partial void OnStrengthChanging(System.Nullable<double> value);
    partial void OnStrengthChanged();
    partial void OnRankChanging(int value);
    partial void OnRankChanged();
    partial void OnDenseRankChanging(int value);
    partial void OnDenseRankChanged();
    partial void OnNTileChanging(byte value);
    partial void OnNTileChanged();
    #endregion
		
		public EmailAddresses_MOST_POPULAR_EXTENSIONS_BY_SCHEME()
		{
			this._Extension = default(EntityRef<Extension>);
			OnCreated();
		}
		
		[Column(Storage="_RowNumber", DbType="Int NOT NULL")]
		public int RowNumber
		{
			get
			{
				return this._RowNumber;
			}
			set
			{
				if ((this._RowNumber != value))
				{
					this.OnRowNumberChanging(value);
					this.SendPropertyChanging();
					this._RowNumber = value;
					this.SendPropertyChanged("RowNumber");
					this.OnRowNumberChanged();
				}
			}
		}
		
		[Column(Storage="_InitiallyDiscovered", DbType="DateTime")]
		public System.Nullable<System.DateTime> InitiallyDiscovered
		{
			get
			{
				return this._InitiallyDiscovered;
			}
			set
			{
				if ((this._InitiallyDiscovered != value))
				{
					this.OnInitiallyDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._InitiallyDiscovered = value;
					this.SendPropertyChanged("InitiallyDiscovered");
					this.OnInitiallyDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_LastDiscovered", DbType="DateTime NOT NULL")]
		public System.DateTime LastDiscovered
		{
			get
			{
				return this._LastDiscovered;
			}
			set
			{
				if ((this._LastDiscovered != value))
				{
					this.OnLastDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._LastDiscovered = value;
					this.SendPropertyChanged("LastDiscovered");
					this.OnLastDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_ExtensionID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ExtensionID
		{
			get
			{
				return this._ExtensionID;
			}
			set
			{
				if ((this._ExtensionID != value))
				{
					if (this._Extension.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnExtensionIDChanging(value);
					this.SendPropertyChanging();
					this._ExtensionID = value;
					this.SendPropertyChanged("ExtensionID");
					this.OnExtensionIDChanged();
				}
			}
		}
		
		[Column(Storage="_Count", DbType="Int NOT NULL")]
		public int Count
		{
			get
			{
				return this._Count;
			}
			set
			{
				if ((this._Count != value))
				{
					this.OnCountChanging(value);
					this.SendPropertyChanging();
					this._Count = value;
					this.SendPropertyChanged("Count");
					this.OnCountChanged();
				}
			}
		}
		
		[Column(Storage="_DaysSinceInitiallyDiscovered", DbType="SmallInt")]
		public System.Nullable<short> DaysSinceInitiallyDiscovered
		{
			get
			{
				return this._DaysSinceInitiallyDiscovered;
			}
			set
			{
				if ((this._DaysSinceInitiallyDiscovered != value))
				{
					this.OnDaysSinceInitiallyDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._DaysSinceInitiallyDiscovered = value;
					this.SendPropertyChanged("DaysSinceInitiallyDiscovered");
					this.OnDaysSinceInitiallyDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_DaysSinceLastDiscovered", DbType="SmallInt NOT NULL")]
		public short DaysSinceLastDiscovered
		{
			get
			{
				return this._DaysSinceLastDiscovered;
			}
			set
			{
				if ((this._DaysSinceLastDiscovered != value))
				{
					this.OnDaysSinceLastDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._DaysSinceLastDiscovered = value;
					this.SendPropertyChanged("DaysSinceLastDiscovered");
					this.OnDaysSinceLastDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_Strength", DbType="Float")]
		public System.Nullable<double> Strength
		{
			get
			{
				return this._Strength;
			}
			set
			{
				if ((this._Strength != value))
				{
					this.OnStrengthChanging(value);
					this.SendPropertyChanging();
					this._Strength = value;
					this.SendPropertyChanged("Strength");
					this.OnStrengthChanged();
				}
			}
		}
		
		[Column(Storage="_Rank", DbType="Int NOT NULL")]
		public int Rank
		{
			get
			{
				return this._Rank;
			}
			set
			{
				if ((this._Rank != value))
				{
					this.OnRankChanging(value);
					this.SendPropertyChanging();
					this._Rank = value;
					this.SendPropertyChanged("Rank");
					this.OnRankChanged();
				}
			}
		}
		
		[Column(Storage="_DenseRank", DbType="Int NOT NULL")]
		public int DenseRank
		{
			get
			{
				return this._DenseRank;
			}
			set
			{
				if ((this._DenseRank != value))
				{
					this.OnDenseRankChanging(value);
					this.SendPropertyChanging();
					this._DenseRank = value;
					this.SendPropertyChanged("DenseRank");
					this.OnDenseRankChanged();
				}
			}
		}
		
		[Column(Storage="_NTile", DbType="TinyInt NOT NULL")]
		public byte NTile
		{
			get
			{
				return this._NTile;
			}
			set
			{
				if ((this._NTile != value))
				{
					this.OnNTileChanging(value);
					this.SendPropertyChanging();
					this._NTile = value;
					this.SendPropertyChanged("NTile");
					this.OnNTileChanged();
				}
			}
		}
		
		[Association(Name="Extension_EmailAddresses_MOST_POPULAR_EXTENSIONS_BY_SCHEME", Storage="_Extension", ThisKey="ExtensionID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Extension Extension
		{
			get
			{
				return this._Extension.Entity;
			}
			set
			{
				Extension previousValue = this._Extension.Entity;
				if (((previousValue != value) 
							|| (this._Extension.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Extension.Entity = null;
						previousValue.EmailAddresses_MOST_POPULAR_EXTENSIONS_BY_SCHEME = null;
					}
					this._Extension.Entity = value;
					if ((value != null))
					{
						value.EmailAddresses_MOST_POPULAR_EXTENSIONS_BY_SCHEME = this;
						this._ExtensionID = value.ID;
					}
					else
					{
						this._ExtensionID = default(int);
					}
					this.SendPropertyChanged("Extension");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="rpt.EmailAddresses_MOST_POPULAR_HOSTS_BY_ABSOLUTEURIS")]
	public partial class EmailAddresses_MOST_POPULAR_HOSTS_BY_ABSOLUTEURI : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RowNumber;
		
		private System.Nullable<System.DateTime> _InitiallyDiscovered;
		
		private System.DateTime _LastDiscovered;
		
		private int _HostID;
		
		private int _Count;
		
		private System.Nullable<short> _DaysSinceInitiallyDiscovered;
		
		private short _DaysSinceLastDiscovered;
		
		private System.Nullable<double> _Strength;
		
		private int _Rank;
		
		private int _DenseRank;
		
		private byte _NTile;
		
		private EntityRef<Host> _Host;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRowNumberChanging(int value);
    partial void OnRowNumberChanged();
    partial void OnInitiallyDiscoveredChanging(System.Nullable<System.DateTime> value);
    partial void OnInitiallyDiscoveredChanged();
    partial void OnLastDiscoveredChanging(System.DateTime value);
    partial void OnLastDiscoveredChanged();
    partial void OnHostIDChanging(int value);
    partial void OnHostIDChanged();
    partial void OnCountChanging(int value);
    partial void OnCountChanged();
    partial void OnDaysSinceInitiallyDiscoveredChanging(System.Nullable<short> value);
    partial void OnDaysSinceInitiallyDiscoveredChanged();
    partial void OnDaysSinceLastDiscoveredChanging(short value);
    partial void OnDaysSinceLastDiscoveredChanged();
    partial void OnStrengthChanging(System.Nullable<double> value);
    partial void OnStrengthChanged();
    partial void OnRankChanging(int value);
    partial void OnRankChanged();
    partial void OnDenseRankChanging(int value);
    partial void OnDenseRankChanged();
    partial void OnNTileChanging(byte value);
    partial void OnNTileChanged();
    #endregion
		
		public EmailAddresses_MOST_POPULAR_HOSTS_BY_ABSOLUTEURI()
		{
			this._Host = default(EntityRef<Host>);
			OnCreated();
		}
		
		[Column(Storage="_RowNumber", DbType="Int NOT NULL")]
		public int RowNumber
		{
			get
			{
				return this._RowNumber;
			}
			set
			{
				if ((this._RowNumber != value))
				{
					this.OnRowNumberChanging(value);
					this.SendPropertyChanging();
					this._RowNumber = value;
					this.SendPropertyChanged("RowNumber");
					this.OnRowNumberChanged();
				}
			}
		}
		
		[Column(Storage="_InitiallyDiscovered", DbType="DateTime")]
		public System.Nullable<System.DateTime> InitiallyDiscovered
		{
			get
			{
				return this._InitiallyDiscovered;
			}
			set
			{
				if ((this._InitiallyDiscovered != value))
				{
					this.OnInitiallyDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._InitiallyDiscovered = value;
					this.SendPropertyChanged("InitiallyDiscovered");
					this.OnInitiallyDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_LastDiscovered", DbType="DateTime NOT NULL")]
		public System.DateTime LastDiscovered
		{
			get
			{
				return this._LastDiscovered;
			}
			set
			{
				if ((this._LastDiscovered != value))
				{
					this.OnLastDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._LastDiscovered = value;
					this.SendPropertyChanged("LastDiscovered");
					this.OnLastDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_HostID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int HostID
		{
			get
			{
				return this._HostID;
			}
			set
			{
				if ((this._HostID != value))
				{
					if (this._Host.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnHostIDChanging(value);
					this.SendPropertyChanging();
					this._HostID = value;
					this.SendPropertyChanged("HostID");
					this.OnHostIDChanged();
				}
			}
		}
		
		[Column(Storage="_Count", DbType="Int NOT NULL")]
		public int Count
		{
			get
			{
				return this._Count;
			}
			set
			{
				if ((this._Count != value))
				{
					this.OnCountChanging(value);
					this.SendPropertyChanging();
					this._Count = value;
					this.SendPropertyChanged("Count");
					this.OnCountChanged();
				}
			}
		}
		
		[Column(Storage="_DaysSinceInitiallyDiscovered", DbType="SmallInt")]
		public System.Nullable<short> DaysSinceInitiallyDiscovered
		{
			get
			{
				return this._DaysSinceInitiallyDiscovered;
			}
			set
			{
				if ((this._DaysSinceInitiallyDiscovered != value))
				{
					this.OnDaysSinceInitiallyDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._DaysSinceInitiallyDiscovered = value;
					this.SendPropertyChanged("DaysSinceInitiallyDiscovered");
					this.OnDaysSinceInitiallyDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_DaysSinceLastDiscovered", DbType="SmallInt NOT NULL")]
		public short DaysSinceLastDiscovered
		{
			get
			{
				return this._DaysSinceLastDiscovered;
			}
			set
			{
				if ((this._DaysSinceLastDiscovered != value))
				{
					this.OnDaysSinceLastDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._DaysSinceLastDiscovered = value;
					this.SendPropertyChanged("DaysSinceLastDiscovered");
					this.OnDaysSinceLastDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_Strength", DbType="Float")]
		public System.Nullable<double> Strength
		{
			get
			{
				return this._Strength;
			}
			set
			{
				if ((this._Strength != value))
				{
					this.OnStrengthChanging(value);
					this.SendPropertyChanging();
					this._Strength = value;
					this.SendPropertyChanged("Strength");
					this.OnStrengthChanged();
				}
			}
		}
		
		[Column(Storage="_Rank", DbType="Int NOT NULL")]
		public int Rank
		{
			get
			{
				return this._Rank;
			}
			set
			{
				if ((this._Rank != value))
				{
					this.OnRankChanging(value);
					this.SendPropertyChanging();
					this._Rank = value;
					this.SendPropertyChanged("Rank");
					this.OnRankChanged();
				}
			}
		}
		
		[Column(Storage="_DenseRank", DbType="Int NOT NULL")]
		public int DenseRank
		{
			get
			{
				return this._DenseRank;
			}
			set
			{
				if ((this._DenseRank != value))
				{
					this.OnDenseRankChanging(value);
					this.SendPropertyChanging();
					this._DenseRank = value;
					this.SendPropertyChanged("DenseRank");
					this.OnDenseRankChanged();
				}
			}
		}
		
		[Column(Storage="_NTile", DbType="TinyInt NOT NULL")]
		public byte NTile
		{
			get
			{
				return this._NTile;
			}
			set
			{
				if ((this._NTile != value))
				{
					this.OnNTileChanging(value);
					this.SendPropertyChanging();
					this._NTile = value;
					this.SendPropertyChanged("NTile");
					this.OnNTileChanged();
				}
			}
		}
		
		[Association(Name="Host_EmailAddresses_MOST_POPULAR_HOSTS_BY_ABSOLUTEURI", Storage="_Host", ThisKey="HostID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Host Host
		{
			get
			{
				return this._Host.Entity;
			}
			set
			{
				Host previousValue = this._Host.Entity;
				if (((previousValue != value) 
							|| (this._Host.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Host.Entity = null;
						previousValue.EmailAddresses_MOST_POPULAR_HOSTS_BY_ABSOLUTEURI = null;
					}
					this._Host.Entity = value;
					if ((value != null))
					{
						value.EmailAddresses_MOST_POPULAR_HOSTS_BY_ABSOLUTEURI = this;
						this._HostID = value.ID;
					}
					else
					{
						this._HostID = default(int);
					}
					this.SendPropertyChanged("Host");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="rpt.EmailAddresses_MOST_POPULAR_HOSTS_BY_DOMAINS")]
	public partial class EmailAddresses_MOST_POPULAR_HOSTS_BY_DOMAIN : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RowNumber;
		
		private System.Nullable<System.DateTime> _InitiallyDiscovered;
		
		private System.DateTime _LastDiscovered;
		
		private int _HostID;
		
		private int _Count;
		
		private System.Nullable<short> _DaysSinceInitiallyDiscovered;
		
		private short _DaysSinceLastDiscovered;
		
		private System.Nullable<double> _Strength;
		
		private int _Rank;
		
		private int _DenseRank;
		
		private byte _NTile;
		
		private EntityRef<Host> _Host;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRowNumberChanging(int value);
    partial void OnRowNumberChanged();
    partial void OnInitiallyDiscoveredChanging(System.Nullable<System.DateTime> value);
    partial void OnInitiallyDiscoveredChanged();
    partial void OnLastDiscoveredChanging(System.DateTime value);
    partial void OnLastDiscoveredChanged();
    partial void OnHostIDChanging(int value);
    partial void OnHostIDChanged();
    partial void OnCountChanging(int value);
    partial void OnCountChanged();
    partial void OnDaysSinceInitiallyDiscoveredChanging(System.Nullable<short> value);
    partial void OnDaysSinceInitiallyDiscoveredChanged();
    partial void OnDaysSinceLastDiscoveredChanging(short value);
    partial void OnDaysSinceLastDiscoveredChanged();
    partial void OnStrengthChanging(System.Nullable<double> value);
    partial void OnStrengthChanged();
    partial void OnRankChanging(int value);
    partial void OnRankChanged();
    partial void OnDenseRankChanging(int value);
    partial void OnDenseRankChanged();
    partial void OnNTileChanging(byte value);
    partial void OnNTileChanged();
    #endregion
		
		public EmailAddresses_MOST_POPULAR_HOSTS_BY_DOMAIN()
		{
			this._Host = default(EntityRef<Host>);
			OnCreated();
		}
		
		[Column(Storage="_RowNumber", DbType="Int NOT NULL")]
		public int RowNumber
		{
			get
			{
				return this._RowNumber;
			}
			set
			{
				if ((this._RowNumber != value))
				{
					this.OnRowNumberChanging(value);
					this.SendPropertyChanging();
					this._RowNumber = value;
					this.SendPropertyChanged("RowNumber");
					this.OnRowNumberChanged();
				}
			}
		}
		
		[Column(Storage="_InitiallyDiscovered", DbType="DateTime")]
		public System.Nullable<System.DateTime> InitiallyDiscovered
		{
			get
			{
				return this._InitiallyDiscovered;
			}
			set
			{
				if ((this._InitiallyDiscovered != value))
				{
					this.OnInitiallyDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._InitiallyDiscovered = value;
					this.SendPropertyChanged("InitiallyDiscovered");
					this.OnInitiallyDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_LastDiscovered", DbType="DateTime NOT NULL")]
		public System.DateTime LastDiscovered
		{
			get
			{
				return this._LastDiscovered;
			}
			set
			{
				if ((this._LastDiscovered != value))
				{
					this.OnLastDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._LastDiscovered = value;
					this.SendPropertyChanged("LastDiscovered");
					this.OnLastDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_HostID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int HostID
		{
			get
			{
				return this._HostID;
			}
			set
			{
				if ((this._HostID != value))
				{
					if (this._Host.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnHostIDChanging(value);
					this.SendPropertyChanging();
					this._HostID = value;
					this.SendPropertyChanged("HostID");
					this.OnHostIDChanged();
				}
			}
		}
		
		[Column(Storage="_Count", DbType="Int NOT NULL")]
		public int Count
		{
			get
			{
				return this._Count;
			}
			set
			{
				if ((this._Count != value))
				{
					this.OnCountChanging(value);
					this.SendPropertyChanging();
					this._Count = value;
					this.SendPropertyChanged("Count");
					this.OnCountChanged();
				}
			}
		}
		
		[Column(Storage="_DaysSinceInitiallyDiscovered", DbType="SmallInt")]
		public System.Nullable<short> DaysSinceInitiallyDiscovered
		{
			get
			{
				return this._DaysSinceInitiallyDiscovered;
			}
			set
			{
				if ((this._DaysSinceInitiallyDiscovered != value))
				{
					this.OnDaysSinceInitiallyDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._DaysSinceInitiallyDiscovered = value;
					this.SendPropertyChanged("DaysSinceInitiallyDiscovered");
					this.OnDaysSinceInitiallyDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_DaysSinceLastDiscovered", DbType="SmallInt NOT NULL")]
		public short DaysSinceLastDiscovered
		{
			get
			{
				return this._DaysSinceLastDiscovered;
			}
			set
			{
				if ((this._DaysSinceLastDiscovered != value))
				{
					this.OnDaysSinceLastDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._DaysSinceLastDiscovered = value;
					this.SendPropertyChanged("DaysSinceLastDiscovered");
					this.OnDaysSinceLastDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_Strength", DbType="Float")]
		public System.Nullable<double> Strength
		{
			get
			{
				return this._Strength;
			}
			set
			{
				if ((this._Strength != value))
				{
					this.OnStrengthChanging(value);
					this.SendPropertyChanging();
					this._Strength = value;
					this.SendPropertyChanged("Strength");
					this.OnStrengthChanged();
				}
			}
		}
		
		[Column(Storage="_Rank", DbType="Int NOT NULL")]
		public int Rank
		{
			get
			{
				return this._Rank;
			}
			set
			{
				if ((this._Rank != value))
				{
					this.OnRankChanging(value);
					this.SendPropertyChanging();
					this._Rank = value;
					this.SendPropertyChanged("Rank");
					this.OnRankChanged();
				}
			}
		}
		
		[Column(Storage="_DenseRank", DbType="Int NOT NULL")]
		public int DenseRank
		{
			get
			{
				return this._DenseRank;
			}
			set
			{
				if ((this._DenseRank != value))
				{
					this.OnDenseRankChanging(value);
					this.SendPropertyChanging();
					this._DenseRank = value;
					this.SendPropertyChanged("DenseRank");
					this.OnDenseRankChanged();
				}
			}
		}
		
		[Column(Storage="_NTile", DbType="TinyInt NOT NULL")]
		public byte NTile
		{
			get
			{
				return this._NTile;
			}
			set
			{
				if ((this._NTile != value))
				{
					this.OnNTileChanging(value);
					this.SendPropertyChanging();
					this._NTile = value;
					this.SendPropertyChanged("NTile");
					this.OnNTileChanged();
				}
			}
		}
		
		[Association(Name="Host_EmailAddresses_MOST_POPULAR_HOSTS_BY_DOMAIN", Storage="_Host", ThisKey="HostID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Host Host
		{
			get
			{
				return this._Host.Entity;
			}
			set
			{
				Host previousValue = this._Host.Entity;
				if (((previousValue != value) 
							|| (this._Host.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Host.Entity = null;
						previousValue.EmailAddresses_MOST_POPULAR_HOSTS_BY_DOMAIN = null;
					}
					this._Host.Entity = value;
					if ((value != null))
					{
						value.EmailAddresses_MOST_POPULAR_HOSTS_BY_DOMAIN = this;
						this._HostID = value.ID;
					}
					else
					{
						this._HostID = default(int);
					}
					this.SendPropertyChanged("Host");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="rpt.EmailAddresses_MOST_POPULAR_HOSTS_BY_EXTENSIONS")]
	public partial class EmailAddresses_MOST_POPULAR_HOSTS_BY_EXTENSION : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RowNumber;
		
		private System.Nullable<System.DateTime> _InitiallyDiscovered;
		
		private System.DateTime _LastDiscovered;
		
		private int _HostID;
		
		private int _Count;
		
		private System.Nullable<short> _DaysSinceInitiallyDiscovered;
		
		private short _DaysSinceLastDiscovered;
		
		private System.Nullable<double> _Strength;
		
		private int _Rank;
		
		private int _DenseRank;
		
		private byte _NTile;
		
		private EntityRef<Host> _Host;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRowNumberChanging(int value);
    partial void OnRowNumberChanged();
    partial void OnInitiallyDiscoveredChanging(System.Nullable<System.DateTime> value);
    partial void OnInitiallyDiscoveredChanged();
    partial void OnLastDiscoveredChanging(System.DateTime value);
    partial void OnLastDiscoveredChanged();
    partial void OnHostIDChanging(int value);
    partial void OnHostIDChanged();
    partial void OnCountChanging(int value);
    partial void OnCountChanged();
    partial void OnDaysSinceInitiallyDiscoveredChanging(System.Nullable<short> value);
    partial void OnDaysSinceInitiallyDiscoveredChanged();
    partial void OnDaysSinceLastDiscoveredChanging(short value);
    partial void OnDaysSinceLastDiscoveredChanged();
    partial void OnStrengthChanging(System.Nullable<double> value);
    partial void OnStrengthChanged();
    partial void OnRankChanging(int value);
    partial void OnRankChanged();
    partial void OnDenseRankChanging(int value);
    partial void OnDenseRankChanged();
    partial void OnNTileChanging(byte value);
    partial void OnNTileChanged();
    #endregion
		
		public EmailAddresses_MOST_POPULAR_HOSTS_BY_EXTENSION()
		{
			this._Host = default(EntityRef<Host>);
			OnCreated();
		}
		
		[Column(Storage="_RowNumber", DbType="Int NOT NULL")]
		public int RowNumber
		{
			get
			{
				return this._RowNumber;
			}
			set
			{
				if ((this._RowNumber != value))
				{
					this.OnRowNumberChanging(value);
					this.SendPropertyChanging();
					this._RowNumber = value;
					this.SendPropertyChanged("RowNumber");
					this.OnRowNumberChanged();
				}
			}
		}
		
		[Column(Storage="_InitiallyDiscovered", DbType="DateTime")]
		public System.Nullable<System.DateTime> InitiallyDiscovered
		{
			get
			{
				return this._InitiallyDiscovered;
			}
			set
			{
				if ((this._InitiallyDiscovered != value))
				{
					this.OnInitiallyDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._InitiallyDiscovered = value;
					this.SendPropertyChanged("InitiallyDiscovered");
					this.OnInitiallyDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_LastDiscovered", DbType="DateTime NOT NULL")]
		public System.DateTime LastDiscovered
		{
			get
			{
				return this._LastDiscovered;
			}
			set
			{
				if ((this._LastDiscovered != value))
				{
					this.OnLastDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._LastDiscovered = value;
					this.SendPropertyChanged("LastDiscovered");
					this.OnLastDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_HostID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int HostID
		{
			get
			{
				return this._HostID;
			}
			set
			{
				if ((this._HostID != value))
				{
					if (this._Host.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnHostIDChanging(value);
					this.SendPropertyChanging();
					this._HostID = value;
					this.SendPropertyChanged("HostID");
					this.OnHostIDChanged();
				}
			}
		}
		
		[Column(Storage="_Count", DbType="Int NOT NULL")]
		public int Count
		{
			get
			{
				return this._Count;
			}
			set
			{
				if ((this._Count != value))
				{
					this.OnCountChanging(value);
					this.SendPropertyChanging();
					this._Count = value;
					this.SendPropertyChanged("Count");
					this.OnCountChanged();
				}
			}
		}
		
		[Column(Storage="_DaysSinceInitiallyDiscovered", DbType="SmallInt")]
		public System.Nullable<short> DaysSinceInitiallyDiscovered
		{
			get
			{
				return this._DaysSinceInitiallyDiscovered;
			}
			set
			{
				if ((this._DaysSinceInitiallyDiscovered != value))
				{
					this.OnDaysSinceInitiallyDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._DaysSinceInitiallyDiscovered = value;
					this.SendPropertyChanged("DaysSinceInitiallyDiscovered");
					this.OnDaysSinceInitiallyDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_DaysSinceLastDiscovered", DbType="SmallInt NOT NULL")]
		public short DaysSinceLastDiscovered
		{
			get
			{
				return this._DaysSinceLastDiscovered;
			}
			set
			{
				if ((this._DaysSinceLastDiscovered != value))
				{
					this.OnDaysSinceLastDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._DaysSinceLastDiscovered = value;
					this.SendPropertyChanged("DaysSinceLastDiscovered");
					this.OnDaysSinceLastDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_Strength", DbType="Float")]
		public System.Nullable<double> Strength
		{
			get
			{
				return this._Strength;
			}
			set
			{
				if ((this._Strength != value))
				{
					this.OnStrengthChanging(value);
					this.SendPropertyChanging();
					this._Strength = value;
					this.SendPropertyChanged("Strength");
					this.OnStrengthChanged();
				}
			}
		}
		
		[Column(Storage="_Rank", DbType="Int NOT NULL")]
		public int Rank
		{
			get
			{
				return this._Rank;
			}
			set
			{
				if ((this._Rank != value))
				{
					this.OnRankChanging(value);
					this.SendPropertyChanging();
					this._Rank = value;
					this.SendPropertyChanged("Rank");
					this.OnRankChanged();
				}
			}
		}
		
		[Column(Storage="_DenseRank", DbType="Int NOT NULL")]
		public int DenseRank
		{
			get
			{
				return this._DenseRank;
			}
			set
			{
				if ((this._DenseRank != value))
				{
					this.OnDenseRankChanging(value);
					this.SendPropertyChanging();
					this._DenseRank = value;
					this.SendPropertyChanged("DenseRank");
					this.OnDenseRankChanged();
				}
			}
		}
		
		[Column(Storage="_NTile", DbType="TinyInt NOT NULL")]
		public byte NTile
		{
			get
			{
				return this._NTile;
			}
			set
			{
				if ((this._NTile != value))
				{
					this.OnNTileChanging(value);
					this.SendPropertyChanging();
					this._NTile = value;
					this.SendPropertyChanged("NTile");
					this.OnNTileChanged();
				}
			}
		}
		
		[Association(Name="Host_EmailAddresses_MOST_POPULAR_HOSTS_BY_EXTENSION", Storage="_Host", ThisKey="HostID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Host Host
		{
			get
			{
				return this._Host.Entity;
			}
			set
			{
				Host previousValue = this._Host.Entity;
				if (((previousValue != value) 
							|| (this._Host.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Host.Entity = null;
						previousValue.EmailAddresses_MOST_POPULAR_HOSTS_BY_EXTENSION = null;
					}
					this._Host.Entity = value;
					if ((value != null))
					{
						value.EmailAddresses_MOST_POPULAR_HOSTS_BY_EXTENSION = this;
						this._HostID = value.ID;
					}
					else
					{
						this._HostID = default(int);
					}
					this.SendPropertyChanged("Host");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="rpt.EmailAddresses_MOST_POPULAR_HOSTS_BY_HOSTS")]
	public partial class EmailAddresses_MOST_POPULAR_HOSTS_BY_HOST : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RowNumber;
		
		private System.Nullable<System.DateTime> _InitiallyDiscovered;
		
		private System.DateTime _LastDiscovered;
		
		private int _HostID;
		
		private int _Count;
		
		private System.Nullable<short> _DaysSinceInitiallyDiscovered;
		
		private short _DaysSinceLastDiscovered;
		
		private System.Nullable<double> _Strength;
		
		private int _Rank;
		
		private int _DenseRank;
		
		private byte _NTile;
		
		private EntityRef<Host> _Host;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRowNumberChanging(int value);
    partial void OnRowNumberChanged();
    partial void OnInitiallyDiscoveredChanging(System.Nullable<System.DateTime> value);
    partial void OnInitiallyDiscoveredChanged();
    partial void OnLastDiscoveredChanging(System.DateTime value);
    partial void OnLastDiscoveredChanged();
    partial void OnHostIDChanging(int value);
    partial void OnHostIDChanged();
    partial void OnCountChanging(int value);
    partial void OnCountChanged();
    partial void OnDaysSinceInitiallyDiscoveredChanging(System.Nullable<short> value);
    partial void OnDaysSinceInitiallyDiscoveredChanged();
    partial void OnDaysSinceLastDiscoveredChanging(short value);
    partial void OnDaysSinceLastDiscoveredChanged();
    partial void OnStrengthChanging(System.Nullable<double> value);
    partial void OnStrengthChanged();
    partial void OnRankChanging(int value);
    partial void OnRankChanged();
    partial void OnDenseRankChanging(int value);
    partial void OnDenseRankChanged();
    partial void OnNTileChanging(byte value);
    partial void OnNTileChanged();
    #endregion
		
		public EmailAddresses_MOST_POPULAR_HOSTS_BY_HOST()
		{
			this._Host = default(EntityRef<Host>);
			OnCreated();
		}
		
		[Column(Storage="_RowNumber", DbType="Int NOT NULL")]
		public int RowNumber
		{
			get
			{
				return this._RowNumber;
			}
			set
			{
				if ((this._RowNumber != value))
				{
					this.OnRowNumberChanging(value);
					this.SendPropertyChanging();
					this._RowNumber = value;
					this.SendPropertyChanged("RowNumber");
					this.OnRowNumberChanged();
				}
			}
		}
		
		[Column(Storage="_InitiallyDiscovered", DbType="DateTime")]
		public System.Nullable<System.DateTime> InitiallyDiscovered
		{
			get
			{
				return this._InitiallyDiscovered;
			}
			set
			{
				if ((this._InitiallyDiscovered != value))
				{
					this.OnInitiallyDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._InitiallyDiscovered = value;
					this.SendPropertyChanged("InitiallyDiscovered");
					this.OnInitiallyDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_LastDiscovered", DbType="DateTime NOT NULL")]
		public System.DateTime LastDiscovered
		{
			get
			{
				return this._LastDiscovered;
			}
			set
			{
				if ((this._LastDiscovered != value))
				{
					this.OnLastDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._LastDiscovered = value;
					this.SendPropertyChanged("LastDiscovered");
					this.OnLastDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_HostID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int HostID
		{
			get
			{
				return this._HostID;
			}
			set
			{
				if ((this._HostID != value))
				{
					if (this._Host.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnHostIDChanging(value);
					this.SendPropertyChanging();
					this._HostID = value;
					this.SendPropertyChanged("HostID");
					this.OnHostIDChanged();
				}
			}
		}
		
		[Column(Storage="_Count", DbType="Int NOT NULL")]
		public int Count
		{
			get
			{
				return this._Count;
			}
			set
			{
				if ((this._Count != value))
				{
					this.OnCountChanging(value);
					this.SendPropertyChanging();
					this._Count = value;
					this.SendPropertyChanged("Count");
					this.OnCountChanged();
				}
			}
		}
		
		[Column(Storage="_DaysSinceInitiallyDiscovered", DbType="SmallInt")]
		public System.Nullable<short> DaysSinceInitiallyDiscovered
		{
			get
			{
				return this._DaysSinceInitiallyDiscovered;
			}
			set
			{
				if ((this._DaysSinceInitiallyDiscovered != value))
				{
					this.OnDaysSinceInitiallyDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._DaysSinceInitiallyDiscovered = value;
					this.SendPropertyChanged("DaysSinceInitiallyDiscovered");
					this.OnDaysSinceInitiallyDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_DaysSinceLastDiscovered", DbType="SmallInt NOT NULL")]
		public short DaysSinceLastDiscovered
		{
			get
			{
				return this._DaysSinceLastDiscovered;
			}
			set
			{
				if ((this._DaysSinceLastDiscovered != value))
				{
					this.OnDaysSinceLastDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._DaysSinceLastDiscovered = value;
					this.SendPropertyChanged("DaysSinceLastDiscovered");
					this.OnDaysSinceLastDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_Strength", DbType="Float")]
		public System.Nullable<double> Strength
		{
			get
			{
				return this._Strength;
			}
			set
			{
				if ((this._Strength != value))
				{
					this.OnStrengthChanging(value);
					this.SendPropertyChanging();
					this._Strength = value;
					this.SendPropertyChanged("Strength");
					this.OnStrengthChanged();
				}
			}
		}
		
		[Column(Storage="_Rank", DbType="Int NOT NULL")]
		public int Rank
		{
			get
			{
				return this._Rank;
			}
			set
			{
				if ((this._Rank != value))
				{
					this.OnRankChanging(value);
					this.SendPropertyChanging();
					this._Rank = value;
					this.SendPropertyChanged("Rank");
					this.OnRankChanged();
				}
			}
		}
		
		[Column(Storage="_DenseRank", DbType="Int NOT NULL")]
		public int DenseRank
		{
			get
			{
				return this._DenseRank;
			}
			set
			{
				if ((this._DenseRank != value))
				{
					this.OnDenseRankChanging(value);
					this.SendPropertyChanging();
					this._DenseRank = value;
					this.SendPropertyChanged("DenseRank");
					this.OnDenseRankChanged();
				}
			}
		}
		
		[Column(Storage="_NTile", DbType="TinyInt NOT NULL")]
		public byte NTile
		{
			get
			{
				return this._NTile;
			}
			set
			{
				if ((this._NTile != value))
				{
					this.OnNTileChanging(value);
					this.SendPropertyChanging();
					this._NTile = value;
					this.SendPropertyChanged("NTile");
					this.OnNTileChanged();
				}
			}
		}
		
		[Association(Name="Host_EmailAddresses_MOST_POPULAR_HOSTS_BY_HOST", Storage="_Host", ThisKey="HostID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Host Host
		{
			get
			{
				return this._Host.Entity;
			}
			set
			{
				Host previousValue = this._Host.Entity;
				if (((previousValue != value) 
							|| (this._Host.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Host.Entity = null;
						previousValue.EmailAddresses_MOST_POPULAR_HOSTS_BY_HOST = null;
					}
					this._Host.Entity = value;
					if ((value != null))
					{
						value.EmailAddresses_MOST_POPULAR_HOSTS_BY_HOST = this;
						this._HostID = value.ID;
					}
					else
					{
						this._HostID = default(int);
					}
					this.SendPropertyChanged("Host");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="rpt.EmailAddresses_MOST_POPULAR_HOSTS_BY_SCHEMES")]
	public partial class EmailAddresses_MOST_POPULAR_HOSTS_BY_SCHEME : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RowNumber;
		
		private System.Nullable<System.DateTime> _InitiallyDiscovered;
		
		private System.DateTime _LastDiscovered;
		
		private int _HostID;
		
		private int _Count;
		
		private System.Nullable<short> _DaysSinceInitiallyDiscovered;
		
		private short _DaysSinceLastDiscovered;
		
		private System.Nullable<double> _Strength;
		
		private int _Rank;
		
		private int _DenseRank;
		
		private byte _NTile;
		
		private EntityRef<Host> _Host;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRowNumberChanging(int value);
    partial void OnRowNumberChanged();
    partial void OnInitiallyDiscoveredChanging(System.Nullable<System.DateTime> value);
    partial void OnInitiallyDiscoveredChanged();
    partial void OnLastDiscoveredChanging(System.DateTime value);
    partial void OnLastDiscoveredChanged();
    partial void OnHostIDChanging(int value);
    partial void OnHostIDChanged();
    partial void OnCountChanging(int value);
    partial void OnCountChanged();
    partial void OnDaysSinceInitiallyDiscoveredChanging(System.Nullable<short> value);
    partial void OnDaysSinceInitiallyDiscoveredChanged();
    partial void OnDaysSinceLastDiscoveredChanging(short value);
    partial void OnDaysSinceLastDiscoveredChanged();
    partial void OnStrengthChanging(System.Nullable<double> value);
    partial void OnStrengthChanged();
    partial void OnRankChanging(int value);
    partial void OnRankChanged();
    partial void OnDenseRankChanging(int value);
    partial void OnDenseRankChanged();
    partial void OnNTileChanging(byte value);
    partial void OnNTileChanged();
    #endregion
		
		public EmailAddresses_MOST_POPULAR_HOSTS_BY_SCHEME()
		{
			this._Host = default(EntityRef<Host>);
			OnCreated();
		}
		
		[Column(Storage="_RowNumber", DbType="Int NOT NULL")]
		public int RowNumber
		{
			get
			{
				return this._RowNumber;
			}
			set
			{
				if ((this._RowNumber != value))
				{
					this.OnRowNumberChanging(value);
					this.SendPropertyChanging();
					this._RowNumber = value;
					this.SendPropertyChanged("RowNumber");
					this.OnRowNumberChanged();
				}
			}
		}
		
		[Column(Storage="_InitiallyDiscovered", DbType="DateTime")]
		public System.Nullable<System.DateTime> InitiallyDiscovered
		{
			get
			{
				return this._InitiallyDiscovered;
			}
			set
			{
				if ((this._InitiallyDiscovered != value))
				{
					this.OnInitiallyDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._InitiallyDiscovered = value;
					this.SendPropertyChanged("InitiallyDiscovered");
					this.OnInitiallyDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_LastDiscovered", DbType="DateTime NOT NULL")]
		public System.DateTime LastDiscovered
		{
			get
			{
				return this._LastDiscovered;
			}
			set
			{
				if ((this._LastDiscovered != value))
				{
					this.OnLastDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._LastDiscovered = value;
					this.SendPropertyChanged("LastDiscovered");
					this.OnLastDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_HostID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int HostID
		{
			get
			{
				return this._HostID;
			}
			set
			{
				if ((this._HostID != value))
				{
					if (this._Host.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnHostIDChanging(value);
					this.SendPropertyChanging();
					this._HostID = value;
					this.SendPropertyChanged("HostID");
					this.OnHostIDChanged();
				}
			}
		}
		
		[Column(Storage="_Count", DbType="Int NOT NULL")]
		public int Count
		{
			get
			{
				return this._Count;
			}
			set
			{
				if ((this._Count != value))
				{
					this.OnCountChanging(value);
					this.SendPropertyChanging();
					this._Count = value;
					this.SendPropertyChanged("Count");
					this.OnCountChanged();
				}
			}
		}
		
		[Column(Storage="_DaysSinceInitiallyDiscovered", DbType="SmallInt")]
		public System.Nullable<short> DaysSinceInitiallyDiscovered
		{
			get
			{
				return this._DaysSinceInitiallyDiscovered;
			}
			set
			{
				if ((this._DaysSinceInitiallyDiscovered != value))
				{
					this.OnDaysSinceInitiallyDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._DaysSinceInitiallyDiscovered = value;
					this.SendPropertyChanged("DaysSinceInitiallyDiscovered");
					this.OnDaysSinceInitiallyDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_DaysSinceLastDiscovered", DbType="SmallInt NOT NULL")]
		public short DaysSinceLastDiscovered
		{
			get
			{
				return this._DaysSinceLastDiscovered;
			}
			set
			{
				if ((this._DaysSinceLastDiscovered != value))
				{
					this.OnDaysSinceLastDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._DaysSinceLastDiscovered = value;
					this.SendPropertyChanged("DaysSinceLastDiscovered");
					this.OnDaysSinceLastDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_Strength", DbType="Float")]
		public System.Nullable<double> Strength
		{
			get
			{
				return this._Strength;
			}
			set
			{
				if ((this._Strength != value))
				{
					this.OnStrengthChanging(value);
					this.SendPropertyChanging();
					this._Strength = value;
					this.SendPropertyChanged("Strength");
					this.OnStrengthChanged();
				}
			}
		}
		
		[Column(Storage="_Rank", DbType="Int NOT NULL")]
		public int Rank
		{
			get
			{
				return this._Rank;
			}
			set
			{
				if ((this._Rank != value))
				{
					this.OnRankChanging(value);
					this.SendPropertyChanging();
					this._Rank = value;
					this.SendPropertyChanged("Rank");
					this.OnRankChanged();
				}
			}
		}
		
		[Column(Storage="_DenseRank", DbType="Int NOT NULL")]
		public int DenseRank
		{
			get
			{
				return this._DenseRank;
			}
			set
			{
				if ((this._DenseRank != value))
				{
					this.OnDenseRankChanging(value);
					this.SendPropertyChanging();
					this._DenseRank = value;
					this.SendPropertyChanged("DenseRank");
					this.OnDenseRankChanged();
				}
			}
		}
		
		[Column(Storage="_NTile", DbType="TinyInt NOT NULL")]
		public byte NTile
		{
			get
			{
				return this._NTile;
			}
			set
			{
				if ((this._NTile != value))
				{
					this.OnNTileChanging(value);
					this.SendPropertyChanging();
					this._NTile = value;
					this.SendPropertyChanged("NTile");
					this.OnNTileChanged();
				}
			}
		}
		
		[Association(Name="Host_EmailAddresses_MOST_POPULAR_HOSTS_BY_SCHEME", Storage="_Host", ThisKey="HostID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Host Host
		{
			get
			{
				return this._Host.Entity;
			}
			set
			{
				Host previousValue = this._Host.Entity;
				if (((previousValue != value) 
							|| (this._Host.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Host.Entity = null;
						previousValue.EmailAddresses_MOST_POPULAR_HOSTS_BY_SCHEME = null;
					}
					this._Host.Entity = value;
					if ((value != null))
					{
						value.EmailAddresses_MOST_POPULAR_HOSTS_BY_SCHEME = this;
						this._HostID = value.ID;
					}
					else
					{
						this._HostID = default(int);
					}
					this.SendPropertyChanged("Host");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="rpt.EmailAddresses_MOST_POPULAR_SCHEMES_BY_ABSOLUTEURIS")]
	public partial class EmailAddresses_MOST_POPULAR_SCHEMES_BY_ABSOLUTEURI : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RowNumber;
		
		private System.Nullable<System.DateTime> _InitiallyDiscovered;
		
		private System.DateTime _LastDiscovered;
		
		private int _SchemeID;
		
		private int _Count;
		
		private System.Nullable<short> _DaysSinceInitiallyDiscovered;
		
		private short _DaysSinceLastDiscovered;
		
		private System.Nullable<double> _Strength;
		
		private int _Rank;
		
		private int _DenseRank;
		
		private short _NTile;
		
		private EntityRef<Scheme> _Scheme;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRowNumberChanging(int value);
    partial void OnRowNumberChanged();
    partial void OnInitiallyDiscoveredChanging(System.Nullable<System.DateTime> value);
    partial void OnInitiallyDiscoveredChanged();
    partial void OnLastDiscoveredChanging(System.DateTime value);
    partial void OnLastDiscoveredChanged();
    partial void OnSchemeIDChanging(int value);
    partial void OnSchemeIDChanged();
    partial void OnCountChanging(int value);
    partial void OnCountChanged();
    partial void OnDaysSinceInitiallyDiscoveredChanging(System.Nullable<short> value);
    partial void OnDaysSinceInitiallyDiscoveredChanged();
    partial void OnDaysSinceLastDiscoveredChanging(short value);
    partial void OnDaysSinceLastDiscoveredChanged();
    partial void OnStrengthChanging(System.Nullable<double> value);
    partial void OnStrengthChanged();
    partial void OnRankChanging(int value);
    partial void OnRankChanged();
    partial void OnDenseRankChanging(int value);
    partial void OnDenseRankChanged();
    partial void OnNTileChanging(short value);
    partial void OnNTileChanged();
    #endregion
		
		public EmailAddresses_MOST_POPULAR_SCHEMES_BY_ABSOLUTEURI()
		{
			this._Scheme = default(EntityRef<Scheme>);
			OnCreated();
		}
		
		[Column(Storage="_RowNumber", DbType="Int NOT NULL")]
		public int RowNumber
		{
			get
			{
				return this._RowNumber;
			}
			set
			{
				if ((this._RowNumber != value))
				{
					this.OnRowNumberChanging(value);
					this.SendPropertyChanging();
					this._RowNumber = value;
					this.SendPropertyChanged("RowNumber");
					this.OnRowNumberChanged();
				}
			}
		}
		
		[Column(Storage="_InitiallyDiscovered", DbType="DateTime")]
		public System.Nullable<System.DateTime> InitiallyDiscovered
		{
			get
			{
				return this._InitiallyDiscovered;
			}
			set
			{
				if ((this._InitiallyDiscovered != value))
				{
					this.OnInitiallyDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._InitiallyDiscovered = value;
					this.SendPropertyChanged("InitiallyDiscovered");
					this.OnInitiallyDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_LastDiscovered", DbType="DateTime NOT NULL")]
		public System.DateTime LastDiscovered
		{
			get
			{
				return this._LastDiscovered;
			}
			set
			{
				if ((this._LastDiscovered != value))
				{
					this.OnLastDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._LastDiscovered = value;
					this.SendPropertyChanged("LastDiscovered");
					this.OnLastDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_SchemeID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int SchemeID
		{
			get
			{
				return this._SchemeID;
			}
			set
			{
				if ((this._SchemeID != value))
				{
					if (this._Scheme.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSchemeIDChanging(value);
					this.SendPropertyChanging();
					this._SchemeID = value;
					this.SendPropertyChanged("SchemeID");
					this.OnSchemeIDChanged();
				}
			}
		}
		
		[Column(Storage="_Count", DbType="Int NOT NULL")]
		public int Count
		{
			get
			{
				return this._Count;
			}
			set
			{
				if ((this._Count != value))
				{
					this.OnCountChanging(value);
					this.SendPropertyChanging();
					this._Count = value;
					this.SendPropertyChanged("Count");
					this.OnCountChanged();
				}
			}
		}
		
		[Column(Storage="_DaysSinceInitiallyDiscovered", DbType="SmallInt")]
		public System.Nullable<short> DaysSinceInitiallyDiscovered
		{
			get
			{
				return this._DaysSinceInitiallyDiscovered;
			}
			set
			{
				if ((this._DaysSinceInitiallyDiscovered != value))
				{
					this.OnDaysSinceInitiallyDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._DaysSinceInitiallyDiscovered = value;
					this.SendPropertyChanged("DaysSinceInitiallyDiscovered");
					this.OnDaysSinceInitiallyDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_DaysSinceLastDiscovered", DbType="SmallInt NOT NULL")]
		public short DaysSinceLastDiscovered
		{
			get
			{
				return this._DaysSinceLastDiscovered;
			}
			set
			{
				if ((this._DaysSinceLastDiscovered != value))
				{
					this.OnDaysSinceLastDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._DaysSinceLastDiscovered = value;
					this.SendPropertyChanged("DaysSinceLastDiscovered");
					this.OnDaysSinceLastDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_Strength", DbType="Float")]
		public System.Nullable<double> Strength
		{
			get
			{
				return this._Strength;
			}
			set
			{
				if ((this._Strength != value))
				{
					this.OnStrengthChanging(value);
					this.SendPropertyChanging();
					this._Strength = value;
					this.SendPropertyChanged("Strength");
					this.OnStrengthChanged();
				}
			}
		}
		
		[Column(Storage="_Rank", DbType="Int NOT NULL")]
		public int Rank
		{
			get
			{
				return this._Rank;
			}
			set
			{
				if ((this._Rank != value))
				{
					this.OnRankChanging(value);
					this.SendPropertyChanging();
					this._Rank = value;
					this.SendPropertyChanged("Rank");
					this.OnRankChanged();
				}
			}
		}
		
		[Column(Storage="_DenseRank", DbType="Int NOT NULL")]
		public int DenseRank
		{
			get
			{
				return this._DenseRank;
			}
			set
			{
				if ((this._DenseRank != value))
				{
					this.OnDenseRankChanging(value);
					this.SendPropertyChanging();
					this._DenseRank = value;
					this.SendPropertyChanged("DenseRank");
					this.OnDenseRankChanged();
				}
			}
		}
		
		[Column(Storage="_NTile", DbType="SmallInt NOT NULL")]
		public short NTile
		{
			get
			{
				return this._NTile;
			}
			set
			{
				if ((this._NTile != value))
				{
					this.OnNTileChanging(value);
					this.SendPropertyChanging();
					this._NTile = value;
					this.SendPropertyChanged("NTile");
					this.OnNTileChanged();
				}
			}
		}
		
		[Association(Name="Scheme_EmailAddresses_MOST_POPULAR_SCHEMES_BY_ABSOLUTEURI", Storage="_Scheme", ThisKey="SchemeID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Scheme Scheme
		{
			get
			{
				return this._Scheme.Entity;
			}
			set
			{
				Scheme previousValue = this._Scheme.Entity;
				if (((previousValue != value) 
							|| (this._Scheme.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Scheme.Entity = null;
						previousValue.EmailAddresses_MOST_POPULAR_SCHEMES_BY_ABSOLUTEURI = null;
					}
					this._Scheme.Entity = value;
					if ((value != null))
					{
						value.EmailAddresses_MOST_POPULAR_SCHEMES_BY_ABSOLUTEURI = this;
						this._SchemeID = value.ID;
					}
					else
					{
						this._SchemeID = default(int);
					}
					this.SendPropertyChanged("Scheme");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="rpt.EmailAddresses_MOST_POPULAR_SCHEMES_BY_DOMAINS")]
	public partial class EmailAddresses_MOST_POPULAR_SCHEMES_BY_DOMAIN : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RowNumber;
		
		private System.Nullable<System.DateTime> _InitiallyDiscovered;
		
		private System.DateTime _LastDiscovered;
		
		private int _SchemeID;
		
		private int _Count;
		
		private System.Nullable<short> _DaysSinceInitiallyDiscovered;
		
		private short _DaysSinceLastDiscovered;
		
		private System.Nullable<double> _Strength;
		
		private int _Rank;
		
		private int _DenseRank;
		
		private short _NTile;
		
		private EntityRef<Scheme> _Scheme;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRowNumberChanging(int value);
    partial void OnRowNumberChanged();
    partial void OnInitiallyDiscoveredChanging(System.Nullable<System.DateTime> value);
    partial void OnInitiallyDiscoveredChanged();
    partial void OnLastDiscoveredChanging(System.DateTime value);
    partial void OnLastDiscoveredChanged();
    partial void OnSchemeIDChanging(int value);
    partial void OnSchemeIDChanged();
    partial void OnCountChanging(int value);
    partial void OnCountChanged();
    partial void OnDaysSinceInitiallyDiscoveredChanging(System.Nullable<short> value);
    partial void OnDaysSinceInitiallyDiscoveredChanged();
    partial void OnDaysSinceLastDiscoveredChanging(short value);
    partial void OnDaysSinceLastDiscoveredChanged();
    partial void OnStrengthChanging(System.Nullable<double> value);
    partial void OnStrengthChanged();
    partial void OnRankChanging(int value);
    partial void OnRankChanged();
    partial void OnDenseRankChanging(int value);
    partial void OnDenseRankChanged();
    partial void OnNTileChanging(short value);
    partial void OnNTileChanged();
    #endregion
		
		public EmailAddresses_MOST_POPULAR_SCHEMES_BY_DOMAIN()
		{
			this._Scheme = default(EntityRef<Scheme>);
			OnCreated();
		}
		
		[Column(Storage="_RowNumber", DbType="Int NOT NULL")]
		public int RowNumber
		{
			get
			{
				return this._RowNumber;
			}
			set
			{
				if ((this._RowNumber != value))
				{
					this.OnRowNumberChanging(value);
					this.SendPropertyChanging();
					this._RowNumber = value;
					this.SendPropertyChanged("RowNumber");
					this.OnRowNumberChanged();
				}
			}
		}
		
		[Column(Storage="_InitiallyDiscovered", DbType="DateTime")]
		public System.Nullable<System.DateTime> InitiallyDiscovered
		{
			get
			{
				return this._InitiallyDiscovered;
			}
			set
			{
				if ((this._InitiallyDiscovered != value))
				{
					this.OnInitiallyDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._InitiallyDiscovered = value;
					this.SendPropertyChanged("InitiallyDiscovered");
					this.OnInitiallyDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_LastDiscovered", DbType="DateTime NOT NULL")]
		public System.DateTime LastDiscovered
		{
			get
			{
				return this._LastDiscovered;
			}
			set
			{
				if ((this._LastDiscovered != value))
				{
					this.OnLastDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._LastDiscovered = value;
					this.SendPropertyChanged("LastDiscovered");
					this.OnLastDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_SchemeID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int SchemeID
		{
			get
			{
				return this._SchemeID;
			}
			set
			{
				if ((this._SchemeID != value))
				{
					if (this._Scheme.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSchemeIDChanging(value);
					this.SendPropertyChanging();
					this._SchemeID = value;
					this.SendPropertyChanged("SchemeID");
					this.OnSchemeIDChanged();
				}
			}
		}
		
		[Column(Storage="_Count", DbType="Int NOT NULL")]
		public int Count
		{
			get
			{
				return this._Count;
			}
			set
			{
				if ((this._Count != value))
				{
					this.OnCountChanging(value);
					this.SendPropertyChanging();
					this._Count = value;
					this.SendPropertyChanged("Count");
					this.OnCountChanged();
				}
			}
		}
		
		[Column(Storage="_DaysSinceInitiallyDiscovered", DbType="SmallInt")]
		public System.Nullable<short> DaysSinceInitiallyDiscovered
		{
			get
			{
				return this._DaysSinceInitiallyDiscovered;
			}
			set
			{
				if ((this._DaysSinceInitiallyDiscovered != value))
				{
					this.OnDaysSinceInitiallyDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._DaysSinceInitiallyDiscovered = value;
					this.SendPropertyChanged("DaysSinceInitiallyDiscovered");
					this.OnDaysSinceInitiallyDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_DaysSinceLastDiscovered", DbType="SmallInt NOT NULL")]
		public short DaysSinceLastDiscovered
		{
			get
			{
				return this._DaysSinceLastDiscovered;
			}
			set
			{
				if ((this._DaysSinceLastDiscovered != value))
				{
					this.OnDaysSinceLastDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._DaysSinceLastDiscovered = value;
					this.SendPropertyChanged("DaysSinceLastDiscovered");
					this.OnDaysSinceLastDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_Strength", DbType="Float")]
		public System.Nullable<double> Strength
		{
			get
			{
				return this._Strength;
			}
			set
			{
				if ((this._Strength != value))
				{
					this.OnStrengthChanging(value);
					this.SendPropertyChanging();
					this._Strength = value;
					this.SendPropertyChanged("Strength");
					this.OnStrengthChanged();
				}
			}
		}
		
		[Column(Storage="_Rank", DbType="Int NOT NULL")]
		public int Rank
		{
			get
			{
				return this._Rank;
			}
			set
			{
				if ((this._Rank != value))
				{
					this.OnRankChanging(value);
					this.SendPropertyChanging();
					this._Rank = value;
					this.SendPropertyChanged("Rank");
					this.OnRankChanged();
				}
			}
		}
		
		[Column(Storage="_DenseRank", DbType="Int NOT NULL")]
		public int DenseRank
		{
			get
			{
				return this._DenseRank;
			}
			set
			{
				if ((this._DenseRank != value))
				{
					this.OnDenseRankChanging(value);
					this.SendPropertyChanging();
					this._DenseRank = value;
					this.SendPropertyChanged("DenseRank");
					this.OnDenseRankChanged();
				}
			}
		}
		
		[Column(Storage="_NTile", DbType="SmallInt NOT NULL")]
		public short NTile
		{
			get
			{
				return this._NTile;
			}
			set
			{
				if ((this._NTile != value))
				{
					this.OnNTileChanging(value);
					this.SendPropertyChanging();
					this._NTile = value;
					this.SendPropertyChanged("NTile");
					this.OnNTileChanged();
				}
			}
		}
		
		[Association(Name="Scheme_EmailAddresses_MOST_POPULAR_SCHEMES_BY_DOMAIN", Storage="_Scheme", ThisKey="SchemeID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Scheme Scheme
		{
			get
			{
				return this._Scheme.Entity;
			}
			set
			{
				Scheme previousValue = this._Scheme.Entity;
				if (((previousValue != value) 
							|| (this._Scheme.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Scheme.Entity = null;
						previousValue.EmailAddresses_MOST_POPULAR_SCHEMES_BY_DOMAIN = null;
					}
					this._Scheme.Entity = value;
					if ((value != null))
					{
						value.EmailAddresses_MOST_POPULAR_SCHEMES_BY_DOMAIN = this;
						this._SchemeID = value.ID;
					}
					else
					{
						this._SchemeID = default(int);
					}
					this.SendPropertyChanged("Scheme");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="rpt.EmailAddresses_MOST_POPULAR_SCHEMES_BY_EXTENSIONS")]
	public partial class EmailAddresses_MOST_POPULAR_SCHEMES_BY_EXTENSION : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RowNumber;
		
		private System.Nullable<System.DateTime> _InitiallyDiscovered;
		
		private System.DateTime _LastDiscovered;
		
		private int _SchemeID;
		
		private int _Count;
		
		private System.Nullable<short> _DaysSinceInitiallyDiscovered;
		
		private short _DaysSinceLastDiscovered;
		
		private System.Nullable<double> _Strength;
		
		private int _Rank;
		
		private int _DenseRank;
		
		private short _NTile;
		
		private EntityRef<Scheme> _Scheme;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRowNumberChanging(int value);
    partial void OnRowNumberChanged();
    partial void OnInitiallyDiscoveredChanging(System.Nullable<System.DateTime> value);
    partial void OnInitiallyDiscoveredChanged();
    partial void OnLastDiscoveredChanging(System.DateTime value);
    partial void OnLastDiscoveredChanged();
    partial void OnSchemeIDChanging(int value);
    partial void OnSchemeIDChanged();
    partial void OnCountChanging(int value);
    partial void OnCountChanged();
    partial void OnDaysSinceInitiallyDiscoveredChanging(System.Nullable<short> value);
    partial void OnDaysSinceInitiallyDiscoveredChanged();
    partial void OnDaysSinceLastDiscoveredChanging(short value);
    partial void OnDaysSinceLastDiscoveredChanged();
    partial void OnStrengthChanging(System.Nullable<double> value);
    partial void OnStrengthChanged();
    partial void OnRankChanging(int value);
    partial void OnRankChanged();
    partial void OnDenseRankChanging(int value);
    partial void OnDenseRankChanged();
    partial void OnNTileChanging(short value);
    partial void OnNTileChanged();
    #endregion
		
		public EmailAddresses_MOST_POPULAR_SCHEMES_BY_EXTENSION()
		{
			this._Scheme = default(EntityRef<Scheme>);
			OnCreated();
		}
		
		[Column(Storage="_RowNumber", DbType="Int NOT NULL")]
		public int RowNumber
		{
			get
			{
				return this._RowNumber;
			}
			set
			{
				if ((this._RowNumber != value))
				{
					this.OnRowNumberChanging(value);
					this.SendPropertyChanging();
					this._RowNumber = value;
					this.SendPropertyChanged("RowNumber");
					this.OnRowNumberChanged();
				}
			}
		}
		
		[Column(Storage="_InitiallyDiscovered", DbType="DateTime")]
		public System.Nullable<System.DateTime> InitiallyDiscovered
		{
			get
			{
				return this._InitiallyDiscovered;
			}
			set
			{
				if ((this._InitiallyDiscovered != value))
				{
					this.OnInitiallyDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._InitiallyDiscovered = value;
					this.SendPropertyChanged("InitiallyDiscovered");
					this.OnInitiallyDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_LastDiscovered", DbType="DateTime NOT NULL")]
		public System.DateTime LastDiscovered
		{
			get
			{
				return this._LastDiscovered;
			}
			set
			{
				if ((this._LastDiscovered != value))
				{
					this.OnLastDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._LastDiscovered = value;
					this.SendPropertyChanged("LastDiscovered");
					this.OnLastDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_SchemeID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int SchemeID
		{
			get
			{
				return this._SchemeID;
			}
			set
			{
				if ((this._SchemeID != value))
				{
					if (this._Scheme.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSchemeIDChanging(value);
					this.SendPropertyChanging();
					this._SchemeID = value;
					this.SendPropertyChanged("SchemeID");
					this.OnSchemeIDChanged();
				}
			}
		}
		
		[Column(Storage="_Count", DbType="Int NOT NULL")]
		public int Count
		{
			get
			{
				return this._Count;
			}
			set
			{
				if ((this._Count != value))
				{
					this.OnCountChanging(value);
					this.SendPropertyChanging();
					this._Count = value;
					this.SendPropertyChanged("Count");
					this.OnCountChanged();
				}
			}
		}
		
		[Column(Storage="_DaysSinceInitiallyDiscovered", DbType="SmallInt")]
		public System.Nullable<short> DaysSinceInitiallyDiscovered
		{
			get
			{
				return this._DaysSinceInitiallyDiscovered;
			}
			set
			{
				if ((this._DaysSinceInitiallyDiscovered != value))
				{
					this.OnDaysSinceInitiallyDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._DaysSinceInitiallyDiscovered = value;
					this.SendPropertyChanged("DaysSinceInitiallyDiscovered");
					this.OnDaysSinceInitiallyDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_DaysSinceLastDiscovered", DbType="SmallInt NOT NULL")]
		public short DaysSinceLastDiscovered
		{
			get
			{
				return this._DaysSinceLastDiscovered;
			}
			set
			{
				if ((this._DaysSinceLastDiscovered != value))
				{
					this.OnDaysSinceLastDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._DaysSinceLastDiscovered = value;
					this.SendPropertyChanged("DaysSinceLastDiscovered");
					this.OnDaysSinceLastDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_Strength", DbType="Float")]
		public System.Nullable<double> Strength
		{
			get
			{
				return this._Strength;
			}
			set
			{
				if ((this._Strength != value))
				{
					this.OnStrengthChanging(value);
					this.SendPropertyChanging();
					this._Strength = value;
					this.SendPropertyChanged("Strength");
					this.OnStrengthChanged();
				}
			}
		}
		
		[Column(Storage="_Rank", DbType="Int NOT NULL")]
		public int Rank
		{
			get
			{
				return this._Rank;
			}
			set
			{
				if ((this._Rank != value))
				{
					this.OnRankChanging(value);
					this.SendPropertyChanging();
					this._Rank = value;
					this.SendPropertyChanged("Rank");
					this.OnRankChanged();
				}
			}
		}
		
		[Column(Storage="_DenseRank", DbType="Int NOT NULL")]
		public int DenseRank
		{
			get
			{
				return this._DenseRank;
			}
			set
			{
				if ((this._DenseRank != value))
				{
					this.OnDenseRankChanging(value);
					this.SendPropertyChanging();
					this._DenseRank = value;
					this.SendPropertyChanged("DenseRank");
					this.OnDenseRankChanged();
				}
			}
		}
		
		[Column(Storage="_NTile", DbType="SmallInt NOT NULL")]
		public short NTile
		{
			get
			{
				return this._NTile;
			}
			set
			{
				if ((this._NTile != value))
				{
					this.OnNTileChanging(value);
					this.SendPropertyChanging();
					this._NTile = value;
					this.SendPropertyChanged("NTile");
					this.OnNTileChanged();
				}
			}
		}
		
		[Association(Name="Scheme_EmailAddresses_MOST_POPULAR_SCHEMES_BY_EXTENSION", Storage="_Scheme", ThisKey="SchemeID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Scheme Scheme
		{
			get
			{
				return this._Scheme.Entity;
			}
			set
			{
				Scheme previousValue = this._Scheme.Entity;
				if (((previousValue != value) 
							|| (this._Scheme.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Scheme.Entity = null;
						previousValue.EmailAddresses_MOST_POPULAR_SCHEMES_BY_EXTENSION = null;
					}
					this._Scheme.Entity = value;
					if ((value != null))
					{
						value.EmailAddresses_MOST_POPULAR_SCHEMES_BY_EXTENSION = this;
						this._SchemeID = value.ID;
					}
					else
					{
						this._SchemeID = default(int);
					}
					this.SendPropertyChanged("Scheme");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="rpt.EmailAddresses_MOST_POPULAR_SCHEMES_BY_HOSTS")]
	public partial class EmailAddresses_MOST_POPULAR_SCHEMES_BY_HOST : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RowNumber;
		
		private System.Nullable<System.DateTime> _InitiallyDiscovered;
		
		private System.DateTime _LastDiscovered;
		
		private int _SchemeID;
		
		private int _Count;
		
		private System.Nullable<short> _DaysSinceInitiallyDiscovered;
		
		private short _DaysSinceLastDiscovered;
		
		private System.Nullable<double> _Strength;
		
		private int _Rank;
		
		private int _DenseRank;
		
		private short _NTile;
		
		private EntityRef<Scheme> _Scheme;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRowNumberChanging(int value);
    partial void OnRowNumberChanged();
    partial void OnInitiallyDiscoveredChanging(System.Nullable<System.DateTime> value);
    partial void OnInitiallyDiscoveredChanged();
    partial void OnLastDiscoveredChanging(System.DateTime value);
    partial void OnLastDiscoveredChanged();
    partial void OnSchemeIDChanging(int value);
    partial void OnSchemeIDChanged();
    partial void OnCountChanging(int value);
    partial void OnCountChanged();
    partial void OnDaysSinceInitiallyDiscoveredChanging(System.Nullable<short> value);
    partial void OnDaysSinceInitiallyDiscoveredChanged();
    partial void OnDaysSinceLastDiscoveredChanging(short value);
    partial void OnDaysSinceLastDiscoveredChanged();
    partial void OnStrengthChanging(System.Nullable<double> value);
    partial void OnStrengthChanged();
    partial void OnRankChanging(int value);
    partial void OnRankChanged();
    partial void OnDenseRankChanging(int value);
    partial void OnDenseRankChanged();
    partial void OnNTileChanging(short value);
    partial void OnNTileChanged();
    #endregion
		
		public EmailAddresses_MOST_POPULAR_SCHEMES_BY_HOST()
		{
			this._Scheme = default(EntityRef<Scheme>);
			OnCreated();
		}
		
		[Column(Storage="_RowNumber", DbType="Int NOT NULL")]
		public int RowNumber
		{
			get
			{
				return this._RowNumber;
			}
			set
			{
				if ((this._RowNumber != value))
				{
					this.OnRowNumberChanging(value);
					this.SendPropertyChanging();
					this._RowNumber = value;
					this.SendPropertyChanged("RowNumber");
					this.OnRowNumberChanged();
				}
			}
		}
		
		[Column(Storage="_InitiallyDiscovered", DbType="DateTime")]
		public System.Nullable<System.DateTime> InitiallyDiscovered
		{
			get
			{
				return this._InitiallyDiscovered;
			}
			set
			{
				if ((this._InitiallyDiscovered != value))
				{
					this.OnInitiallyDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._InitiallyDiscovered = value;
					this.SendPropertyChanged("InitiallyDiscovered");
					this.OnInitiallyDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_LastDiscovered", DbType="DateTime NOT NULL")]
		public System.DateTime LastDiscovered
		{
			get
			{
				return this._LastDiscovered;
			}
			set
			{
				if ((this._LastDiscovered != value))
				{
					this.OnLastDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._LastDiscovered = value;
					this.SendPropertyChanged("LastDiscovered");
					this.OnLastDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_SchemeID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int SchemeID
		{
			get
			{
				return this._SchemeID;
			}
			set
			{
				if ((this._SchemeID != value))
				{
					if (this._Scheme.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSchemeIDChanging(value);
					this.SendPropertyChanging();
					this._SchemeID = value;
					this.SendPropertyChanged("SchemeID");
					this.OnSchemeIDChanged();
				}
			}
		}
		
		[Column(Storage="_Count", DbType="Int NOT NULL")]
		public int Count
		{
			get
			{
				return this._Count;
			}
			set
			{
				if ((this._Count != value))
				{
					this.OnCountChanging(value);
					this.SendPropertyChanging();
					this._Count = value;
					this.SendPropertyChanged("Count");
					this.OnCountChanged();
				}
			}
		}
		
		[Column(Storage="_DaysSinceInitiallyDiscovered", DbType="SmallInt")]
		public System.Nullable<short> DaysSinceInitiallyDiscovered
		{
			get
			{
				return this._DaysSinceInitiallyDiscovered;
			}
			set
			{
				if ((this._DaysSinceInitiallyDiscovered != value))
				{
					this.OnDaysSinceInitiallyDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._DaysSinceInitiallyDiscovered = value;
					this.SendPropertyChanged("DaysSinceInitiallyDiscovered");
					this.OnDaysSinceInitiallyDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_DaysSinceLastDiscovered", DbType="SmallInt NOT NULL")]
		public short DaysSinceLastDiscovered
		{
			get
			{
				return this._DaysSinceLastDiscovered;
			}
			set
			{
				if ((this._DaysSinceLastDiscovered != value))
				{
					this.OnDaysSinceLastDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._DaysSinceLastDiscovered = value;
					this.SendPropertyChanged("DaysSinceLastDiscovered");
					this.OnDaysSinceLastDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_Strength", DbType="Float")]
		public System.Nullable<double> Strength
		{
			get
			{
				return this._Strength;
			}
			set
			{
				if ((this._Strength != value))
				{
					this.OnStrengthChanging(value);
					this.SendPropertyChanging();
					this._Strength = value;
					this.SendPropertyChanged("Strength");
					this.OnStrengthChanged();
				}
			}
		}
		
		[Column(Storage="_Rank", DbType="Int NOT NULL")]
		public int Rank
		{
			get
			{
				return this._Rank;
			}
			set
			{
				if ((this._Rank != value))
				{
					this.OnRankChanging(value);
					this.SendPropertyChanging();
					this._Rank = value;
					this.SendPropertyChanged("Rank");
					this.OnRankChanged();
				}
			}
		}
		
		[Column(Storage="_DenseRank", DbType="Int NOT NULL")]
		public int DenseRank
		{
			get
			{
				return this._DenseRank;
			}
			set
			{
				if ((this._DenseRank != value))
				{
					this.OnDenseRankChanging(value);
					this.SendPropertyChanging();
					this._DenseRank = value;
					this.SendPropertyChanged("DenseRank");
					this.OnDenseRankChanged();
				}
			}
		}
		
		[Column(Storage="_NTile", DbType="SmallInt NOT NULL")]
		public short NTile
		{
			get
			{
				return this._NTile;
			}
			set
			{
				if ((this._NTile != value))
				{
					this.OnNTileChanging(value);
					this.SendPropertyChanging();
					this._NTile = value;
					this.SendPropertyChanged("NTile");
					this.OnNTileChanged();
				}
			}
		}
		
		[Association(Name="Scheme_EmailAddresses_MOST_POPULAR_SCHEMES_BY_HOST", Storage="_Scheme", ThisKey="SchemeID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Scheme Scheme
		{
			get
			{
				return this._Scheme.Entity;
			}
			set
			{
				Scheme previousValue = this._Scheme.Entity;
				if (((previousValue != value) 
							|| (this._Scheme.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Scheme.Entity = null;
						previousValue.EmailAddresses_MOST_POPULAR_SCHEMES_BY_HOST = null;
					}
					this._Scheme.Entity = value;
					if ((value != null))
					{
						value.EmailAddresses_MOST_POPULAR_SCHEMES_BY_HOST = this;
						this._SchemeID = value.ID;
					}
					else
					{
						this._SchemeID = default(int);
					}
					this.SendPropertyChanged("Scheme");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="rpt.EmailAddresses_MOST_POPULAR_SCHEMES_BY_SCHEMES")]
	public partial class EmailAddresses_MOST_POPULAR_SCHEMES_BY_SCHEME : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RowNumber;
		
		private System.Nullable<System.DateTime> _InitiallyDiscovered;
		
		private System.DateTime _LastDiscovered;
		
		private int _SchemeID;
		
		private int _Count;
		
		private System.Nullable<short> _DaysSinceInitiallyDiscovered;
		
		private short _DaysSinceLastDiscovered;
		
		private System.Nullable<double> _Strength;
		
		private int _Rank;
		
		private int _DenseRank;
		
		private short _NTile;
		
		private EntityRef<Scheme> _Scheme;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRowNumberChanging(int value);
    partial void OnRowNumberChanged();
    partial void OnInitiallyDiscoveredChanging(System.Nullable<System.DateTime> value);
    partial void OnInitiallyDiscoveredChanged();
    partial void OnLastDiscoveredChanging(System.DateTime value);
    partial void OnLastDiscoveredChanged();
    partial void OnSchemeIDChanging(int value);
    partial void OnSchemeIDChanged();
    partial void OnCountChanging(int value);
    partial void OnCountChanged();
    partial void OnDaysSinceInitiallyDiscoveredChanging(System.Nullable<short> value);
    partial void OnDaysSinceInitiallyDiscoveredChanged();
    partial void OnDaysSinceLastDiscoveredChanging(short value);
    partial void OnDaysSinceLastDiscoveredChanged();
    partial void OnStrengthChanging(System.Nullable<double> value);
    partial void OnStrengthChanged();
    partial void OnRankChanging(int value);
    partial void OnRankChanged();
    partial void OnDenseRankChanging(int value);
    partial void OnDenseRankChanged();
    partial void OnNTileChanging(short value);
    partial void OnNTileChanged();
    #endregion
		
		public EmailAddresses_MOST_POPULAR_SCHEMES_BY_SCHEME()
		{
			this._Scheme = default(EntityRef<Scheme>);
			OnCreated();
		}
		
		[Column(Storage="_RowNumber", DbType="Int NOT NULL")]
		public int RowNumber
		{
			get
			{
				return this._RowNumber;
			}
			set
			{
				if ((this._RowNumber != value))
				{
					this.OnRowNumberChanging(value);
					this.SendPropertyChanging();
					this._RowNumber = value;
					this.SendPropertyChanged("RowNumber");
					this.OnRowNumberChanged();
				}
			}
		}
		
		[Column(Storage="_InitiallyDiscovered", DbType="DateTime")]
		public System.Nullable<System.DateTime> InitiallyDiscovered
		{
			get
			{
				return this._InitiallyDiscovered;
			}
			set
			{
				if ((this._InitiallyDiscovered != value))
				{
					this.OnInitiallyDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._InitiallyDiscovered = value;
					this.SendPropertyChanged("InitiallyDiscovered");
					this.OnInitiallyDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_LastDiscovered", DbType="DateTime NOT NULL")]
		public System.DateTime LastDiscovered
		{
			get
			{
				return this._LastDiscovered;
			}
			set
			{
				if ((this._LastDiscovered != value))
				{
					this.OnLastDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._LastDiscovered = value;
					this.SendPropertyChanged("LastDiscovered");
					this.OnLastDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_SchemeID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int SchemeID
		{
			get
			{
				return this._SchemeID;
			}
			set
			{
				if ((this._SchemeID != value))
				{
					if (this._Scheme.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSchemeIDChanging(value);
					this.SendPropertyChanging();
					this._SchemeID = value;
					this.SendPropertyChanged("SchemeID");
					this.OnSchemeIDChanged();
				}
			}
		}
		
		[Column(Storage="_Count", DbType="Int NOT NULL")]
		public int Count
		{
			get
			{
				return this._Count;
			}
			set
			{
				if ((this._Count != value))
				{
					this.OnCountChanging(value);
					this.SendPropertyChanging();
					this._Count = value;
					this.SendPropertyChanged("Count");
					this.OnCountChanged();
				}
			}
		}
		
		[Column(Storage="_DaysSinceInitiallyDiscovered", DbType="SmallInt")]
		public System.Nullable<short> DaysSinceInitiallyDiscovered
		{
			get
			{
				return this._DaysSinceInitiallyDiscovered;
			}
			set
			{
				if ((this._DaysSinceInitiallyDiscovered != value))
				{
					this.OnDaysSinceInitiallyDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._DaysSinceInitiallyDiscovered = value;
					this.SendPropertyChanged("DaysSinceInitiallyDiscovered");
					this.OnDaysSinceInitiallyDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_DaysSinceLastDiscovered", DbType="SmallInt NOT NULL")]
		public short DaysSinceLastDiscovered
		{
			get
			{
				return this._DaysSinceLastDiscovered;
			}
			set
			{
				if ((this._DaysSinceLastDiscovered != value))
				{
					this.OnDaysSinceLastDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._DaysSinceLastDiscovered = value;
					this.SendPropertyChanged("DaysSinceLastDiscovered");
					this.OnDaysSinceLastDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_Strength", DbType="Float")]
		public System.Nullable<double> Strength
		{
			get
			{
				return this._Strength;
			}
			set
			{
				if ((this._Strength != value))
				{
					this.OnStrengthChanging(value);
					this.SendPropertyChanging();
					this._Strength = value;
					this.SendPropertyChanged("Strength");
					this.OnStrengthChanged();
				}
			}
		}
		
		[Column(Storage="_Rank", DbType="Int NOT NULL")]
		public int Rank
		{
			get
			{
				return this._Rank;
			}
			set
			{
				if ((this._Rank != value))
				{
					this.OnRankChanging(value);
					this.SendPropertyChanging();
					this._Rank = value;
					this.SendPropertyChanged("Rank");
					this.OnRankChanged();
				}
			}
		}
		
		[Column(Storage="_DenseRank", DbType="Int NOT NULL")]
		public int DenseRank
		{
			get
			{
				return this._DenseRank;
			}
			set
			{
				if ((this._DenseRank != value))
				{
					this.OnDenseRankChanging(value);
					this.SendPropertyChanging();
					this._DenseRank = value;
					this.SendPropertyChanged("DenseRank");
					this.OnDenseRankChanged();
				}
			}
		}
		
		[Column(Storage="_NTile", DbType="SmallInt NOT NULL")]
		public short NTile
		{
			get
			{
				return this._NTile;
			}
			set
			{
				if ((this._NTile != value))
				{
					this.OnNTileChanging(value);
					this.SendPropertyChanging();
					this._NTile = value;
					this.SendPropertyChanged("NTile");
					this.OnNTileChanged();
				}
			}
		}
		
		[Association(Name="Scheme_EmailAddresses_MOST_POPULAR_SCHEMES_BY_SCHEME", Storage="_Scheme", ThisKey="SchemeID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Scheme Scheme
		{
			get
			{
				return this._Scheme.Entity;
			}
			set
			{
				Scheme previousValue = this._Scheme.Entity;
				if (((previousValue != value) 
							|| (this._Scheme.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Scheme.Entity = null;
						previousValue.EmailAddresses_MOST_POPULAR_SCHEMES_BY_SCHEME = null;
					}
					this._Scheme.Entity = value;
					if ((value != null))
					{
						value.EmailAddresses_MOST_POPULAR_SCHEMES_BY_SCHEME = this;
						this._SchemeID = value.ID;
					}
					else
					{
						this._SchemeID = default(int);
					}
					this.SendPropertyChanged("Scheme");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="rpt.Exceptions_COUNT_BY_ABSOLUTEURI1")]
	public partial class Exceptions_COUNT_BY_ABSOLUTEURI1
	{
		
		private int _RowNumber;
		
		private System.DateTime _InitiallyCreated;
		
		private System.DateTime _LastCreated;
		
		private string _AbsoluteUri1;
		
		private int _Count;
		
		private short _DaysSinceInitiallyDiscovered;
		
		private short _DaysSinceLastDiscovered;
		
		private double _Strength;
		
		private int _Rank;
		
		private int _DenseRank;
		
		private byte _NTile;
		
		public Exceptions_COUNT_BY_ABSOLUTEURI1()
		{
		}
		
		[Column(Storage="_RowNumber", DbType="Int NOT NULL")]
		public int RowNumber
		{
			get
			{
				return this._RowNumber;
			}
			set
			{
				if ((this._RowNumber != value))
				{
					this._RowNumber = value;
				}
			}
		}
		
		[Column(Storage="_InitiallyCreated", DbType="DateTime NOT NULL")]
		public System.DateTime InitiallyCreated
		{
			get
			{
				return this._InitiallyCreated;
			}
			set
			{
				if ((this._InitiallyCreated != value))
				{
					this._InitiallyCreated = value;
				}
			}
		}
		
		[Column(Storage="_LastCreated", DbType="DateTime NOT NULL")]
		public System.DateTime LastCreated
		{
			get
			{
				return this._LastCreated;
			}
			set
			{
				if ((this._LastCreated != value))
				{
					this._LastCreated = value;
				}
			}
		}
		
		[Column(Storage="_AbsoluteUri1", DbType="VarChar(884)")]
		public string AbsoluteUri1
		{
			get
			{
				return this._AbsoluteUri1;
			}
			set
			{
				if ((this._AbsoluteUri1 != value))
				{
					this._AbsoluteUri1 = value;
				}
			}
		}
		
		[Column(Storage="_Count", DbType="Int NOT NULL")]
		public int Count
		{
			get
			{
				return this._Count;
			}
			set
			{
				if ((this._Count != value))
				{
					this._Count = value;
				}
			}
		}
		
		[Column(Storage="_DaysSinceInitiallyDiscovered", DbType="SmallInt NOT NULL")]
		public short DaysSinceInitiallyDiscovered
		{
			get
			{
				return this._DaysSinceInitiallyDiscovered;
			}
			set
			{
				if ((this._DaysSinceInitiallyDiscovered != value))
				{
					this._DaysSinceInitiallyDiscovered = value;
				}
			}
		}
		
		[Column(Storage="_DaysSinceLastDiscovered", DbType="SmallInt NOT NULL")]
		public short DaysSinceLastDiscovered
		{
			get
			{
				return this._DaysSinceLastDiscovered;
			}
			set
			{
				if ((this._DaysSinceLastDiscovered != value))
				{
					this._DaysSinceLastDiscovered = value;
				}
			}
		}
		
		[Column(Storage="_Strength", DbType="Float NOT NULL")]
		public double Strength
		{
			get
			{
				return this._Strength;
			}
			set
			{
				if ((this._Strength != value))
				{
					this._Strength = value;
				}
			}
		}
		
		[Column(Storage="_Rank", DbType="Int NOT NULL")]
		public int Rank
		{
			get
			{
				return this._Rank;
			}
			set
			{
				if ((this._Rank != value))
				{
					this._Rank = value;
				}
			}
		}
		
		[Column(Storage="_DenseRank", DbType="Int NOT NULL")]
		public int DenseRank
		{
			get
			{
				return this._DenseRank;
			}
			set
			{
				if ((this._DenseRank != value))
				{
					this._DenseRank = value;
				}
			}
		}
		
		[Column(Storage="_NTile", DbType="TinyInt NOT NULL")]
		public byte NTile
		{
			get
			{
				return this._NTile;
			}
			set
			{
				if ((this._NTile != value))
				{
					this._NTile = value;
				}
			}
		}
	}
	
	[Table(Name="rpt.Exceptions_COUNT_BY_ABSOLUTEURI2")]
	public partial class Exceptions_COUNT_BY_ABSOLUTEURI2
	{
		
		private int _RowNumber;
		
		private System.DateTime _InitiallyCreated;
		
		private System.DateTime _LastCreated;
		
		private string _AbsoluteUri2;
		
		private int _Count;
		
		private short _DaysSinceInitiallyDiscovered;
		
		private short _DaysSinceLastDiscovered;
		
		private double _Strength;
		
		private int _Rank;
		
		private int _DenseRank;
		
		private byte _NTile;
		
		public Exceptions_COUNT_BY_ABSOLUTEURI2()
		{
		}
		
		[Column(Storage="_RowNumber", DbType="Int NOT NULL")]
		public int RowNumber
		{
			get
			{
				return this._RowNumber;
			}
			set
			{
				if ((this._RowNumber != value))
				{
					this._RowNumber = value;
				}
			}
		}
		
		[Column(Storage="_InitiallyCreated", DbType="DateTime NOT NULL")]
		public System.DateTime InitiallyCreated
		{
			get
			{
				return this._InitiallyCreated;
			}
			set
			{
				if ((this._InitiallyCreated != value))
				{
					this._InitiallyCreated = value;
				}
			}
		}
		
		[Column(Storage="_LastCreated", DbType="DateTime NOT NULL")]
		public System.DateTime LastCreated
		{
			get
			{
				return this._LastCreated;
			}
			set
			{
				if ((this._LastCreated != value))
				{
					this._LastCreated = value;
				}
			}
		}
		
		[Column(Storage="_AbsoluteUri2", DbType="VarChar(884)")]
		public string AbsoluteUri2
		{
			get
			{
				return this._AbsoluteUri2;
			}
			set
			{
				if ((this._AbsoluteUri2 != value))
				{
					this._AbsoluteUri2 = value;
				}
			}
		}
		
		[Column(Storage="_Count", DbType="Int NOT NULL")]
		public int Count
		{
			get
			{
				return this._Count;
			}
			set
			{
				if ((this._Count != value))
				{
					this._Count = value;
				}
			}
		}
		
		[Column(Storage="_DaysSinceInitiallyDiscovered", DbType="SmallInt NOT NULL")]
		public short DaysSinceInitiallyDiscovered
		{
			get
			{
				return this._DaysSinceInitiallyDiscovered;
			}
			set
			{
				if ((this._DaysSinceInitiallyDiscovered != value))
				{
					this._DaysSinceInitiallyDiscovered = value;
				}
			}
		}
		
		[Column(Storage="_DaysSinceLastDiscovered", DbType="SmallInt NOT NULL")]
		public short DaysSinceLastDiscovered
		{
			get
			{
				return this._DaysSinceLastDiscovered;
			}
			set
			{
				if ((this._DaysSinceLastDiscovered != value))
				{
					this._DaysSinceLastDiscovered = value;
				}
			}
		}
		
		[Column(Storage="_Strength", DbType="Float NOT NULL")]
		public double Strength
		{
			get
			{
				return this._Strength;
			}
			set
			{
				if ((this._Strength != value))
				{
					this._Strength = value;
				}
			}
		}
		
		[Column(Storage="_Rank", DbType="Int NOT NULL")]
		public int Rank
		{
			get
			{
				return this._Rank;
			}
			set
			{
				if ((this._Rank != value))
				{
					this._Rank = value;
				}
			}
		}
		
		[Column(Storage="_DenseRank", DbType="Int NOT NULL")]
		public int DenseRank
		{
			get
			{
				return this._DenseRank;
			}
			set
			{
				if ((this._DenseRank != value))
				{
					this._DenseRank = value;
				}
			}
		}
		
		[Column(Storage="_NTile", DbType="TinyInt NOT NULL")]
		public byte NTile
		{
			get
			{
				return this._NTile;
			}
			set
			{
				if ((this._NTile != value))
				{
					this._NTile = value;
				}
			}
		}
	}
	
	[Table(Name="rpt.Exceptions_COUNT_BY_ABSOLUTEURIS")]
	public partial class Exceptions_COUNT_BY_ABSOLUTEURI
	{
		
		private int _RowNumber;
		
		private System.DateTime _InitiallyCreated;
		
		private System.DateTime _LastCreated;
		
		private string _AbsoluteUri1;
		
		private string _AbsoluteUri2;
		
		private int _Count;
		
		private short _DaysSinceInitiallyDiscovered;
		
		private short _DaysSinceLastDiscovered;
		
		private double _Strength;
		
		private int _Rank;
		
		private int _DenseRank;
		
		private byte _NTile;
		
		public Exceptions_COUNT_BY_ABSOLUTEURI()
		{
		}
		
		[Column(Storage="_RowNumber", DbType="Int NOT NULL")]
		public int RowNumber
		{
			get
			{
				return this._RowNumber;
			}
			set
			{
				if ((this._RowNumber != value))
				{
					this._RowNumber = value;
				}
			}
		}
		
		[Column(Storage="_InitiallyCreated", DbType="DateTime NOT NULL")]
		public System.DateTime InitiallyCreated
		{
			get
			{
				return this._InitiallyCreated;
			}
			set
			{
				if ((this._InitiallyCreated != value))
				{
					this._InitiallyCreated = value;
				}
			}
		}
		
		[Column(Storage="_LastCreated", DbType="DateTime NOT NULL")]
		public System.DateTime LastCreated
		{
			get
			{
				return this._LastCreated;
			}
			set
			{
				if ((this._LastCreated != value))
				{
					this._LastCreated = value;
				}
			}
		}
		
		[Column(Storage="_AbsoluteUri1", DbType="VarChar(884)")]
		public string AbsoluteUri1
		{
			get
			{
				return this._AbsoluteUri1;
			}
			set
			{
				if ((this._AbsoluteUri1 != value))
				{
					this._AbsoluteUri1 = value;
				}
			}
		}
		
		[Column(Storage="_AbsoluteUri2", DbType="VarChar(884)")]
		public string AbsoluteUri2
		{
			get
			{
				return this._AbsoluteUri2;
			}
			set
			{
				if ((this._AbsoluteUri2 != value))
				{
					this._AbsoluteUri2 = value;
				}
			}
		}
		
		[Column(Storage="_Count", DbType="Int NOT NULL")]
		public int Count
		{
			get
			{
				return this._Count;
			}
			set
			{
				if ((this._Count != value))
				{
					this._Count = value;
				}
			}
		}
		
		[Column(Storage="_DaysSinceInitiallyDiscovered", DbType="SmallInt NOT NULL")]
		public short DaysSinceInitiallyDiscovered
		{
			get
			{
				return this._DaysSinceInitiallyDiscovered;
			}
			set
			{
				if ((this._DaysSinceInitiallyDiscovered != value))
				{
					this._DaysSinceInitiallyDiscovered = value;
				}
			}
		}
		
		[Column(Storage="_DaysSinceLastDiscovered", DbType="SmallInt NOT NULL")]
		public short DaysSinceLastDiscovered
		{
			get
			{
				return this._DaysSinceLastDiscovered;
			}
			set
			{
				if ((this._DaysSinceLastDiscovered != value))
				{
					this._DaysSinceLastDiscovered = value;
				}
			}
		}
		
		[Column(Storage="_Strength", DbType="Float NOT NULL")]
		public double Strength
		{
			get
			{
				return this._Strength;
			}
			set
			{
				if ((this._Strength != value))
				{
					this._Strength = value;
				}
			}
		}
		
		[Column(Storage="_Rank", DbType="Int NOT NULL")]
		public int Rank
		{
			get
			{
				return this._Rank;
			}
			set
			{
				if ((this._Rank != value))
				{
					this._Rank = value;
				}
			}
		}
		
		[Column(Storage="_DenseRank", DbType="Int NOT NULL")]
		public int DenseRank
		{
			get
			{
				return this._DenseRank;
			}
			set
			{
				if ((this._DenseRank != value))
				{
					this._DenseRank = value;
				}
			}
		}
		
		[Column(Storage="_NTile", DbType="TinyInt NOT NULL")]
		public byte NTile
		{
			get
			{
				return this._NTile;
			}
			set
			{
				if ((this._NTile != value))
				{
					this._NTile = value;
				}
			}
		}
	}
	
	[Table(Name="rpt.Exceptions_COUNT_BY_DOMAIN1")]
	public partial class Exceptions_COUNT_BY_DOMAIN1 : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private short _RowNumber;
		
		private System.DateTime _InitiallyCreated;
		
		private System.DateTime _LastCreated;
		
		private string _Domain1;
		
		private int _Count;
		
		private short _DaysSinceInitiallyDiscovered;
		
		private short _DaysSinceLastDiscovered;
		
		private double _Strength;
		
		private short _Rank;
		
		private short _DenseRank;
		
		private byte _NTile;
		
		private EntityRef<Domain> _Domain;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRowNumberChanging(short value);
    partial void OnRowNumberChanged();
    partial void OnInitiallyCreatedChanging(System.DateTime value);
    partial void OnInitiallyCreatedChanged();
    partial void OnLastCreatedChanging(System.DateTime value);
    partial void OnLastCreatedChanged();
    partial void OnDomain1Changing(string value);
    partial void OnDomain1Changed();
    partial void OnCountChanging(int value);
    partial void OnCountChanged();
    partial void OnDaysSinceInitiallyDiscoveredChanging(short value);
    partial void OnDaysSinceInitiallyDiscoveredChanged();
    partial void OnDaysSinceLastDiscoveredChanging(short value);
    partial void OnDaysSinceLastDiscoveredChanged();
    partial void OnStrengthChanging(double value);
    partial void OnStrengthChanged();
    partial void OnRankChanging(short value);
    partial void OnRankChanged();
    partial void OnDenseRankChanging(short value);
    partial void OnDenseRankChanged();
    partial void OnNTileChanging(byte value);
    partial void OnNTileChanged();
    #endregion
		
		public Exceptions_COUNT_BY_DOMAIN1()
		{
			this._Domain = default(EntityRef<Domain>);
			OnCreated();
		}
		
		[Column(Storage="_RowNumber", DbType="SmallInt NOT NULL")]
		public short RowNumber
		{
			get
			{
				return this._RowNumber;
			}
			set
			{
				if ((this._RowNumber != value))
				{
					this.OnRowNumberChanging(value);
					this.SendPropertyChanging();
					this._RowNumber = value;
					this.SendPropertyChanged("RowNumber");
					this.OnRowNumberChanged();
				}
			}
		}
		
		[Column(Storage="_InitiallyCreated", DbType="DateTime NOT NULL")]
		public System.DateTime InitiallyCreated
		{
			get
			{
				return this._InitiallyCreated;
			}
			set
			{
				if ((this._InitiallyCreated != value))
				{
					this.OnInitiallyCreatedChanging(value);
					this.SendPropertyChanging();
					this._InitiallyCreated = value;
					this.SendPropertyChanged("InitiallyCreated");
					this.OnInitiallyCreatedChanged();
				}
			}
		}
		
		[Column(Storage="_LastCreated", DbType="DateTime NOT NULL")]
		public System.DateTime LastCreated
		{
			get
			{
				return this._LastCreated;
			}
			set
			{
				if ((this._LastCreated != value))
				{
					this.OnLastCreatedChanging(value);
					this.SendPropertyChanging();
					this._LastCreated = value;
					this.SendPropertyChanged("LastCreated");
					this.OnLastCreatedChanged();
				}
			}
		}
		
		[Column(Storage="_Domain1", DbType="VarChar(884) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Domain1
		{
			get
			{
				return this._Domain1;
			}
			set
			{
				if ((this._Domain1 != value))
				{
					if (this._Domain.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDomain1Changing(value);
					this.SendPropertyChanging();
					this._Domain1 = value;
					this.SendPropertyChanged("Domain1");
					this.OnDomain1Changed();
				}
			}
		}
		
		[Column(Storage="_Count", DbType="Int NOT NULL")]
		public int Count
		{
			get
			{
				return this._Count;
			}
			set
			{
				if ((this._Count != value))
				{
					this.OnCountChanging(value);
					this.SendPropertyChanging();
					this._Count = value;
					this.SendPropertyChanged("Count");
					this.OnCountChanged();
				}
			}
		}
		
		[Column(Storage="_DaysSinceInitiallyDiscovered", DbType="SmallInt NOT NULL")]
		public short DaysSinceInitiallyDiscovered
		{
			get
			{
				return this._DaysSinceInitiallyDiscovered;
			}
			set
			{
				if ((this._DaysSinceInitiallyDiscovered != value))
				{
					this.OnDaysSinceInitiallyDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._DaysSinceInitiallyDiscovered = value;
					this.SendPropertyChanged("DaysSinceInitiallyDiscovered");
					this.OnDaysSinceInitiallyDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_DaysSinceLastDiscovered", DbType="SmallInt NOT NULL")]
		public short DaysSinceLastDiscovered
		{
			get
			{
				return this._DaysSinceLastDiscovered;
			}
			set
			{
				if ((this._DaysSinceLastDiscovered != value))
				{
					this.OnDaysSinceLastDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._DaysSinceLastDiscovered = value;
					this.SendPropertyChanged("DaysSinceLastDiscovered");
					this.OnDaysSinceLastDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_Strength", DbType="Float NOT NULL")]
		public double Strength
		{
			get
			{
				return this._Strength;
			}
			set
			{
				if ((this._Strength != value))
				{
					this.OnStrengthChanging(value);
					this.SendPropertyChanging();
					this._Strength = value;
					this.SendPropertyChanged("Strength");
					this.OnStrengthChanged();
				}
			}
		}
		
		[Column(Storage="_Rank", DbType="SmallInt NOT NULL")]
		public short Rank
		{
			get
			{
				return this._Rank;
			}
			set
			{
				if ((this._Rank != value))
				{
					this.OnRankChanging(value);
					this.SendPropertyChanging();
					this._Rank = value;
					this.SendPropertyChanged("Rank");
					this.OnRankChanged();
				}
			}
		}
		
		[Column(Storage="_DenseRank", DbType="SmallInt NOT NULL")]
		public short DenseRank
		{
			get
			{
				return this._DenseRank;
			}
			set
			{
				if ((this._DenseRank != value))
				{
					this.OnDenseRankChanging(value);
					this.SendPropertyChanging();
					this._DenseRank = value;
					this.SendPropertyChanged("DenseRank");
					this.OnDenseRankChanged();
				}
			}
		}
		
		[Column(Storage="_NTile", DbType="TinyInt NOT NULL")]
		public byte NTile
		{
			get
			{
				return this._NTile;
			}
			set
			{
				if ((this._NTile != value))
				{
					this.OnNTileChanging(value);
					this.SendPropertyChanging();
					this._NTile = value;
					this.SendPropertyChanged("NTile");
					this.OnNTileChanged();
				}
			}
		}
		
		[Association(Name="Domain_Exceptions_COUNT_BY_DOMAIN1", Storage="_Domain", ThisKey="Domain1", OtherKey="Domain1", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Domain Domain
		{
			get
			{
				return this._Domain.Entity;
			}
			set
			{
				Domain previousValue = this._Domain.Entity;
				if (((previousValue != value) 
							|| (this._Domain.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Domain.Entity = null;
						previousValue.Exceptions_COUNT_BY_DOMAIN1 = null;
					}
					this._Domain.Entity = value;
					if ((value != null))
					{
						value.Exceptions_COUNT_BY_DOMAIN1 = this;
						this._Domain1 = value.Domain1;
					}
					else
					{
						this._Domain1 = default(string);
					}
					this.SendPropertyChanged("Domain");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="rpt.Exceptions_COUNT_BY_DOMAIN2")]
	public partial class Exceptions_COUNT_BY_DOMAIN2 : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private short _RowNumber;
		
		private System.DateTime _InitiallyCreated;
		
		private System.DateTime _LastCreated;
		
		private string _Domain2;
		
		private int _Count;
		
		private short _DaysSinceInitiallyDiscovered;
		
		private short _DaysSinceLastDiscovered;
		
		private double _Strength;
		
		private short _Rank;
		
		private short _DenseRank;
		
		private byte _NTile;
		
		private EntityRef<Domain> _Domain;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRowNumberChanging(short value);
    partial void OnRowNumberChanged();
    partial void OnInitiallyCreatedChanging(System.DateTime value);
    partial void OnInitiallyCreatedChanged();
    partial void OnLastCreatedChanging(System.DateTime value);
    partial void OnLastCreatedChanged();
    partial void OnDomain2Changing(string value);
    partial void OnDomain2Changed();
    partial void OnCountChanging(int value);
    partial void OnCountChanged();
    partial void OnDaysSinceInitiallyDiscoveredChanging(short value);
    partial void OnDaysSinceInitiallyDiscoveredChanged();
    partial void OnDaysSinceLastDiscoveredChanging(short value);
    partial void OnDaysSinceLastDiscoveredChanged();
    partial void OnStrengthChanging(double value);
    partial void OnStrengthChanged();
    partial void OnRankChanging(short value);
    partial void OnRankChanged();
    partial void OnDenseRankChanging(short value);
    partial void OnDenseRankChanged();
    partial void OnNTileChanging(byte value);
    partial void OnNTileChanged();
    #endregion
		
		public Exceptions_COUNT_BY_DOMAIN2()
		{
			this._Domain = default(EntityRef<Domain>);
			OnCreated();
		}
		
		[Column(Storage="_RowNumber", DbType="SmallInt NOT NULL")]
		public short RowNumber
		{
			get
			{
				return this._RowNumber;
			}
			set
			{
				if ((this._RowNumber != value))
				{
					this.OnRowNumberChanging(value);
					this.SendPropertyChanging();
					this._RowNumber = value;
					this.SendPropertyChanged("RowNumber");
					this.OnRowNumberChanged();
				}
			}
		}
		
		[Column(Storage="_InitiallyCreated", DbType="DateTime NOT NULL")]
		public System.DateTime InitiallyCreated
		{
			get
			{
				return this._InitiallyCreated;
			}
			set
			{
				if ((this._InitiallyCreated != value))
				{
					this.OnInitiallyCreatedChanging(value);
					this.SendPropertyChanging();
					this._InitiallyCreated = value;
					this.SendPropertyChanged("InitiallyCreated");
					this.OnInitiallyCreatedChanged();
				}
			}
		}
		
		[Column(Storage="_LastCreated", DbType="DateTime NOT NULL")]
		public System.DateTime LastCreated
		{
			get
			{
				return this._LastCreated;
			}
			set
			{
				if ((this._LastCreated != value))
				{
					this.OnLastCreatedChanging(value);
					this.SendPropertyChanging();
					this._LastCreated = value;
					this.SendPropertyChanged("LastCreated");
					this.OnLastCreatedChanged();
				}
			}
		}
		
		[Column(Storage="_Domain2", DbType="VarChar(884) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Domain2
		{
			get
			{
				return this._Domain2;
			}
			set
			{
				if ((this._Domain2 != value))
				{
					if (this._Domain.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDomain2Changing(value);
					this.SendPropertyChanging();
					this._Domain2 = value;
					this.SendPropertyChanged("Domain2");
					this.OnDomain2Changed();
				}
			}
		}
		
		[Column(Storage="_Count", DbType="Int NOT NULL")]
		public int Count
		{
			get
			{
				return this._Count;
			}
			set
			{
				if ((this._Count != value))
				{
					this.OnCountChanging(value);
					this.SendPropertyChanging();
					this._Count = value;
					this.SendPropertyChanged("Count");
					this.OnCountChanged();
				}
			}
		}
		
		[Column(Storage="_DaysSinceInitiallyDiscovered", DbType="SmallInt NOT NULL")]
		public short DaysSinceInitiallyDiscovered
		{
			get
			{
				return this._DaysSinceInitiallyDiscovered;
			}
			set
			{
				if ((this._DaysSinceInitiallyDiscovered != value))
				{
					this.OnDaysSinceInitiallyDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._DaysSinceInitiallyDiscovered = value;
					this.SendPropertyChanged("DaysSinceInitiallyDiscovered");
					this.OnDaysSinceInitiallyDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_DaysSinceLastDiscovered", DbType="SmallInt NOT NULL")]
		public short DaysSinceLastDiscovered
		{
			get
			{
				return this._DaysSinceLastDiscovered;
			}
			set
			{
				if ((this._DaysSinceLastDiscovered != value))
				{
					this.OnDaysSinceLastDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._DaysSinceLastDiscovered = value;
					this.SendPropertyChanged("DaysSinceLastDiscovered");
					this.OnDaysSinceLastDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_Strength", DbType="Float NOT NULL")]
		public double Strength
		{
			get
			{
				return this._Strength;
			}
			set
			{
				if ((this._Strength != value))
				{
					this.OnStrengthChanging(value);
					this.SendPropertyChanging();
					this._Strength = value;
					this.SendPropertyChanged("Strength");
					this.OnStrengthChanged();
				}
			}
		}
		
		[Column(Storage="_Rank", DbType="SmallInt NOT NULL")]
		public short Rank
		{
			get
			{
				return this._Rank;
			}
			set
			{
				if ((this._Rank != value))
				{
					this.OnRankChanging(value);
					this.SendPropertyChanging();
					this._Rank = value;
					this.SendPropertyChanged("Rank");
					this.OnRankChanged();
				}
			}
		}
		
		[Column(Storage="_DenseRank", DbType="SmallInt NOT NULL")]
		public short DenseRank
		{
			get
			{
				return this._DenseRank;
			}
			set
			{
				if ((this._DenseRank != value))
				{
					this.OnDenseRankChanging(value);
					this.SendPropertyChanging();
					this._DenseRank = value;
					this.SendPropertyChanged("DenseRank");
					this.OnDenseRankChanged();
				}
			}
		}
		
		[Column(Storage="_NTile", DbType="TinyInt NOT NULL")]
		public byte NTile
		{
			get
			{
				return this._NTile;
			}
			set
			{
				if ((this._NTile != value))
				{
					this.OnNTileChanging(value);
					this.SendPropertyChanging();
					this._NTile = value;
					this.SendPropertyChanged("NTile");
					this.OnNTileChanged();
				}
			}
		}
		
		[Association(Name="Domain_Exceptions_COUNT_BY_DOMAIN2", Storage="_Domain", ThisKey="Domain2", OtherKey="Domain1", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Domain Domain
		{
			get
			{
				return this._Domain.Entity;
			}
			set
			{
				Domain previousValue = this._Domain.Entity;
				if (((previousValue != value) 
							|| (this._Domain.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Domain.Entity = null;
						previousValue.Exceptions_COUNT_BY_DOMAIN2 = null;
					}
					this._Domain.Entity = value;
					if ((value != null))
					{
						value.Exceptions_COUNT_BY_DOMAIN2 = this;
						this._Domain2 = value.Domain1;
					}
					else
					{
						this._Domain2 = default(string);
					}
					this.SendPropertyChanged("Domain");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="rpt.Exceptions_COUNT_BY_DOMAINS")]
	public partial class Exceptions_COUNT_BY_DOMAIN
	{
		
		private short _RowNumber;
		
		private System.DateTime _InitiallyCreated;
		
		private System.DateTime _LastCreated;
		
		private string _Domain1;
		
		private string _Domain2;
		
		private int _Count;
		
		private short _DaysSinceInitiallyDiscovered;
		
		private short _DaysSinceLastDiscovered;
		
		private double _Strength;
		
		private short _Rank;
		
		private short _DenseRank;
		
		private byte _NTile;
		
		public Exceptions_COUNT_BY_DOMAIN()
		{
		}
		
		[Column(Storage="_RowNumber", DbType="SmallInt NOT NULL")]
		public short RowNumber
		{
			get
			{
				return this._RowNumber;
			}
			set
			{
				if ((this._RowNumber != value))
				{
					this._RowNumber = value;
				}
			}
		}
		
		[Column(Storage="_InitiallyCreated", DbType="DateTime NOT NULL")]
		public System.DateTime InitiallyCreated
		{
			get
			{
				return this._InitiallyCreated;
			}
			set
			{
				if ((this._InitiallyCreated != value))
				{
					this._InitiallyCreated = value;
				}
			}
		}
		
		[Column(Storage="_LastCreated", DbType="DateTime NOT NULL")]
		public System.DateTime LastCreated
		{
			get
			{
				return this._LastCreated;
			}
			set
			{
				if ((this._LastCreated != value))
				{
					this._LastCreated = value;
				}
			}
		}
		
		[Column(Storage="_Domain1", DbType="VarChar(884) NOT NULL", CanBeNull=false)]
		public string Domain1
		{
			get
			{
				return this._Domain1;
			}
			set
			{
				if ((this._Domain1 != value))
				{
					this._Domain1 = value;
				}
			}
		}
		
		[Column(Storage="_Domain2", DbType="VarChar(884) NOT NULL", CanBeNull=false)]
		public string Domain2
		{
			get
			{
				return this._Domain2;
			}
			set
			{
				if ((this._Domain2 != value))
				{
					this._Domain2 = value;
				}
			}
		}
		
		[Column(Storage="_Count", DbType="Int NOT NULL")]
		public int Count
		{
			get
			{
				return this._Count;
			}
			set
			{
				if ((this._Count != value))
				{
					this._Count = value;
				}
			}
		}
		
		[Column(Storage="_DaysSinceInitiallyDiscovered", DbType="SmallInt NOT NULL")]
		public short DaysSinceInitiallyDiscovered
		{
			get
			{
				return this._DaysSinceInitiallyDiscovered;
			}
			set
			{
				if ((this._DaysSinceInitiallyDiscovered != value))
				{
					this._DaysSinceInitiallyDiscovered = value;
				}
			}
		}
		
		[Column(Storage="_DaysSinceLastDiscovered", DbType="SmallInt NOT NULL")]
		public short DaysSinceLastDiscovered
		{
			get
			{
				return this._DaysSinceLastDiscovered;
			}
			set
			{
				if ((this._DaysSinceLastDiscovered != value))
				{
					this._DaysSinceLastDiscovered = value;
				}
			}
		}
		
		[Column(Storage="_Strength", DbType="Float NOT NULL")]
		public double Strength
		{
			get
			{
				return this._Strength;
			}
			set
			{
				if ((this._Strength != value))
				{
					this._Strength = value;
				}
			}
		}
		
		[Column(Storage="_Rank", DbType="SmallInt NOT NULL")]
		public short Rank
		{
			get
			{
				return this._Rank;
			}
			set
			{
				if ((this._Rank != value))
				{
					this._Rank = value;
				}
			}
		}
		
		[Column(Storage="_DenseRank", DbType="SmallInt NOT NULL")]
		public short DenseRank
		{
			get
			{
				return this._DenseRank;
			}
			set
			{
				if ((this._DenseRank != value))
				{
					this._DenseRank = value;
				}
			}
		}
		
		[Column(Storage="_NTile", DbType="TinyInt NOT NULL")]
		public byte NTile
		{
			get
			{
				return this._NTile;
			}
			set
			{
				if ((this._NTile != value))
				{
					this._NTile = value;
				}
			}
		}
	}
	
	[Table(Name="rpt.Exceptions_COUNT_BY_EXTENSION1")]
	public partial class Exceptions_COUNT_BY_EXTENSION1 : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private short _RowNumber;
		
		private System.DateTime _InitiallyCreated;
		
		private System.DateTime _LastCreated;
		
		private string _Extension1;
		
		private int _Count;
		
		private short _DaysSinceInitiallyDiscovered;
		
		private short _DaysSinceLastDiscovered;
		
		private double _Strength;
		
		private short _Rank;
		
		private short _DenseRank;
		
		private byte _NTile;
		
		private EntityRef<Extension> _Extension;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRowNumberChanging(short value);
    partial void OnRowNumberChanged();
    partial void OnInitiallyCreatedChanging(System.DateTime value);
    partial void OnInitiallyCreatedChanged();
    partial void OnLastCreatedChanging(System.DateTime value);
    partial void OnLastCreatedChanged();
    partial void OnExtension1Changing(string value);
    partial void OnExtension1Changed();
    partial void OnCountChanging(int value);
    partial void OnCountChanged();
    partial void OnDaysSinceInitiallyDiscoveredChanging(short value);
    partial void OnDaysSinceInitiallyDiscoveredChanged();
    partial void OnDaysSinceLastDiscoveredChanging(short value);
    partial void OnDaysSinceLastDiscoveredChanged();
    partial void OnStrengthChanging(double value);
    partial void OnStrengthChanged();
    partial void OnRankChanging(short value);
    partial void OnRankChanged();
    partial void OnDenseRankChanging(short value);
    partial void OnDenseRankChanged();
    partial void OnNTileChanging(byte value);
    partial void OnNTileChanged();
    #endregion
		
		public Exceptions_COUNT_BY_EXTENSION1()
		{
			this._Extension = default(EntityRef<Extension>);
			OnCreated();
		}
		
		[Column(Storage="_RowNumber", DbType="SmallInt NOT NULL")]
		public short RowNumber
		{
			get
			{
				return this._RowNumber;
			}
			set
			{
				if ((this._RowNumber != value))
				{
					this.OnRowNumberChanging(value);
					this.SendPropertyChanging();
					this._RowNumber = value;
					this.SendPropertyChanged("RowNumber");
					this.OnRowNumberChanged();
				}
			}
		}
		
		[Column(Storage="_InitiallyCreated", DbType="DateTime NOT NULL")]
		public System.DateTime InitiallyCreated
		{
			get
			{
				return this._InitiallyCreated;
			}
			set
			{
				if ((this._InitiallyCreated != value))
				{
					this.OnInitiallyCreatedChanging(value);
					this.SendPropertyChanging();
					this._InitiallyCreated = value;
					this.SendPropertyChanged("InitiallyCreated");
					this.OnInitiallyCreatedChanged();
				}
			}
		}
		
		[Column(Storage="_LastCreated", DbType="DateTime NOT NULL")]
		public System.DateTime LastCreated
		{
			get
			{
				return this._LastCreated;
			}
			set
			{
				if ((this._LastCreated != value))
				{
					this.OnLastCreatedChanging(value);
					this.SendPropertyChanging();
					this._LastCreated = value;
					this.SendPropertyChanged("LastCreated");
					this.OnLastCreatedChanged();
				}
			}
		}
		
		[Column(Storage="_Extension1", DbType="VarChar(884) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Extension1
		{
			get
			{
				return this._Extension1;
			}
			set
			{
				if ((this._Extension1 != value))
				{
					if (this._Extension.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnExtension1Changing(value);
					this.SendPropertyChanging();
					this._Extension1 = value;
					this.SendPropertyChanged("Extension1");
					this.OnExtension1Changed();
				}
			}
		}
		
		[Column(Storage="_Count", DbType="Int NOT NULL")]
		public int Count
		{
			get
			{
				return this._Count;
			}
			set
			{
				if ((this._Count != value))
				{
					this.OnCountChanging(value);
					this.SendPropertyChanging();
					this._Count = value;
					this.SendPropertyChanged("Count");
					this.OnCountChanged();
				}
			}
		}
		
		[Column(Storage="_DaysSinceInitiallyDiscovered", DbType="SmallInt NOT NULL")]
		public short DaysSinceInitiallyDiscovered
		{
			get
			{
				return this._DaysSinceInitiallyDiscovered;
			}
			set
			{
				if ((this._DaysSinceInitiallyDiscovered != value))
				{
					this.OnDaysSinceInitiallyDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._DaysSinceInitiallyDiscovered = value;
					this.SendPropertyChanged("DaysSinceInitiallyDiscovered");
					this.OnDaysSinceInitiallyDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_DaysSinceLastDiscovered", DbType="SmallInt NOT NULL")]
		public short DaysSinceLastDiscovered
		{
			get
			{
				return this._DaysSinceLastDiscovered;
			}
			set
			{
				if ((this._DaysSinceLastDiscovered != value))
				{
					this.OnDaysSinceLastDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._DaysSinceLastDiscovered = value;
					this.SendPropertyChanged("DaysSinceLastDiscovered");
					this.OnDaysSinceLastDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_Strength", DbType="Float NOT NULL")]
		public double Strength
		{
			get
			{
				return this._Strength;
			}
			set
			{
				if ((this._Strength != value))
				{
					this.OnStrengthChanging(value);
					this.SendPropertyChanging();
					this._Strength = value;
					this.SendPropertyChanged("Strength");
					this.OnStrengthChanged();
				}
			}
		}
		
		[Column(Storage="_Rank", DbType="SmallInt NOT NULL")]
		public short Rank
		{
			get
			{
				return this._Rank;
			}
			set
			{
				if ((this._Rank != value))
				{
					this.OnRankChanging(value);
					this.SendPropertyChanging();
					this._Rank = value;
					this.SendPropertyChanged("Rank");
					this.OnRankChanged();
				}
			}
		}
		
		[Column(Storage="_DenseRank", DbType="SmallInt NOT NULL")]
		public short DenseRank
		{
			get
			{
				return this._DenseRank;
			}
			set
			{
				if ((this._DenseRank != value))
				{
					this.OnDenseRankChanging(value);
					this.SendPropertyChanging();
					this._DenseRank = value;
					this.SendPropertyChanged("DenseRank");
					this.OnDenseRankChanged();
				}
			}
		}
		
		[Column(Storage="_NTile", DbType="TinyInt NOT NULL")]
		public byte NTile
		{
			get
			{
				return this._NTile;
			}
			set
			{
				if ((this._NTile != value))
				{
					this.OnNTileChanging(value);
					this.SendPropertyChanging();
					this._NTile = value;
					this.SendPropertyChanged("NTile");
					this.OnNTileChanged();
				}
			}
		}
		
		[Association(Name="Extension_Exceptions_COUNT_BY_EXTENSION1", Storage="_Extension", ThisKey="Extension1", OtherKey="Extension1", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Extension Extension
		{
			get
			{
				return this._Extension.Entity;
			}
			set
			{
				Extension previousValue = this._Extension.Entity;
				if (((previousValue != value) 
							|| (this._Extension.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Extension.Entity = null;
						previousValue.Exceptions_COUNT_BY_EXTENSION1 = null;
					}
					this._Extension.Entity = value;
					if ((value != null))
					{
						value.Exceptions_COUNT_BY_EXTENSION1 = this;
						this._Extension1 = value.Extension1;
					}
					else
					{
						this._Extension1 = default(string);
					}
					this.SendPropertyChanged("Extension");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="rpt.Exceptions_COUNT_BY_EXTENSION2")]
	public partial class Exceptions_COUNT_BY_EXTENSION2 : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private short _RowNumber;
		
		private System.DateTime _InitiallyCreated;
		
		private System.DateTime _LastCreated;
		
		private string _Extension2;
		
		private int _Count;
		
		private short _DaysSinceInitiallyDiscovered;
		
		private short _DaysSinceLastDiscovered;
		
		private double _Strength;
		
		private short _Rank;
		
		private short _DenseRank;
		
		private byte _NTile;
		
		private EntityRef<Extension> _Extension;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRowNumberChanging(short value);
    partial void OnRowNumberChanged();
    partial void OnInitiallyCreatedChanging(System.DateTime value);
    partial void OnInitiallyCreatedChanged();
    partial void OnLastCreatedChanging(System.DateTime value);
    partial void OnLastCreatedChanged();
    partial void OnExtension2Changing(string value);
    partial void OnExtension2Changed();
    partial void OnCountChanging(int value);
    partial void OnCountChanged();
    partial void OnDaysSinceInitiallyDiscoveredChanging(short value);
    partial void OnDaysSinceInitiallyDiscoveredChanged();
    partial void OnDaysSinceLastDiscoveredChanging(short value);
    partial void OnDaysSinceLastDiscoveredChanged();
    partial void OnStrengthChanging(double value);
    partial void OnStrengthChanged();
    partial void OnRankChanging(short value);
    partial void OnRankChanged();
    partial void OnDenseRankChanging(short value);
    partial void OnDenseRankChanged();
    partial void OnNTileChanging(byte value);
    partial void OnNTileChanged();
    #endregion
		
		public Exceptions_COUNT_BY_EXTENSION2()
		{
			this._Extension = default(EntityRef<Extension>);
			OnCreated();
		}
		
		[Column(Storage="_RowNumber", DbType="SmallInt NOT NULL")]
		public short RowNumber
		{
			get
			{
				return this._RowNumber;
			}
			set
			{
				if ((this._RowNumber != value))
				{
					this.OnRowNumberChanging(value);
					this.SendPropertyChanging();
					this._RowNumber = value;
					this.SendPropertyChanged("RowNumber");
					this.OnRowNumberChanged();
				}
			}
		}
		
		[Column(Storage="_InitiallyCreated", DbType="DateTime NOT NULL")]
		public System.DateTime InitiallyCreated
		{
			get
			{
				return this._InitiallyCreated;
			}
			set
			{
				if ((this._InitiallyCreated != value))
				{
					this.OnInitiallyCreatedChanging(value);
					this.SendPropertyChanging();
					this._InitiallyCreated = value;
					this.SendPropertyChanged("InitiallyCreated");
					this.OnInitiallyCreatedChanged();
				}
			}
		}
		
		[Column(Storage="_LastCreated", DbType="DateTime NOT NULL")]
		public System.DateTime LastCreated
		{
			get
			{
				return this._LastCreated;
			}
			set
			{
				if ((this._LastCreated != value))
				{
					this.OnLastCreatedChanging(value);
					this.SendPropertyChanging();
					this._LastCreated = value;
					this.SendPropertyChanged("LastCreated");
					this.OnLastCreatedChanged();
				}
			}
		}
		
		[Column(Storage="_Extension2", DbType="VarChar(884) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Extension2
		{
			get
			{
				return this._Extension2;
			}
			set
			{
				if ((this._Extension2 != value))
				{
					if (this._Extension.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnExtension2Changing(value);
					this.SendPropertyChanging();
					this._Extension2 = value;
					this.SendPropertyChanged("Extension2");
					this.OnExtension2Changed();
				}
			}
		}
		
		[Column(Storage="_Count", DbType="Int NOT NULL")]
		public int Count
		{
			get
			{
				return this._Count;
			}
			set
			{
				if ((this._Count != value))
				{
					this.OnCountChanging(value);
					this.SendPropertyChanging();
					this._Count = value;
					this.SendPropertyChanged("Count");
					this.OnCountChanged();
				}
			}
		}
		
		[Column(Storage="_DaysSinceInitiallyDiscovered", DbType="SmallInt NOT NULL")]
		public short DaysSinceInitiallyDiscovered
		{
			get
			{
				return this._DaysSinceInitiallyDiscovered;
			}
			set
			{
				if ((this._DaysSinceInitiallyDiscovered != value))
				{
					this.OnDaysSinceInitiallyDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._DaysSinceInitiallyDiscovered = value;
					this.SendPropertyChanged("DaysSinceInitiallyDiscovered");
					this.OnDaysSinceInitiallyDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_DaysSinceLastDiscovered", DbType="SmallInt NOT NULL")]
		public short DaysSinceLastDiscovered
		{
			get
			{
				return this._DaysSinceLastDiscovered;
			}
			set
			{
				if ((this._DaysSinceLastDiscovered != value))
				{
					this.OnDaysSinceLastDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._DaysSinceLastDiscovered = value;
					this.SendPropertyChanged("DaysSinceLastDiscovered");
					this.OnDaysSinceLastDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_Strength", DbType="Float NOT NULL")]
		public double Strength
		{
			get
			{
				return this._Strength;
			}
			set
			{
				if ((this._Strength != value))
				{
					this.OnStrengthChanging(value);
					this.SendPropertyChanging();
					this._Strength = value;
					this.SendPropertyChanged("Strength");
					this.OnStrengthChanged();
				}
			}
		}
		
		[Column(Storage="_Rank", DbType="SmallInt NOT NULL")]
		public short Rank
		{
			get
			{
				return this._Rank;
			}
			set
			{
				if ((this._Rank != value))
				{
					this.OnRankChanging(value);
					this.SendPropertyChanging();
					this._Rank = value;
					this.SendPropertyChanged("Rank");
					this.OnRankChanged();
				}
			}
		}
		
		[Column(Storage="_DenseRank", DbType="SmallInt NOT NULL")]
		public short DenseRank
		{
			get
			{
				return this._DenseRank;
			}
			set
			{
				if ((this._DenseRank != value))
				{
					this.OnDenseRankChanging(value);
					this.SendPropertyChanging();
					this._DenseRank = value;
					this.SendPropertyChanged("DenseRank");
					this.OnDenseRankChanged();
				}
			}
		}
		
		[Column(Storage="_NTile", DbType="TinyInt NOT NULL")]
		public byte NTile
		{
			get
			{
				return this._NTile;
			}
			set
			{
				if ((this._NTile != value))
				{
					this.OnNTileChanging(value);
					this.SendPropertyChanging();
					this._NTile = value;
					this.SendPropertyChanged("NTile");
					this.OnNTileChanged();
				}
			}
		}
		
		[Association(Name="Extension_Exceptions_COUNT_BY_EXTENSION2", Storage="_Extension", ThisKey="Extension2", OtherKey="Extension1", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Extension Extension
		{
			get
			{
				return this._Extension.Entity;
			}
			set
			{
				Extension previousValue = this._Extension.Entity;
				if (((previousValue != value) 
							|| (this._Extension.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Extension.Entity = null;
						previousValue.Exceptions_COUNT_BY_EXTENSION2 = null;
					}
					this._Extension.Entity = value;
					if ((value != null))
					{
						value.Exceptions_COUNT_BY_EXTENSION2 = this;
						this._Extension2 = value.Extension1;
					}
					else
					{
						this._Extension2 = default(string);
					}
					this.SendPropertyChanged("Extension");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="rpt.Exceptions_COUNT_BY_EXTENSIONS")]
	public partial class Exceptions_COUNT_BY_EXTENSION
	{
		
		private short _RowNumber;
		
		private System.DateTime _InitiallyCreated;
		
		private System.DateTime _LastCreated;
		
		private string _Extension1;
		
		private string _Extension2;
		
		private int _Count;
		
		private short _DaysSinceInitiallyDiscovered;
		
		private short _DaysSinceLastDiscovered;
		
		private double _Strength;
		
		private short _Rank;
		
		private short _DenseRank;
		
		private byte _NTile;
		
		public Exceptions_COUNT_BY_EXTENSION()
		{
		}
		
		[Column(Storage="_RowNumber", DbType="SmallInt NOT NULL")]
		public short RowNumber
		{
			get
			{
				return this._RowNumber;
			}
			set
			{
				if ((this._RowNumber != value))
				{
					this._RowNumber = value;
				}
			}
		}
		
		[Column(Storage="_InitiallyCreated", DbType="DateTime NOT NULL")]
		public System.DateTime InitiallyCreated
		{
			get
			{
				return this._InitiallyCreated;
			}
			set
			{
				if ((this._InitiallyCreated != value))
				{
					this._InitiallyCreated = value;
				}
			}
		}
		
		[Column(Storage="_LastCreated", DbType="DateTime NOT NULL")]
		public System.DateTime LastCreated
		{
			get
			{
				return this._LastCreated;
			}
			set
			{
				if ((this._LastCreated != value))
				{
					this._LastCreated = value;
				}
			}
		}
		
		[Column(Storage="_Extension1", DbType="VarChar(884) NOT NULL", CanBeNull=false)]
		public string Extension1
		{
			get
			{
				return this._Extension1;
			}
			set
			{
				if ((this._Extension1 != value))
				{
					this._Extension1 = value;
				}
			}
		}
		
		[Column(Storage="_Extension2", DbType="VarChar(884) NOT NULL", CanBeNull=false)]
		public string Extension2
		{
			get
			{
				return this._Extension2;
			}
			set
			{
				if ((this._Extension2 != value))
				{
					this._Extension2 = value;
				}
			}
		}
		
		[Column(Storage="_Count", DbType="Int NOT NULL")]
		public int Count
		{
			get
			{
				return this._Count;
			}
			set
			{
				if ((this._Count != value))
				{
					this._Count = value;
				}
			}
		}
		
		[Column(Storage="_DaysSinceInitiallyDiscovered", DbType="SmallInt NOT NULL")]
		public short DaysSinceInitiallyDiscovered
		{
			get
			{
				return this._DaysSinceInitiallyDiscovered;
			}
			set
			{
				if ((this._DaysSinceInitiallyDiscovered != value))
				{
					this._DaysSinceInitiallyDiscovered = value;
				}
			}
		}
		
		[Column(Storage="_DaysSinceLastDiscovered", DbType="SmallInt NOT NULL")]
		public short DaysSinceLastDiscovered
		{
			get
			{
				return this._DaysSinceLastDiscovered;
			}
			set
			{
				if ((this._DaysSinceLastDiscovered != value))
				{
					this._DaysSinceLastDiscovered = value;
				}
			}
		}
		
		[Column(Storage="_Strength", DbType="Float NOT NULL")]
		public double Strength
		{
			get
			{
				return this._Strength;
			}
			set
			{
				if ((this._Strength != value))
				{
					this._Strength = value;
				}
			}
		}
		
		[Column(Storage="_Rank", DbType="SmallInt NOT NULL")]
		public short Rank
		{
			get
			{
				return this._Rank;
			}
			set
			{
				if ((this._Rank != value))
				{
					this._Rank = value;
				}
			}
		}
		
		[Column(Storage="_DenseRank", DbType="SmallInt NOT NULL")]
		public short DenseRank
		{
			get
			{
				return this._DenseRank;
			}
			set
			{
				if ((this._DenseRank != value))
				{
					this._DenseRank = value;
				}
			}
		}
		
		[Column(Storage="_NTile", DbType="TinyInt NOT NULL")]
		public byte NTile
		{
			get
			{
				return this._NTile;
			}
			set
			{
				if ((this._NTile != value))
				{
					this._NTile = value;
				}
			}
		}
	}
	
	[Table(Name="rpt.Exceptions_COUNT_BY_HOST1")]
	public partial class Exceptions_COUNT_BY_HOST1 : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private short _RowNumber;
		
		private System.DateTime _InitiallyCreated;
		
		private System.DateTime _LastCreated;
		
		private string _Host1;
		
		private int _Count;
		
		private short _DaysSinceInitiallyDiscovered;
		
		private short _DaysSinceLastDiscovered;
		
		private double _Strength;
		
		private short _Rank;
		
		private short _DenseRank;
		
		private byte _NTile;
		
		private EntityRef<Host> _Host;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRowNumberChanging(short value);
    partial void OnRowNumberChanged();
    partial void OnInitiallyCreatedChanging(System.DateTime value);
    partial void OnInitiallyCreatedChanged();
    partial void OnLastCreatedChanging(System.DateTime value);
    partial void OnLastCreatedChanged();
    partial void OnHost1Changing(string value);
    partial void OnHost1Changed();
    partial void OnCountChanging(int value);
    partial void OnCountChanged();
    partial void OnDaysSinceInitiallyDiscoveredChanging(short value);
    partial void OnDaysSinceInitiallyDiscoveredChanged();
    partial void OnDaysSinceLastDiscoveredChanging(short value);
    partial void OnDaysSinceLastDiscoveredChanged();
    partial void OnStrengthChanging(double value);
    partial void OnStrengthChanged();
    partial void OnRankChanging(short value);
    partial void OnRankChanged();
    partial void OnDenseRankChanging(short value);
    partial void OnDenseRankChanged();
    partial void OnNTileChanging(byte value);
    partial void OnNTileChanged();
    #endregion
		
		public Exceptions_COUNT_BY_HOST1()
		{
			this._Host = default(EntityRef<Host>);
			OnCreated();
		}
		
		[Column(Storage="_RowNumber", DbType="SmallInt NOT NULL")]
		public short RowNumber
		{
			get
			{
				return this._RowNumber;
			}
			set
			{
				if ((this._RowNumber != value))
				{
					this.OnRowNumberChanging(value);
					this.SendPropertyChanging();
					this._RowNumber = value;
					this.SendPropertyChanged("RowNumber");
					this.OnRowNumberChanged();
				}
			}
		}
		
		[Column(Storage="_InitiallyCreated", DbType="DateTime NOT NULL")]
		public System.DateTime InitiallyCreated
		{
			get
			{
				return this._InitiallyCreated;
			}
			set
			{
				if ((this._InitiallyCreated != value))
				{
					this.OnInitiallyCreatedChanging(value);
					this.SendPropertyChanging();
					this._InitiallyCreated = value;
					this.SendPropertyChanged("InitiallyCreated");
					this.OnInitiallyCreatedChanged();
				}
			}
		}
		
		[Column(Storage="_LastCreated", DbType="DateTime NOT NULL")]
		public System.DateTime LastCreated
		{
			get
			{
				return this._LastCreated;
			}
			set
			{
				if ((this._LastCreated != value))
				{
					this.OnLastCreatedChanging(value);
					this.SendPropertyChanging();
					this._LastCreated = value;
					this.SendPropertyChanged("LastCreated");
					this.OnLastCreatedChanged();
				}
			}
		}
		
		[Column(Storage="_Host1", DbType="VarChar(884) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Host1
		{
			get
			{
				return this._Host1;
			}
			set
			{
				if ((this._Host1 != value))
				{
					if (this._Host.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnHost1Changing(value);
					this.SendPropertyChanging();
					this._Host1 = value;
					this.SendPropertyChanged("Host1");
					this.OnHost1Changed();
				}
			}
		}
		
		[Column(Storage="_Count", DbType="Int NOT NULL")]
		public int Count
		{
			get
			{
				return this._Count;
			}
			set
			{
				if ((this._Count != value))
				{
					this.OnCountChanging(value);
					this.SendPropertyChanging();
					this._Count = value;
					this.SendPropertyChanged("Count");
					this.OnCountChanged();
				}
			}
		}
		
		[Column(Storage="_DaysSinceInitiallyDiscovered", DbType="SmallInt NOT NULL")]
		public short DaysSinceInitiallyDiscovered
		{
			get
			{
				return this._DaysSinceInitiallyDiscovered;
			}
			set
			{
				if ((this._DaysSinceInitiallyDiscovered != value))
				{
					this.OnDaysSinceInitiallyDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._DaysSinceInitiallyDiscovered = value;
					this.SendPropertyChanged("DaysSinceInitiallyDiscovered");
					this.OnDaysSinceInitiallyDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_DaysSinceLastDiscovered", DbType="SmallInt NOT NULL")]
		public short DaysSinceLastDiscovered
		{
			get
			{
				return this._DaysSinceLastDiscovered;
			}
			set
			{
				if ((this._DaysSinceLastDiscovered != value))
				{
					this.OnDaysSinceLastDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._DaysSinceLastDiscovered = value;
					this.SendPropertyChanged("DaysSinceLastDiscovered");
					this.OnDaysSinceLastDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_Strength", DbType="Float NOT NULL")]
		public double Strength
		{
			get
			{
				return this._Strength;
			}
			set
			{
				if ((this._Strength != value))
				{
					this.OnStrengthChanging(value);
					this.SendPropertyChanging();
					this._Strength = value;
					this.SendPropertyChanged("Strength");
					this.OnStrengthChanged();
				}
			}
		}
		
		[Column(Storage="_Rank", DbType="SmallInt NOT NULL")]
		public short Rank
		{
			get
			{
				return this._Rank;
			}
			set
			{
				if ((this._Rank != value))
				{
					this.OnRankChanging(value);
					this.SendPropertyChanging();
					this._Rank = value;
					this.SendPropertyChanged("Rank");
					this.OnRankChanged();
				}
			}
		}
		
		[Column(Storage="_DenseRank", DbType="SmallInt NOT NULL")]
		public short DenseRank
		{
			get
			{
				return this._DenseRank;
			}
			set
			{
				if ((this._DenseRank != value))
				{
					this.OnDenseRankChanging(value);
					this.SendPropertyChanging();
					this._DenseRank = value;
					this.SendPropertyChanged("DenseRank");
					this.OnDenseRankChanged();
				}
			}
		}
		
		[Column(Storage="_NTile", DbType="TinyInt NOT NULL")]
		public byte NTile
		{
			get
			{
				return this._NTile;
			}
			set
			{
				if ((this._NTile != value))
				{
					this.OnNTileChanging(value);
					this.SendPropertyChanging();
					this._NTile = value;
					this.SendPropertyChanged("NTile");
					this.OnNTileChanged();
				}
			}
		}
		
		[Association(Name="Host_Exceptions_COUNT_BY_HOST1", Storage="_Host", ThisKey="Host1", OtherKey="Host1", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Host Host
		{
			get
			{
				return this._Host.Entity;
			}
			set
			{
				Host previousValue = this._Host.Entity;
				if (((previousValue != value) 
							|| (this._Host.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Host.Entity = null;
						previousValue.Exceptions_COUNT_BY_HOST1 = null;
					}
					this._Host.Entity = value;
					if ((value != null))
					{
						value.Exceptions_COUNT_BY_HOST1 = this;
						this._Host1 = value.Host1;
					}
					else
					{
						this._Host1 = default(string);
					}
					this.SendPropertyChanged("Host");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="rpt.Exceptions_COUNT_BY_HOST2")]
	public partial class Exceptions_COUNT_BY_HOST2 : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private short _RowNumber;
		
		private System.DateTime _InitiallyCreated;
		
		private System.DateTime _LastCreated;
		
		private string _Host2;
		
		private int _Count;
		
		private short _DaysSinceInitiallyDiscovered;
		
		private short _DaysSinceLastDiscovered;
		
		private double _Strength;
		
		private short _Rank;
		
		private short _DenseRank;
		
		private byte _NTile;
		
		private EntityRef<Host> _Host;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRowNumberChanging(short value);
    partial void OnRowNumberChanged();
    partial void OnInitiallyCreatedChanging(System.DateTime value);
    partial void OnInitiallyCreatedChanged();
    partial void OnLastCreatedChanging(System.DateTime value);
    partial void OnLastCreatedChanged();
    partial void OnHost2Changing(string value);
    partial void OnHost2Changed();
    partial void OnCountChanging(int value);
    partial void OnCountChanged();
    partial void OnDaysSinceInitiallyDiscoveredChanging(short value);
    partial void OnDaysSinceInitiallyDiscoveredChanged();
    partial void OnDaysSinceLastDiscoveredChanging(short value);
    partial void OnDaysSinceLastDiscoveredChanged();
    partial void OnStrengthChanging(double value);
    partial void OnStrengthChanged();
    partial void OnRankChanging(short value);
    partial void OnRankChanged();
    partial void OnDenseRankChanging(short value);
    partial void OnDenseRankChanged();
    partial void OnNTileChanging(byte value);
    partial void OnNTileChanged();
    #endregion
		
		public Exceptions_COUNT_BY_HOST2()
		{
			this._Host = default(EntityRef<Host>);
			OnCreated();
		}
		
		[Column(Storage="_RowNumber", DbType="SmallInt NOT NULL")]
		public short RowNumber
		{
			get
			{
				return this._RowNumber;
			}
			set
			{
				if ((this._RowNumber != value))
				{
					this.OnRowNumberChanging(value);
					this.SendPropertyChanging();
					this._RowNumber = value;
					this.SendPropertyChanged("RowNumber");
					this.OnRowNumberChanged();
				}
			}
		}
		
		[Column(Storage="_InitiallyCreated", DbType="DateTime NOT NULL")]
		public System.DateTime InitiallyCreated
		{
			get
			{
				return this._InitiallyCreated;
			}
			set
			{
				if ((this._InitiallyCreated != value))
				{
					this.OnInitiallyCreatedChanging(value);
					this.SendPropertyChanging();
					this._InitiallyCreated = value;
					this.SendPropertyChanged("InitiallyCreated");
					this.OnInitiallyCreatedChanged();
				}
			}
		}
		
		[Column(Storage="_LastCreated", DbType="DateTime NOT NULL")]
		public System.DateTime LastCreated
		{
			get
			{
				return this._LastCreated;
			}
			set
			{
				if ((this._LastCreated != value))
				{
					this.OnLastCreatedChanging(value);
					this.SendPropertyChanging();
					this._LastCreated = value;
					this.SendPropertyChanged("LastCreated");
					this.OnLastCreatedChanged();
				}
			}
		}
		
		[Column(Storage="_Host2", DbType="VarChar(884) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Host2
		{
			get
			{
				return this._Host2;
			}
			set
			{
				if ((this._Host2 != value))
				{
					if (this._Host.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnHost2Changing(value);
					this.SendPropertyChanging();
					this._Host2 = value;
					this.SendPropertyChanged("Host2");
					this.OnHost2Changed();
				}
			}
		}
		
		[Column(Storage="_Count", DbType="Int NOT NULL")]
		public int Count
		{
			get
			{
				return this._Count;
			}
			set
			{
				if ((this._Count != value))
				{
					this.OnCountChanging(value);
					this.SendPropertyChanging();
					this._Count = value;
					this.SendPropertyChanged("Count");
					this.OnCountChanged();
				}
			}
		}
		
		[Column(Storage="_DaysSinceInitiallyDiscovered", DbType="SmallInt NOT NULL")]
		public short DaysSinceInitiallyDiscovered
		{
			get
			{
				return this._DaysSinceInitiallyDiscovered;
			}
			set
			{
				if ((this._DaysSinceInitiallyDiscovered != value))
				{
					this.OnDaysSinceInitiallyDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._DaysSinceInitiallyDiscovered = value;
					this.SendPropertyChanged("DaysSinceInitiallyDiscovered");
					this.OnDaysSinceInitiallyDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_DaysSinceLastDiscovered", DbType="SmallInt NOT NULL")]
		public short DaysSinceLastDiscovered
		{
			get
			{
				return this._DaysSinceLastDiscovered;
			}
			set
			{
				if ((this._DaysSinceLastDiscovered != value))
				{
					this.OnDaysSinceLastDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._DaysSinceLastDiscovered = value;
					this.SendPropertyChanged("DaysSinceLastDiscovered");
					this.OnDaysSinceLastDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_Strength", DbType="Float NOT NULL")]
		public double Strength
		{
			get
			{
				return this._Strength;
			}
			set
			{
				if ((this._Strength != value))
				{
					this.OnStrengthChanging(value);
					this.SendPropertyChanging();
					this._Strength = value;
					this.SendPropertyChanged("Strength");
					this.OnStrengthChanged();
				}
			}
		}
		
		[Column(Storage="_Rank", DbType="SmallInt NOT NULL")]
		public short Rank
		{
			get
			{
				return this._Rank;
			}
			set
			{
				if ((this._Rank != value))
				{
					this.OnRankChanging(value);
					this.SendPropertyChanging();
					this._Rank = value;
					this.SendPropertyChanged("Rank");
					this.OnRankChanged();
				}
			}
		}
		
		[Column(Storage="_DenseRank", DbType="SmallInt NOT NULL")]
		public short DenseRank
		{
			get
			{
				return this._DenseRank;
			}
			set
			{
				if ((this._DenseRank != value))
				{
					this.OnDenseRankChanging(value);
					this.SendPropertyChanging();
					this._DenseRank = value;
					this.SendPropertyChanged("DenseRank");
					this.OnDenseRankChanged();
				}
			}
		}
		
		[Column(Storage="_NTile", DbType="TinyInt NOT NULL")]
		public byte NTile
		{
			get
			{
				return this._NTile;
			}
			set
			{
				if ((this._NTile != value))
				{
					this.OnNTileChanging(value);
					this.SendPropertyChanging();
					this._NTile = value;
					this.SendPropertyChanged("NTile");
					this.OnNTileChanged();
				}
			}
		}
		
		[Association(Name="Host_Exceptions_COUNT_BY_HOST2", Storage="_Host", ThisKey="Host2", OtherKey="Host1", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Host Host
		{
			get
			{
				return this._Host.Entity;
			}
			set
			{
				Host previousValue = this._Host.Entity;
				if (((previousValue != value) 
							|| (this._Host.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Host.Entity = null;
						previousValue.Exceptions_COUNT_BY_HOST2 = null;
					}
					this._Host.Entity = value;
					if ((value != null))
					{
						value.Exceptions_COUNT_BY_HOST2 = this;
						this._Host2 = value.Host1;
					}
					else
					{
						this._Host2 = default(string);
					}
					this.SendPropertyChanged("Host");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="rpt.Exceptions_COUNT_BY_HOSTS")]
	public partial class Exceptions_COUNT_BY_HOST
	{
		
		private short _RowNumber;
		
		private System.DateTime _InitiallyCreated;
		
		private System.DateTime _LastCreated;
		
		private string _Host1;
		
		private string _Host2;
		
		private int _Count;
		
		private short _DaysSinceInitiallyDiscovered;
		
		private short _DaysSinceLastDiscovered;
		
		private double _Strength;
		
		private short _Rank;
		
		private short _DenseRank;
		
		private byte _NTile;
		
		public Exceptions_COUNT_BY_HOST()
		{
		}
		
		[Column(Storage="_RowNumber", DbType="SmallInt NOT NULL")]
		public short RowNumber
		{
			get
			{
				return this._RowNumber;
			}
			set
			{
				if ((this._RowNumber != value))
				{
					this._RowNumber = value;
				}
			}
		}
		
		[Column(Storage="_InitiallyCreated", DbType="DateTime NOT NULL")]
		public System.DateTime InitiallyCreated
		{
			get
			{
				return this._InitiallyCreated;
			}
			set
			{
				if ((this._InitiallyCreated != value))
				{
					this._InitiallyCreated = value;
				}
			}
		}
		
		[Column(Storage="_LastCreated", DbType="DateTime NOT NULL")]
		public System.DateTime LastCreated
		{
			get
			{
				return this._LastCreated;
			}
			set
			{
				if ((this._LastCreated != value))
				{
					this._LastCreated = value;
				}
			}
		}
		
		[Column(Storage="_Host1", DbType="VarChar(884) NOT NULL", CanBeNull=false)]
		public string Host1
		{
			get
			{
				return this._Host1;
			}
			set
			{
				if ((this._Host1 != value))
				{
					this._Host1 = value;
				}
			}
		}
		
		[Column(Storage="_Host2", DbType="VarChar(884) NOT NULL", CanBeNull=false)]
		public string Host2
		{
			get
			{
				return this._Host2;
			}
			set
			{
				if ((this._Host2 != value))
				{
					this._Host2 = value;
				}
			}
		}
		
		[Column(Storage="_Count", DbType="Int NOT NULL")]
		public int Count
		{
			get
			{
				return this._Count;
			}
			set
			{
				if ((this._Count != value))
				{
					this._Count = value;
				}
			}
		}
		
		[Column(Storage="_DaysSinceInitiallyDiscovered", DbType="SmallInt NOT NULL")]
		public short DaysSinceInitiallyDiscovered
		{
			get
			{
				return this._DaysSinceInitiallyDiscovered;
			}
			set
			{
				if ((this._DaysSinceInitiallyDiscovered != value))
				{
					this._DaysSinceInitiallyDiscovered = value;
				}
			}
		}
		
		[Column(Storage="_DaysSinceLastDiscovered", DbType="SmallInt NOT NULL")]
		public short DaysSinceLastDiscovered
		{
			get
			{
				return this._DaysSinceLastDiscovered;
			}
			set
			{
				if ((this._DaysSinceLastDiscovered != value))
				{
					this._DaysSinceLastDiscovered = value;
				}
			}
		}
		
		[Column(Storage="_Strength", DbType="Float NOT NULL")]
		public double Strength
		{
			get
			{
				return this._Strength;
			}
			set
			{
				if ((this._Strength != value))
				{
					this._Strength = value;
				}
			}
		}
		
		[Column(Storage="_Rank", DbType="SmallInt NOT NULL")]
		public short Rank
		{
			get
			{
				return this._Rank;
			}
			set
			{
				if ((this._Rank != value))
				{
					this._Rank = value;
				}
			}
		}
		
		[Column(Storage="_DenseRank", DbType="SmallInt NOT NULL")]
		public short DenseRank
		{
			get
			{
				return this._DenseRank;
			}
			set
			{
				if ((this._DenseRank != value))
				{
					this._DenseRank = value;
				}
			}
		}
		
		[Column(Storage="_NTile", DbType="TinyInt NOT NULL")]
		public byte NTile
		{
			get
			{
				return this._NTile;
			}
			set
			{
				if ((this._NTile != value))
				{
					this._NTile = value;
				}
			}
		}
	}
	
	[Table(Name="rpt.Exceptions_COUNT_BY_MESSAGE")]
	public partial class Exceptions_COUNT_BY_MESSAGE
	{
		
		private int _RowNumber;
		
		private System.DateTime _InitiallyCreated;
		
		private System.DateTime _LastCreated;
		
		private string _Message;
		
		private int _Count;
		
		private short _DaysSinceInitiallyDiscovered;
		
		private short _DaysSinceLastDiscovered;
		
		private double _Strength;
		
		private int _Rank;
		
		private int _DenseRank;
		
		private short _NTile;
		
		public Exceptions_COUNT_BY_MESSAGE()
		{
		}
		
		[Column(Storage="_RowNumber", DbType="Int NOT NULL")]
		public int RowNumber
		{
			get
			{
				return this._RowNumber;
			}
			set
			{
				if ((this._RowNumber != value))
				{
					this._RowNumber = value;
				}
			}
		}
		
		[Column(Storage="_InitiallyCreated", DbType="DateTime NOT NULL")]
		public System.DateTime InitiallyCreated
		{
			get
			{
				return this._InitiallyCreated;
			}
			set
			{
				if ((this._InitiallyCreated != value))
				{
					this._InitiallyCreated = value;
				}
			}
		}
		
		[Column(Storage="_LastCreated", DbType="DateTime NOT NULL")]
		public System.DateTime LastCreated
		{
			get
			{
				return this._LastCreated;
			}
			set
			{
				if ((this._LastCreated != value))
				{
					this._LastCreated = value;
				}
			}
		}
		
		[Column(Storage="_Message", DbType="VarChar(2000) NOT NULL", CanBeNull=false)]
		public string Message
		{
			get
			{
				return this._Message;
			}
			set
			{
				if ((this._Message != value))
				{
					this._Message = value;
				}
			}
		}
		
		[Column(Storage="_Count", DbType="Int NOT NULL")]
		public int Count
		{
			get
			{
				return this._Count;
			}
			set
			{
				if ((this._Count != value))
				{
					this._Count = value;
				}
			}
		}
		
		[Column(Storage="_DaysSinceInitiallyDiscovered", DbType="SmallInt NOT NULL")]
		public short DaysSinceInitiallyDiscovered
		{
			get
			{
				return this._DaysSinceInitiallyDiscovered;
			}
			set
			{
				if ((this._DaysSinceInitiallyDiscovered != value))
				{
					this._DaysSinceInitiallyDiscovered = value;
				}
			}
		}
		
		[Column(Storage="_DaysSinceLastDiscovered", DbType="SmallInt NOT NULL")]
		public short DaysSinceLastDiscovered
		{
			get
			{
				return this._DaysSinceLastDiscovered;
			}
			set
			{
				if ((this._DaysSinceLastDiscovered != value))
				{
					this._DaysSinceLastDiscovered = value;
				}
			}
		}
		
		[Column(Storage="_Strength", DbType="Float NOT NULL")]
		public double Strength
		{
			get
			{
				return this._Strength;
			}
			set
			{
				if ((this._Strength != value))
				{
					this._Strength = value;
				}
			}
		}
		
		[Column(Storage="_Rank", DbType="Int NOT NULL")]
		public int Rank
		{
			get
			{
				return this._Rank;
			}
			set
			{
				if ((this._Rank != value))
				{
					this._Rank = value;
				}
			}
		}
		
		[Column(Storage="_DenseRank", DbType="Int NOT NULL")]
		public int DenseRank
		{
			get
			{
				return this._DenseRank;
			}
			set
			{
				if ((this._DenseRank != value))
				{
					this._DenseRank = value;
				}
			}
		}
		
		[Column(Storage="_NTile", DbType="SmallInt NOT NULL")]
		public short NTile
		{
			get
			{
				return this._NTile;
			}
			set
			{
				if ((this._NTile != value))
				{
					this._NTile = value;
				}
			}
		}
	}
	
	[Table(Name="rpt.Exceptions_COUNT_BY_SCHEME1")]
	public partial class Exceptions_COUNT_BY_SCHEME1 : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private short _RowNumber;
		
		private System.DateTime _InitiallyCreated;
		
		private System.DateTime _LastCreated;
		
		private string _Scheme1;
		
		private int _Count;
		
		private short _DaysSinceInitiallyDiscovered;
		
		private short _DaysSinceLastDiscovered;
		
		private double _Strength;
		
		private short _Rank;
		
		private short _DenseRank;
		
		private byte _NTile;
		
		private EntityRef<Scheme> _Scheme;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRowNumberChanging(short value);
    partial void OnRowNumberChanged();
    partial void OnInitiallyCreatedChanging(System.DateTime value);
    partial void OnInitiallyCreatedChanged();
    partial void OnLastCreatedChanging(System.DateTime value);
    partial void OnLastCreatedChanged();
    partial void OnScheme1Changing(string value);
    partial void OnScheme1Changed();
    partial void OnCountChanging(int value);
    partial void OnCountChanged();
    partial void OnDaysSinceInitiallyDiscoveredChanging(short value);
    partial void OnDaysSinceInitiallyDiscoveredChanged();
    partial void OnDaysSinceLastDiscoveredChanging(short value);
    partial void OnDaysSinceLastDiscoveredChanged();
    partial void OnStrengthChanging(double value);
    partial void OnStrengthChanged();
    partial void OnRankChanging(short value);
    partial void OnRankChanged();
    partial void OnDenseRankChanging(short value);
    partial void OnDenseRankChanged();
    partial void OnNTileChanging(byte value);
    partial void OnNTileChanged();
    #endregion
		
		public Exceptions_COUNT_BY_SCHEME1()
		{
			this._Scheme = default(EntityRef<Scheme>);
			OnCreated();
		}
		
		[Column(Storage="_RowNumber", DbType="SmallInt NOT NULL")]
		public short RowNumber
		{
			get
			{
				return this._RowNumber;
			}
			set
			{
				if ((this._RowNumber != value))
				{
					this.OnRowNumberChanging(value);
					this.SendPropertyChanging();
					this._RowNumber = value;
					this.SendPropertyChanged("RowNumber");
					this.OnRowNumberChanged();
				}
			}
		}
		
		[Column(Storage="_InitiallyCreated", DbType="DateTime NOT NULL")]
		public System.DateTime InitiallyCreated
		{
			get
			{
				return this._InitiallyCreated;
			}
			set
			{
				if ((this._InitiallyCreated != value))
				{
					this.OnInitiallyCreatedChanging(value);
					this.SendPropertyChanging();
					this._InitiallyCreated = value;
					this.SendPropertyChanged("InitiallyCreated");
					this.OnInitiallyCreatedChanged();
				}
			}
		}
		
		[Column(Storage="_LastCreated", DbType="DateTime NOT NULL")]
		public System.DateTime LastCreated
		{
			get
			{
				return this._LastCreated;
			}
			set
			{
				if ((this._LastCreated != value))
				{
					this.OnLastCreatedChanging(value);
					this.SendPropertyChanging();
					this._LastCreated = value;
					this.SendPropertyChanged("LastCreated");
					this.OnLastCreatedChanged();
				}
			}
		}
		
		[Column(Storage="_Scheme1", DbType="VarChar(884) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Scheme1
		{
			get
			{
				return this._Scheme1;
			}
			set
			{
				if ((this._Scheme1 != value))
				{
					if (this._Scheme.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnScheme1Changing(value);
					this.SendPropertyChanging();
					this._Scheme1 = value;
					this.SendPropertyChanged("Scheme1");
					this.OnScheme1Changed();
				}
			}
		}
		
		[Column(Storage="_Count", DbType="Int NOT NULL")]
		public int Count
		{
			get
			{
				return this._Count;
			}
			set
			{
				if ((this._Count != value))
				{
					this.OnCountChanging(value);
					this.SendPropertyChanging();
					this._Count = value;
					this.SendPropertyChanged("Count");
					this.OnCountChanged();
				}
			}
		}
		
		[Column(Storage="_DaysSinceInitiallyDiscovered", DbType="SmallInt NOT NULL")]
		public short DaysSinceInitiallyDiscovered
		{
			get
			{
				return this._DaysSinceInitiallyDiscovered;
			}
			set
			{
				if ((this._DaysSinceInitiallyDiscovered != value))
				{
					this.OnDaysSinceInitiallyDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._DaysSinceInitiallyDiscovered = value;
					this.SendPropertyChanged("DaysSinceInitiallyDiscovered");
					this.OnDaysSinceInitiallyDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_DaysSinceLastDiscovered", DbType="SmallInt NOT NULL")]
		public short DaysSinceLastDiscovered
		{
			get
			{
				return this._DaysSinceLastDiscovered;
			}
			set
			{
				if ((this._DaysSinceLastDiscovered != value))
				{
					this.OnDaysSinceLastDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._DaysSinceLastDiscovered = value;
					this.SendPropertyChanged("DaysSinceLastDiscovered");
					this.OnDaysSinceLastDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_Strength", DbType="Float NOT NULL")]
		public double Strength
		{
			get
			{
				return this._Strength;
			}
			set
			{
				if ((this._Strength != value))
				{
					this.OnStrengthChanging(value);
					this.SendPropertyChanging();
					this._Strength = value;
					this.SendPropertyChanged("Strength");
					this.OnStrengthChanged();
				}
			}
		}
		
		[Column(Storage="_Rank", DbType="SmallInt NOT NULL")]
		public short Rank
		{
			get
			{
				return this._Rank;
			}
			set
			{
				if ((this._Rank != value))
				{
					this.OnRankChanging(value);
					this.SendPropertyChanging();
					this._Rank = value;
					this.SendPropertyChanged("Rank");
					this.OnRankChanged();
				}
			}
		}
		
		[Column(Storage="_DenseRank", DbType="SmallInt NOT NULL")]
		public short DenseRank
		{
			get
			{
				return this._DenseRank;
			}
			set
			{
				if ((this._DenseRank != value))
				{
					this.OnDenseRankChanging(value);
					this.SendPropertyChanging();
					this._DenseRank = value;
					this.SendPropertyChanged("DenseRank");
					this.OnDenseRankChanged();
				}
			}
		}
		
		[Column(Storage="_NTile", DbType="TinyInt NOT NULL")]
		public byte NTile
		{
			get
			{
				return this._NTile;
			}
			set
			{
				if ((this._NTile != value))
				{
					this.OnNTileChanging(value);
					this.SendPropertyChanging();
					this._NTile = value;
					this.SendPropertyChanged("NTile");
					this.OnNTileChanged();
				}
			}
		}
		
		[Association(Name="Scheme_Exceptions_COUNT_BY_SCHEME1", Storage="_Scheme", ThisKey="Scheme1", OtherKey="Scheme1", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Scheme Scheme
		{
			get
			{
				return this._Scheme.Entity;
			}
			set
			{
				Scheme previousValue = this._Scheme.Entity;
				if (((previousValue != value) 
							|| (this._Scheme.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Scheme.Entity = null;
						previousValue.Exceptions_COUNT_BY_SCHEME1 = null;
					}
					this._Scheme.Entity = value;
					if ((value != null))
					{
						value.Exceptions_COUNT_BY_SCHEME1 = this;
						this._Scheme1 = value.Scheme1;
					}
					else
					{
						this._Scheme1 = default(string);
					}
					this.SendPropertyChanged("Scheme");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="rpt.Exceptions_COUNT_BY_SCHEME2")]
	public partial class Exceptions_COUNT_BY_SCHEME2 : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private short _RowNumber;
		
		private System.DateTime _InitiallyCreated;
		
		private System.DateTime _LastCreated;
		
		private string _Scheme2;
		
		private int _Count;
		
		private short _DaysSinceInitiallyDiscovered;
		
		private short _DaysSinceLastDiscovered;
		
		private double _Strength;
		
		private short _Rank;
		
		private short _DenseRank;
		
		private byte _NTile;
		
		private EntityRef<Scheme> _Scheme;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRowNumberChanging(short value);
    partial void OnRowNumberChanged();
    partial void OnInitiallyCreatedChanging(System.DateTime value);
    partial void OnInitiallyCreatedChanged();
    partial void OnLastCreatedChanging(System.DateTime value);
    partial void OnLastCreatedChanged();
    partial void OnScheme2Changing(string value);
    partial void OnScheme2Changed();
    partial void OnCountChanging(int value);
    partial void OnCountChanged();
    partial void OnDaysSinceInitiallyDiscoveredChanging(short value);
    partial void OnDaysSinceInitiallyDiscoveredChanged();
    partial void OnDaysSinceLastDiscoveredChanging(short value);
    partial void OnDaysSinceLastDiscoveredChanged();
    partial void OnStrengthChanging(double value);
    partial void OnStrengthChanged();
    partial void OnRankChanging(short value);
    partial void OnRankChanged();
    partial void OnDenseRankChanging(short value);
    partial void OnDenseRankChanged();
    partial void OnNTileChanging(byte value);
    partial void OnNTileChanged();
    #endregion
		
		public Exceptions_COUNT_BY_SCHEME2()
		{
			this._Scheme = default(EntityRef<Scheme>);
			OnCreated();
		}
		
		[Column(Storage="_RowNumber", DbType="SmallInt NOT NULL")]
		public short RowNumber
		{
			get
			{
				return this._RowNumber;
			}
			set
			{
				if ((this._RowNumber != value))
				{
					this.OnRowNumberChanging(value);
					this.SendPropertyChanging();
					this._RowNumber = value;
					this.SendPropertyChanged("RowNumber");
					this.OnRowNumberChanged();
				}
			}
		}
		
		[Column(Storage="_InitiallyCreated", DbType="DateTime NOT NULL")]
		public System.DateTime InitiallyCreated
		{
			get
			{
				return this._InitiallyCreated;
			}
			set
			{
				if ((this._InitiallyCreated != value))
				{
					this.OnInitiallyCreatedChanging(value);
					this.SendPropertyChanging();
					this._InitiallyCreated = value;
					this.SendPropertyChanged("InitiallyCreated");
					this.OnInitiallyCreatedChanged();
				}
			}
		}
		
		[Column(Storage="_LastCreated", DbType="DateTime NOT NULL")]
		public System.DateTime LastCreated
		{
			get
			{
				return this._LastCreated;
			}
			set
			{
				if ((this._LastCreated != value))
				{
					this.OnLastCreatedChanging(value);
					this.SendPropertyChanging();
					this._LastCreated = value;
					this.SendPropertyChanged("LastCreated");
					this.OnLastCreatedChanged();
				}
			}
		}
		
		[Column(Storage="_Scheme2", DbType="VarChar(884) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Scheme2
		{
			get
			{
				return this._Scheme2;
			}
			set
			{
				if ((this._Scheme2 != value))
				{
					if (this._Scheme.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnScheme2Changing(value);
					this.SendPropertyChanging();
					this._Scheme2 = value;
					this.SendPropertyChanged("Scheme2");
					this.OnScheme2Changed();
				}
			}
		}
		
		[Column(Storage="_Count", DbType="Int NOT NULL")]
		public int Count
		{
			get
			{
				return this._Count;
			}
			set
			{
				if ((this._Count != value))
				{
					this.OnCountChanging(value);
					this.SendPropertyChanging();
					this._Count = value;
					this.SendPropertyChanged("Count");
					this.OnCountChanged();
				}
			}
		}
		
		[Column(Storage="_DaysSinceInitiallyDiscovered", DbType="SmallInt NOT NULL")]
		public short DaysSinceInitiallyDiscovered
		{
			get
			{
				return this._DaysSinceInitiallyDiscovered;
			}
			set
			{
				if ((this._DaysSinceInitiallyDiscovered != value))
				{
					this.OnDaysSinceInitiallyDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._DaysSinceInitiallyDiscovered = value;
					this.SendPropertyChanged("DaysSinceInitiallyDiscovered");
					this.OnDaysSinceInitiallyDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_DaysSinceLastDiscovered", DbType="SmallInt NOT NULL")]
		public short DaysSinceLastDiscovered
		{
			get
			{
				return this._DaysSinceLastDiscovered;
			}
			set
			{
				if ((this._DaysSinceLastDiscovered != value))
				{
					this.OnDaysSinceLastDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._DaysSinceLastDiscovered = value;
					this.SendPropertyChanged("DaysSinceLastDiscovered");
					this.OnDaysSinceLastDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_Strength", DbType="Float NOT NULL")]
		public double Strength
		{
			get
			{
				return this._Strength;
			}
			set
			{
				if ((this._Strength != value))
				{
					this.OnStrengthChanging(value);
					this.SendPropertyChanging();
					this._Strength = value;
					this.SendPropertyChanged("Strength");
					this.OnStrengthChanged();
				}
			}
		}
		
		[Column(Storage="_Rank", DbType="SmallInt NOT NULL")]
		public short Rank
		{
			get
			{
				return this._Rank;
			}
			set
			{
				if ((this._Rank != value))
				{
					this.OnRankChanging(value);
					this.SendPropertyChanging();
					this._Rank = value;
					this.SendPropertyChanged("Rank");
					this.OnRankChanged();
				}
			}
		}
		
		[Column(Storage="_DenseRank", DbType="SmallInt NOT NULL")]
		public short DenseRank
		{
			get
			{
				return this._DenseRank;
			}
			set
			{
				if ((this._DenseRank != value))
				{
					this.OnDenseRankChanging(value);
					this.SendPropertyChanging();
					this._DenseRank = value;
					this.SendPropertyChanged("DenseRank");
					this.OnDenseRankChanged();
				}
			}
		}
		
		[Column(Storage="_NTile", DbType="TinyInt NOT NULL")]
		public byte NTile
		{
			get
			{
				return this._NTile;
			}
			set
			{
				if ((this._NTile != value))
				{
					this.OnNTileChanging(value);
					this.SendPropertyChanging();
					this._NTile = value;
					this.SendPropertyChanged("NTile");
					this.OnNTileChanged();
				}
			}
		}
		
		[Association(Name="Scheme_Exceptions_COUNT_BY_SCHEME2", Storage="_Scheme", ThisKey="Scheme2", OtherKey="Scheme1", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Scheme Scheme
		{
			get
			{
				return this._Scheme.Entity;
			}
			set
			{
				Scheme previousValue = this._Scheme.Entity;
				if (((previousValue != value) 
							|| (this._Scheme.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Scheme.Entity = null;
						previousValue.Exceptions_COUNT_BY_SCHEME2 = null;
					}
					this._Scheme.Entity = value;
					if ((value != null))
					{
						value.Exceptions_COUNT_BY_SCHEME2 = this;
						this._Scheme2 = value.Scheme1;
					}
					else
					{
						this._Scheme2 = default(string);
					}
					this.SendPropertyChanged("Scheme");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="rpt.Exceptions_COUNT_BY_SCHEMES")]
	public partial class Exceptions_COUNT_BY_SCHEME
	{
		
		private short _RowNumber;
		
		private System.DateTime _InitiallyCreated;
		
		private System.DateTime _LastCreated;
		
		private string _Scheme1;
		
		private string _Scheme2;
		
		private int _Count;
		
		private short _DaysSinceInitiallyDiscovered;
		
		private short _DaysSinceLastDiscovered;
		
		private double _Strength;
		
		private short _Rank;
		
		private short _DenseRank;
		
		private byte _NTile;
		
		public Exceptions_COUNT_BY_SCHEME()
		{
		}
		
		[Column(Storage="_RowNumber", DbType="SmallInt NOT NULL")]
		public short RowNumber
		{
			get
			{
				return this._RowNumber;
			}
			set
			{
				if ((this._RowNumber != value))
				{
					this._RowNumber = value;
				}
			}
		}
		
		[Column(Storage="_InitiallyCreated", DbType="DateTime NOT NULL")]
		public System.DateTime InitiallyCreated
		{
			get
			{
				return this._InitiallyCreated;
			}
			set
			{
				if ((this._InitiallyCreated != value))
				{
					this._InitiallyCreated = value;
				}
			}
		}
		
		[Column(Storage="_LastCreated", DbType="DateTime NOT NULL")]
		public System.DateTime LastCreated
		{
			get
			{
				return this._LastCreated;
			}
			set
			{
				if ((this._LastCreated != value))
				{
					this._LastCreated = value;
				}
			}
		}
		
		[Column(Storage="_Scheme1", DbType="VarChar(884) NOT NULL", CanBeNull=false)]
		public string Scheme1
		{
			get
			{
				return this._Scheme1;
			}
			set
			{
				if ((this._Scheme1 != value))
				{
					this._Scheme1 = value;
				}
			}
		}
		
		[Column(Storage="_Scheme2", DbType="VarChar(884) NOT NULL", CanBeNull=false)]
		public string Scheme2
		{
			get
			{
				return this._Scheme2;
			}
			set
			{
				if ((this._Scheme2 != value))
				{
					this._Scheme2 = value;
				}
			}
		}
		
		[Column(Storage="_Count", DbType="Int NOT NULL")]
		public int Count
		{
			get
			{
				return this._Count;
			}
			set
			{
				if ((this._Count != value))
				{
					this._Count = value;
				}
			}
		}
		
		[Column(Storage="_DaysSinceInitiallyDiscovered", DbType="SmallInt NOT NULL")]
		public short DaysSinceInitiallyDiscovered
		{
			get
			{
				return this._DaysSinceInitiallyDiscovered;
			}
			set
			{
				if ((this._DaysSinceInitiallyDiscovered != value))
				{
					this._DaysSinceInitiallyDiscovered = value;
				}
			}
		}
		
		[Column(Storage="_DaysSinceLastDiscovered", DbType="SmallInt NOT NULL")]
		public short DaysSinceLastDiscovered
		{
			get
			{
				return this._DaysSinceLastDiscovered;
			}
			set
			{
				if ((this._DaysSinceLastDiscovered != value))
				{
					this._DaysSinceLastDiscovered = value;
				}
			}
		}
		
		[Column(Storage="_Strength", DbType="Float NOT NULL")]
		public double Strength
		{
			get
			{
				return this._Strength;
			}
			set
			{
				if ((this._Strength != value))
				{
					this._Strength = value;
				}
			}
		}
		
		[Column(Storage="_Rank", DbType="SmallInt NOT NULL")]
		public short Rank
		{
			get
			{
				return this._Rank;
			}
			set
			{
				if ((this._Rank != value))
				{
					this._Rank = value;
				}
			}
		}
		
		[Column(Storage="_DenseRank", DbType="SmallInt NOT NULL")]
		public short DenseRank
		{
			get
			{
				return this._DenseRank;
			}
			set
			{
				if ((this._DenseRank != value))
				{
					this._DenseRank = value;
				}
			}
		}
		
		[Column(Storage="_NTile", DbType="TinyInt NOT NULL")]
		public byte NTile
		{
			get
			{
				return this._NTile;
			}
			set
			{
				if ((this._NTile != value))
				{
					this._NTile = value;
				}
			}
		}
	}
	
	[Table(Name="rpt.Exceptions_COUNT_BY_SOURCE")]
	public partial class Exceptions_COUNT_BY_SOURCE : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private short _RowNumber;
		
		private System.DateTime _InitiallyCreated;
		
		private System.DateTime _LastCreated;
		
		private string _Source;
		
		private int _Count;
		
		private short _DaysSinceInitiallyDiscovered;
		
		private short _DaysSinceLastDiscovered;
		
		private double _Strength;
		
		private short _Rank;
		
		private short _DenseRank;
		
		private byte _NTile;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRowNumberChanging(short value);
    partial void OnRowNumberChanged();
    partial void OnInitiallyCreatedChanging(System.DateTime value);
    partial void OnInitiallyCreatedChanged();
    partial void OnLastCreatedChanging(System.DateTime value);
    partial void OnLastCreatedChanged();
    partial void OnSourceChanging(string value);
    partial void OnSourceChanged();
    partial void OnCountChanging(int value);
    partial void OnCountChanged();
    partial void OnDaysSinceInitiallyDiscoveredChanging(short value);
    partial void OnDaysSinceInitiallyDiscoveredChanged();
    partial void OnDaysSinceLastDiscoveredChanging(short value);
    partial void OnDaysSinceLastDiscoveredChanged();
    partial void OnStrengthChanging(double value);
    partial void OnStrengthChanged();
    partial void OnRankChanging(short value);
    partial void OnRankChanged();
    partial void OnDenseRankChanging(short value);
    partial void OnDenseRankChanged();
    partial void OnNTileChanging(byte value);
    partial void OnNTileChanged();
    #endregion
		
		public Exceptions_COUNT_BY_SOURCE()
		{
			OnCreated();
		}
		
		[Column(Storage="_RowNumber", DbType="SmallInt NOT NULL")]
		public short RowNumber
		{
			get
			{
				return this._RowNumber;
			}
			set
			{
				if ((this._RowNumber != value))
				{
					this.OnRowNumberChanging(value);
					this.SendPropertyChanging();
					this._RowNumber = value;
					this.SendPropertyChanged("RowNumber");
					this.OnRowNumberChanged();
				}
			}
		}
		
		[Column(Storage="_InitiallyCreated", DbType="DateTime NOT NULL")]
		public System.DateTime InitiallyCreated
		{
			get
			{
				return this._InitiallyCreated;
			}
			set
			{
				if ((this._InitiallyCreated != value))
				{
					this.OnInitiallyCreatedChanging(value);
					this.SendPropertyChanging();
					this._InitiallyCreated = value;
					this.SendPropertyChanged("InitiallyCreated");
					this.OnInitiallyCreatedChanged();
				}
			}
		}
		
		[Column(Storage="_LastCreated", DbType="DateTime NOT NULL")]
		public System.DateTime LastCreated
		{
			get
			{
				return this._LastCreated;
			}
			set
			{
				if ((this._LastCreated != value))
				{
					this.OnLastCreatedChanging(value);
					this.SendPropertyChanging();
					this._LastCreated = value;
					this.SendPropertyChanged("LastCreated");
					this.OnLastCreatedChanged();
				}
			}
		}
		
		[Column(Storage="_Source", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Source
		{
			get
			{
				return this._Source;
			}
			set
			{
				if ((this._Source != value))
				{
					this.OnSourceChanging(value);
					this.SendPropertyChanging();
					this._Source = value;
					this.SendPropertyChanged("Source");
					this.OnSourceChanged();
				}
			}
		}
		
		[Column(Storage="_Count", DbType="Int NOT NULL")]
		public int Count
		{
			get
			{
				return this._Count;
			}
			set
			{
				if ((this._Count != value))
				{
					this.OnCountChanging(value);
					this.SendPropertyChanging();
					this._Count = value;
					this.SendPropertyChanged("Count");
					this.OnCountChanged();
				}
			}
		}
		
		[Column(Storage="_DaysSinceInitiallyDiscovered", DbType="SmallInt NOT NULL")]
		public short DaysSinceInitiallyDiscovered
		{
			get
			{
				return this._DaysSinceInitiallyDiscovered;
			}
			set
			{
				if ((this._DaysSinceInitiallyDiscovered != value))
				{
					this.OnDaysSinceInitiallyDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._DaysSinceInitiallyDiscovered = value;
					this.SendPropertyChanged("DaysSinceInitiallyDiscovered");
					this.OnDaysSinceInitiallyDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_DaysSinceLastDiscovered", DbType="SmallInt NOT NULL")]
		public short DaysSinceLastDiscovered
		{
			get
			{
				return this._DaysSinceLastDiscovered;
			}
			set
			{
				if ((this._DaysSinceLastDiscovered != value))
				{
					this.OnDaysSinceLastDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._DaysSinceLastDiscovered = value;
					this.SendPropertyChanged("DaysSinceLastDiscovered");
					this.OnDaysSinceLastDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_Strength", DbType="Float NOT NULL")]
		public double Strength
		{
			get
			{
				return this._Strength;
			}
			set
			{
				if ((this._Strength != value))
				{
					this.OnStrengthChanging(value);
					this.SendPropertyChanging();
					this._Strength = value;
					this.SendPropertyChanged("Strength");
					this.OnStrengthChanged();
				}
			}
		}
		
		[Column(Storage="_Rank", DbType="SmallInt NOT NULL")]
		public short Rank
		{
			get
			{
				return this._Rank;
			}
			set
			{
				if ((this._Rank != value))
				{
					this.OnRankChanging(value);
					this.SendPropertyChanging();
					this._Rank = value;
					this.SendPropertyChanged("Rank");
					this.OnRankChanged();
				}
			}
		}
		
		[Column(Storage="_DenseRank", DbType="SmallInt NOT NULL")]
		public short DenseRank
		{
			get
			{
				return this._DenseRank;
			}
			set
			{
				if ((this._DenseRank != value))
				{
					this.OnDenseRankChanging(value);
					this.SendPropertyChanging();
					this._DenseRank = value;
					this.SendPropertyChanged("DenseRank");
					this.OnDenseRankChanged();
				}
			}
		}
		
		[Column(Storage="_NTile", DbType="TinyInt NOT NULL")]
		public byte NTile
		{
			get
			{
				return this._NTile;
			}
			set
			{
				if ((this._NTile != value))
				{
					this.OnNTileChanging(value);
					this.SendPropertyChanging();
					this._NTile = value;
					this.SendPropertyChanged("NTile");
					this.OnNTileChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="rpt.Exceptions_COUNT_BY_STACKTRACE")]
	public partial class Exceptions_COUNT_BY_STACKTRACE
	{
		
		private short _RowNumber;
		
		private System.DateTime _InitiallyCreated;
		
		private System.DateTime _LastCreated;
		
		private string _StackTrace;
		
		private int _Count;
		
		private short _DaysSinceInitiallyDiscovered;
		
		private short _DaysSinceLastDiscovered;
		
		private double _Strength;
		
		private short _Rank;
		
		private short _DenseRank;
		
		private byte _NTile;
		
		public Exceptions_COUNT_BY_STACKTRACE()
		{
		}
		
		[Column(Storage="_RowNumber", DbType="SmallInt NOT NULL")]
		public short RowNumber
		{
			get
			{
				return this._RowNumber;
			}
			set
			{
				if ((this._RowNumber != value))
				{
					this._RowNumber = value;
				}
			}
		}
		
		[Column(Storage="_InitiallyCreated", DbType="DateTime NOT NULL")]
		public System.DateTime InitiallyCreated
		{
			get
			{
				return this._InitiallyCreated;
			}
			set
			{
				if ((this._InitiallyCreated != value))
				{
					this._InitiallyCreated = value;
				}
			}
		}
		
		[Column(Storage="_LastCreated", DbType="DateTime NOT NULL")]
		public System.DateTime LastCreated
		{
			get
			{
				return this._LastCreated;
			}
			set
			{
				if ((this._LastCreated != value))
				{
					this._LastCreated = value;
				}
			}
		}
		
		[Column(Storage="_StackTrace", DbType="VarChar(4000) NOT NULL", CanBeNull=false)]
		public string StackTrace
		{
			get
			{
				return this._StackTrace;
			}
			set
			{
				if ((this._StackTrace != value))
				{
					this._StackTrace = value;
				}
			}
		}
		
		[Column(Storage="_Count", DbType="Int NOT NULL")]
		public int Count
		{
			get
			{
				return this._Count;
			}
			set
			{
				if ((this._Count != value))
				{
					this._Count = value;
				}
			}
		}
		
		[Column(Storage="_DaysSinceInitiallyDiscovered", DbType="SmallInt NOT NULL")]
		public short DaysSinceInitiallyDiscovered
		{
			get
			{
				return this._DaysSinceInitiallyDiscovered;
			}
			set
			{
				if ((this._DaysSinceInitiallyDiscovered != value))
				{
					this._DaysSinceInitiallyDiscovered = value;
				}
			}
		}
		
		[Column(Storage="_DaysSinceLastDiscovered", DbType="SmallInt NOT NULL")]
		public short DaysSinceLastDiscovered
		{
			get
			{
				return this._DaysSinceLastDiscovered;
			}
			set
			{
				if ((this._DaysSinceLastDiscovered != value))
				{
					this._DaysSinceLastDiscovered = value;
				}
			}
		}
		
		[Column(Storage="_Strength", DbType="Float NOT NULL")]
		public double Strength
		{
			get
			{
				return this._Strength;
			}
			set
			{
				if ((this._Strength != value))
				{
					this._Strength = value;
				}
			}
		}
		
		[Column(Storage="_Rank", DbType="SmallInt NOT NULL")]
		public short Rank
		{
			get
			{
				return this._Rank;
			}
			set
			{
				if ((this._Rank != value))
				{
					this._Rank = value;
				}
			}
		}
		
		[Column(Storage="_DenseRank", DbType="SmallInt NOT NULL")]
		public short DenseRank
		{
			get
			{
				return this._DenseRank;
			}
			set
			{
				if ((this._DenseRank != value))
				{
					this._DenseRank = value;
				}
			}
		}
		
		[Column(Storage="_NTile", DbType="TinyInt NOT NULL")]
		public byte NTile
		{
			get
			{
				return this._NTile;
			}
			set
			{
				if ((this._NTile != value))
				{
					this._NTile = value;
				}
			}
		}
	}
	
	[Table(Name="rpt.Files_COUNT_BY_ABSOLUTEURI")]
	public partial class Files_COUNT_BY_ABSOLUTEURI : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RowNumber;
		
		private long _FileID;
		
		private int _Count;
		
		private int _Rank;
		
		private int _DenseRank;
		
		private byte _NTile;
		
		private EntityRef<File> _File;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRowNumberChanging(int value);
    partial void OnRowNumberChanged();
    partial void OnFileIDChanging(long value);
    partial void OnFileIDChanged();
    partial void OnCountChanging(int value);
    partial void OnCountChanged();
    partial void OnRankChanging(int value);
    partial void OnRankChanged();
    partial void OnDenseRankChanging(int value);
    partial void OnDenseRankChanged();
    partial void OnNTileChanging(byte value);
    partial void OnNTileChanged();
    #endregion
		
		public Files_COUNT_BY_ABSOLUTEURI()
		{
			this._File = default(EntityRef<File>);
			OnCreated();
		}
		
		[Column(Storage="_RowNumber", DbType="Int NOT NULL")]
		public int RowNumber
		{
			get
			{
				return this._RowNumber;
			}
			set
			{
				if ((this._RowNumber != value))
				{
					this.OnRowNumberChanging(value);
					this.SendPropertyChanging();
					this._RowNumber = value;
					this.SendPropertyChanged("RowNumber");
					this.OnRowNumberChanged();
				}
			}
		}
		
		[Column(Storage="_FileID", DbType="BigInt NOT NULL", IsPrimaryKey=true)]
		public long FileID
		{
			get
			{
				return this._FileID;
			}
			set
			{
				if ((this._FileID != value))
				{
					if (this._File.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFileIDChanging(value);
					this.SendPropertyChanging();
					this._FileID = value;
					this.SendPropertyChanged("FileID");
					this.OnFileIDChanged();
				}
			}
		}
		
		[Column(Storage="_Count", DbType="Int NOT NULL")]
		public int Count
		{
			get
			{
				return this._Count;
			}
			set
			{
				if ((this._Count != value))
				{
					this.OnCountChanging(value);
					this.SendPropertyChanging();
					this._Count = value;
					this.SendPropertyChanged("Count");
					this.OnCountChanged();
				}
			}
		}
		
		[Column(Storage="_Rank", DbType="Int NOT NULL")]
		public int Rank
		{
			get
			{
				return this._Rank;
			}
			set
			{
				if ((this._Rank != value))
				{
					this.OnRankChanging(value);
					this.SendPropertyChanging();
					this._Rank = value;
					this.SendPropertyChanged("Rank");
					this.OnRankChanged();
				}
			}
		}
		
		[Column(Storage="_DenseRank", DbType="Int NOT NULL")]
		public int DenseRank
		{
			get
			{
				return this._DenseRank;
			}
			set
			{
				if ((this._DenseRank != value))
				{
					this.OnDenseRankChanging(value);
					this.SendPropertyChanging();
					this._DenseRank = value;
					this.SendPropertyChanged("DenseRank");
					this.OnDenseRankChanged();
				}
			}
		}
		
		[Column(Storage="_NTile", DbType="TinyInt NOT NULL")]
		public byte NTile
		{
			get
			{
				return this._NTile;
			}
			set
			{
				if ((this._NTile != value))
				{
					this.OnNTileChanging(value);
					this.SendPropertyChanging();
					this._NTile = value;
					this.SendPropertyChanged("NTile");
					this.OnNTileChanged();
				}
			}
		}
		
		[Association(Name="File_Files_COUNT_BY_ABSOLUTEURI", Storage="_File", ThisKey="FileID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public File File
		{
			get
			{
				return this._File.Entity;
			}
			set
			{
				File previousValue = this._File.Entity;
				if (((previousValue != value) 
							|| (this._File.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._File.Entity = null;
						previousValue.Files_COUNT_BY_ABSOLUTEURI = null;
					}
					this._File.Entity = value;
					if ((value != null))
					{
						value.Files_COUNT_BY_ABSOLUTEURI = this;
						this._FileID = value.ID;
					}
					else
					{
						this._FileID = default(long);
					}
					this.SendPropertyChanged("File");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="rpt.Files_COUNT_BY_DOMAIN")]
	public partial class Files_COUNT_BY_DOMAIN : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RowNumber;
		
		private int _DomainID;
		
		private int _Count;
		
		private int _Rank;
		
		private int _DenseRank;
		
		private byte _NTile;
		
		private EntityRef<Domain> _Domain;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRowNumberChanging(int value);
    partial void OnRowNumberChanged();
    partial void OnDomainIDChanging(int value);
    partial void OnDomainIDChanged();
    partial void OnCountChanging(int value);
    partial void OnCountChanged();
    partial void OnRankChanging(int value);
    partial void OnRankChanged();
    partial void OnDenseRankChanging(int value);
    partial void OnDenseRankChanged();
    partial void OnNTileChanging(byte value);
    partial void OnNTileChanged();
    #endregion
		
		public Files_COUNT_BY_DOMAIN()
		{
			this._Domain = default(EntityRef<Domain>);
			OnCreated();
		}
		
		[Column(Storage="_RowNumber", DbType="Int NOT NULL")]
		public int RowNumber
		{
			get
			{
				return this._RowNumber;
			}
			set
			{
				if ((this._RowNumber != value))
				{
					this.OnRowNumberChanging(value);
					this.SendPropertyChanging();
					this._RowNumber = value;
					this.SendPropertyChanged("RowNumber");
					this.OnRowNumberChanged();
				}
			}
		}
		
		[Column(Storage="_DomainID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int DomainID
		{
			get
			{
				return this._DomainID;
			}
			set
			{
				if ((this._DomainID != value))
				{
					if (this._Domain.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDomainIDChanging(value);
					this.SendPropertyChanging();
					this._DomainID = value;
					this.SendPropertyChanged("DomainID");
					this.OnDomainIDChanged();
				}
			}
		}
		
		[Column(Storage="_Count", DbType="Int NOT NULL")]
		public int Count
		{
			get
			{
				return this._Count;
			}
			set
			{
				if ((this._Count != value))
				{
					this.OnCountChanging(value);
					this.SendPropertyChanging();
					this._Count = value;
					this.SendPropertyChanged("Count");
					this.OnCountChanged();
				}
			}
		}
		
		[Column(Storage="_Rank", DbType="Int NOT NULL")]
		public int Rank
		{
			get
			{
				return this._Rank;
			}
			set
			{
				if ((this._Rank != value))
				{
					this.OnRankChanging(value);
					this.SendPropertyChanging();
					this._Rank = value;
					this.SendPropertyChanged("Rank");
					this.OnRankChanged();
				}
			}
		}
		
		[Column(Storage="_DenseRank", DbType="Int NOT NULL")]
		public int DenseRank
		{
			get
			{
				return this._DenseRank;
			}
			set
			{
				if ((this._DenseRank != value))
				{
					this.OnDenseRankChanging(value);
					this.SendPropertyChanging();
					this._DenseRank = value;
					this.SendPropertyChanged("DenseRank");
					this.OnDenseRankChanged();
				}
			}
		}
		
		[Column(Storage="_NTile", DbType="TinyInt NOT NULL")]
		public byte NTile
		{
			get
			{
				return this._NTile;
			}
			set
			{
				if ((this._NTile != value))
				{
					this.OnNTileChanging(value);
					this.SendPropertyChanging();
					this._NTile = value;
					this.SendPropertyChanged("NTile");
					this.OnNTileChanged();
				}
			}
		}
		
		[Association(Name="Domain_Files_COUNT_BY_DOMAIN", Storage="_Domain", ThisKey="DomainID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Domain Domain
		{
			get
			{
				return this._Domain.Entity;
			}
			set
			{
				Domain previousValue = this._Domain.Entity;
				if (((previousValue != value) 
							|| (this._Domain.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Domain.Entity = null;
						previousValue.Files_COUNT_BY_DOMAIN = null;
					}
					this._Domain.Entity = value;
					if ((value != null))
					{
						value.Files_COUNT_BY_DOMAIN = this;
						this._DomainID = value.ID;
					}
					else
					{
						this._DomainID = default(int);
					}
					this.SendPropertyChanged("Domain");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="rpt.Files_COUNT_BY_EXTENSION")]
	public partial class Files_COUNT_BY_EXTENSION : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RowNumber;
		
		private int _ExtensionID;
		
		private int _Count;
		
		private int _Rank;
		
		private int _DenseRank;
		
		private byte _NTile;
		
		private EntityRef<Extension> _Extension;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRowNumberChanging(int value);
    partial void OnRowNumberChanged();
    partial void OnExtensionIDChanging(int value);
    partial void OnExtensionIDChanged();
    partial void OnCountChanging(int value);
    partial void OnCountChanged();
    partial void OnRankChanging(int value);
    partial void OnRankChanged();
    partial void OnDenseRankChanging(int value);
    partial void OnDenseRankChanged();
    partial void OnNTileChanging(byte value);
    partial void OnNTileChanged();
    #endregion
		
		public Files_COUNT_BY_EXTENSION()
		{
			this._Extension = default(EntityRef<Extension>);
			OnCreated();
		}
		
		[Column(Storage="_RowNumber", DbType="Int NOT NULL")]
		public int RowNumber
		{
			get
			{
				return this._RowNumber;
			}
			set
			{
				if ((this._RowNumber != value))
				{
					this.OnRowNumberChanging(value);
					this.SendPropertyChanging();
					this._RowNumber = value;
					this.SendPropertyChanged("RowNumber");
					this.OnRowNumberChanged();
				}
			}
		}
		
		[Column(Storage="_ExtensionID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ExtensionID
		{
			get
			{
				return this._ExtensionID;
			}
			set
			{
				if ((this._ExtensionID != value))
				{
					if (this._Extension.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnExtensionIDChanging(value);
					this.SendPropertyChanging();
					this._ExtensionID = value;
					this.SendPropertyChanged("ExtensionID");
					this.OnExtensionIDChanged();
				}
			}
		}
		
		[Column(Storage="_Count", DbType="Int NOT NULL")]
		public int Count
		{
			get
			{
				return this._Count;
			}
			set
			{
				if ((this._Count != value))
				{
					this.OnCountChanging(value);
					this.SendPropertyChanging();
					this._Count = value;
					this.SendPropertyChanged("Count");
					this.OnCountChanged();
				}
			}
		}
		
		[Column(Storage="_Rank", DbType="Int NOT NULL")]
		public int Rank
		{
			get
			{
				return this._Rank;
			}
			set
			{
				if ((this._Rank != value))
				{
					this.OnRankChanging(value);
					this.SendPropertyChanging();
					this._Rank = value;
					this.SendPropertyChanged("Rank");
					this.OnRankChanged();
				}
			}
		}
		
		[Column(Storage="_DenseRank", DbType="Int NOT NULL")]
		public int DenseRank
		{
			get
			{
				return this._DenseRank;
			}
			set
			{
				if ((this._DenseRank != value))
				{
					this.OnDenseRankChanging(value);
					this.SendPropertyChanging();
					this._DenseRank = value;
					this.SendPropertyChanged("DenseRank");
					this.OnDenseRankChanged();
				}
			}
		}
		
		[Column(Storage="_NTile", DbType="TinyInt NOT NULL")]
		public byte NTile
		{
			get
			{
				return this._NTile;
			}
			set
			{
				if ((this._NTile != value))
				{
					this.OnNTileChanging(value);
					this.SendPropertyChanging();
					this._NTile = value;
					this.SendPropertyChanged("NTile");
					this.OnNTileChanged();
				}
			}
		}
		
		[Association(Name="Extension_Files_COUNT_BY_EXTENSION", Storage="_Extension", ThisKey="ExtensionID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Extension Extension
		{
			get
			{
				return this._Extension.Entity;
			}
			set
			{
				Extension previousValue = this._Extension.Entity;
				if (((previousValue != value) 
							|| (this._Extension.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Extension.Entity = null;
						previousValue.Files_COUNT_BY_EXTENSION = null;
					}
					this._Extension.Entity = value;
					if ((value != null))
					{
						value.Files_COUNT_BY_EXTENSION = this;
						this._ExtensionID = value.ID;
					}
					else
					{
						this._ExtensionID = default(int);
					}
					this.SendPropertyChanged("Extension");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="rpt.Files_COUNT_BY_FULLTEXTINDEXTYPE")]
	public partial class Files_COUNT_BY_FULLTEXTINDEXTYPE : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RowNumber;
		
		private string _FullTextIndexType;
		
		private int _Count;
		
		private int _Rank;
		
		private int _DenseRank;
		
		private byte _NTile;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRowNumberChanging(int value);
    partial void OnRowNumberChanged();
    partial void OnFullTextIndexTypeChanging(string value);
    partial void OnFullTextIndexTypeChanged();
    partial void OnCountChanging(int value);
    partial void OnCountChanged();
    partial void OnRankChanging(int value);
    partial void OnRankChanged();
    partial void OnDenseRankChanging(int value);
    partial void OnDenseRankChanged();
    partial void OnNTileChanging(byte value);
    partial void OnNTileChanged();
    #endregion
		
		public Files_COUNT_BY_FULLTEXTINDEXTYPE()
		{
			OnCreated();
		}
		
		[Column(Storage="_RowNumber", DbType="Int NOT NULL")]
		public int RowNumber
		{
			get
			{
				return this._RowNumber;
			}
			set
			{
				if ((this._RowNumber != value))
				{
					this.OnRowNumberChanging(value);
					this.SendPropertyChanging();
					this._RowNumber = value;
					this.SendPropertyChanged("RowNumber");
					this.OnRowNumberChanged();
				}
			}
		}
		
		[Column(Storage="_FullTextIndexType", DbType="VarChar(20) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string FullTextIndexType
		{
			get
			{
				return this._FullTextIndexType;
			}
			set
			{
				if ((this._FullTextIndexType != value))
				{
					this.OnFullTextIndexTypeChanging(value);
					this.SendPropertyChanging();
					this._FullTextIndexType = value;
					this.SendPropertyChanged("FullTextIndexType");
					this.OnFullTextIndexTypeChanged();
				}
			}
		}
		
		[Column(Storage="_Count", DbType="Int NOT NULL")]
		public int Count
		{
			get
			{
				return this._Count;
			}
			set
			{
				if ((this._Count != value))
				{
					this.OnCountChanging(value);
					this.SendPropertyChanging();
					this._Count = value;
					this.SendPropertyChanged("Count");
					this.OnCountChanged();
				}
			}
		}
		
		[Column(Storage="_Rank", DbType="Int NOT NULL")]
		public int Rank
		{
			get
			{
				return this._Rank;
			}
			set
			{
				if ((this._Rank != value))
				{
					this.OnRankChanging(value);
					this.SendPropertyChanging();
					this._Rank = value;
					this.SendPropertyChanged("Rank");
					this.OnRankChanged();
				}
			}
		}
		
		[Column(Storage="_DenseRank", DbType="Int NOT NULL")]
		public int DenseRank
		{
			get
			{
				return this._DenseRank;
			}
			set
			{
				if ((this._DenseRank != value))
				{
					this.OnDenseRankChanging(value);
					this.SendPropertyChanging();
					this._DenseRank = value;
					this.SendPropertyChanged("DenseRank");
					this.OnDenseRankChanged();
				}
			}
		}
		
		[Column(Storage="_NTile", DbType="TinyInt NOT NULL")]
		public byte NTile
		{
			get
			{
				return this._NTile;
			}
			set
			{
				if ((this._NTile != value))
				{
					this.OnNTileChanging(value);
					this.SendPropertyChanging();
					this._NTile = value;
					this.SendPropertyChanged("NTile");
					this.OnNTileChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="rpt.Files_COUNT_BY_HOST")]
	public partial class Files_COUNT_BY_HOST : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RowNumber;
		
		private int _HostID;
		
		private int _Count;
		
		private int _Rank;
		
		private int _DenseRank;
		
		private byte _NTile;
		
		private EntityRef<Host> _Host;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRowNumberChanging(int value);
    partial void OnRowNumberChanged();
    partial void OnHostIDChanging(int value);
    partial void OnHostIDChanged();
    partial void OnCountChanging(int value);
    partial void OnCountChanged();
    partial void OnRankChanging(int value);
    partial void OnRankChanged();
    partial void OnDenseRankChanging(int value);
    partial void OnDenseRankChanged();
    partial void OnNTileChanging(byte value);
    partial void OnNTileChanged();
    #endregion
		
		public Files_COUNT_BY_HOST()
		{
			this._Host = default(EntityRef<Host>);
			OnCreated();
		}
		
		[Column(Storage="_RowNumber", DbType="Int NOT NULL")]
		public int RowNumber
		{
			get
			{
				return this._RowNumber;
			}
			set
			{
				if ((this._RowNumber != value))
				{
					this.OnRowNumberChanging(value);
					this.SendPropertyChanging();
					this._RowNumber = value;
					this.SendPropertyChanged("RowNumber");
					this.OnRowNumberChanged();
				}
			}
		}
		
		[Column(Storage="_HostID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int HostID
		{
			get
			{
				return this._HostID;
			}
			set
			{
				if ((this._HostID != value))
				{
					if (this._Host.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnHostIDChanging(value);
					this.SendPropertyChanging();
					this._HostID = value;
					this.SendPropertyChanged("HostID");
					this.OnHostIDChanged();
				}
			}
		}
		
		[Column(Storage="_Count", DbType="Int NOT NULL")]
		public int Count
		{
			get
			{
				return this._Count;
			}
			set
			{
				if ((this._Count != value))
				{
					this.OnCountChanging(value);
					this.SendPropertyChanging();
					this._Count = value;
					this.SendPropertyChanged("Count");
					this.OnCountChanged();
				}
			}
		}
		
		[Column(Storage="_Rank", DbType="Int NOT NULL")]
		public int Rank
		{
			get
			{
				return this._Rank;
			}
			set
			{
				if ((this._Rank != value))
				{
					this.OnRankChanging(value);
					this.SendPropertyChanging();
					this._Rank = value;
					this.SendPropertyChanged("Rank");
					this.OnRankChanged();
				}
			}
		}
		
		[Column(Storage="_DenseRank", DbType="Int NOT NULL")]
		public int DenseRank
		{
			get
			{
				return this._DenseRank;
			}
			set
			{
				if ((this._DenseRank != value))
				{
					this.OnDenseRankChanging(value);
					this.SendPropertyChanging();
					this._DenseRank = value;
					this.SendPropertyChanged("DenseRank");
					this.OnDenseRankChanged();
				}
			}
		}
		
		[Column(Storage="_NTile", DbType="TinyInt NOT NULL")]
		public byte NTile
		{
			get
			{
				return this._NTile;
			}
			set
			{
				if ((this._NTile != value))
				{
					this.OnNTileChanging(value);
					this.SendPropertyChanging();
					this._NTile = value;
					this.SendPropertyChanged("NTile");
					this.OnNTileChanged();
				}
			}
		}
		
		[Association(Name="Host_Files_COUNT_BY_HOST", Storage="_Host", ThisKey="HostID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Host Host
		{
			get
			{
				return this._Host.Entity;
			}
			set
			{
				Host previousValue = this._Host.Entity;
				if (((previousValue != value) 
							|| (this._Host.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Host.Entity = null;
						previousValue.Files_COUNT_BY_HOST = null;
					}
					this._Host.Entity = value;
					if ((value != null))
					{
						value.Files_COUNT_BY_HOST = this;
						this._HostID = value.ID;
					}
					else
					{
						this._HostID = default(int);
					}
					this.SendPropertyChanged("Host");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="rpt.Files_COUNT_BY_SCHEME")]
	public partial class Files_COUNT_BY_SCHEME : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RowNumber;
		
		private int _SchemeID;
		
		private int _Count;
		
		private int _Rank;
		
		private int _DenseRank;
		
		private byte _NTile;
		
		private EntityRef<Scheme> _Scheme;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRowNumberChanging(int value);
    partial void OnRowNumberChanged();
    partial void OnSchemeIDChanging(int value);
    partial void OnSchemeIDChanged();
    partial void OnCountChanging(int value);
    partial void OnCountChanged();
    partial void OnRankChanging(int value);
    partial void OnRankChanged();
    partial void OnDenseRankChanging(int value);
    partial void OnDenseRankChanged();
    partial void OnNTileChanging(byte value);
    partial void OnNTileChanged();
    #endregion
		
		public Files_COUNT_BY_SCHEME()
		{
			this._Scheme = default(EntityRef<Scheme>);
			OnCreated();
		}
		
		[Column(Storage="_RowNumber", DbType="Int NOT NULL")]
		public int RowNumber
		{
			get
			{
				return this._RowNumber;
			}
			set
			{
				if ((this._RowNumber != value))
				{
					this.OnRowNumberChanging(value);
					this.SendPropertyChanging();
					this._RowNumber = value;
					this.SendPropertyChanged("RowNumber");
					this.OnRowNumberChanged();
				}
			}
		}
		
		[Column(Storage="_SchemeID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int SchemeID
		{
			get
			{
				return this._SchemeID;
			}
			set
			{
				if ((this._SchemeID != value))
				{
					if (this._Scheme.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSchemeIDChanging(value);
					this.SendPropertyChanging();
					this._SchemeID = value;
					this.SendPropertyChanged("SchemeID");
					this.OnSchemeIDChanged();
				}
			}
		}
		
		[Column(Storage="_Count", DbType="Int NOT NULL")]
		public int Count
		{
			get
			{
				return this._Count;
			}
			set
			{
				if ((this._Count != value))
				{
					this.OnCountChanging(value);
					this.SendPropertyChanging();
					this._Count = value;
					this.SendPropertyChanged("Count");
					this.OnCountChanged();
				}
			}
		}
		
		[Column(Storage="_Rank", DbType="Int NOT NULL")]
		public int Rank
		{
			get
			{
				return this._Rank;
			}
			set
			{
				if ((this._Rank != value))
				{
					this.OnRankChanging(value);
					this.SendPropertyChanging();
					this._Rank = value;
					this.SendPropertyChanged("Rank");
					this.OnRankChanged();
				}
			}
		}
		
		[Column(Storage="_DenseRank", DbType="Int NOT NULL")]
		public int DenseRank
		{
			get
			{
				return this._DenseRank;
			}
			set
			{
				if ((this._DenseRank != value))
				{
					this.OnDenseRankChanging(value);
					this.SendPropertyChanging();
					this._DenseRank = value;
					this.SendPropertyChanged("DenseRank");
					this.OnDenseRankChanged();
				}
			}
		}
		
		[Column(Storage="_NTile", DbType="TinyInt NOT NULL")]
		public byte NTile
		{
			get
			{
				return this._NTile;
			}
			set
			{
				if ((this._NTile != value))
				{
					this.OnNTileChanging(value);
					this.SendPropertyChanging();
					this._NTile = value;
					this.SendPropertyChanged("NTile");
					this.OnNTileChanged();
				}
			}
		}
		
		[Association(Name="Scheme_Files_COUNT_BY_SCHEME", Storage="_Scheme", ThisKey="SchemeID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Scheme Scheme
		{
			get
			{
				return this._Scheme.Entity;
			}
			set
			{
				Scheme previousValue = this._Scheme.Entity;
				if (((previousValue != value) 
							|| (this._Scheme.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Scheme.Entity = null;
						previousValue.Files_COUNT_BY_SCHEME = null;
					}
					this._Scheme.Entity = value;
					if ((value != null))
					{
						value.Files_COUNT_BY_SCHEME = this;
						this._SchemeID = value.ID;
					}
					else
					{
						this._SchemeID = default(int);
					}
					this.SendPropertyChanged("Scheme");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="rpt.Files_MOST_POPULAR_ABSOLUTEURIS_BY_ABSOLUTEURIS")]
	public partial class Files_MOST_POPULAR_ABSOLUTEURIS_BY_ABSOLUTEURI : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RowNumber;
		
		private System.Nullable<System.DateTime> _InitiallyDiscovered;
		
		private System.DateTime _LastDiscovered;
		
		private long _FileID;
		
		private int _Count;
		
		private System.Nullable<short> _DaysSinceInitiallyDiscovered;
		
		private short _DaysSinceLastDiscovered;
		
		private System.Nullable<double> _Strength;
		
		private int _Rank;
		
		private int _DenseRank;
		
		private byte _NTile;
		
		private EntityRef<File> _File;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRowNumberChanging(int value);
    partial void OnRowNumberChanged();
    partial void OnInitiallyDiscoveredChanging(System.Nullable<System.DateTime> value);
    partial void OnInitiallyDiscoveredChanged();
    partial void OnLastDiscoveredChanging(System.DateTime value);
    partial void OnLastDiscoveredChanged();
    partial void OnFileIDChanging(long value);
    partial void OnFileIDChanged();
    partial void OnCountChanging(int value);
    partial void OnCountChanged();
    partial void OnDaysSinceInitiallyDiscoveredChanging(System.Nullable<short> value);
    partial void OnDaysSinceInitiallyDiscoveredChanged();
    partial void OnDaysSinceLastDiscoveredChanging(short value);
    partial void OnDaysSinceLastDiscoveredChanged();
    partial void OnStrengthChanging(System.Nullable<double> value);
    partial void OnStrengthChanged();
    partial void OnRankChanging(int value);
    partial void OnRankChanged();
    partial void OnDenseRankChanging(int value);
    partial void OnDenseRankChanged();
    partial void OnNTileChanging(byte value);
    partial void OnNTileChanged();
    #endregion
		
		public Files_MOST_POPULAR_ABSOLUTEURIS_BY_ABSOLUTEURI()
		{
			this._File = default(EntityRef<File>);
			OnCreated();
		}
		
		[Column(Storage="_RowNumber", DbType="Int NOT NULL")]
		public int RowNumber
		{
			get
			{
				return this._RowNumber;
			}
			set
			{
				if ((this._RowNumber != value))
				{
					this.OnRowNumberChanging(value);
					this.SendPropertyChanging();
					this._RowNumber = value;
					this.SendPropertyChanged("RowNumber");
					this.OnRowNumberChanged();
				}
			}
		}
		
		[Column(Storage="_InitiallyDiscovered", DbType="DateTime")]
		public System.Nullable<System.DateTime> InitiallyDiscovered
		{
			get
			{
				return this._InitiallyDiscovered;
			}
			set
			{
				if ((this._InitiallyDiscovered != value))
				{
					this.OnInitiallyDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._InitiallyDiscovered = value;
					this.SendPropertyChanged("InitiallyDiscovered");
					this.OnInitiallyDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_LastDiscovered", DbType="DateTime NOT NULL")]
		public System.DateTime LastDiscovered
		{
			get
			{
				return this._LastDiscovered;
			}
			set
			{
				if ((this._LastDiscovered != value))
				{
					this.OnLastDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._LastDiscovered = value;
					this.SendPropertyChanged("LastDiscovered");
					this.OnLastDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_FileID", DbType="BigInt NOT NULL", IsPrimaryKey=true)]
		public long FileID
		{
			get
			{
				return this._FileID;
			}
			set
			{
				if ((this._FileID != value))
				{
					if (this._File.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFileIDChanging(value);
					this.SendPropertyChanging();
					this._FileID = value;
					this.SendPropertyChanged("FileID");
					this.OnFileIDChanged();
				}
			}
		}
		
		[Column(Storage="_Count", DbType="Int NOT NULL")]
		public int Count
		{
			get
			{
				return this._Count;
			}
			set
			{
				if ((this._Count != value))
				{
					this.OnCountChanging(value);
					this.SendPropertyChanging();
					this._Count = value;
					this.SendPropertyChanged("Count");
					this.OnCountChanged();
				}
			}
		}
		
		[Column(Storage="_DaysSinceInitiallyDiscovered", DbType="SmallInt")]
		public System.Nullable<short> DaysSinceInitiallyDiscovered
		{
			get
			{
				return this._DaysSinceInitiallyDiscovered;
			}
			set
			{
				if ((this._DaysSinceInitiallyDiscovered != value))
				{
					this.OnDaysSinceInitiallyDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._DaysSinceInitiallyDiscovered = value;
					this.SendPropertyChanged("DaysSinceInitiallyDiscovered");
					this.OnDaysSinceInitiallyDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_DaysSinceLastDiscovered", DbType="SmallInt NOT NULL")]
		public short DaysSinceLastDiscovered
		{
			get
			{
				return this._DaysSinceLastDiscovered;
			}
			set
			{
				if ((this._DaysSinceLastDiscovered != value))
				{
					this.OnDaysSinceLastDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._DaysSinceLastDiscovered = value;
					this.SendPropertyChanged("DaysSinceLastDiscovered");
					this.OnDaysSinceLastDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_Strength", DbType="Float")]
		public System.Nullable<double> Strength
		{
			get
			{
				return this._Strength;
			}
			set
			{
				if ((this._Strength != value))
				{
					this.OnStrengthChanging(value);
					this.SendPropertyChanging();
					this._Strength = value;
					this.SendPropertyChanged("Strength");
					this.OnStrengthChanged();
				}
			}
		}
		
		[Column(Storage="_Rank", DbType="Int NOT NULL")]
		public int Rank
		{
			get
			{
				return this._Rank;
			}
			set
			{
				if ((this._Rank != value))
				{
					this.OnRankChanging(value);
					this.SendPropertyChanging();
					this._Rank = value;
					this.SendPropertyChanged("Rank");
					this.OnRankChanged();
				}
			}
		}
		
		[Column(Storage="_DenseRank", DbType="Int NOT NULL")]
		public int DenseRank
		{
			get
			{
				return this._DenseRank;
			}
			set
			{
				if ((this._DenseRank != value))
				{
					this.OnDenseRankChanging(value);
					this.SendPropertyChanging();
					this._DenseRank = value;
					this.SendPropertyChanged("DenseRank");
					this.OnDenseRankChanged();
				}
			}
		}
		
		[Column(Storage="_NTile", DbType="TinyInt NOT NULL")]
		public byte NTile
		{
			get
			{
				return this._NTile;
			}
			set
			{
				if ((this._NTile != value))
				{
					this.OnNTileChanging(value);
					this.SendPropertyChanging();
					this._NTile = value;
					this.SendPropertyChanged("NTile");
					this.OnNTileChanged();
				}
			}
		}
		
		[Association(Name="File_Files_MOST_POPULAR_ABSOLUTEURIS_BY_ABSOLUTEURI", Storage="_File", ThisKey="FileID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public File File
		{
			get
			{
				return this._File.Entity;
			}
			set
			{
				File previousValue = this._File.Entity;
				if (((previousValue != value) 
							|| (this._File.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._File.Entity = null;
						previousValue.Files_MOST_POPULAR_ABSOLUTEURIS_BY_ABSOLUTEURI = null;
					}
					this._File.Entity = value;
					if ((value != null))
					{
						value.Files_MOST_POPULAR_ABSOLUTEURIS_BY_ABSOLUTEURI = this;
						this._FileID = value.ID;
					}
					else
					{
						this._FileID = default(long);
					}
					this.SendPropertyChanged("File");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="rpt.Files_MOST_POPULAR_ABSOLUTEURIS_BY_DOMAINS")]
	public partial class Files_MOST_POPULAR_ABSOLUTEURIS_BY_DOMAIN : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RowNumber;
		
		private System.Nullable<System.DateTime> _InitiallyDiscovered;
		
		private System.DateTime _LastDiscovered;
		
		private long _FileID;
		
		private int _Count;
		
		private System.Nullable<short> _DaysSinceInitiallyDiscovered;
		
		private short _DaysSinceLastDiscovered;
		
		private System.Nullable<double> _Strength;
		
		private int _Rank;
		
		private int _DenseRank;
		
		private byte _NTile;
		
		private EntityRef<File> _File;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRowNumberChanging(int value);
    partial void OnRowNumberChanged();
    partial void OnInitiallyDiscoveredChanging(System.Nullable<System.DateTime> value);
    partial void OnInitiallyDiscoveredChanged();
    partial void OnLastDiscoveredChanging(System.DateTime value);
    partial void OnLastDiscoveredChanged();
    partial void OnFileIDChanging(long value);
    partial void OnFileIDChanged();
    partial void OnCountChanging(int value);
    partial void OnCountChanged();
    partial void OnDaysSinceInitiallyDiscoveredChanging(System.Nullable<short> value);
    partial void OnDaysSinceInitiallyDiscoveredChanged();
    partial void OnDaysSinceLastDiscoveredChanging(short value);
    partial void OnDaysSinceLastDiscoveredChanged();
    partial void OnStrengthChanging(System.Nullable<double> value);
    partial void OnStrengthChanged();
    partial void OnRankChanging(int value);
    partial void OnRankChanged();
    partial void OnDenseRankChanging(int value);
    partial void OnDenseRankChanged();
    partial void OnNTileChanging(byte value);
    partial void OnNTileChanged();
    #endregion
		
		public Files_MOST_POPULAR_ABSOLUTEURIS_BY_DOMAIN()
		{
			this._File = default(EntityRef<File>);
			OnCreated();
		}
		
		[Column(Storage="_RowNumber", DbType="Int NOT NULL")]
		public int RowNumber
		{
			get
			{
				return this._RowNumber;
			}
			set
			{
				if ((this._RowNumber != value))
				{
					this.OnRowNumberChanging(value);
					this.SendPropertyChanging();
					this._RowNumber = value;
					this.SendPropertyChanged("RowNumber");
					this.OnRowNumberChanged();
				}
			}
		}
		
		[Column(Storage="_InitiallyDiscovered", DbType="DateTime")]
		public System.Nullable<System.DateTime> InitiallyDiscovered
		{
			get
			{
				return this._InitiallyDiscovered;
			}
			set
			{
				if ((this._InitiallyDiscovered != value))
				{
					this.OnInitiallyDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._InitiallyDiscovered = value;
					this.SendPropertyChanged("InitiallyDiscovered");
					this.OnInitiallyDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_LastDiscovered", DbType="DateTime NOT NULL")]
		public System.DateTime LastDiscovered
		{
			get
			{
				return this._LastDiscovered;
			}
			set
			{
				if ((this._LastDiscovered != value))
				{
					this.OnLastDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._LastDiscovered = value;
					this.SendPropertyChanged("LastDiscovered");
					this.OnLastDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_FileID", DbType="BigInt NOT NULL", IsPrimaryKey=true)]
		public long FileID
		{
			get
			{
				return this._FileID;
			}
			set
			{
				if ((this._FileID != value))
				{
					if (this._File.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFileIDChanging(value);
					this.SendPropertyChanging();
					this._FileID = value;
					this.SendPropertyChanged("FileID");
					this.OnFileIDChanged();
				}
			}
		}
		
		[Column(Storage="_Count", DbType="Int NOT NULL")]
		public int Count
		{
			get
			{
				return this._Count;
			}
			set
			{
				if ((this._Count != value))
				{
					this.OnCountChanging(value);
					this.SendPropertyChanging();
					this._Count = value;
					this.SendPropertyChanged("Count");
					this.OnCountChanged();
				}
			}
		}
		
		[Column(Storage="_DaysSinceInitiallyDiscovered", DbType="SmallInt")]
		public System.Nullable<short> DaysSinceInitiallyDiscovered
		{
			get
			{
				return this._DaysSinceInitiallyDiscovered;
			}
			set
			{
				if ((this._DaysSinceInitiallyDiscovered != value))
				{
					this.OnDaysSinceInitiallyDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._DaysSinceInitiallyDiscovered = value;
					this.SendPropertyChanged("DaysSinceInitiallyDiscovered");
					this.OnDaysSinceInitiallyDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_DaysSinceLastDiscovered", DbType="SmallInt NOT NULL")]
		public short DaysSinceLastDiscovered
		{
			get
			{
				return this._DaysSinceLastDiscovered;
			}
			set
			{
				if ((this._DaysSinceLastDiscovered != value))
				{
					this.OnDaysSinceLastDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._DaysSinceLastDiscovered = value;
					this.SendPropertyChanged("DaysSinceLastDiscovered");
					this.OnDaysSinceLastDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_Strength", DbType="Float")]
		public System.Nullable<double> Strength
		{
			get
			{
				return this._Strength;
			}
			set
			{
				if ((this._Strength != value))
				{
					this.OnStrengthChanging(value);
					this.SendPropertyChanging();
					this._Strength = value;
					this.SendPropertyChanged("Strength");
					this.OnStrengthChanged();
				}
			}
		}
		
		[Column(Storage="_Rank", DbType="Int NOT NULL")]
		public int Rank
		{
			get
			{
				return this._Rank;
			}
			set
			{
				if ((this._Rank != value))
				{
					this.OnRankChanging(value);
					this.SendPropertyChanging();
					this._Rank = value;
					this.SendPropertyChanged("Rank");
					this.OnRankChanged();
				}
			}
		}
		
		[Column(Storage="_DenseRank", DbType="Int NOT NULL")]
		public int DenseRank
		{
			get
			{
				return this._DenseRank;
			}
			set
			{
				if ((this._DenseRank != value))
				{
					this.OnDenseRankChanging(value);
					this.SendPropertyChanging();
					this._DenseRank = value;
					this.SendPropertyChanged("DenseRank");
					this.OnDenseRankChanged();
				}
			}
		}
		
		[Column(Storage="_NTile", DbType="TinyInt NOT NULL")]
		public byte NTile
		{
			get
			{
				return this._NTile;
			}
			set
			{
				if ((this._NTile != value))
				{
					this.OnNTileChanging(value);
					this.SendPropertyChanging();
					this._NTile = value;
					this.SendPropertyChanged("NTile");
					this.OnNTileChanged();
				}
			}
		}
		
		[Association(Name="File_Files_MOST_POPULAR_ABSOLUTEURIS_BY_DOMAIN", Storage="_File", ThisKey="FileID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public File File
		{
			get
			{
				return this._File.Entity;
			}
			set
			{
				File previousValue = this._File.Entity;
				if (((previousValue != value) 
							|| (this._File.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._File.Entity = null;
						previousValue.Files_MOST_POPULAR_ABSOLUTEURIS_BY_DOMAIN = null;
					}
					this._File.Entity = value;
					if ((value != null))
					{
						value.Files_MOST_POPULAR_ABSOLUTEURIS_BY_DOMAIN = this;
						this._FileID = value.ID;
					}
					else
					{
						this._FileID = default(long);
					}
					this.SendPropertyChanged("File");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="rpt.Files_MOST_POPULAR_ABSOLUTEURIS_BY_EXTENSIONS")]
	public partial class Files_MOST_POPULAR_ABSOLUTEURIS_BY_EXTENSION : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RowNumber;
		
		private System.Nullable<System.DateTime> _InitiallyDiscovered;
		
		private System.DateTime _LastDiscovered;
		
		private long _FileID;
		
		private int _Count;
		
		private System.Nullable<short> _DaysSinceInitiallyDiscovered;
		
		private short _DaysSinceLastDiscovered;
		
		private System.Nullable<double> _Strength;
		
		private int _Rank;
		
		private int _DenseRank;
		
		private byte _NTile;
		
		private EntityRef<File> _File;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRowNumberChanging(int value);
    partial void OnRowNumberChanged();
    partial void OnInitiallyDiscoveredChanging(System.Nullable<System.DateTime> value);
    partial void OnInitiallyDiscoveredChanged();
    partial void OnLastDiscoveredChanging(System.DateTime value);
    partial void OnLastDiscoveredChanged();
    partial void OnFileIDChanging(long value);
    partial void OnFileIDChanged();
    partial void OnCountChanging(int value);
    partial void OnCountChanged();
    partial void OnDaysSinceInitiallyDiscoveredChanging(System.Nullable<short> value);
    partial void OnDaysSinceInitiallyDiscoveredChanged();
    partial void OnDaysSinceLastDiscoveredChanging(short value);
    partial void OnDaysSinceLastDiscoveredChanged();
    partial void OnStrengthChanging(System.Nullable<double> value);
    partial void OnStrengthChanged();
    partial void OnRankChanging(int value);
    partial void OnRankChanged();
    partial void OnDenseRankChanging(int value);
    partial void OnDenseRankChanged();
    partial void OnNTileChanging(byte value);
    partial void OnNTileChanged();
    #endregion
		
		public Files_MOST_POPULAR_ABSOLUTEURIS_BY_EXTENSION()
		{
			this._File = default(EntityRef<File>);
			OnCreated();
		}
		
		[Column(Storage="_RowNumber", DbType="Int NOT NULL")]
		public int RowNumber
		{
			get
			{
				return this._RowNumber;
			}
			set
			{
				if ((this._RowNumber != value))
				{
					this.OnRowNumberChanging(value);
					this.SendPropertyChanging();
					this._RowNumber = value;
					this.SendPropertyChanged("RowNumber");
					this.OnRowNumberChanged();
				}
			}
		}
		
		[Column(Storage="_InitiallyDiscovered", DbType="DateTime")]
		public System.Nullable<System.DateTime> InitiallyDiscovered
		{
			get
			{
				return this._InitiallyDiscovered;
			}
			set
			{
				if ((this._InitiallyDiscovered != value))
				{
					this.OnInitiallyDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._InitiallyDiscovered = value;
					this.SendPropertyChanged("InitiallyDiscovered");
					this.OnInitiallyDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_LastDiscovered", DbType="DateTime NOT NULL")]
		public System.DateTime LastDiscovered
		{
			get
			{
				return this._LastDiscovered;
			}
			set
			{
				if ((this._LastDiscovered != value))
				{
					this.OnLastDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._LastDiscovered = value;
					this.SendPropertyChanged("LastDiscovered");
					this.OnLastDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_FileID", DbType="BigInt NOT NULL", IsPrimaryKey=true)]
		public long FileID
		{
			get
			{
				return this._FileID;
			}
			set
			{
				if ((this._FileID != value))
				{
					if (this._File.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFileIDChanging(value);
					this.SendPropertyChanging();
					this._FileID = value;
					this.SendPropertyChanged("FileID");
					this.OnFileIDChanged();
				}
			}
		}
		
		[Column(Storage="_Count", DbType="Int NOT NULL")]
		public int Count
		{
			get
			{
				return this._Count;
			}
			set
			{
				if ((this._Count != value))
				{
					this.OnCountChanging(value);
					this.SendPropertyChanging();
					this._Count = value;
					this.SendPropertyChanged("Count");
					this.OnCountChanged();
				}
			}
		}
		
		[Column(Storage="_DaysSinceInitiallyDiscovered", DbType="SmallInt")]
		public System.Nullable<short> DaysSinceInitiallyDiscovered
		{
			get
			{
				return this._DaysSinceInitiallyDiscovered;
			}
			set
			{
				if ((this._DaysSinceInitiallyDiscovered != value))
				{
					this.OnDaysSinceInitiallyDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._DaysSinceInitiallyDiscovered = value;
					this.SendPropertyChanged("DaysSinceInitiallyDiscovered");
					this.OnDaysSinceInitiallyDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_DaysSinceLastDiscovered", DbType="SmallInt NOT NULL")]
		public short DaysSinceLastDiscovered
		{
			get
			{
				return this._DaysSinceLastDiscovered;
			}
			set
			{
				if ((this._DaysSinceLastDiscovered != value))
				{
					this.OnDaysSinceLastDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._DaysSinceLastDiscovered = value;
					this.SendPropertyChanged("DaysSinceLastDiscovered");
					this.OnDaysSinceLastDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_Strength", DbType="Float")]
		public System.Nullable<double> Strength
		{
			get
			{
				return this._Strength;
			}
			set
			{
				if ((this._Strength != value))
				{
					this.OnStrengthChanging(value);
					this.SendPropertyChanging();
					this._Strength = value;
					this.SendPropertyChanged("Strength");
					this.OnStrengthChanged();
				}
			}
		}
		
		[Column(Storage="_Rank", DbType="Int NOT NULL")]
		public int Rank
		{
			get
			{
				return this._Rank;
			}
			set
			{
				if ((this._Rank != value))
				{
					this.OnRankChanging(value);
					this.SendPropertyChanging();
					this._Rank = value;
					this.SendPropertyChanged("Rank");
					this.OnRankChanged();
				}
			}
		}
		
		[Column(Storage="_DenseRank", DbType="Int NOT NULL")]
		public int DenseRank
		{
			get
			{
				return this._DenseRank;
			}
			set
			{
				if ((this._DenseRank != value))
				{
					this.OnDenseRankChanging(value);
					this.SendPropertyChanging();
					this._DenseRank = value;
					this.SendPropertyChanged("DenseRank");
					this.OnDenseRankChanged();
				}
			}
		}
		
		[Column(Storage="_NTile", DbType="TinyInt NOT NULL")]
		public byte NTile
		{
			get
			{
				return this._NTile;
			}
			set
			{
				if ((this._NTile != value))
				{
					this.OnNTileChanging(value);
					this.SendPropertyChanging();
					this._NTile = value;
					this.SendPropertyChanged("NTile");
					this.OnNTileChanged();
				}
			}
		}
		
		[Association(Name="File_Files_MOST_POPULAR_ABSOLUTEURIS_BY_EXTENSION", Storage="_File", ThisKey="FileID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public File File
		{
			get
			{
				return this._File.Entity;
			}
			set
			{
				File previousValue = this._File.Entity;
				if (((previousValue != value) 
							|| (this._File.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._File.Entity = null;
						previousValue.Files_MOST_POPULAR_ABSOLUTEURIS_BY_EXTENSION = null;
					}
					this._File.Entity = value;
					if ((value != null))
					{
						value.Files_MOST_POPULAR_ABSOLUTEURIS_BY_EXTENSION = this;
						this._FileID = value.ID;
					}
					else
					{
						this._FileID = default(long);
					}
					this.SendPropertyChanged("File");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="rpt.Files_MOST_POPULAR_ABSOLUTEURIS_BY_HOSTS")]
	public partial class Files_MOST_POPULAR_ABSOLUTEURIS_BY_HOST : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RowNumber;
		
		private System.Nullable<System.DateTime> _InitiallyDiscovered;
		
		private System.DateTime _LastDiscovered;
		
		private long _FileID;
		
		private int _Count;
		
		private System.Nullable<short> _DaysSinceInitiallyDiscovered;
		
		private short _DaysSinceLastDiscovered;
		
		private System.Nullable<double> _Strength;
		
		private int _Rank;
		
		private int _DenseRank;
		
		private byte _NTile;
		
		private EntityRef<File> _File;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRowNumberChanging(int value);
    partial void OnRowNumberChanged();
    partial void OnInitiallyDiscoveredChanging(System.Nullable<System.DateTime> value);
    partial void OnInitiallyDiscoveredChanged();
    partial void OnLastDiscoveredChanging(System.DateTime value);
    partial void OnLastDiscoveredChanged();
    partial void OnFileIDChanging(long value);
    partial void OnFileIDChanged();
    partial void OnCountChanging(int value);
    partial void OnCountChanged();
    partial void OnDaysSinceInitiallyDiscoveredChanging(System.Nullable<short> value);
    partial void OnDaysSinceInitiallyDiscoveredChanged();
    partial void OnDaysSinceLastDiscoveredChanging(short value);
    partial void OnDaysSinceLastDiscoveredChanged();
    partial void OnStrengthChanging(System.Nullable<double> value);
    partial void OnStrengthChanged();
    partial void OnRankChanging(int value);
    partial void OnRankChanged();
    partial void OnDenseRankChanging(int value);
    partial void OnDenseRankChanged();
    partial void OnNTileChanging(byte value);
    partial void OnNTileChanged();
    #endregion
		
		public Files_MOST_POPULAR_ABSOLUTEURIS_BY_HOST()
		{
			this._File = default(EntityRef<File>);
			OnCreated();
		}
		
		[Column(Storage="_RowNumber", DbType="Int NOT NULL")]
		public int RowNumber
		{
			get
			{
				return this._RowNumber;
			}
			set
			{
				if ((this._RowNumber != value))
				{
					this.OnRowNumberChanging(value);
					this.SendPropertyChanging();
					this._RowNumber = value;
					this.SendPropertyChanged("RowNumber");
					this.OnRowNumberChanged();
				}
			}
		}
		
		[Column(Storage="_InitiallyDiscovered", DbType="DateTime")]
		public System.Nullable<System.DateTime> InitiallyDiscovered
		{
			get
			{
				return this._InitiallyDiscovered;
			}
			set
			{
				if ((this._InitiallyDiscovered != value))
				{
					this.OnInitiallyDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._InitiallyDiscovered = value;
					this.SendPropertyChanged("InitiallyDiscovered");
					this.OnInitiallyDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_LastDiscovered", DbType="DateTime NOT NULL")]
		public System.DateTime LastDiscovered
		{
			get
			{
				return this._LastDiscovered;
			}
			set
			{
				if ((this._LastDiscovered != value))
				{
					this.OnLastDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._LastDiscovered = value;
					this.SendPropertyChanged("LastDiscovered");
					this.OnLastDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_FileID", DbType="BigInt NOT NULL", IsPrimaryKey=true)]
		public long FileID
		{
			get
			{
				return this._FileID;
			}
			set
			{
				if ((this._FileID != value))
				{
					if (this._File.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFileIDChanging(value);
					this.SendPropertyChanging();
					this._FileID = value;
					this.SendPropertyChanged("FileID");
					this.OnFileIDChanged();
				}
			}
		}
		
		[Column(Storage="_Count", DbType="Int NOT NULL")]
		public int Count
		{
			get
			{
				return this._Count;
			}
			set
			{
				if ((this._Count != value))
				{
					this.OnCountChanging(value);
					this.SendPropertyChanging();
					this._Count = value;
					this.SendPropertyChanged("Count");
					this.OnCountChanged();
				}
			}
		}
		
		[Column(Storage="_DaysSinceInitiallyDiscovered", DbType="SmallInt")]
		public System.Nullable<short> DaysSinceInitiallyDiscovered
		{
			get
			{
				return this._DaysSinceInitiallyDiscovered;
			}
			set
			{
				if ((this._DaysSinceInitiallyDiscovered != value))
				{
					this.OnDaysSinceInitiallyDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._DaysSinceInitiallyDiscovered = value;
					this.SendPropertyChanged("DaysSinceInitiallyDiscovered");
					this.OnDaysSinceInitiallyDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_DaysSinceLastDiscovered", DbType="SmallInt NOT NULL")]
		public short DaysSinceLastDiscovered
		{
			get
			{
				return this._DaysSinceLastDiscovered;
			}
			set
			{
				if ((this._DaysSinceLastDiscovered != value))
				{
					this.OnDaysSinceLastDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._DaysSinceLastDiscovered = value;
					this.SendPropertyChanged("DaysSinceLastDiscovered");
					this.OnDaysSinceLastDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_Strength", DbType="Float")]
		public System.Nullable<double> Strength
		{
			get
			{
				return this._Strength;
			}
			set
			{
				if ((this._Strength != value))
				{
					this.OnStrengthChanging(value);
					this.SendPropertyChanging();
					this._Strength = value;
					this.SendPropertyChanged("Strength");
					this.OnStrengthChanged();
				}
			}
		}
		
		[Column(Storage="_Rank", DbType="Int NOT NULL")]
		public int Rank
		{
			get
			{
				return this._Rank;
			}
			set
			{
				if ((this._Rank != value))
				{
					this.OnRankChanging(value);
					this.SendPropertyChanging();
					this._Rank = value;
					this.SendPropertyChanged("Rank");
					this.OnRankChanged();
				}
			}
		}
		
		[Column(Storage="_DenseRank", DbType="Int NOT NULL")]
		public int DenseRank
		{
			get
			{
				return this._DenseRank;
			}
			set
			{
				if ((this._DenseRank != value))
				{
					this.OnDenseRankChanging(value);
					this.SendPropertyChanging();
					this._DenseRank = value;
					this.SendPropertyChanged("DenseRank");
					this.OnDenseRankChanged();
				}
			}
		}
		
		[Column(Storage="_NTile", DbType="TinyInt NOT NULL")]
		public byte NTile
		{
			get
			{
				return this._NTile;
			}
			set
			{
				if ((this._NTile != value))
				{
					this.OnNTileChanging(value);
					this.SendPropertyChanging();
					this._NTile = value;
					this.SendPropertyChanged("NTile");
					this.OnNTileChanged();
				}
			}
		}
		
		[Association(Name="File_Files_MOST_POPULAR_ABSOLUTEURIS_BY_HOST", Storage="_File", ThisKey="FileID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public File File
		{
			get
			{
				return this._File.Entity;
			}
			set
			{
				File previousValue = this._File.Entity;
				if (((previousValue != value) 
							|| (this._File.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._File.Entity = null;
						previousValue.Files_MOST_POPULAR_ABSOLUTEURIS_BY_HOST = null;
					}
					this._File.Entity = value;
					if ((value != null))
					{
						value.Files_MOST_POPULAR_ABSOLUTEURIS_BY_HOST = this;
						this._FileID = value.ID;
					}
					else
					{
						this._FileID = default(long);
					}
					this.SendPropertyChanged("File");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="rpt.Files_MOST_POPULAR_ABSOLUTEURIS_BY_SCHEMES")]
	public partial class Files_MOST_POPULAR_ABSOLUTEURIS_BY_SCHEME : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RowNumber;
		
		private System.Nullable<System.DateTime> _InitiallyDiscovered;
		
		private System.DateTime _LastDiscovered;
		
		private long _FileID;
		
		private int _Count;
		
		private System.Nullable<short> _DaysSinceInitiallyDiscovered;
		
		private short _DaysSinceLastDiscovered;
		
		private System.Nullable<double> _Strength;
		
		private int _Rank;
		
		private int _DenseRank;
		
		private byte _NTile;
		
		private EntityRef<File> _File;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRowNumberChanging(int value);
    partial void OnRowNumberChanged();
    partial void OnInitiallyDiscoveredChanging(System.Nullable<System.DateTime> value);
    partial void OnInitiallyDiscoveredChanged();
    partial void OnLastDiscoveredChanging(System.DateTime value);
    partial void OnLastDiscoveredChanged();
    partial void OnFileIDChanging(long value);
    partial void OnFileIDChanged();
    partial void OnCountChanging(int value);
    partial void OnCountChanged();
    partial void OnDaysSinceInitiallyDiscoveredChanging(System.Nullable<short> value);
    partial void OnDaysSinceInitiallyDiscoveredChanged();
    partial void OnDaysSinceLastDiscoveredChanging(short value);
    partial void OnDaysSinceLastDiscoveredChanged();
    partial void OnStrengthChanging(System.Nullable<double> value);
    partial void OnStrengthChanged();
    partial void OnRankChanging(int value);
    partial void OnRankChanged();
    partial void OnDenseRankChanging(int value);
    partial void OnDenseRankChanged();
    partial void OnNTileChanging(byte value);
    partial void OnNTileChanged();
    #endregion
		
		public Files_MOST_POPULAR_ABSOLUTEURIS_BY_SCHEME()
		{
			this._File = default(EntityRef<File>);
			OnCreated();
		}
		
		[Column(Storage="_RowNumber", DbType="Int NOT NULL")]
		public int RowNumber
		{
			get
			{
				return this._RowNumber;
			}
			set
			{
				if ((this._RowNumber != value))
				{
					this.OnRowNumberChanging(value);
					this.SendPropertyChanging();
					this._RowNumber = value;
					this.SendPropertyChanged("RowNumber");
					this.OnRowNumberChanged();
				}
			}
		}
		
		[Column(Storage="_InitiallyDiscovered", DbType="DateTime")]
		public System.Nullable<System.DateTime> InitiallyDiscovered
		{
			get
			{
				return this._InitiallyDiscovered;
			}
			set
			{
				if ((this._InitiallyDiscovered != value))
				{
					this.OnInitiallyDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._InitiallyDiscovered = value;
					this.SendPropertyChanged("InitiallyDiscovered");
					this.OnInitiallyDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_LastDiscovered", DbType="DateTime NOT NULL")]
		public System.DateTime LastDiscovered
		{
			get
			{
				return this._LastDiscovered;
			}
			set
			{
				if ((this._LastDiscovered != value))
				{
					this.OnLastDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._LastDiscovered = value;
					this.SendPropertyChanged("LastDiscovered");
					this.OnLastDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_FileID", DbType="BigInt NOT NULL", IsPrimaryKey=true)]
		public long FileID
		{
			get
			{
				return this._FileID;
			}
			set
			{
				if ((this._FileID != value))
				{
					if (this._File.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFileIDChanging(value);
					this.SendPropertyChanging();
					this._FileID = value;
					this.SendPropertyChanged("FileID");
					this.OnFileIDChanged();
				}
			}
		}
		
		[Column(Storage="_Count", DbType="Int NOT NULL")]
		public int Count
		{
			get
			{
				return this._Count;
			}
			set
			{
				if ((this._Count != value))
				{
					this.OnCountChanging(value);
					this.SendPropertyChanging();
					this._Count = value;
					this.SendPropertyChanged("Count");
					this.OnCountChanged();
				}
			}
		}
		
		[Column(Storage="_DaysSinceInitiallyDiscovered", DbType="SmallInt")]
		public System.Nullable<short> DaysSinceInitiallyDiscovered
		{
			get
			{
				return this._DaysSinceInitiallyDiscovered;
			}
			set
			{
				if ((this._DaysSinceInitiallyDiscovered != value))
				{
					this.OnDaysSinceInitiallyDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._DaysSinceInitiallyDiscovered = value;
					this.SendPropertyChanged("DaysSinceInitiallyDiscovered");
					this.OnDaysSinceInitiallyDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_DaysSinceLastDiscovered", DbType="SmallInt NOT NULL")]
		public short DaysSinceLastDiscovered
		{
			get
			{
				return this._DaysSinceLastDiscovered;
			}
			set
			{
				if ((this._DaysSinceLastDiscovered != value))
				{
					this.OnDaysSinceLastDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._DaysSinceLastDiscovered = value;
					this.SendPropertyChanged("DaysSinceLastDiscovered");
					this.OnDaysSinceLastDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_Strength", DbType="Float")]
		public System.Nullable<double> Strength
		{
			get
			{
				return this._Strength;
			}
			set
			{
				if ((this._Strength != value))
				{
					this.OnStrengthChanging(value);
					this.SendPropertyChanging();
					this._Strength = value;
					this.SendPropertyChanged("Strength");
					this.OnStrengthChanged();
				}
			}
		}
		
		[Column(Storage="_Rank", DbType="Int NOT NULL")]
		public int Rank
		{
			get
			{
				return this._Rank;
			}
			set
			{
				if ((this._Rank != value))
				{
					this.OnRankChanging(value);
					this.SendPropertyChanging();
					this._Rank = value;
					this.SendPropertyChanged("Rank");
					this.OnRankChanged();
				}
			}
		}
		
		[Column(Storage="_DenseRank", DbType="Int NOT NULL")]
		public int DenseRank
		{
			get
			{
				return this._DenseRank;
			}
			set
			{
				if ((this._DenseRank != value))
				{
					this.OnDenseRankChanging(value);
					this.SendPropertyChanging();
					this._DenseRank = value;
					this.SendPropertyChanged("DenseRank");
					this.OnDenseRankChanged();
				}
			}
		}
		
		[Column(Storage="_NTile", DbType="TinyInt NOT NULL")]
		public byte NTile
		{
			get
			{
				return this._NTile;
			}
			set
			{
				if ((this._NTile != value))
				{
					this.OnNTileChanging(value);
					this.SendPropertyChanging();
					this._NTile = value;
					this.SendPropertyChanged("NTile");
					this.OnNTileChanged();
				}
			}
		}
		
		[Association(Name="File_Files_MOST_POPULAR_ABSOLUTEURIS_BY_SCHEME", Storage="_File", ThisKey="FileID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public File File
		{
			get
			{
				return this._File.Entity;
			}
			set
			{
				File previousValue = this._File.Entity;
				if (((previousValue != value) 
							|| (this._File.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._File.Entity = null;
						previousValue.Files_MOST_POPULAR_ABSOLUTEURIS_BY_SCHEME = null;
					}
					this._File.Entity = value;
					if ((value != null))
					{
						value.Files_MOST_POPULAR_ABSOLUTEURIS_BY_SCHEME = this;
						this._FileID = value.ID;
					}
					else
					{
						this._FileID = default(long);
					}
					this.SendPropertyChanged("File");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="rpt.Files_MOST_POPULAR_DOMAINS_BY_ABSOLUTEURIS")]
	public partial class Files_MOST_POPULAR_DOMAINS_BY_ABSOLUTEURI : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RowNumber;
		
		private System.Nullable<System.DateTime> _InitiallyDiscovered;
		
		private System.DateTime _LastDiscovered;
		
		private int _DomainID;
		
		private int _Count;
		
		private System.Nullable<short> _DaysSinceInitiallyDiscovered;
		
		private short _DaysSinceLastDiscovered;
		
		private System.Nullable<double> _Strength;
		
		private int _Rank;
		
		private int _DenseRank;
		
		private short _NTile;
		
		private EntityRef<Domain> _Domain;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRowNumberChanging(int value);
    partial void OnRowNumberChanged();
    partial void OnInitiallyDiscoveredChanging(System.Nullable<System.DateTime> value);
    partial void OnInitiallyDiscoveredChanged();
    partial void OnLastDiscoveredChanging(System.DateTime value);
    partial void OnLastDiscoveredChanged();
    partial void OnDomainIDChanging(int value);
    partial void OnDomainIDChanged();
    partial void OnCountChanging(int value);
    partial void OnCountChanged();
    partial void OnDaysSinceInitiallyDiscoveredChanging(System.Nullable<short> value);
    partial void OnDaysSinceInitiallyDiscoveredChanged();
    partial void OnDaysSinceLastDiscoveredChanging(short value);
    partial void OnDaysSinceLastDiscoveredChanged();
    partial void OnStrengthChanging(System.Nullable<double> value);
    partial void OnStrengthChanged();
    partial void OnRankChanging(int value);
    partial void OnRankChanged();
    partial void OnDenseRankChanging(int value);
    partial void OnDenseRankChanged();
    partial void OnNTileChanging(short value);
    partial void OnNTileChanged();
    #endregion
		
		public Files_MOST_POPULAR_DOMAINS_BY_ABSOLUTEURI()
		{
			this._Domain = default(EntityRef<Domain>);
			OnCreated();
		}
		
		[Column(Storage="_RowNumber", DbType="Int NOT NULL")]
		public int RowNumber
		{
			get
			{
				return this._RowNumber;
			}
			set
			{
				if ((this._RowNumber != value))
				{
					this.OnRowNumberChanging(value);
					this.SendPropertyChanging();
					this._RowNumber = value;
					this.SendPropertyChanged("RowNumber");
					this.OnRowNumberChanged();
				}
			}
		}
		
		[Column(Storage="_InitiallyDiscovered", DbType="DateTime")]
		public System.Nullable<System.DateTime> InitiallyDiscovered
		{
			get
			{
				return this._InitiallyDiscovered;
			}
			set
			{
				if ((this._InitiallyDiscovered != value))
				{
					this.OnInitiallyDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._InitiallyDiscovered = value;
					this.SendPropertyChanged("InitiallyDiscovered");
					this.OnInitiallyDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_LastDiscovered", DbType="DateTime NOT NULL")]
		public System.DateTime LastDiscovered
		{
			get
			{
				return this._LastDiscovered;
			}
			set
			{
				if ((this._LastDiscovered != value))
				{
					this.OnLastDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._LastDiscovered = value;
					this.SendPropertyChanged("LastDiscovered");
					this.OnLastDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_DomainID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int DomainID
		{
			get
			{
				return this._DomainID;
			}
			set
			{
				if ((this._DomainID != value))
				{
					if (this._Domain.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDomainIDChanging(value);
					this.SendPropertyChanging();
					this._DomainID = value;
					this.SendPropertyChanged("DomainID");
					this.OnDomainIDChanged();
				}
			}
		}
		
		[Column(Storage="_Count", DbType="Int NOT NULL")]
		public int Count
		{
			get
			{
				return this._Count;
			}
			set
			{
				if ((this._Count != value))
				{
					this.OnCountChanging(value);
					this.SendPropertyChanging();
					this._Count = value;
					this.SendPropertyChanged("Count");
					this.OnCountChanged();
				}
			}
		}
		
		[Column(Storage="_DaysSinceInitiallyDiscovered", DbType="SmallInt")]
		public System.Nullable<short> DaysSinceInitiallyDiscovered
		{
			get
			{
				return this._DaysSinceInitiallyDiscovered;
			}
			set
			{
				if ((this._DaysSinceInitiallyDiscovered != value))
				{
					this.OnDaysSinceInitiallyDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._DaysSinceInitiallyDiscovered = value;
					this.SendPropertyChanged("DaysSinceInitiallyDiscovered");
					this.OnDaysSinceInitiallyDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_DaysSinceLastDiscovered", DbType="SmallInt NOT NULL")]
		public short DaysSinceLastDiscovered
		{
			get
			{
				return this._DaysSinceLastDiscovered;
			}
			set
			{
				if ((this._DaysSinceLastDiscovered != value))
				{
					this.OnDaysSinceLastDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._DaysSinceLastDiscovered = value;
					this.SendPropertyChanged("DaysSinceLastDiscovered");
					this.OnDaysSinceLastDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_Strength", DbType="Float")]
		public System.Nullable<double> Strength
		{
			get
			{
				return this._Strength;
			}
			set
			{
				if ((this._Strength != value))
				{
					this.OnStrengthChanging(value);
					this.SendPropertyChanging();
					this._Strength = value;
					this.SendPropertyChanged("Strength");
					this.OnStrengthChanged();
				}
			}
		}
		
		[Column(Storage="_Rank", DbType="Int NOT NULL")]
		public int Rank
		{
			get
			{
				return this._Rank;
			}
			set
			{
				if ((this._Rank != value))
				{
					this.OnRankChanging(value);
					this.SendPropertyChanging();
					this._Rank = value;
					this.SendPropertyChanged("Rank");
					this.OnRankChanged();
				}
			}
		}
		
		[Column(Storage="_DenseRank", DbType="Int NOT NULL")]
		public int DenseRank
		{
			get
			{
				return this._DenseRank;
			}
			set
			{
				if ((this._DenseRank != value))
				{
					this.OnDenseRankChanging(value);
					this.SendPropertyChanging();
					this._DenseRank = value;
					this.SendPropertyChanged("DenseRank");
					this.OnDenseRankChanged();
				}
			}
		}
		
		[Column(Storage="_NTile", DbType="SmallInt NOT NULL")]
		public short NTile
		{
			get
			{
				return this._NTile;
			}
			set
			{
				if ((this._NTile != value))
				{
					this.OnNTileChanging(value);
					this.SendPropertyChanging();
					this._NTile = value;
					this.SendPropertyChanged("NTile");
					this.OnNTileChanged();
				}
			}
		}
		
		[Association(Name="Domain_Files_MOST_POPULAR_DOMAINS_BY_ABSOLUTEURI", Storage="_Domain", ThisKey="DomainID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Domain Domain
		{
			get
			{
				return this._Domain.Entity;
			}
			set
			{
				Domain previousValue = this._Domain.Entity;
				if (((previousValue != value) 
							|| (this._Domain.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Domain.Entity = null;
						previousValue.Files_MOST_POPULAR_DOMAINS_BY_ABSOLUTEURI = null;
					}
					this._Domain.Entity = value;
					if ((value != null))
					{
						value.Files_MOST_POPULAR_DOMAINS_BY_ABSOLUTEURI = this;
						this._DomainID = value.ID;
					}
					else
					{
						this._DomainID = default(int);
					}
					this.SendPropertyChanged("Domain");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="rpt.Files_MOST_POPULAR_DOMAINS_BY_DOMAINS")]
	public partial class Files_MOST_POPULAR_DOMAINS_BY_DOMAIN : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RowNumber;
		
		private System.Nullable<System.DateTime> _InitiallyDiscovered;
		
		private System.DateTime _LastDiscovered;
		
		private int _DomainID;
		
		private int _Count;
		
		private System.Nullable<short> _DaysSinceInitiallyDiscovered;
		
		private short _DaysSinceLastDiscovered;
		
		private System.Nullable<double> _Strength;
		
		private int _Rank;
		
		private int _DenseRank;
		
		private byte _NTile;
		
		private EntityRef<Domain> _Domain;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRowNumberChanging(int value);
    partial void OnRowNumberChanged();
    partial void OnInitiallyDiscoveredChanging(System.Nullable<System.DateTime> value);
    partial void OnInitiallyDiscoveredChanged();
    partial void OnLastDiscoveredChanging(System.DateTime value);
    partial void OnLastDiscoveredChanged();
    partial void OnDomainIDChanging(int value);
    partial void OnDomainIDChanged();
    partial void OnCountChanging(int value);
    partial void OnCountChanged();
    partial void OnDaysSinceInitiallyDiscoveredChanging(System.Nullable<short> value);
    partial void OnDaysSinceInitiallyDiscoveredChanged();
    partial void OnDaysSinceLastDiscoveredChanging(short value);
    partial void OnDaysSinceLastDiscoveredChanged();
    partial void OnStrengthChanging(System.Nullable<double> value);
    partial void OnStrengthChanged();
    partial void OnRankChanging(int value);
    partial void OnRankChanged();
    partial void OnDenseRankChanging(int value);
    partial void OnDenseRankChanged();
    partial void OnNTileChanging(byte value);
    partial void OnNTileChanged();
    #endregion
		
		public Files_MOST_POPULAR_DOMAINS_BY_DOMAIN()
		{
			this._Domain = default(EntityRef<Domain>);
			OnCreated();
		}
		
		[Column(Storage="_RowNumber", DbType="Int NOT NULL")]
		public int RowNumber
		{
			get
			{
				return this._RowNumber;
			}
			set
			{
				if ((this._RowNumber != value))
				{
					this.OnRowNumberChanging(value);
					this.SendPropertyChanging();
					this._RowNumber = value;
					this.SendPropertyChanged("RowNumber");
					this.OnRowNumberChanged();
				}
			}
		}
		
		[Column(Storage="_InitiallyDiscovered", DbType="DateTime")]
		public System.Nullable<System.DateTime> InitiallyDiscovered
		{
			get
			{
				return this._InitiallyDiscovered;
			}
			set
			{
				if ((this._InitiallyDiscovered != value))
				{
					this.OnInitiallyDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._InitiallyDiscovered = value;
					this.SendPropertyChanged("InitiallyDiscovered");
					this.OnInitiallyDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_LastDiscovered", DbType="DateTime NOT NULL")]
		public System.DateTime LastDiscovered
		{
			get
			{
				return this._LastDiscovered;
			}
			set
			{
				if ((this._LastDiscovered != value))
				{
					this.OnLastDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._LastDiscovered = value;
					this.SendPropertyChanged("LastDiscovered");
					this.OnLastDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_DomainID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int DomainID
		{
			get
			{
				return this._DomainID;
			}
			set
			{
				if ((this._DomainID != value))
				{
					if (this._Domain.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDomainIDChanging(value);
					this.SendPropertyChanging();
					this._DomainID = value;
					this.SendPropertyChanged("DomainID");
					this.OnDomainIDChanged();
				}
			}
		}
		
		[Column(Storage="_Count", DbType="Int NOT NULL")]
		public int Count
		{
			get
			{
				return this._Count;
			}
			set
			{
				if ((this._Count != value))
				{
					this.OnCountChanging(value);
					this.SendPropertyChanging();
					this._Count = value;
					this.SendPropertyChanged("Count");
					this.OnCountChanged();
				}
			}
		}
		
		[Column(Storage="_DaysSinceInitiallyDiscovered", DbType="SmallInt")]
		public System.Nullable<short> DaysSinceInitiallyDiscovered
		{
			get
			{
				return this._DaysSinceInitiallyDiscovered;
			}
			set
			{
				if ((this._DaysSinceInitiallyDiscovered != value))
				{
					this.OnDaysSinceInitiallyDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._DaysSinceInitiallyDiscovered = value;
					this.SendPropertyChanged("DaysSinceInitiallyDiscovered");
					this.OnDaysSinceInitiallyDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_DaysSinceLastDiscovered", DbType="SmallInt NOT NULL")]
		public short DaysSinceLastDiscovered
		{
			get
			{
				return this._DaysSinceLastDiscovered;
			}
			set
			{
				if ((this._DaysSinceLastDiscovered != value))
				{
					this.OnDaysSinceLastDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._DaysSinceLastDiscovered = value;
					this.SendPropertyChanged("DaysSinceLastDiscovered");
					this.OnDaysSinceLastDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_Strength", DbType="Float")]
		public System.Nullable<double> Strength
		{
			get
			{
				return this._Strength;
			}
			set
			{
				if ((this._Strength != value))
				{
					this.OnStrengthChanging(value);
					this.SendPropertyChanging();
					this._Strength = value;
					this.SendPropertyChanged("Strength");
					this.OnStrengthChanged();
				}
			}
		}
		
		[Column(Storage="_Rank", DbType="Int NOT NULL")]
		public int Rank
		{
			get
			{
				return this._Rank;
			}
			set
			{
				if ((this._Rank != value))
				{
					this.OnRankChanging(value);
					this.SendPropertyChanging();
					this._Rank = value;
					this.SendPropertyChanged("Rank");
					this.OnRankChanged();
				}
			}
		}
		
		[Column(Storage="_DenseRank", DbType="Int NOT NULL")]
		public int DenseRank
		{
			get
			{
				return this._DenseRank;
			}
			set
			{
				if ((this._DenseRank != value))
				{
					this.OnDenseRankChanging(value);
					this.SendPropertyChanging();
					this._DenseRank = value;
					this.SendPropertyChanged("DenseRank");
					this.OnDenseRankChanged();
				}
			}
		}
		
		[Column(Storage="_NTile", DbType="TinyInt NOT NULL")]
		public byte NTile
		{
			get
			{
				return this._NTile;
			}
			set
			{
				if ((this._NTile != value))
				{
					this.OnNTileChanging(value);
					this.SendPropertyChanging();
					this._NTile = value;
					this.SendPropertyChanged("NTile");
					this.OnNTileChanged();
				}
			}
		}
		
		[Association(Name="Domain_Files_MOST_POPULAR_DOMAINS_BY_DOMAIN", Storage="_Domain", ThisKey="DomainID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Domain Domain
		{
			get
			{
				return this._Domain.Entity;
			}
			set
			{
				Domain previousValue = this._Domain.Entity;
				if (((previousValue != value) 
							|| (this._Domain.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Domain.Entity = null;
						previousValue.Files_MOST_POPULAR_DOMAINS_BY_DOMAIN = null;
					}
					this._Domain.Entity = value;
					if ((value != null))
					{
						value.Files_MOST_POPULAR_DOMAINS_BY_DOMAIN = this;
						this._DomainID = value.ID;
					}
					else
					{
						this._DomainID = default(int);
					}
					this.SendPropertyChanged("Domain");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="rpt.Files_MOST_POPULAR_DOMAINS_BY_EXTENSIONS")]
	public partial class Files_MOST_POPULAR_DOMAINS_BY_EXTENSION : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RowNumber;
		
		private System.Nullable<System.DateTime> _InitiallyDiscovered;
		
		private System.DateTime _LastDiscovered;
		
		private int _DomainID;
		
		private int _Count;
		
		private System.Nullable<short> _DaysSinceInitiallyDiscovered;
		
		private short _DaysSinceLastDiscovered;
		
		private System.Nullable<double> _Strength;
		
		private int _Rank;
		
		private int _DenseRank;
		
		private byte _NTile;
		
		private EntityRef<Domain> _Domain;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRowNumberChanging(int value);
    partial void OnRowNumberChanged();
    partial void OnInitiallyDiscoveredChanging(System.Nullable<System.DateTime> value);
    partial void OnInitiallyDiscoveredChanged();
    partial void OnLastDiscoveredChanging(System.DateTime value);
    partial void OnLastDiscoveredChanged();
    partial void OnDomainIDChanging(int value);
    partial void OnDomainIDChanged();
    partial void OnCountChanging(int value);
    partial void OnCountChanged();
    partial void OnDaysSinceInitiallyDiscoveredChanging(System.Nullable<short> value);
    partial void OnDaysSinceInitiallyDiscoveredChanged();
    partial void OnDaysSinceLastDiscoveredChanging(short value);
    partial void OnDaysSinceLastDiscoveredChanged();
    partial void OnStrengthChanging(System.Nullable<double> value);
    partial void OnStrengthChanged();
    partial void OnRankChanging(int value);
    partial void OnRankChanged();
    partial void OnDenseRankChanging(int value);
    partial void OnDenseRankChanged();
    partial void OnNTileChanging(byte value);
    partial void OnNTileChanged();
    #endregion
		
		public Files_MOST_POPULAR_DOMAINS_BY_EXTENSION()
		{
			this._Domain = default(EntityRef<Domain>);
			OnCreated();
		}
		
		[Column(Storage="_RowNumber", DbType="Int NOT NULL")]
		public int RowNumber
		{
			get
			{
				return this._RowNumber;
			}
			set
			{
				if ((this._RowNumber != value))
				{
					this.OnRowNumberChanging(value);
					this.SendPropertyChanging();
					this._RowNumber = value;
					this.SendPropertyChanged("RowNumber");
					this.OnRowNumberChanged();
				}
			}
		}
		
		[Column(Storage="_InitiallyDiscovered", DbType="DateTime")]
		public System.Nullable<System.DateTime> InitiallyDiscovered
		{
			get
			{
				return this._InitiallyDiscovered;
			}
			set
			{
				if ((this._InitiallyDiscovered != value))
				{
					this.OnInitiallyDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._InitiallyDiscovered = value;
					this.SendPropertyChanged("InitiallyDiscovered");
					this.OnInitiallyDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_LastDiscovered", DbType="DateTime NOT NULL")]
		public System.DateTime LastDiscovered
		{
			get
			{
				return this._LastDiscovered;
			}
			set
			{
				if ((this._LastDiscovered != value))
				{
					this.OnLastDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._LastDiscovered = value;
					this.SendPropertyChanged("LastDiscovered");
					this.OnLastDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_DomainID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int DomainID
		{
			get
			{
				return this._DomainID;
			}
			set
			{
				if ((this._DomainID != value))
				{
					if (this._Domain.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDomainIDChanging(value);
					this.SendPropertyChanging();
					this._DomainID = value;
					this.SendPropertyChanged("DomainID");
					this.OnDomainIDChanged();
				}
			}
		}
		
		[Column(Storage="_Count", DbType="Int NOT NULL")]
		public int Count
		{
			get
			{
				return this._Count;
			}
			set
			{
				if ((this._Count != value))
				{
					this.OnCountChanging(value);
					this.SendPropertyChanging();
					this._Count = value;
					this.SendPropertyChanged("Count");
					this.OnCountChanged();
				}
			}
		}
		
		[Column(Storage="_DaysSinceInitiallyDiscovered", DbType="SmallInt")]
		public System.Nullable<short> DaysSinceInitiallyDiscovered
		{
			get
			{
				return this._DaysSinceInitiallyDiscovered;
			}
			set
			{
				if ((this._DaysSinceInitiallyDiscovered != value))
				{
					this.OnDaysSinceInitiallyDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._DaysSinceInitiallyDiscovered = value;
					this.SendPropertyChanged("DaysSinceInitiallyDiscovered");
					this.OnDaysSinceInitiallyDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_DaysSinceLastDiscovered", DbType="SmallInt NOT NULL")]
		public short DaysSinceLastDiscovered
		{
			get
			{
				return this._DaysSinceLastDiscovered;
			}
			set
			{
				if ((this._DaysSinceLastDiscovered != value))
				{
					this.OnDaysSinceLastDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._DaysSinceLastDiscovered = value;
					this.SendPropertyChanged("DaysSinceLastDiscovered");
					this.OnDaysSinceLastDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_Strength", DbType="Float")]
		public System.Nullable<double> Strength
		{
			get
			{
				return this._Strength;
			}
			set
			{
				if ((this._Strength != value))
				{
					this.OnStrengthChanging(value);
					this.SendPropertyChanging();
					this._Strength = value;
					this.SendPropertyChanged("Strength");
					this.OnStrengthChanged();
				}
			}
		}
		
		[Column(Storage="_Rank", DbType="Int NOT NULL")]
		public int Rank
		{
			get
			{
				return this._Rank;
			}
			set
			{
				if ((this._Rank != value))
				{
					this.OnRankChanging(value);
					this.SendPropertyChanging();
					this._Rank = value;
					this.SendPropertyChanged("Rank");
					this.OnRankChanged();
				}
			}
		}
		
		[Column(Storage="_DenseRank", DbType="Int NOT NULL")]
		public int DenseRank
		{
			get
			{
				return this._DenseRank;
			}
			set
			{
				if ((this._DenseRank != value))
				{
					this.OnDenseRankChanging(value);
					this.SendPropertyChanging();
					this._DenseRank = value;
					this.SendPropertyChanged("DenseRank");
					this.OnDenseRankChanged();
				}
			}
		}
		
		[Column(Storage="_NTile", DbType="TinyInt NOT NULL")]
		public byte NTile
		{
			get
			{
				return this._NTile;
			}
			set
			{
				if ((this._NTile != value))
				{
					this.OnNTileChanging(value);
					this.SendPropertyChanging();
					this._NTile = value;
					this.SendPropertyChanged("NTile");
					this.OnNTileChanged();
				}
			}
		}
		
		[Association(Name="Domain_Files_MOST_POPULAR_DOMAINS_BY_EXTENSION", Storage="_Domain", ThisKey="DomainID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Domain Domain
		{
			get
			{
				return this._Domain.Entity;
			}
			set
			{
				Domain previousValue = this._Domain.Entity;
				if (((previousValue != value) 
							|| (this._Domain.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Domain.Entity = null;
						previousValue.Files_MOST_POPULAR_DOMAINS_BY_EXTENSION = null;
					}
					this._Domain.Entity = value;
					if ((value != null))
					{
						value.Files_MOST_POPULAR_DOMAINS_BY_EXTENSION = this;
						this._DomainID = value.ID;
					}
					else
					{
						this._DomainID = default(int);
					}
					this.SendPropertyChanged("Domain");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="rpt.Files_MOST_POPULAR_DOMAINS_BY_HOSTS")]
	public partial class Files_MOST_POPULAR_DOMAINS_BY_HOST : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RowNumber;
		
		private System.Nullable<System.DateTime> _InitiallyDiscovered;
		
		private System.DateTime _LastDiscovered;
		
		private int _DomainID;
		
		private int _Count;
		
		private System.Nullable<short> _DaysSinceInitiallyDiscovered;
		
		private short _DaysSinceLastDiscovered;
		
		private System.Nullable<double> _Strength;
		
		private int _Rank;
		
		private int _DenseRank;
		
		private byte _NTile;
		
		private EntityRef<Domain> _Domain;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRowNumberChanging(int value);
    partial void OnRowNumberChanged();
    partial void OnInitiallyDiscoveredChanging(System.Nullable<System.DateTime> value);
    partial void OnInitiallyDiscoveredChanged();
    partial void OnLastDiscoveredChanging(System.DateTime value);
    partial void OnLastDiscoveredChanged();
    partial void OnDomainIDChanging(int value);
    partial void OnDomainIDChanged();
    partial void OnCountChanging(int value);
    partial void OnCountChanged();
    partial void OnDaysSinceInitiallyDiscoveredChanging(System.Nullable<short> value);
    partial void OnDaysSinceInitiallyDiscoveredChanged();
    partial void OnDaysSinceLastDiscoveredChanging(short value);
    partial void OnDaysSinceLastDiscoveredChanged();
    partial void OnStrengthChanging(System.Nullable<double> value);
    partial void OnStrengthChanged();
    partial void OnRankChanging(int value);
    partial void OnRankChanged();
    partial void OnDenseRankChanging(int value);
    partial void OnDenseRankChanged();
    partial void OnNTileChanging(byte value);
    partial void OnNTileChanged();
    #endregion
		
		public Files_MOST_POPULAR_DOMAINS_BY_HOST()
		{
			this._Domain = default(EntityRef<Domain>);
			OnCreated();
		}
		
		[Column(Storage="_RowNumber", DbType="Int NOT NULL")]
		public int RowNumber
		{
			get
			{
				return this._RowNumber;
			}
			set
			{
				if ((this._RowNumber != value))
				{
					this.OnRowNumberChanging(value);
					this.SendPropertyChanging();
					this._RowNumber = value;
					this.SendPropertyChanged("RowNumber");
					this.OnRowNumberChanged();
				}
			}
		}
		
		[Column(Storage="_InitiallyDiscovered", DbType="DateTime")]
		public System.Nullable<System.DateTime> InitiallyDiscovered
		{
			get
			{
				return this._InitiallyDiscovered;
			}
			set
			{
				if ((this._InitiallyDiscovered != value))
				{
					this.OnInitiallyDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._InitiallyDiscovered = value;
					this.SendPropertyChanged("InitiallyDiscovered");
					this.OnInitiallyDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_LastDiscovered", DbType="DateTime NOT NULL")]
		public System.DateTime LastDiscovered
		{
			get
			{
				return this._LastDiscovered;
			}
			set
			{
				if ((this._LastDiscovered != value))
				{
					this.OnLastDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._LastDiscovered = value;
					this.SendPropertyChanged("LastDiscovered");
					this.OnLastDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_DomainID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int DomainID
		{
			get
			{
				return this._DomainID;
			}
			set
			{
				if ((this._DomainID != value))
				{
					if (this._Domain.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDomainIDChanging(value);
					this.SendPropertyChanging();
					this._DomainID = value;
					this.SendPropertyChanged("DomainID");
					this.OnDomainIDChanged();
				}
			}
		}
		
		[Column(Storage="_Count", DbType="Int NOT NULL")]
		public int Count
		{
			get
			{
				return this._Count;
			}
			set
			{
				if ((this._Count != value))
				{
					this.OnCountChanging(value);
					this.SendPropertyChanging();
					this._Count = value;
					this.SendPropertyChanged("Count");
					this.OnCountChanged();
				}
			}
		}
		
		[Column(Storage="_DaysSinceInitiallyDiscovered", DbType="SmallInt")]
		public System.Nullable<short> DaysSinceInitiallyDiscovered
		{
			get
			{
				return this._DaysSinceInitiallyDiscovered;
			}
			set
			{
				if ((this._DaysSinceInitiallyDiscovered != value))
				{
					this.OnDaysSinceInitiallyDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._DaysSinceInitiallyDiscovered = value;
					this.SendPropertyChanged("DaysSinceInitiallyDiscovered");
					this.OnDaysSinceInitiallyDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_DaysSinceLastDiscovered", DbType="SmallInt NOT NULL")]
		public short DaysSinceLastDiscovered
		{
			get
			{
				return this._DaysSinceLastDiscovered;
			}
			set
			{
				if ((this._DaysSinceLastDiscovered != value))
				{
					this.OnDaysSinceLastDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._DaysSinceLastDiscovered = value;
					this.SendPropertyChanged("DaysSinceLastDiscovered");
					this.OnDaysSinceLastDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_Strength", DbType="Float")]
		public System.Nullable<double> Strength
		{
			get
			{
				return this._Strength;
			}
			set
			{
				if ((this._Strength != value))
				{
					this.OnStrengthChanging(value);
					this.SendPropertyChanging();
					this._Strength = value;
					this.SendPropertyChanged("Strength");
					this.OnStrengthChanged();
				}
			}
		}
		
		[Column(Storage="_Rank", DbType="Int NOT NULL")]
		public int Rank
		{
			get
			{
				return this._Rank;
			}
			set
			{
				if ((this._Rank != value))
				{
					this.OnRankChanging(value);
					this.SendPropertyChanging();
					this._Rank = value;
					this.SendPropertyChanged("Rank");
					this.OnRankChanged();
				}
			}
		}
		
		[Column(Storage="_DenseRank", DbType="Int NOT NULL")]
		public int DenseRank
		{
			get
			{
				return this._DenseRank;
			}
			set
			{
				if ((this._DenseRank != value))
				{
					this.OnDenseRankChanging(value);
					this.SendPropertyChanging();
					this._DenseRank = value;
					this.SendPropertyChanged("DenseRank");
					this.OnDenseRankChanged();
				}
			}
		}
		
		[Column(Storage="_NTile", DbType="TinyInt NOT NULL")]
		public byte NTile
		{
			get
			{
				return this._NTile;
			}
			set
			{
				if ((this._NTile != value))
				{
					this.OnNTileChanging(value);
					this.SendPropertyChanging();
					this._NTile = value;
					this.SendPropertyChanged("NTile");
					this.OnNTileChanged();
				}
			}
		}
		
		[Association(Name="Domain_Files_MOST_POPULAR_DOMAINS_BY_HOST", Storage="_Domain", ThisKey="DomainID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Domain Domain
		{
			get
			{
				return this._Domain.Entity;
			}
			set
			{
				Domain previousValue = this._Domain.Entity;
				if (((previousValue != value) 
							|| (this._Domain.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Domain.Entity = null;
						previousValue.Files_MOST_POPULAR_DOMAINS_BY_HOST = null;
					}
					this._Domain.Entity = value;
					if ((value != null))
					{
						value.Files_MOST_POPULAR_DOMAINS_BY_HOST = this;
						this._DomainID = value.ID;
					}
					else
					{
						this._DomainID = default(int);
					}
					this.SendPropertyChanged("Domain");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="rpt.Files_MOST_POPULAR_DOMAINS_BY_SCHEMES")]
	public partial class Files_MOST_POPULAR_DOMAINS_BY_SCHEME : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RowNumber;
		
		private System.Nullable<System.DateTime> _InitiallyDiscovered;
		
		private System.DateTime _LastDiscovered;
		
		private int _DomainID;
		
		private int _Count;
		
		private System.Nullable<short> _DaysSinceInitiallyDiscovered;
		
		private short _DaysSinceLastDiscovered;
		
		private System.Nullable<double> _Strength;
		
		private int _Rank;
		
		private int _DenseRank;
		
		private byte _NTile;
		
		private EntityRef<Domain> _Domain;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRowNumberChanging(int value);
    partial void OnRowNumberChanged();
    partial void OnInitiallyDiscoveredChanging(System.Nullable<System.DateTime> value);
    partial void OnInitiallyDiscoveredChanged();
    partial void OnLastDiscoveredChanging(System.DateTime value);
    partial void OnLastDiscoveredChanged();
    partial void OnDomainIDChanging(int value);
    partial void OnDomainIDChanged();
    partial void OnCountChanging(int value);
    partial void OnCountChanged();
    partial void OnDaysSinceInitiallyDiscoveredChanging(System.Nullable<short> value);
    partial void OnDaysSinceInitiallyDiscoveredChanged();
    partial void OnDaysSinceLastDiscoveredChanging(short value);
    partial void OnDaysSinceLastDiscoveredChanged();
    partial void OnStrengthChanging(System.Nullable<double> value);
    partial void OnStrengthChanged();
    partial void OnRankChanging(int value);
    partial void OnRankChanged();
    partial void OnDenseRankChanging(int value);
    partial void OnDenseRankChanged();
    partial void OnNTileChanging(byte value);
    partial void OnNTileChanged();
    #endregion
		
		public Files_MOST_POPULAR_DOMAINS_BY_SCHEME()
		{
			this._Domain = default(EntityRef<Domain>);
			OnCreated();
		}
		
		[Column(Storage="_RowNumber", DbType="Int NOT NULL")]
		public int RowNumber
		{
			get
			{
				return this._RowNumber;
			}
			set
			{
				if ((this._RowNumber != value))
				{
					this.OnRowNumberChanging(value);
					this.SendPropertyChanging();
					this._RowNumber = value;
					this.SendPropertyChanged("RowNumber");
					this.OnRowNumberChanged();
				}
			}
		}
		
		[Column(Storage="_InitiallyDiscovered", DbType="DateTime")]
		public System.Nullable<System.DateTime> InitiallyDiscovered
		{
			get
			{
				return this._InitiallyDiscovered;
			}
			set
			{
				if ((this._InitiallyDiscovered != value))
				{
					this.OnInitiallyDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._InitiallyDiscovered = value;
					this.SendPropertyChanged("InitiallyDiscovered");
					this.OnInitiallyDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_LastDiscovered", DbType="DateTime NOT NULL")]
		public System.DateTime LastDiscovered
		{
			get
			{
				return this._LastDiscovered;
			}
			set
			{
				if ((this._LastDiscovered != value))
				{
					this.OnLastDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._LastDiscovered = value;
					this.SendPropertyChanged("LastDiscovered");
					this.OnLastDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_DomainID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int DomainID
		{
			get
			{
				return this._DomainID;
			}
			set
			{
				if ((this._DomainID != value))
				{
					if (this._Domain.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDomainIDChanging(value);
					this.SendPropertyChanging();
					this._DomainID = value;
					this.SendPropertyChanged("DomainID");
					this.OnDomainIDChanged();
				}
			}
		}
		
		[Column(Storage="_Count", DbType="Int NOT NULL")]
		public int Count
		{
			get
			{
				return this._Count;
			}
			set
			{
				if ((this._Count != value))
				{
					this.OnCountChanging(value);
					this.SendPropertyChanging();
					this._Count = value;
					this.SendPropertyChanged("Count");
					this.OnCountChanged();
				}
			}
		}
		
		[Column(Storage="_DaysSinceInitiallyDiscovered", DbType="SmallInt")]
		public System.Nullable<short> DaysSinceInitiallyDiscovered
		{
			get
			{
				return this._DaysSinceInitiallyDiscovered;
			}
			set
			{
				if ((this._DaysSinceInitiallyDiscovered != value))
				{
					this.OnDaysSinceInitiallyDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._DaysSinceInitiallyDiscovered = value;
					this.SendPropertyChanged("DaysSinceInitiallyDiscovered");
					this.OnDaysSinceInitiallyDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_DaysSinceLastDiscovered", DbType="SmallInt NOT NULL")]
		public short DaysSinceLastDiscovered
		{
			get
			{
				return this._DaysSinceLastDiscovered;
			}
			set
			{
				if ((this._DaysSinceLastDiscovered != value))
				{
					this.OnDaysSinceLastDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._DaysSinceLastDiscovered = value;
					this.SendPropertyChanged("DaysSinceLastDiscovered");
					this.OnDaysSinceLastDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_Strength", DbType="Float")]
		public System.Nullable<double> Strength
		{
			get
			{
				return this._Strength;
			}
			set
			{
				if ((this._Strength != value))
				{
					this.OnStrengthChanging(value);
					this.SendPropertyChanging();
					this._Strength = value;
					this.SendPropertyChanged("Strength");
					this.OnStrengthChanged();
				}
			}
		}
		
		[Column(Storage="_Rank", DbType="Int NOT NULL")]
		public int Rank
		{
			get
			{
				return this._Rank;
			}
			set
			{
				if ((this._Rank != value))
				{
					this.OnRankChanging(value);
					this.SendPropertyChanging();
					this._Rank = value;
					this.SendPropertyChanged("Rank");
					this.OnRankChanged();
				}
			}
		}
		
		[Column(Storage="_DenseRank", DbType="Int NOT NULL")]
		public int DenseRank
		{
			get
			{
				return this._DenseRank;
			}
			set
			{
				if ((this._DenseRank != value))
				{
					this.OnDenseRankChanging(value);
					this.SendPropertyChanging();
					this._DenseRank = value;
					this.SendPropertyChanged("DenseRank");
					this.OnDenseRankChanged();
				}
			}
		}
		
		[Column(Storage="_NTile", DbType="TinyInt NOT NULL")]
		public byte NTile
		{
			get
			{
				return this._NTile;
			}
			set
			{
				if ((this._NTile != value))
				{
					this.OnNTileChanging(value);
					this.SendPropertyChanging();
					this._NTile = value;
					this.SendPropertyChanged("NTile");
					this.OnNTileChanged();
				}
			}
		}
		
		[Association(Name="Domain_Files_MOST_POPULAR_DOMAINS_BY_SCHEME", Storage="_Domain", ThisKey="DomainID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Domain Domain
		{
			get
			{
				return this._Domain.Entity;
			}
			set
			{
				Domain previousValue = this._Domain.Entity;
				if (((previousValue != value) 
							|| (this._Domain.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Domain.Entity = null;
						previousValue.Files_MOST_POPULAR_DOMAINS_BY_SCHEME = null;
					}
					this._Domain.Entity = value;
					if ((value != null))
					{
						value.Files_MOST_POPULAR_DOMAINS_BY_SCHEME = this;
						this._DomainID = value.ID;
					}
					else
					{
						this._DomainID = default(int);
					}
					this.SendPropertyChanged("Domain");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="rpt.Files_MOST_POPULAR_EXTENSIONS_BY_ABSOLUTEURIS")]
	public partial class Files_MOST_POPULAR_EXTENSIONS_BY_ABSOLUTEURI : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RowNumber;
		
		private System.Nullable<System.DateTime> _InitiallyDiscovered;
		
		private System.DateTime _LastDiscovered;
		
		private int _ExtensionID;
		
		private int _Count;
		
		private System.Nullable<short> _DaysSinceInitiallyDiscovered;
		
		private short _DaysSinceLastDiscovered;
		
		private System.Nullable<double> _Strength;
		
		private int _Rank;
		
		private int _DenseRank;
		
		private byte _NTile;
		
		private EntityRef<Extension> _Extension;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRowNumberChanging(int value);
    partial void OnRowNumberChanged();
    partial void OnInitiallyDiscoveredChanging(System.Nullable<System.DateTime> value);
    partial void OnInitiallyDiscoveredChanged();
    partial void OnLastDiscoveredChanging(System.DateTime value);
    partial void OnLastDiscoveredChanged();
    partial void OnExtensionIDChanging(int value);
    partial void OnExtensionIDChanged();
    partial void OnCountChanging(int value);
    partial void OnCountChanged();
    partial void OnDaysSinceInitiallyDiscoveredChanging(System.Nullable<short> value);
    partial void OnDaysSinceInitiallyDiscoveredChanged();
    partial void OnDaysSinceLastDiscoveredChanging(short value);
    partial void OnDaysSinceLastDiscoveredChanged();
    partial void OnStrengthChanging(System.Nullable<double> value);
    partial void OnStrengthChanged();
    partial void OnRankChanging(int value);
    partial void OnRankChanged();
    partial void OnDenseRankChanging(int value);
    partial void OnDenseRankChanged();
    partial void OnNTileChanging(byte value);
    partial void OnNTileChanged();
    #endregion
		
		public Files_MOST_POPULAR_EXTENSIONS_BY_ABSOLUTEURI()
		{
			this._Extension = default(EntityRef<Extension>);
			OnCreated();
		}
		
		[Column(Storage="_RowNumber", DbType="Int NOT NULL")]
		public int RowNumber
		{
			get
			{
				return this._RowNumber;
			}
			set
			{
				if ((this._RowNumber != value))
				{
					this.OnRowNumberChanging(value);
					this.SendPropertyChanging();
					this._RowNumber = value;
					this.SendPropertyChanged("RowNumber");
					this.OnRowNumberChanged();
				}
			}
		}
		
		[Column(Storage="_InitiallyDiscovered", DbType="DateTime")]
		public System.Nullable<System.DateTime> InitiallyDiscovered
		{
			get
			{
				return this._InitiallyDiscovered;
			}
			set
			{
				if ((this._InitiallyDiscovered != value))
				{
					this.OnInitiallyDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._InitiallyDiscovered = value;
					this.SendPropertyChanged("InitiallyDiscovered");
					this.OnInitiallyDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_LastDiscovered", DbType="DateTime NOT NULL")]
		public System.DateTime LastDiscovered
		{
			get
			{
				return this._LastDiscovered;
			}
			set
			{
				if ((this._LastDiscovered != value))
				{
					this.OnLastDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._LastDiscovered = value;
					this.SendPropertyChanged("LastDiscovered");
					this.OnLastDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_ExtensionID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ExtensionID
		{
			get
			{
				return this._ExtensionID;
			}
			set
			{
				if ((this._ExtensionID != value))
				{
					if (this._Extension.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnExtensionIDChanging(value);
					this.SendPropertyChanging();
					this._ExtensionID = value;
					this.SendPropertyChanged("ExtensionID");
					this.OnExtensionIDChanged();
				}
			}
		}
		
		[Column(Storage="_Count", DbType="Int NOT NULL")]
		public int Count
		{
			get
			{
				return this._Count;
			}
			set
			{
				if ((this._Count != value))
				{
					this.OnCountChanging(value);
					this.SendPropertyChanging();
					this._Count = value;
					this.SendPropertyChanged("Count");
					this.OnCountChanged();
				}
			}
		}
		
		[Column(Storage="_DaysSinceInitiallyDiscovered", DbType="SmallInt")]
		public System.Nullable<short> DaysSinceInitiallyDiscovered
		{
			get
			{
				return this._DaysSinceInitiallyDiscovered;
			}
			set
			{
				if ((this._DaysSinceInitiallyDiscovered != value))
				{
					this.OnDaysSinceInitiallyDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._DaysSinceInitiallyDiscovered = value;
					this.SendPropertyChanged("DaysSinceInitiallyDiscovered");
					this.OnDaysSinceInitiallyDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_DaysSinceLastDiscovered", DbType="SmallInt NOT NULL")]
		public short DaysSinceLastDiscovered
		{
			get
			{
				return this._DaysSinceLastDiscovered;
			}
			set
			{
				if ((this._DaysSinceLastDiscovered != value))
				{
					this.OnDaysSinceLastDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._DaysSinceLastDiscovered = value;
					this.SendPropertyChanged("DaysSinceLastDiscovered");
					this.OnDaysSinceLastDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_Strength", DbType="Float")]
		public System.Nullable<double> Strength
		{
			get
			{
				return this._Strength;
			}
			set
			{
				if ((this._Strength != value))
				{
					this.OnStrengthChanging(value);
					this.SendPropertyChanging();
					this._Strength = value;
					this.SendPropertyChanged("Strength");
					this.OnStrengthChanged();
				}
			}
		}
		
		[Column(Storage="_Rank", DbType="Int NOT NULL")]
		public int Rank
		{
			get
			{
				return this._Rank;
			}
			set
			{
				if ((this._Rank != value))
				{
					this.OnRankChanging(value);
					this.SendPropertyChanging();
					this._Rank = value;
					this.SendPropertyChanged("Rank");
					this.OnRankChanged();
				}
			}
		}
		
		[Column(Storage="_DenseRank", DbType="Int NOT NULL")]
		public int DenseRank
		{
			get
			{
				return this._DenseRank;
			}
			set
			{
				if ((this._DenseRank != value))
				{
					this.OnDenseRankChanging(value);
					this.SendPropertyChanging();
					this._DenseRank = value;
					this.SendPropertyChanged("DenseRank");
					this.OnDenseRankChanged();
				}
			}
		}
		
		[Column(Storage="_NTile", DbType="TinyInt NOT NULL")]
		public byte NTile
		{
			get
			{
				return this._NTile;
			}
			set
			{
				if ((this._NTile != value))
				{
					this.OnNTileChanging(value);
					this.SendPropertyChanging();
					this._NTile = value;
					this.SendPropertyChanged("NTile");
					this.OnNTileChanged();
				}
			}
		}
		
		[Association(Name="Extension_Files_MOST_POPULAR_EXTENSIONS_BY_ABSOLUTEURI", Storage="_Extension", ThisKey="ExtensionID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Extension Extension
		{
			get
			{
				return this._Extension.Entity;
			}
			set
			{
				Extension previousValue = this._Extension.Entity;
				if (((previousValue != value) 
							|| (this._Extension.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Extension.Entity = null;
						previousValue.Files_MOST_POPULAR_EXTENSIONS_BY_ABSOLUTEURI = null;
					}
					this._Extension.Entity = value;
					if ((value != null))
					{
						value.Files_MOST_POPULAR_EXTENSIONS_BY_ABSOLUTEURI = this;
						this._ExtensionID = value.ID;
					}
					else
					{
						this._ExtensionID = default(int);
					}
					this.SendPropertyChanged("Extension");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="rpt.Files_MOST_POPULAR_EXTENSIONS_BY_DOMAINS")]
	public partial class Files_MOST_POPULAR_EXTENSIONS_BY_DOMAIN : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RowNumber;
		
		private System.Nullable<System.DateTime> _InitiallyDiscovered;
		
		private System.DateTime _LastDiscovered;
		
		private int _ExtensionID;
		
		private int _Count;
		
		private System.Nullable<short> _DaysSinceInitiallyDiscovered;
		
		private short _DaysSinceLastDiscovered;
		
		private System.Nullable<double> _Strength;
		
		private int _Rank;
		
		private int _DenseRank;
		
		private byte _NTile;
		
		private EntityRef<Extension> _Extension;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRowNumberChanging(int value);
    partial void OnRowNumberChanged();
    partial void OnInitiallyDiscoveredChanging(System.Nullable<System.DateTime> value);
    partial void OnInitiallyDiscoveredChanged();
    partial void OnLastDiscoveredChanging(System.DateTime value);
    partial void OnLastDiscoveredChanged();
    partial void OnExtensionIDChanging(int value);
    partial void OnExtensionIDChanged();
    partial void OnCountChanging(int value);
    partial void OnCountChanged();
    partial void OnDaysSinceInitiallyDiscoveredChanging(System.Nullable<short> value);
    partial void OnDaysSinceInitiallyDiscoveredChanged();
    partial void OnDaysSinceLastDiscoveredChanging(short value);
    partial void OnDaysSinceLastDiscoveredChanged();
    partial void OnStrengthChanging(System.Nullable<double> value);
    partial void OnStrengthChanged();
    partial void OnRankChanging(int value);
    partial void OnRankChanged();
    partial void OnDenseRankChanging(int value);
    partial void OnDenseRankChanged();
    partial void OnNTileChanging(byte value);
    partial void OnNTileChanged();
    #endregion
		
		public Files_MOST_POPULAR_EXTENSIONS_BY_DOMAIN()
		{
			this._Extension = default(EntityRef<Extension>);
			OnCreated();
		}
		
		[Column(Storage="_RowNumber", DbType="Int NOT NULL")]
		public int RowNumber
		{
			get
			{
				return this._RowNumber;
			}
			set
			{
				if ((this._RowNumber != value))
				{
					this.OnRowNumberChanging(value);
					this.SendPropertyChanging();
					this._RowNumber = value;
					this.SendPropertyChanged("RowNumber");
					this.OnRowNumberChanged();
				}
			}
		}
		
		[Column(Storage="_InitiallyDiscovered", DbType="DateTime")]
		public System.Nullable<System.DateTime> InitiallyDiscovered
		{
			get
			{
				return this._InitiallyDiscovered;
			}
			set
			{
				if ((this._InitiallyDiscovered != value))
				{
					this.OnInitiallyDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._InitiallyDiscovered = value;
					this.SendPropertyChanged("InitiallyDiscovered");
					this.OnInitiallyDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_LastDiscovered", DbType="DateTime NOT NULL")]
		public System.DateTime LastDiscovered
		{
			get
			{
				return this._LastDiscovered;
			}
			set
			{
				if ((this._LastDiscovered != value))
				{
					this.OnLastDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._LastDiscovered = value;
					this.SendPropertyChanged("LastDiscovered");
					this.OnLastDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_ExtensionID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ExtensionID
		{
			get
			{
				return this._ExtensionID;
			}
			set
			{
				if ((this._ExtensionID != value))
				{
					if (this._Extension.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnExtensionIDChanging(value);
					this.SendPropertyChanging();
					this._ExtensionID = value;
					this.SendPropertyChanged("ExtensionID");
					this.OnExtensionIDChanged();
				}
			}
		}
		
		[Column(Storage="_Count", DbType="Int NOT NULL")]
		public int Count
		{
			get
			{
				return this._Count;
			}
			set
			{
				if ((this._Count != value))
				{
					this.OnCountChanging(value);
					this.SendPropertyChanging();
					this._Count = value;
					this.SendPropertyChanged("Count");
					this.OnCountChanged();
				}
			}
		}
		
		[Column(Storage="_DaysSinceInitiallyDiscovered", DbType="SmallInt")]
		public System.Nullable<short> DaysSinceInitiallyDiscovered
		{
			get
			{
				return this._DaysSinceInitiallyDiscovered;
			}
			set
			{
				if ((this._DaysSinceInitiallyDiscovered != value))
				{
					this.OnDaysSinceInitiallyDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._DaysSinceInitiallyDiscovered = value;
					this.SendPropertyChanged("DaysSinceInitiallyDiscovered");
					this.OnDaysSinceInitiallyDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_DaysSinceLastDiscovered", DbType="SmallInt NOT NULL")]
		public short DaysSinceLastDiscovered
		{
			get
			{
				return this._DaysSinceLastDiscovered;
			}
			set
			{
				if ((this._DaysSinceLastDiscovered != value))
				{
					this.OnDaysSinceLastDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._DaysSinceLastDiscovered = value;
					this.SendPropertyChanged("DaysSinceLastDiscovered");
					this.OnDaysSinceLastDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_Strength", DbType="Float")]
		public System.Nullable<double> Strength
		{
			get
			{
				return this._Strength;
			}
			set
			{
				if ((this._Strength != value))
				{
					this.OnStrengthChanging(value);
					this.SendPropertyChanging();
					this._Strength = value;
					this.SendPropertyChanged("Strength");
					this.OnStrengthChanged();
				}
			}
		}
		
		[Column(Storage="_Rank", DbType="Int NOT NULL")]
		public int Rank
		{
			get
			{
				return this._Rank;
			}
			set
			{
				if ((this._Rank != value))
				{
					this.OnRankChanging(value);
					this.SendPropertyChanging();
					this._Rank = value;
					this.SendPropertyChanged("Rank");
					this.OnRankChanged();
				}
			}
		}
		
		[Column(Storage="_DenseRank", DbType="Int NOT NULL")]
		public int DenseRank
		{
			get
			{
				return this._DenseRank;
			}
			set
			{
				if ((this._DenseRank != value))
				{
					this.OnDenseRankChanging(value);
					this.SendPropertyChanging();
					this._DenseRank = value;
					this.SendPropertyChanged("DenseRank");
					this.OnDenseRankChanged();
				}
			}
		}
		
		[Column(Storage="_NTile", DbType="TinyInt NOT NULL")]
		public byte NTile
		{
			get
			{
				return this._NTile;
			}
			set
			{
				if ((this._NTile != value))
				{
					this.OnNTileChanging(value);
					this.SendPropertyChanging();
					this._NTile = value;
					this.SendPropertyChanged("NTile");
					this.OnNTileChanged();
				}
			}
		}
		
		[Association(Name="Extension_Files_MOST_POPULAR_EXTENSIONS_BY_DOMAIN", Storage="_Extension", ThisKey="ExtensionID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Extension Extension
		{
			get
			{
				return this._Extension.Entity;
			}
			set
			{
				Extension previousValue = this._Extension.Entity;
				if (((previousValue != value) 
							|| (this._Extension.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Extension.Entity = null;
						previousValue.Files_MOST_POPULAR_EXTENSIONS_BY_DOMAIN = null;
					}
					this._Extension.Entity = value;
					if ((value != null))
					{
						value.Files_MOST_POPULAR_EXTENSIONS_BY_DOMAIN = this;
						this._ExtensionID = value.ID;
					}
					else
					{
						this._ExtensionID = default(int);
					}
					this.SendPropertyChanged("Extension");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="rpt.Files_MOST_POPULAR_EXTENSIONS_BY_EXTENSIONS")]
	public partial class Files_MOST_POPULAR_EXTENSIONS_BY_EXTENSION : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RowNumber;
		
		private System.Nullable<System.DateTime> _InitiallyDiscovered;
		
		private System.DateTime _LastDiscovered;
		
		private int _ExtensionID;
		
		private int _Count;
		
		private System.Nullable<short> _DaysSinceInitiallyDiscovered;
		
		private short _DaysSinceLastDiscovered;
		
		private System.Nullable<double> _Strength;
		
		private int _Rank;
		
		private int _DenseRank;
		
		private byte _NTile;
		
		private EntityRef<Extension> _Extension;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRowNumberChanging(int value);
    partial void OnRowNumberChanged();
    partial void OnInitiallyDiscoveredChanging(System.Nullable<System.DateTime> value);
    partial void OnInitiallyDiscoveredChanged();
    partial void OnLastDiscoveredChanging(System.DateTime value);
    partial void OnLastDiscoveredChanged();
    partial void OnExtensionIDChanging(int value);
    partial void OnExtensionIDChanged();
    partial void OnCountChanging(int value);
    partial void OnCountChanged();
    partial void OnDaysSinceInitiallyDiscoveredChanging(System.Nullable<short> value);
    partial void OnDaysSinceInitiallyDiscoveredChanged();
    partial void OnDaysSinceLastDiscoveredChanging(short value);
    partial void OnDaysSinceLastDiscoveredChanged();
    partial void OnStrengthChanging(System.Nullable<double> value);
    partial void OnStrengthChanged();
    partial void OnRankChanging(int value);
    partial void OnRankChanged();
    partial void OnDenseRankChanging(int value);
    partial void OnDenseRankChanged();
    partial void OnNTileChanging(byte value);
    partial void OnNTileChanged();
    #endregion
		
		public Files_MOST_POPULAR_EXTENSIONS_BY_EXTENSION()
		{
			this._Extension = default(EntityRef<Extension>);
			OnCreated();
		}
		
		[Column(Storage="_RowNumber", DbType="Int NOT NULL")]
		public int RowNumber
		{
			get
			{
				return this._RowNumber;
			}
			set
			{
				if ((this._RowNumber != value))
				{
					this.OnRowNumberChanging(value);
					this.SendPropertyChanging();
					this._RowNumber = value;
					this.SendPropertyChanged("RowNumber");
					this.OnRowNumberChanged();
				}
			}
		}
		
		[Column(Storage="_InitiallyDiscovered", DbType="DateTime")]
		public System.Nullable<System.DateTime> InitiallyDiscovered
		{
			get
			{
				return this._InitiallyDiscovered;
			}
			set
			{
				if ((this._InitiallyDiscovered != value))
				{
					this.OnInitiallyDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._InitiallyDiscovered = value;
					this.SendPropertyChanged("InitiallyDiscovered");
					this.OnInitiallyDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_LastDiscovered", DbType="DateTime NOT NULL")]
		public System.DateTime LastDiscovered
		{
			get
			{
				return this._LastDiscovered;
			}
			set
			{
				if ((this._LastDiscovered != value))
				{
					this.OnLastDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._LastDiscovered = value;
					this.SendPropertyChanged("LastDiscovered");
					this.OnLastDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_ExtensionID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ExtensionID
		{
			get
			{
				return this._ExtensionID;
			}
			set
			{
				if ((this._ExtensionID != value))
				{
					if (this._Extension.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnExtensionIDChanging(value);
					this.SendPropertyChanging();
					this._ExtensionID = value;
					this.SendPropertyChanged("ExtensionID");
					this.OnExtensionIDChanged();
				}
			}
		}
		
		[Column(Storage="_Count", DbType="Int NOT NULL")]
		public int Count
		{
			get
			{
				return this._Count;
			}
			set
			{
				if ((this._Count != value))
				{
					this.OnCountChanging(value);
					this.SendPropertyChanging();
					this._Count = value;
					this.SendPropertyChanged("Count");
					this.OnCountChanged();
				}
			}
		}
		
		[Column(Storage="_DaysSinceInitiallyDiscovered", DbType="SmallInt")]
		public System.Nullable<short> DaysSinceInitiallyDiscovered
		{
			get
			{
				return this._DaysSinceInitiallyDiscovered;
			}
			set
			{
				if ((this._DaysSinceInitiallyDiscovered != value))
				{
					this.OnDaysSinceInitiallyDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._DaysSinceInitiallyDiscovered = value;
					this.SendPropertyChanged("DaysSinceInitiallyDiscovered");
					this.OnDaysSinceInitiallyDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_DaysSinceLastDiscovered", DbType="SmallInt NOT NULL")]
		public short DaysSinceLastDiscovered
		{
			get
			{
				return this._DaysSinceLastDiscovered;
			}
			set
			{
				if ((this._DaysSinceLastDiscovered != value))
				{
					this.OnDaysSinceLastDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._DaysSinceLastDiscovered = value;
					this.SendPropertyChanged("DaysSinceLastDiscovered");
					this.OnDaysSinceLastDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_Strength", DbType="Float")]
		public System.Nullable<double> Strength
		{
			get
			{
				return this._Strength;
			}
			set
			{
				if ((this._Strength != value))
				{
					this.OnStrengthChanging(value);
					this.SendPropertyChanging();
					this._Strength = value;
					this.SendPropertyChanged("Strength");
					this.OnStrengthChanged();
				}
			}
		}
		
		[Column(Storage="_Rank", DbType="Int NOT NULL")]
		public int Rank
		{
			get
			{
				return this._Rank;
			}
			set
			{
				if ((this._Rank != value))
				{
					this.OnRankChanging(value);
					this.SendPropertyChanging();
					this._Rank = value;
					this.SendPropertyChanged("Rank");
					this.OnRankChanged();
				}
			}
		}
		
		[Column(Storage="_DenseRank", DbType="Int NOT NULL")]
		public int DenseRank
		{
			get
			{
				return this._DenseRank;
			}
			set
			{
				if ((this._DenseRank != value))
				{
					this.OnDenseRankChanging(value);
					this.SendPropertyChanging();
					this._DenseRank = value;
					this.SendPropertyChanged("DenseRank");
					this.OnDenseRankChanged();
				}
			}
		}
		
		[Column(Storage="_NTile", DbType="TinyInt NOT NULL")]
		public byte NTile
		{
			get
			{
				return this._NTile;
			}
			set
			{
				if ((this._NTile != value))
				{
					this.OnNTileChanging(value);
					this.SendPropertyChanging();
					this._NTile = value;
					this.SendPropertyChanged("NTile");
					this.OnNTileChanged();
				}
			}
		}
		
		[Association(Name="Extension_Files_MOST_POPULAR_EXTENSIONS_BY_EXTENSION", Storage="_Extension", ThisKey="ExtensionID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Extension Extension
		{
			get
			{
				return this._Extension.Entity;
			}
			set
			{
				Extension previousValue = this._Extension.Entity;
				if (((previousValue != value) 
							|| (this._Extension.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Extension.Entity = null;
						previousValue.Files_MOST_POPULAR_EXTENSIONS_BY_EXTENSION = null;
					}
					this._Extension.Entity = value;
					if ((value != null))
					{
						value.Files_MOST_POPULAR_EXTENSIONS_BY_EXTENSION = this;
						this._ExtensionID = value.ID;
					}
					else
					{
						this._ExtensionID = default(int);
					}
					this.SendPropertyChanged("Extension");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="rpt.Files_MOST_POPULAR_EXTENSIONS_BY_HOSTS")]
	public partial class Files_MOST_POPULAR_EXTENSIONS_BY_HOST : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RowNumber;
		
		private System.Nullable<System.DateTime> _InitiallyDiscovered;
		
		private System.DateTime _LastDiscovered;
		
		private int _ExtensionID;
		
		private int _Count;
		
		private System.Nullable<short> _DaysSinceInitiallyDiscovered;
		
		private short _DaysSinceLastDiscovered;
		
		private System.Nullable<double> _Strength;
		
		private int _Rank;
		
		private int _DenseRank;
		
		private byte _NTile;
		
		private EntityRef<Extension> _Extension;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRowNumberChanging(int value);
    partial void OnRowNumberChanged();
    partial void OnInitiallyDiscoveredChanging(System.Nullable<System.DateTime> value);
    partial void OnInitiallyDiscoveredChanged();
    partial void OnLastDiscoveredChanging(System.DateTime value);
    partial void OnLastDiscoveredChanged();
    partial void OnExtensionIDChanging(int value);
    partial void OnExtensionIDChanged();
    partial void OnCountChanging(int value);
    partial void OnCountChanged();
    partial void OnDaysSinceInitiallyDiscoveredChanging(System.Nullable<short> value);
    partial void OnDaysSinceInitiallyDiscoveredChanged();
    partial void OnDaysSinceLastDiscoveredChanging(short value);
    partial void OnDaysSinceLastDiscoveredChanged();
    partial void OnStrengthChanging(System.Nullable<double> value);
    partial void OnStrengthChanged();
    partial void OnRankChanging(int value);
    partial void OnRankChanged();
    partial void OnDenseRankChanging(int value);
    partial void OnDenseRankChanged();
    partial void OnNTileChanging(byte value);
    partial void OnNTileChanged();
    #endregion
		
		public Files_MOST_POPULAR_EXTENSIONS_BY_HOST()
		{
			this._Extension = default(EntityRef<Extension>);
			OnCreated();
		}
		
		[Column(Storage="_RowNumber", DbType="Int NOT NULL")]
		public int RowNumber
		{
			get
			{
				return this._RowNumber;
			}
			set
			{
				if ((this._RowNumber != value))
				{
					this.OnRowNumberChanging(value);
					this.SendPropertyChanging();
					this._RowNumber = value;
					this.SendPropertyChanged("RowNumber");
					this.OnRowNumberChanged();
				}
			}
		}
		
		[Column(Storage="_InitiallyDiscovered", DbType="DateTime")]
		public System.Nullable<System.DateTime> InitiallyDiscovered
		{
			get
			{
				return this._InitiallyDiscovered;
			}
			set
			{
				if ((this._InitiallyDiscovered != value))
				{
					this.OnInitiallyDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._InitiallyDiscovered = value;
					this.SendPropertyChanged("InitiallyDiscovered");
					this.OnInitiallyDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_LastDiscovered", DbType="DateTime NOT NULL")]
		public System.DateTime LastDiscovered
		{
			get
			{
				return this._LastDiscovered;
			}
			set
			{
				if ((this._LastDiscovered != value))
				{
					this.OnLastDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._LastDiscovered = value;
					this.SendPropertyChanged("LastDiscovered");
					this.OnLastDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_ExtensionID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ExtensionID
		{
			get
			{
				return this._ExtensionID;
			}
			set
			{
				if ((this._ExtensionID != value))
				{
					if (this._Extension.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnExtensionIDChanging(value);
					this.SendPropertyChanging();
					this._ExtensionID = value;
					this.SendPropertyChanged("ExtensionID");
					this.OnExtensionIDChanged();
				}
			}
		}
		
		[Column(Storage="_Count", DbType="Int NOT NULL")]
		public int Count
		{
			get
			{
				return this._Count;
			}
			set
			{
				if ((this._Count != value))
				{
					this.OnCountChanging(value);
					this.SendPropertyChanging();
					this._Count = value;
					this.SendPropertyChanged("Count");
					this.OnCountChanged();
				}
			}
		}
		
		[Column(Storage="_DaysSinceInitiallyDiscovered", DbType="SmallInt")]
		public System.Nullable<short> DaysSinceInitiallyDiscovered
		{
			get
			{
				return this._DaysSinceInitiallyDiscovered;
			}
			set
			{
				if ((this._DaysSinceInitiallyDiscovered != value))
				{
					this.OnDaysSinceInitiallyDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._DaysSinceInitiallyDiscovered = value;
					this.SendPropertyChanged("DaysSinceInitiallyDiscovered");
					this.OnDaysSinceInitiallyDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_DaysSinceLastDiscovered", DbType="SmallInt NOT NULL")]
		public short DaysSinceLastDiscovered
		{
			get
			{
				return this._DaysSinceLastDiscovered;
			}
			set
			{
				if ((this._DaysSinceLastDiscovered != value))
				{
					this.OnDaysSinceLastDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._DaysSinceLastDiscovered = value;
					this.SendPropertyChanged("DaysSinceLastDiscovered");
					this.OnDaysSinceLastDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_Strength", DbType="Float")]
		public System.Nullable<double> Strength
		{
			get
			{
				return this._Strength;
			}
			set
			{
				if ((this._Strength != value))
				{
					this.OnStrengthChanging(value);
					this.SendPropertyChanging();
					this._Strength = value;
					this.SendPropertyChanged("Strength");
					this.OnStrengthChanged();
				}
			}
		}
		
		[Column(Storage="_Rank", DbType="Int NOT NULL")]
		public int Rank
		{
			get
			{
				return this._Rank;
			}
			set
			{
				if ((this._Rank != value))
				{
					this.OnRankChanging(value);
					this.SendPropertyChanging();
					this._Rank = value;
					this.SendPropertyChanged("Rank");
					this.OnRankChanged();
				}
			}
		}
		
		[Column(Storage="_DenseRank", DbType="Int NOT NULL")]
		public int DenseRank
		{
			get
			{
				return this._DenseRank;
			}
			set
			{
				if ((this._DenseRank != value))
				{
					this.OnDenseRankChanging(value);
					this.SendPropertyChanging();
					this._DenseRank = value;
					this.SendPropertyChanged("DenseRank");
					this.OnDenseRankChanged();
				}
			}
		}
		
		[Column(Storage="_NTile", DbType="TinyInt NOT NULL")]
		public byte NTile
		{
			get
			{
				return this._NTile;
			}
			set
			{
				if ((this._NTile != value))
				{
					this.OnNTileChanging(value);
					this.SendPropertyChanging();
					this._NTile = value;
					this.SendPropertyChanged("NTile");
					this.OnNTileChanged();
				}
			}
		}
		
		[Association(Name="Extension_Files_MOST_POPULAR_EXTENSIONS_BY_HOST", Storage="_Extension", ThisKey="ExtensionID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Extension Extension
		{
			get
			{
				return this._Extension.Entity;
			}
			set
			{
				Extension previousValue = this._Extension.Entity;
				if (((previousValue != value) 
							|| (this._Extension.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Extension.Entity = null;
						previousValue.Files_MOST_POPULAR_EXTENSIONS_BY_HOST = null;
					}
					this._Extension.Entity = value;
					if ((value != null))
					{
						value.Files_MOST_POPULAR_EXTENSIONS_BY_HOST = this;
						this._ExtensionID = value.ID;
					}
					else
					{
						this._ExtensionID = default(int);
					}
					this.SendPropertyChanged("Extension");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="rpt.Files_MOST_POPULAR_EXTENSIONS_BY_SCHEMES")]
	public partial class Files_MOST_POPULAR_EXTENSIONS_BY_SCHEME : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RowNumber;
		
		private System.Nullable<System.DateTime> _InitiallyDiscovered;
		
		private System.DateTime _LastDiscovered;
		
		private int _ExtensionID;
		
		private int _Count;
		
		private System.Nullable<short> _DaysSinceInitiallyDiscovered;
		
		private short _DaysSinceLastDiscovered;
		
		private System.Nullable<double> _Strength;
		
		private int _Rank;
		
		private int _DenseRank;
		
		private byte _NTile;
		
		private EntityRef<Extension> _Extension;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRowNumberChanging(int value);
    partial void OnRowNumberChanged();
    partial void OnInitiallyDiscoveredChanging(System.Nullable<System.DateTime> value);
    partial void OnInitiallyDiscoveredChanged();
    partial void OnLastDiscoveredChanging(System.DateTime value);
    partial void OnLastDiscoveredChanged();
    partial void OnExtensionIDChanging(int value);
    partial void OnExtensionIDChanged();
    partial void OnCountChanging(int value);
    partial void OnCountChanged();
    partial void OnDaysSinceInitiallyDiscoveredChanging(System.Nullable<short> value);
    partial void OnDaysSinceInitiallyDiscoveredChanged();
    partial void OnDaysSinceLastDiscoveredChanging(short value);
    partial void OnDaysSinceLastDiscoveredChanged();
    partial void OnStrengthChanging(System.Nullable<double> value);
    partial void OnStrengthChanged();
    partial void OnRankChanging(int value);
    partial void OnRankChanged();
    partial void OnDenseRankChanging(int value);
    partial void OnDenseRankChanged();
    partial void OnNTileChanging(byte value);
    partial void OnNTileChanged();
    #endregion
		
		public Files_MOST_POPULAR_EXTENSIONS_BY_SCHEME()
		{
			this._Extension = default(EntityRef<Extension>);
			OnCreated();
		}
		
		[Column(Storage="_RowNumber", DbType="Int NOT NULL")]
		public int RowNumber
		{
			get
			{
				return this._RowNumber;
			}
			set
			{
				if ((this._RowNumber != value))
				{
					this.OnRowNumberChanging(value);
					this.SendPropertyChanging();
					this._RowNumber = value;
					this.SendPropertyChanged("RowNumber");
					this.OnRowNumberChanged();
				}
			}
		}
		
		[Column(Storage="_InitiallyDiscovered", DbType="DateTime")]
		public System.Nullable<System.DateTime> InitiallyDiscovered
		{
			get
			{
				return this._InitiallyDiscovered;
			}
			set
			{
				if ((this._InitiallyDiscovered != value))
				{
					this.OnInitiallyDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._InitiallyDiscovered = value;
					this.SendPropertyChanged("InitiallyDiscovered");
					this.OnInitiallyDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_LastDiscovered", DbType="DateTime NOT NULL")]
		public System.DateTime LastDiscovered
		{
			get
			{
				return this._LastDiscovered;
			}
			set
			{
				if ((this._LastDiscovered != value))
				{
					this.OnLastDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._LastDiscovered = value;
					this.SendPropertyChanged("LastDiscovered");
					this.OnLastDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_ExtensionID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ExtensionID
		{
			get
			{
				return this._ExtensionID;
			}
			set
			{
				if ((this._ExtensionID != value))
				{
					if (this._Extension.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnExtensionIDChanging(value);
					this.SendPropertyChanging();
					this._ExtensionID = value;
					this.SendPropertyChanged("ExtensionID");
					this.OnExtensionIDChanged();
				}
			}
		}
		
		[Column(Storage="_Count", DbType="Int NOT NULL")]
		public int Count
		{
			get
			{
				return this._Count;
			}
			set
			{
				if ((this._Count != value))
				{
					this.OnCountChanging(value);
					this.SendPropertyChanging();
					this._Count = value;
					this.SendPropertyChanged("Count");
					this.OnCountChanged();
				}
			}
		}
		
		[Column(Storage="_DaysSinceInitiallyDiscovered", DbType="SmallInt")]
		public System.Nullable<short> DaysSinceInitiallyDiscovered
		{
			get
			{
				return this._DaysSinceInitiallyDiscovered;
			}
			set
			{
				if ((this._DaysSinceInitiallyDiscovered != value))
				{
					this.OnDaysSinceInitiallyDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._DaysSinceInitiallyDiscovered = value;
					this.SendPropertyChanged("DaysSinceInitiallyDiscovered");
					this.OnDaysSinceInitiallyDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_DaysSinceLastDiscovered", DbType="SmallInt NOT NULL")]
		public short DaysSinceLastDiscovered
		{
			get
			{
				return this._DaysSinceLastDiscovered;
			}
			set
			{
				if ((this._DaysSinceLastDiscovered != value))
				{
					this.OnDaysSinceLastDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._DaysSinceLastDiscovered = value;
					this.SendPropertyChanged("DaysSinceLastDiscovered");
					this.OnDaysSinceLastDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_Strength", DbType="Float")]
		public System.Nullable<double> Strength
		{
			get
			{
				return this._Strength;
			}
			set
			{
				if ((this._Strength != value))
				{
					this.OnStrengthChanging(value);
					this.SendPropertyChanging();
					this._Strength = value;
					this.SendPropertyChanged("Strength");
					this.OnStrengthChanged();
				}
			}
		}
		
		[Column(Storage="_Rank", DbType="Int NOT NULL")]
		public int Rank
		{
			get
			{
				return this._Rank;
			}
			set
			{
				if ((this._Rank != value))
				{
					this.OnRankChanging(value);
					this.SendPropertyChanging();
					this._Rank = value;
					this.SendPropertyChanged("Rank");
					this.OnRankChanged();
				}
			}
		}
		
		[Column(Storage="_DenseRank", DbType="Int NOT NULL")]
		public int DenseRank
		{
			get
			{
				return this._DenseRank;
			}
			set
			{
				if ((this._DenseRank != value))
				{
					this.OnDenseRankChanging(value);
					this.SendPropertyChanging();
					this._DenseRank = value;
					this.SendPropertyChanged("DenseRank");
					this.OnDenseRankChanged();
				}
			}
		}
		
		[Column(Storage="_NTile", DbType="TinyInt NOT NULL")]
		public byte NTile
		{
			get
			{
				return this._NTile;
			}
			set
			{
				if ((this._NTile != value))
				{
					this.OnNTileChanging(value);
					this.SendPropertyChanging();
					this._NTile = value;
					this.SendPropertyChanged("NTile");
					this.OnNTileChanged();
				}
			}
		}
		
		[Association(Name="Extension_Files_MOST_POPULAR_EXTENSIONS_BY_SCHEME", Storage="_Extension", ThisKey="ExtensionID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Extension Extension
		{
			get
			{
				return this._Extension.Entity;
			}
			set
			{
				Extension previousValue = this._Extension.Entity;
				if (((previousValue != value) 
							|| (this._Extension.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Extension.Entity = null;
						previousValue.Files_MOST_POPULAR_EXTENSIONS_BY_SCHEME = null;
					}
					this._Extension.Entity = value;
					if ((value != null))
					{
						value.Files_MOST_POPULAR_EXTENSIONS_BY_SCHEME = this;
						this._ExtensionID = value.ID;
					}
					else
					{
						this._ExtensionID = default(int);
					}
					this.SendPropertyChanged("Extension");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="rpt.Files_MOST_POPULAR_HOSTS_BY_ABSOLUTEURIS")]
	public partial class Files_MOST_POPULAR_HOSTS_BY_ABSOLUTEURI : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RowNumber;
		
		private System.Nullable<System.DateTime> _InitiallyDiscovered;
		
		private System.DateTime _LastDiscovered;
		
		private int _HostID;
		
		private int _Count;
		
		private System.Nullable<short> _DaysSinceInitiallyDiscovered;
		
		private short _DaysSinceLastDiscovered;
		
		private System.Nullable<double> _Strength;
		
		private int _Rank;
		
		private int _DenseRank;
		
		private byte _NTile;
		
		private EntityRef<Host> _Host;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRowNumberChanging(int value);
    partial void OnRowNumberChanged();
    partial void OnInitiallyDiscoveredChanging(System.Nullable<System.DateTime> value);
    partial void OnInitiallyDiscoveredChanged();
    partial void OnLastDiscoveredChanging(System.DateTime value);
    partial void OnLastDiscoveredChanged();
    partial void OnHostIDChanging(int value);
    partial void OnHostIDChanged();
    partial void OnCountChanging(int value);
    partial void OnCountChanged();
    partial void OnDaysSinceInitiallyDiscoveredChanging(System.Nullable<short> value);
    partial void OnDaysSinceInitiallyDiscoveredChanged();
    partial void OnDaysSinceLastDiscoveredChanging(short value);
    partial void OnDaysSinceLastDiscoveredChanged();
    partial void OnStrengthChanging(System.Nullable<double> value);
    partial void OnStrengthChanged();
    partial void OnRankChanging(int value);
    partial void OnRankChanged();
    partial void OnDenseRankChanging(int value);
    partial void OnDenseRankChanged();
    partial void OnNTileChanging(byte value);
    partial void OnNTileChanged();
    #endregion
		
		public Files_MOST_POPULAR_HOSTS_BY_ABSOLUTEURI()
		{
			this._Host = default(EntityRef<Host>);
			OnCreated();
		}
		
		[Column(Storage="_RowNumber", DbType="Int NOT NULL")]
		public int RowNumber
		{
			get
			{
				return this._RowNumber;
			}
			set
			{
				if ((this._RowNumber != value))
				{
					this.OnRowNumberChanging(value);
					this.SendPropertyChanging();
					this._RowNumber = value;
					this.SendPropertyChanged("RowNumber");
					this.OnRowNumberChanged();
				}
			}
		}
		
		[Column(Storage="_InitiallyDiscovered", DbType="DateTime")]
		public System.Nullable<System.DateTime> InitiallyDiscovered
		{
			get
			{
				return this._InitiallyDiscovered;
			}
			set
			{
				if ((this._InitiallyDiscovered != value))
				{
					this.OnInitiallyDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._InitiallyDiscovered = value;
					this.SendPropertyChanged("InitiallyDiscovered");
					this.OnInitiallyDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_LastDiscovered", DbType="DateTime NOT NULL")]
		public System.DateTime LastDiscovered
		{
			get
			{
				return this._LastDiscovered;
			}
			set
			{
				if ((this._LastDiscovered != value))
				{
					this.OnLastDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._LastDiscovered = value;
					this.SendPropertyChanged("LastDiscovered");
					this.OnLastDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_HostID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int HostID
		{
			get
			{
				return this._HostID;
			}
			set
			{
				if ((this._HostID != value))
				{
					if (this._Host.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnHostIDChanging(value);
					this.SendPropertyChanging();
					this._HostID = value;
					this.SendPropertyChanged("HostID");
					this.OnHostIDChanged();
				}
			}
		}
		
		[Column(Storage="_Count", DbType="Int NOT NULL")]
		public int Count
		{
			get
			{
				return this._Count;
			}
			set
			{
				if ((this._Count != value))
				{
					this.OnCountChanging(value);
					this.SendPropertyChanging();
					this._Count = value;
					this.SendPropertyChanged("Count");
					this.OnCountChanged();
				}
			}
		}
		
		[Column(Storage="_DaysSinceInitiallyDiscovered", DbType="SmallInt")]
		public System.Nullable<short> DaysSinceInitiallyDiscovered
		{
			get
			{
				return this._DaysSinceInitiallyDiscovered;
			}
			set
			{
				if ((this._DaysSinceInitiallyDiscovered != value))
				{
					this.OnDaysSinceInitiallyDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._DaysSinceInitiallyDiscovered = value;
					this.SendPropertyChanged("DaysSinceInitiallyDiscovered");
					this.OnDaysSinceInitiallyDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_DaysSinceLastDiscovered", DbType="SmallInt NOT NULL")]
		public short DaysSinceLastDiscovered
		{
			get
			{
				return this._DaysSinceLastDiscovered;
			}
			set
			{
				if ((this._DaysSinceLastDiscovered != value))
				{
					this.OnDaysSinceLastDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._DaysSinceLastDiscovered = value;
					this.SendPropertyChanged("DaysSinceLastDiscovered");
					this.OnDaysSinceLastDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_Strength", DbType="Float")]
		public System.Nullable<double> Strength
		{
			get
			{
				return this._Strength;
			}
			set
			{
				if ((this._Strength != value))
				{
					this.OnStrengthChanging(value);
					this.SendPropertyChanging();
					this._Strength = value;
					this.SendPropertyChanged("Strength");
					this.OnStrengthChanged();
				}
			}
		}
		
		[Column(Storage="_Rank", DbType="Int NOT NULL")]
		public int Rank
		{
			get
			{
				return this._Rank;
			}
			set
			{
				if ((this._Rank != value))
				{
					this.OnRankChanging(value);
					this.SendPropertyChanging();
					this._Rank = value;
					this.SendPropertyChanged("Rank");
					this.OnRankChanged();
				}
			}
		}
		
		[Column(Storage="_DenseRank", DbType="Int NOT NULL")]
		public int DenseRank
		{
			get
			{
				return this._DenseRank;
			}
			set
			{
				if ((this._DenseRank != value))
				{
					this.OnDenseRankChanging(value);
					this.SendPropertyChanging();
					this._DenseRank = value;
					this.SendPropertyChanged("DenseRank");
					this.OnDenseRankChanged();
				}
			}
		}
		
		[Column(Storage="_NTile", DbType="TinyInt NOT NULL")]
		public byte NTile
		{
			get
			{
				return this._NTile;
			}
			set
			{
				if ((this._NTile != value))
				{
					this.OnNTileChanging(value);
					this.SendPropertyChanging();
					this._NTile = value;
					this.SendPropertyChanged("NTile");
					this.OnNTileChanged();
				}
			}
		}
		
		[Association(Name="Host_Files_MOST_POPULAR_HOSTS_BY_ABSOLUTEURI", Storage="_Host", ThisKey="HostID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Host Host
		{
			get
			{
				return this._Host.Entity;
			}
			set
			{
				Host previousValue = this._Host.Entity;
				if (((previousValue != value) 
							|| (this._Host.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Host.Entity = null;
						previousValue.Files_MOST_POPULAR_HOSTS_BY_ABSOLUTEURI = null;
					}
					this._Host.Entity = value;
					if ((value != null))
					{
						value.Files_MOST_POPULAR_HOSTS_BY_ABSOLUTEURI = this;
						this._HostID = value.ID;
					}
					else
					{
						this._HostID = default(int);
					}
					this.SendPropertyChanged("Host");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="rpt.Files_MOST_POPULAR_HOSTS_BY_DOMAINS")]
	public partial class Files_MOST_POPULAR_HOSTS_BY_DOMAIN : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RowNumber;
		
		private System.Nullable<System.DateTime> _InitiallyDiscovered;
		
		private System.DateTime _LastDiscovered;
		
		private int _HostID;
		
		private int _Count;
		
		private System.Nullable<short> _DaysSinceInitiallyDiscovered;
		
		private short _DaysSinceLastDiscovered;
		
		private System.Nullable<double> _Strength;
		
		private int _Rank;
		
		private int _DenseRank;
		
		private byte _NTile;
		
		private EntityRef<Host> _Host;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRowNumberChanging(int value);
    partial void OnRowNumberChanged();
    partial void OnInitiallyDiscoveredChanging(System.Nullable<System.DateTime> value);
    partial void OnInitiallyDiscoveredChanged();
    partial void OnLastDiscoveredChanging(System.DateTime value);
    partial void OnLastDiscoveredChanged();
    partial void OnHostIDChanging(int value);
    partial void OnHostIDChanged();
    partial void OnCountChanging(int value);
    partial void OnCountChanged();
    partial void OnDaysSinceInitiallyDiscoveredChanging(System.Nullable<short> value);
    partial void OnDaysSinceInitiallyDiscoveredChanged();
    partial void OnDaysSinceLastDiscoveredChanging(short value);
    partial void OnDaysSinceLastDiscoveredChanged();
    partial void OnStrengthChanging(System.Nullable<double> value);
    partial void OnStrengthChanged();
    partial void OnRankChanging(int value);
    partial void OnRankChanged();
    partial void OnDenseRankChanging(int value);
    partial void OnDenseRankChanged();
    partial void OnNTileChanging(byte value);
    partial void OnNTileChanged();
    #endregion
		
		public Files_MOST_POPULAR_HOSTS_BY_DOMAIN()
		{
			this._Host = default(EntityRef<Host>);
			OnCreated();
		}
		
		[Column(Storage="_RowNumber", DbType="Int NOT NULL")]
		public int RowNumber
		{
			get
			{
				return this._RowNumber;
			}
			set
			{
				if ((this._RowNumber != value))
				{
					this.OnRowNumberChanging(value);
					this.SendPropertyChanging();
					this._RowNumber = value;
					this.SendPropertyChanged("RowNumber");
					this.OnRowNumberChanged();
				}
			}
		}
		
		[Column(Storage="_InitiallyDiscovered", DbType="DateTime")]
		public System.Nullable<System.DateTime> InitiallyDiscovered
		{
			get
			{
				return this._InitiallyDiscovered;
			}
			set
			{
				if ((this._InitiallyDiscovered != value))
				{
					this.OnInitiallyDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._InitiallyDiscovered = value;
					this.SendPropertyChanged("InitiallyDiscovered");
					this.OnInitiallyDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_LastDiscovered", DbType="DateTime NOT NULL")]
		public System.DateTime LastDiscovered
		{
			get
			{
				return this._LastDiscovered;
			}
			set
			{
				if ((this._LastDiscovered != value))
				{
					this.OnLastDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._LastDiscovered = value;
					this.SendPropertyChanged("LastDiscovered");
					this.OnLastDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_HostID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int HostID
		{
			get
			{
				return this._HostID;
			}
			set
			{
				if ((this._HostID != value))
				{
					if (this._Host.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnHostIDChanging(value);
					this.SendPropertyChanging();
					this._HostID = value;
					this.SendPropertyChanged("HostID");
					this.OnHostIDChanged();
				}
			}
		}
		
		[Column(Storage="_Count", DbType="Int NOT NULL")]
		public int Count
		{
			get
			{
				return this._Count;
			}
			set
			{
				if ((this._Count != value))
				{
					this.OnCountChanging(value);
					this.SendPropertyChanging();
					this._Count = value;
					this.SendPropertyChanged("Count");
					this.OnCountChanged();
				}
			}
		}
		
		[Column(Storage="_DaysSinceInitiallyDiscovered", DbType="SmallInt")]
		public System.Nullable<short> DaysSinceInitiallyDiscovered
		{
			get
			{
				return this._DaysSinceInitiallyDiscovered;
			}
			set
			{
				if ((this._DaysSinceInitiallyDiscovered != value))
				{
					this.OnDaysSinceInitiallyDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._DaysSinceInitiallyDiscovered = value;
					this.SendPropertyChanged("DaysSinceInitiallyDiscovered");
					this.OnDaysSinceInitiallyDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_DaysSinceLastDiscovered", DbType="SmallInt NOT NULL")]
		public short DaysSinceLastDiscovered
		{
			get
			{
				return this._DaysSinceLastDiscovered;
			}
			set
			{
				if ((this._DaysSinceLastDiscovered != value))
				{
					this.OnDaysSinceLastDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._DaysSinceLastDiscovered = value;
					this.SendPropertyChanged("DaysSinceLastDiscovered");
					this.OnDaysSinceLastDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_Strength", DbType="Float")]
		public System.Nullable<double> Strength
		{
			get
			{
				return this._Strength;
			}
			set
			{
				if ((this._Strength != value))
				{
					this.OnStrengthChanging(value);
					this.SendPropertyChanging();
					this._Strength = value;
					this.SendPropertyChanged("Strength");
					this.OnStrengthChanged();
				}
			}
		}
		
		[Column(Storage="_Rank", DbType="Int NOT NULL")]
		public int Rank
		{
			get
			{
				return this._Rank;
			}
			set
			{
				if ((this._Rank != value))
				{
					this.OnRankChanging(value);
					this.SendPropertyChanging();
					this._Rank = value;
					this.SendPropertyChanged("Rank");
					this.OnRankChanged();
				}
			}
		}
		
		[Column(Storage="_DenseRank", DbType="Int NOT NULL")]
		public int DenseRank
		{
			get
			{
				return this._DenseRank;
			}
			set
			{
				if ((this._DenseRank != value))
				{
					this.OnDenseRankChanging(value);
					this.SendPropertyChanging();
					this._DenseRank = value;
					this.SendPropertyChanged("DenseRank");
					this.OnDenseRankChanged();
				}
			}
		}
		
		[Column(Storage="_NTile", DbType="TinyInt NOT NULL")]
		public byte NTile
		{
			get
			{
				return this._NTile;
			}
			set
			{
				if ((this._NTile != value))
				{
					this.OnNTileChanging(value);
					this.SendPropertyChanging();
					this._NTile = value;
					this.SendPropertyChanged("NTile");
					this.OnNTileChanged();
				}
			}
		}
		
		[Association(Name="Host_Files_MOST_POPULAR_HOSTS_BY_DOMAIN", Storage="_Host", ThisKey="HostID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Host Host
		{
			get
			{
				return this._Host.Entity;
			}
			set
			{
				Host previousValue = this._Host.Entity;
				if (((previousValue != value) 
							|| (this._Host.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Host.Entity = null;
						previousValue.Files_MOST_POPULAR_HOSTS_BY_DOMAIN = null;
					}
					this._Host.Entity = value;
					if ((value != null))
					{
						value.Files_MOST_POPULAR_HOSTS_BY_DOMAIN = this;
						this._HostID = value.ID;
					}
					else
					{
						this._HostID = default(int);
					}
					this.SendPropertyChanged("Host");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="rpt.Files_MOST_POPULAR_HOSTS_BY_EXTENSIONS")]
	public partial class Files_MOST_POPULAR_HOSTS_BY_EXTENSION : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RowNumber;
		
		private System.Nullable<System.DateTime> _InitiallyDiscovered;
		
		private System.DateTime _LastDiscovered;
		
		private int _HostID;
		
		private int _Count;
		
		private System.Nullable<short> _DaysSinceInitiallyDiscovered;
		
		private short _DaysSinceLastDiscovered;
		
		private System.Nullable<double> _Strength;
		
		private int _Rank;
		
		private int _DenseRank;
		
		private byte _NTile;
		
		private EntityRef<Host> _Host;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRowNumberChanging(int value);
    partial void OnRowNumberChanged();
    partial void OnInitiallyDiscoveredChanging(System.Nullable<System.DateTime> value);
    partial void OnInitiallyDiscoveredChanged();
    partial void OnLastDiscoveredChanging(System.DateTime value);
    partial void OnLastDiscoveredChanged();
    partial void OnHostIDChanging(int value);
    partial void OnHostIDChanged();
    partial void OnCountChanging(int value);
    partial void OnCountChanged();
    partial void OnDaysSinceInitiallyDiscoveredChanging(System.Nullable<short> value);
    partial void OnDaysSinceInitiallyDiscoveredChanged();
    partial void OnDaysSinceLastDiscoveredChanging(short value);
    partial void OnDaysSinceLastDiscoveredChanged();
    partial void OnStrengthChanging(System.Nullable<double> value);
    partial void OnStrengthChanged();
    partial void OnRankChanging(int value);
    partial void OnRankChanged();
    partial void OnDenseRankChanging(int value);
    partial void OnDenseRankChanged();
    partial void OnNTileChanging(byte value);
    partial void OnNTileChanged();
    #endregion
		
		public Files_MOST_POPULAR_HOSTS_BY_EXTENSION()
		{
			this._Host = default(EntityRef<Host>);
			OnCreated();
		}
		
		[Column(Storage="_RowNumber", DbType="Int NOT NULL")]
		public int RowNumber
		{
			get
			{
				return this._RowNumber;
			}
			set
			{
				if ((this._RowNumber != value))
				{
					this.OnRowNumberChanging(value);
					this.SendPropertyChanging();
					this._RowNumber = value;
					this.SendPropertyChanged("RowNumber");
					this.OnRowNumberChanged();
				}
			}
		}
		
		[Column(Storage="_InitiallyDiscovered", DbType="DateTime")]
		public System.Nullable<System.DateTime> InitiallyDiscovered
		{
			get
			{
				return this._InitiallyDiscovered;
			}
			set
			{
				if ((this._InitiallyDiscovered != value))
				{
					this.OnInitiallyDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._InitiallyDiscovered = value;
					this.SendPropertyChanged("InitiallyDiscovered");
					this.OnInitiallyDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_LastDiscovered", DbType="DateTime NOT NULL")]
		public System.DateTime LastDiscovered
		{
			get
			{
				return this._LastDiscovered;
			}
			set
			{
				if ((this._LastDiscovered != value))
				{
					this.OnLastDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._LastDiscovered = value;
					this.SendPropertyChanged("LastDiscovered");
					this.OnLastDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_HostID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int HostID
		{
			get
			{
				return this._HostID;
			}
			set
			{
				if ((this._HostID != value))
				{
					if (this._Host.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnHostIDChanging(value);
					this.SendPropertyChanging();
					this._HostID = value;
					this.SendPropertyChanged("HostID");
					this.OnHostIDChanged();
				}
			}
		}
		
		[Column(Storage="_Count", DbType="Int NOT NULL")]
		public int Count
		{
			get
			{
				return this._Count;
			}
			set
			{
				if ((this._Count != value))
				{
					this.OnCountChanging(value);
					this.SendPropertyChanging();
					this._Count = value;
					this.SendPropertyChanged("Count");
					this.OnCountChanged();
				}
			}
		}
		
		[Column(Storage="_DaysSinceInitiallyDiscovered", DbType="SmallInt")]
		public System.Nullable<short> DaysSinceInitiallyDiscovered
		{
			get
			{
				return this._DaysSinceInitiallyDiscovered;
			}
			set
			{
				if ((this._DaysSinceInitiallyDiscovered != value))
				{
					this.OnDaysSinceInitiallyDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._DaysSinceInitiallyDiscovered = value;
					this.SendPropertyChanged("DaysSinceInitiallyDiscovered");
					this.OnDaysSinceInitiallyDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_DaysSinceLastDiscovered", DbType="SmallInt NOT NULL")]
		public short DaysSinceLastDiscovered
		{
			get
			{
				return this._DaysSinceLastDiscovered;
			}
			set
			{
				if ((this._DaysSinceLastDiscovered != value))
				{
					this.OnDaysSinceLastDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._DaysSinceLastDiscovered = value;
					this.SendPropertyChanged("DaysSinceLastDiscovered");
					this.OnDaysSinceLastDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_Strength", DbType="Float")]
		public System.Nullable<double> Strength
		{
			get
			{
				return this._Strength;
			}
			set
			{
				if ((this._Strength != value))
				{
					this.OnStrengthChanging(value);
					this.SendPropertyChanging();
					this._Strength = value;
					this.SendPropertyChanged("Strength");
					this.OnStrengthChanged();
				}
			}
		}
		
		[Column(Storage="_Rank", DbType="Int NOT NULL")]
		public int Rank
		{
			get
			{
				return this._Rank;
			}
			set
			{
				if ((this._Rank != value))
				{
					this.OnRankChanging(value);
					this.SendPropertyChanging();
					this._Rank = value;
					this.SendPropertyChanged("Rank");
					this.OnRankChanged();
				}
			}
		}
		
		[Column(Storage="_DenseRank", DbType="Int NOT NULL")]
		public int DenseRank
		{
			get
			{
				return this._DenseRank;
			}
			set
			{
				if ((this._DenseRank != value))
				{
					this.OnDenseRankChanging(value);
					this.SendPropertyChanging();
					this._DenseRank = value;
					this.SendPropertyChanged("DenseRank");
					this.OnDenseRankChanged();
				}
			}
		}
		
		[Column(Storage="_NTile", DbType="TinyInt NOT NULL")]
		public byte NTile
		{
			get
			{
				return this._NTile;
			}
			set
			{
				if ((this._NTile != value))
				{
					this.OnNTileChanging(value);
					this.SendPropertyChanging();
					this._NTile = value;
					this.SendPropertyChanged("NTile");
					this.OnNTileChanged();
				}
			}
		}
		
		[Association(Name="Host_Files_MOST_POPULAR_HOSTS_BY_EXTENSION", Storage="_Host", ThisKey="HostID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Host Host
		{
			get
			{
				return this._Host.Entity;
			}
			set
			{
				Host previousValue = this._Host.Entity;
				if (((previousValue != value) 
							|| (this._Host.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Host.Entity = null;
						previousValue.Files_MOST_POPULAR_HOSTS_BY_EXTENSION = null;
					}
					this._Host.Entity = value;
					if ((value != null))
					{
						value.Files_MOST_POPULAR_HOSTS_BY_EXTENSION = this;
						this._HostID = value.ID;
					}
					else
					{
						this._HostID = default(int);
					}
					this.SendPropertyChanged("Host");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="rpt.Files_MOST_POPULAR_HOSTS_BY_HOSTS")]
	public partial class Files_MOST_POPULAR_HOSTS_BY_HOST : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RowNumber;
		
		private System.Nullable<System.DateTime> _InitiallyDiscovered;
		
		private System.DateTime _LastDiscovered;
		
		private int _HostID;
		
		private int _Count;
		
		private System.Nullable<short> _DaysSinceInitiallyDiscovered;
		
		private short _DaysSinceLastDiscovered;
		
		private System.Nullable<double> _Strength;
		
		private int _Rank;
		
		private int _DenseRank;
		
		private byte _NTile;
		
		private EntityRef<Host> _Host;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRowNumberChanging(int value);
    partial void OnRowNumberChanged();
    partial void OnInitiallyDiscoveredChanging(System.Nullable<System.DateTime> value);
    partial void OnInitiallyDiscoveredChanged();
    partial void OnLastDiscoveredChanging(System.DateTime value);
    partial void OnLastDiscoveredChanged();
    partial void OnHostIDChanging(int value);
    partial void OnHostIDChanged();
    partial void OnCountChanging(int value);
    partial void OnCountChanged();
    partial void OnDaysSinceInitiallyDiscoveredChanging(System.Nullable<short> value);
    partial void OnDaysSinceInitiallyDiscoveredChanged();
    partial void OnDaysSinceLastDiscoveredChanging(short value);
    partial void OnDaysSinceLastDiscoveredChanged();
    partial void OnStrengthChanging(System.Nullable<double> value);
    partial void OnStrengthChanged();
    partial void OnRankChanging(int value);
    partial void OnRankChanged();
    partial void OnDenseRankChanging(int value);
    partial void OnDenseRankChanged();
    partial void OnNTileChanging(byte value);
    partial void OnNTileChanged();
    #endregion
		
		public Files_MOST_POPULAR_HOSTS_BY_HOST()
		{
			this._Host = default(EntityRef<Host>);
			OnCreated();
		}
		
		[Column(Storage="_RowNumber", DbType="Int NOT NULL")]
		public int RowNumber
		{
			get
			{
				return this._RowNumber;
			}
			set
			{
				if ((this._RowNumber != value))
				{
					this.OnRowNumberChanging(value);
					this.SendPropertyChanging();
					this._RowNumber = value;
					this.SendPropertyChanged("RowNumber");
					this.OnRowNumberChanged();
				}
			}
		}
		
		[Column(Storage="_InitiallyDiscovered", DbType="DateTime")]
		public System.Nullable<System.DateTime> InitiallyDiscovered
		{
			get
			{
				return this._InitiallyDiscovered;
			}
			set
			{
				if ((this._InitiallyDiscovered != value))
				{
					this.OnInitiallyDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._InitiallyDiscovered = value;
					this.SendPropertyChanged("InitiallyDiscovered");
					this.OnInitiallyDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_LastDiscovered", DbType="DateTime NOT NULL")]
		public System.DateTime LastDiscovered
		{
			get
			{
				return this._LastDiscovered;
			}
			set
			{
				if ((this._LastDiscovered != value))
				{
					this.OnLastDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._LastDiscovered = value;
					this.SendPropertyChanged("LastDiscovered");
					this.OnLastDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_HostID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int HostID
		{
			get
			{
				return this._HostID;
			}
			set
			{
				if ((this._HostID != value))
				{
					if (this._Host.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnHostIDChanging(value);
					this.SendPropertyChanging();
					this._HostID = value;
					this.SendPropertyChanged("HostID");
					this.OnHostIDChanged();
				}
			}
		}
		
		[Column(Storage="_Count", DbType="Int NOT NULL")]
		public int Count
		{
			get
			{
				return this._Count;
			}
			set
			{
				if ((this._Count != value))
				{
					this.OnCountChanging(value);
					this.SendPropertyChanging();
					this._Count = value;
					this.SendPropertyChanged("Count");
					this.OnCountChanged();
				}
			}
		}
		
		[Column(Storage="_DaysSinceInitiallyDiscovered", DbType="SmallInt")]
		public System.Nullable<short> DaysSinceInitiallyDiscovered
		{
			get
			{
				return this._DaysSinceInitiallyDiscovered;
			}
			set
			{
				if ((this._DaysSinceInitiallyDiscovered != value))
				{
					this.OnDaysSinceInitiallyDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._DaysSinceInitiallyDiscovered = value;
					this.SendPropertyChanged("DaysSinceInitiallyDiscovered");
					this.OnDaysSinceInitiallyDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_DaysSinceLastDiscovered", DbType="SmallInt NOT NULL")]
		public short DaysSinceLastDiscovered
		{
			get
			{
				return this._DaysSinceLastDiscovered;
			}
			set
			{
				if ((this._DaysSinceLastDiscovered != value))
				{
					this.OnDaysSinceLastDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._DaysSinceLastDiscovered = value;
					this.SendPropertyChanged("DaysSinceLastDiscovered");
					this.OnDaysSinceLastDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_Strength", DbType="Float")]
		public System.Nullable<double> Strength
		{
			get
			{
				return this._Strength;
			}
			set
			{
				if ((this._Strength != value))
				{
					this.OnStrengthChanging(value);
					this.SendPropertyChanging();
					this._Strength = value;
					this.SendPropertyChanged("Strength");
					this.OnStrengthChanged();
				}
			}
		}
		
		[Column(Storage="_Rank", DbType="Int NOT NULL")]
		public int Rank
		{
			get
			{
				return this._Rank;
			}
			set
			{
				if ((this._Rank != value))
				{
					this.OnRankChanging(value);
					this.SendPropertyChanging();
					this._Rank = value;
					this.SendPropertyChanged("Rank");
					this.OnRankChanged();
				}
			}
		}
		
		[Column(Storage="_DenseRank", DbType="Int NOT NULL")]
		public int DenseRank
		{
			get
			{
				return this._DenseRank;
			}
			set
			{
				if ((this._DenseRank != value))
				{
					this.OnDenseRankChanging(value);
					this.SendPropertyChanging();
					this._DenseRank = value;
					this.SendPropertyChanged("DenseRank");
					this.OnDenseRankChanged();
				}
			}
		}
		
		[Column(Storage="_NTile", DbType="TinyInt NOT NULL")]
		public byte NTile
		{
			get
			{
				return this._NTile;
			}
			set
			{
				if ((this._NTile != value))
				{
					this.OnNTileChanging(value);
					this.SendPropertyChanging();
					this._NTile = value;
					this.SendPropertyChanged("NTile");
					this.OnNTileChanged();
				}
			}
		}
		
		[Association(Name="Host_Files_MOST_POPULAR_HOSTS_BY_HOST", Storage="_Host", ThisKey="HostID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Host Host
		{
			get
			{
				return this._Host.Entity;
			}
			set
			{
				Host previousValue = this._Host.Entity;
				if (((previousValue != value) 
							|| (this._Host.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Host.Entity = null;
						previousValue.Files_MOST_POPULAR_HOSTS_BY_HOST = null;
					}
					this._Host.Entity = value;
					if ((value != null))
					{
						value.Files_MOST_POPULAR_HOSTS_BY_HOST = this;
						this._HostID = value.ID;
					}
					else
					{
						this._HostID = default(int);
					}
					this.SendPropertyChanged("Host");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="rpt.Files_MOST_POPULAR_HOSTS_BY_SCHEMES")]
	public partial class Files_MOST_POPULAR_HOSTS_BY_SCHEME : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RowNumber;
		
		private System.Nullable<System.DateTime> _InitiallyDiscovered;
		
		private System.DateTime _LastDiscovered;
		
		private int _HostID;
		
		private int _Count;
		
		private System.Nullable<short> _DaysSinceInitiallyDiscovered;
		
		private short _DaysSinceLastDiscovered;
		
		private System.Nullable<double> _Strength;
		
		private int _Rank;
		
		private int _DenseRank;
		
		private byte _NTile;
		
		private EntityRef<Host> _Host;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRowNumberChanging(int value);
    partial void OnRowNumberChanged();
    partial void OnInitiallyDiscoveredChanging(System.Nullable<System.DateTime> value);
    partial void OnInitiallyDiscoveredChanged();
    partial void OnLastDiscoveredChanging(System.DateTime value);
    partial void OnLastDiscoveredChanged();
    partial void OnHostIDChanging(int value);
    partial void OnHostIDChanged();
    partial void OnCountChanging(int value);
    partial void OnCountChanged();
    partial void OnDaysSinceInitiallyDiscoveredChanging(System.Nullable<short> value);
    partial void OnDaysSinceInitiallyDiscoveredChanged();
    partial void OnDaysSinceLastDiscoveredChanging(short value);
    partial void OnDaysSinceLastDiscoveredChanged();
    partial void OnStrengthChanging(System.Nullable<double> value);
    partial void OnStrengthChanged();
    partial void OnRankChanging(int value);
    partial void OnRankChanged();
    partial void OnDenseRankChanging(int value);
    partial void OnDenseRankChanged();
    partial void OnNTileChanging(byte value);
    partial void OnNTileChanged();
    #endregion
		
		public Files_MOST_POPULAR_HOSTS_BY_SCHEME()
		{
			this._Host = default(EntityRef<Host>);
			OnCreated();
		}
		
		[Column(Storage="_RowNumber", DbType="Int NOT NULL")]
		public int RowNumber
		{
			get
			{
				return this._RowNumber;
			}
			set
			{
				if ((this._RowNumber != value))
				{
					this.OnRowNumberChanging(value);
					this.SendPropertyChanging();
					this._RowNumber = value;
					this.SendPropertyChanged("RowNumber");
					this.OnRowNumberChanged();
				}
			}
		}
		
		[Column(Storage="_InitiallyDiscovered", DbType="DateTime")]
		public System.Nullable<System.DateTime> InitiallyDiscovered
		{
			get
			{
				return this._InitiallyDiscovered;
			}
			set
			{
				if ((this._InitiallyDiscovered != value))
				{
					this.OnInitiallyDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._InitiallyDiscovered = value;
					this.SendPropertyChanged("InitiallyDiscovered");
					this.OnInitiallyDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_LastDiscovered", DbType="DateTime NOT NULL")]
		public System.DateTime LastDiscovered
		{
			get
			{
				return this._LastDiscovered;
			}
			set
			{
				if ((this._LastDiscovered != value))
				{
					this.OnLastDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._LastDiscovered = value;
					this.SendPropertyChanged("LastDiscovered");
					this.OnLastDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_HostID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int HostID
		{
			get
			{
				return this._HostID;
			}
			set
			{
				if ((this._HostID != value))
				{
					if (this._Host.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnHostIDChanging(value);
					this.SendPropertyChanging();
					this._HostID = value;
					this.SendPropertyChanged("HostID");
					this.OnHostIDChanged();
				}
			}
		}
		
		[Column(Storage="_Count", DbType="Int NOT NULL")]
		public int Count
		{
			get
			{
				return this._Count;
			}
			set
			{
				if ((this._Count != value))
				{
					this.OnCountChanging(value);
					this.SendPropertyChanging();
					this._Count = value;
					this.SendPropertyChanged("Count");
					this.OnCountChanged();
				}
			}
		}
		
		[Column(Storage="_DaysSinceInitiallyDiscovered", DbType="SmallInt")]
		public System.Nullable<short> DaysSinceInitiallyDiscovered
		{
			get
			{
				return this._DaysSinceInitiallyDiscovered;
			}
			set
			{
				if ((this._DaysSinceInitiallyDiscovered != value))
				{
					this.OnDaysSinceInitiallyDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._DaysSinceInitiallyDiscovered = value;
					this.SendPropertyChanged("DaysSinceInitiallyDiscovered");
					this.OnDaysSinceInitiallyDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_DaysSinceLastDiscovered", DbType="SmallInt NOT NULL")]
		public short DaysSinceLastDiscovered
		{
			get
			{
				return this._DaysSinceLastDiscovered;
			}
			set
			{
				if ((this._DaysSinceLastDiscovered != value))
				{
					this.OnDaysSinceLastDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._DaysSinceLastDiscovered = value;
					this.SendPropertyChanged("DaysSinceLastDiscovered");
					this.OnDaysSinceLastDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_Strength", DbType="Float")]
		public System.Nullable<double> Strength
		{
			get
			{
				return this._Strength;
			}
			set
			{
				if ((this._Strength != value))
				{
					this.OnStrengthChanging(value);
					this.SendPropertyChanging();
					this._Strength = value;
					this.SendPropertyChanged("Strength");
					this.OnStrengthChanged();
				}
			}
		}
		
		[Column(Storage="_Rank", DbType="Int NOT NULL")]
		public int Rank
		{
			get
			{
				return this._Rank;
			}
			set
			{
				if ((this._Rank != value))
				{
					this.OnRankChanging(value);
					this.SendPropertyChanging();
					this._Rank = value;
					this.SendPropertyChanged("Rank");
					this.OnRankChanged();
				}
			}
		}
		
		[Column(Storage="_DenseRank", DbType="Int NOT NULL")]
		public int DenseRank
		{
			get
			{
				return this._DenseRank;
			}
			set
			{
				if ((this._DenseRank != value))
				{
					this.OnDenseRankChanging(value);
					this.SendPropertyChanging();
					this._DenseRank = value;
					this.SendPropertyChanged("DenseRank");
					this.OnDenseRankChanged();
				}
			}
		}
		
		[Column(Storage="_NTile", DbType="TinyInt NOT NULL")]
		public byte NTile
		{
			get
			{
				return this._NTile;
			}
			set
			{
				if ((this._NTile != value))
				{
					this.OnNTileChanging(value);
					this.SendPropertyChanging();
					this._NTile = value;
					this.SendPropertyChanged("NTile");
					this.OnNTileChanged();
				}
			}
		}
		
		[Association(Name="Host_Files_MOST_POPULAR_HOSTS_BY_SCHEME", Storage="_Host", ThisKey="HostID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Host Host
		{
			get
			{
				return this._Host.Entity;
			}
			set
			{
				Host previousValue = this._Host.Entity;
				if (((previousValue != value) 
							|| (this._Host.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Host.Entity = null;
						previousValue.Files_MOST_POPULAR_HOSTS_BY_SCHEME = null;
					}
					this._Host.Entity = value;
					if ((value != null))
					{
						value.Files_MOST_POPULAR_HOSTS_BY_SCHEME = this;
						this._HostID = value.ID;
					}
					else
					{
						this._HostID = default(int);
					}
					this.SendPropertyChanged("Host");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="rpt.Files_MOST_POPULAR_SCHEMES_BY_ABSOLUTEURIS")]
	public partial class Files_MOST_POPULAR_SCHEMES_BY_ABSOLUTEURI : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RowNumber;
		
		private System.Nullable<System.DateTime> _InitiallyDiscovered;
		
		private System.DateTime _LastDiscovered;
		
		private int _SchemeID;
		
		private int _Count;
		
		private System.Nullable<short> _DaysSinceInitiallyDiscovered;
		
		private short _DaysSinceLastDiscovered;
		
		private System.Nullable<double> _Strength;
		
		private int _Rank;
		
		private int _DenseRank;
		
		private short _NTile;
		
		private EntityRef<Scheme> _Scheme;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRowNumberChanging(int value);
    partial void OnRowNumberChanged();
    partial void OnInitiallyDiscoveredChanging(System.Nullable<System.DateTime> value);
    partial void OnInitiallyDiscoveredChanged();
    partial void OnLastDiscoveredChanging(System.DateTime value);
    partial void OnLastDiscoveredChanged();
    partial void OnSchemeIDChanging(int value);
    partial void OnSchemeIDChanged();
    partial void OnCountChanging(int value);
    partial void OnCountChanged();
    partial void OnDaysSinceInitiallyDiscoveredChanging(System.Nullable<short> value);
    partial void OnDaysSinceInitiallyDiscoveredChanged();
    partial void OnDaysSinceLastDiscoveredChanging(short value);
    partial void OnDaysSinceLastDiscoveredChanged();
    partial void OnStrengthChanging(System.Nullable<double> value);
    partial void OnStrengthChanged();
    partial void OnRankChanging(int value);
    partial void OnRankChanged();
    partial void OnDenseRankChanging(int value);
    partial void OnDenseRankChanged();
    partial void OnNTileChanging(short value);
    partial void OnNTileChanged();
    #endregion
		
		public Files_MOST_POPULAR_SCHEMES_BY_ABSOLUTEURI()
		{
			this._Scheme = default(EntityRef<Scheme>);
			OnCreated();
		}
		
		[Column(Storage="_RowNumber", DbType="Int NOT NULL")]
		public int RowNumber
		{
			get
			{
				return this._RowNumber;
			}
			set
			{
				if ((this._RowNumber != value))
				{
					this.OnRowNumberChanging(value);
					this.SendPropertyChanging();
					this._RowNumber = value;
					this.SendPropertyChanged("RowNumber");
					this.OnRowNumberChanged();
				}
			}
		}
		
		[Column(Storage="_InitiallyDiscovered", DbType="DateTime")]
		public System.Nullable<System.DateTime> InitiallyDiscovered
		{
			get
			{
				return this._InitiallyDiscovered;
			}
			set
			{
				if ((this._InitiallyDiscovered != value))
				{
					this.OnInitiallyDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._InitiallyDiscovered = value;
					this.SendPropertyChanged("InitiallyDiscovered");
					this.OnInitiallyDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_LastDiscovered", DbType="DateTime NOT NULL")]
		public System.DateTime LastDiscovered
		{
			get
			{
				return this._LastDiscovered;
			}
			set
			{
				if ((this._LastDiscovered != value))
				{
					this.OnLastDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._LastDiscovered = value;
					this.SendPropertyChanged("LastDiscovered");
					this.OnLastDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_SchemeID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int SchemeID
		{
			get
			{
				return this._SchemeID;
			}
			set
			{
				if ((this._SchemeID != value))
				{
					if (this._Scheme.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSchemeIDChanging(value);
					this.SendPropertyChanging();
					this._SchemeID = value;
					this.SendPropertyChanged("SchemeID");
					this.OnSchemeIDChanged();
				}
			}
		}
		
		[Column(Storage="_Count", DbType="Int NOT NULL")]
		public int Count
		{
			get
			{
				return this._Count;
			}
			set
			{
				if ((this._Count != value))
				{
					this.OnCountChanging(value);
					this.SendPropertyChanging();
					this._Count = value;
					this.SendPropertyChanged("Count");
					this.OnCountChanged();
				}
			}
		}
		
		[Column(Storage="_DaysSinceInitiallyDiscovered", DbType="SmallInt")]
		public System.Nullable<short> DaysSinceInitiallyDiscovered
		{
			get
			{
				return this._DaysSinceInitiallyDiscovered;
			}
			set
			{
				if ((this._DaysSinceInitiallyDiscovered != value))
				{
					this.OnDaysSinceInitiallyDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._DaysSinceInitiallyDiscovered = value;
					this.SendPropertyChanged("DaysSinceInitiallyDiscovered");
					this.OnDaysSinceInitiallyDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_DaysSinceLastDiscovered", DbType="SmallInt NOT NULL")]
		public short DaysSinceLastDiscovered
		{
			get
			{
				return this._DaysSinceLastDiscovered;
			}
			set
			{
				if ((this._DaysSinceLastDiscovered != value))
				{
					this.OnDaysSinceLastDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._DaysSinceLastDiscovered = value;
					this.SendPropertyChanged("DaysSinceLastDiscovered");
					this.OnDaysSinceLastDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_Strength", DbType="Float")]
		public System.Nullable<double> Strength
		{
			get
			{
				return this._Strength;
			}
			set
			{
				if ((this._Strength != value))
				{
					this.OnStrengthChanging(value);
					this.SendPropertyChanging();
					this._Strength = value;
					this.SendPropertyChanged("Strength");
					this.OnStrengthChanged();
				}
			}
		}
		
		[Column(Storage="_Rank", DbType="Int NOT NULL")]
		public int Rank
		{
			get
			{
				return this._Rank;
			}
			set
			{
				if ((this._Rank != value))
				{
					this.OnRankChanging(value);
					this.SendPropertyChanging();
					this._Rank = value;
					this.SendPropertyChanged("Rank");
					this.OnRankChanged();
				}
			}
		}
		
		[Column(Storage="_DenseRank", DbType="Int NOT NULL")]
		public int DenseRank
		{
			get
			{
				return this._DenseRank;
			}
			set
			{
				if ((this._DenseRank != value))
				{
					this.OnDenseRankChanging(value);
					this.SendPropertyChanging();
					this._DenseRank = value;
					this.SendPropertyChanged("DenseRank");
					this.OnDenseRankChanged();
				}
			}
		}
		
		[Column(Storage="_NTile", DbType="SmallInt NOT NULL")]
		public short NTile
		{
			get
			{
				return this._NTile;
			}
			set
			{
				if ((this._NTile != value))
				{
					this.OnNTileChanging(value);
					this.SendPropertyChanging();
					this._NTile = value;
					this.SendPropertyChanged("NTile");
					this.OnNTileChanged();
				}
			}
		}
		
		[Association(Name="Scheme_Files_MOST_POPULAR_SCHEMES_BY_ABSOLUTEURI", Storage="_Scheme", ThisKey="SchemeID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Scheme Scheme
		{
			get
			{
				return this._Scheme.Entity;
			}
			set
			{
				Scheme previousValue = this._Scheme.Entity;
				if (((previousValue != value) 
							|| (this._Scheme.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Scheme.Entity = null;
						previousValue.Files_MOST_POPULAR_SCHEMES_BY_ABSOLUTEURI = null;
					}
					this._Scheme.Entity = value;
					if ((value != null))
					{
						value.Files_MOST_POPULAR_SCHEMES_BY_ABSOLUTEURI = this;
						this._SchemeID = value.ID;
					}
					else
					{
						this._SchemeID = default(int);
					}
					this.SendPropertyChanged("Scheme");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="rpt.Files_MOST_POPULAR_SCHEMES_BY_DOMAINS")]
	public partial class Files_MOST_POPULAR_SCHEMES_BY_DOMAIN : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RowNumber;
		
		private System.Nullable<System.DateTime> _InitiallyDiscovered;
		
		private System.DateTime _LastDiscovered;
		
		private int _SchemeID;
		
		private int _Count;
		
		private System.Nullable<short> _DaysSinceInitiallyDiscovered;
		
		private short _DaysSinceLastDiscovered;
		
		private System.Nullable<double> _Strength;
		
		private int _Rank;
		
		private int _DenseRank;
		
		private short _NTile;
		
		private EntityRef<Scheme> _Scheme;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRowNumberChanging(int value);
    partial void OnRowNumberChanged();
    partial void OnInitiallyDiscoveredChanging(System.Nullable<System.DateTime> value);
    partial void OnInitiallyDiscoveredChanged();
    partial void OnLastDiscoveredChanging(System.DateTime value);
    partial void OnLastDiscoveredChanged();
    partial void OnSchemeIDChanging(int value);
    partial void OnSchemeIDChanged();
    partial void OnCountChanging(int value);
    partial void OnCountChanged();
    partial void OnDaysSinceInitiallyDiscoveredChanging(System.Nullable<short> value);
    partial void OnDaysSinceInitiallyDiscoveredChanged();
    partial void OnDaysSinceLastDiscoveredChanging(short value);
    partial void OnDaysSinceLastDiscoveredChanged();
    partial void OnStrengthChanging(System.Nullable<double> value);
    partial void OnStrengthChanged();
    partial void OnRankChanging(int value);
    partial void OnRankChanged();
    partial void OnDenseRankChanging(int value);
    partial void OnDenseRankChanged();
    partial void OnNTileChanging(short value);
    partial void OnNTileChanged();
    #endregion
		
		public Files_MOST_POPULAR_SCHEMES_BY_DOMAIN()
		{
			this._Scheme = default(EntityRef<Scheme>);
			OnCreated();
		}
		
		[Column(Storage="_RowNumber", DbType="Int NOT NULL")]
		public int RowNumber
		{
			get
			{
				return this._RowNumber;
			}
			set
			{
				if ((this._RowNumber != value))
				{
					this.OnRowNumberChanging(value);
					this.SendPropertyChanging();
					this._RowNumber = value;
					this.SendPropertyChanged("RowNumber");
					this.OnRowNumberChanged();
				}
			}
		}
		
		[Column(Storage="_InitiallyDiscovered", DbType="DateTime")]
		public System.Nullable<System.DateTime> InitiallyDiscovered
		{
			get
			{
				return this._InitiallyDiscovered;
			}
			set
			{
				if ((this._InitiallyDiscovered != value))
				{
					this.OnInitiallyDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._InitiallyDiscovered = value;
					this.SendPropertyChanged("InitiallyDiscovered");
					this.OnInitiallyDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_LastDiscovered", DbType="DateTime NOT NULL")]
		public System.DateTime LastDiscovered
		{
			get
			{
				return this._LastDiscovered;
			}
			set
			{
				if ((this._LastDiscovered != value))
				{
					this.OnLastDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._LastDiscovered = value;
					this.SendPropertyChanged("LastDiscovered");
					this.OnLastDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_SchemeID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int SchemeID
		{
			get
			{
				return this._SchemeID;
			}
			set
			{
				if ((this._SchemeID != value))
				{
					if (this._Scheme.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSchemeIDChanging(value);
					this.SendPropertyChanging();
					this._SchemeID = value;
					this.SendPropertyChanged("SchemeID");
					this.OnSchemeIDChanged();
				}
			}
		}
		
		[Column(Storage="_Count", DbType="Int NOT NULL")]
		public int Count
		{
			get
			{
				return this._Count;
			}
			set
			{
				if ((this._Count != value))
				{
					this.OnCountChanging(value);
					this.SendPropertyChanging();
					this._Count = value;
					this.SendPropertyChanged("Count");
					this.OnCountChanged();
				}
			}
		}
		
		[Column(Storage="_DaysSinceInitiallyDiscovered", DbType="SmallInt")]
		public System.Nullable<short> DaysSinceInitiallyDiscovered
		{
			get
			{
				return this._DaysSinceInitiallyDiscovered;
			}
			set
			{
				if ((this._DaysSinceInitiallyDiscovered != value))
				{
					this.OnDaysSinceInitiallyDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._DaysSinceInitiallyDiscovered = value;
					this.SendPropertyChanged("DaysSinceInitiallyDiscovered");
					this.OnDaysSinceInitiallyDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_DaysSinceLastDiscovered", DbType="SmallInt NOT NULL")]
		public short DaysSinceLastDiscovered
		{
			get
			{
				return this._DaysSinceLastDiscovered;
			}
			set
			{
				if ((this._DaysSinceLastDiscovered != value))
				{
					this.OnDaysSinceLastDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._DaysSinceLastDiscovered = value;
					this.SendPropertyChanged("DaysSinceLastDiscovered");
					this.OnDaysSinceLastDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_Strength", DbType="Float")]
		public System.Nullable<double> Strength
		{
			get
			{
				return this._Strength;
			}
			set
			{
				if ((this._Strength != value))
				{
					this.OnStrengthChanging(value);
					this.SendPropertyChanging();
					this._Strength = value;
					this.SendPropertyChanged("Strength");
					this.OnStrengthChanged();
				}
			}
		}
		
		[Column(Storage="_Rank", DbType="Int NOT NULL")]
		public int Rank
		{
			get
			{
				return this._Rank;
			}
			set
			{
				if ((this._Rank != value))
				{
					this.OnRankChanging(value);
					this.SendPropertyChanging();
					this._Rank = value;
					this.SendPropertyChanged("Rank");
					this.OnRankChanged();
				}
			}
		}
		
		[Column(Storage="_DenseRank", DbType="Int NOT NULL")]
		public int DenseRank
		{
			get
			{
				return this._DenseRank;
			}
			set
			{
				if ((this._DenseRank != value))
				{
					this.OnDenseRankChanging(value);
					this.SendPropertyChanging();
					this._DenseRank = value;
					this.SendPropertyChanged("DenseRank");
					this.OnDenseRankChanged();
				}
			}
		}
		
		[Column(Storage="_NTile", DbType="SmallInt NOT NULL")]
		public short NTile
		{
			get
			{
				return this._NTile;
			}
			set
			{
				if ((this._NTile != value))
				{
					this.OnNTileChanging(value);
					this.SendPropertyChanging();
					this._NTile = value;
					this.SendPropertyChanged("NTile");
					this.OnNTileChanged();
				}
			}
		}
		
		[Association(Name="Scheme_Files_MOST_POPULAR_SCHEMES_BY_DOMAIN", Storage="_Scheme", ThisKey="SchemeID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Scheme Scheme
		{
			get
			{
				return this._Scheme.Entity;
			}
			set
			{
				Scheme previousValue = this._Scheme.Entity;
				if (((previousValue != value) 
							|| (this._Scheme.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Scheme.Entity = null;
						previousValue.Files_MOST_POPULAR_SCHEMES_BY_DOMAIN = null;
					}
					this._Scheme.Entity = value;
					if ((value != null))
					{
						value.Files_MOST_POPULAR_SCHEMES_BY_DOMAIN = this;
						this._SchemeID = value.ID;
					}
					else
					{
						this._SchemeID = default(int);
					}
					this.SendPropertyChanged("Scheme");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="rpt.Files_MOST_POPULAR_SCHEMES_BY_EXTENSIONS")]
	public partial class Files_MOST_POPULAR_SCHEMES_BY_EXTENSION : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RowNumber;
		
		private System.Nullable<System.DateTime> _InitiallyDiscovered;
		
		private System.DateTime _LastDiscovered;
		
		private int _SchemeID;
		
		private int _Count;
		
		private System.Nullable<short> _DaysSinceInitiallyDiscovered;
		
		private short _DaysSinceLastDiscovered;
		
		private System.Nullable<double> _Strength;
		
		private int _Rank;
		
		private int _DenseRank;
		
		private short _NTile;
		
		private EntityRef<Scheme> _Scheme;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRowNumberChanging(int value);
    partial void OnRowNumberChanged();
    partial void OnInitiallyDiscoveredChanging(System.Nullable<System.DateTime> value);
    partial void OnInitiallyDiscoveredChanged();
    partial void OnLastDiscoveredChanging(System.DateTime value);
    partial void OnLastDiscoveredChanged();
    partial void OnSchemeIDChanging(int value);
    partial void OnSchemeIDChanged();
    partial void OnCountChanging(int value);
    partial void OnCountChanged();
    partial void OnDaysSinceInitiallyDiscoveredChanging(System.Nullable<short> value);
    partial void OnDaysSinceInitiallyDiscoveredChanged();
    partial void OnDaysSinceLastDiscoveredChanging(short value);
    partial void OnDaysSinceLastDiscoveredChanged();
    partial void OnStrengthChanging(System.Nullable<double> value);
    partial void OnStrengthChanged();
    partial void OnRankChanging(int value);
    partial void OnRankChanged();
    partial void OnDenseRankChanging(int value);
    partial void OnDenseRankChanged();
    partial void OnNTileChanging(short value);
    partial void OnNTileChanged();
    #endregion
		
		public Files_MOST_POPULAR_SCHEMES_BY_EXTENSION()
		{
			this._Scheme = default(EntityRef<Scheme>);
			OnCreated();
		}
		
		[Column(Storage="_RowNumber", DbType="Int NOT NULL")]
		public int RowNumber
		{
			get
			{
				return this._RowNumber;
			}
			set
			{
				if ((this._RowNumber != value))
				{
					this.OnRowNumberChanging(value);
					this.SendPropertyChanging();
					this._RowNumber = value;
					this.SendPropertyChanged("RowNumber");
					this.OnRowNumberChanged();
				}
			}
		}
		
		[Column(Storage="_InitiallyDiscovered", DbType="DateTime")]
		public System.Nullable<System.DateTime> InitiallyDiscovered
		{
			get
			{
				return this._InitiallyDiscovered;
			}
			set
			{
				if ((this._InitiallyDiscovered != value))
				{
					this.OnInitiallyDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._InitiallyDiscovered = value;
					this.SendPropertyChanged("InitiallyDiscovered");
					this.OnInitiallyDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_LastDiscovered", DbType="DateTime NOT NULL")]
		public System.DateTime LastDiscovered
		{
			get
			{
				return this._LastDiscovered;
			}
			set
			{
				if ((this._LastDiscovered != value))
				{
					this.OnLastDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._LastDiscovered = value;
					this.SendPropertyChanged("LastDiscovered");
					this.OnLastDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_SchemeID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int SchemeID
		{
			get
			{
				return this._SchemeID;
			}
			set
			{
				if ((this._SchemeID != value))
				{
					if (this._Scheme.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSchemeIDChanging(value);
					this.SendPropertyChanging();
					this._SchemeID = value;
					this.SendPropertyChanged("SchemeID");
					this.OnSchemeIDChanged();
				}
			}
		}
		
		[Column(Storage="_Count", DbType="Int NOT NULL")]
		public int Count
		{
			get
			{
				return this._Count;
			}
			set
			{
				if ((this._Count != value))
				{
					this.OnCountChanging(value);
					this.SendPropertyChanging();
					this._Count = value;
					this.SendPropertyChanged("Count");
					this.OnCountChanged();
				}
			}
		}
		
		[Column(Storage="_DaysSinceInitiallyDiscovered", DbType="SmallInt")]
		public System.Nullable<short> DaysSinceInitiallyDiscovered
		{
			get
			{
				return this._DaysSinceInitiallyDiscovered;
			}
			set
			{
				if ((this._DaysSinceInitiallyDiscovered != value))
				{
					this.OnDaysSinceInitiallyDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._DaysSinceInitiallyDiscovered = value;
					this.SendPropertyChanged("DaysSinceInitiallyDiscovered");
					this.OnDaysSinceInitiallyDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_DaysSinceLastDiscovered", DbType="SmallInt NOT NULL")]
		public short DaysSinceLastDiscovered
		{
			get
			{
				return this._DaysSinceLastDiscovered;
			}
			set
			{
				if ((this._DaysSinceLastDiscovered != value))
				{
					this.OnDaysSinceLastDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._DaysSinceLastDiscovered = value;
					this.SendPropertyChanged("DaysSinceLastDiscovered");
					this.OnDaysSinceLastDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_Strength", DbType="Float")]
		public System.Nullable<double> Strength
		{
			get
			{
				return this._Strength;
			}
			set
			{
				if ((this._Strength != value))
				{
					this.OnStrengthChanging(value);
					this.SendPropertyChanging();
					this._Strength = value;
					this.SendPropertyChanged("Strength");
					this.OnStrengthChanged();
				}
			}
		}
		
		[Column(Storage="_Rank", DbType="Int NOT NULL")]
		public int Rank
		{
			get
			{
				return this._Rank;
			}
			set
			{
				if ((this._Rank != value))
				{
					this.OnRankChanging(value);
					this.SendPropertyChanging();
					this._Rank = value;
					this.SendPropertyChanged("Rank");
					this.OnRankChanged();
				}
			}
		}
		
		[Column(Storage="_DenseRank", DbType="Int NOT NULL")]
		public int DenseRank
		{
			get
			{
				return this._DenseRank;
			}
			set
			{
				if ((this._DenseRank != value))
				{
					this.OnDenseRankChanging(value);
					this.SendPropertyChanging();
					this._DenseRank = value;
					this.SendPropertyChanged("DenseRank");
					this.OnDenseRankChanged();
				}
			}
		}
		
		[Column(Storage="_NTile", DbType="SmallInt NOT NULL")]
		public short NTile
		{
			get
			{
				return this._NTile;
			}
			set
			{
				if ((this._NTile != value))
				{
					this.OnNTileChanging(value);
					this.SendPropertyChanging();
					this._NTile = value;
					this.SendPropertyChanged("NTile");
					this.OnNTileChanged();
				}
			}
		}
		
		[Association(Name="Scheme_Files_MOST_POPULAR_SCHEMES_BY_EXTENSION", Storage="_Scheme", ThisKey="SchemeID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Scheme Scheme
		{
			get
			{
				return this._Scheme.Entity;
			}
			set
			{
				Scheme previousValue = this._Scheme.Entity;
				if (((previousValue != value) 
							|| (this._Scheme.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Scheme.Entity = null;
						previousValue.Files_MOST_POPULAR_SCHEMES_BY_EXTENSION = null;
					}
					this._Scheme.Entity = value;
					if ((value != null))
					{
						value.Files_MOST_POPULAR_SCHEMES_BY_EXTENSION = this;
						this._SchemeID = value.ID;
					}
					else
					{
						this._SchemeID = default(int);
					}
					this.SendPropertyChanged("Scheme");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="rpt.Files_MOST_POPULAR_SCHEMES_BY_HOSTS")]
	public partial class Files_MOST_POPULAR_SCHEMES_BY_HOST : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RowNumber;
		
		private System.Nullable<System.DateTime> _InitiallyDiscovered;
		
		private System.DateTime _LastDiscovered;
		
		private int _SchemeID;
		
		private int _Count;
		
		private System.Nullable<short> _DaysSinceInitiallyDiscovered;
		
		private short _DaysSinceLastDiscovered;
		
		private System.Nullable<double> _Strength;
		
		private int _Rank;
		
		private int _DenseRank;
		
		private short _NTile;
		
		private EntityRef<Scheme> _Scheme;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRowNumberChanging(int value);
    partial void OnRowNumberChanged();
    partial void OnInitiallyDiscoveredChanging(System.Nullable<System.DateTime> value);
    partial void OnInitiallyDiscoveredChanged();
    partial void OnLastDiscoveredChanging(System.DateTime value);
    partial void OnLastDiscoveredChanged();
    partial void OnSchemeIDChanging(int value);
    partial void OnSchemeIDChanged();
    partial void OnCountChanging(int value);
    partial void OnCountChanged();
    partial void OnDaysSinceInitiallyDiscoveredChanging(System.Nullable<short> value);
    partial void OnDaysSinceInitiallyDiscoveredChanged();
    partial void OnDaysSinceLastDiscoveredChanging(short value);
    partial void OnDaysSinceLastDiscoveredChanged();
    partial void OnStrengthChanging(System.Nullable<double> value);
    partial void OnStrengthChanged();
    partial void OnRankChanging(int value);
    partial void OnRankChanged();
    partial void OnDenseRankChanging(int value);
    partial void OnDenseRankChanged();
    partial void OnNTileChanging(short value);
    partial void OnNTileChanged();
    #endregion
		
		public Files_MOST_POPULAR_SCHEMES_BY_HOST()
		{
			this._Scheme = default(EntityRef<Scheme>);
			OnCreated();
		}
		
		[Column(Storage="_RowNumber", DbType="Int NOT NULL")]
		public int RowNumber
		{
			get
			{
				return this._RowNumber;
			}
			set
			{
				if ((this._RowNumber != value))
				{
					this.OnRowNumberChanging(value);
					this.SendPropertyChanging();
					this._RowNumber = value;
					this.SendPropertyChanged("RowNumber");
					this.OnRowNumberChanged();
				}
			}
		}
		
		[Column(Storage="_InitiallyDiscovered", DbType="DateTime")]
		public System.Nullable<System.DateTime> InitiallyDiscovered
		{
			get
			{
				return this._InitiallyDiscovered;
			}
			set
			{
				if ((this._InitiallyDiscovered != value))
				{
					this.OnInitiallyDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._InitiallyDiscovered = value;
					this.SendPropertyChanged("InitiallyDiscovered");
					this.OnInitiallyDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_LastDiscovered", DbType="DateTime NOT NULL")]
		public System.DateTime LastDiscovered
		{
			get
			{
				return this._LastDiscovered;
			}
			set
			{
				if ((this._LastDiscovered != value))
				{
					this.OnLastDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._LastDiscovered = value;
					this.SendPropertyChanged("LastDiscovered");
					this.OnLastDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_SchemeID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int SchemeID
		{
			get
			{
				return this._SchemeID;
			}
			set
			{
				if ((this._SchemeID != value))
				{
					if (this._Scheme.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSchemeIDChanging(value);
					this.SendPropertyChanging();
					this._SchemeID = value;
					this.SendPropertyChanged("SchemeID");
					this.OnSchemeIDChanged();
				}
			}
		}
		
		[Column(Storage="_Count", DbType="Int NOT NULL")]
		public int Count
		{
			get
			{
				return this._Count;
			}
			set
			{
				if ((this._Count != value))
				{
					this.OnCountChanging(value);
					this.SendPropertyChanging();
					this._Count = value;
					this.SendPropertyChanged("Count");
					this.OnCountChanged();
				}
			}
		}
		
		[Column(Storage="_DaysSinceInitiallyDiscovered", DbType="SmallInt")]
		public System.Nullable<short> DaysSinceInitiallyDiscovered
		{
			get
			{
				return this._DaysSinceInitiallyDiscovered;
			}
			set
			{
				if ((this._DaysSinceInitiallyDiscovered != value))
				{
					this.OnDaysSinceInitiallyDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._DaysSinceInitiallyDiscovered = value;
					this.SendPropertyChanged("DaysSinceInitiallyDiscovered");
					this.OnDaysSinceInitiallyDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_DaysSinceLastDiscovered", DbType="SmallInt NOT NULL")]
		public short DaysSinceLastDiscovered
		{
			get
			{
				return this._DaysSinceLastDiscovered;
			}
			set
			{
				if ((this._DaysSinceLastDiscovered != value))
				{
					this.OnDaysSinceLastDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._DaysSinceLastDiscovered = value;
					this.SendPropertyChanged("DaysSinceLastDiscovered");
					this.OnDaysSinceLastDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_Strength", DbType="Float")]
		public System.Nullable<double> Strength
		{
			get
			{
				return this._Strength;
			}
			set
			{
				if ((this._Strength != value))
				{
					this.OnStrengthChanging(value);
					this.SendPropertyChanging();
					this._Strength = value;
					this.SendPropertyChanged("Strength");
					this.OnStrengthChanged();
				}
			}
		}
		
		[Column(Storage="_Rank", DbType="Int NOT NULL")]
		public int Rank
		{
			get
			{
				return this._Rank;
			}
			set
			{
				if ((this._Rank != value))
				{
					this.OnRankChanging(value);
					this.SendPropertyChanging();
					this._Rank = value;
					this.SendPropertyChanged("Rank");
					this.OnRankChanged();
				}
			}
		}
		
		[Column(Storage="_DenseRank", DbType="Int NOT NULL")]
		public int DenseRank
		{
			get
			{
				return this._DenseRank;
			}
			set
			{
				if ((this._DenseRank != value))
				{
					this.OnDenseRankChanging(value);
					this.SendPropertyChanging();
					this._DenseRank = value;
					this.SendPropertyChanged("DenseRank");
					this.OnDenseRankChanged();
				}
			}
		}
		
		[Column(Storage="_NTile", DbType="SmallInt NOT NULL")]
		public short NTile
		{
			get
			{
				return this._NTile;
			}
			set
			{
				if ((this._NTile != value))
				{
					this.OnNTileChanging(value);
					this.SendPropertyChanging();
					this._NTile = value;
					this.SendPropertyChanged("NTile");
					this.OnNTileChanged();
				}
			}
		}
		
		[Association(Name="Scheme_Files_MOST_POPULAR_SCHEMES_BY_HOST", Storage="_Scheme", ThisKey="SchemeID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Scheme Scheme
		{
			get
			{
				return this._Scheme.Entity;
			}
			set
			{
				Scheme previousValue = this._Scheme.Entity;
				if (((previousValue != value) 
							|| (this._Scheme.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Scheme.Entity = null;
						previousValue.Files_MOST_POPULAR_SCHEMES_BY_HOST = null;
					}
					this._Scheme.Entity = value;
					if ((value != null))
					{
						value.Files_MOST_POPULAR_SCHEMES_BY_HOST = this;
						this._SchemeID = value.ID;
					}
					else
					{
						this._SchemeID = default(int);
					}
					this.SendPropertyChanged("Scheme");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="rpt.Files_MOST_POPULAR_SCHEMES_BY_SCHEMES")]
	public partial class Files_MOST_POPULAR_SCHEMES_BY_SCHEME : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RowNumber;
		
		private System.Nullable<System.DateTime> _InitiallyDiscovered;
		
		private System.DateTime _LastDiscovered;
		
		private int _SchemeID;
		
		private int _Count;
		
		private System.Nullable<short> _DaysSinceInitiallyDiscovered;
		
		private short _DaysSinceLastDiscovered;
		
		private System.Nullable<double> _Strength;
		
		private int _Rank;
		
		private int _DenseRank;
		
		private short _NTile;
		
		private EntityRef<Scheme> _Scheme;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRowNumberChanging(int value);
    partial void OnRowNumberChanged();
    partial void OnInitiallyDiscoveredChanging(System.Nullable<System.DateTime> value);
    partial void OnInitiallyDiscoveredChanged();
    partial void OnLastDiscoveredChanging(System.DateTime value);
    partial void OnLastDiscoveredChanged();
    partial void OnSchemeIDChanging(int value);
    partial void OnSchemeIDChanged();
    partial void OnCountChanging(int value);
    partial void OnCountChanged();
    partial void OnDaysSinceInitiallyDiscoveredChanging(System.Nullable<short> value);
    partial void OnDaysSinceInitiallyDiscoveredChanged();
    partial void OnDaysSinceLastDiscoveredChanging(short value);
    partial void OnDaysSinceLastDiscoveredChanged();
    partial void OnStrengthChanging(System.Nullable<double> value);
    partial void OnStrengthChanged();
    partial void OnRankChanging(int value);
    partial void OnRankChanged();
    partial void OnDenseRankChanging(int value);
    partial void OnDenseRankChanged();
    partial void OnNTileChanging(short value);
    partial void OnNTileChanged();
    #endregion
		
		public Files_MOST_POPULAR_SCHEMES_BY_SCHEME()
		{
			this._Scheme = default(EntityRef<Scheme>);
			OnCreated();
		}
		
		[Column(Storage="_RowNumber", DbType="Int NOT NULL")]
		public int RowNumber
		{
			get
			{
				return this._RowNumber;
			}
			set
			{
				if ((this._RowNumber != value))
				{
					this.OnRowNumberChanging(value);
					this.SendPropertyChanging();
					this._RowNumber = value;
					this.SendPropertyChanged("RowNumber");
					this.OnRowNumberChanged();
				}
			}
		}
		
		[Column(Storage="_InitiallyDiscovered", DbType="DateTime")]
		public System.Nullable<System.DateTime> InitiallyDiscovered
		{
			get
			{
				return this._InitiallyDiscovered;
			}
			set
			{
				if ((this._InitiallyDiscovered != value))
				{
					this.OnInitiallyDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._InitiallyDiscovered = value;
					this.SendPropertyChanged("InitiallyDiscovered");
					this.OnInitiallyDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_LastDiscovered", DbType="DateTime NOT NULL")]
		public System.DateTime LastDiscovered
		{
			get
			{
				return this._LastDiscovered;
			}
			set
			{
				if ((this._LastDiscovered != value))
				{
					this.OnLastDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._LastDiscovered = value;
					this.SendPropertyChanged("LastDiscovered");
					this.OnLastDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_SchemeID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int SchemeID
		{
			get
			{
				return this._SchemeID;
			}
			set
			{
				if ((this._SchemeID != value))
				{
					if (this._Scheme.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSchemeIDChanging(value);
					this.SendPropertyChanging();
					this._SchemeID = value;
					this.SendPropertyChanged("SchemeID");
					this.OnSchemeIDChanged();
				}
			}
		}
		
		[Column(Storage="_Count", DbType="Int NOT NULL")]
		public int Count
		{
			get
			{
				return this._Count;
			}
			set
			{
				if ((this._Count != value))
				{
					this.OnCountChanging(value);
					this.SendPropertyChanging();
					this._Count = value;
					this.SendPropertyChanged("Count");
					this.OnCountChanged();
				}
			}
		}
		
		[Column(Storage="_DaysSinceInitiallyDiscovered", DbType="SmallInt")]
		public System.Nullable<short> DaysSinceInitiallyDiscovered
		{
			get
			{
				return this._DaysSinceInitiallyDiscovered;
			}
			set
			{
				if ((this._DaysSinceInitiallyDiscovered != value))
				{
					this.OnDaysSinceInitiallyDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._DaysSinceInitiallyDiscovered = value;
					this.SendPropertyChanged("DaysSinceInitiallyDiscovered");
					this.OnDaysSinceInitiallyDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_DaysSinceLastDiscovered", DbType="SmallInt NOT NULL")]
		public short DaysSinceLastDiscovered
		{
			get
			{
				return this._DaysSinceLastDiscovered;
			}
			set
			{
				if ((this._DaysSinceLastDiscovered != value))
				{
					this.OnDaysSinceLastDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._DaysSinceLastDiscovered = value;
					this.SendPropertyChanged("DaysSinceLastDiscovered");
					this.OnDaysSinceLastDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_Strength", DbType="Float")]
		public System.Nullable<double> Strength
		{
			get
			{
				return this._Strength;
			}
			set
			{
				if ((this._Strength != value))
				{
					this.OnStrengthChanging(value);
					this.SendPropertyChanging();
					this._Strength = value;
					this.SendPropertyChanged("Strength");
					this.OnStrengthChanged();
				}
			}
		}
		
		[Column(Storage="_Rank", DbType="Int NOT NULL")]
		public int Rank
		{
			get
			{
				return this._Rank;
			}
			set
			{
				if ((this._Rank != value))
				{
					this.OnRankChanging(value);
					this.SendPropertyChanging();
					this._Rank = value;
					this.SendPropertyChanged("Rank");
					this.OnRankChanged();
				}
			}
		}
		
		[Column(Storage="_DenseRank", DbType="Int NOT NULL")]
		public int DenseRank
		{
			get
			{
				return this._DenseRank;
			}
			set
			{
				if ((this._DenseRank != value))
				{
					this.OnDenseRankChanging(value);
					this.SendPropertyChanging();
					this._DenseRank = value;
					this.SendPropertyChanged("DenseRank");
					this.OnDenseRankChanged();
				}
			}
		}
		
		[Column(Storage="_NTile", DbType="SmallInt NOT NULL")]
		public short NTile
		{
			get
			{
				return this._NTile;
			}
			set
			{
				if ((this._NTile != value))
				{
					this.OnNTileChanging(value);
					this.SendPropertyChanging();
					this._NTile = value;
					this.SendPropertyChanged("NTile");
					this.OnNTileChanged();
				}
			}
		}
		
		[Association(Name="Scheme_Files_MOST_POPULAR_SCHEMES_BY_SCHEME", Storage="_Scheme", ThisKey="SchemeID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Scheme Scheme
		{
			get
			{
				return this._Scheme.Entity;
			}
			set
			{
				Scheme previousValue = this._Scheme.Entity;
				if (((previousValue != value) 
							|| (this._Scheme.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Scheme.Entity = null;
						previousValue.Files_MOST_POPULAR_SCHEMES_BY_SCHEME = null;
					}
					this._Scheme.Entity = value;
					if ((value != null))
					{
						value.Files_MOST_POPULAR_SCHEMES_BY_SCHEME = this;
						this._SchemeID = value.ID;
					}
					else
					{
						this._SchemeID = default(int);
					}
					this.SendPropertyChanged("Scheme");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="rpt.HyperLinks_COUNT_BY_ABSOLUTEURI")]
	public partial class HyperLinks_COUNT_BY_ABSOLUTEURI : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RowNumber;
		
		private long _HyperLinkID;
		
		private int _Count;
		
		private int _Rank;
		
		private int _DenseRank;
		
		private byte _NTile;
		
		private EntityRef<HyperLink> _HyperLink;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRowNumberChanging(int value);
    partial void OnRowNumberChanged();
    partial void OnHyperLinkIDChanging(long value);
    partial void OnHyperLinkIDChanged();
    partial void OnCountChanging(int value);
    partial void OnCountChanged();
    partial void OnRankChanging(int value);
    partial void OnRankChanged();
    partial void OnDenseRankChanging(int value);
    partial void OnDenseRankChanged();
    partial void OnNTileChanging(byte value);
    partial void OnNTileChanged();
    #endregion
		
		public HyperLinks_COUNT_BY_ABSOLUTEURI()
		{
			this._HyperLink = default(EntityRef<HyperLink>);
			OnCreated();
		}
		
		[Column(Storage="_RowNumber", DbType="Int NOT NULL")]
		public int RowNumber
		{
			get
			{
				return this._RowNumber;
			}
			set
			{
				if ((this._RowNumber != value))
				{
					this.OnRowNumberChanging(value);
					this.SendPropertyChanging();
					this._RowNumber = value;
					this.SendPropertyChanged("RowNumber");
					this.OnRowNumberChanged();
				}
			}
		}
		
		[Column(Storage="_HyperLinkID", DbType="BigInt NOT NULL", IsPrimaryKey=true)]
		public long HyperLinkID
		{
			get
			{
				return this._HyperLinkID;
			}
			set
			{
				if ((this._HyperLinkID != value))
				{
					if (this._HyperLink.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnHyperLinkIDChanging(value);
					this.SendPropertyChanging();
					this._HyperLinkID = value;
					this.SendPropertyChanged("HyperLinkID");
					this.OnHyperLinkIDChanged();
				}
			}
		}
		
		[Column(Storage="_Count", DbType="Int NOT NULL")]
		public int Count
		{
			get
			{
				return this._Count;
			}
			set
			{
				if ((this._Count != value))
				{
					this.OnCountChanging(value);
					this.SendPropertyChanging();
					this._Count = value;
					this.SendPropertyChanged("Count");
					this.OnCountChanged();
				}
			}
		}
		
		[Column(Storage="_Rank", DbType="Int NOT NULL")]
		public int Rank
		{
			get
			{
				return this._Rank;
			}
			set
			{
				if ((this._Rank != value))
				{
					this.OnRankChanging(value);
					this.SendPropertyChanging();
					this._Rank = value;
					this.SendPropertyChanged("Rank");
					this.OnRankChanged();
				}
			}
		}
		
		[Column(Storage="_DenseRank", DbType="Int NOT NULL")]
		public int DenseRank
		{
			get
			{
				return this._DenseRank;
			}
			set
			{
				if ((this._DenseRank != value))
				{
					this.OnDenseRankChanging(value);
					this.SendPropertyChanging();
					this._DenseRank = value;
					this.SendPropertyChanged("DenseRank");
					this.OnDenseRankChanged();
				}
			}
		}
		
		[Column(Storage="_NTile", DbType="TinyInt NOT NULL")]
		public byte NTile
		{
			get
			{
				return this._NTile;
			}
			set
			{
				if ((this._NTile != value))
				{
					this.OnNTileChanging(value);
					this.SendPropertyChanging();
					this._NTile = value;
					this.SendPropertyChanged("NTile");
					this.OnNTileChanged();
				}
			}
		}
		
		[Association(Name="HyperLink_HyperLinks_COUNT_BY_ABSOLUTEURI", Storage="_HyperLink", ThisKey="HyperLinkID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public HyperLink HyperLink
		{
			get
			{
				return this._HyperLink.Entity;
			}
			set
			{
				HyperLink previousValue = this._HyperLink.Entity;
				if (((previousValue != value) 
							|| (this._HyperLink.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._HyperLink.Entity = null;
						previousValue.HyperLinks_COUNT_BY_ABSOLUTEURI = null;
					}
					this._HyperLink.Entity = value;
					if ((value != null))
					{
						value.HyperLinks_COUNT_BY_ABSOLUTEURI = this;
						this._HyperLinkID = value.ID;
					}
					else
					{
						this._HyperLinkID = default(long);
					}
					this.SendPropertyChanged("HyperLink");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="rpt.HyperLinks_COUNT_BY_DOMAIN")]
	public partial class HyperLinks_COUNT_BY_DOMAIN : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RowNumber;
		
		private int _DomainID;
		
		private int _Count;
		
		private int _Rank;
		
		private int _DenseRank;
		
		private byte _NTile;
		
		private EntityRef<Domain> _Domain;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRowNumberChanging(int value);
    partial void OnRowNumberChanged();
    partial void OnDomainIDChanging(int value);
    partial void OnDomainIDChanged();
    partial void OnCountChanging(int value);
    partial void OnCountChanged();
    partial void OnRankChanging(int value);
    partial void OnRankChanged();
    partial void OnDenseRankChanging(int value);
    partial void OnDenseRankChanged();
    partial void OnNTileChanging(byte value);
    partial void OnNTileChanged();
    #endregion
		
		public HyperLinks_COUNT_BY_DOMAIN()
		{
			this._Domain = default(EntityRef<Domain>);
			OnCreated();
		}
		
		[Column(Storage="_RowNumber", DbType="Int NOT NULL")]
		public int RowNumber
		{
			get
			{
				return this._RowNumber;
			}
			set
			{
				if ((this._RowNumber != value))
				{
					this.OnRowNumberChanging(value);
					this.SendPropertyChanging();
					this._RowNumber = value;
					this.SendPropertyChanged("RowNumber");
					this.OnRowNumberChanged();
				}
			}
		}
		
		[Column(Storage="_DomainID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int DomainID
		{
			get
			{
				return this._DomainID;
			}
			set
			{
				if ((this._DomainID != value))
				{
					if (this._Domain.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDomainIDChanging(value);
					this.SendPropertyChanging();
					this._DomainID = value;
					this.SendPropertyChanged("DomainID");
					this.OnDomainIDChanged();
				}
			}
		}
		
		[Column(Storage="_Count", DbType="Int NOT NULL")]
		public int Count
		{
			get
			{
				return this._Count;
			}
			set
			{
				if ((this._Count != value))
				{
					this.OnCountChanging(value);
					this.SendPropertyChanging();
					this._Count = value;
					this.SendPropertyChanged("Count");
					this.OnCountChanged();
				}
			}
		}
		
		[Column(Storage="_Rank", DbType="Int NOT NULL")]
		public int Rank
		{
			get
			{
				return this._Rank;
			}
			set
			{
				if ((this._Rank != value))
				{
					this.OnRankChanging(value);
					this.SendPropertyChanging();
					this._Rank = value;
					this.SendPropertyChanged("Rank");
					this.OnRankChanged();
				}
			}
		}
		
		[Column(Storage="_DenseRank", DbType="Int NOT NULL")]
		public int DenseRank
		{
			get
			{
				return this._DenseRank;
			}
			set
			{
				if ((this._DenseRank != value))
				{
					this.OnDenseRankChanging(value);
					this.SendPropertyChanging();
					this._DenseRank = value;
					this.SendPropertyChanged("DenseRank");
					this.OnDenseRankChanged();
				}
			}
		}
		
		[Column(Storage="_NTile", DbType="TinyInt NOT NULL")]
		public byte NTile
		{
			get
			{
				return this._NTile;
			}
			set
			{
				if ((this._NTile != value))
				{
					this.OnNTileChanging(value);
					this.SendPropertyChanging();
					this._NTile = value;
					this.SendPropertyChanged("NTile");
					this.OnNTileChanged();
				}
			}
		}
		
		[Association(Name="Domain_HyperLinks_COUNT_BY_DOMAIN", Storage="_Domain", ThisKey="DomainID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Domain Domain
		{
			get
			{
				return this._Domain.Entity;
			}
			set
			{
				Domain previousValue = this._Domain.Entity;
				if (((previousValue != value) 
							|| (this._Domain.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Domain.Entity = null;
						previousValue.HyperLinks_COUNT_BY_DOMAIN = null;
					}
					this._Domain.Entity = value;
					if ((value != null))
					{
						value.HyperLinks_COUNT_BY_DOMAIN = this;
						this._DomainID = value.ID;
					}
					else
					{
						this._DomainID = default(int);
					}
					this.SendPropertyChanged("Domain");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="rpt.HyperLinks_COUNT_BY_EXTENSION")]
	public partial class HyperLinks_COUNT_BY_EXTENSION : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RowNumber;
		
		private int _ExtensionID;
		
		private int _Count;
		
		private int _Rank;
		
		private int _DenseRank;
		
		private byte _NTile;
		
		private EntityRef<Extension> _Extension;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRowNumberChanging(int value);
    partial void OnRowNumberChanged();
    partial void OnExtensionIDChanging(int value);
    partial void OnExtensionIDChanged();
    partial void OnCountChanging(int value);
    partial void OnCountChanged();
    partial void OnRankChanging(int value);
    partial void OnRankChanged();
    partial void OnDenseRankChanging(int value);
    partial void OnDenseRankChanged();
    partial void OnNTileChanging(byte value);
    partial void OnNTileChanged();
    #endregion
		
		public HyperLinks_COUNT_BY_EXTENSION()
		{
			this._Extension = default(EntityRef<Extension>);
			OnCreated();
		}
		
		[Column(Storage="_RowNumber", DbType="Int NOT NULL")]
		public int RowNumber
		{
			get
			{
				return this._RowNumber;
			}
			set
			{
				if ((this._RowNumber != value))
				{
					this.OnRowNumberChanging(value);
					this.SendPropertyChanging();
					this._RowNumber = value;
					this.SendPropertyChanged("RowNumber");
					this.OnRowNumberChanged();
				}
			}
		}
		
		[Column(Storage="_ExtensionID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ExtensionID
		{
			get
			{
				return this._ExtensionID;
			}
			set
			{
				if ((this._ExtensionID != value))
				{
					if (this._Extension.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnExtensionIDChanging(value);
					this.SendPropertyChanging();
					this._ExtensionID = value;
					this.SendPropertyChanged("ExtensionID");
					this.OnExtensionIDChanged();
				}
			}
		}
		
		[Column(Storage="_Count", DbType="Int NOT NULL")]
		public int Count
		{
			get
			{
				return this._Count;
			}
			set
			{
				if ((this._Count != value))
				{
					this.OnCountChanging(value);
					this.SendPropertyChanging();
					this._Count = value;
					this.SendPropertyChanged("Count");
					this.OnCountChanged();
				}
			}
		}
		
		[Column(Storage="_Rank", DbType="Int NOT NULL")]
		public int Rank
		{
			get
			{
				return this._Rank;
			}
			set
			{
				if ((this._Rank != value))
				{
					this.OnRankChanging(value);
					this.SendPropertyChanging();
					this._Rank = value;
					this.SendPropertyChanged("Rank");
					this.OnRankChanged();
				}
			}
		}
		
		[Column(Storage="_DenseRank", DbType="Int NOT NULL")]
		public int DenseRank
		{
			get
			{
				return this._DenseRank;
			}
			set
			{
				if ((this._DenseRank != value))
				{
					this.OnDenseRankChanging(value);
					this.SendPropertyChanging();
					this._DenseRank = value;
					this.SendPropertyChanged("DenseRank");
					this.OnDenseRankChanged();
				}
			}
		}
		
		[Column(Storage="_NTile", DbType="TinyInt NOT NULL")]
		public byte NTile
		{
			get
			{
				return this._NTile;
			}
			set
			{
				if ((this._NTile != value))
				{
					this.OnNTileChanging(value);
					this.SendPropertyChanging();
					this._NTile = value;
					this.SendPropertyChanged("NTile");
					this.OnNTileChanged();
				}
			}
		}
		
		[Association(Name="Extension_HyperLinks_COUNT_BY_EXTENSION", Storage="_Extension", ThisKey="ExtensionID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Extension Extension
		{
			get
			{
				return this._Extension.Entity;
			}
			set
			{
				Extension previousValue = this._Extension.Entity;
				if (((previousValue != value) 
							|| (this._Extension.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Extension.Entity = null;
						previousValue.HyperLinks_COUNT_BY_EXTENSION = null;
					}
					this._Extension.Entity = value;
					if ((value != null))
					{
						value.HyperLinks_COUNT_BY_EXTENSION = this;
						this._ExtensionID = value.ID;
					}
					else
					{
						this._ExtensionID = default(int);
					}
					this.SendPropertyChanged("Extension");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="rpt.HyperLinks_COUNT_BY_HOST")]
	public partial class HyperLinks_COUNT_BY_HOST : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RowNumber;
		
		private int _HostID;
		
		private int _Count;
		
		private int _Rank;
		
		private int _DenseRank;
		
		private byte _NTile;
		
		private EntityRef<Host> _Host;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRowNumberChanging(int value);
    partial void OnRowNumberChanged();
    partial void OnHostIDChanging(int value);
    partial void OnHostIDChanged();
    partial void OnCountChanging(int value);
    partial void OnCountChanged();
    partial void OnRankChanging(int value);
    partial void OnRankChanged();
    partial void OnDenseRankChanging(int value);
    partial void OnDenseRankChanged();
    partial void OnNTileChanging(byte value);
    partial void OnNTileChanged();
    #endregion
		
		public HyperLinks_COUNT_BY_HOST()
		{
			this._Host = default(EntityRef<Host>);
			OnCreated();
		}
		
		[Column(Storage="_RowNumber", DbType="Int NOT NULL")]
		public int RowNumber
		{
			get
			{
				return this._RowNumber;
			}
			set
			{
				if ((this._RowNumber != value))
				{
					this.OnRowNumberChanging(value);
					this.SendPropertyChanging();
					this._RowNumber = value;
					this.SendPropertyChanged("RowNumber");
					this.OnRowNumberChanged();
				}
			}
		}
		
		[Column(Storage="_HostID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int HostID
		{
			get
			{
				return this._HostID;
			}
			set
			{
				if ((this._HostID != value))
				{
					if (this._Host.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnHostIDChanging(value);
					this.SendPropertyChanging();
					this._HostID = value;
					this.SendPropertyChanged("HostID");
					this.OnHostIDChanged();
				}
			}
		}
		
		[Column(Storage="_Count", DbType="Int NOT NULL")]
		public int Count
		{
			get
			{
				return this._Count;
			}
			set
			{
				if ((this._Count != value))
				{
					this.OnCountChanging(value);
					this.SendPropertyChanging();
					this._Count = value;
					this.SendPropertyChanged("Count");
					this.OnCountChanged();
				}
			}
		}
		
		[Column(Storage="_Rank", DbType="Int NOT NULL")]
		public int Rank
		{
			get
			{
				return this._Rank;
			}
			set
			{
				if ((this._Rank != value))
				{
					this.OnRankChanging(value);
					this.SendPropertyChanging();
					this._Rank = value;
					this.SendPropertyChanged("Rank");
					this.OnRankChanged();
				}
			}
		}
		
		[Column(Storage="_DenseRank", DbType="Int NOT NULL")]
		public int DenseRank
		{
			get
			{
				return this._DenseRank;
			}
			set
			{
				if ((this._DenseRank != value))
				{
					this.OnDenseRankChanging(value);
					this.SendPropertyChanging();
					this._DenseRank = value;
					this.SendPropertyChanged("DenseRank");
					this.OnDenseRankChanged();
				}
			}
		}
		
		[Column(Storage="_NTile", DbType="TinyInt NOT NULL")]
		public byte NTile
		{
			get
			{
				return this._NTile;
			}
			set
			{
				if ((this._NTile != value))
				{
					this.OnNTileChanging(value);
					this.SendPropertyChanging();
					this._NTile = value;
					this.SendPropertyChanged("NTile");
					this.OnNTileChanged();
				}
			}
		}
		
		[Association(Name="Host_HyperLinks_COUNT_BY_HOST", Storage="_Host", ThisKey="HostID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Host Host
		{
			get
			{
				return this._Host.Entity;
			}
			set
			{
				Host previousValue = this._Host.Entity;
				if (((previousValue != value) 
							|| (this._Host.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Host.Entity = null;
						previousValue.HyperLinks_COUNT_BY_HOST = null;
					}
					this._Host.Entity = value;
					if ((value != null))
					{
						value.HyperLinks_COUNT_BY_HOST = this;
						this._HostID = value.ID;
					}
					else
					{
						this._HostID = default(int);
					}
					this.SendPropertyChanged("Host");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="rpt.HyperLinks_COUNT_BY_SCHEME")]
	public partial class HyperLinks_COUNT_BY_SCHEME : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RowNumber;
		
		private int _SchemeID;
		
		private int _Count;
		
		private int _Rank;
		
		private int _DenseRank;
		
		private byte _NTile;
		
		private EntityRef<Scheme> _Scheme;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRowNumberChanging(int value);
    partial void OnRowNumberChanged();
    partial void OnSchemeIDChanging(int value);
    partial void OnSchemeIDChanged();
    partial void OnCountChanging(int value);
    partial void OnCountChanged();
    partial void OnRankChanging(int value);
    partial void OnRankChanged();
    partial void OnDenseRankChanging(int value);
    partial void OnDenseRankChanged();
    partial void OnNTileChanging(byte value);
    partial void OnNTileChanged();
    #endregion
		
		public HyperLinks_COUNT_BY_SCHEME()
		{
			this._Scheme = default(EntityRef<Scheme>);
			OnCreated();
		}
		
		[Column(Storage="_RowNumber", DbType="Int NOT NULL")]
		public int RowNumber
		{
			get
			{
				return this._RowNumber;
			}
			set
			{
				if ((this._RowNumber != value))
				{
					this.OnRowNumberChanging(value);
					this.SendPropertyChanging();
					this._RowNumber = value;
					this.SendPropertyChanged("RowNumber");
					this.OnRowNumberChanged();
				}
			}
		}
		
		[Column(Storage="_SchemeID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int SchemeID
		{
			get
			{
				return this._SchemeID;
			}
			set
			{
				if ((this._SchemeID != value))
				{
					if (this._Scheme.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSchemeIDChanging(value);
					this.SendPropertyChanging();
					this._SchemeID = value;
					this.SendPropertyChanged("SchemeID");
					this.OnSchemeIDChanged();
				}
			}
		}
		
		[Column(Storage="_Count", DbType="Int NOT NULL")]
		public int Count
		{
			get
			{
				return this._Count;
			}
			set
			{
				if ((this._Count != value))
				{
					this.OnCountChanging(value);
					this.SendPropertyChanging();
					this._Count = value;
					this.SendPropertyChanged("Count");
					this.OnCountChanged();
				}
			}
		}
		
		[Column(Storage="_Rank", DbType="Int NOT NULL")]
		public int Rank
		{
			get
			{
				return this._Rank;
			}
			set
			{
				if ((this._Rank != value))
				{
					this.OnRankChanging(value);
					this.SendPropertyChanging();
					this._Rank = value;
					this.SendPropertyChanged("Rank");
					this.OnRankChanged();
				}
			}
		}
		
		[Column(Storage="_DenseRank", DbType="Int NOT NULL")]
		public int DenseRank
		{
			get
			{
				return this._DenseRank;
			}
			set
			{
				if ((this._DenseRank != value))
				{
					this.OnDenseRankChanging(value);
					this.SendPropertyChanging();
					this._DenseRank = value;
					this.SendPropertyChanged("DenseRank");
					this.OnDenseRankChanged();
				}
			}
		}
		
		[Column(Storage="_NTile", DbType="TinyInt NOT NULL")]
		public byte NTile
		{
			get
			{
				return this._NTile;
			}
			set
			{
				if ((this._NTile != value))
				{
					this.OnNTileChanging(value);
					this.SendPropertyChanging();
					this._NTile = value;
					this.SendPropertyChanged("NTile");
					this.OnNTileChanged();
				}
			}
		}
		
		[Association(Name="Scheme_HyperLinks_COUNT_BY_SCHEME", Storage="_Scheme", ThisKey="SchemeID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Scheme Scheme
		{
			get
			{
				return this._Scheme.Entity;
			}
			set
			{
				Scheme previousValue = this._Scheme.Entity;
				if (((previousValue != value) 
							|| (this._Scheme.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Scheme.Entity = null;
						previousValue.HyperLinks_COUNT_BY_SCHEME = null;
					}
					this._Scheme.Entity = value;
					if ((value != null))
					{
						value.HyperLinks_COUNT_BY_SCHEME = this;
						this._SchemeID = value.ID;
					}
					else
					{
						this._SchemeID = default(int);
					}
					this.SendPropertyChanged("Scheme");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="rpt.HyperLinks_MOST_POPULAR_ABSOLUTEURIS_BY_ABSOLUTEURIS")]
	public partial class HyperLinks_MOST_POPULAR_ABSOLUTEURIS_BY_ABSOLUTEURI : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RowNumber;
		
		private System.Nullable<System.DateTime> _InitiallyDiscovered;
		
		private System.DateTime _LastDiscovered;
		
		private long _HyperLinkID;
		
		private int _Count;
		
		private System.Nullable<short> _DaysSinceInitiallyDiscovered;
		
		private short _DaysSinceLastDiscovered;
		
		private System.Nullable<double> _Strength;
		
		private int _Rank;
		
		private int _DenseRank;
		
		private byte _NTile;
		
		private EntityRef<HyperLink> _HyperLink;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRowNumberChanging(int value);
    partial void OnRowNumberChanged();
    partial void OnInitiallyDiscoveredChanging(System.Nullable<System.DateTime> value);
    partial void OnInitiallyDiscoveredChanged();
    partial void OnLastDiscoveredChanging(System.DateTime value);
    partial void OnLastDiscoveredChanged();
    partial void OnHyperLinkIDChanging(long value);
    partial void OnHyperLinkIDChanged();
    partial void OnCountChanging(int value);
    partial void OnCountChanged();
    partial void OnDaysSinceInitiallyDiscoveredChanging(System.Nullable<short> value);
    partial void OnDaysSinceInitiallyDiscoveredChanged();
    partial void OnDaysSinceLastDiscoveredChanging(short value);
    partial void OnDaysSinceLastDiscoveredChanged();
    partial void OnStrengthChanging(System.Nullable<double> value);
    partial void OnStrengthChanged();
    partial void OnRankChanging(int value);
    partial void OnRankChanged();
    partial void OnDenseRankChanging(int value);
    partial void OnDenseRankChanged();
    partial void OnNTileChanging(byte value);
    partial void OnNTileChanged();
    #endregion
		
		public HyperLinks_MOST_POPULAR_ABSOLUTEURIS_BY_ABSOLUTEURI()
		{
			this._HyperLink = default(EntityRef<HyperLink>);
			OnCreated();
		}
		
		[Column(Storage="_RowNumber", DbType="Int NOT NULL")]
		public int RowNumber
		{
			get
			{
				return this._RowNumber;
			}
			set
			{
				if ((this._RowNumber != value))
				{
					this.OnRowNumberChanging(value);
					this.SendPropertyChanging();
					this._RowNumber = value;
					this.SendPropertyChanged("RowNumber");
					this.OnRowNumberChanged();
				}
			}
		}
		
		[Column(Storage="_InitiallyDiscovered", DbType="DateTime")]
		public System.Nullable<System.DateTime> InitiallyDiscovered
		{
			get
			{
				return this._InitiallyDiscovered;
			}
			set
			{
				if ((this._InitiallyDiscovered != value))
				{
					this.OnInitiallyDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._InitiallyDiscovered = value;
					this.SendPropertyChanged("InitiallyDiscovered");
					this.OnInitiallyDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_LastDiscovered", DbType="DateTime NOT NULL")]
		public System.DateTime LastDiscovered
		{
			get
			{
				return this._LastDiscovered;
			}
			set
			{
				if ((this._LastDiscovered != value))
				{
					this.OnLastDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._LastDiscovered = value;
					this.SendPropertyChanged("LastDiscovered");
					this.OnLastDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_HyperLinkID", DbType="BigInt NOT NULL", IsPrimaryKey=true)]
		public long HyperLinkID
		{
			get
			{
				return this._HyperLinkID;
			}
			set
			{
				if ((this._HyperLinkID != value))
				{
					if (this._HyperLink.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnHyperLinkIDChanging(value);
					this.SendPropertyChanging();
					this._HyperLinkID = value;
					this.SendPropertyChanged("HyperLinkID");
					this.OnHyperLinkIDChanged();
				}
			}
		}
		
		[Column(Storage="_Count", DbType="Int NOT NULL")]
		public int Count
		{
			get
			{
				return this._Count;
			}
			set
			{
				if ((this._Count != value))
				{
					this.OnCountChanging(value);
					this.SendPropertyChanging();
					this._Count = value;
					this.SendPropertyChanged("Count");
					this.OnCountChanged();
				}
			}
		}
		
		[Column(Storage="_DaysSinceInitiallyDiscovered", DbType="SmallInt")]
		public System.Nullable<short> DaysSinceInitiallyDiscovered
		{
			get
			{
				return this._DaysSinceInitiallyDiscovered;
			}
			set
			{
				if ((this._DaysSinceInitiallyDiscovered != value))
				{
					this.OnDaysSinceInitiallyDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._DaysSinceInitiallyDiscovered = value;
					this.SendPropertyChanged("DaysSinceInitiallyDiscovered");
					this.OnDaysSinceInitiallyDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_DaysSinceLastDiscovered", DbType="SmallInt NOT NULL")]
		public short DaysSinceLastDiscovered
		{
			get
			{
				return this._DaysSinceLastDiscovered;
			}
			set
			{
				if ((this._DaysSinceLastDiscovered != value))
				{
					this.OnDaysSinceLastDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._DaysSinceLastDiscovered = value;
					this.SendPropertyChanged("DaysSinceLastDiscovered");
					this.OnDaysSinceLastDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_Strength", DbType="Float")]
		public System.Nullable<double> Strength
		{
			get
			{
				return this._Strength;
			}
			set
			{
				if ((this._Strength != value))
				{
					this.OnStrengthChanging(value);
					this.SendPropertyChanging();
					this._Strength = value;
					this.SendPropertyChanged("Strength");
					this.OnStrengthChanged();
				}
			}
		}
		
		[Column(Storage="_Rank", DbType="Int NOT NULL")]
		public int Rank
		{
			get
			{
				return this._Rank;
			}
			set
			{
				if ((this._Rank != value))
				{
					this.OnRankChanging(value);
					this.SendPropertyChanging();
					this._Rank = value;
					this.SendPropertyChanged("Rank");
					this.OnRankChanged();
				}
			}
		}
		
		[Column(Storage="_DenseRank", DbType="Int NOT NULL")]
		public int DenseRank
		{
			get
			{
				return this._DenseRank;
			}
			set
			{
				if ((this._DenseRank != value))
				{
					this.OnDenseRankChanging(value);
					this.SendPropertyChanging();
					this._DenseRank = value;
					this.SendPropertyChanged("DenseRank");
					this.OnDenseRankChanged();
				}
			}
		}
		
		[Column(Storage="_NTile", DbType="TinyInt NOT NULL")]
		public byte NTile
		{
			get
			{
				return this._NTile;
			}
			set
			{
				if ((this._NTile != value))
				{
					this.OnNTileChanging(value);
					this.SendPropertyChanging();
					this._NTile = value;
					this.SendPropertyChanged("NTile");
					this.OnNTileChanged();
				}
			}
		}
		
		[Association(Name="HyperLink_HyperLinks_MOST_POPULAR_ABSOLUTEURIS_BY_ABSOLUTEURI", Storage="_HyperLink", ThisKey="HyperLinkID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public HyperLink HyperLink
		{
			get
			{
				return this._HyperLink.Entity;
			}
			set
			{
				HyperLink previousValue = this._HyperLink.Entity;
				if (((previousValue != value) 
							|| (this._HyperLink.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._HyperLink.Entity = null;
						previousValue.HyperLinks_MOST_POPULAR_ABSOLUTEURIS_BY_ABSOLUTEURI = null;
					}
					this._HyperLink.Entity = value;
					if ((value != null))
					{
						value.HyperLinks_MOST_POPULAR_ABSOLUTEURIS_BY_ABSOLUTEURI = this;
						this._HyperLinkID = value.ID;
					}
					else
					{
						this._HyperLinkID = default(long);
					}
					this.SendPropertyChanged("HyperLink");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="rpt.HyperLinks_MOST_POPULAR_ABSOLUTEURIS_BY_DOMAINS")]
	public partial class HyperLinks_MOST_POPULAR_ABSOLUTEURIS_BY_DOMAIN : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RowNumber;
		
		private System.Nullable<System.DateTime> _InitiallyDiscovered;
		
		private System.DateTime _LastDiscovered;
		
		private long _HyperLinkID;
		
		private int _Count;
		
		private System.Nullable<short> _DaysSinceInitiallyDiscovered;
		
		private short _DaysSinceLastDiscovered;
		
		private System.Nullable<double> _Strength;
		
		private int _Rank;
		
		private int _DenseRank;
		
		private byte _NTile;
		
		private EntityRef<HyperLink> _HyperLink;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRowNumberChanging(int value);
    partial void OnRowNumberChanged();
    partial void OnInitiallyDiscoveredChanging(System.Nullable<System.DateTime> value);
    partial void OnInitiallyDiscoveredChanged();
    partial void OnLastDiscoveredChanging(System.DateTime value);
    partial void OnLastDiscoveredChanged();
    partial void OnHyperLinkIDChanging(long value);
    partial void OnHyperLinkIDChanged();
    partial void OnCountChanging(int value);
    partial void OnCountChanged();
    partial void OnDaysSinceInitiallyDiscoveredChanging(System.Nullable<short> value);
    partial void OnDaysSinceInitiallyDiscoveredChanged();
    partial void OnDaysSinceLastDiscoveredChanging(short value);
    partial void OnDaysSinceLastDiscoveredChanged();
    partial void OnStrengthChanging(System.Nullable<double> value);
    partial void OnStrengthChanged();
    partial void OnRankChanging(int value);
    partial void OnRankChanged();
    partial void OnDenseRankChanging(int value);
    partial void OnDenseRankChanged();
    partial void OnNTileChanging(byte value);
    partial void OnNTileChanged();
    #endregion
		
		public HyperLinks_MOST_POPULAR_ABSOLUTEURIS_BY_DOMAIN()
		{
			this._HyperLink = default(EntityRef<HyperLink>);
			OnCreated();
		}
		
		[Column(Storage="_RowNumber", DbType="Int NOT NULL")]
		public int RowNumber
		{
			get
			{
				return this._RowNumber;
			}
			set
			{
				if ((this._RowNumber != value))
				{
					this.OnRowNumberChanging(value);
					this.SendPropertyChanging();
					this._RowNumber = value;
					this.SendPropertyChanged("RowNumber");
					this.OnRowNumberChanged();
				}
			}
		}
		
		[Column(Storage="_InitiallyDiscovered", DbType="DateTime")]
		public System.Nullable<System.DateTime> InitiallyDiscovered
		{
			get
			{
				return this._InitiallyDiscovered;
			}
			set
			{
				if ((this._InitiallyDiscovered != value))
				{
					this.OnInitiallyDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._InitiallyDiscovered = value;
					this.SendPropertyChanged("InitiallyDiscovered");
					this.OnInitiallyDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_LastDiscovered", DbType="DateTime NOT NULL")]
		public System.DateTime LastDiscovered
		{
			get
			{
				return this._LastDiscovered;
			}
			set
			{
				if ((this._LastDiscovered != value))
				{
					this.OnLastDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._LastDiscovered = value;
					this.SendPropertyChanged("LastDiscovered");
					this.OnLastDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_HyperLinkID", DbType="BigInt NOT NULL", IsPrimaryKey=true)]
		public long HyperLinkID
		{
			get
			{
				return this._HyperLinkID;
			}
			set
			{
				if ((this._HyperLinkID != value))
				{
					if (this._HyperLink.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnHyperLinkIDChanging(value);
					this.SendPropertyChanging();
					this._HyperLinkID = value;
					this.SendPropertyChanged("HyperLinkID");
					this.OnHyperLinkIDChanged();
				}
			}
		}
		
		[Column(Storage="_Count", DbType="Int NOT NULL")]
		public int Count
		{
			get
			{
				return this._Count;
			}
			set
			{
				if ((this._Count != value))
				{
					this.OnCountChanging(value);
					this.SendPropertyChanging();
					this._Count = value;
					this.SendPropertyChanged("Count");
					this.OnCountChanged();
				}
			}
		}
		
		[Column(Storage="_DaysSinceInitiallyDiscovered", DbType="SmallInt")]
		public System.Nullable<short> DaysSinceInitiallyDiscovered
		{
			get
			{
				return this._DaysSinceInitiallyDiscovered;
			}
			set
			{
				if ((this._DaysSinceInitiallyDiscovered != value))
				{
					this.OnDaysSinceInitiallyDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._DaysSinceInitiallyDiscovered = value;
					this.SendPropertyChanged("DaysSinceInitiallyDiscovered");
					this.OnDaysSinceInitiallyDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_DaysSinceLastDiscovered", DbType="SmallInt NOT NULL")]
		public short DaysSinceLastDiscovered
		{
			get
			{
				return this._DaysSinceLastDiscovered;
			}
			set
			{
				if ((this._DaysSinceLastDiscovered != value))
				{
					this.OnDaysSinceLastDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._DaysSinceLastDiscovered = value;
					this.SendPropertyChanged("DaysSinceLastDiscovered");
					this.OnDaysSinceLastDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_Strength", DbType="Float")]
		public System.Nullable<double> Strength
		{
			get
			{
				return this._Strength;
			}
			set
			{
				if ((this._Strength != value))
				{
					this.OnStrengthChanging(value);
					this.SendPropertyChanging();
					this._Strength = value;
					this.SendPropertyChanged("Strength");
					this.OnStrengthChanged();
				}
			}
		}
		
		[Column(Storage="_Rank", DbType="Int NOT NULL")]
		public int Rank
		{
			get
			{
				return this._Rank;
			}
			set
			{
				if ((this._Rank != value))
				{
					this.OnRankChanging(value);
					this.SendPropertyChanging();
					this._Rank = value;
					this.SendPropertyChanged("Rank");
					this.OnRankChanged();
				}
			}
		}
		
		[Column(Storage="_DenseRank", DbType="Int NOT NULL")]
		public int DenseRank
		{
			get
			{
				return this._DenseRank;
			}
			set
			{
				if ((this._DenseRank != value))
				{
					this.OnDenseRankChanging(value);
					this.SendPropertyChanging();
					this._DenseRank = value;
					this.SendPropertyChanged("DenseRank");
					this.OnDenseRankChanged();
				}
			}
		}
		
		[Column(Storage="_NTile", DbType="TinyInt NOT NULL")]
		public byte NTile
		{
			get
			{
				return this._NTile;
			}
			set
			{
				if ((this._NTile != value))
				{
					this.OnNTileChanging(value);
					this.SendPropertyChanging();
					this._NTile = value;
					this.SendPropertyChanged("NTile");
					this.OnNTileChanged();
				}
			}
		}
		
		[Association(Name="HyperLink_HyperLinks_MOST_POPULAR_ABSOLUTEURIS_BY_DOMAIN", Storage="_HyperLink", ThisKey="HyperLinkID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public HyperLink HyperLink
		{
			get
			{
				return this._HyperLink.Entity;
			}
			set
			{
				HyperLink previousValue = this._HyperLink.Entity;
				if (((previousValue != value) 
							|| (this._HyperLink.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._HyperLink.Entity = null;
						previousValue.HyperLinks_MOST_POPULAR_ABSOLUTEURIS_BY_DOMAIN = null;
					}
					this._HyperLink.Entity = value;
					if ((value != null))
					{
						value.HyperLinks_MOST_POPULAR_ABSOLUTEURIS_BY_DOMAIN = this;
						this._HyperLinkID = value.ID;
					}
					else
					{
						this._HyperLinkID = default(long);
					}
					this.SendPropertyChanged("HyperLink");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="rpt.HyperLinks_MOST_POPULAR_ABSOLUTEURIS_BY_EXTENSIONS")]
	public partial class HyperLinks_MOST_POPULAR_ABSOLUTEURIS_BY_EXTENSION : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RowNumber;
		
		private System.Nullable<System.DateTime> _InitiallyDiscovered;
		
		private System.DateTime _LastDiscovered;
		
		private long _HyperLinkID;
		
		private int _Count;
		
		private System.Nullable<short> _DaysSinceInitiallyDiscovered;
		
		private short _DaysSinceLastDiscovered;
		
		private System.Nullable<double> _Strength;
		
		private int _Rank;
		
		private int _DenseRank;
		
		private byte _NTile;
		
		private EntityRef<HyperLink> _HyperLink;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRowNumberChanging(int value);
    partial void OnRowNumberChanged();
    partial void OnInitiallyDiscoveredChanging(System.Nullable<System.DateTime> value);
    partial void OnInitiallyDiscoveredChanged();
    partial void OnLastDiscoveredChanging(System.DateTime value);
    partial void OnLastDiscoveredChanged();
    partial void OnHyperLinkIDChanging(long value);
    partial void OnHyperLinkIDChanged();
    partial void OnCountChanging(int value);
    partial void OnCountChanged();
    partial void OnDaysSinceInitiallyDiscoveredChanging(System.Nullable<short> value);
    partial void OnDaysSinceInitiallyDiscoveredChanged();
    partial void OnDaysSinceLastDiscoveredChanging(short value);
    partial void OnDaysSinceLastDiscoveredChanged();
    partial void OnStrengthChanging(System.Nullable<double> value);
    partial void OnStrengthChanged();
    partial void OnRankChanging(int value);
    partial void OnRankChanged();
    partial void OnDenseRankChanging(int value);
    partial void OnDenseRankChanged();
    partial void OnNTileChanging(byte value);
    partial void OnNTileChanged();
    #endregion
		
		public HyperLinks_MOST_POPULAR_ABSOLUTEURIS_BY_EXTENSION()
		{
			this._HyperLink = default(EntityRef<HyperLink>);
			OnCreated();
		}
		
		[Column(Storage="_RowNumber", DbType="Int NOT NULL")]
		public int RowNumber
		{
			get
			{
				return this._RowNumber;
			}
			set
			{
				if ((this._RowNumber != value))
				{
					this.OnRowNumberChanging(value);
					this.SendPropertyChanging();
					this._RowNumber = value;
					this.SendPropertyChanged("RowNumber");
					this.OnRowNumberChanged();
				}
			}
		}
		
		[Column(Storage="_InitiallyDiscovered", DbType="DateTime")]
		public System.Nullable<System.DateTime> InitiallyDiscovered
		{
			get
			{
				return this._InitiallyDiscovered;
			}
			set
			{
				if ((this._InitiallyDiscovered != value))
				{
					this.OnInitiallyDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._InitiallyDiscovered = value;
					this.SendPropertyChanged("InitiallyDiscovered");
					this.OnInitiallyDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_LastDiscovered", DbType="DateTime NOT NULL")]
		public System.DateTime LastDiscovered
		{
			get
			{
				return this._LastDiscovered;
			}
			set
			{
				if ((this._LastDiscovered != value))
				{
					this.OnLastDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._LastDiscovered = value;
					this.SendPropertyChanged("LastDiscovered");
					this.OnLastDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_HyperLinkID", DbType="BigInt NOT NULL", IsPrimaryKey=true)]
		public long HyperLinkID
		{
			get
			{
				return this._HyperLinkID;
			}
			set
			{
				if ((this._HyperLinkID != value))
				{
					if (this._HyperLink.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnHyperLinkIDChanging(value);
					this.SendPropertyChanging();
					this._HyperLinkID = value;
					this.SendPropertyChanged("HyperLinkID");
					this.OnHyperLinkIDChanged();
				}
			}
		}
		
		[Column(Storage="_Count", DbType="Int NOT NULL")]
		public int Count
		{
			get
			{
				return this._Count;
			}
			set
			{
				if ((this._Count != value))
				{
					this.OnCountChanging(value);
					this.SendPropertyChanging();
					this._Count = value;
					this.SendPropertyChanged("Count");
					this.OnCountChanged();
				}
			}
		}
		
		[Column(Storage="_DaysSinceInitiallyDiscovered", DbType="SmallInt")]
		public System.Nullable<short> DaysSinceInitiallyDiscovered
		{
			get
			{
				return this._DaysSinceInitiallyDiscovered;
			}
			set
			{
				if ((this._DaysSinceInitiallyDiscovered != value))
				{
					this.OnDaysSinceInitiallyDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._DaysSinceInitiallyDiscovered = value;
					this.SendPropertyChanged("DaysSinceInitiallyDiscovered");
					this.OnDaysSinceInitiallyDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_DaysSinceLastDiscovered", DbType="SmallInt NOT NULL")]
		public short DaysSinceLastDiscovered
		{
			get
			{
				return this._DaysSinceLastDiscovered;
			}
			set
			{
				if ((this._DaysSinceLastDiscovered != value))
				{
					this.OnDaysSinceLastDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._DaysSinceLastDiscovered = value;
					this.SendPropertyChanged("DaysSinceLastDiscovered");
					this.OnDaysSinceLastDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_Strength", DbType="Float")]
		public System.Nullable<double> Strength
		{
			get
			{
				return this._Strength;
			}
			set
			{
				if ((this._Strength != value))
				{
					this.OnStrengthChanging(value);
					this.SendPropertyChanging();
					this._Strength = value;
					this.SendPropertyChanged("Strength");
					this.OnStrengthChanged();
				}
			}
		}
		
		[Column(Storage="_Rank", DbType="Int NOT NULL")]
		public int Rank
		{
			get
			{
				return this._Rank;
			}
			set
			{
				if ((this._Rank != value))
				{
					this.OnRankChanging(value);
					this.SendPropertyChanging();
					this._Rank = value;
					this.SendPropertyChanged("Rank");
					this.OnRankChanged();
				}
			}
		}
		
		[Column(Storage="_DenseRank", DbType="Int NOT NULL")]
		public int DenseRank
		{
			get
			{
				return this._DenseRank;
			}
			set
			{
				if ((this._DenseRank != value))
				{
					this.OnDenseRankChanging(value);
					this.SendPropertyChanging();
					this._DenseRank = value;
					this.SendPropertyChanged("DenseRank");
					this.OnDenseRankChanged();
				}
			}
		}
		
		[Column(Storage="_NTile", DbType="TinyInt NOT NULL")]
		public byte NTile
		{
			get
			{
				return this._NTile;
			}
			set
			{
				if ((this._NTile != value))
				{
					this.OnNTileChanging(value);
					this.SendPropertyChanging();
					this._NTile = value;
					this.SendPropertyChanged("NTile");
					this.OnNTileChanged();
				}
			}
		}
		
		[Association(Name="HyperLink_HyperLinks_MOST_POPULAR_ABSOLUTEURIS_BY_EXTENSION", Storage="_HyperLink", ThisKey="HyperLinkID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public HyperLink HyperLink
		{
			get
			{
				return this._HyperLink.Entity;
			}
			set
			{
				HyperLink previousValue = this._HyperLink.Entity;
				if (((previousValue != value) 
							|| (this._HyperLink.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._HyperLink.Entity = null;
						previousValue.HyperLinks_MOST_POPULAR_ABSOLUTEURIS_BY_EXTENSION = null;
					}
					this._HyperLink.Entity = value;
					if ((value != null))
					{
						value.HyperLinks_MOST_POPULAR_ABSOLUTEURIS_BY_EXTENSION = this;
						this._HyperLinkID = value.ID;
					}
					else
					{
						this._HyperLinkID = default(long);
					}
					this.SendPropertyChanged("HyperLink");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="rpt.HyperLinks_MOST_POPULAR_ABSOLUTEURIS_BY_HOSTS")]
	public partial class HyperLinks_MOST_POPULAR_ABSOLUTEURIS_BY_HOST : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RowNumber;
		
		private System.Nullable<System.DateTime> _InitiallyDiscovered;
		
		private System.DateTime _LastDiscovered;
		
		private long _HyperLinkID;
		
		private int _Count;
		
		private System.Nullable<short> _DaysSinceInitiallyDiscovered;
		
		private short _DaysSinceLastDiscovered;
		
		private System.Nullable<double> _Strength;
		
		private int _Rank;
		
		private int _DenseRank;
		
		private byte _NTile;
		
		private EntityRef<HyperLink> _HyperLink;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRowNumberChanging(int value);
    partial void OnRowNumberChanged();
    partial void OnInitiallyDiscoveredChanging(System.Nullable<System.DateTime> value);
    partial void OnInitiallyDiscoveredChanged();
    partial void OnLastDiscoveredChanging(System.DateTime value);
    partial void OnLastDiscoveredChanged();
    partial void OnHyperLinkIDChanging(long value);
    partial void OnHyperLinkIDChanged();
    partial void OnCountChanging(int value);
    partial void OnCountChanged();
    partial void OnDaysSinceInitiallyDiscoveredChanging(System.Nullable<short> value);
    partial void OnDaysSinceInitiallyDiscoveredChanged();
    partial void OnDaysSinceLastDiscoveredChanging(short value);
    partial void OnDaysSinceLastDiscoveredChanged();
    partial void OnStrengthChanging(System.Nullable<double> value);
    partial void OnStrengthChanged();
    partial void OnRankChanging(int value);
    partial void OnRankChanged();
    partial void OnDenseRankChanging(int value);
    partial void OnDenseRankChanged();
    partial void OnNTileChanging(byte value);
    partial void OnNTileChanged();
    #endregion
		
		public HyperLinks_MOST_POPULAR_ABSOLUTEURIS_BY_HOST()
		{
			this._HyperLink = default(EntityRef<HyperLink>);
			OnCreated();
		}
		
		[Column(Storage="_RowNumber", DbType="Int NOT NULL")]
		public int RowNumber
		{
			get
			{
				return this._RowNumber;
			}
			set
			{
				if ((this._RowNumber != value))
				{
					this.OnRowNumberChanging(value);
					this.SendPropertyChanging();
					this._RowNumber = value;
					this.SendPropertyChanged("RowNumber");
					this.OnRowNumberChanged();
				}
			}
		}
		
		[Column(Storage="_InitiallyDiscovered", DbType="DateTime")]
		public System.Nullable<System.DateTime> InitiallyDiscovered
		{
			get
			{
				return this._InitiallyDiscovered;
			}
			set
			{
				if ((this._InitiallyDiscovered != value))
				{
					this.OnInitiallyDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._InitiallyDiscovered = value;
					this.SendPropertyChanged("InitiallyDiscovered");
					this.OnInitiallyDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_LastDiscovered", DbType="DateTime NOT NULL")]
		public System.DateTime LastDiscovered
		{
			get
			{
				return this._LastDiscovered;
			}
			set
			{
				if ((this._LastDiscovered != value))
				{
					this.OnLastDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._LastDiscovered = value;
					this.SendPropertyChanged("LastDiscovered");
					this.OnLastDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_HyperLinkID", DbType="BigInt NOT NULL", IsPrimaryKey=true)]
		public long HyperLinkID
		{
			get
			{
				return this._HyperLinkID;
			}
			set
			{
				if ((this._HyperLinkID != value))
				{
					if (this._HyperLink.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnHyperLinkIDChanging(value);
					this.SendPropertyChanging();
					this._HyperLinkID = value;
					this.SendPropertyChanged("HyperLinkID");
					this.OnHyperLinkIDChanged();
				}
			}
		}
		
		[Column(Storage="_Count", DbType="Int NOT NULL")]
		public int Count
		{
			get
			{
				return this._Count;
			}
			set
			{
				if ((this._Count != value))
				{
					this.OnCountChanging(value);
					this.SendPropertyChanging();
					this._Count = value;
					this.SendPropertyChanged("Count");
					this.OnCountChanged();
				}
			}
		}
		
		[Column(Storage="_DaysSinceInitiallyDiscovered", DbType="SmallInt")]
		public System.Nullable<short> DaysSinceInitiallyDiscovered
		{
			get
			{
				return this._DaysSinceInitiallyDiscovered;
			}
			set
			{
				if ((this._DaysSinceInitiallyDiscovered != value))
				{
					this.OnDaysSinceInitiallyDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._DaysSinceInitiallyDiscovered = value;
					this.SendPropertyChanged("DaysSinceInitiallyDiscovered");
					this.OnDaysSinceInitiallyDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_DaysSinceLastDiscovered", DbType="SmallInt NOT NULL")]
		public short DaysSinceLastDiscovered
		{
			get
			{
				return this._DaysSinceLastDiscovered;
			}
			set
			{
				if ((this._DaysSinceLastDiscovered != value))
				{
					this.OnDaysSinceLastDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._DaysSinceLastDiscovered = value;
					this.SendPropertyChanged("DaysSinceLastDiscovered");
					this.OnDaysSinceLastDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_Strength", DbType="Float")]
		public System.Nullable<double> Strength
		{
			get
			{
				return this._Strength;
			}
			set
			{
				if ((this._Strength != value))
				{
					this.OnStrengthChanging(value);
					this.SendPropertyChanging();
					this._Strength = value;
					this.SendPropertyChanged("Strength");
					this.OnStrengthChanged();
				}
			}
		}
		
		[Column(Storage="_Rank", DbType="Int NOT NULL")]
		public int Rank
		{
			get
			{
				return this._Rank;
			}
			set
			{
				if ((this._Rank != value))
				{
					this.OnRankChanging(value);
					this.SendPropertyChanging();
					this._Rank = value;
					this.SendPropertyChanged("Rank");
					this.OnRankChanged();
				}
			}
		}
		
		[Column(Storage="_DenseRank", DbType="Int NOT NULL")]
		public int DenseRank
		{
			get
			{
				return this._DenseRank;
			}
			set
			{
				if ((this._DenseRank != value))
				{
					this.OnDenseRankChanging(value);
					this.SendPropertyChanging();
					this._DenseRank = value;
					this.SendPropertyChanged("DenseRank");
					this.OnDenseRankChanged();
				}
			}
		}
		
		[Column(Storage="_NTile", DbType="TinyInt NOT NULL")]
		public byte NTile
		{
			get
			{
				return this._NTile;
			}
			set
			{
				if ((this._NTile != value))
				{
					this.OnNTileChanging(value);
					this.SendPropertyChanging();
					this._NTile = value;
					this.SendPropertyChanged("NTile");
					this.OnNTileChanged();
				}
			}
		}
		
		[Association(Name="HyperLink_HyperLinks_MOST_POPULAR_ABSOLUTEURIS_BY_HOST", Storage="_HyperLink", ThisKey="HyperLinkID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public HyperLink HyperLink
		{
			get
			{
				return this._HyperLink.Entity;
			}
			set
			{
				HyperLink previousValue = this._HyperLink.Entity;
				if (((previousValue != value) 
							|| (this._HyperLink.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._HyperLink.Entity = null;
						previousValue.HyperLinks_MOST_POPULAR_ABSOLUTEURIS_BY_HOST = null;
					}
					this._HyperLink.Entity = value;
					if ((value != null))
					{
						value.HyperLinks_MOST_POPULAR_ABSOLUTEURIS_BY_HOST = this;
						this._HyperLinkID = value.ID;
					}
					else
					{
						this._HyperLinkID = default(long);
					}
					this.SendPropertyChanged("HyperLink");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="rpt.HyperLinks_MOST_POPULAR_ABSOLUTEURIS_BY_SCHEMES")]
	public partial class HyperLinks_MOST_POPULAR_ABSOLUTEURIS_BY_SCHEME : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RowNumber;
		
		private System.Nullable<System.DateTime> _InitiallyDiscovered;
		
		private System.DateTime _LastDiscovered;
		
		private long _HyperLinkID;
		
		private int _Count;
		
		private System.Nullable<short> _DaysSinceInitiallyDiscovered;
		
		private short _DaysSinceLastDiscovered;
		
		private System.Nullable<double> _Strength;
		
		private int _Rank;
		
		private int _DenseRank;
		
		private byte _NTile;
		
		private EntityRef<HyperLink> _HyperLink;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRowNumberChanging(int value);
    partial void OnRowNumberChanged();
    partial void OnInitiallyDiscoveredChanging(System.Nullable<System.DateTime> value);
    partial void OnInitiallyDiscoveredChanged();
    partial void OnLastDiscoveredChanging(System.DateTime value);
    partial void OnLastDiscoveredChanged();
    partial void OnHyperLinkIDChanging(long value);
    partial void OnHyperLinkIDChanged();
    partial void OnCountChanging(int value);
    partial void OnCountChanged();
    partial void OnDaysSinceInitiallyDiscoveredChanging(System.Nullable<short> value);
    partial void OnDaysSinceInitiallyDiscoveredChanged();
    partial void OnDaysSinceLastDiscoveredChanging(short value);
    partial void OnDaysSinceLastDiscoveredChanged();
    partial void OnStrengthChanging(System.Nullable<double> value);
    partial void OnStrengthChanged();
    partial void OnRankChanging(int value);
    partial void OnRankChanged();
    partial void OnDenseRankChanging(int value);
    partial void OnDenseRankChanged();
    partial void OnNTileChanging(byte value);
    partial void OnNTileChanged();
    #endregion
		
		public HyperLinks_MOST_POPULAR_ABSOLUTEURIS_BY_SCHEME()
		{
			this._HyperLink = default(EntityRef<HyperLink>);
			OnCreated();
		}
		
		[Column(Storage="_RowNumber", DbType="Int NOT NULL")]
		public int RowNumber
		{
			get
			{
				return this._RowNumber;
			}
			set
			{
				if ((this._RowNumber != value))
				{
					this.OnRowNumberChanging(value);
					this.SendPropertyChanging();
					this._RowNumber = value;
					this.SendPropertyChanged("RowNumber");
					this.OnRowNumberChanged();
				}
			}
		}
		
		[Column(Storage="_InitiallyDiscovered", DbType="DateTime")]
		public System.Nullable<System.DateTime> InitiallyDiscovered
		{
			get
			{
				return this._InitiallyDiscovered;
			}
			set
			{
				if ((this._InitiallyDiscovered != value))
				{
					this.OnInitiallyDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._InitiallyDiscovered = value;
					this.SendPropertyChanged("InitiallyDiscovered");
					this.OnInitiallyDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_LastDiscovered", DbType="DateTime NOT NULL")]
		public System.DateTime LastDiscovered
		{
			get
			{
				return this._LastDiscovered;
			}
			set
			{
				if ((this._LastDiscovered != value))
				{
					this.OnLastDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._LastDiscovered = value;
					this.SendPropertyChanged("LastDiscovered");
					this.OnLastDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_HyperLinkID", DbType="BigInt NOT NULL", IsPrimaryKey=true)]
		public long HyperLinkID
		{
			get
			{
				return this._HyperLinkID;
			}
			set
			{
				if ((this._HyperLinkID != value))
				{
					if (this._HyperLink.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnHyperLinkIDChanging(value);
					this.SendPropertyChanging();
					this._HyperLinkID = value;
					this.SendPropertyChanged("HyperLinkID");
					this.OnHyperLinkIDChanged();
				}
			}
		}
		
		[Column(Storage="_Count", DbType="Int NOT NULL")]
		public int Count
		{
			get
			{
				return this._Count;
			}
			set
			{
				if ((this._Count != value))
				{
					this.OnCountChanging(value);
					this.SendPropertyChanging();
					this._Count = value;
					this.SendPropertyChanged("Count");
					this.OnCountChanged();
				}
			}
		}
		
		[Column(Storage="_DaysSinceInitiallyDiscovered", DbType="SmallInt")]
		public System.Nullable<short> DaysSinceInitiallyDiscovered
		{
			get
			{
				return this._DaysSinceInitiallyDiscovered;
			}
			set
			{
				if ((this._DaysSinceInitiallyDiscovered != value))
				{
					this.OnDaysSinceInitiallyDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._DaysSinceInitiallyDiscovered = value;
					this.SendPropertyChanged("DaysSinceInitiallyDiscovered");
					this.OnDaysSinceInitiallyDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_DaysSinceLastDiscovered", DbType="SmallInt NOT NULL")]
		public short DaysSinceLastDiscovered
		{
			get
			{
				return this._DaysSinceLastDiscovered;
			}
			set
			{
				if ((this._DaysSinceLastDiscovered != value))
				{
					this.OnDaysSinceLastDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._DaysSinceLastDiscovered = value;
					this.SendPropertyChanged("DaysSinceLastDiscovered");
					this.OnDaysSinceLastDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_Strength", DbType="Float")]
		public System.Nullable<double> Strength
		{
			get
			{
				return this._Strength;
			}
			set
			{
				if ((this._Strength != value))
				{
					this.OnStrengthChanging(value);
					this.SendPropertyChanging();
					this._Strength = value;
					this.SendPropertyChanged("Strength");
					this.OnStrengthChanged();
				}
			}
		}
		
		[Column(Storage="_Rank", DbType="Int NOT NULL")]
		public int Rank
		{
			get
			{
				return this._Rank;
			}
			set
			{
				if ((this._Rank != value))
				{
					this.OnRankChanging(value);
					this.SendPropertyChanging();
					this._Rank = value;
					this.SendPropertyChanged("Rank");
					this.OnRankChanged();
				}
			}
		}
		
		[Column(Storage="_DenseRank", DbType="Int NOT NULL")]
		public int DenseRank
		{
			get
			{
				return this._DenseRank;
			}
			set
			{
				if ((this._DenseRank != value))
				{
					this.OnDenseRankChanging(value);
					this.SendPropertyChanging();
					this._DenseRank = value;
					this.SendPropertyChanged("DenseRank");
					this.OnDenseRankChanged();
				}
			}
		}
		
		[Column(Storage="_NTile", DbType="TinyInt NOT NULL")]
		public byte NTile
		{
			get
			{
				return this._NTile;
			}
			set
			{
				if ((this._NTile != value))
				{
					this.OnNTileChanging(value);
					this.SendPropertyChanging();
					this._NTile = value;
					this.SendPropertyChanged("NTile");
					this.OnNTileChanged();
				}
			}
		}
		
		[Association(Name="HyperLink_HyperLinks_MOST_POPULAR_ABSOLUTEURIS_BY_SCHEME", Storage="_HyperLink", ThisKey="HyperLinkID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public HyperLink HyperLink
		{
			get
			{
				return this._HyperLink.Entity;
			}
			set
			{
				HyperLink previousValue = this._HyperLink.Entity;
				if (((previousValue != value) 
							|| (this._HyperLink.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._HyperLink.Entity = null;
						previousValue.HyperLinks_MOST_POPULAR_ABSOLUTEURIS_BY_SCHEME = null;
					}
					this._HyperLink.Entity = value;
					if ((value != null))
					{
						value.HyperLinks_MOST_POPULAR_ABSOLUTEURIS_BY_SCHEME = this;
						this._HyperLinkID = value.ID;
					}
					else
					{
						this._HyperLinkID = default(long);
					}
					this.SendPropertyChanged("HyperLink");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="rpt.HyperLinks_MOST_POPULAR_DOMAINS_BY_ABSOLUTEURIS")]
	public partial class HyperLinks_MOST_POPULAR_DOMAINS_BY_ABSOLUTEURI : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RowNumber;
		
		private System.Nullable<System.DateTime> _InitiallyDiscovered;
		
		private System.DateTime _LastDiscovered;
		
		private int _DomainID;
		
		private int _Count;
		
		private System.Nullable<short> _DaysSinceInitiallyDiscovered;
		
		private short _DaysSinceLastDiscovered;
		
		private System.Nullable<double> _Strength;
		
		private int _Rank;
		
		private int _DenseRank;
		
		private short _NTile;
		
		private EntityRef<Domain> _Domain;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRowNumberChanging(int value);
    partial void OnRowNumberChanged();
    partial void OnInitiallyDiscoveredChanging(System.Nullable<System.DateTime> value);
    partial void OnInitiallyDiscoveredChanged();
    partial void OnLastDiscoveredChanging(System.DateTime value);
    partial void OnLastDiscoveredChanged();
    partial void OnDomainIDChanging(int value);
    partial void OnDomainIDChanged();
    partial void OnCountChanging(int value);
    partial void OnCountChanged();
    partial void OnDaysSinceInitiallyDiscoveredChanging(System.Nullable<short> value);
    partial void OnDaysSinceInitiallyDiscoveredChanged();
    partial void OnDaysSinceLastDiscoveredChanging(short value);
    partial void OnDaysSinceLastDiscoveredChanged();
    partial void OnStrengthChanging(System.Nullable<double> value);
    partial void OnStrengthChanged();
    partial void OnRankChanging(int value);
    partial void OnRankChanged();
    partial void OnDenseRankChanging(int value);
    partial void OnDenseRankChanged();
    partial void OnNTileChanging(short value);
    partial void OnNTileChanged();
    #endregion
		
		public HyperLinks_MOST_POPULAR_DOMAINS_BY_ABSOLUTEURI()
		{
			this._Domain = default(EntityRef<Domain>);
			OnCreated();
		}
		
		[Column(Storage="_RowNumber", DbType="Int NOT NULL")]
		public int RowNumber
		{
			get
			{
				return this._RowNumber;
			}
			set
			{
				if ((this._RowNumber != value))
				{
					this.OnRowNumberChanging(value);
					this.SendPropertyChanging();
					this._RowNumber = value;
					this.SendPropertyChanged("RowNumber");
					this.OnRowNumberChanged();
				}
			}
		}
		
		[Column(Storage="_InitiallyDiscovered", DbType="DateTime")]
		public System.Nullable<System.DateTime> InitiallyDiscovered
		{
			get
			{
				return this._InitiallyDiscovered;
			}
			set
			{
				if ((this._InitiallyDiscovered != value))
				{
					this.OnInitiallyDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._InitiallyDiscovered = value;
					this.SendPropertyChanged("InitiallyDiscovered");
					this.OnInitiallyDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_LastDiscovered", DbType="DateTime NOT NULL")]
		public System.DateTime LastDiscovered
		{
			get
			{
				return this._LastDiscovered;
			}
			set
			{
				if ((this._LastDiscovered != value))
				{
					this.OnLastDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._LastDiscovered = value;
					this.SendPropertyChanged("LastDiscovered");
					this.OnLastDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_DomainID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int DomainID
		{
			get
			{
				return this._DomainID;
			}
			set
			{
				if ((this._DomainID != value))
				{
					if (this._Domain.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDomainIDChanging(value);
					this.SendPropertyChanging();
					this._DomainID = value;
					this.SendPropertyChanged("DomainID");
					this.OnDomainIDChanged();
				}
			}
		}
		
		[Column(Storage="_Count", DbType="Int NOT NULL")]
		public int Count
		{
			get
			{
				return this._Count;
			}
			set
			{
				if ((this._Count != value))
				{
					this.OnCountChanging(value);
					this.SendPropertyChanging();
					this._Count = value;
					this.SendPropertyChanged("Count");
					this.OnCountChanged();
				}
			}
		}
		
		[Column(Storage="_DaysSinceInitiallyDiscovered", DbType="SmallInt")]
		public System.Nullable<short> DaysSinceInitiallyDiscovered
		{
			get
			{
				return this._DaysSinceInitiallyDiscovered;
			}
			set
			{
				if ((this._DaysSinceInitiallyDiscovered != value))
				{
					this.OnDaysSinceInitiallyDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._DaysSinceInitiallyDiscovered = value;
					this.SendPropertyChanged("DaysSinceInitiallyDiscovered");
					this.OnDaysSinceInitiallyDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_DaysSinceLastDiscovered", DbType="SmallInt NOT NULL")]
		public short DaysSinceLastDiscovered
		{
			get
			{
				return this._DaysSinceLastDiscovered;
			}
			set
			{
				if ((this._DaysSinceLastDiscovered != value))
				{
					this.OnDaysSinceLastDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._DaysSinceLastDiscovered = value;
					this.SendPropertyChanged("DaysSinceLastDiscovered");
					this.OnDaysSinceLastDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_Strength", DbType="Float")]
		public System.Nullable<double> Strength
		{
			get
			{
				return this._Strength;
			}
			set
			{
				if ((this._Strength != value))
				{
					this.OnStrengthChanging(value);
					this.SendPropertyChanging();
					this._Strength = value;
					this.SendPropertyChanged("Strength");
					this.OnStrengthChanged();
				}
			}
		}
		
		[Column(Storage="_Rank", DbType="Int NOT NULL")]
		public int Rank
		{
			get
			{
				return this._Rank;
			}
			set
			{
				if ((this._Rank != value))
				{
					this.OnRankChanging(value);
					this.SendPropertyChanging();
					this._Rank = value;
					this.SendPropertyChanged("Rank");
					this.OnRankChanged();
				}
			}
		}
		
		[Column(Storage="_DenseRank", DbType="Int NOT NULL")]
		public int DenseRank
		{
			get
			{
				return this._DenseRank;
			}
			set
			{
				if ((this._DenseRank != value))
				{
					this.OnDenseRankChanging(value);
					this.SendPropertyChanging();
					this._DenseRank = value;
					this.SendPropertyChanged("DenseRank");
					this.OnDenseRankChanged();
				}
			}
		}
		
		[Column(Storage="_NTile", DbType="SmallInt NOT NULL")]
		public short NTile
		{
			get
			{
				return this._NTile;
			}
			set
			{
				if ((this._NTile != value))
				{
					this.OnNTileChanging(value);
					this.SendPropertyChanging();
					this._NTile = value;
					this.SendPropertyChanged("NTile");
					this.OnNTileChanged();
				}
			}
		}
		
		[Association(Name="Domain_HyperLinks_MOST_POPULAR_DOMAINS_BY_ABSOLUTEURI", Storage="_Domain", ThisKey="DomainID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Domain Domain
		{
			get
			{
				return this._Domain.Entity;
			}
			set
			{
				Domain previousValue = this._Domain.Entity;
				if (((previousValue != value) 
							|| (this._Domain.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Domain.Entity = null;
						previousValue.HyperLinks_MOST_POPULAR_DOMAINS_BY_ABSOLUTEURI = null;
					}
					this._Domain.Entity = value;
					if ((value != null))
					{
						value.HyperLinks_MOST_POPULAR_DOMAINS_BY_ABSOLUTEURI = this;
						this._DomainID = value.ID;
					}
					else
					{
						this._DomainID = default(int);
					}
					this.SendPropertyChanged("Domain");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="rpt.HyperLinks_MOST_POPULAR_DOMAINS_BY_DOMAINS")]
	public partial class HyperLinks_MOST_POPULAR_DOMAINS_BY_DOMAIN : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RowNumber;
		
		private System.Nullable<System.DateTime> _InitiallyDiscovered;
		
		private System.DateTime _LastDiscovered;
		
		private int _DomainID;
		
		private int _Count;
		
		private System.Nullable<short> _DaysSinceInitiallyDiscovered;
		
		private short _DaysSinceLastDiscovered;
		
		private System.Nullable<double> _Strength;
		
		private int _Rank;
		
		private int _DenseRank;
		
		private byte _NTile;
		
		private EntityRef<Domain> _Domain;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRowNumberChanging(int value);
    partial void OnRowNumberChanged();
    partial void OnInitiallyDiscoveredChanging(System.Nullable<System.DateTime> value);
    partial void OnInitiallyDiscoveredChanged();
    partial void OnLastDiscoveredChanging(System.DateTime value);
    partial void OnLastDiscoveredChanged();
    partial void OnDomainIDChanging(int value);
    partial void OnDomainIDChanged();
    partial void OnCountChanging(int value);
    partial void OnCountChanged();
    partial void OnDaysSinceInitiallyDiscoveredChanging(System.Nullable<short> value);
    partial void OnDaysSinceInitiallyDiscoveredChanged();
    partial void OnDaysSinceLastDiscoveredChanging(short value);
    partial void OnDaysSinceLastDiscoveredChanged();
    partial void OnStrengthChanging(System.Nullable<double> value);
    partial void OnStrengthChanged();
    partial void OnRankChanging(int value);
    partial void OnRankChanged();
    partial void OnDenseRankChanging(int value);
    partial void OnDenseRankChanged();
    partial void OnNTileChanging(byte value);
    partial void OnNTileChanged();
    #endregion
		
		public HyperLinks_MOST_POPULAR_DOMAINS_BY_DOMAIN()
		{
			this._Domain = default(EntityRef<Domain>);
			OnCreated();
		}
		
		[Column(Storage="_RowNumber", DbType="Int NOT NULL")]
		public int RowNumber
		{
			get
			{
				return this._RowNumber;
			}
			set
			{
				if ((this._RowNumber != value))
				{
					this.OnRowNumberChanging(value);
					this.SendPropertyChanging();
					this._RowNumber = value;
					this.SendPropertyChanged("RowNumber");
					this.OnRowNumberChanged();
				}
			}
		}
		
		[Column(Storage="_InitiallyDiscovered", DbType="DateTime")]
		public System.Nullable<System.DateTime> InitiallyDiscovered
		{
			get
			{
				return this._InitiallyDiscovered;
			}
			set
			{
				if ((this._InitiallyDiscovered != value))
				{
					this.OnInitiallyDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._InitiallyDiscovered = value;
					this.SendPropertyChanged("InitiallyDiscovered");
					this.OnInitiallyDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_LastDiscovered", DbType="DateTime NOT NULL")]
		public System.DateTime LastDiscovered
		{
			get
			{
				return this._LastDiscovered;
			}
			set
			{
				if ((this._LastDiscovered != value))
				{
					this.OnLastDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._LastDiscovered = value;
					this.SendPropertyChanged("LastDiscovered");
					this.OnLastDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_DomainID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int DomainID
		{
			get
			{
				return this._DomainID;
			}
			set
			{
				if ((this._DomainID != value))
				{
					if (this._Domain.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDomainIDChanging(value);
					this.SendPropertyChanging();
					this._DomainID = value;
					this.SendPropertyChanged("DomainID");
					this.OnDomainIDChanged();
				}
			}
		}
		
		[Column(Storage="_Count", DbType="Int NOT NULL")]
		public int Count
		{
			get
			{
				return this._Count;
			}
			set
			{
				if ((this._Count != value))
				{
					this.OnCountChanging(value);
					this.SendPropertyChanging();
					this._Count = value;
					this.SendPropertyChanged("Count");
					this.OnCountChanged();
				}
			}
		}
		
		[Column(Storage="_DaysSinceInitiallyDiscovered", DbType="SmallInt")]
		public System.Nullable<short> DaysSinceInitiallyDiscovered
		{
			get
			{
				return this._DaysSinceInitiallyDiscovered;
			}
			set
			{
				if ((this._DaysSinceInitiallyDiscovered != value))
				{
					this.OnDaysSinceInitiallyDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._DaysSinceInitiallyDiscovered = value;
					this.SendPropertyChanged("DaysSinceInitiallyDiscovered");
					this.OnDaysSinceInitiallyDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_DaysSinceLastDiscovered", DbType="SmallInt NOT NULL")]
		public short DaysSinceLastDiscovered
		{
			get
			{
				return this._DaysSinceLastDiscovered;
			}
			set
			{
				if ((this._DaysSinceLastDiscovered != value))
				{
					this.OnDaysSinceLastDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._DaysSinceLastDiscovered = value;
					this.SendPropertyChanged("DaysSinceLastDiscovered");
					this.OnDaysSinceLastDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_Strength", DbType="Float")]
		public System.Nullable<double> Strength
		{
			get
			{
				return this._Strength;
			}
			set
			{
				if ((this._Strength != value))
				{
					this.OnStrengthChanging(value);
					this.SendPropertyChanging();
					this._Strength = value;
					this.SendPropertyChanged("Strength");
					this.OnStrengthChanged();
				}
			}
		}
		
		[Column(Storage="_Rank", DbType="Int NOT NULL")]
		public int Rank
		{
			get
			{
				return this._Rank;
			}
			set
			{
				if ((this._Rank != value))
				{
					this.OnRankChanging(value);
					this.SendPropertyChanging();
					this._Rank = value;
					this.SendPropertyChanged("Rank");
					this.OnRankChanged();
				}
			}
		}
		
		[Column(Storage="_DenseRank", DbType="Int NOT NULL")]
		public int DenseRank
		{
			get
			{
				return this._DenseRank;
			}
			set
			{
				if ((this._DenseRank != value))
				{
					this.OnDenseRankChanging(value);
					this.SendPropertyChanging();
					this._DenseRank = value;
					this.SendPropertyChanged("DenseRank");
					this.OnDenseRankChanged();
				}
			}
		}
		
		[Column(Storage="_NTile", DbType="TinyInt NOT NULL")]
		public byte NTile
		{
			get
			{
				return this._NTile;
			}
			set
			{
				if ((this._NTile != value))
				{
					this.OnNTileChanging(value);
					this.SendPropertyChanging();
					this._NTile = value;
					this.SendPropertyChanged("NTile");
					this.OnNTileChanged();
				}
			}
		}
		
		[Association(Name="Domain_HyperLinks_MOST_POPULAR_DOMAINS_BY_DOMAIN", Storage="_Domain", ThisKey="DomainID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Domain Domain
		{
			get
			{
				return this._Domain.Entity;
			}
			set
			{
				Domain previousValue = this._Domain.Entity;
				if (((previousValue != value) 
							|| (this._Domain.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Domain.Entity = null;
						previousValue.HyperLinks_MOST_POPULAR_DOMAINS_BY_DOMAIN = null;
					}
					this._Domain.Entity = value;
					if ((value != null))
					{
						value.HyperLinks_MOST_POPULAR_DOMAINS_BY_DOMAIN = this;
						this._DomainID = value.ID;
					}
					else
					{
						this._DomainID = default(int);
					}
					this.SendPropertyChanged("Domain");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="rpt.HyperLinks_MOST_POPULAR_DOMAINS_BY_EXTENSIONS")]
	public partial class HyperLinks_MOST_POPULAR_DOMAINS_BY_EXTENSION : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RowNumber;
		
		private System.Nullable<System.DateTime> _InitiallyDiscovered;
		
		private System.DateTime _LastDiscovered;
		
		private int _DomainID;
		
		private int _Count;
		
		private System.Nullable<short> _DaysSinceInitiallyDiscovered;
		
		private short _DaysSinceLastDiscovered;
		
		private System.Nullable<double> _Strength;
		
		private int _Rank;
		
		private int _DenseRank;
		
		private byte _NTile;
		
		private EntityRef<Domain> _Domain;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRowNumberChanging(int value);
    partial void OnRowNumberChanged();
    partial void OnInitiallyDiscoveredChanging(System.Nullable<System.DateTime> value);
    partial void OnInitiallyDiscoveredChanged();
    partial void OnLastDiscoveredChanging(System.DateTime value);
    partial void OnLastDiscoveredChanged();
    partial void OnDomainIDChanging(int value);
    partial void OnDomainIDChanged();
    partial void OnCountChanging(int value);
    partial void OnCountChanged();
    partial void OnDaysSinceInitiallyDiscoveredChanging(System.Nullable<short> value);
    partial void OnDaysSinceInitiallyDiscoveredChanged();
    partial void OnDaysSinceLastDiscoveredChanging(short value);
    partial void OnDaysSinceLastDiscoveredChanged();
    partial void OnStrengthChanging(System.Nullable<double> value);
    partial void OnStrengthChanged();
    partial void OnRankChanging(int value);
    partial void OnRankChanged();
    partial void OnDenseRankChanging(int value);
    partial void OnDenseRankChanged();
    partial void OnNTileChanging(byte value);
    partial void OnNTileChanged();
    #endregion
		
		public HyperLinks_MOST_POPULAR_DOMAINS_BY_EXTENSION()
		{
			this._Domain = default(EntityRef<Domain>);
			OnCreated();
		}
		
		[Column(Storage="_RowNumber", DbType="Int NOT NULL")]
		public int RowNumber
		{
			get
			{
				return this._RowNumber;
			}
			set
			{
				if ((this._RowNumber != value))
				{
					this.OnRowNumberChanging(value);
					this.SendPropertyChanging();
					this._RowNumber = value;
					this.SendPropertyChanged("RowNumber");
					this.OnRowNumberChanged();
				}
			}
		}
		
		[Column(Storage="_InitiallyDiscovered", DbType="DateTime")]
		public System.Nullable<System.DateTime> InitiallyDiscovered
		{
			get
			{
				return this._InitiallyDiscovered;
			}
			set
			{
				if ((this._InitiallyDiscovered != value))
				{
					this.OnInitiallyDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._InitiallyDiscovered = value;
					this.SendPropertyChanged("InitiallyDiscovered");
					this.OnInitiallyDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_LastDiscovered", DbType="DateTime NOT NULL")]
		public System.DateTime LastDiscovered
		{
			get
			{
				return this._LastDiscovered;
			}
			set
			{
				if ((this._LastDiscovered != value))
				{
					this.OnLastDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._LastDiscovered = value;
					this.SendPropertyChanged("LastDiscovered");
					this.OnLastDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_DomainID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int DomainID
		{
			get
			{
				return this._DomainID;
			}
			set
			{
				if ((this._DomainID != value))
				{
					if (this._Domain.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDomainIDChanging(value);
					this.SendPropertyChanging();
					this._DomainID = value;
					this.SendPropertyChanged("DomainID");
					this.OnDomainIDChanged();
				}
			}
		}
		
		[Column(Storage="_Count", DbType="Int NOT NULL")]
		public int Count
		{
			get
			{
				return this._Count;
			}
			set
			{
				if ((this._Count != value))
				{
					this.OnCountChanging(value);
					this.SendPropertyChanging();
					this._Count = value;
					this.SendPropertyChanged("Count");
					this.OnCountChanged();
				}
			}
		}
		
		[Column(Storage="_DaysSinceInitiallyDiscovered", DbType="SmallInt")]
		public System.Nullable<short> DaysSinceInitiallyDiscovered
		{
			get
			{
				return this._DaysSinceInitiallyDiscovered;
			}
			set
			{
				if ((this._DaysSinceInitiallyDiscovered != value))
				{
					this.OnDaysSinceInitiallyDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._DaysSinceInitiallyDiscovered = value;
					this.SendPropertyChanged("DaysSinceInitiallyDiscovered");
					this.OnDaysSinceInitiallyDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_DaysSinceLastDiscovered", DbType="SmallInt NOT NULL")]
		public short DaysSinceLastDiscovered
		{
			get
			{
				return this._DaysSinceLastDiscovered;
			}
			set
			{
				if ((this._DaysSinceLastDiscovered != value))
				{
					this.OnDaysSinceLastDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._DaysSinceLastDiscovered = value;
					this.SendPropertyChanged("DaysSinceLastDiscovered");
					this.OnDaysSinceLastDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_Strength", DbType="Float")]
		public System.Nullable<double> Strength
		{
			get
			{
				return this._Strength;
			}
			set
			{
				if ((this._Strength != value))
				{
					this.OnStrengthChanging(value);
					this.SendPropertyChanging();
					this._Strength = value;
					this.SendPropertyChanged("Strength");
					this.OnStrengthChanged();
				}
			}
		}
		
		[Column(Storage="_Rank", DbType="Int NOT NULL")]
		public int Rank
		{
			get
			{
				return this._Rank;
			}
			set
			{
				if ((this._Rank != value))
				{
					this.OnRankChanging(value);
					this.SendPropertyChanging();
					this._Rank = value;
					this.SendPropertyChanged("Rank");
					this.OnRankChanged();
				}
			}
		}
		
		[Column(Storage="_DenseRank", DbType="Int NOT NULL")]
		public int DenseRank
		{
			get
			{
				return this._DenseRank;
			}
			set
			{
				if ((this._DenseRank != value))
				{
					this.OnDenseRankChanging(value);
					this.SendPropertyChanging();
					this._DenseRank = value;
					this.SendPropertyChanged("DenseRank");
					this.OnDenseRankChanged();
				}
			}
		}
		
		[Column(Storage="_NTile", DbType="TinyInt NOT NULL")]
		public byte NTile
		{
			get
			{
				return this._NTile;
			}
			set
			{
				if ((this._NTile != value))
				{
					this.OnNTileChanging(value);
					this.SendPropertyChanging();
					this._NTile = value;
					this.SendPropertyChanged("NTile");
					this.OnNTileChanged();
				}
			}
		}
		
		[Association(Name="Domain_HyperLinks_MOST_POPULAR_DOMAINS_BY_EXTENSION", Storage="_Domain", ThisKey="DomainID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Domain Domain
		{
			get
			{
				return this._Domain.Entity;
			}
			set
			{
				Domain previousValue = this._Domain.Entity;
				if (((previousValue != value) 
							|| (this._Domain.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Domain.Entity = null;
						previousValue.HyperLinks_MOST_POPULAR_DOMAINS_BY_EXTENSION = null;
					}
					this._Domain.Entity = value;
					if ((value != null))
					{
						value.HyperLinks_MOST_POPULAR_DOMAINS_BY_EXTENSION = this;
						this._DomainID = value.ID;
					}
					else
					{
						this._DomainID = default(int);
					}
					this.SendPropertyChanged("Domain");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="rpt.HyperLinks_MOST_POPULAR_DOMAINS_BY_HOSTS")]
	public partial class HyperLinks_MOST_POPULAR_DOMAINS_BY_HOST : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RowNumber;
		
		private System.Nullable<System.DateTime> _InitiallyDiscovered;
		
		private System.DateTime _LastDiscovered;
		
		private int _DomainID;
		
		private int _Count;
		
		private System.Nullable<short> _DaysSinceInitiallyDiscovered;
		
		private short _DaysSinceLastDiscovered;
		
		private System.Nullable<double> _Strength;
		
		private int _Rank;
		
		private int _DenseRank;
		
		private byte _NTile;
		
		private EntityRef<Domain> _Domain;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRowNumberChanging(int value);
    partial void OnRowNumberChanged();
    partial void OnInitiallyDiscoveredChanging(System.Nullable<System.DateTime> value);
    partial void OnInitiallyDiscoveredChanged();
    partial void OnLastDiscoveredChanging(System.DateTime value);
    partial void OnLastDiscoveredChanged();
    partial void OnDomainIDChanging(int value);
    partial void OnDomainIDChanged();
    partial void OnCountChanging(int value);
    partial void OnCountChanged();
    partial void OnDaysSinceInitiallyDiscoveredChanging(System.Nullable<short> value);
    partial void OnDaysSinceInitiallyDiscoveredChanged();
    partial void OnDaysSinceLastDiscoveredChanging(short value);
    partial void OnDaysSinceLastDiscoveredChanged();
    partial void OnStrengthChanging(System.Nullable<double> value);
    partial void OnStrengthChanged();
    partial void OnRankChanging(int value);
    partial void OnRankChanged();
    partial void OnDenseRankChanging(int value);
    partial void OnDenseRankChanged();
    partial void OnNTileChanging(byte value);
    partial void OnNTileChanged();
    #endregion
		
		public HyperLinks_MOST_POPULAR_DOMAINS_BY_HOST()
		{
			this._Domain = default(EntityRef<Domain>);
			OnCreated();
		}
		
		[Column(Storage="_RowNumber", DbType="Int NOT NULL")]
		public int RowNumber
		{
			get
			{
				return this._RowNumber;
			}
			set
			{
				if ((this._RowNumber != value))
				{
					this.OnRowNumberChanging(value);
					this.SendPropertyChanging();
					this._RowNumber = value;
					this.SendPropertyChanged("RowNumber");
					this.OnRowNumberChanged();
				}
			}
		}
		
		[Column(Storage="_InitiallyDiscovered", DbType="DateTime")]
		public System.Nullable<System.DateTime> InitiallyDiscovered
		{
			get
			{
				return this._InitiallyDiscovered;
			}
			set
			{
				if ((this._InitiallyDiscovered != value))
				{
					this.OnInitiallyDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._InitiallyDiscovered = value;
					this.SendPropertyChanged("InitiallyDiscovered");
					this.OnInitiallyDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_LastDiscovered", DbType="DateTime NOT NULL")]
		public System.DateTime LastDiscovered
		{
			get
			{
				return this._LastDiscovered;
			}
			set
			{
				if ((this._LastDiscovered != value))
				{
					this.OnLastDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._LastDiscovered = value;
					this.SendPropertyChanged("LastDiscovered");
					this.OnLastDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_DomainID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int DomainID
		{
			get
			{
				return this._DomainID;
			}
			set
			{
				if ((this._DomainID != value))
				{
					if (this._Domain.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDomainIDChanging(value);
					this.SendPropertyChanging();
					this._DomainID = value;
					this.SendPropertyChanged("DomainID");
					this.OnDomainIDChanged();
				}
			}
		}
		
		[Column(Storage="_Count", DbType="Int NOT NULL")]
		public int Count
		{
			get
			{
				return this._Count;
			}
			set
			{
				if ((this._Count != value))
				{
					this.OnCountChanging(value);
					this.SendPropertyChanging();
					this._Count = value;
					this.SendPropertyChanged("Count");
					this.OnCountChanged();
				}
			}
		}
		
		[Column(Storage="_DaysSinceInitiallyDiscovered", DbType="SmallInt")]
		public System.Nullable<short> DaysSinceInitiallyDiscovered
		{
			get
			{
				return this._DaysSinceInitiallyDiscovered;
			}
			set
			{
				if ((this._DaysSinceInitiallyDiscovered != value))
				{
					this.OnDaysSinceInitiallyDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._DaysSinceInitiallyDiscovered = value;
					this.SendPropertyChanged("DaysSinceInitiallyDiscovered");
					this.OnDaysSinceInitiallyDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_DaysSinceLastDiscovered", DbType="SmallInt NOT NULL")]
		public short DaysSinceLastDiscovered
		{
			get
			{
				return this._DaysSinceLastDiscovered;
			}
			set
			{
				if ((this._DaysSinceLastDiscovered != value))
				{
					this.OnDaysSinceLastDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._DaysSinceLastDiscovered = value;
					this.SendPropertyChanged("DaysSinceLastDiscovered");
					this.OnDaysSinceLastDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_Strength", DbType="Float")]
		public System.Nullable<double> Strength
		{
			get
			{
				return this._Strength;
			}
			set
			{
				if ((this._Strength != value))
				{
					this.OnStrengthChanging(value);
					this.SendPropertyChanging();
					this._Strength = value;
					this.SendPropertyChanged("Strength");
					this.OnStrengthChanged();
				}
			}
		}
		
		[Column(Storage="_Rank", DbType="Int NOT NULL")]
		public int Rank
		{
			get
			{
				return this._Rank;
			}
			set
			{
				if ((this._Rank != value))
				{
					this.OnRankChanging(value);
					this.SendPropertyChanging();
					this._Rank = value;
					this.SendPropertyChanged("Rank");
					this.OnRankChanged();
				}
			}
		}
		
		[Column(Storage="_DenseRank", DbType="Int NOT NULL")]
		public int DenseRank
		{
			get
			{
				return this._DenseRank;
			}
			set
			{
				if ((this._DenseRank != value))
				{
					this.OnDenseRankChanging(value);
					this.SendPropertyChanging();
					this._DenseRank = value;
					this.SendPropertyChanged("DenseRank");
					this.OnDenseRankChanged();
				}
			}
		}
		
		[Column(Storage="_NTile", DbType="TinyInt NOT NULL")]
		public byte NTile
		{
			get
			{
				return this._NTile;
			}
			set
			{
				if ((this._NTile != value))
				{
					this.OnNTileChanging(value);
					this.SendPropertyChanging();
					this._NTile = value;
					this.SendPropertyChanged("NTile");
					this.OnNTileChanged();
				}
			}
		}
		
		[Association(Name="Domain_HyperLinks_MOST_POPULAR_DOMAINS_BY_HOST", Storage="_Domain", ThisKey="DomainID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Domain Domain
		{
			get
			{
				return this._Domain.Entity;
			}
			set
			{
				Domain previousValue = this._Domain.Entity;
				if (((previousValue != value) 
							|| (this._Domain.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Domain.Entity = null;
						previousValue.HyperLinks_MOST_POPULAR_DOMAINS_BY_HOST = null;
					}
					this._Domain.Entity = value;
					if ((value != null))
					{
						value.HyperLinks_MOST_POPULAR_DOMAINS_BY_HOST = this;
						this._DomainID = value.ID;
					}
					else
					{
						this._DomainID = default(int);
					}
					this.SendPropertyChanged("Domain");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="rpt.HyperLinks_MOST_POPULAR_DOMAINS_BY_SCHEMES")]
	public partial class HyperLinks_MOST_POPULAR_DOMAINS_BY_SCHEME : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RowNumber;
		
		private System.Nullable<System.DateTime> _InitiallyDiscovered;
		
		private System.DateTime _LastDiscovered;
		
		private int _DomainID;
		
		private int _Count;
		
		private System.Nullable<short> _DaysSinceInitiallyDiscovered;
		
		private short _DaysSinceLastDiscovered;
		
		private System.Nullable<double> _Strength;
		
		private int _Rank;
		
		private int _DenseRank;
		
		private byte _NTile;
		
		private EntityRef<Domain> _Domain;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRowNumberChanging(int value);
    partial void OnRowNumberChanged();
    partial void OnInitiallyDiscoveredChanging(System.Nullable<System.DateTime> value);
    partial void OnInitiallyDiscoveredChanged();
    partial void OnLastDiscoveredChanging(System.DateTime value);
    partial void OnLastDiscoveredChanged();
    partial void OnDomainIDChanging(int value);
    partial void OnDomainIDChanged();
    partial void OnCountChanging(int value);
    partial void OnCountChanged();
    partial void OnDaysSinceInitiallyDiscoveredChanging(System.Nullable<short> value);
    partial void OnDaysSinceInitiallyDiscoveredChanged();
    partial void OnDaysSinceLastDiscoveredChanging(short value);
    partial void OnDaysSinceLastDiscoveredChanged();
    partial void OnStrengthChanging(System.Nullable<double> value);
    partial void OnStrengthChanged();
    partial void OnRankChanging(int value);
    partial void OnRankChanged();
    partial void OnDenseRankChanging(int value);
    partial void OnDenseRankChanged();
    partial void OnNTileChanging(byte value);
    partial void OnNTileChanged();
    #endregion
		
		public HyperLinks_MOST_POPULAR_DOMAINS_BY_SCHEME()
		{
			this._Domain = default(EntityRef<Domain>);
			OnCreated();
		}
		
		[Column(Storage="_RowNumber", DbType="Int NOT NULL")]
		public int RowNumber
		{
			get
			{
				return this._RowNumber;
			}
			set
			{
				if ((this._RowNumber != value))
				{
					this.OnRowNumberChanging(value);
					this.SendPropertyChanging();
					this._RowNumber = value;
					this.SendPropertyChanged("RowNumber");
					this.OnRowNumberChanged();
				}
			}
		}
		
		[Column(Storage="_InitiallyDiscovered", DbType="DateTime")]
		public System.Nullable<System.DateTime> InitiallyDiscovered
		{
			get
			{
				return this._InitiallyDiscovered;
			}
			set
			{
				if ((this._InitiallyDiscovered != value))
				{
					this.OnInitiallyDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._InitiallyDiscovered = value;
					this.SendPropertyChanged("InitiallyDiscovered");
					this.OnInitiallyDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_LastDiscovered", DbType="DateTime NOT NULL")]
		public System.DateTime LastDiscovered
		{
			get
			{
				return this._LastDiscovered;
			}
			set
			{
				if ((this._LastDiscovered != value))
				{
					this.OnLastDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._LastDiscovered = value;
					this.SendPropertyChanged("LastDiscovered");
					this.OnLastDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_DomainID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int DomainID
		{
			get
			{
				return this._DomainID;
			}
			set
			{
				if ((this._DomainID != value))
				{
					if (this._Domain.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDomainIDChanging(value);
					this.SendPropertyChanging();
					this._DomainID = value;
					this.SendPropertyChanged("DomainID");
					this.OnDomainIDChanged();
				}
			}
		}
		
		[Column(Storage="_Count", DbType="Int NOT NULL")]
		public int Count
		{
			get
			{
				return this._Count;
			}
			set
			{
				if ((this._Count != value))
				{
					this.OnCountChanging(value);
					this.SendPropertyChanging();
					this._Count = value;
					this.SendPropertyChanged("Count");
					this.OnCountChanged();
				}
			}
		}
		
		[Column(Storage="_DaysSinceInitiallyDiscovered", DbType="SmallInt")]
		public System.Nullable<short> DaysSinceInitiallyDiscovered
		{
			get
			{
				return this._DaysSinceInitiallyDiscovered;
			}
			set
			{
				if ((this._DaysSinceInitiallyDiscovered != value))
				{
					this.OnDaysSinceInitiallyDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._DaysSinceInitiallyDiscovered = value;
					this.SendPropertyChanged("DaysSinceInitiallyDiscovered");
					this.OnDaysSinceInitiallyDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_DaysSinceLastDiscovered", DbType="SmallInt NOT NULL")]
		public short DaysSinceLastDiscovered
		{
			get
			{
				return this._DaysSinceLastDiscovered;
			}
			set
			{
				if ((this._DaysSinceLastDiscovered != value))
				{
					this.OnDaysSinceLastDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._DaysSinceLastDiscovered = value;
					this.SendPropertyChanged("DaysSinceLastDiscovered");
					this.OnDaysSinceLastDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_Strength", DbType="Float")]
		public System.Nullable<double> Strength
		{
			get
			{
				return this._Strength;
			}
			set
			{
				if ((this._Strength != value))
				{
					this.OnStrengthChanging(value);
					this.SendPropertyChanging();
					this._Strength = value;
					this.SendPropertyChanged("Strength");
					this.OnStrengthChanged();
				}
			}
		}
		
		[Column(Storage="_Rank", DbType="Int NOT NULL")]
		public int Rank
		{
			get
			{
				return this._Rank;
			}
			set
			{
				if ((this._Rank != value))
				{
					this.OnRankChanging(value);
					this.SendPropertyChanging();
					this._Rank = value;
					this.SendPropertyChanged("Rank");
					this.OnRankChanged();
				}
			}
		}
		
		[Column(Storage="_DenseRank", DbType="Int NOT NULL")]
		public int DenseRank
		{
			get
			{
				return this._DenseRank;
			}
			set
			{
				if ((this._DenseRank != value))
				{
					this.OnDenseRankChanging(value);
					this.SendPropertyChanging();
					this._DenseRank = value;
					this.SendPropertyChanged("DenseRank");
					this.OnDenseRankChanged();
				}
			}
		}
		
		[Column(Storage="_NTile", DbType="TinyInt NOT NULL")]
		public byte NTile
		{
			get
			{
				return this._NTile;
			}
			set
			{
				if ((this._NTile != value))
				{
					this.OnNTileChanging(value);
					this.SendPropertyChanging();
					this._NTile = value;
					this.SendPropertyChanged("NTile");
					this.OnNTileChanged();
				}
			}
		}
		
		[Association(Name="Domain_HyperLinks_MOST_POPULAR_DOMAINS_BY_SCHEME", Storage="_Domain", ThisKey="DomainID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Domain Domain
		{
			get
			{
				return this._Domain.Entity;
			}
			set
			{
				Domain previousValue = this._Domain.Entity;
				if (((previousValue != value) 
							|| (this._Domain.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Domain.Entity = null;
						previousValue.HyperLinks_MOST_POPULAR_DOMAINS_BY_SCHEME = null;
					}
					this._Domain.Entity = value;
					if ((value != null))
					{
						value.HyperLinks_MOST_POPULAR_DOMAINS_BY_SCHEME = this;
						this._DomainID = value.ID;
					}
					else
					{
						this._DomainID = default(int);
					}
					this.SendPropertyChanged("Domain");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="rpt.HyperLinks_MOST_POPULAR_EXTENSIONS_BY_ABSOLUTEURIS")]
	public partial class HyperLinks_MOST_POPULAR_EXTENSIONS_BY_ABSOLUTEURI : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RowNumber;
		
		private System.Nullable<System.DateTime> _InitiallyDiscovered;
		
		private System.DateTime _LastDiscovered;
		
		private int _ExtensionID;
		
		private int _Count;
		
		private System.Nullable<short> _DaysSinceInitiallyDiscovered;
		
		private short _DaysSinceLastDiscovered;
		
		private System.Nullable<double> _Strength;
		
		private int _Rank;
		
		private int _DenseRank;
		
		private byte _NTile;
		
		private EntityRef<Extension> _Extension;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRowNumberChanging(int value);
    partial void OnRowNumberChanged();
    partial void OnInitiallyDiscoveredChanging(System.Nullable<System.DateTime> value);
    partial void OnInitiallyDiscoveredChanged();
    partial void OnLastDiscoveredChanging(System.DateTime value);
    partial void OnLastDiscoveredChanged();
    partial void OnExtensionIDChanging(int value);
    partial void OnExtensionIDChanged();
    partial void OnCountChanging(int value);
    partial void OnCountChanged();
    partial void OnDaysSinceInitiallyDiscoveredChanging(System.Nullable<short> value);
    partial void OnDaysSinceInitiallyDiscoveredChanged();
    partial void OnDaysSinceLastDiscoveredChanging(short value);
    partial void OnDaysSinceLastDiscoveredChanged();
    partial void OnStrengthChanging(System.Nullable<double> value);
    partial void OnStrengthChanged();
    partial void OnRankChanging(int value);
    partial void OnRankChanged();
    partial void OnDenseRankChanging(int value);
    partial void OnDenseRankChanged();
    partial void OnNTileChanging(byte value);
    partial void OnNTileChanged();
    #endregion
		
		public HyperLinks_MOST_POPULAR_EXTENSIONS_BY_ABSOLUTEURI()
		{
			this._Extension = default(EntityRef<Extension>);
			OnCreated();
		}
		
		[Column(Storage="_RowNumber", DbType="Int NOT NULL")]
		public int RowNumber
		{
			get
			{
				return this._RowNumber;
			}
			set
			{
				if ((this._RowNumber != value))
				{
					this.OnRowNumberChanging(value);
					this.SendPropertyChanging();
					this._RowNumber = value;
					this.SendPropertyChanged("RowNumber");
					this.OnRowNumberChanged();
				}
			}
		}
		
		[Column(Storage="_InitiallyDiscovered", DbType="DateTime")]
		public System.Nullable<System.DateTime> InitiallyDiscovered
		{
			get
			{
				return this._InitiallyDiscovered;
			}
			set
			{
				if ((this._InitiallyDiscovered != value))
				{
					this.OnInitiallyDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._InitiallyDiscovered = value;
					this.SendPropertyChanged("InitiallyDiscovered");
					this.OnInitiallyDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_LastDiscovered", DbType="DateTime NOT NULL")]
		public System.DateTime LastDiscovered
		{
			get
			{
				return this._LastDiscovered;
			}
			set
			{
				if ((this._LastDiscovered != value))
				{
					this.OnLastDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._LastDiscovered = value;
					this.SendPropertyChanged("LastDiscovered");
					this.OnLastDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_ExtensionID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ExtensionID
		{
			get
			{
				return this._ExtensionID;
			}
			set
			{
				if ((this._ExtensionID != value))
				{
					if (this._Extension.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnExtensionIDChanging(value);
					this.SendPropertyChanging();
					this._ExtensionID = value;
					this.SendPropertyChanged("ExtensionID");
					this.OnExtensionIDChanged();
				}
			}
		}
		
		[Column(Storage="_Count", DbType="Int NOT NULL")]
		public int Count
		{
			get
			{
				return this._Count;
			}
			set
			{
				if ((this._Count != value))
				{
					this.OnCountChanging(value);
					this.SendPropertyChanging();
					this._Count = value;
					this.SendPropertyChanged("Count");
					this.OnCountChanged();
				}
			}
		}
		
		[Column(Storage="_DaysSinceInitiallyDiscovered", DbType="SmallInt")]
		public System.Nullable<short> DaysSinceInitiallyDiscovered
		{
			get
			{
				return this._DaysSinceInitiallyDiscovered;
			}
			set
			{
				if ((this._DaysSinceInitiallyDiscovered != value))
				{
					this.OnDaysSinceInitiallyDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._DaysSinceInitiallyDiscovered = value;
					this.SendPropertyChanged("DaysSinceInitiallyDiscovered");
					this.OnDaysSinceInitiallyDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_DaysSinceLastDiscovered", DbType="SmallInt NOT NULL")]
		public short DaysSinceLastDiscovered
		{
			get
			{
				return this._DaysSinceLastDiscovered;
			}
			set
			{
				if ((this._DaysSinceLastDiscovered != value))
				{
					this.OnDaysSinceLastDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._DaysSinceLastDiscovered = value;
					this.SendPropertyChanged("DaysSinceLastDiscovered");
					this.OnDaysSinceLastDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_Strength", DbType="Float")]
		public System.Nullable<double> Strength
		{
			get
			{
				return this._Strength;
			}
			set
			{
				if ((this._Strength != value))
				{
					this.OnStrengthChanging(value);
					this.SendPropertyChanging();
					this._Strength = value;
					this.SendPropertyChanged("Strength");
					this.OnStrengthChanged();
				}
			}
		}
		
		[Column(Storage="_Rank", DbType="Int NOT NULL")]
		public int Rank
		{
			get
			{
				return this._Rank;
			}
			set
			{
				if ((this._Rank != value))
				{
					this.OnRankChanging(value);
					this.SendPropertyChanging();
					this._Rank = value;
					this.SendPropertyChanged("Rank");
					this.OnRankChanged();
				}
			}
		}
		
		[Column(Storage="_DenseRank", DbType="Int NOT NULL")]
		public int DenseRank
		{
			get
			{
				return this._DenseRank;
			}
			set
			{
				if ((this._DenseRank != value))
				{
					this.OnDenseRankChanging(value);
					this.SendPropertyChanging();
					this._DenseRank = value;
					this.SendPropertyChanged("DenseRank");
					this.OnDenseRankChanged();
				}
			}
		}
		
		[Column(Storage="_NTile", DbType="TinyInt NOT NULL")]
		public byte NTile
		{
			get
			{
				return this._NTile;
			}
			set
			{
				if ((this._NTile != value))
				{
					this.OnNTileChanging(value);
					this.SendPropertyChanging();
					this._NTile = value;
					this.SendPropertyChanged("NTile");
					this.OnNTileChanged();
				}
			}
		}
		
		[Association(Name="Extension_HyperLinks_MOST_POPULAR_EXTENSIONS_BY_ABSOLUTEURI", Storage="_Extension", ThisKey="ExtensionID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Extension Extension
		{
			get
			{
				return this._Extension.Entity;
			}
			set
			{
				Extension previousValue = this._Extension.Entity;
				if (((previousValue != value) 
							|| (this._Extension.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Extension.Entity = null;
						previousValue.HyperLinks_MOST_POPULAR_EXTENSIONS_BY_ABSOLUTEURI = null;
					}
					this._Extension.Entity = value;
					if ((value != null))
					{
						value.HyperLinks_MOST_POPULAR_EXTENSIONS_BY_ABSOLUTEURI = this;
						this._ExtensionID = value.ID;
					}
					else
					{
						this._ExtensionID = default(int);
					}
					this.SendPropertyChanged("Extension");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="rpt.HyperLinks_MOST_POPULAR_EXTENSIONS_BY_DOMAINS")]
	public partial class HyperLinks_MOST_POPULAR_EXTENSIONS_BY_DOMAIN : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RowNumber;
		
		private System.Nullable<System.DateTime> _InitiallyDiscovered;
		
		private System.DateTime _LastDiscovered;
		
		private int _ExtensionID;
		
		private int _Count;
		
		private System.Nullable<short> _DaysSinceInitiallyDiscovered;
		
		private short _DaysSinceLastDiscovered;
		
		private System.Nullable<double> _Strength;
		
		private int _Rank;
		
		private int _DenseRank;
		
		private byte _NTile;
		
		private EntityRef<Extension> _Extension;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRowNumberChanging(int value);
    partial void OnRowNumberChanged();
    partial void OnInitiallyDiscoveredChanging(System.Nullable<System.DateTime> value);
    partial void OnInitiallyDiscoveredChanged();
    partial void OnLastDiscoveredChanging(System.DateTime value);
    partial void OnLastDiscoveredChanged();
    partial void OnExtensionIDChanging(int value);
    partial void OnExtensionIDChanged();
    partial void OnCountChanging(int value);
    partial void OnCountChanged();
    partial void OnDaysSinceInitiallyDiscoveredChanging(System.Nullable<short> value);
    partial void OnDaysSinceInitiallyDiscoveredChanged();
    partial void OnDaysSinceLastDiscoveredChanging(short value);
    partial void OnDaysSinceLastDiscoveredChanged();
    partial void OnStrengthChanging(System.Nullable<double> value);
    partial void OnStrengthChanged();
    partial void OnRankChanging(int value);
    partial void OnRankChanged();
    partial void OnDenseRankChanging(int value);
    partial void OnDenseRankChanged();
    partial void OnNTileChanging(byte value);
    partial void OnNTileChanged();
    #endregion
		
		public HyperLinks_MOST_POPULAR_EXTENSIONS_BY_DOMAIN()
		{
			this._Extension = default(EntityRef<Extension>);
			OnCreated();
		}
		
		[Column(Storage="_RowNumber", DbType="Int NOT NULL")]
		public int RowNumber
		{
			get
			{
				return this._RowNumber;
			}
			set
			{
				if ((this._RowNumber != value))
				{
					this.OnRowNumberChanging(value);
					this.SendPropertyChanging();
					this._RowNumber = value;
					this.SendPropertyChanged("RowNumber");
					this.OnRowNumberChanged();
				}
			}
		}
		
		[Column(Storage="_InitiallyDiscovered", DbType="DateTime")]
		public System.Nullable<System.DateTime> InitiallyDiscovered
		{
			get
			{
				return this._InitiallyDiscovered;
			}
			set
			{
				if ((this._InitiallyDiscovered != value))
				{
					this.OnInitiallyDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._InitiallyDiscovered = value;
					this.SendPropertyChanged("InitiallyDiscovered");
					this.OnInitiallyDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_LastDiscovered", DbType="DateTime NOT NULL")]
		public System.DateTime LastDiscovered
		{
			get
			{
				return this._LastDiscovered;
			}
			set
			{
				if ((this._LastDiscovered != value))
				{
					this.OnLastDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._LastDiscovered = value;
					this.SendPropertyChanged("LastDiscovered");
					this.OnLastDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_ExtensionID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ExtensionID
		{
			get
			{
				return this._ExtensionID;
			}
			set
			{
				if ((this._ExtensionID != value))
				{
					if (this._Extension.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnExtensionIDChanging(value);
					this.SendPropertyChanging();
					this._ExtensionID = value;
					this.SendPropertyChanged("ExtensionID");
					this.OnExtensionIDChanged();
				}
			}
		}
		
		[Column(Storage="_Count", DbType="Int NOT NULL")]
		public int Count
		{
			get
			{
				return this._Count;
			}
			set
			{
				if ((this._Count != value))
				{
					this.OnCountChanging(value);
					this.SendPropertyChanging();
					this._Count = value;
					this.SendPropertyChanged("Count");
					this.OnCountChanged();
				}
			}
		}
		
		[Column(Storage="_DaysSinceInitiallyDiscovered", DbType="SmallInt")]
		public System.Nullable<short> DaysSinceInitiallyDiscovered
		{
			get
			{
				return this._DaysSinceInitiallyDiscovered;
			}
			set
			{
				if ((this._DaysSinceInitiallyDiscovered != value))
				{
					this.OnDaysSinceInitiallyDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._DaysSinceInitiallyDiscovered = value;
					this.SendPropertyChanged("DaysSinceInitiallyDiscovered");
					this.OnDaysSinceInitiallyDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_DaysSinceLastDiscovered", DbType="SmallInt NOT NULL")]
		public short DaysSinceLastDiscovered
		{
			get
			{
				return this._DaysSinceLastDiscovered;
			}
			set
			{
				if ((this._DaysSinceLastDiscovered != value))
				{
					this.OnDaysSinceLastDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._DaysSinceLastDiscovered = value;
					this.SendPropertyChanged("DaysSinceLastDiscovered");
					this.OnDaysSinceLastDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_Strength", DbType="Float")]
		public System.Nullable<double> Strength
		{
			get
			{
				return this._Strength;
			}
			set
			{
				if ((this._Strength != value))
				{
					this.OnStrengthChanging(value);
					this.SendPropertyChanging();
					this._Strength = value;
					this.SendPropertyChanged("Strength");
					this.OnStrengthChanged();
				}
			}
		}
		
		[Column(Storage="_Rank", DbType="Int NOT NULL")]
		public int Rank
		{
			get
			{
				return this._Rank;
			}
			set
			{
				if ((this._Rank != value))
				{
					this.OnRankChanging(value);
					this.SendPropertyChanging();
					this._Rank = value;
					this.SendPropertyChanged("Rank");
					this.OnRankChanged();
				}
			}
		}
		
		[Column(Storage="_DenseRank", DbType="Int NOT NULL")]
		public int DenseRank
		{
			get
			{
				return this._DenseRank;
			}
			set
			{
				if ((this._DenseRank != value))
				{
					this.OnDenseRankChanging(value);
					this.SendPropertyChanging();
					this._DenseRank = value;
					this.SendPropertyChanged("DenseRank");
					this.OnDenseRankChanged();
				}
			}
		}
		
		[Column(Storage="_NTile", DbType="TinyInt NOT NULL")]
		public byte NTile
		{
			get
			{
				return this._NTile;
			}
			set
			{
				if ((this._NTile != value))
				{
					this.OnNTileChanging(value);
					this.SendPropertyChanging();
					this._NTile = value;
					this.SendPropertyChanged("NTile");
					this.OnNTileChanged();
				}
			}
		}
		
		[Association(Name="Extension_HyperLinks_MOST_POPULAR_EXTENSIONS_BY_DOMAIN", Storage="_Extension", ThisKey="ExtensionID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Extension Extension
		{
			get
			{
				return this._Extension.Entity;
			}
			set
			{
				Extension previousValue = this._Extension.Entity;
				if (((previousValue != value) 
							|| (this._Extension.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Extension.Entity = null;
						previousValue.HyperLinks_MOST_POPULAR_EXTENSIONS_BY_DOMAIN = null;
					}
					this._Extension.Entity = value;
					if ((value != null))
					{
						value.HyperLinks_MOST_POPULAR_EXTENSIONS_BY_DOMAIN = this;
						this._ExtensionID = value.ID;
					}
					else
					{
						this._ExtensionID = default(int);
					}
					this.SendPropertyChanged("Extension");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="rpt.HyperLinks_MOST_POPULAR_EXTENSIONS_BY_EXTENSIONS")]
	public partial class HyperLinks_MOST_POPULAR_EXTENSIONS_BY_EXTENSION : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RowNumber;
		
		private System.Nullable<System.DateTime> _InitiallyDiscovered;
		
		private System.DateTime _LastDiscovered;
		
		private int _ExtensionID;
		
		private int _Count;
		
		private System.Nullable<short> _DaysSinceInitiallyDiscovered;
		
		private short _DaysSinceLastDiscovered;
		
		private System.Nullable<double> _Strength;
		
		private int _Rank;
		
		private int _DenseRank;
		
		private byte _NTile;
		
		private EntityRef<Extension> _Extension;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRowNumberChanging(int value);
    partial void OnRowNumberChanged();
    partial void OnInitiallyDiscoveredChanging(System.Nullable<System.DateTime> value);
    partial void OnInitiallyDiscoveredChanged();
    partial void OnLastDiscoveredChanging(System.DateTime value);
    partial void OnLastDiscoveredChanged();
    partial void OnExtensionIDChanging(int value);
    partial void OnExtensionIDChanged();
    partial void OnCountChanging(int value);
    partial void OnCountChanged();
    partial void OnDaysSinceInitiallyDiscoveredChanging(System.Nullable<short> value);
    partial void OnDaysSinceInitiallyDiscoveredChanged();
    partial void OnDaysSinceLastDiscoveredChanging(short value);
    partial void OnDaysSinceLastDiscoveredChanged();
    partial void OnStrengthChanging(System.Nullable<double> value);
    partial void OnStrengthChanged();
    partial void OnRankChanging(int value);
    partial void OnRankChanged();
    partial void OnDenseRankChanging(int value);
    partial void OnDenseRankChanged();
    partial void OnNTileChanging(byte value);
    partial void OnNTileChanged();
    #endregion
		
		public HyperLinks_MOST_POPULAR_EXTENSIONS_BY_EXTENSION()
		{
			this._Extension = default(EntityRef<Extension>);
			OnCreated();
		}
		
		[Column(Storage="_RowNumber", DbType="Int NOT NULL")]
		public int RowNumber
		{
			get
			{
				return this._RowNumber;
			}
			set
			{
				if ((this._RowNumber != value))
				{
					this.OnRowNumberChanging(value);
					this.SendPropertyChanging();
					this._RowNumber = value;
					this.SendPropertyChanged("RowNumber");
					this.OnRowNumberChanged();
				}
			}
		}
		
		[Column(Storage="_InitiallyDiscovered", DbType="DateTime")]
		public System.Nullable<System.DateTime> InitiallyDiscovered
		{
			get
			{
				return this._InitiallyDiscovered;
			}
			set
			{
				if ((this._InitiallyDiscovered != value))
				{
					this.OnInitiallyDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._InitiallyDiscovered = value;
					this.SendPropertyChanged("InitiallyDiscovered");
					this.OnInitiallyDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_LastDiscovered", DbType="DateTime NOT NULL")]
		public System.DateTime LastDiscovered
		{
			get
			{
				return this._LastDiscovered;
			}
			set
			{
				if ((this._LastDiscovered != value))
				{
					this.OnLastDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._LastDiscovered = value;
					this.SendPropertyChanged("LastDiscovered");
					this.OnLastDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_ExtensionID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ExtensionID
		{
			get
			{
				return this._ExtensionID;
			}
			set
			{
				if ((this._ExtensionID != value))
				{
					if (this._Extension.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnExtensionIDChanging(value);
					this.SendPropertyChanging();
					this._ExtensionID = value;
					this.SendPropertyChanged("ExtensionID");
					this.OnExtensionIDChanged();
				}
			}
		}
		
		[Column(Storage="_Count", DbType="Int NOT NULL")]
		public int Count
		{
			get
			{
				return this._Count;
			}
			set
			{
				if ((this._Count != value))
				{
					this.OnCountChanging(value);
					this.SendPropertyChanging();
					this._Count = value;
					this.SendPropertyChanged("Count");
					this.OnCountChanged();
				}
			}
		}
		
		[Column(Storage="_DaysSinceInitiallyDiscovered", DbType="SmallInt")]
		public System.Nullable<short> DaysSinceInitiallyDiscovered
		{
			get
			{
				return this._DaysSinceInitiallyDiscovered;
			}
			set
			{
				if ((this._DaysSinceInitiallyDiscovered != value))
				{
					this.OnDaysSinceInitiallyDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._DaysSinceInitiallyDiscovered = value;
					this.SendPropertyChanged("DaysSinceInitiallyDiscovered");
					this.OnDaysSinceInitiallyDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_DaysSinceLastDiscovered", DbType="SmallInt NOT NULL")]
		public short DaysSinceLastDiscovered
		{
			get
			{
				return this._DaysSinceLastDiscovered;
			}
			set
			{
				if ((this._DaysSinceLastDiscovered != value))
				{
					this.OnDaysSinceLastDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._DaysSinceLastDiscovered = value;
					this.SendPropertyChanged("DaysSinceLastDiscovered");
					this.OnDaysSinceLastDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_Strength", DbType="Float")]
		public System.Nullable<double> Strength
		{
			get
			{
				return this._Strength;
			}
			set
			{
				if ((this._Strength != value))
				{
					this.OnStrengthChanging(value);
					this.SendPropertyChanging();
					this._Strength = value;
					this.SendPropertyChanged("Strength");
					this.OnStrengthChanged();
				}
			}
		}
		
		[Column(Storage="_Rank", DbType="Int NOT NULL")]
		public int Rank
		{
			get
			{
				return this._Rank;
			}
			set
			{
				if ((this._Rank != value))
				{
					this.OnRankChanging(value);
					this.SendPropertyChanging();
					this._Rank = value;
					this.SendPropertyChanged("Rank");
					this.OnRankChanged();
				}
			}
		}
		
		[Column(Storage="_DenseRank", DbType="Int NOT NULL")]
		public int DenseRank
		{
			get
			{
				return this._DenseRank;
			}
			set
			{
				if ((this._DenseRank != value))
				{
					this.OnDenseRankChanging(value);
					this.SendPropertyChanging();
					this._DenseRank = value;
					this.SendPropertyChanged("DenseRank");
					this.OnDenseRankChanged();
				}
			}
		}
		
		[Column(Storage="_NTile", DbType="TinyInt NOT NULL")]
		public byte NTile
		{
			get
			{
				return this._NTile;
			}
			set
			{
				if ((this._NTile != value))
				{
					this.OnNTileChanging(value);
					this.SendPropertyChanging();
					this._NTile = value;
					this.SendPropertyChanged("NTile");
					this.OnNTileChanged();
				}
			}
		}
		
		[Association(Name="Extension_HyperLinks_MOST_POPULAR_EXTENSIONS_BY_EXTENSION", Storage="_Extension", ThisKey="ExtensionID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Extension Extension
		{
			get
			{
				return this._Extension.Entity;
			}
			set
			{
				Extension previousValue = this._Extension.Entity;
				if (((previousValue != value) 
							|| (this._Extension.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Extension.Entity = null;
						previousValue.HyperLinks_MOST_POPULAR_EXTENSIONS_BY_EXTENSION = null;
					}
					this._Extension.Entity = value;
					if ((value != null))
					{
						value.HyperLinks_MOST_POPULAR_EXTENSIONS_BY_EXTENSION = this;
						this._ExtensionID = value.ID;
					}
					else
					{
						this._ExtensionID = default(int);
					}
					this.SendPropertyChanged("Extension");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="rpt.HyperLinks_MOST_POPULAR_EXTENSIONS_BY_HOSTS")]
	public partial class HyperLinks_MOST_POPULAR_EXTENSIONS_BY_HOST : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RowNumber;
		
		private System.Nullable<System.DateTime> _InitiallyDiscovered;
		
		private System.DateTime _LastDiscovered;
		
		private int _ExtensionID;
		
		private int _Count;
		
		private System.Nullable<short> _DaysSinceInitiallyDiscovered;
		
		private short _DaysSinceLastDiscovered;
		
		private System.Nullable<double> _Strength;
		
		private int _Rank;
		
		private int _DenseRank;
		
		private byte _NTile;
		
		private EntityRef<Extension> _Extension;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRowNumberChanging(int value);
    partial void OnRowNumberChanged();
    partial void OnInitiallyDiscoveredChanging(System.Nullable<System.DateTime> value);
    partial void OnInitiallyDiscoveredChanged();
    partial void OnLastDiscoveredChanging(System.DateTime value);
    partial void OnLastDiscoveredChanged();
    partial void OnExtensionIDChanging(int value);
    partial void OnExtensionIDChanged();
    partial void OnCountChanging(int value);
    partial void OnCountChanged();
    partial void OnDaysSinceInitiallyDiscoveredChanging(System.Nullable<short> value);
    partial void OnDaysSinceInitiallyDiscoveredChanged();
    partial void OnDaysSinceLastDiscoveredChanging(short value);
    partial void OnDaysSinceLastDiscoveredChanged();
    partial void OnStrengthChanging(System.Nullable<double> value);
    partial void OnStrengthChanged();
    partial void OnRankChanging(int value);
    partial void OnRankChanged();
    partial void OnDenseRankChanging(int value);
    partial void OnDenseRankChanged();
    partial void OnNTileChanging(byte value);
    partial void OnNTileChanged();
    #endregion
		
		public HyperLinks_MOST_POPULAR_EXTENSIONS_BY_HOST()
		{
			this._Extension = default(EntityRef<Extension>);
			OnCreated();
		}
		
		[Column(Storage="_RowNumber", DbType="Int NOT NULL")]
		public int RowNumber
		{
			get
			{
				return this._RowNumber;
			}
			set
			{
				if ((this._RowNumber != value))
				{
					this.OnRowNumberChanging(value);
					this.SendPropertyChanging();
					this._RowNumber = value;
					this.SendPropertyChanged("RowNumber");
					this.OnRowNumberChanged();
				}
			}
		}
		
		[Column(Storage="_InitiallyDiscovered", DbType="DateTime")]
		public System.Nullable<System.DateTime> InitiallyDiscovered
		{
			get
			{
				return this._InitiallyDiscovered;
			}
			set
			{
				if ((this._InitiallyDiscovered != value))
				{
					this.OnInitiallyDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._InitiallyDiscovered = value;
					this.SendPropertyChanged("InitiallyDiscovered");
					this.OnInitiallyDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_LastDiscovered", DbType="DateTime NOT NULL")]
		public System.DateTime LastDiscovered
		{
			get
			{
				return this._LastDiscovered;
			}
			set
			{
				if ((this._LastDiscovered != value))
				{
					this.OnLastDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._LastDiscovered = value;
					this.SendPropertyChanged("LastDiscovered");
					this.OnLastDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_ExtensionID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ExtensionID
		{
			get
			{
				return this._ExtensionID;
			}
			set
			{
				if ((this._ExtensionID != value))
				{
					if (this._Extension.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnExtensionIDChanging(value);
					this.SendPropertyChanging();
					this._ExtensionID = value;
					this.SendPropertyChanged("ExtensionID");
					this.OnExtensionIDChanged();
				}
			}
		}
		
		[Column(Storage="_Count", DbType="Int NOT NULL")]
		public int Count
		{
			get
			{
				return this._Count;
			}
			set
			{
				if ((this._Count != value))
				{
					this.OnCountChanging(value);
					this.SendPropertyChanging();
					this._Count = value;
					this.SendPropertyChanged("Count");
					this.OnCountChanged();
				}
			}
		}
		
		[Column(Storage="_DaysSinceInitiallyDiscovered", DbType="SmallInt")]
		public System.Nullable<short> DaysSinceInitiallyDiscovered
		{
			get
			{
				return this._DaysSinceInitiallyDiscovered;
			}
			set
			{
				if ((this._DaysSinceInitiallyDiscovered != value))
				{
					this.OnDaysSinceInitiallyDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._DaysSinceInitiallyDiscovered = value;
					this.SendPropertyChanged("DaysSinceInitiallyDiscovered");
					this.OnDaysSinceInitiallyDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_DaysSinceLastDiscovered", DbType="SmallInt NOT NULL")]
		public short DaysSinceLastDiscovered
		{
			get
			{
				return this._DaysSinceLastDiscovered;
			}
			set
			{
				if ((this._DaysSinceLastDiscovered != value))
				{
					this.OnDaysSinceLastDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._DaysSinceLastDiscovered = value;
					this.SendPropertyChanged("DaysSinceLastDiscovered");
					this.OnDaysSinceLastDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_Strength", DbType="Float")]
		public System.Nullable<double> Strength
		{
			get
			{
				return this._Strength;
			}
			set
			{
				if ((this._Strength != value))
				{
					this.OnStrengthChanging(value);
					this.SendPropertyChanging();
					this._Strength = value;
					this.SendPropertyChanged("Strength");
					this.OnStrengthChanged();
				}
			}
		}
		
		[Column(Storage="_Rank", DbType="Int NOT NULL")]
		public int Rank
		{
			get
			{
				return this._Rank;
			}
			set
			{
				if ((this._Rank != value))
				{
					this.OnRankChanging(value);
					this.SendPropertyChanging();
					this._Rank = value;
					this.SendPropertyChanged("Rank");
					this.OnRankChanged();
				}
			}
		}
		
		[Column(Storage="_DenseRank", DbType="Int NOT NULL")]
		public int DenseRank
		{
			get
			{
				return this._DenseRank;
			}
			set
			{
				if ((this._DenseRank != value))
				{
					this.OnDenseRankChanging(value);
					this.SendPropertyChanging();
					this._DenseRank = value;
					this.SendPropertyChanged("DenseRank");
					this.OnDenseRankChanged();
				}
			}
		}
		
		[Column(Storage="_NTile", DbType="TinyInt NOT NULL")]
		public byte NTile
		{
			get
			{
				return this._NTile;
			}
			set
			{
				if ((this._NTile != value))
				{
					this.OnNTileChanging(value);
					this.SendPropertyChanging();
					this._NTile = value;
					this.SendPropertyChanged("NTile");
					this.OnNTileChanged();
				}
			}
		}
		
		[Association(Name="Extension_HyperLinks_MOST_POPULAR_EXTENSIONS_BY_HOST", Storage="_Extension", ThisKey="ExtensionID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Extension Extension
		{
			get
			{
				return this._Extension.Entity;
			}
			set
			{
				Extension previousValue = this._Extension.Entity;
				if (((previousValue != value) 
							|| (this._Extension.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Extension.Entity = null;
						previousValue.HyperLinks_MOST_POPULAR_EXTENSIONS_BY_HOST = null;
					}
					this._Extension.Entity = value;
					if ((value != null))
					{
						value.HyperLinks_MOST_POPULAR_EXTENSIONS_BY_HOST = this;
						this._ExtensionID = value.ID;
					}
					else
					{
						this._ExtensionID = default(int);
					}
					this.SendPropertyChanged("Extension");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="rpt.HyperLinks_MOST_POPULAR_EXTENSIONS_BY_SCHEMES")]
	public partial class HyperLinks_MOST_POPULAR_EXTENSIONS_BY_SCHEME : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RowNumber;
		
		private System.Nullable<System.DateTime> _InitiallyDiscovered;
		
		private System.DateTime _LastDiscovered;
		
		private int _ExtensionID;
		
		private int _Count;
		
		private System.Nullable<short> _DaysSinceInitiallyDiscovered;
		
		private short _DaysSinceLastDiscovered;
		
		private System.Nullable<double> _Strength;
		
		private int _Rank;
		
		private int _DenseRank;
		
		private byte _NTile;
		
		private EntityRef<Extension> _Extension;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRowNumberChanging(int value);
    partial void OnRowNumberChanged();
    partial void OnInitiallyDiscoveredChanging(System.Nullable<System.DateTime> value);
    partial void OnInitiallyDiscoveredChanged();
    partial void OnLastDiscoveredChanging(System.DateTime value);
    partial void OnLastDiscoveredChanged();
    partial void OnExtensionIDChanging(int value);
    partial void OnExtensionIDChanged();
    partial void OnCountChanging(int value);
    partial void OnCountChanged();
    partial void OnDaysSinceInitiallyDiscoveredChanging(System.Nullable<short> value);
    partial void OnDaysSinceInitiallyDiscoveredChanged();
    partial void OnDaysSinceLastDiscoveredChanging(short value);
    partial void OnDaysSinceLastDiscoveredChanged();
    partial void OnStrengthChanging(System.Nullable<double> value);
    partial void OnStrengthChanged();
    partial void OnRankChanging(int value);
    partial void OnRankChanged();
    partial void OnDenseRankChanging(int value);
    partial void OnDenseRankChanged();
    partial void OnNTileChanging(byte value);
    partial void OnNTileChanged();
    #endregion
		
		public HyperLinks_MOST_POPULAR_EXTENSIONS_BY_SCHEME()
		{
			this._Extension = default(EntityRef<Extension>);
			OnCreated();
		}
		
		[Column(Storage="_RowNumber", DbType="Int NOT NULL")]
		public int RowNumber
		{
			get
			{
				return this._RowNumber;
			}
			set
			{
				if ((this._RowNumber != value))
				{
					this.OnRowNumberChanging(value);
					this.SendPropertyChanging();
					this._RowNumber = value;
					this.SendPropertyChanged("RowNumber");
					this.OnRowNumberChanged();
				}
			}
		}
		
		[Column(Storage="_InitiallyDiscovered", DbType="DateTime")]
		public System.Nullable<System.DateTime> InitiallyDiscovered
		{
			get
			{
				return this._InitiallyDiscovered;
			}
			set
			{
				if ((this._InitiallyDiscovered != value))
				{
					this.OnInitiallyDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._InitiallyDiscovered = value;
					this.SendPropertyChanged("InitiallyDiscovered");
					this.OnInitiallyDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_LastDiscovered", DbType="DateTime NOT NULL")]
		public System.DateTime LastDiscovered
		{
			get
			{
				return this._LastDiscovered;
			}
			set
			{
				if ((this._LastDiscovered != value))
				{
					this.OnLastDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._LastDiscovered = value;
					this.SendPropertyChanged("LastDiscovered");
					this.OnLastDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_ExtensionID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ExtensionID
		{
			get
			{
				return this._ExtensionID;
			}
			set
			{
				if ((this._ExtensionID != value))
				{
					if (this._Extension.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnExtensionIDChanging(value);
					this.SendPropertyChanging();
					this._ExtensionID = value;
					this.SendPropertyChanged("ExtensionID");
					this.OnExtensionIDChanged();
				}
			}
		}
		
		[Column(Storage="_Count", DbType="Int NOT NULL")]
		public int Count
		{
			get
			{
				return this._Count;
			}
			set
			{
				if ((this._Count != value))
				{
					this.OnCountChanging(value);
					this.SendPropertyChanging();
					this._Count = value;
					this.SendPropertyChanged("Count");
					this.OnCountChanged();
				}
			}
		}
		
		[Column(Storage="_DaysSinceInitiallyDiscovered", DbType="SmallInt")]
		public System.Nullable<short> DaysSinceInitiallyDiscovered
		{
			get
			{
				return this._DaysSinceInitiallyDiscovered;
			}
			set
			{
				if ((this._DaysSinceInitiallyDiscovered != value))
				{
					this.OnDaysSinceInitiallyDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._DaysSinceInitiallyDiscovered = value;
					this.SendPropertyChanged("DaysSinceInitiallyDiscovered");
					this.OnDaysSinceInitiallyDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_DaysSinceLastDiscovered", DbType="SmallInt NOT NULL")]
		public short DaysSinceLastDiscovered
		{
			get
			{
				return this._DaysSinceLastDiscovered;
			}
			set
			{
				if ((this._DaysSinceLastDiscovered != value))
				{
					this.OnDaysSinceLastDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._DaysSinceLastDiscovered = value;
					this.SendPropertyChanged("DaysSinceLastDiscovered");
					this.OnDaysSinceLastDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_Strength", DbType="Float")]
		public System.Nullable<double> Strength
		{
			get
			{
				return this._Strength;
			}
			set
			{
				if ((this._Strength != value))
				{
					this.OnStrengthChanging(value);
					this.SendPropertyChanging();
					this._Strength = value;
					this.SendPropertyChanged("Strength");
					this.OnStrengthChanged();
				}
			}
		}
		
		[Column(Storage="_Rank", DbType="Int NOT NULL")]
		public int Rank
		{
			get
			{
				return this._Rank;
			}
			set
			{
				if ((this._Rank != value))
				{
					this.OnRankChanging(value);
					this.SendPropertyChanging();
					this._Rank = value;
					this.SendPropertyChanged("Rank");
					this.OnRankChanged();
				}
			}
		}
		
		[Column(Storage="_DenseRank", DbType="Int NOT NULL")]
		public int DenseRank
		{
			get
			{
				return this._DenseRank;
			}
			set
			{
				if ((this._DenseRank != value))
				{
					this.OnDenseRankChanging(value);
					this.SendPropertyChanging();
					this._DenseRank = value;
					this.SendPropertyChanged("DenseRank");
					this.OnDenseRankChanged();
				}
			}
		}
		
		[Column(Storage="_NTile", DbType="TinyInt NOT NULL")]
		public byte NTile
		{
			get
			{
				return this._NTile;
			}
			set
			{
				if ((this._NTile != value))
				{
					this.OnNTileChanging(value);
					this.SendPropertyChanging();
					this._NTile = value;
					this.SendPropertyChanged("NTile");
					this.OnNTileChanged();
				}
			}
		}
		
		[Association(Name="Extension_HyperLinks_MOST_POPULAR_EXTENSIONS_BY_SCHEME", Storage="_Extension", ThisKey="ExtensionID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Extension Extension
		{
			get
			{
				return this._Extension.Entity;
			}
			set
			{
				Extension previousValue = this._Extension.Entity;
				if (((previousValue != value) 
							|| (this._Extension.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Extension.Entity = null;
						previousValue.HyperLinks_MOST_POPULAR_EXTENSIONS_BY_SCHEME = null;
					}
					this._Extension.Entity = value;
					if ((value != null))
					{
						value.HyperLinks_MOST_POPULAR_EXTENSIONS_BY_SCHEME = this;
						this._ExtensionID = value.ID;
					}
					else
					{
						this._ExtensionID = default(int);
					}
					this.SendPropertyChanged("Extension");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="rpt.HyperLinks_MOST_POPULAR_HOSTS_BY_ABSOLUTEURIS")]
	public partial class HyperLinks_MOST_POPULAR_HOSTS_BY_ABSOLUTEURI : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RowNumber;
		
		private System.Nullable<System.DateTime> _InitiallyDiscovered;
		
		private System.DateTime _LastDiscovered;
		
		private int _HostID;
		
		private int _Count;
		
		private System.Nullable<short> _DaysSinceInitiallyDiscovered;
		
		private short _DaysSinceLastDiscovered;
		
		private System.Nullable<double> _Strength;
		
		private int _Rank;
		
		private int _DenseRank;
		
		private byte _NTile;
		
		private EntityRef<Host> _Host;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRowNumberChanging(int value);
    partial void OnRowNumberChanged();
    partial void OnInitiallyDiscoveredChanging(System.Nullable<System.DateTime> value);
    partial void OnInitiallyDiscoveredChanged();
    partial void OnLastDiscoveredChanging(System.DateTime value);
    partial void OnLastDiscoveredChanged();
    partial void OnHostIDChanging(int value);
    partial void OnHostIDChanged();
    partial void OnCountChanging(int value);
    partial void OnCountChanged();
    partial void OnDaysSinceInitiallyDiscoveredChanging(System.Nullable<short> value);
    partial void OnDaysSinceInitiallyDiscoveredChanged();
    partial void OnDaysSinceLastDiscoveredChanging(short value);
    partial void OnDaysSinceLastDiscoveredChanged();
    partial void OnStrengthChanging(System.Nullable<double> value);
    partial void OnStrengthChanged();
    partial void OnRankChanging(int value);
    partial void OnRankChanged();
    partial void OnDenseRankChanging(int value);
    partial void OnDenseRankChanged();
    partial void OnNTileChanging(byte value);
    partial void OnNTileChanged();
    #endregion
		
		public HyperLinks_MOST_POPULAR_HOSTS_BY_ABSOLUTEURI()
		{
			this._Host = default(EntityRef<Host>);
			OnCreated();
		}
		
		[Column(Storage="_RowNumber", DbType="Int NOT NULL")]
		public int RowNumber
		{
			get
			{
				return this._RowNumber;
			}
			set
			{
				if ((this._RowNumber != value))
				{
					this.OnRowNumberChanging(value);
					this.SendPropertyChanging();
					this._RowNumber = value;
					this.SendPropertyChanged("RowNumber");
					this.OnRowNumberChanged();
				}
			}
		}
		
		[Column(Storage="_InitiallyDiscovered", DbType="DateTime")]
		public System.Nullable<System.DateTime> InitiallyDiscovered
		{
			get
			{
				return this._InitiallyDiscovered;
			}
			set
			{
				if ((this._InitiallyDiscovered != value))
				{
					this.OnInitiallyDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._InitiallyDiscovered = value;
					this.SendPropertyChanged("InitiallyDiscovered");
					this.OnInitiallyDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_LastDiscovered", DbType="DateTime NOT NULL")]
		public System.DateTime LastDiscovered
		{
			get
			{
				return this._LastDiscovered;
			}
			set
			{
				if ((this._LastDiscovered != value))
				{
					this.OnLastDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._LastDiscovered = value;
					this.SendPropertyChanged("LastDiscovered");
					this.OnLastDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_HostID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int HostID
		{
			get
			{
				return this._HostID;
			}
			set
			{
				if ((this._HostID != value))
				{
					if (this._Host.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnHostIDChanging(value);
					this.SendPropertyChanging();
					this._HostID = value;
					this.SendPropertyChanged("HostID");
					this.OnHostIDChanged();
				}
			}
		}
		
		[Column(Storage="_Count", DbType="Int NOT NULL")]
		public int Count
		{
			get
			{
				return this._Count;
			}
			set
			{
				if ((this._Count != value))
				{
					this.OnCountChanging(value);
					this.SendPropertyChanging();
					this._Count = value;
					this.SendPropertyChanged("Count");
					this.OnCountChanged();
				}
			}
		}
		
		[Column(Storage="_DaysSinceInitiallyDiscovered", DbType="SmallInt")]
		public System.Nullable<short> DaysSinceInitiallyDiscovered
		{
			get
			{
				return this._DaysSinceInitiallyDiscovered;
			}
			set
			{
				if ((this._DaysSinceInitiallyDiscovered != value))
				{
					this.OnDaysSinceInitiallyDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._DaysSinceInitiallyDiscovered = value;
					this.SendPropertyChanged("DaysSinceInitiallyDiscovered");
					this.OnDaysSinceInitiallyDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_DaysSinceLastDiscovered", DbType="SmallInt NOT NULL")]
		public short DaysSinceLastDiscovered
		{
			get
			{
				return this._DaysSinceLastDiscovered;
			}
			set
			{
				if ((this._DaysSinceLastDiscovered != value))
				{
					this.OnDaysSinceLastDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._DaysSinceLastDiscovered = value;
					this.SendPropertyChanged("DaysSinceLastDiscovered");
					this.OnDaysSinceLastDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_Strength", DbType="Float")]
		public System.Nullable<double> Strength
		{
			get
			{
				return this._Strength;
			}
			set
			{
				if ((this._Strength != value))
				{
					this.OnStrengthChanging(value);
					this.SendPropertyChanging();
					this._Strength = value;
					this.SendPropertyChanged("Strength");
					this.OnStrengthChanged();
				}
			}
		}
		
		[Column(Storage="_Rank", DbType="Int NOT NULL")]
		public int Rank
		{
			get
			{
				return this._Rank;
			}
			set
			{
				if ((this._Rank != value))
				{
					this.OnRankChanging(value);
					this.SendPropertyChanging();
					this._Rank = value;
					this.SendPropertyChanged("Rank");
					this.OnRankChanged();
				}
			}
		}
		
		[Column(Storage="_DenseRank", DbType="Int NOT NULL")]
		public int DenseRank
		{
			get
			{
				return this._DenseRank;
			}
			set
			{
				if ((this._DenseRank != value))
				{
					this.OnDenseRankChanging(value);
					this.SendPropertyChanging();
					this._DenseRank = value;
					this.SendPropertyChanged("DenseRank");
					this.OnDenseRankChanged();
				}
			}
		}
		
		[Column(Storage="_NTile", DbType="TinyInt NOT NULL")]
		public byte NTile
		{
			get
			{
				return this._NTile;
			}
			set
			{
				if ((this._NTile != value))
				{
					this.OnNTileChanging(value);
					this.SendPropertyChanging();
					this._NTile = value;
					this.SendPropertyChanged("NTile");
					this.OnNTileChanged();
				}
			}
		}
		
		[Association(Name="Host_HyperLinks_MOST_POPULAR_HOSTS_BY_ABSOLUTEURI", Storage="_Host", ThisKey="HostID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Host Host
		{
			get
			{
				return this._Host.Entity;
			}
			set
			{
				Host previousValue = this._Host.Entity;
				if (((previousValue != value) 
							|| (this._Host.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Host.Entity = null;
						previousValue.HyperLinks_MOST_POPULAR_HOSTS_BY_ABSOLUTEURI = null;
					}
					this._Host.Entity = value;
					if ((value != null))
					{
						value.HyperLinks_MOST_POPULAR_HOSTS_BY_ABSOLUTEURI = this;
						this._HostID = value.ID;
					}
					else
					{
						this._HostID = default(int);
					}
					this.SendPropertyChanged("Host");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="rpt.HyperLinks_MOST_POPULAR_HOSTS_BY_DOMAINS")]
	public partial class HyperLinks_MOST_POPULAR_HOSTS_BY_DOMAIN : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RowNumber;
		
		private System.Nullable<System.DateTime> _InitiallyDiscovered;
		
		private System.DateTime _LastDiscovered;
		
		private int _HostID;
		
		private int _Count;
		
		private System.Nullable<short> _DaysSinceInitiallyDiscovered;
		
		private short _DaysSinceLastDiscovered;
		
		private System.Nullable<double> _Strength;
		
		private int _Rank;
		
		private int _DenseRank;
		
		private byte _NTile;
		
		private EntityRef<Host> _Host;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRowNumberChanging(int value);
    partial void OnRowNumberChanged();
    partial void OnInitiallyDiscoveredChanging(System.Nullable<System.DateTime> value);
    partial void OnInitiallyDiscoveredChanged();
    partial void OnLastDiscoveredChanging(System.DateTime value);
    partial void OnLastDiscoveredChanged();
    partial void OnHostIDChanging(int value);
    partial void OnHostIDChanged();
    partial void OnCountChanging(int value);
    partial void OnCountChanged();
    partial void OnDaysSinceInitiallyDiscoveredChanging(System.Nullable<short> value);
    partial void OnDaysSinceInitiallyDiscoveredChanged();
    partial void OnDaysSinceLastDiscoveredChanging(short value);
    partial void OnDaysSinceLastDiscoveredChanged();
    partial void OnStrengthChanging(System.Nullable<double> value);
    partial void OnStrengthChanged();
    partial void OnRankChanging(int value);
    partial void OnRankChanged();
    partial void OnDenseRankChanging(int value);
    partial void OnDenseRankChanged();
    partial void OnNTileChanging(byte value);
    partial void OnNTileChanged();
    #endregion
		
		public HyperLinks_MOST_POPULAR_HOSTS_BY_DOMAIN()
		{
			this._Host = default(EntityRef<Host>);
			OnCreated();
		}
		
		[Column(Storage="_RowNumber", DbType="Int NOT NULL")]
		public int RowNumber
		{
			get
			{
				return this._RowNumber;
			}
			set
			{
				if ((this._RowNumber != value))
				{
					this.OnRowNumberChanging(value);
					this.SendPropertyChanging();
					this._RowNumber = value;
					this.SendPropertyChanged("RowNumber");
					this.OnRowNumberChanged();
				}
			}
		}
		
		[Column(Storage="_InitiallyDiscovered", DbType="DateTime")]
		public System.Nullable<System.DateTime> InitiallyDiscovered
		{
			get
			{
				return this._InitiallyDiscovered;
			}
			set
			{
				if ((this._InitiallyDiscovered != value))
				{
					this.OnInitiallyDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._InitiallyDiscovered = value;
					this.SendPropertyChanged("InitiallyDiscovered");
					this.OnInitiallyDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_LastDiscovered", DbType="DateTime NOT NULL")]
		public System.DateTime LastDiscovered
		{
			get
			{
				return this._LastDiscovered;
			}
			set
			{
				if ((this._LastDiscovered != value))
				{
					this.OnLastDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._LastDiscovered = value;
					this.SendPropertyChanged("LastDiscovered");
					this.OnLastDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_HostID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int HostID
		{
			get
			{
				return this._HostID;
			}
			set
			{
				if ((this._HostID != value))
				{
					if (this._Host.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnHostIDChanging(value);
					this.SendPropertyChanging();
					this._HostID = value;
					this.SendPropertyChanged("HostID");
					this.OnHostIDChanged();
				}
			}
		}
		
		[Column(Storage="_Count", DbType="Int NOT NULL")]
		public int Count
		{
			get
			{
				return this._Count;
			}
			set
			{
				if ((this._Count != value))
				{
					this.OnCountChanging(value);
					this.SendPropertyChanging();
					this._Count = value;
					this.SendPropertyChanged("Count");
					this.OnCountChanged();
				}
			}
		}
		
		[Column(Storage="_DaysSinceInitiallyDiscovered", DbType="SmallInt")]
		public System.Nullable<short> DaysSinceInitiallyDiscovered
		{
			get
			{
				return this._DaysSinceInitiallyDiscovered;
			}
			set
			{
				if ((this._DaysSinceInitiallyDiscovered != value))
				{
					this.OnDaysSinceInitiallyDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._DaysSinceInitiallyDiscovered = value;
					this.SendPropertyChanged("DaysSinceInitiallyDiscovered");
					this.OnDaysSinceInitiallyDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_DaysSinceLastDiscovered", DbType="SmallInt NOT NULL")]
		public short DaysSinceLastDiscovered
		{
			get
			{
				return this._DaysSinceLastDiscovered;
			}
			set
			{
				if ((this._DaysSinceLastDiscovered != value))
				{
					this.OnDaysSinceLastDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._DaysSinceLastDiscovered = value;
					this.SendPropertyChanged("DaysSinceLastDiscovered");
					this.OnDaysSinceLastDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_Strength", DbType="Float")]
		public System.Nullable<double> Strength
		{
			get
			{
				return this._Strength;
			}
			set
			{
				if ((this._Strength != value))
				{
					this.OnStrengthChanging(value);
					this.SendPropertyChanging();
					this._Strength = value;
					this.SendPropertyChanged("Strength");
					this.OnStrengthChanged();
				}
			}
		}
		
		[Column(Storage="_Rank", DbType="Int NOT NULL")]
		public int Rank
		{
			get
			{
				return this._Rank;
			}
			set
			{
				if ((this._Rank != value))
				{
					this.OnRankChanging(value);
					this.SendPropertyChanging();
					this._Rank = value;
					this.SendPropertyChanged("Rank");
					this.OnRankChanged();
				}
			}
		}
		
		[Column(Storage="_DenseRank", DbType="Int NOT NULL")]
		public int DenseRank
		{
			get
			{
				return this._DenseRank;
			}
			set
			{
				if ((this._DenseRank != value))
				{
					this.OnDenseRankChanging(value);
					this.SendPropertyChanging();
					this._DenseRank = value;
					this.SendPropertyChanged("DenseRank");
					this.OnDenseRankChanged();
				}
			}
		}
		
		[Column(Storage="_NTile", DbType="TinyInt NOT NULL")]
		public byte NTile
		{
			get
			{
				return this._NTile;
			}
			set
			{
				if ((this._NTile != value))
				{
					this.OnNTileChanging(value);
					this.SendPropertyChanging();
					this._NTile = value;
					this.SendPropertyChanged("NTile");
					this.OnNTileChanged();
				}
			}
		}
		
		[Association(Name="Host_HyperLinks_MOST_POPULAR_HOSTS_BY_DOMAIN", Storage="_Host", ThisKey="HostID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Host Host
		{
			get
			{
				return this._Host.Entity;
			}
			set
			{
				Host previousValue = this._Host.Entity;
				if (((previousValue != value) 
							|| (this._Host.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Host.Entity = null;
						previousValue.HyperLinks_MOST_POPULAR_HOSTS_BY_DOMAIN = null;
					}
					this._Host.Entity = value;
					if ((value != null))
					{
						value.HyperLinks_MOST_POPULAR_HOSTS_BY_DOMAIN = this;
						this._HostID = value.ID;
					}
					else
					{
						this._HostID = default(int);
					}
					this.SendPropertyChanged("Host");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="rpt.HyperLinks_MOST_POPULAR_HOSTS_BY_EXTENSIONS")]
	public partial class HyperLinks_MOST_POPULAR_HOSTS_BY_EXTENSION : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RowNumber;
		
		private System.Nullable<System.DateTime> _InitiallyDiscovered;
		
		private System.DateTime _LastDiscovered;
		
		private int _HostID;
		
		private int _Count;
		
		private System.Nullable<short> _DaysSinceInitiallyDiscovered;
		
		private short _DaysSinceLastDiscovered;
		
		private System.Nullable<double> _Strength;
		
		private int _Rank;
		
		private int _DenseRank;
		
		private byte _NTile;
		
		private EntityRef<Host> _Host;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRowNumberChanging(int value);
    partial void OnRowNumberChanged();
    partial void OnInitiallyDiscoveredChanging(System.Nullable<System.DateTime> value);
    partial void OnInitiallyDiscoveredChanged();
    partial void OnLastDiscoveredChanging(System.DateTime value);
    partial void OnLastDiscoveredChanged();
    partial void OnHostIDChanging(int value);
    partial void OnHostIDChanged();
    partial void OnCountChanging(int value);
    partial void OnCountChanged();
    partial void OnDaysSinceInitiallyDiscoveredChanging(System.Nullable<short> value);
    partial void OnDaysSinceInitiallyDiscoveredChanged();
    partial void OnDaysSinceLastDiscoveredChanging(short value);
    partial void OnDaysSinceLastDiscoveredChanged();
    partial void OnStrengthChanging(System.Nullable<double> value);
    partial void OnStrengthChanged();
    partial void OnRankChanging(int value);
    partial void OnRankChanged();
    partial void OnDenseRankChanging(int value);
    partial void OnDenseRankChanged();
    partial void OnNTileChanging(byte value);
    partial void OnNTileChanged();
    #endregion
		
		public HyperLinks_MOST_POPULAR_HOSTS_BY_EXTENSION()
		{
			this._Host = default(EntityRef<Host>);
			OnCreated();
		}
		
		[Column(Storage="_RowNumber", DbType="Int NOT NULL")]
		public int RowNumber
		{
			get
			{
				return this._RowNumber;
			}
			set
			{
				if ((this._RowNumber != value))
				{
					this.OnRowNumberChanging(value);
					this.SendPropertyChanging();
					this._RowNumber = value;
					this.SendPropertyChanged("RowNumber");
					this.OnRowNumberChanged();
				}
			}
		}
		
		[Column(Storage="_InitiallyDiscovered", DbType="DateTime")]
		public System.Nullable<System.DateTime> InitiallyDiscovered
		{
			get
			{
				return this._InitiallyDiscovered;
			}
			set
			{
				if ((this._InitiallyDiscovered != value))
				{
					this.OnInitiallyDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._InitiallyDiscovered = value;
					this.SendPropertyChanged("InitiallyDiscovered");
					this.OnInitiallyDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_LastDiscovered", DbType="DateTime NOT NULL")]
		public System.DateTime LastDiscovered
		{
			get
			{
				return this._LastDiscovered;
			}
			set
			{
				if ((this._LastDiscovered != value))
				{
					this.OnLastDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._LastDiscovered = value;
					this.SendPropertyChanged("LastDiscovered");
					this.OnLastDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_HostID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int HostID
		{
			get
			{
				return this._HostID;
			}
			set
			{
				if ((this._HostID != value))
				{
					if (this._Host.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnHostIDChanging(value);
					this.SendPropertyChanging();
					this._HostID = value;
					this.SendPropertyChanged("HostID");
					this.OnHostIDChanged();
				}
			}
		}
		
		[Column(Storage="_Count", DbType="Int NOT NULL")]
		public int Count
		{
			get
			{
				return this._Count;
			}
			set
			{
				if ((this._Count != value))
				{
					this.OnCountChanging(value);
					this.SendPropertyChanging();
					this._Count = value;
					this.SendPropertyChanged("Count");
					this.OnCountChanged();
				}
			}
		}
		
		[Column(Storage="_DaysSinceInitiallyDiscovered", DbType="SmallInt")]
		public System.Nullable<short> DaysSinceInitiallyDiscovered
		{
			get
			{
				return this._DaysSinceInitiallyDiscovered;
			}
			set
			{
				if ((this._DaysSinceInitiallyDiscovered != value))
				{
					this.OnDaysSinceInitiallyDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._DaysSinceInitiallyDiscovered = value;
					this.SendPropertyChanged("DaysSinceInitiallyDiscovered");
					this.OnDaysSinceInitiallyDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_DaysSinceLastDiscovered", DbType="SmallInt NOT NULL")]
		public short DaysSinceLastDiscovered
		{
			get
			{
				return this._DaysSinceLastDiscovered;
			}
			set
			{
				if ((this._DaysSinceLastDiscovered != value))
				{
					this.OnDaysSinceLastDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._DaysSinceLastDiscovered = value;
					this.SendPropertyChanged("DaysSinceLastDiscovered");
					this.OnDaysSinceLastDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_Strength", DbType="Float")]
		public System.Nullable<double> Strength
		{
			get
			{
				return this._Strength;
			}
			set
			{
				if ((this._Strength != value))
				{
					this.OnStrengthChanging(value);
					this.SendPropertyChanging();
					this._Strength = value;
					this.SendPropertyChanged("Strength");
					this.OnStrengthChanged();
				}
			}
		}
		
		[Column(Storage="_Rank", DbType="Int NOT NULL")]
		public int Rank
		{
			get
			{
				return this._Rank;
			}
			set
			{
				if ((this._Rank != value))
				{
					this.OnRankChanging(value);
					this.SendPropertyChanging();
					this._Rank = value;
					this.SendPropertyChanged("Rank");
					this.OnRankChanged();
				}
			}
		}
		
		[Column(Storage="_DenseRank", DbType="Int NOT NULL")]
		public int DenseRank
		{
			get
			{
				return this._DenseRank;
			}
			set
			{
				if ((this._DenseRank != value))
				{
					this.OnDenseRankChanging(value);
					this.SendPropertyChanging();
					this._DenseRank = value;
					this.SendPropertyChanged("DenseRank");
					this.OnDenseRankChanged();
				}
			}
		}
		
		[Column(Storage="_NTile", DbType="TinyInt NOT NULL")]
		public byte NTile
		{
			get
			{
				return this._NTile;
			}
			set
			{
				if ((this._NTile != value))
				{
					this.OnNTileChanging(value);
					this.SendPropertyChanging();
					this._NTile = value;
					this.SendPropertyChanged("NTile");
					this.OnNTileChanged();
				}
			}
		}
		
		[Association(Name="Host_HyperLinks_MOST_POPULAR_HOSTS_BY_EXTENSION", Storage="_Host", ThisKey="HostID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Host Host
		{
			get
			{
				return this._Host.Entity;
			}
			set
			{
				Host previousValue = this._Host.Entity;
				if (((previousValue != value) 
							|| (this._Host.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Host.Entity = null;
						previousValue.HyperLinks_MOST_POPULAR_HOSTS_BY_EXTENSION = null;
					}
					this._Host.Entity = value;
					if ((value != null))
					{
						value.HyperLinks_MOST_POPULAR_HOSTS_BY_EXTENSION = this;
						this._HostID = value.ID;
					}
					else
					{
						this._HostID = default(int);
					}
					this.SendPropertyChanged("Host");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="rpt.HyperLinks_MOST_POPULAR_HOSTS_BY_HOSTS")]
	public partial class HyperLinks_MOST_POPULAR_HOSTS_BY_HOST : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RowNumber;
		
		private System.Nullable<System.DateTime> _InitiallyDiscovered;
		
		private System.DateTime _LastDiscovered;
		
		private int _HostID;
		
		private int _Count;
		
		private System.Nullable<short> _DaysSinceInitiallyDiscovered;
		
		private short _DaysSinceLastDiscovered;
		
		private System.Nullable<double> _Strength;
		
		private int _Rank;
		
		private int _DenseRank;
		
		private byte _NTile;
		
		private EntityRef<Host> _Host;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRowNumberChanging(int value);
    partial void OnRowNumberChanged();
    partial void OnInitiallyDiscoveredChanging(System.Nullable<System.DateTime> value);
    partial void OnInitiallyDiscoveredChanged();
    partial void OnLastDiscoveredChanging(System.DateTime value);
    partial void OnLastDiscoveredChanged();
    partial void OnHostIDChanging(int value);
    partial void OnHostIDChanged();
    partial void OnCountChanging(int value);
    partial void OnCountChanged();
    partial void OnDaysSinceInitiallyDiscoveredChanging(System.Nullable<short> value);
    partial void OnDaysSinceInitiallyDiscoveredChanged();
    partial void OnDaysSinceLastDiscoveredChanging(short value);
    partial void OnDaysSinceLastDiscoveredChanged();
    partial void OnStrengthChanging(System.Nullable<double> value);
    partial void OnStrengthChanged();
    partial void OnRankChanging(int value);
    partial void OnRankChanged();
    partial void OnDenseRankChanging(int value);
    partial void OnDenseRankChanged();
    partial void OnNTileChanging(byte value);
    partial void OnNTileChanged();
    #endregion
		
		public HyperLinks_MOST_POPULAR_HOSTS_BY_HOST()
		{
			this._Host = default(EntityRef<Host>);
			OnCreated();
		}
		
		[Column(Storage="_RowNumber", DbType="Int NOT NULL")]
		public int RowNumber
		{
			get
			{
				return this._RowNumber;
			}
			set
			{
				if ((this._RowNumber != value))
				{
					this.OnRowNumberChanging(value);
					this.SendPropertyChanging();
					this._RowNumber = value;
					this.SendPropertyChanged("RowNumber");
					this.OnRowNumberChanged();
				}
			}
		}
		
		[Column(Storage="_InitiallyDiscovered", DbType="DateTime")]
		public System.Nullable<System.DateTime> InitiallyDiscovered
		{
			get
			{
				return this._InitiallyDiscovered;
			}
			set
			{
				if ((this._InitiallyDiscovered != value))
				{
					this.OnInitiallyDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._InitiallyDiscovered = value;
					this.SendPropertyChanged("InitiallyDiscovered");
					this.OnInitiallyDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_LastDiscovered", DbType="DateTime NOT NULL")]
		public System.DateTime LastDiscovered
		{
			get
			{
				return this._LastDiscovered;
			}
			set
			{
				if ((this._LastDiscovered != value))
				{
					this.OnLastDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._LastDiscovered = value;
					this.SendPropertyChanged("LastDiscovered");
					this.OnLastDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_HostID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int HostID
		{
			get
			{
				return this._HostID;
			}
			set
			{
				if ((this._HostID != value))
				{
					if (this._Host.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnHostIDChanging(value);
					this.SendPropertyChanging();
					this._HostID = value;
					this.SendPropertyChanged("HostID");
					this.OnHostIDChanged();
				}
			}
		}
		
		[Column(Storage="_Count", DbType="Int NOT NULL")]
		public int Count
		{
			get
			{
				return this._Count;
			}
			set
			{
				if ((this._Count != value))
				{
					this.OnCountChanging(value);
					this.SendPropertyChanging();
					this._Count = value;
					this.SendPropertyChanged("Count");
					this.OnCountChanged();
				}
			}
		}
		
		[Column(Storage="_DaysSinceInitiallyDiscovered", DbType="SmallInt")]
		public System.Nullable<short> DaysSinceInitiallyDiscovered
		{
			get
			{
				return this._DaysSinceInitiallyDiscovered;
			}
			set
			{
				if ((this._DaysSinceInitiallyDiscovered != value))
				{
					this.OnDaysSinceInitiallyDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._DaysSinceInitiallyDiscovered = value;
					this.SendPropertyChanged("DaysSinceInitiallyDiscovered");
					this.OnDaysSinceInitiallyDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_DaysSinceLastDiscovered", DbType="SmallInt NOT NULL")]
		public short DaysSinceLastDiscovered
		{
			get
			{
				return this._DaysSinceLastDiscovered;
			}
			set
			{
				if ((this._DaysSinceLastDiscovered != value))
				{
					this.OnDaysSinceLastDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._DaysSinceLastDiscovered = value;
					this.SendPropertyChanged("DaysSinceLastDiscovered");
					this.OnDaysSinceLastDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_Strength", DbType="Float")]
		public System.Nullable<double> Strength
		{
			get
			{
				return this._Strength;
			}
			set
			{
				if ((this._Strength != value))
				{
					this.OnStrengthChanging(value);
					this.SendPropertyChanging();
					this._Strength = value;
					this.SendPropertyChanged("Strength");
					this.OnStrengthChanged();
				}
			}
		}
		
		[Column(Storage="_Rank", DbType="Int NOT NULL")]
		public int Rank
		{
			get
			{
				return this._Rank;
			}
			set
			{
				if ((this._Rank != value))
				{
					this.OnRankChanging(value);
					this.SendPropertyChanging();
					this._Rank = value;
					this.SendPropertyChanged("Rank");
					this.OnRankChanged();
				}
			}
		}
		
		[Column(Storage="_DenseRank", DbType="Int NOT NULL")]
		public int DenseRank
		{
			get
			{
				return this._DenseRank;
			}
			set
			{
				if ((this._DenseRank != value))
				{
					this.OnDenseRankChanging(value);
					this.SendPropertyChanging();
					this._DenseRank = value;
					this.SendPropertyChanged("DenseRank");
					this.OnDenseRankChanged();
				}
			}
		}
		
		[Column(Storage="_NTile", DbType="TinyInt NOT NULL")]
		public byte NTile
		{
			get
			{
				return this._NTile;
			}
			set
			{
				if ((this._NTile != value))
				{
					this.OnNTileChanging(value);
					this.SendPropertyChanging();
					this._NTile = value;
					this.SendPropertyChanged("NTile");
					this.OnNTileChanged();
				}
			}
		}
		
		[Association(Name="Host_HyperLinks_MOST_POPULAR_HOSTS_BY_HOST", Storage="_Host", ThisKey="HostID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Host Host
		{
			get
			{
				return this._Host.Entity;
			}
			set
			{
				Host previousValue = this._Host.Entity;
				if (((previousValue != value) 
							|| (this._Host.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Host.Entity = null;
						previousValue.HyperLinks_MOST_POPULAR_HOSTS_BY_HOST = null;
					}
					this._Host.Entity = value;
					if ((value != null))
					{
						value.HyperLinks_MOST_POPULAR_HOSTS_BY_HOST = this;
						this._HostID = value.ID;
					}
					else
					{
						this._HostID = default(int);
					}
					this.SendPropertyChanged("Host");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="rpt.HyperLinks_MOST_POPULAR_HOSTS_BY_SCHEMES")]
	public partial class HyperLinks_MOST_POPULAR_HOSTS_BY_SCHEME : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RowNumber;
		
		private System.Nullable<System.DateTime> _InitiallyDiscovered;
		
		private System.DateTime _LastDiscovered;
		
		private int _HostID;
		
		private int _Count;
		
		private System.Nullable<short> _DaysSinceInitiallyDiscovered;
		
		private short _DaysSinceLastDiscovered;
		
		private System.Nullable<double> _Strength;
		
		private int _Rank;
		
		private int _DenseRank;
		
		private byte _NTile;
		
		private EntityRef<Host> _Host;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRowNumberChanging(int value);
    partial void OnRowNumberChanged();
    partial void OnInitiallyDiscoveredChanging(System.Nullable<System.DateTime> value);
    partial void OnInitiallyDiscoveredChanged();
    partial void OnLastDiscoveredChanging(System.DateTime value);
    partial void OnLastDiscoveredChanged();
    partial void OnHostIDChanging(int value);
    partial void OnHostIDChanged();
    partial void OnCountChanging(int value);
    partial void OnCountChanged();
    partial void OnDaysSinceInitiallyDiscoveredChanging(System.Nullable<short> value);
    partial void OnDaysSinceInitiallyDiscoveredChanged();
    partial void OnDaysSinceLastDiscoveredChanging(short value);
    partial void OnDaysSinceLastDiscoveredChanged();
    partial void OnStrengthChanging(System.Nullable<double> value);
    partial void OnStrengthChanged();
    partial void OnRankChanging(int value);
    partial void OnRankChanged();
    partial void OnDenseRankChanging(int value);
    partial void OnDenseRankChanged();
    partial void OnNTileChanging(byte value);
    partial void OnNTileChanged();
    #endregion
		
		public HyperLinks_MOST_POPULAR_HOSTS_BY_SCHEME()
		{
			this._Host = default(EntityRef<Host>);
			OnCreated();
		}
		
		[Column(Storage="_RowNumber", DbType="Int NOT NULL")]
		public int RowNumber
		{
			get
			{
				return this._RowNumber;
			}
			set
			{
				if ((this._RowNumber != value))
				{
					this.OnRowNumberChanging(value);
					this.SendPropertyChanging();
					this._RowNumber = value;
					this.SendPropertyChanged("RowNumber");
					this.OnRowNumberChanged();
				}
			}
		}
		
		[Column(Storage="_InitiallyDiscovered", DbType="DateTime")]
		public System.Nullable<System.DateTime> InitiallyDiscovered
		{
			get
			{
				return this._InitiallyDiscovered;
			}
			set
			{
				if ((this._InitiallyDiscovered != value))
				{
					this.OnInitiallyDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._InitiallyDiscovered = value;
					this.SendPropertyChanged("InitiallyDiscovered");
					this.OnInitiallyDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_LastDiscovered", DbType="DateTime NOT NULL")]
		public System.DateTime LastDiscovered
		{
			get
			{
				return this._LastDiscovered;
			}
			set
			{
				if ((this._LastDiscovered != value))
				{
					this.OnLastDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._LastDiscovered = value;
					this.SendPropertyChanged("LastDiscovered");
					this.OnLastDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_HostID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int HostID
		{
			get
			{
				return this._HostID;
			}
			set
			{
				if ((this._HostID != value))
				{
					if (this._Host.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnHostIDChanging(value);
					this.SendPropertyChanging();
					this._HostID = value;
					this.SendPropertyChanged("HostID");
					this.OnHostIDChanged();
				}
			}
		}
		
		[Column(Storage="_Count", DbType="Int NOT NULL")]
		public int Count
		{
			get
			{
				return this._Count;
			}
			set
			{
				if ((this._Count != value))
				{
					this.OnCountChanging(value);
					this.SendPropertyChanging();
					this._Count = value;
					this.SendPropertyChanged("Count");
					this.OnCountChanged();
				}
			}
		}
		
		[Column(Storage="_DaysSinceInitiallyDiscovered", DbType="SmallInt")]
		public System.Nullable<short> DaysSinceInitiallyDiscovered
		{
			get
			{
				return this._DaysSinceInitiallyDiscovered;
			}
			set
			{
				if ((this._DaysSinceInitiallyDiscovered != value))
				{
					this.OnDaysSinceInitiallyDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._DaysSinceInitiallyDiscovered = value;
					this.SendPropertyChanged("DaysSinceInitiallyDiscovered");
					this.OnDaysSinceInitiallyDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_DaysSinceLastDiscovered", DbType="SmallInt NOT NULL")]
		public short DaysSinceLastDiscovered
		{
			get
			{
				return this._DaysSinceLastDiscovered;
			}
			set
			{
				if ((this._DaysSinceLastDiscovered != value))
				{
					this.OnDaysSinceLastDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._DaysSinceLastDiscovered = value;
					this.SendPropertyChanged("DaysSinceLastDiscovered");
					this.OnDaysSinceLastDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_Strength", DbType="Float")]
		public System.Nullable<double> Strength
		{
			get
			{
				return this._Strength;
			}
			set
			{
				if ((this._Strength != value))
				{
					this.OnStrengthChanging(value);
					this.SendPropertyChanging();
					this._Strength = value;
					this.SendPropertyChanged("Strength");
					this.OnStrengthChanged();
				}
			}
		}
		
		[Column(Storage="_Rank", DbType="Int NOT NULL")]
		public int Rank
		{
			get
			{
				return this._Rank;
			}
			set
			{
				if ((this._Rank != value))
				{
					this.OnRankChanging(value);
					this.SendPropertyChanging();
					this._Rank = value;
					this.SendPropertyChanged("Rank");
					this.OnRankChanged();
				}
			}
		}
		
		[Column(Storage="_DenseRank", DbType="Int NOT NULL")]
		public int DenseRank
		{
			get
			{
				return this._DenseRank;
			}
			set
			{
				if ((this._DenseRank != value))
				{
					this.OnDenseRankChanging(value);
					this.SendPropertyChanging();
					this._DenseRank = value;
					this.SendPropertyChanged("DenseRank");
					this.OnDenseRankChanged();
				}
			}
		}
		
		[Column(Storage="_NTile", DbType="TinyInt NOT NULL")]
		public byte NTile
		{
			get
			{
				return this._NTile;
			}
			set
			{
				if ((this._NTile != value))
				{
					this.OnNTileChanging(value);
					this.SendPropertyChanging();
					this._NTile = value;
					this.SendPropertyChanged("NTile");
					this.OnNTileChanged();
				}
			}
		}
		
		[Association(Name="Host_HyperLinks_MOST_POPULAR_HOSTS_BY_SCHEME", Storage="_Host", ThisKey="HostID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Host Host
		{
			get
			{
				return this._Host.Entity;
			}
			set
			{
				Host previousValue = this._Host.Entity;
				if (((previousValue != value) 
							|| (this._Host.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Host.Entity = null;
						previousValue.HyperLinks_MOST_POPULAR_HOSTS_BY_SCHEME = null;
					}
					this._Host.Entity = value;
					if ((value != null))
					{
						value.HyperLinks_MOST_POPULAR_HOSTS_BY_SCHEME = this;
						this._HostID = value.ID;
					}
					else
					{
						this._HostID = default(int);
					}
					this.SendPropertyChanged("Host");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="rpt.HyperLinks_MOST_POPULAR_SCHEMES_BY_ABSOLUTEURIS")]
	public partial class HyperLinks_MOST_POPULAR_SCHEMES_BY_ABSOLUTEURI : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RowNumber;
		
		private System.Nullable<System.DateTime> _InitiallyDiscovered;
		
		private System.DateTime _LastDiscovered;
		
		private int _SchemeID;
		
		private int _Count;
		
		private System.Nullable<short> _DaysSinceInitiallyDiscovered;
		
		private short _DaysSinceLastDiscovered;
		
		private System.Nullable<double> _Strength;
		
		private int _Rank;
		
		private int _DenseRank;
		
		private short _NTile;
		
		private EntityRef<Scheme> _Scheme;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRowNumberChanging(int value);
    partial void OnRowNumberChanged();
    partial void OnInitiallyDiscoveredChanging(System.Nullable<System.DateTime> value);
    partial void OnInitiallyDiscoveredChanged();
    partial void OnLastDiscoveredChanging(System.DateTime value);
    partial void OnLastDiscoveredChanged();
    partial void OnSchemeIDChanging(int value);
    partial void OnSchemeIDChanged();
    partial void OnCountChanging(int value);
    partial void OnCountChanged();
    partial void OnDaysSinceInitiallyDiscoveredChanging(System.Nullable<short> value);
    partial void OnDaysSinceInitiallyDiscoveredChanged();
    partial void OnDaysSinceLastDiscoveredChanging(short value);
    partial void OnDaysSinceLastDiscoveredChanged();
    partial void OnStrengthChanging(System.Nullable<double> value);
    partial void OnStrengthChanged();
    partial void OnRankChanging(int value);
    partial void OnRankChanged();
    partial void OnDenseRankChanging(int value);
    partial void OnDenseRankChanged();
    partial void OnNTileChanging(short value);
    partial void OnNTileChanged();
    #endregion
		
		public HyperLinks_MOST_POPULAR_SCHEMES_BY_ABSOLUTEURI()
		{
			this._Scheme = default(EntityRef<Scheme>);
			OnCreated();
		}
		
		[Column(Storage="_RowNumber", DbType="Int NOT NULL")]
		public int RowNumber
		{
			get
			{
				return this._RowNumber;
			}
			set
			{
				if ((this._RowNumber != value))
				{
					this.OnRowNumberChanging(value);
					this.SendPropertyChanging();
					this._RowNumber = value;
					this.SendPropertyChanged("RowNumber");
					this.OnRowNumberChanged();
				}
			}
		}
		
		[Column(Storage="_InitiallyDiscovered", DbType="DateTime")]
		public System.Nullable<System.DateTime> InitiallyDiscovered
		{
			get
			{
				return this._InitiallyDiscovered;
			}
			set
			{
				if ((this._InitiallyDiscovered != value))
				{
					this.OnInitiallyDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._InitiallyDiscovered = value;
					this.SendPropertyChanged("InitiallyDiscovered");
					this.OnInitiallyDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_LastDiscovered", DbType="DateTime NOT NULL")]
		public System.DateTime LastDiscovered
		{
			get
			{
				return this._LastDiscovered;
			}
			set
			{
				if ((this._LastDiscovered != value))
				{
					this.OnLastDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._LastDiscovered = value;
					this.SendPropertyChanged("LastDiscovered");
					this.OnLastDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_SchemeID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int SchemeID
		{
			get
			{
				return this._SchemeID;
			}
			set
			{
				if ((this._SchemeID != value))
				{
					if (this._Scheme.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSchemeIDChanging(value);
					this.SendPropertyChanging();
					this._SchemeID = value;
					this.SendPropertyChanged("SchemeID");
					this.OnSchemeIDChanged();
				}
			}
		}
		
		[Column(Storage="_Count", DbType="Int NOT NULL")]
		public int Count
		{
			get
			{
				return this._Count;
			}
			set
			{
				if ((this._Count != value))
				{
					this.OnCountChanging(value);
					this.SendPropertyChanging();
					this._Count = value;
					this.SendPropertyChanged("Count");
					this.OnCountChanged();
				}
			}
		}
		
		[Column(Storage="_DaysSinceInitiallyDiscovered", DbType="SmallInt")]
		public System.Nullable<short> DaysSinceInitiallyDiscovered
		{
			get
			{
				return this._DaysSinceInitiallyDiscovered;
			}
			set
			{
				if ((this._DaysSinceInitiallyDiscovered != value))
				{
					this.OnDaysSinceInitiallyDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._DaysSinceInitiallyDiscovered = value;
					this.SendPropertyChanged("DaysSinceInitiallyDiscovered");
					this.OnDaysSinceInitiallyDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_DaysSinceLastDiscovered", DbType="SmallInt NOT NULL")]
		public short DaysSinceLastDiscovered
		{
			get
			{
				return this._DaysSinceLastDiscovered;
			}
			set
			{
				if ((this._DaysSinceLastDiscovered != value))
				{
					this.OnDaysSinceLastDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._DaysSinceLastDiscovered = value;
					this.SendPropertyChanged("DaysSinceLastDiscovered");
					this.OnDaysSinceLastDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_Strength", DbType="Float")]
		public System.Nullable<double> Strength
		{
			get
			{
				return this._Strength;
			}
			set
			{
				if ((this._Strength != value))
				{
					this.OnStrengthChanging(value);
					this.SendPropertyChanging();
					this._Strength = value;
					this.SendPropertyChanged("Strength");
					this.OnStrengthChanged();
				}
			}
		}
		
		[Column(Storage="_Rank", DbType="Int NOT NULL")]
		public int Rank
		{
			get
			{
				return this._Rank;
			}
			set
			{
				if ((this._Rank != value))
				{
					this.OnRankChanging(value);
					this.SendPropertyChanging();
					this._Rank = value;
					this.SendPropertyChanged("Rank");
					this.OnRankChanged();
				}
			}
		}
		
		[Column(Storage="_DenseRank", DbType="Int NOT NULL")]
		public int DenseRank
		{
			get
			{
				return this._DenseRank;
			}
			set
			{
				if ((this._DenseRank != value))
				{
					this.OnDenseRankChanging(value);
					this.SendPropertyChanging();
					this._DenseRank = value;
					this.SendPropertyChanged("DenseRank");
					this.OnDenseRankChanged();
				}
			}
		}
		
		[Column(Storage="_NTile", DbType="SmallInt NOT NULL")]
		public short NTile
		{
			get
			{
				return this._NTile;
			}
			set
			{
				if ((this._NTile != value))
				{
					this.OnNTileChanging(value);
					this.SendPropertyChanging();
					this._NTile = value;
					this.SendPropertyChanged("NTile");
					this.OnNTileChanged();
				}
			}
		}
		
		[Association(Name="Scheme_HyperLinks_MOST_POPULAR_SCHEMES_BY_ABSOLUTEURI", Storage="_Scheme", ThisKey="SchemeID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Scheme Scheme
		{
			get
			{
				return this._Scheme.Entity;
			}
			set
			{
				Scheme previousValue = this._Scheme.Entity;
				if (((previousValue != value) 
							|| (this._Scheme.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Scheme.Entity = null;
						previousValue.HyperLinks_MOST_POPULAR_SCHEMES_BY_ABSOLUTEURI = null;
					}
					this._Scheme.Entity = value;
					if ((value != null))
					{
						value.HyperLinks_MOST_POPULAR_SCHEMES_BY_ABSOLUTEURI = this;
						this._SchemeID = value.ID;
					}
					else
					{
						this._SchemeID = default(int);
					}
					this.SendPropertyChanged("Scheme");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="rpt.HyperLinks_MOST_POPULAR_SCHEMES_BY_DOMAINS")]
	public partial class HyperLinks_MOST_POPULAR_SCHEMES_BY_DOMAIN : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RowNumber;
		
		private System.Nullable<System.DateTime> _InitiallyDiscovered;
		
		private System.DateTime _LastDiscovered;
		
		private int _SchemeID;
		
		private int _Count;
		
		private System.Nullable<short> _DaysSinceInitiallyDiscovered;
		
		private short _DaysSinceLastDiscovered;
		
		private System.Nullable<double> _Strength;
		
		private int _Rank;
		
		private int _DenseRank;
		
		private short _NTile;
		
		private EntityRef<Scheme> _Scheme;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRowNumberChanging(int value);
    partial void OnRowNumberChanged();
    partial void OnInitiallyDiscoveredChanging(System.Nullable<System.DateTime> value);
    partial void OnInitiallyDiscoveredChanged();
    partial void OnLastDiscoveredChanging(System.DateTime value);
    partial void OnLastDiscoveredChanged();
    partial void OnSchemeIDChanging(int value);
    partial void OnSchemeIDChanged();
    partial void OnCountChanging(int value);
    partial void OnCountChanged();
    partial void OnDaysSinceInitiallyDiscoveredChanging(System.Nullable<short> value);
    partial void OnDaysSinceInitiallyDiscoveredChanged();
    partial void OnDaysSinceLastDiscoveredChanging(short value);
    partial void OnDaysSinceLastDiscoveredChanged();
    partial void OnStrengthChanging(System.Nullable<double> value);
    partial void OnStrengthChanged();
    partial void OnRankChanging(int value);
    partial void OnRankChanged();
    partial void OnDenseRankChanging(int value);
    partial void OnDenseRankChanged();
    partial void OnNTileChanging(short value);
    partial void OnNTileChanged();
    #endregion
		
		public HyperLinks_MOST_POPULAR_SCHEMES_BY_DOMAIN()
		{
			this._Scheme = default(EntityRef<Scheme>);
			OnCreated();
		}
		
		[Column(Storage="_RowNumber", DbType="Int NOT NULL")]
		public int RowNumber
		{
			get
			{
				return this._RowNumber;
			}
			set
			{
				if ((this._RowNumber != value))
				{
					this.OnRowNumberChanging(value);
					this.SendPropertyChanging();
					this._RowNumber = value;
					this.SendPropertyChanged("RowNumber");
					this.OnRowNumberChanged();
				}
			}
		}
		
		[Column(Storage="_InitiallyDiscovered", DbType="DateTime")]
		public System.Nullable<System.DateTime> InitiallyDiscovered
		{
			get
			{
				return this._InitiallyDiscovered;
			}
			set
			{
				if ((this._InitiallyDiscovered != value))
				{
					this.OnInitiallyDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._InitiallyDiscovered = value;
					this.SendPropertyChanged("InitiallyDiscovered");
					this.OnInitiallyDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_LastDiscovered", DbType="DateTime NOT NULL")]
		public System.DateTime LastDiscovered
		{
			get
			{
				return this._LastDiscovered;
			}
			set
			{
				if ((this._LastDiscovered != value))
				{
					this.OnLastDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._LastDiscovered = value;
					this.SendPropertyChanged("LastDiscovered");
					this.OnLastDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_SchemeID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int SchemeID
		{
			get
			{
				return this._SchemeID;
			}
			set
			{
				if ((this._SchemeID != value))
				{
					if (this._Scheme.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSchemeIDChanging(value);
					this.SendPropertyChanging();
					this._SchemeID = value;
					this.SendPropertyChanged("SchemeID");
					this.OnSchemeIDChanged();
				}
			}
		}
		
		[Column(Storage="_Count", DbType="Int NOT NULL")]
		public int Count
		{
			get
			{
				return this._Count;
			}
			set
			{
				if ((this._Count != value))
				{
					this.OnCountChanging(value);
					this.SendPropertyChanging();
					this._Count = value;
					this.SendPropertyChanged("Count");
					this.OnCountChanged();
				}
			}
		}
		
		[Column(Storage="_DaysSinceInitiallyDiscovered", DbType="SmallInt")]
		public System.Nullable<short> DaysSinceInitiallyDiscovered
		{
			get
			{
				return this._DaysSinceInitiallyDiscovered;
			}
			set
			{
				if ((this._DaysSinceInitiallyDiscovered != value))
				{
					this.OnDaysSinceInitiallyDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._DaysSinceInitiallyDiscovered = value;
					this.SendPropertyChanged("DaysSinceInitiallyDiscovered");
					this.OnDaysSinceInitiallyDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_DaysSinceLastDiscovered", DbType="SmallInt NOT NULL")]
		public short DaysSinceLastDiscovered
		{
			get
			{
				return this._DaysSinceLastDiscovered;
			}
			set
			{
				if ((this._DaysSinceLastDiscovered != value))
				{
					this.OnDaysSinceLastDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._DaysSinceLastDiscovered = value;
					this.SendPropertyChanged("DaysSinceLastDiscovered");
					this.OnDaysSinceLastDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_Strength", DbType="Float")]
		public System.Nullable<double> Strength
		{
			get
			{
				return this._Strength;
			}
			set
			{
				if ((this._Strength != value))
				{
					this.OnStrengthChanging(value);
					this.SendPropertyChanging();
					this._Strength = value;
					this.SendPropertyChanged("Strength");
					this.OnStrengthChanged();
				}
			}
		}
		
		[Column(Storage="_Rank", DbType="Int NOT NULL")]
		public int Rank
		{
			get
			{
				return this._Rank;
			}
			set
			{
				if ((this._Rank != value))
				{
					this.OnRankChanging(value);
					this.SendPropertyChanging();
					this._Rank = value;
					this.SendPropertyChanged("Rank");
					this.OnRankChanged();
				}
			}
		}
		
		[Column(Storage="_DenseRank", DbType="Int NOT NULL")]
		public int DenseRank
		{
			get
			{
				return this._DenseRank;
			}
			set
			{
				if ((this._DenseRank != value))
				{
					this.OnDenseRankChanging(value);
					this.SendPropertyChanging();
					this._DenseRank = value;
					this.SendPropertyChanged("DenseRank");
					this.OnDenseRankChanged();
				}
			}
		}
		
		[Column(Storage="_NTile", DbType="SmallInt NOT NULL")]
		public short NTile
		{
			get
			{
				return this._NTile;
			}
			set
			{
				if ((this._NTile != value))
				{
					this.OnNTileChanging(value);
					this.SendPropertyChanging();
					this._NTile = value;
					this.SendPropertyChanged("NTile");
					this.OnNTileChanged();
				}
			}
		}
		
		[Association(Name="Scheme_HyperLinks_MOST_POPULAR_SCHEMES_BY_DOMAIN", Storage="_Scheme", ThisKey="SchemeID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Scheme Scheme
		{
			get
			{
				return this._Scheme.Entity;
			}
			set
			{
				Scheme previousValue = this._Scheme.Entity;
				if (((previousValue != value) 
							|| (this._Scheme.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Scheme.Entity = null;
						previousValue.HyperLinks_MOST_POPULAR_SCHEMES_BY_DOMAIN = null;
					}
					this._Scheme.Entity = value;
					if ((value != null))
					{
						value.HyperLinks_MOST_POPULAR_SCHEMES_BY_DOMAIN = this;
						this._SchemeID = value.ID;
					}
					else
					{
						this._SchemeID = default(int);
					}
					this.SendPropertyChanged("Scheme");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="rpt.HyperLinks_MOST_POPULAR_SCHEMES_BY_EXTENSIONS")]
	public partial class HyperLinks_MOST_POPULAR_SCHEMES_BY_EXTENSION : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RowNumber;
		
		private System.Nullable<System.DateTime> _InitiallyDiscovered;
		
		private System.DateTime _LastDiscovered;
		
		private int _SchemeID;
		
		private int _Count;
		
		private System.Nullable<short> _DaysSinceInitiallyDiscovered;
		
		private short _DaysSinceLastDiscovered;
		
		private System.Nullable<double> _Strength;
		
		private int _Rank;
		
		private int _DenseRank;
		
		private short _NTile;
		
		private EntityRef<Scheme> _Scheme;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRowNumberChanging(int value);
    partial void OnRowNumberChanged();
    partial void OnInitiallyDiscoveredChanging(System.Nullable<System.DateTime> value);
    partial void OnInitiallyDiscoveredChanged();
    partial void OnLastDiscoveredChanging(System.DateTime value);
    partial void OnLastDiscoveredChanged();
    partial void OnSchemeIDChanging(int value);
    partial void OnSchemeIDChanged();
    partial void OnCountChanging(int value);
    partial void OnCountChanged();
    partial void OnDaysSinceInitiallyDiscoveredChanging(System.Nullable<short> value);
    partial void OnDaysSinceInitiallyDiscoveredChanged();
    partial void OnDaysSinceLastDiscoveredChanging(short value);
    partial void OnDaysSinceLastDiscoveredChanged();
    partial void OnStrengthChanging(System.Nullable<double> value);
    partial void OnStrengthChanged();
    partial void OnRankChanging(int value);
    partial void OnRankChanged();
    partial void OnDenseRankChanging(int value);
    partial void OnDenseRankChanged();
    partial void OnNTileChanging(short value);
    partial void OnNTileChanged();
    #endregion
		
		public HyperLinks_MOST_POPULAR_SCHEMES_BY_EXTENSION()
		{
			this._Scheme = default(EntityRef<Scheme>);
			OnCreated();
		}
		
		[Column(Storage="_RowNumber", DbType="Int NOT NULL")]
		public int RowNumber
		{
			get
			{
				return this._RowNumber;
			}
			set
			{
				if ((this._RowNumber != value))
				{
					this.OnRowNumberChanging(value);
					this.SendPropertyChanging();
					this._RowNumber = value;
					this.SendPropertyChanged("RowNumber");
					this.OnRowNumberChanged();
				}
			}
		}
		
		[Column(Storage="_InitiallyDiscovered", DbType="DateTime")]
		public System.Nullable<System.DateTime> InitiallyDiscovered
		{
			get
			{
				return this._InitiallyDiscovered;
			}
			set
			{
				if ((this._InitiallyDiscovered != value))
				{
					this.OnInitiallyDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._InitiallyDiscovered = value;
					this.SendPropertyChanged("InitiallyDiscovered");
					this.OnInitiallyDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_LastDiscovered", DbType="DateTime NOT NULL")]
		public System.DateTime LastDiscovered
		{
			get
			{
				return this._LastDiscovered;
			}
			set
			{
				if ((this._LastDiscovered != value))
				{
					this.OnLastDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._LastDiscovered = value;
					this.SendPropertyChanged("LastDiscovered");
					this.OnLastDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_SchemeID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int SchemeID
		{
			get
			{
				return this._SchemeID;
			}
			set
			{
				if ((this._SchemeID != value))
				{
					if (this._Scheme.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSchemeIDChanging(value);
					this.SendPropertyChanging();
					this._SchemeID = value;
					this.SendPropertyChanged("SchemeID");
					this.OnSchemeIDChanged();
				}
			}
		}
		
		[Column(Storage="_Count", DbType="Int NOT NULL")]
		public int Count
		{
			get
			{
				return this._Count;
			}
			set
			{
				if ((this._Count != value))
				{
					this.OnCountChanging(value);
					this.SendPropertyChanging();
					this._Count = value;
					this.SendPropertyChanged("Count");
					this.OnCountChanged();
				}
			}
		}
		
		[Column(Storage="_DaysSinceInitiallyDiscovered", DbType="SmallInt")]
		public System.Nullable<short> DaysSinceInitiallyDiscovered
		{
			get
			{
				return this._DaysSinceInitiallyDiscovered;
			}
			set
			{
				if ((this._DaysSinceInitiallyDiscovered != value))
				{
					this.OnDaysSinceInitiallyDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._DaysSinceInitiallyDiscovered = value;
					this.SendPropertyChanged("DaysSinceInitiallyDiscovered");
					this.OnDaysSinceInitiallyDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_DaysSinceLastDiscovered", DbType="SmallInt NOT NULL")]
		public short DaysSinceLastDiscovered
		{
			get
			{
				return this._DaysSinceLastDiscovered;
			}
			set
			{
				if ((this._DaysSinceLastDiscovered != value))
				{
					this.OnDaysSinceLastDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._DaysSinceLastDiscovered = value;
					this.SendPropertyChanged("DaysSinceLastDiscovered");
					this.OnDaysSinceLastDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_Strength", DbType="Float")]
		public System.Nullable<double> Strength
		{
			get
			{
				return this._Strength;
			}
			set
			{
				if ((this._Strength != value))
				{
					this.OnStrengthChanging(value);
					this.SendPropertyChanging();
					this._Strength = value;
					this.SendPropertyChanged("Strength");
					this.OnStrengthChanged();
				}
			}
		}
		
		[Column(Storage="_Rank", DbType="Int NOT NULL")]
		public int Rank
		{
			get
			{
				return this._Rank;
			}
			set
			{
				if ((this._Rank != value))
				{
					this.OnRankChanging(value);
					this.SendPropertyChanging();
					this._Rank = value;
					this.SendPropertyChanged("Rank");
					this.OnRankChanged();
				}
			}
		}
		
		[Column(Storage="_DenseRank", DbType="Int NOT NULL")]
		public int DenseRank
		{
			get
			{
				return this._DenseRank;
			}
			set
			{
				if ((this._DenseRank != value))
				{
					this.OnDenseRankChanging(value);
					this.SendPropertyChanging();
					this._DenseRank = value;
					this.SendPropertyChanged("DenseRank");
					this.OnDenseRankChanged();
				}
			}
		}
		
		[Column(Storage="_NTile", DbType="SmallInt NOT NULL")]
		public short NTile
		{
			get
			{
				return this._NTile;
			}
			set
			{
				if ((this._NTile != value))
				{
					this.OnNTileChanging(value);
					this.SendPropertyChanging();
					this._NTile = value;
					this.SendPropertyChanged("NTile");
					this.OnNTileChanged();
				}
			}
		}
		
		[Association(Name="Scheme_HyperLinks_MOST_POPULAR_SCHEMES_BY_EXTENSION", Storage="_Scheme", ThisKey="SchemeID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Scheme Scheme
		{
			get
			{
				return this._Scheme.Entity;
			}
			set
			{
				Scheme previousValue = this._Scheme.Entity;
				if (((previousValue != value) 
							|| (this._Scheme.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Scheme.Entity = null;
						previousValue.HyperLinks_MOST_POPULAR_SCHEMES_BY_EXTENSION = null;
					}
					this._Scheme.Entity = value;
					if ((value != null))
					{
						value.HyperLinks_MOST_POPULAR_SCHEMES_BY_EXTENSION = this;
						this._SchemeID = value.ID;
					}
					else
					{
						this._SchemeID = default(int);
					}
					this.SendPropertyChanged("Scheme");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="rpt.HyperLinks_MOST_POPULAR_SCHEMES_BY_HOSTS")]
	public partial class HyperLinks_MOST_POPULAR_SCHEMES_BY_HOST : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RowNumber;
		
		private System.Nullable<System.DateTime> _InitiallyDiscovered;
		
		private System.DateTime _LastDiscovered;
		
		private int _SchemeID;
		
		private int _Count;
		
		private System.Nullable<short> _DaysSinceInitiallyDiscovered;
		
		private short _DaysSinceLastDiscovered;
		
		private System.Nullable<double> _Strength;
		
		private int _Rank;
		
		private int _DenseRank;
		
		private short _NTile;
		
		private EntityRef<Scheme> _Scheme;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRowNumberChanging(int value);
    partial void OnRowNumberChanged();
    partial void OnInitiallyDiscoveredChanging(System.Nullable<System.DateTime> value);
    partial void OnInitiallyDiscoveredChanged();
    partial void OnLastDiscoveredChanging(System.DateTime value);
    partial void OnLastDiscoveredChanged();
    partial void OnSchemeIDChanging(int value);
    partial void OnSchemeIDChanged();
    partial void OnCountChanging(int value);
    partial void OnCountChanged();
    partial void OnDaysSinceInitiallyDiscoveredChanging(System.Nullable<short> value);
    partial void OnDaysSinceInitiallyDiscoveredChanged();
    partial void OnDaysSinceLastDiscoveredChanging(short value);
    partial void OnDaysSinceLastDiscoveredChanged();
    partial void OnStrengthChanging(System.Nullable<double> value);
    partial void OnStrengthChanged();
    partial void OnRankChanging(int value);
    partial void OnRankChanged();
    partial void OnDenseRankChanging(int value);
    partial void OnDenseRankChanged();
    partial void OnNTileChanging(short value);
    partial void OnNTileChanged();
    #endregion
		
		public HyperLinks_MOST_POPULAR_SCHEMES_BY_HOST()
		{
			this._Scheme = default(EntityRef<Scheme>);
			OnCreated();
		}
		
		[Column(Storage="_RowNumber", DbType="Int NOT NULL")]
		public int RowNumber
		{
			get
			{
				return this._RowNumber;
			}
			set
			{
				if ((this._RowNumber != value))
				{
					this.OnRowNumberChanging(value);
					this.SendPropertyChanging();
					this._RowNumber = value;
					this.SendPropertyChanged("RowNumber");
					this.OnRowNumberChanged();
				}
			}
		}
		
		[Column(Storage="_InitiallyDiscovered", DbType="DateTime")]
		public System.Nullable<System.DateTime> InitiallyDiscovered
		{
			get
			{
				return this._InitiallyDiscovered;
			}
			set
			{
				if ((this._InitiallyDiscovered != value))
				{
					this.OnInitiallyDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._InitiallyDiscovered = value;
					this.SendPropertyChanged("InitiallyDiscovered");
					this.OnInitiallyDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_LastDiscovered", DbType="DateTime NOT NULL")]
		public System.DateTime LastDiscovered
		{
			get
			{
				return this._LastDiscovered;
			}
			set
			{
				if ((this._LastDiscovered != value))
				{
					this.OnLastDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._LastDiscovered = value;
					this.SendPropertyChanged("LastDiscovered");
					this.OnLastDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_SchemeID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int SchemeID
		{
			get
			{
				return this._SchemeID;
			}
			set
			{
				if ((this._SchemeID != value))
				{
					if (this._Scheme.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSchemeIDChanging(value);
					this.SendPropertyChanging();
					this._SchemeID = value;
					this.SendPropertyChanged("SchemeID");
					this.OnSchemeIDChanged();
				}
			}
		}
		
		[Column(Storage="_Count", DbType="Int NOT NULL")]
		public int Count
		{
			get
			{
				return this._Count;
			}
			set
			{
				if ((this._Count != value))
				{
					this.OnCountChanging(value);
					this.SendPropertyChanging();
					this._Count = value;
					this.SendPropertyChanged("Count");
					this.OnCountChanged();
				}
			}
		}
		
		[Column(Storage="_DaysSinceInitiallyDiscovered", DbType="SmallInt")]
		public System.Nullable<short> DaysSinceInitiallyDiscovered
		{
			get
			{
				return this._DaysSinceInitiallyDiscovered;
			}
			set
			{
				if ((this._DaysSinceInitiallyDiscovered != value))
				{
					this.OnDaysSinceInitiallyDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._DaysSinceInitiallyDiscovered = value;
					this.SendPropertyChanged("DaysSinceInitiallyDiscovered");
					this.OnDaysSinceInitiallyDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_DaysSinceLastDiscovered", DbType="SmallInt NOT NULL")]
		public short DaysSinceLastDiscovered
		{
			get
			{
				return this._DaysSinceLastDiscovered;
			}
			set
			{
				if ((this._DaysSinceLastDiscovered != value))
				{
					this.OnDaysSinceLastDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._DaysSinceLastDiscovered = value;
					this.SendPropertyChanged("DaysSinceLastDiscovered");
					this.OnDaysSinceLastDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_Strength", DbType="Float")]
		public System.Nullable<double> Strength
		{
			get
			{
				return this._Strength;
			}
			set
			{
				if ((this._Strength != value))
				{
					this.OnStrengthChanging(value);
					this.SendPropertyChanging();
					this._Strength = value;
					this.SendPropertyChanged("Strength");
					this.OnStrengthChanged();
				}
			}
		}
		
		[Column(Storage="_Rank", DbType="Int NOT NULL")]
		public int Rank
		{
			get
			{
				return this._Rank;
			}
			set
			{
				if ((this._Rank != value))
				{
					this.OnRankChanging(value);
					this.SendPropertyChanging();
					this._Rank = value;
					this.SendPropertyChanged("Rank");
					this.OnRankChanged();
				}
			}
		}
		
		[Column(Storage="_DenseRank", DbType="Int NOT NULL")]
		public int DenseRank
		{
			get
			{
				return this._DenseRank;
			}
			set
			{
				if ((this._DenseRank != value))
				{
					this.OnDenseRankChanging(value);
					this.SendPropertyChanging();
					this._DenseRank = value;
					this.SendPropertyChanged("DenseRank");
					this.OnDenseRankChanged();
				}
			}
		}
		
		[Column(Storage="_NTile", DbType="SmallInt NOT NULL")]
		public short NTile
		{
			get
			{
				return this._NTile;
			}
			set
			{
				if ((this._NTile != value))
				{
					this.OnNTileChanging(value);
					this.SendPropertyChanging();
					this._NTile = value;
					this.SendPropertyChanged("NTile");
					this.OnNTileChanged();
				}
			}
		}
		
		[Association(Name="Scheme_HyperLinks_MOST_POPULAR_SCHEMES_BY_HOST", Storage="_Scheme", ThisKey="SchemeID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Scheme Scheme
		{
			get
			{
				return this._Scheme.Entity;
			}
			set
			{
				Scheme previousValue = this._Scheme.Entity;
				if (((previousValue != value) 
							|| (this._Scheme.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Scheme.Entity = null;
						previousValue.HyperLinks_MOST_POPULAR_SCHEMES_BY_HOST = null;
					}
					this._Scheme.Entity = value;
					if ((value != null))
					{
						value.HyperLinks_MOST_POPULAR_SCHEMES_BY_HOST = this;
						this._SchemeID = value.ID;
					}
					else
					{
						this._SchemeID = default(int);
					}
					this.SendPropertyChanged("Scheme");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="rpt.HyperLinks_MOST_POPULAR_SCHEMES_BY_SCHEMES")]
	public partial class HyperLinks_MOST_POPULAR_SCHEMES_BY_SCHEME : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RowNumber;
		
		private System.Nullable<System.DateTime> _InitiallyDiscovered;
		
		private System.DateTime _LastDiscovered;
		
		private int _SchemeID;
		
		private int _Count;
		
		private System.Nullable<short> _DaysSinceInitiallyDiscovered;
		
		private short _DaysSinceLastDiscovered;
		
		private System.Nullable<double> _Strength;
		
		private int _Rank;
		
		private int _DenseRank;
		
		private short _NTile;
		
		private EntityRef<Scheme> _Scheme;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRowNumberChanging(int value);
    partial void OnRowNumberChanged();
    partial void OnInitiallyDiscoveredChanging(System.Nullable<System.DateTime> value);
    partial void OnInitiallyDiscoveredChanged();
    partial void OnLastDiscoveredChanging(System.DateTime value);
    partial void OnLastDiscoveredChanged();
    partial void OnSchemeIDChanging(int value);
    partial void OnSchemeIDChanged();
    partial void OnCountChanging(int value);
    partial void OnCountChanged();
    partial void OnDaysSinceInitiallyDiscoveredChanging(System.Nullable<short> value);
    partial void OnDaysSinceInitiallyDiscoveredChanged();
    partial void OnDaysSinceLastDiscoveredChanging(short value);
    partial void OnDaysSinceLastDiscoveredChanged();
    partial void OnStrengthChanging(System.Nullable<double> value);
    partial void OnStrengthChanged();
    partial void OnRankChanging(int value);
    partial void OnRankChanged();
    partial void OnDenseRankChanging(int value);
    partial void OnDenseRankChanged();
    partial void OnNTileChanging(short value);
    partial void OnNTileChanged();
    #endregion
		
		public HyperLinks_MOST_POPULAR_SCHEMES_BY_SCHEME()
		{
			this._Scheme = default(EntityRef<Scheme>);
			OnCreated();
		}
		
		[Column(Storage="_RowNumber", DbType="Int NOT NULL")]
		public int RowNumber
		{
			get
			{
				return this._RowNumber;
			}
			set
			{
				if ((this._RowNumber != value))
				{
					this.OnRowNumberChanging(value);
					this.SendPropertyChanging();
					this._RowNumber = value;
					this.SendPropertyChanged("RowNumber");
					this.OnRowNumberChanged();
				}
			}
		}
		
		[Column(Storage="_InitiallyDiscovered", DbType="DateTime")]
		public System.Nullable<System.DateTime> InitiallyDiscovered
		{
			get
			{
				return this._InitiallyDiscovered;
			}
			set
			{
				if ((this._InitiallyDiscovered != value))
				{
					this.OnInitiallyDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._InitiallyDiscovered = value;
					this.SendPropertyChanged("InitiallyDiscovered");
					this.OnInitiallyDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_LastDiscovered", DbType="DateTime NOT NULL")]
		public System.DateTime LastDiscovered
		{
			get
			{
				return this._LastDiscovered;
			}
			set
			{
				if ((this._LastDiscovered != value))
				{
					this.OnLastDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._LastDiscovered = value;
					this.SendPropertyChanged("LastDiscovered");
					this.OnLastDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_SchemeID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int SchemeID
		{
			get
			{
				return this._SchemeID;
			}
			set
			{
				if ((this._SchemeID != value))
				{
					if (this._Scheme.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSchemeIDChanging(value);
					this.SendPropertyChanging();
					this._SchemeID = value;
					this.SendPropertyChanged("SchemeID");
					this.OnSchemeIDChanged();
				}
			}
		}
		
		[Column(Storage="_Count", DbType="Int NOT NULL")]
		public int Count
		{
			get
			{
				return this._Count;
			}
			set
			{
				if ((this._Count != value))
				{
					this.OnCountChanging(value);
					this.SendPropertyChanging();
					this._Count = value;
					this.SendPropertyChanged("Count");
					this.OnCountChanged();
				}
			}
		}
		
		[Column(Storage="_DaysSinceInitiallyDiscovered", DbType="SmallInt")]
		public System.Nullable<short> DaysSinceInitiallyDiscovered
		{
			get
			{
				return this._DaysSinceInitiallyDiscovered;
			}
			set
			{
				if ((this._DaysSinceInitiallyDiscovered != value))
				{
					this.OnDaysSinceInitiallyDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._DaysSinceInitiallyDiscovered = value;
					this.SendPropertyChanged("DaysSinceInitiallyDiscovered");
					this.OnDaysSinceInitiallyDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_DaysSinceLastDiscovered", DbType="SmallInt NOT NULL")]
		public short DaysSinceLastDiscovered
		{
			get
			{
				return this._DaysSinceLastDiscovered;
			}
			set
			{
				if ((this._DaysSinceLastDiscovered != value))
				{
					this.OnDaysSinceLastDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._DaysSinceLastDiscovered = value;
					this.SendPropertyChanged("DaysSinceLastDiscovered");
					this.OnDaysSinceLastDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_Strength", DbType="Float")]
		public System.Nullable<double> Strength
		{
			get
			{
				return this._Strength;
			}
			set
			{
				if ((this._Strength != value))
				{
					this.OnStrengthChanging(value);
					this.SendPropertyChanging();
					this._Strength = value;
					this.SendPropertyChanged("Strength");
					this.OnStrengthChanged();
				}
			}
		}
		
		[Column(Storage="_Rank", DbType="Int NOT NULL")]
		public int Rank
		{
			get
			{
				return this._Rank;
			}
			set
			{
				if ((this._Rank != value))
				{
					this.OnRankChanging(value);
					this.SendPropertyChanging();
					this._Rank = value;
					this.SendPropertyChanged("Rank");
					this.OnRankChanged();
				}
			}
		}
		
		[Column(Storage="_DenseRank", DbType="Int NOT NULL")]
		public int DenseRank
		{
			get
			{
				return this._DenseRank;
			}
			set
			{
				if ((this._DenseRank != value))
				{
					this.OnDenseRankChanging(value);
					this.SendPropertyChanging();
					this._DenseRank = value;
					this.SendPropertyChanged("DenseRank");
					this.OnDenseRankChanged();
				}
			}
		}
		
		[Column(Storage="_NTile", DbType="SmallInt NOT NULL")]
		public short NTile
		{
			get
			{
				return this._NTile;
			}
			set
			{
				if ((this._NTile != value))
				{
					this.OnNTileChanging(value);
					this.SendPropertyChanging();
					this._NTile = value;
					this.SendPropertyChanged("NTile");
					this.OnNTileChanged();
				}
			}
		}
		
		[Association(Name="Scheme_HyperLinks_MOST_POPULAR_SCHEMES_BY_SCHEME", Storage="_Scheme", ThisKey="SchemeID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Scheme Scheme
		{
			get
			{
				return this._Scheme.Entity;
			}
			set
			{
				Scheme previousValue = this._Scheme.Entity;
				if (((previousValue != value) 
							|| (this._Scheme.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Scheme.Entity = null;
						previousValue.HyperLinks_MOST_POPULAR_SCHEMES_BY_SCHEME = null;
					}
					this._Scheme.Entity = value;
					if ((value != null))
					{
						value.HyperLinks_MOST_POPULAR_SCHEMES_BY_SCHEME = this;
						this._SchemeID = value.ID;
					}
					else
					{
						this._SchemeID = default(int);
					}
					this.SendPropertyChanged("Scheme");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="rpt.Images_COUNT_BY_ABSOLUTEURI")]
	public partial class Images_COUNT_BY_ABSOLUTEURI : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RowNumber;
		
		private long _ImageID;
		
		private int _Count;
		
		private int _Rank;
		
		private int _DenseRank;
		
		private byte _NTile;
		
		private EntityRef<Image> _Image;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRowNumberChanging(int value);
    partial void OnRowNumberChanged();
    partial void OnImageIDChanging(long value);
    partial void OnImageIDChanged();
    partial void OnCountChanging(int value);
    partial void OnCountChanged();
    partial void OnRankChanging(int value);
    partial void OnRankChanged();
    partial void OnDenseRankChanging(int value);
    partial void OnDenseRankChanged();
    partial void OnNTileChanging(byte value);
    partial void OnNTileChanged();
    #endregion
		
		public Images_COUNT_BY_ABSOLUTEURI()
		{
			this._Image = default(EntityRef<Image>);
			OnCreated();
		}
		
		[Column(Storage="_RowNumber", DbType="Int NOT NULL")]
		public int RowNumber
		{
			get
			{
				return this._RowNumber;
			}
			set
			{
				if ((this._RowNumber != value))
				{
					this.OnRowNumberChanging(value);
					this.SendPropertyChanging();
					this._RowNumber = value;
					this.SendPropertyChanged("RowNumber");
					this.OnRowNumberChanged();
				}
			}
		}
		
		[Column(Storage="_ImageID", DbType="BigInt NOT NULL", IsPrimaryKey=true)]
		public long ImageID
		{
			get
			{
				return this._ImageID;
			}
			set
			{
				if ((this._ImageID != value))
				{
					if (this._Image.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnImageIDChanging(value);
					this.SendPropertyChanging();
					this._ImageID = value;
					this.SendPropertyChanged("ImageID");
					this.OnImageIDChanged();
				}
			}
		}
		
		[Column(Storage="_Count", DbType="Int NOT NULL")]
		public int Count
		{
			get
			{
				return this._Count;
			}
			set
			{
				if ((this._Count != value))
				{
					this.OnCountChanging(value);
					this.SendPropertyChanging();
					this._Count = value;
					this.SendPropertyChanged("Count");
					this.OnCountChanged();
				}
			}
		}
		
		[Column(Storage="_Rank", DbType="Int NOT NULL")]
		public int Rank
		{
			get
			{
				return this._Rank;
			}
			set
			{
				if ((this._Rank != value))
				{
					this.OnRankChanging(value);
					this.SendPropertyChanging();
					this._Rank = value;
					this.SendPropertyChanged("Rank");
					this.OnRankChanged();
				}
			}
		}
		
		[Column(Storage="_DenseRank", DbType="Int NOT NULL")]
		public int DenseRank
		{
			get
			{
				return this._DenseRank;
			}
			set
			{
				if ((this._DenseRank != value))
				{
					this.OnDenseRankChanging(value);
					this.SendPropertyChanging();
					this._DenseRank = value;
					this.SendPropertyChanged("DenseRank");
					this.OnDenseRankChanged();
				}
			}
		}
		
		[Column(Storage="_NTile", DbType="TinyInt NOT NULL")]
		public byte NTile
		{
			get
			{
				return this._NTile;
			}
			set
			{
				if ((this._NTile != value))
				{
					this.OnNTileChanging(value);
					this.SendPropertyChanging();
					this._NTile = value;
					this.SendPropertyChanged("NTile");
					this.OnNTileChanged();
				}
			}
		}
		
		[Association(Name="Image_Images_COUNT_BY_ABSOLUTEURI", Storage="_Image", ThisKey="ImageID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Image Image
		{
			get
			{
				return this._Image.Entity;
			}
			set
			{
				Image previousValue = this._Image.Entity;
				if (((previousValue != value) 
							|| (this._Image.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Image.Entity = null;
						previousValue.Images_COUNT_BY_ABSOLUTEURI = null;
					}
					this._Image.Entity = value;
					if ((value != null))
					{
						value.Images_COUNT_BY_ABSOLUTEURI = this;
						this._ImageID = value.ID;
					}
					else
					{
						this._ImageID = default(long);
					}
					this.SendPropertyChanged("Image");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="rpt.Images_COUNT_BY_DOMAIN")]
	public partial class Images_COUNT_BY_DOMAIN : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RowNumber;
		
		private int _DomainID;
		
		private int _Count;
		
		private int _Rank;
		
		private int _DenseRank;
		
		private byte _NTile;
		
		private EntityRef<Domain> _Domain;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRowNumberChanging(int value);
    partial void OnRowNumberChanged();
    partial void OnDomainIDChanging(int value);
    partial void OnDomainIDChanged();
    partial void OnCountChanging(int value);
    partial void OnCountChanged();
    partial void OnRankChanging(int value);
    partial void OnRankChanged();
    partial void OnDenseRankChanging(int value);
    partial void OnDenseRankChanged();
    partial void OnNTileChanging(byte value);
    partial void OnNTileChanged();
    #endregion
		
		public Images_COUNT_BY_DOMAIN()
		{
			this._Domain = default(EntityRef<Domain>);
			OnCreated();
		}
		
		[Column(Storage="_RowNumber", DbType="Int NOT NULL")]
		public int RowNumber
		{
			get
			{
				return this._RowNumber;
			}
			set
			{
				if ((this._RowNumber != value))
				{
					this.OnRowNumberChanging(value);
					this.SendPropertyChanging();
					this._RowNumber = value;
					this.SendPropertyChanged("RowNumber");
					this.OnRowNumberChanged();
				}
			}
		}
		
		[Column(Storage="_DomainID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int DomainID
		{
			get
			{
				return this._DomainID;
			}
			set
			{
				if ((this._DomainID != value))
				{
					if (this._Domain.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDomainIDChanging(value);
					this.SendPropertyChanging();
					this._DomainID = value;
					this.SendPropertyChanged("DomainID");
					this.OnDomainIDChanged();
				}
			}
		}
		
		[Column(Storage="_Count", DbType="Int NOT NULL")]
		public int Count
		{
			get
			{
				return this._Count;
			}
			set
			{
				if ((this._Count != value))
				{
					this.OnCountChanging(value);
					this.SendPropertyChanging();
					this._Count = value;
					this.SendPropertyChanged("Count");
					this.OnCountChanged();
				}
			}
		}
		
		[Column(Storage="_Rank", DbType="Int NOT NULL")]
		public int Rank
		{
			get
			{
				return this._Rank;
			}
			set
			{
				if ((this._Rank != value))
				{
					this.OnRankChanging(value);
					this.SendPropertyChanging();
					this._Rank = value;
					this.SendPropertyChanged("Rank");
					this.OnRankChanged();
				}
			}
		}
		
		[Column(Storage="_DenseRank", DbType="Int NOT NULL")]
		public int DenseRank
		{
			get
			{
				return this._DenseRank;
			}
			set
			{
				if ((this._DenseRank != value))
				{
					this.OnDenseRankChanging(value);
					this.SendPropertyChanging();
					this._DenseRank = value;
					this.SendPropertyChanged("DenseRank");
					this.OnDenseRankChanged();
				}
			}
		}
		
		[Column(Storage="_NTile", DbType="TinyInt NOT NULL")]
		public byte NTile
		{
			get
			{
				return this._NTile;
			}
			set
			{
				if ((this._NTile != value))
				{
					this.OnNTileChanging(value);
					this.SendPropertyChanging();
					this._NTile = value;
					this.SendPropertyChanged("NTile");
					this.OnNTileChanged();
				}
			}
		}
		
		[Association(Name="Domain_Images_COUNT_BY_DOMAIN", Storage="_Domain", ThisKey="DomainID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Domain Domain
		{
			get
			{
				return this._Domain.Entity;
			}
			set
			{
				Domain previousValue = this._Domain.Entity;
				if (((previousValue != value) 
							|| (this._Domain.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Domain.Entity = null;
						previousValue.Images_COUNT_BY_DOMAIN = null;
					}
					this._Domain.Entity = value;
					if ((value != null))
					{
						value.Images_COUNT_BY_DOMAIN = this;
						this._DomainID = value.ID;
					}
					else
					{
						this._DomainID = default(int);
					}
					this.SendPropertyChanged("Domain");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="rpt.Images_COUNT_BY_EXTENSION")]
	public partial class Images_COUNT_BY_EXTENSION : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RowNumber;
		
		private int _ExtensionID;
		
		private int _Count;
		
		private int _Rank;
		
		private int _DenseRank;
		
		private byte _NTile;
		
		private EntityRef<Extension> _Extension;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRowNumberChanging(int value);
    partial void OnRowNumberChanged();
    partial void OnExtensionIDChanging(int value);
    partial void OnExtensionIDChanged();
    partial void OnCountChanging(int value);
    partial void OnCountChanged();
    partial void OnRankChanging(int value);
    partial void OnRankChanged();
    partial void OnDenseRankChanging(int value);
    partial void OnDenseRankChanged();
    partial void OnNTileChanging(byte value);
    partial void OnNTileChanged();
    #endregion
		
		public Images_COUNT_BY_EXTENSION()
		{
			this._Extension = default(EntityRef<Extension>);
			OnCreated();
		}
		
		[Column(Storage="_RowNumber", DbType="Int NOT NULL")]
		public int RowNumber
		{
			get
			{
				return this._RowNumber;
			}
			set
			{
				if ((this._RowNumber != value))
				{
					this.OnRowNumberChanging(value);
					this.SendPropertyChanging();
					this._RowNumber = value;
					this.SendPropertyChanged("RowNumber");
					this.OnRowNumberChanged();
				}
			}
		}
		
		[Column(Storage="_ExtensionID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ExtensionID
		{
			get
			{
				return this._ExtensionID;
			}
			set
			{
				if ((this._ExtensionID != value))
				{
					if (this._Extension.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnExtensionIDChanging(value);
					this.SendPropertyChanging();
					this._ExtensionID = value;
					this.SendPropertyChanged("ExtensionID");
					this.OnExtensionIDChanged();
				}
			}
		}
		
		[Column(Storage="_Count", DbType="Int NOT NULL")]
		public int Count
		{
			get
			{
				return this._Count;
			}
			set
			{
				if ((this._Count != value))
				{
					this.OnCountChanging(value);
					this.SendPropertyChanging();
					this._Count = value;
					this.SendPropertyChanged("Count");
					this.OnCountChanged();
				}
			}
		}
		
		[Column(Storage="_Rank", DbType="Int NOT NULL")]
		public int Rank
		{
			get
			{
				return this._Rank;
			}
			set
			{
				if ((this._Rank != value))
				{
					this.OnRankChanging(value);
					this.SendPropertyChanging();
					this._Rank = value;
					this.SendPropertyChanged("Rank");
					this.OnRankChanged();
				}
			}
		}
		
		[Column(Storage="_DenseRank", DbType="Int NOT NULL")]
		public int DenseRank
		{
			get
			{
				return this._DenseRank;
			}
			set
			{
				if ((this._DenseRank != value))
				{
					this.OnDenseRankChanging(value);
					this.SendPropertyChanging();
					this._DenseRank = value;
					this.SendPropertyChanged("DenseRank");
					this.OnDenseRankChanged();
				}
			}
		}
		
		[Column(Storage="_NTile", DbType="TinyInt NOT NULL")]
		public byte NTile
		{
			get
			{
				return this._NTile;
			}
			set
			{
				if ((this._NTile != value))
				{
					this.OnNTileChanging(value);
					this.SendPropertyChanging();
					this._NTile = value;
					this.SendPropertyChanged("NTile");
					this.OnNTileChanged();
				}
			}
		}
		
		[Association(Name="Extension_Images_COUNT_BY_EXTENSION", Storage="_Extension", ThisKey="ExtensionID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Extension Extension
		{
			get
			{
				return this._Extension.Entity;
			}
			set
			{
				Extension previousValue = this._Extension.Entity;
				if (((previousValue != value) 
							|| (this._Extension.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Extension.Entity = null;
						previousValue.Images_COUNT_BY_EXTENSION = null;
					}
					this._Extension.Entity = value;
					if ((value != null))
					{
						value.Images_COUNT_BY_EXTENSION = this;
						this._ExtensionID = value.ID;
					}
					else
					{
						this._ExtensionID = default(int);
					}
					this.SendPropertyChanged("Extension");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="rpt.Images_COUNT_BY_FULLTEXTINDEXTYPE")]
	public partial class Images_COUNT_BY_FULLTEXTINDEXTYPE : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RowNumber;
		
		private string _FullTextIndexType;
		
		private int _Count;
		
		private int _Rank;
		
		private int _DenseRank;
		
		private byte _NTile;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRowNumberChanging(int value);
    partial void OnRowNumberChanged();
    partial void OnFullTextIndexTypeChanging(string value);
    partial void OnFullTextIndexTypeChanged();
    partial void OnCountChanging(int value);
    partial void OnCountChanged();
    partial void OnRankChanging(int value);
    partial void OnRankChanged();
    partial void OnDenseRankChanging(int value);
    partial void OnDenseRankChanged();
    partial void OnNTileChanging(byte value);
    partial void OnNTileChanged();
    #endregion
		
		public Images_COUNT_BY_FULLTEXTINDEXTYPE()
		{
			OnCreated();
		}
		
		[Column(Storage="_RowNumber", DbType="Int NOT NULL")]
		public int RowNumber
		{
			get
			{
				return this._RowNumber;
			}
			set
			{
				if ((this._RowNumber != value))
				{
					this.OnRowNumberChanging(value);
					this.SendPropertyChanging();
					this._RowNumber = value;
					this.SendPropertyChanged("RowNumber");
					this.OnRowNumberChanged();
				}
			}
		}
		
		[Column(Storage="_FullTextIndexType", DbType="VarChar(20) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string FullTextIndexType
		{
			get
			{
				return this._FullTextIndexType;
			}
			set
			{
				if ((this._FullTextIndexType != value))
				{
					this.OnFullTextIndexTypeChanging(value);
					this.SendPropertyChanging();
					this._FullTextIndexType = value;
					this.SendPropertyChanged("FullTextIndexType");
					this.OnFullTextIndexTypeChanged();
				}
			}
		}
		
		[Column(Storage="_Count", DbType="Int NOT NULL")]
		public int Count
		{
			get
			{
				return this._Count;
			}
			set
			{
				if ((this._Count != value))
				{
					this.OnCountChanging(value);
					this.SendPropertyChanging();
					this._Count = value;
					this.SendPropertyChanged("Count");
					this.OnCountChanged();
				}
			}
		}
		
		[Column(Storage="_Rank", DbType="Int NOT NULL")]
		public int Rank
		{
			get
			{
				return this._Rank;
			}
			set
			{
				if ((this._Rank != value))
				{
					this.OnRankChanging(value);
					this.SendPropertyChanging();
					this._Rank = value;
					this.SendPropertyChanged("Rank");
					this.OnRankChanged();
				}
			}
		}
		
		[Column(Storage="_DenseRank", DbType="Int NOT NULL")]
		public int DenseRank
		{
			get
			{
				return this._DenseRank;
			}
			set
			{
				if ((this._DenseRank != value))
				{
					this.OnDenseRankChanging(value);
					this.SendPropertyChanging();
					this._DenseRank = value;
					this.SendPropertyChanged("DenseRank");
					this.OnDenseRankChanged();
				}
			}
		}
		
		[Column(Storage="_NTile", DbType="TinyInt NOT NULL")]
		public byte NTile
		{
			get
			{
				return this._NTile;
			}
			set
			{
				if ((this._NTile != value))
				{
					this.OnNTileChanging(value);
					this.SendPropertyChanging();
					this._NTile = value;
					this.SendPropertyChanged("NTile");
					this.OnNTileChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="rpt.Images_COUNT_BY_HOST")]
	public partial class Images_COUNT_BY_HOST : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RowNumber;
		
		private int _HostID;
		
		private int _Count;
		
		private int _Rank;
		
		private int _DenseRank;
		
		private byte _NTile;
		
		private EntityRef<Host> _Host;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRowNumberChanging(int value);
    partial void OnRowNumberChanged();
    partial void OnHostIDChanging(int value);
    partial void OnHostIDChanged();
    partial void OnCountChanging(int value);
    partial void OnCountChanged();
    partial void OnRankChanging(int value);
    partial void OnRankChanged();
    partial void OnDenseRankChanging(int value);
    partial void OnDenseRankChanged();
    partial void OnNTileChanging(byte value);
    partial void OnNTileChanged();
    #endregion
		
		public Images_COUNT_BY_HOST()
		{
			this._Host = default(EntityRef<Host>);
			OnCreated();
		}
		
		[Column(Storage="_RowNumber", DbType="Int NOT NULL")]
		public int RowNumber
		{
			get
			{
				return this._RowNumber;
			}
			set
			{
				if ((this._RowNumber != value))
				{
					this.OnRowNumberChanging(value);
					this.SendPropertyChanging();
					this._RowNumber = value;
					this.SendPropertyChanged("RowNumber");
					this.OnRowNumberChanged();
				}
			}
		}
		
		[Column(Storage="_HostID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int HostID
		{
			get
			{
				return this._HostID;
			}
			set
			{
				if ((this._HostID != value))
				{
					if (this._Host.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnHostIDChanging(value);
					this.SendPropertyChanging();
					this._HostID = value;
					this.SendPropertyChanged("HostID");
					this.OnHostIDChanged();
				}
			}
		}
		
		[Column(Storage="_Count", DbType="Int NOT NULL")]
		public int Count
		{
			get
			{
				return this._Count;
			}
			set
			{
				if ((this._Count != value))
				{
					this.OnCountChanging(value);
					this.SendPropertyChanging();
					this._Count = value;
					this.SendPropertyChanged("Count");
					this.OnCountChanged();
				}
			}
		}
		
		[Column(Storage="_Rank", DbType="Int NOT NULL")]
		public int Rank
		{
			get
			{
				return this._Rank;
			}
			set
			{
				if ((this._Rank != value))
				{
					this.OnRankChanging(value);
					this.SendPropertyChanging();
					this._Rank = value;
					this.SendPropertyChanged("Rank");
					this.OnRankChanged();
				}
			}
		}
		
		[Column(Storage="_DenseRank", DbType="Int NOT NULL")]
		public int DenseRank
		{
			get
			{
				return this._DenseRank;
			}
			set
			{
				if ((this._DenseRank != value))
				{
					this.OnDenseRankChanging(value);
					this.SendPropertyChanging();
					this._DenseRank = value;
					this.SendPropertyChanged("DenseRank");
					this.OnDenseRankChanged();
				}
			}
		}
		
		[Column(Storage="_NTile", DbType="TinyInt NOT NULL")]
		public byte NTile
		{
			get
			{
				return this._NTile;
			}
			set
			{
				if ((this._NTile != value))
				{
					this.OnNTileChanging(value);
					this.SendPropertyChanging();
					this._NTile = value;
					this.SendPropertyChanged("NTile");
					this.OnNTileChanged();
				}
			}
		}
		
		[Association(Name="Host_Images_COUNT_BY_HOST", Storage="_Host", ThisKey="HostID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Host Host
		{
			get
			{
				return this._Host.Entity;
			}
			set
			{
				Host previousValue = this._Host.Entity;
				if (((previousValue != value) 
							|| (this._Host.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Host.Entity = null;
						previousValue.Images_COUNT_BY_HOST = null;
					}
					this._Host.Entity = value;
					if ((value != null))
					{
						value.Images_COUNT_BY_HOST = this;
						this._HostID = value.ID;
					}
					else
					{
						this._HostID = default(int);
					}
					this.SendPropertyChanged("Host");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="rpt.Images_COUNT_BY_SCHEME")]
	public partial class Images_COUNT_BY_SCHEME : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RowNumber;
		
		private int _SchemeID;
		
		private int _Count;
		
		private int _Rank;
		
		private int _DenseRank;
		
		private byte _NTile;
		
		private EntityRef<Scheme> _Scheme;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRowNumberChanging(int value);
    partial void OnRowNumberChanged();
    partial void OnSchemeIDChanging(int value);
    partial void OnSchemeIDChanged();
    partial void OnCountChanging(int value);
    partial void OnCountChanged();
    partial void OnRankChanging(int value);
    partial void OnRankChanged();
    partial void OnDenseRankChanging(int value);
    partial void OnDenseRankChanged();
    partial void OnNTileChanging(byte value);
    partial void OnNTileChanged();
    #endregion
		
		public Images_COUNT_BY_SCHEME()
		{
			this._Scheme = default(EntityRef<Scheme>);
			OnCreated();
		}
		
		[Column(Storage="_RowNumber", DbType="Int NOT NULL")]
		public int RowNumber
		{
			get
			{
				return this._RowNumber;
			}
			set
			{
				if ((this._RowNumber != value))
				{
					this.OnRowNumberChanging(value);
					this.SendPropertyChanging();
					this._RowNumber = value;
					this.SendPropertyChanged("RowNumber");
					this.OnRowNumberChanged();
				}
			}
		}
		
		[Column(Storage="_SchemeID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int SchemeID
		{
			get
			{
				return this._SchemeID;
			}
			set
			{
				if ((this._SchemeID != value))
				{
					if (this._Scheme.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSchemeIDChanging(value);
					this.SendPropertyChanging();
					this._SchemeID = value;
					this.SendPropertyChanged("SchemeID");
					this.OnSchemeIDChanged();
				}
			}
		}
		
		[Column(Storage="_Count", DbType="Int NOT NULL")]
		public int Count
		{
			get
			{
				return this._Count;
			}
			set
			{
				if ((this._Count != value))
				{
					this.OnCountChanging(value);
					this.SendPropertyChanging();
					this._Count = value;
					this.SendPropertyChanged("Count");
					this.OnCountChanged();
				}
			}
		}
		
		[Column(Storage="_Rank", DbType="Int NOT NULL")]
		public int Rank
		{
			get
			{
				return this._Rank;
			}
			set
			{
				if ((this._Rank != value))
				{
					this.OnRankChanging(value);
					this.SendPropertyChanging();
					this._Rank = value;
					this.SendPropertyChanged("Rank");
					this.OnRankChanged();
				}
			}
		}
		
		[Column(Storage="_DenseRank", DbType="Int NOT NULL")]
		public int DenseRank
		{
			get
			{
				return this._DenseRank;
			}
			set
			{
				if ((this._DenseRank != value))
				{
					this.OnDenseRankChanging(value);
					this.SendPropertyChanging();
					this._DenseRank = value;
					this.SendPropertyChanged("DenseRank");
					this.OnDenseRankChanged();
				}
			}
		}
		
		[Column(Storage="_NTile", DbType="TinyInt NOT NULL")]
		public byte NTile
		{
			get
			{
				return this._NTile;
			}
			set
			{
				if ((this._NTile != value))
				{
					this.OnNTileChanging(value);
					this.SendPropertyChanging();
					this._NTile = value;
					this.SendPropertyChanged("NTile");
					this.OnNTileChanged();
				}
			}
		}
		
		[Association(Name="Scheme_Images_COUNT_BY_SCHEME", Storage="_Scheme", ThisKey="SchemeID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Scheme Scheme
		{
			get
			{
				return this._Scheme.Entity;
			}
			set
			{
				Scheme previousValue = this._Scheme.Entity;
				if (((previousValue != value) 
							|| (this._Scheme.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Scheme.Entity = null;
						previousValue.Images_COUNT_BY_SCHEME = null;
					}
					this._Scheme.Entity = value;
					if ((value != null))
					{
						value.Images_COUNT_BY_SCHEME = this;
						this._SchemeID = value.ID;
					}
					else
					{
						this._SchemeID = default(int);
					}
					this.SendPropertyChanged("Scheme");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="rpt.Images_MOST_POPULAR_ABSOLUTEURIS_BY_ABSOLUTEURIS")]
	public partial class Images_MOST_POPULAR_ABSOLUTEURIS_BY_ABSOLUTEURI : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RowNumber;
		
		private System.Nullable<System.DateTime> _InitiallyDiscovered;
		
		private System.DateTime _LastDiscovered;
		
		private long _ImageID;
		
		private int _Count;
		
		private System.Nullable<short> _DaysSinceInitiallyDiscovered;
		
		private short _DaysSinceLastDiscovered;
		
		private System.Nullable<double> _Strength;
		
		private int _Rank;
		
		private int _DenseRank;
		
		private byte _NTile;
		
		private EntityRef<Image> _Image;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRowNumberChanging(int value);
    partial void OnRowNumberChanged();
    partial void OnInitiallyDiscoveredChanging(System.Nullable<System.DateTime> value);
    partial void OnInitiallyDiscoveredChanged();
    partial void OnLastDiscoveredChanging(System.DateTime value);
    partial void OnLastDiscoveredChanged();
    partial void OnImageIDChanging(long value);
    partial void OnImageIDChanged();
    partial void OnCountChanging(int value);
    partial void OnCountChanged();
    partial void OnDaysSinceInitiallyDiscoveredChanging(System.Nullable<short> value);
    partial void OnDaysSinceInitiallyDiscoveredChanged();
    partial void OnDaysSinceLastDiscoveredChanging(short value);
    partial void OnDaysSinceLastDiscoveredChanged();
    partial void OnStrengthChanging(System.Nullable<double> value);
    partial void OnStrengthChanged();
    partial void OnRankChanging(int value);
    partial void OnRankChanged();
    partial void OnDenseRankChanging(int value);
    partial void OnDenseRankChanged();
    partial void OnNTileChanging(byte value);
    partial void OnNTileChanged();
    #endregion
		
		public Images_MOST_POPULAR_ABSOLUTEURIS_BY_ABSOLUTEURI()
		{
			this._Image = default(EntityRef<Image>);
			OnCreated();
		}
		
		[Column(Storage="_RowNumber", DbType="Int NOT NULL")]
		public int RowNumber
		{
			get
			{
				return this._RowNumber;
			}
			set
			{
				if ((this._RowNumber != value))
				{
					this.OnRowNumberChanging(value);
					this.SendPropertyChanging();
					this._RowNumber = value;
					this.SendPropertyChanged("RowNumber");
					this.OnRowNumberChanged();
				}
			}
		}
		
		[Column(Storage="_InitiallyDiscovered", DbType="DateTime")]
		public System.Nullable<System.DateTime> InitiallyDiscovered
		{
			get
			{
				return this._InitiallyDiscovered;
			}
			set
			{
				if ((this._InitiallyDiscovered != value))
				{
					this.OnInitiallyDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._InitiallyDiscovered = value;
					this.SendPropertyChanged("InitiallyDiscovered");
					this.OnInitiallyDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_LastDiscovered", DbType="DateTime NOT NULL")]
		public System.DateTime LastDiscovered
		{
			get
			{
				return this._LastDiscovered;
			}
			set
			{
				if ((this._LastDiscovered != value))
				{
					this.OnLastDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._LastDiscovered = value;
					this.SendPropertyChanged("LastDiscovered");
					this.OnLastDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_ImageID", DbType="BigInt NOT NULL", IsPrimaryKey=true)]
		public long ImageID
		{
			get
			{
				return this._ImageID;
			}
			set
			{
				if ((this._ImageID != value))
				{
					if (this._Image.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnImageIDChanging(value);
					this.SendPropertyChanging();
					this._ImageID = value;
					this.SendPropertyChanged("ImageID");
					this.OnImageIDChanged();
				}
			}
		}
		
		[Column(Storage="_Count", DbType="Int NOT NULL")]
		public int Count
		{
			get
			{
				return this._Count;
			}
			set
			{
				if ((this._Count != value))
				{
					this.OnCountChanging(value);
					this.SendPropertyChanging();
					this._Count = value;
					this.SendPropertyChanged("Count");
					this.OnCountChanged();
				}
			}
		}
		
		[Column(Storage="_DaysSinceInitiallyDiscovered", DbType="SmallInt")]
		public System.Nullable<short> DaysSinceInitiallyDiscovered
		{
			get
			{
				return this._DaysSinceInitiallyDiscovered;
			}
			set
			{
				if ((this._DaysSinceInitiallyDiscovered != value))
				{
					this.OnDaysSinceInitiallyDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._DaysSinceInitiallyDiscovered = value;
					this.SendPropertyChanged("DaysSinceInitiallyDiscovered");
					this.OnDaysSinceInitiallyDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_DaysSinceLastDiscovered", DbType="SmallInt NOT NULL")]
		public short DaysSinceLastDiscovered
		{
			get
			{
				return this._DaysSinceLastDiscovered;
			}
			set
			{
				if ((this._DaysSinceLastDiscovered != value))
				{
					this.OnDaysSinceLastDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._DaysSinceLastDiscovered = value;
					this.SendPropertyChanged("DaysSinceLastDiscovered");
					this.OnDaysSinceLastDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_Strength", DbType="Float")]
		public System.Nullable<double> Strength
		{
			get
			{
				return this._Strength;
			}
			set
			{
				if ((this._Strength != value))
				{
					this.OnStrengthChanging(value);
					this.SendPropertyChanging();
					this._Strength = value;
					this.SendPropertyChanged("Strength");
					this.OnStrengthChanged();
				}
			}
		}
		
		[Column(Storage="_Rank", DbType="Int NOT NULL")]
		public int Rank
		{
			get
			{
				return this._Rank;
			}
			set
			{
				if ((this._Rank != value))
				{
					this.OnRankChanging(value);
					this.SendPropertyChanging();
					this._Rank = value;
					this.SendPropertyChanged("Rank");
					this.OnRankChanged();
				}
			}
		}
		
		[Column(Storage="_DenseRank", DbType="Int NOT NULL")]
		public int DenseRank
		{
			get
			{
				return this._DenseRank;
			}
			set
			{
				if ((this._DenseRank != value))
				{
					this.OnDenseRankChanging(value);
					this.SendPropertyChanging();
					this._DenseRank = value;
					this.SendPropertyChanged("DenseRank");
					this.OnDenseRankChanged();
				}
			}
		}
		
		[Column(Storage="_NTile", DbType="TinyInt NOT NULL")]
		public byte NTile
		{
			get
			{
				return this._NTile;
			}
			set
			{
				if ((this._NTile != value))
				{
					this.OnNTileChanging(value);
					this.SendPropertyChanging();
					this._NTile = value;
					this.SendPropertyChanged("NTile");
					this.OnNTileChanged();
				}
			}
		}
		
		[Association(Name="Image_Images_MOST_POPULAR_ABSOLUTEURIS_BY_ABSOLUTEURI", Storage="_Image", ThisKey="ImageID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Image Image
		{
			get
			{
				return this._Image.Entity;
			}
			set
			{
				Image previousValue = this._Image.Entity;
				if (((previousValue != value) 
							|| (this._Image.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Image.Entity = null;
						previousValue.Images_MOST_POPULAR_ABSOLUTEURIS_BY_ABSOLUTEURI = null;
					}
					this._Image.Entity = value;
					if ((value != null))
					{
						value.Images_MOST_POPULAR_ABSOLUTEURIS_BY_ABSOLUTEURI = this;
						this._ImageID = value.ID;
					}
					else
					{
						this._ImageID = default(long);
					}
					this.SendPropertyChanged("Image");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="rpt.Images_MOST_POPULAR_ABSOLUTEURIS_BY_DOMAINS")]
	public partial class Images_MOST_POPULAR_ABSOLUTEURIS_BY_DOMAIN : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RowNumber;
		
		private System.Nullable<System.DateTime> _InitiallyDiscovered;
		
		private System.DateTime _LastDiscovered;
		
		private long _ImageID;
		
		private int _Count;
		
		private System.Nullable<short> _DaysSinceInitiallyDiscovered;
		
		private short _DaysSinceLastDiscovered;
		
		private System.Nullable<double> _Strength;
		
		private int _Rank;
		
		private int _DenseRank;
		
		private byte _NTile;
		
		private EntityRef<Image> _Image;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRowNumberChanging(int value);
    partial void OnRowNumberChanged();
    partial void OnInitiallyDiscoveredChanging(System.Nullable<System.DateTime> value);
    partial void OnInitiallyDiscoveredChanged();
    partial void OnLastDiscoveredChanging(System.DateTime value);
    partial void OnLastDiscoveredChanged();
    partial void OnImageIDChanging(long value);
    partial void OnImageIDChanged();
    partial void OnCountChanging(int value);
    partial void OnCountChanged();
    partial void OnDaysSinceInitiallyDiscoveredChanging(System.Nullable<short> value);
    partial void OnDaysSinceInitiallyDiscoveredChanged();
    partial void OnDaysSinceLastDiscoveredChanging(short value);
    partial void OnDaysSinceLastDiscoveredChanged();
    partial void OnStrengthChanging(System.Nullable<double> value);
    partial void OnStrengthChanged();
    partial void OnRankChanging(int value);
    partial void OnRankChanged();
    partial void OnDenseRankChanging(int value);
    partial void OnDenseRankChanged();
    partial void OnNTileChanging(byte value);
    partial void OnNTileChanged();
    #endregion
		
		public Images_MOST_POPULAR_ABSOLUTEURIS_BY_DOMAIN()
		{
			this._Image = default(EntityRef<Image>);
			OnCreated();
		}
		
		[Column(Storage="_RowNumber", DbType="Int NOT NULL")]
		public int RowNumber
		{
			get
			{
				return this._RowNumber;
			}
			set
			{
				if ((this._RowNumber != value))
				{
					this.OnRowNumberChanging(value);
					this.SendPropertyChanging();
					this._RowNumber = value;
					this.SendPropertyChanged("RowNumber");
					this.OnRowNumberChanged();
				}
			}
		}
		
		[Column(Storage="_InitiallyDiscovered", DbType="DateTime")]
		public System.Nullable<System.DateTime> InitiallyDiscovered
		{
			get
			{
				return this._InitiallyDiscovered;
			}
			set
			{
				if ((this._InitiallyDiscovered != value))
				{
					this.OnInitiallyDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._InitiallyDiscovered = value;
					this.SendPropertyChanged("InitiallyDiscovered");
					this.OnInitiallyDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_LastDiscovered", DbType="DateTime NOT NULL")]
		public System.DateTime LastDiscovered
		{
			get
			{
				return this._LastDiscovered;
			}
			set
			{
				if ((this._LastDiscovered != value))
				{
					this.OnLastDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._LastDiscovered = value;
					this.SendPropertyChanged("LastDiscovered");
					this.OnLastDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_ImageID", DbType="BigInt NOT NULL", IsPrimaryKey=true)]
		public long ImageID
		{
			get
			{
				return this._ImageID;
			}
			set
			{
				if ((this._ImageID != value))
				{
					if (this._Image.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnImageIDChanging(value);
					this.SendPropertyChanging();
					this._ImageID = value;
					this.SendPropertyChanged("ImageID");
					this.OnImageIDChanged();
				}
			}
		}
		
		[Column(Storage="_Count", DbType="Int NOT NULL")]
		public int Count
		{
			get
			{
				return this._Count;
			}
			set
			{
				if ((this._Count != value))
				{
					this.OnCountChanging(value);
					this.SendPropertyChanging();
					this._Count = value;
					this.SendPropertyChanged("Count");
					this.OnCountChanged();
				}
			}
		}
		
		[Column(Storage="_DaysSinceInitiallyDiscovered", DbType="SmallInt")]
		public System.Nullable<short> DaysSinceInitiallyDiscovered
		{
			get
			{
				return this._DaysSinceInitiallyDiscovered;
			}
			set
			{
				if ((this._DaysSinceInitiallyDiscovered != value))
				{
					this.OnDaysSinceInitiallyDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._DaysSinceInitiallyDiscovered = value;
					this.SendPropertyChanged("DaysSinceInitiallyDiscovered");
					this.OnDaysSinceInitiallyDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_DaysSinceLastDiscovered", DbType="SmallInt NOT NULL")]
		public short DaysSinceLastDiscovered
		{
			get
			{
				return this._DaysSinceLastDiscovered;
			}
			set
			{
				if ((this._DaysSinceLastDiscovered != value))
				{
					this.OnDaysSinceLastDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._DaysSinceLastDiscovered = value;
					this.SendPropertyChanged("DaysSinceLastDiscovered");
					this.OnDaysSinceLastDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_Strength", DbType="Float")]
		public System.Nullable<double> Strength
		{
			get
			{
				return this._Strength;
			}
			set
			{
				if ((this._Strength != value))
				{
					this.OnStrengthChanging(value);
					this.SendPropertyChanging();
					this._Strength = value;
					this.SendPropertyChanged("Strength");
					this.OnStrengthChanged();
				}
			}
		}
		
		[Column(Storage="_Rank", DbType="Int NOT NULL")]
		public int Rank
		{
			get
			{
				return this._Rank;
			}
			set
			{
				if ((this._Rank != value))
				{
					this.OnRankChanging(value);
					this.SendPropertyChanging();
					this._Rank = value;
					this.SendPropertyChanged("Rank");
					this.OnRankChanged();
				}
			}
		}
		
		[Column(Storage="_DenseRank", DbType="Int NOT NULL")]
		public int DenseRank
		{
			get
			{
				return this._DenseRank;
			}
			set
			{
				if ((this._DenseRank != value))
				{
					this.OnDenseRankChanging(value);
					this.SendPropertyChanging();
					this._DenseRank = value;
					this.SendPropertyChanged("DenseRank");
					this.OnDenseRankChanged();
				}
			}
		}
		
		[Column(Storage="_NTile", DbType="TinyInt NOT NULL")]
		public byte NTile
		{
			get
			{
				return this._NTile;
			}
			set
			{
				if ((this._NTile != value))
				{
					this.OnNTileChanging(value);
					this.SendPropertyChanging();
					this._NTile = value;
					this.SendPropertyChanged("NTile");
					this.OnNTileChanged();
				}
			}
		}
		
		[Association(Name="Image_Images_MOST_POPULAR_ABSOLUTEURIS_BY_DOMAIN", Storage="_Image", ThisKey="ImageID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Image Image
		{
			get
			{
				return this._Image.Entity;
			}
			set
			{
				Image previousValue = this._Image.Entity;
				if (((previousValue != value) 
							|| (this._Image.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Image.Entity = null;
						previousValue.Images_MOST_POPULAR_ABSOLUTEURIS_BY_DOMAIN = null;
					}
					this._Image.Entity = value;
					if ((value != null))
					{
						value.Images_MOST_POPULAR_ABSOLUTEURIS_BY_DOMAIN = this;
						this._ImageID = value.ID;
					}
					else
					{
						this._ImageID = default(long);
					}
					this.SendPropertyChanged("Image");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="rpt.Images_MOST_POPULAR_ABSOLUTEURIS_BY_EXTENSIONS")]
	public partial class Images_MOST_POPULAR_ABSOLUTEURIS_BY_EXTENSION : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RowNumber;
		
		private System.Nullable<System.DateTime> _InitiallyDiscovered;
		
		private System.DateTime _LastDiscovered;
		
		private long _ImageID;
		
		private int _Count;
		
		private System.Nullable<short> _DaysSinceInitiallyDiscovered;
		
		private short _DaysSinceLastDiscovered;
		
		private System.Nullable<double> _Strength;
		
		private int _Rank;
		
		private int _DenseRank;
		
		private byte _NTile;
		
		private EntityRef<Image> _Image;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRowNumberChanging(int value);
    partial void OnRowNumberChanged();
    partial void OnInitiallyDiscoveredChanging(System.Nullable<System.DateTime> value);
    partial void OnInitiallyDiscoveredChanged();
    partial void OnLastDiscoveredChanging(System.DateTime value);
    partial void OnLastDiscoveredChanged();
    partial void OnImageIDChanging(long value);
    partial void OnImageIDChanged();
    partial void OnCountChanging(int value);
    partial void OnCountChanged();
    partial void OnDaysSinceInitiallyDiscoveredChanging(System.Nullable<short> value);
    partial void OnDaysSinceInitiallyDiscoveredChanged();
    partial void OnDaysSinceLastDiscoveredChanging(short value);
    partial void OnDaysSinceLastDiscoveredChanged();
    partial void OnStrengthChanging(System.Nullable<double> value);
    partial void OnStrengthChanged();
    partial void OnRankChanging(int value);
    partial void OnRankChanged();
    partial void OnDenseRankChanging(int value);
    partial void OnDenseRankChanged();
    partial void OnNTileChanging(byte value);
    partial void OnNTileChanged();
    #endregion
		
		public Images_MOST_POPULAR_ABSOLUTEURIS_BY_EXTENSION()
		{
			this._Image = default(EntityRef<Image>);
			OnCreated();
		}
		
		[Column(Storage="_RowNumber", DbType="Int NOT NULL")]
		public int RowNumber
		{
			get
			{
				return this._RowNumber;
			}
			set
			{
				if ((this._RowNumber != value))
				{
					this.OnRowNumberChanging(value);
					this.SendPropertyChanging();
					this._RowNumber = value;
					this.SendPropertyChanged("RowNumber");
					this.OnRowNumberChanged();
				}
			}
		}
		
		[Column(Storage="_InitiallyDiscovered", DbType="DateTime")]
		public System.Nullable<System.DateTime> InitiallyDiscovered
		{
			get
			{
				return this._InitiallyDiscovered;
			}
			set
			{
				if ((this._InitiallyDiscovered != value))
				{
					this.OnInitiallyDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._InitiallyDiscovered = value;
					this.SendPropertyChanged("InitiallyDiscovered");
					this.OnInitiallyDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_LastDiscovered", DbType="DateTime NOT NULL")]
		public System.DateTime LastDiscovered
		{
			get
			{
				return this._LastDiscovered;
			}
			set
			{
				if ((this._LastDiscovered != value))
				{
					this.OnLastDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._LastDiscovered = value;
					this.SendPropertyChanged("LastDiscovered");
					this.OnLastDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_ImageID", DbType="BigInt NOT NULL", IsPrimaryKey=true)]
		public long ImageID
		{
			get
			{
				return this._ImageID;
			}
			set
			{
				if ((this._ImageID != value))
				{
					if (this._Image.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnImageIDChanging(value);
					this.SendPropertyChanging();
					this._ImageID = value;
					this.SendPropertyChanged("ImageID");
					this.OnImageIDChanged();
				}
			}
		}
		
		[Column(Storage="_Count", DbType="Int NOT NULL")]
		public int Count
		{
			get
			{
				return this._Count;
			}
			set
			{
				if ((this._Count != value))
				{
					this.OnCountChanging(value);
					this.SendPropertyChanging();
					this._Count = value;
					this.SendPropertyChanged("Count");
					this.OnCountChanged();
				}
			}
		}
		
		[Column(Storage="_DaysSinceInitiallyDiscovered", DbType="SmallInt")]
		public System.Nullable<short> DaysSinceInitiallyDiscovered
		{
			get
			{
				return this._DaysSinceInitiallyDiscovered;
			}
			set
			{
				if ((this._DaysSinceInitiallyDiscovered != value))
				{
					this.OnDaysSinceInitiallyDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._DaysSinceInitiallyDiscovered = value;
					this.SendPropertyChanged("DaysSinceInitiallyDiscovered");
					this.OnDaysSinceInitiallyDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_DaysSinceLastDiscovered", DbType="SmallInt NOT NULL")]
		public short DaysSinceLastDiscovered
		{
			get
			{
				return this._DaysSinceLastDiscovered;
			}
			set
			{
				if ((this._DaysSinceLastDiscovered != value))
				{
					this.OnDaysSinceLastDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._DaysSinceLastDiscovered = value;
					this.SendPropertyChanged("DaysSinceLastDiscovered");
					this.OnDaysSinceLastDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_Strength", DbType="Float")]
		public System.Nullable<double> Strength
		{
			get
			{
				return this._Strength;
			}
			set
			{
				if ((this._Strength != value))
				{
					this.OnStrengthChanging(value);
					this.SendPropertyChanging();
					this._Strength = value;
					this.SendPropertyChanged("Strength");
					this.OnStrengthChanged();
				}
			}
		}
		
		[Column(Storage="_Rank", DbType="Int NOT NULL")]
		public int Rank
		{
			get
			{
				return this._Rank;
			}
			set
			{
				if ((this._Rank != value))
				{
					this.OnRankChanging(value);
					this.SendPropertyChanging();
					this._Rank = value;
					this.SendPropertyChanged("Rank");
					this.OnRankChanged();
				}
			}
		}
		
		[Column(Storage="_DenseRank", DbType="Int NOT NULL")]
		public int DenseRank
		{
			get
			{
				return this._DenseRank;
			}
			set
			{
				if ((this._DenseRank != value))
				{
					this.OnDenseRankChanging(value);
					this.SendPropertyChanging();
					this._DenseRank = value;
					this.SendPropertyChanged("DenseRank");
					this.OnDenseRankChanged();
				}
			}
		}
		
		[Column(Storage="_NTile", DbType="TinyInt NOT NULL")]
		public byte NTile
		{
			get
			{
				return this._NTile;
			}
			set
			{
				if ((this._NTile != value))
				{
					this.OnNTileChanging(value);
					this.SendPropertyChanging();
					this._NTile = value;
					this.SendPropertyChanged("NTile");
					this.OnNTileChanged();
				}
			}
		}
		
		[Association(Name="Image_Images_MOST_POPULAR_ABSOLUTEURIS_BY_EXTENSION", Storage="_Image", ThisKey="ImageID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Image Image
		{
			get
			{
				return this._Image.Entity;
			}
			set
			{
				Image previousValue = this._Image.Entity;
				if (((previousValue != value) 
							|| (this._Image.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Image.Entity = null;
						previousValue.Images_MOST_POPULAR_ABSOLUTEURIS_BY_EXTENSION = null;
					}
					this._Image.Entity = value;
					if ((value != null))
					{
						value.Images_MOST_POPULAR_ABSOLUTEURIS_BY_EXTENSION = this;
						this._ImageID = value.ID;
					}
					else
					{
						this._ImageID = default(long);
					}
					this.SendPropertyChanged("Image");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="rpt.Images_MOST_POPULAR_ABSOLUTEURIS_BY_HOSTS")]
	public partial class Images_MOST_POPULAR_ABSOLUTEURIS_BY_HOST : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RowNumber;
		
		private System.Nullable<System.DateTime> _InitiallyDiscovered;
		
		private System.DateTime _LastDiscovered;
		
		private long _ImageID;
		
		private int _Count;
		
		private System.Nullable<short> _DaysSinceInitiallyDiscovered;
		
		private short _DaysSinceLastDiscovered;
		
		private System.Nullable<double> _Strength;
		
		private int _Rank;
		
		private int _DenseRank;
		
		private byte _NTile;
		
		private EntityRef<Image> _Image;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRowNumberChanging(int value);
    partial void OnRowNumberChanged();
    partial void OnInitiallyDiscoveredChanging(System.Nullable<System.DateTime> value);
    partial void OnInitiallyDiscoveredChanged();
    partial void OnLastDiscoveredChanging(System.DateTime value);
    partial void OnLastDiscoveredChanged();
    partial void OnImageIDChanging(long value);
    partial void OnImageIDChanged();
    partial void OnCountChanging(int value);
    partial void OnCountChanged();
    partial void OnDaysSinceInitiallyDiscoveredChanging(System.Nullable<short> value);
    partial void OnDaysSinceInitiallyDiscoveredChanged();
    partial void OnDaysSinceLastDiscoveredChanging(short value);
    partial void OnDaysSinceLastDiscoveredChanged();
    partial void OnStrengthChanging(System.Nullable<double> value);
    partial void OnStrengthChanged();
    partial void OnRankChanging(int value);
    partial void OnRankChanged();
    partial void OnDenseRankChanging(int value);
    partial void OnDenseRankChanged();
    partial void OnNTileChanging(byte value);
    partial void OnNTileChanged();
    #endregion
		
		public Images_MOST_POPULAR_ABSOLUTEURIS_BY_HOST()
		{
			this._Image = default(EntityRef<Image>);
			OnCreated();
		}
		
		[Column(Storage="_RowNumber", DbType="Int NOT NULL")]
		public int RowNumber
		{
			get
			{
				return this._RowNumber;
			}
			set
			{
				if ((this._RowNumber != value))
				{
					this.OnRowNumberChanging(value);
					this.SendPropertyChanging();
					this._RowNumber = value;
					this.SendPropertyChanged("RowNumber");
					this.OnRowNumberChanged();
				}
			}
		}
		
		[Column(Storage="_InitiallyDiscovered", DbType="DateTime")]
		public System.Nullable<System.DateTime> InitiallyDiscovered
		{
			get
			{
				return this._InitiallyDiscovered;
			}
			set
			{
				if ((this._InitiallyDiscovered != value))
				{
					this.OnInitiallyDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._InitiallyDiscovered = value;
					this.SendPropertyChanged("InitiallyDiscovered");
					this.OnInitiallyDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_LastDiscovered", DbType="DateTime NOT NULL")]
		public System.DateTime LastDiscovered
		{
			get
			{
				return this._LastDiscovered;
			}
			set
			{
				if ((this._LastDiscovered != value))
				{
					this.OnLastDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._LastDiscovered = value;
					this.SendPropertyChanged("LastDiscovered");
					this.OnLastDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_ImageID", DbType="BigInt NOT NULL", IsPrimaryKey=true)]
		public long ImageID
		{
			get
			{
				return this._ImageID;
			}
			set
			{
				if ((this._ImageID != value))
				{
					if (this._Image.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnImageIDChanging(value);
					this.SendPropertyChanging();
					this._ImageID = value;
					this.SendPropertyChanged("ImageID");
					this.OnImageIDChanged();
				}
			}
		}
		
		[Column(Storage="_Count", DbType="Int NOT NULL")]
		public int Count
		{
			get
			{
				return this._Count;
			}
			set
			{
				if ((this._Count != value))
				{
					this.OnCountChanging(value);
					this.SendPropertyChanging();
					this._Count = value;
					this.SendPropertyChanged("Count");
					this.OnCountChanged();
				}
			}
		}
		
		[Column(Storage="_DaysSinceInitiallyDiscovered", DbType="SmallInt")]
		public System.Nullable<short> DaysSinceInitiallyDiscovered
		{
			get
			{
				return this._DaysSinceInitiallyDiscovered;
			}
			set
			{
				if ((this._DaysSinceInitiallyDiscovered != value))
				{
					this.OnDaysSinceInitiallyDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._DaysSinceInitiallyDiscovered = value;
					this.SendPropertyChanged("DaysSinceInitiallyDiscovered");
					this.OnDaysSinceInitiallyDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_DaysSinceLastDiscovered", DbType="SmallInt NOT NULL")]
		public short DaysSinceLastDiscovered
		{
			get
			{
				return this._DaysSinceLastDiscovered;
			}
			set
			{
				if ((this._DaysSinceLastDiscovered != value))
				{
					this.OnDaysSinceLastDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._DaysSinceLastDiscovered = value;
					this.SendPropertyChanged("DaysSinceLastDiscovered");
					this.OnDaysSinceLastDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_Strength", DbType="Float")]
		public System.Nullable<double> Strength
		{
			get
			{
				return this._Strength;
			}
			set
			{
				if ((this._Strength != value))
				{
					this.OnStrengthChanging(value);
					this.SendPropertyChanging();
					this._Strength = value;
					this.SendPropertyChanged("Strength");
					this.OnStrengthChanged();
				}
			}
		}
		
		[Column(Storage="_Rank", DbType="Int NOT NULL")]
		public int Rank
		{
			get
			{
				return this._Rank;
			}
			set
			{
				if ((this._Rank != value))
				{
					this.OnRankChanging(value);
					this.SendPropertyChanging();
					this._Rank = value;
					this.SendPropertyChanged("Rank");
					this.OnRankChanged();
				}
			}
		}
		
		[Column(Storage="_DenseRank", DbType="Int NOT NULL")]
		public int DenseRank
		{
			get
			{
				return this._DenseRank;
			}
			set
			{
				if ((this._DenseRank != value))
				{
					this.OnDenseRankChanging(value);
					this.SendPropertyChanging();
					this._DenseRank = value;
					this.SendPropertyChanged("DenseRank");
					this.OnDenseRankChanged();
				}
			}
		}
		
		[Column(Storage="_NTile", DbType="TinyInt NOT NULL")]
		public byte NTile
		{
			get
			{
				return this._NTile;
			}
			set
			{
				if ((this._NTile != value))
				{
					this.OnNTileChanging(value);
					this.SendPropertyChanging();
					this._NTile = value;
					this.SendPropertyChanged("NTile");
					this.OnNTileChanged();
				}
			}
		}
		
		[Association(Name="Image_Images_MOST_POPULAR_ABSOLUTEURIS_BY_HOST", Storage="_Image", ThisKey="ImageID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Image Image
		{
			get
			{
				return this._Image.Entity;
			}
			set
			{
				Image previousValue = this._Image.Entity;
				if (((previousValue != value) 
							|| (this._Image.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Image.Entity = null;
						previousValue.Images_MOST_POPULAR_ABSOLUTEURIS_BY_HOST = null;
					}
					this._Image.Entity = value;
					if ((value != null))
					{
						value.Images_MOST_POPULAR_ABSOLUTEURIS_BY_HOST = this;
						this._ImageID = value.ID;
					}
					else
					{
						this._ImageID = default(long);
					}
					this.SendPropertyChanged("Image");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="rpt.Images_MOST_POPULAR_ABSOLUTEURIS_BY_SCHEMES")]
	public partial class Images_MOST_POPULAR_ABSOLUTEURIS_BY_SCHEME : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RowNumber;
		
		private System.Nullable<System.DateTime> _InitiallyDiscovered;
		
		private System.DateTime _LastDiscovered;
		
		private long _ImageID;
		
		private int _Count;
		
		private System.Nullable<short> _DaysSinceInitiallyDiscovered;
		
		private short _DaysSinceLastDiscovered;
		
		private System.Nullable<double> _Strength;
		
		private int _Rank;
		
		private int _DenseRank;
		
		private byte _NTile;
		
		private EntityRef<Image> _Image;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRowNumberChanging(int value);
    partial void OnRowNumberChanged();
    partial void OnInitiallyDiscoveredChanging(System.Nullable<System.DateTime> value);
    partial void OnInitiallyDiscoveredChanged();
    partial void OnLastDiscoveredChanging(System.DateTime value);
    partial void OnLastDiscoveredChanged();
    partial void OnImageIDChanging(long value);
    partial void OnImageIDChanged();
    partial void OnCountChanging(int value);
    partial void OnCountChanged();
    partial void OnDaysSinceInitiallyDiscoveredChanging(System.Nullable<short> value);
    partial void OnDaysSinceInitiallyDiscoveredChanged();
    partial void OnDaysSinceLastDiscoveredChanging(short value);
    partial void OnDaysSinceLastDiscoveredChanged();
    partial void OnStrengthChanging(System.Nullable<double> value);
    partial void OnStrengthChanged();
    partial void OnRankChanging(int value);
    partial void OnRankChanged();
    partial void OnDenseRankChanging(int value);
    partial void OnDenseRankChanged();
    partial void OnNTileChanging(byte value);
    partial void OnNTileChanged();
    #endregion
		
		public Images_MOST_POPULAR_ABSOLUTEURIS_BY_SCHEME()
		{
			this._Image = default(EntityRef<Image>);
			OnCreated();
		}
		
		[Column(Storage="_RowNumber", DbType="Int NOT NULL")]
		public int RowNumber
		{
			get
			{
				return this._RowNumber;
			}
			set
			{
				if ((this._RowNumber != value))
				{
					this.OnRowNumberChanging(value);
					this.SendPropertyChanging();
					this._RowNumber = value;
					this.SendPropertyChanged("RowNumber");
					this.OnRowNumberChanged();
				}
			}
		}
		
		[Column(Storage="_InitiallyDiscovered", DbType="DateTime")]
		public System.Nullable<System.DateTime> InitiallyDiscovered
		{
			get
			{
				return this._InitiallyDiscovered;
			}
			set
			{
				if ((this._InitiallyDiscovered != value))
				{
					this.OnInitiallyDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._InitiallyDiscovered = value;
					this.SendPropertyChanged("InitiallyDiscovered");
					this.OnInitiallyDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_LastDiscovered", DbType="DateTime NOT NULL")]
		public System.DateTime LastDiscovered
		{
			get
			{
				return this._LastDiscovered;
			}
			set
			{
				if ((this._LastDiscovered != value))
				{
					this.OnLastDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._LastDiscovered = value;
					this.SendPropertyChanged("LastDiscovered");
					this.OnLastDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_ImageID", DbType="BigInt NOT NULL", IsPrimaryKey=true)]
		public long ImageID
		{
			get
			{
				return this._ImageID;
			}
			set
			{
				if ((this._ImageID != value))
				{
					if (this._Image.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnImageIDChanging(value);
					this.SendPropertyChanging();
					this._ImageID = value;
					this.SendPropertyChanged("ImageID");
					this.OnImageIDChanged();
				}
			}
		}
		
		[Column(Storage="_Count", DbType="Int NOT NULL")]
		public int Count
		{
			get
			{
				return this._Count;
			}
			set
			{
				if ((this._Count != value))
				{
					this.OnCountChanging(value);
					this.SendPropertyChanging();
					this._Count = value;
					this.SendPropertyChanged("Count");
					this.OnCountChanged();
				}
			}
		}
		
		[Column(Storage="_DaysSinceInitiallyDiscovered", DbType="SmallInt")]
		public System.Nullable<short> DaysSinceInitiallyDiscovered
		{
			get
			{
				return this._DaysSinceInitiallyDiscovered;
			}
			set
			{
				if ((this._DaysSinceInitiallyDiscovered != value))
				{
					this.OnDaysSinceInitiallyDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._DaysSinceInitiallyDiscovered = value;
					this.SendPropertyChanged("DaysSinceInitiallyDiscovered");
					this.OnDaysSinceInitiallyDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_DaysSinceLastDiscovered", DbType="SmallInt NOT NULL")]
		public short DaysSinceLastDiscovered
		{
			get
			{
				return this._DaysSinceLastDiscovered;
			}
			set
			{
				if ((this._DaysSinceLastDiscovered != value))
				{
					this.OnDaysSinceLastDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._DaysSinceLastDiscovered = value;
					this.SendPropertyChanged("DaysSinceLastDiscovered");
					this.OnDaysSinceLastDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_Strength", DbType="Float")]
		public System.Nullable<double> Strength
		{
			get
			{
				return this._Strength;
			}
			set
			{
				if ((this._Strength != value))
				{
					this.OnStrengthChanging(value);
					this.SendPropertyChanging();
					this._Strength = value;
					this.SendPropertyChanged("Strength");
					this.OnStrengthChanged();
				}
			}
		}
		
		[Column(Storage="_Rank", DbType="Int NOT NULL")]
		public int Rank
		{
			get
			{
				return this._Rank;
			}
			set
			{
				if ((this._Rank != value))
				{
					this.OnRankChanging(value);
					this.SendPropertyChanging();
					this._Rank = value;
					this.SendPropertyChanged("Rank");
					this.OnRankChanged();
				}
			}
		}
		
		[Column(Storage="_DenseRank", DbType="Int NOT NULL")]
		public int DenseRank
		{
			get
			{
				return this._DenseRank;
			}
			set
			{
				if ((this._DenseRank != value))
				{
					this.OnDenseRankChanging(value);
					this.SendPropertyChanging();
					this._DenseRank = value;
					this.SendPropertyChanged("DenseRank");
					this.OnDenseRankChanged();
				}
			}
		}
		
		[Column(Storage="_NTile", DbType="TinyInt NOT NULL")]
		public byte NTile
		{
			get
			{
				return this._NTile;
			}
			set
			{
				if ((this._NTile != value))
				{
					this.OnNTileChanging(value);
					this.SendPropertyChanging();
					this._NTile = value;
					this.SendPropertyChanged("NTile");
					this.OnNTileChanged();
				}
			}
		}
		
		[Association(Name="Image_Images_MOST_POPULAR_ABSOLUTEURIS_BY_SCHEME", Storage="_Image", ThisKey="ImageID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Image Image
		{
			get
			{
				return this._Image.Entity;
			}
			set
			{
				Image previousValue = this._Image.Entity;
				if (((previousValue != value) 
							|| (this._Image.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Image.Entity = null;
						previousValue.Images_MOST_POPULAR_ABSOLUTEURIS_BY_SCHEME = null;
					}
					this._Image.Entity = value;
					if ((value != null))
					{
						value.Images_MOST_POPULAR_ABSOLUTEURIS_BY_SCHEME = this;
						this._ImageID = value.ID;
					}
					else
					{
						this._ImageID = default(long);
					}
					this.SendPropertyChanged("Image");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="rpt.Images_MOST_POPULAR_DOMAINS_BY_ABSOLUTEURIS")]
	public partial class Images_MOST_POPULAR_DOMAINS_BY_ABSOLUTEURI : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RowNumber;
		
		private System.Nullable<System.DateTime> _InitiallyDiscovered;
		
		private System.DateTime _LastDiscovered;
		
		private int _DomainID;
		
		private int _Count;
		
		private System.Nullable<short> _DaysSinceInitiallyDiscovered;
		
		private short _DaysSinceLastDiscovered;
		
		private System.Nullable<double> _Strength;
		
		private int _Rank;
		
		private int _DenseRank;
		
		private short _NTile;
		
		private EntityRef<Domain> _Domain;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRowNumberChanging(int value);
    partial void OnRowNumberChanged();
    partial void OnInitiallyDiscoveredChanging(System.Nullable<System.DateTime> value);
    partial void OnInitiallyDiscoveredChanged();
    partial void OnLastDiscoveredChanging(System.DateTime value);
    partial void OnLastDiscoveredChanged();
    partial void OnDomainIDChanging(int value);
    partial void OnDomainIDChanged();
    partial void OnCountChanging(int value);
    partial void OnCountChanged();
    partial void OnDaysSinceInitiallyDiscoveredChanging(System.Nullable<short> value);
    partial void OnDaysSinceInitiallyDiscoveredChanged();
    partial void OnDaysSinceLastDiscoveredChanging(short value);
    partial void OnDaysSinceLastDiscoveredChanged();
    partial void OnStrengthChanging(System.Nullable<double> value);
    partial void OnStrengthChanged();
    partial void OnRankChanging(int value);
    partial void OnRankChanged();
    partial void OnDenseRankChanging(int value);
    partial void OnDenseRankChanged();
    partial void OnNTileChanging(short value);
    partial void OnNTileChanged();
    #endregion
		
		public Images_MOST_POPULAR_DOMAINS_BY_ABSOLUTEURI()
		{
			this._Domain = default(EntityRef<Domain>);
			OnCreated();
		}
		
		[Column(Storage="_RowNumber", DbType="Int NOT NULL")]
		public int RowNumber
		{
			get
			{
				return this._RowNumber;
			}
			set
			{
				if ((this._RowNumber != value))
				{
					this.OnRowNumberChanging(value);
					this.SendPropertyChanging();
					this._RowNumber = value;
					this.SendPropertyChanged("RowNumber");
					this.OnRowNumberChanged();
				}
			}
		}
		
		[Column(Storage="_InitiallyDiscovered", DbType="DateTime")]
		public System.Nullable<System.DateTime> InitiallyDiscovered
		{
			get
			{
				return this._InitiallyDiscovered;
			}
			set
			{
				if ((this._InitiallyDiscovered != value))
				{
					this.OnInitiallyDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._InitiallyDiscovered = value;
					this.SendPropertyChanged("InitiallyDiscovered");
					this.OnInitiallyDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_LastDiscovered", DbType="DateTime NOT NULL")]
		public System.DateTime LastDiscovered
		{
			get
			{
				return this._LastDiscovered;
			}
			set
			{
				if ((this._LastDiscovered != value))
				{
					this.OnLastDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._LastDiscovered = value;
					this.SendPropertyChanged("LastDiscovered");
					this.OnLastDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_DomainID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int DomainID
		{
			get
			{
				return this._DomainID;
			}
			set
			{
				if ((this._DomainID != value))
				{
					if (this._Domain.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDomainIDChanging(value);
					this.SendPropertyChanging();
					this._DomainID = value;
					this.SendPropertyChanged("DomainID");
					this.OnDomainIDChanged();
				}
			}
		}
		
		[Column(Storage="_Count", DbType="Int NOT NULL")]
		public int Count
		{
			get
			{
				return this._Count;
			}
			set
			{
				if ((this._Count != value))
				{
					this.OnCountChanging(value);
					this.SendPropertyChanging();
					this._Count = value;
					this.SendPropertyChanged("Count");
					this.OnCountChanged();
				}
			}
		}
		
		[Column(Storage="_DaysSinceInitiallyDiscovered", DbType="SmallInt")]
		public System.Nullable<short> DaysSinceInitiallyDiscovered
		{
			get
			{
				return this._DaysSinceInitiallyDiscovered;
			}
			set
			{
				if ((this._DaysSinceInitiallyDiscovered != value))
				{
					this.OnDaysSinceInitiallyDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._DaysSinceInitiallyDiscovered = value;
					this.SendPropertyChanged("DaysSinceInitiallyDiscovered");
					this.OnDaysSinceInitiallyDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_DaysSinceLastDiscovered", DbType="SmallInt NOT NULL")]
		public short DaysSinceLastDiscovered
		{
			get
			{
				return this._DaysSinceLastDiscovered;
			}
			set
			{
				if ((this._DaysSinceLastDiscovered != value))
				{
					this.OnDaysSinceLastDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._DaysSinceLastDiscovered = value;
					this.SendPropertyChanged("DaysSinceLastDiscovered");
					this.OnDaysSinceLastDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_Strength", DbType="Float")]
		public System.Nullable<double> Strength
		{
			get
			{
				return this._Strength;
			}
			set
			{
				if ((this._Strength != value))
				{
					this.OnStrengthChanging(value);
					this.SendPropertyChanging();
					this._Strength = value;
					this.SendPropertyChanged("Strength");
					this.OnStrengthChanged();
				}
			}
		}
		
		[Column(Storage="_Rank", DbType="Int NOT NULL")]
		public int Rank
		{
			get
			{
				return this._Rank;
			}
			set
			{
				if ((this._Rank != value))
				{
					this.OnRankChanging(value);
					this.SendPropertyChanging();
					this._Rank = value;
					this.SendPropertyChanged("Rank");
					this.OnRankChanged();
				}
			}
		}
		
		[Column(Storage="_DenseRank", DbType="Int NOT NULL")]
		public int DenseRank
		{
			get
			{
				return this._DenseRank;
			}
			set
			{
				if ((this._DenseRank != value))
				{
					this.OnDenseRankChanging(value);
					this.SendPropertyChanging();
					this._DenseRank = value;
					this.SendPropertyChanged("DenseRank");
					this.OnDenseRankChanged();
				}
			}
		}
		
		[Column(Storage="_NTile", DbType="SmallInt NOT NULL")]
		public short NTile
		{
			get
			{
				return this._NTile;
			}
			set
			{
				if ((this._NTile != value))
				{
					this.OnNTileChanging(value);
					this.SendPropertyChanging();
					this._NTile = value;
					this.SendPropertyChanged("NTile");
					this.OnNTileChanged();
				}
			}
		}
		
		[Association(Name="Domain_Images_MOST_POPULAR_DOMAINS_BY_ABSOLUTEURI", Storage="_Domain", ThisKey="DomainID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Domain Domain
		{
			get
			{
				return this._Domain.Entity;
			}
			set
			{
				Domain previousValue = this._Domain.Entity;
				if (((previousValue != value) 
							|| (this._Domain.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Domain.Entity = null;
						previousValue.Images_MOST_POPULAR_DOMAINS_BY_ABSOLUTEURI = null;
					}
					this._Domain.Entity = value;
					if ((value != null))
					{
						value.Images_MOST_POPULAR_DOMAINS_BY_ABSOLUTEURI = this;
						this._DomainID = value.ID;
					}
					else
					{
						this._DomainID = default(int);
					}
					this.SendPropertyChanged("Domain");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="rpt.Images_MOST_POPULAR_DOMAINS_BY_DOMAINS")]
	public partial class Images_MOST_POPULAR_DOMAINS_BY_DOMAIN : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RowNumber;
		
		private System.Nullable<System.DateTime> _InitiallyDiscovered;
		
		private System.DateTime _LastDiscovered;
		
		private int _DomainID;
		
		private int _Count;
		
		private System.Nullable<short> _DaysSinceInitiallyDiscovered;
		
		private short _DaysSinceLastDiscovered;
		
		private System.Nullable<double> _Strength;
		
		private int _Rank;
		
		private int _DenseRank;
		
		private byte _NTile;
		
		private EntityRef<Domain> _Domain;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRowNumberChanging(int value);
    partial void OnRowNumberChanged();
    partial void OnInitiallyDiscoveredChanging(System.Nullable<System.DateTime> value);
    partial void OnInitiallyDiscoveredChanged();
    partial void OnLastDiscoveredChanging(System.DateTime value);
    partial void OnLastDiscoveredChanged();
    partial void OnDomainIDChanging(int value);
    partial void OnDomainIDChanged();
    partial void OnCountChanging(int value);
    partial void OnCountChanged();
    partial void OnDaysSinceInitiallyDiscoveredChanging(System.Nullable<short> value);
    partial void OnDaysSinceInitiallyDiscoveredChanged();
    partial void OnDaysSinceLastDiscoveredChanging(short value);
    partial void OnDaysSinceLastDiscoveredChanged();
    partial void OnStrengthChanging(System.Nullable<double> value);
    partial void OnStrengthChanged();
    partial void OnRankChanging(int value);
    partial void OnRankChanged();
    partial void OnDenseRankChanging(int value);
    partial void OnDenseRankChanged();
    partial void OnNTileChanging(byte value);
    partial void OnNTileChanged();
    #endregion
		
		public Images_MOST_POPULAR_DOMAINS_BY_DOMAIN()
		{
			this._Domain = default(EntityRef<Domain>);
			OnCreated();
		}
		
		[Column(Storage="_RowNumber", DbType="Int NOT NULL")]
		public int RowNumber
		{
			get
			{
				return this._RowNumber;
			}
			set
			{
				if ((this._RowNumber != value))
				{
					this.OnRowNumberChanging(value);
					this.SendPropertyChanging();
					this._RowNumber = value;
					this.SendPropertyChanged("RowNumber");
					this.OnRowNumberChanged();
				}
			}
		}
		
		[Column(Storage="_InitiallyDiscovered", DbType="DateTime")]
		public System.Nullable<System.DateTime> InitiallyDiscovered
		{
			get
			{
				return this._InitiallyDiscovered;
			}
			set
			{
				if ((this._InitiallyDiscovered != value))
				{
					this.OnInitiallyDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._InitiallyDiscovered = value;
					this.SendPropertyChanged("InitiallyDiscovered");
					this.OnInitiallyDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_LastDiscovered", DbType="DateTime NOT NULL")]
		public System.DateTime LastDiscovered
		{
			get
			{
				return this._LastDiscovered;
			}
			set
			{
				if ((this._LastDiscovered != value))
				{
					this.OnLastDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._LastDiscovered = value;
					this.SendPropertyChanged("LastDiscovered");
					this.OnLastDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_DomainID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int DomainID
		{
			get
			{
				return this._DomainID;
			}
			set
			{
				if ((this._DomainID != value))
				{
					if (this._Domain.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDomainIDChanging(value);
					this.SendPropertyChanging();
					this._DomainID = value;
					this.SendPropertyChanged("DomainID");
					this.OnDomainIDChanged();
				}
			}
		}
		
		[Column(Storage="_Count", DbType="Int NOT NULL")]
		public int Count
		{
			get
			{
				return this._Count;
			}
			set
			{
				if ((this._Count != value))
				{
					this.OnCountChanging(value);
					this.SendPropertyChanging();
					this._Count = value;
					this.SendPropertyChanged("Count");
					this.OnCountChanged();
				}
			}
		}
		
		[Column(Storage="_DaysSinceInitiallyDiscovered", DbType="SmallInt")]
		public System.Nullable<short> DaysSinceInitiallyDiscovered
		{
			get
			{
				return this._DaysSinceInitiallyDiscovered;
			}
			set
			{
				if ((this._DaysSinceInitiallyDiscovered != value))
				{
					this.OnDaysSinceInitiallyDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._DaysSinceInitiallyDiscovered = value;
					this.SendPropertyChanged("DaysSinceInitiallyDiscovered");
					this.OnDaysSinceInitiallyDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_DaysSinceLastDiscovered", DbType="SmallInt NOT NULL")]
		public short DaysSinceLastDiscovered
		{
			get
			{
				return this._DaysSinceLastDiscovered;
			}
			set
			{
				if ((this._DaysSinceLastDiscovered != value))
				{
					this.OnDaysSinceLastDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._DaysSinceLastDiscovered = value;
					this.SendPropertyChanged("DaysSinceLastDiscovered");
					this.OnDaysSinceLastDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_Strength", DbType="Float")]
		public System.Nullable<double> Strength
		{
			get
			{
				return this._Strength;
			}
			set
			{
				if ((this._Strength != value))
				{
					this.OnStrengthChanging(value);
					this.SendPropertyChanging();
					this._Strength = value;
					this.SendPropertyChanged("Strength");
					this.OnStrengthChanged();
				}
			}
		}
		
		[Column(Storage="_Rank", DbType="Int NOT NULL")]
		public int Rank
		{
			get
			{
				return this._Rank;
			}
			set
			{
				if ((this._Rank != value))
				{
					this.OnRankChanging(value);
					this.SendPropertyChanging();
					this._Rank = value;
					this.SendPropertyChanged("Rank");
					this.OnRankChanged();
				}
			}
		}
		
		[Column(Storage="_DenseRank", DbType="Int NOT NULL")]
		public int DenseRank
		{
			get
			{
				return this._DenseRank;
			}
			set
			{
				if ((this._DenseRank != value))
				{
					this.OnDenseRankChanging(value);
					this.SendPropertyChanging();
					this._DenseRank = value;
					this.SendPropertyChanged("DenseRank");
					this.OnDenseRankChanged();
				}
			}
		}
		
		[Column(Storage="_NTile", DbType="TinyInt NOT NULL")]
		public byte NTile
		{
			get
			{
				return this._NTile;
			}
			set
			{
				if ((this._NTile != value))
				{
					this.OnNTileChanging(value);
					this.SendPropertyChanging();
					this._NTile = value;
					this.SendPropertyChanged("NTile");
					this.OnNTileChanged();
				}
			}
		}
		
		[Association(Name="Domain_Images_MOST_POPULAR_DOMAINS_BY_DOMAIN", Storage="_Domain", ThisKey="DomainID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Domain Domain
		{
			get
			{
				return this._Domain.Entity;
			}
			set
			{
				Domain previousValue = this._Domain.Entity;
				if (((previousValue != value) 
							|| (this._Domain.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Domain.Entity = null;
						previousValue.Images_MOST_POPULAR_DOMAINS_BY_DOMAIN = null;
					}
					this._Domain.Entity = value;
					if ((value != null))
					{
						value.Images_MOST_POPULAR_DOMAINS_BY_DOMAIN = this;
						this._DomainID = value.ID;
					}
					else
					{
						this._DomainID = default(int);
					}
					this.SendPropertyChanged("Domain");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="rpt.Images_MOST_POPULAR_DOMAINS_BY_EXTENSIONS")]
	public partial class Images_MOST_POPULAR_DOMAINS_BY_EXTENSION : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RowNumber;
		
		private System.Nullable<System.DateTime> _InitiallyDiscovered;
		
		private System.DateTime _LastDiscovered;
		
		private int _DomainID;
		
		private int _Count;
		
		private System.Nullable<short> _DaysSinceInitiallyDiscovered;
		
		private short _DaysSinceLastDiscovered;
		
		private System.Nullable<double> _Strength;
		
		private int _Rank;
		
		private int _DenseRank;
		
		private byte _NTile;
		
		private EntityRef<Domain> _Domain;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRowNumberChanging(int value);
    partial void OnRowNumberChanged();
    partial void OnInitiallyDiscoveredChanging(System.Nullable<System.DateTime> value);
    partial void OnInitiallyDiscoveredChanged();
    partial void OnLastDiscoveredChanging(System.DateTime value);
    partial void OnLastDiscoveredChanged();
    partial void OnDomainIDChanging(int value);
    partial void OnDomainIDChanged();
    partial void OnCountChanging(int value);
    partial void OnCountChanged();
    partial void OnDaysSinceInitiallyDiscoveredChanging(System.Nullable<short> value);
    partial void OnDaysSinceInitiallyDiscoveredChanged();
    partial void OnDaysSinceLastDiscoveredChanging(short value);
    partial void OnDaysSinceLastDiscoveredChanged();
    partial void OnStrengthChanging(System.Nullable<double> value);
    partial void OnStrengthChanged();
    partial void OnRankChanging(int value);
    partial void OnRankChanged();
    partial void OnDenseRankChanging(int value);
    partial void OnDenseRankChanged();
    partial void OnNTileChanging(byte value);
    partial void OnNTileChanged();
    #endregion
		
		public Images_MOST_POPULAR_DOMAINS_BY_EXTENSION()
		{
			this._Domain = default(EntityRef<Domain>);
			OnCreated();
		}
		
		[Column(Storage="_RowNumber", DbType="Int NOT NULL")]
		public int RowNumber
		{
			get
			{
				return this._RowNumber;
			}
			set
			{
				if ((this._RowNumber != value))
				{
					this.OnRowNumberChanging(value);
					this.SendPropertyChanging();
					this._RowNumber = value;
					this.SendPropertyChanged("RowNumber");
					this.OnRowNumberChanged();
				}
			}
		}
		
		[Column(Storage="_InitiallyDiscovered", DbType="DateTime")]
		public System.Nullable<System.DateTime> InitiallyDiscovered
		{
			get
			{
				return this._InitiallyDiscovered;
			}
			set
			{
				if ((this._InitiallyDiscovered != value))
				{
					this.OnInitiallyDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._InitiallyDiscovered = value;
					this.SendPropertyChanged("InitiallyDiscovered");
					this.OnInitiallyDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_LastDiscovered", DbType="DateTime NOT NULL")]
		public System.DateTime LastDiscovered
		{
			get
			{
				return this._LastDiscovered;
			}
			set
			{
				if ((this._LastDiscovered != value))
				{
					this.OnLastDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._LastDiscovered = value;
					this.SendPropertyChanged("LastDiscovered");
					this.OnLastDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_DomainID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int DomainID
		{
			get
			{
				return this._DomainID;
			}
			set
			{
				if ((this._DomainID != value))
				{
					if (this._Domain.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDomainIDChanging(value);
					this.SendPropertyChanging();
					this._DomainID = value;
					this.SendPropertyChanged("DomainID");
					this.OnDomainIDChanged();
				}
			}
		}
		
		[Column(Storage="_Count", DbType="Int NOT NULL")]
		public int Count
		{
			get
			{
				return this._Count;
			}
			set
			{
				if ((this._Count != value))
				{
					this.OnCountChanging(value);
					this.SendPropertyChanging();
					this._Count = value;
					this.SendPropertyChanged("Count");
					this.OnCountChanged();
				}
			}
		}
		
		[Column(Storage="_DaysSinceInitiallyDiscovered", DbType="SmallInt")]
		public System.Nullable<short> DaysSinceInitiallyDiscovered
		{
			get
			{
				return this._DaysSinceInitiallyDiscovered;
			}
			set
			{
				if ((this._DaysSinceInitiallyDiscovered != value))
				{
					this.OnDaysSinceInitiallyDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._DaysSinceInitiallyDiscovered = value;
					this.SendPropertyChanged("DaysSinceInitiallyDiscovered");
					this.OnDaysSinceInitiallyDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_DaysSinceLastDiscovered", DbType="SmallInt NOT NULL")]
		public short DaysSinceLastDiscovered
		{
			get
			{
				return this._DaysSinceLastDiscovered;
			}
			set
			{
				if ((this._DaysSinceLastDiscovered != value))
				{
					this.OnDaysSinceLastDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._DaysSinceLastDiscovered = value;
					this.SendPropertyChanged("DaysSinceLastDiscovered");
					this.OnDaysSinceLastDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_Strength", DbType="Float")]
		public System.Nullable<double> Strength
		{
			get
			{
				return this._Strength;
			}
			set
			{
				if ((this._Strength != value))
				{
					this.OnStrengthChanging(value);
					this.SendPropertyChanging();
					this._Strength = value;
					this.SendPropertyChanged("Strength");
					this.OnStrengthChanged();
				}
			}
		}
		
		[Column(Storage="_Rank", DbType="Int NOT NULL")]
		public int Rank
		{
			get
			{
				return this._Rank;
			}
			set
			{
				if ((this._Rank != value))
				{
					this.OnRankChanging(value);
					this.SendPropertyChanging();
					this._Rank = value;
					this.SendPropertyChanged("Rank");
					this.OnRankChanged();
				}
			}
		}
		
		[Column(Storage="_DenseRank", DbType="Int NOT NULL")]
		public int DenseRank
		{
			get
			{
				return this._DenseRank;
			}
			set
			{
				if ((this._DenseRank != value))
				{
					this.OnDenseRankChanging(value);
					this.SendPropertyChanging();
					this._DenseRank = value;
					this.SendPropertyChanged("DenseRank");
					this.OnDenseRankChanged();
				}
			}
		}
		
		[Column(Storage="_NTile", DbType="TinyInt NOT NULL")]
		public byte NTile
		{
			get
			{
				return this._NTile;
			}
			set
			{
				if ((this._NTile != value))
				{
					this.OnNTileChanging(value);
					this.SendPropertyChanging();
					this._NTile = value;
					this.SendPropertyChanged("NTile");
					this.OnNTileChanged();
				}
			}
		}
		
		[Association(Name="Domain_Images_MOST_POPULAR_DOMAINS_BY_EXTENSION", Storage="_Domain", ThisKey="DomainID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Domain Domain
		{
			get
			{
				return this._Domain.Entity;
			}
			set
			{
				Domain previousValue = this._Domain.Entity;
				if (((previousValue != value) 
							|| (this._Domain.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Domain.Entity = null;
						previousValue.Images_MOST_POPULAR_DOMAINS_BY_EXTENSION = null;
					}
					this._Domain.Entity = value;
					if ((value != null))
					{
						value.Images_MOST_POPULAR_DOMAINS_BY_EXTENSION = this;
						this._DomainID = value.ID;
					}
					else
					{
						this._DomainID = default(int);
					}
					this.SendPropertyChanged("Domain");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="rpt.Images_MOST_POPULAR_DOMAINS_BY_HOSTS")]
	public partial class Images_MOST_POPULAR_DOMAINS_BY_HOST : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RowNumber;
		
		private System.Nullable<System.DateTime> _InitiallyDiscovered;
		
		private System.DateTime _LastDiscovered;
		
		private int _DomainID;
		
		private int _Count;
		
		private System.Nullable<short> _DaysSinceInitiallyDiscovered;
		
		private short _DaysSinceLastDiscovered;
		
		private System.Nullable<double> _Strength;
		
		private int _Rank;
		
		private int _DenseRank;
		
		private byte _NTile;
		
		private EntityRef<Domain> _Domain;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRowNumberChanging(int value);
    partial void OnRowNumberChanged();
    partial void OnInitiallyDiscoveredChanging(System.Nullable<System.DateTime> value);
    partial void OnInitiallyDiscoveredChanged();
    partial void OnLastDiscoveredChanging(System.DateTime value);
    partial void OnLastDiscoveredChanged();
    partial void OnDomainIDChanging(int value);
    partial void OnDomainIDChanged();
    partial void OnCountChanging(int value);
    partial void OnCountChanged();
    partial void OnDaysSinceInitiallyDiscoveredChanging(System.Nullable<short> value);
    partial void OnDaysSinceInitiallyDiscoveredChanged();
    partial void OnDaysSinceLastDiscoveredChanging(short value);
    partial void OnDaysSinceLastDiscoveredChanged();
    partial void OnStrengthChanging(System.Nullable<double> value);
    partial void OnStrengthChanged();
    partial void OnRankChanging(int value);
    partial void OnRankChanged();
    partial void OnDenseRankChanging(int value);
    partial void OnDenseRankChanged();
    partial void OnNTileChanging(byte value);
    partial void OnNTileChanged();
    #endregion
		
		public Images_MOST_POPULAR_DOMAINS_BY_HOST()
		{
			this._Domain = default(EntityRef<Domain>);
			OnCreated();
		}
		
		[Column(Storage="_RowNumber", DbType="Int NOT NULL")]
		public int RowNumber
		{
			get
			{
				return this._RowNumber;
			}
			set
			{
				if ((this._RowNumber != value))
				{
					this.OnRowNumberChanging(value);
					this.SendPropertyChanging();
					this._RowNumber = value;
					this.SendPropertyChanged("RowNumber");
					this.OnRowNumberChanged();
				}
			}
		}
		
		[Column(Storage="_InitiallyDiscovered", DbType="DateTime")]
		public System.Nullable<System.DateTime> InitiallyDiscovered
		{
			get
			{
				return this._InitiallyDiscovered;
			}
			set
			{
				if ((this._InitiallyDiscovered != value))
				{
					this.OnInitiallyDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._InitiallyDiscovered = value;
					this.SendPropertyChanged("InitiallyDiscovered");
					this.OnInitiallyDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_LastDiscovered", DbType="DateTime NOT NULL")]
		public System.DateTime LastDiscovered
		{
			get
			{
				return this._LastDiscovered;
			}
			set
			{
				if ((this._LastDiscovered != value))
				{
					this.OnLastDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._LastDiscovered = value;
					this.SendPropertyChanged("LastDiscovered");
					this.OnLastDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_DomainID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int DomainID
		{
			get
			{
				return this._DomainID;
			}
			set
			{
				if ((this._DomainID != value))
				{
					if (this._Domain.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDomainIDChanging(value);
					this.SendPropertyChanging();
					this._DomainID = value;
					this.SendPropertyChanged("DomainID");
					this.OnDomainIDChanged();
				}
			}
		}
		
		[Column(Storage="_Count", DbType="Int NOT NULL")]
		public int Count
		{
			get
			{
				return this._Count;
			}
			set
			{
				if ((this._Count != value))
				{
					this.OnCountChanging(value);
					this.SendPropertyChanging();
					this._Count = value;
					this.SendPropertyChanged("Count");
					this.OnCountChanged();
				}
			}
		}
		
		[Column(Storage="_DaysSinceInitiallyDiscovered", DbType="SmallInt")]
		public System.Nullable<short> DaysSinceInitiallyDiscovered
		{
			get
			{
				return this._DaysSinceInitiallyDiscovered;
			}
			set
			{
				if ((this._DaysSinceInitiallyDiscovered != value))
				{
					this.OnDaysSinceInitiallyDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._DaysSinceInitiallyDiscovered = value;
					this.SendPropertyChanged("DaysSinceInitiallyDiscovered");
					this.OnDaysSinceInitiallyDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_DaysSinceLastDiscovered", DbType="SmallInt NOT NULL")]
		public short DaysSinceLastDiscovered
		{
			get
			{
				return this._DaysSinceLastDiscovered;
			}
			set
			{
				if ((this._DaysSinceLastDiscovered != value))
				{
					this.OnDaysSinceLastDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._DaysSinceLastDiscovered = value;
					this.SendPropertyChanged("DaysSinceLastDiscovered");
					this.OnDaysSinceLastDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_Strength", DbType="Float")]
		public System.Nullable<double> Strength
		{
			get
			{
				return this._Strength;
			}
			set
			{
				if ((this._Strength != value))
				{
					this.OnStrengthChanging(value);
					this.SendPropertyChanging();
					this._Strength = value;
					this.SendPropertyChanged("Strength");
					this.OnStrengthChanged();
				}
			}
		}
		
		[Column(Storage="_Rank", DbType="Int NOT NULL")]
		public int Rank
		{
			get
			{
				return this._Rank;
			}
			set
			{
				if ((this._Rank != value))
				{
					this.OnRankChanging(value);
					this.SendPropertyChanging();
					this._Rank = value;
					this.SendPropertyChanged("Rank");
					this.OnRankChanged();
				}
			}
		}
		
		[Column(Storage="_DenseRank", DbType="Int NOT NULL")]
		public int DenseRank
		{
			get
			{
				return this._DenseRank;
			}
			set
			{
				if ((this._DenseRank != value))
				{
					this.OnDenseRankChanging(value);
					this.SendPropertyChanging();
					this._DenseRank = value;
					this.SendPropertyChanged("DenseRank");
					this.OnDenseRankChanged();
				}
			}
		}
		
		[Column(Storage="_NTile", DbType="TinyInt NOT NULL")]
		public byte NTile
		{
			get
			{
				return this._NTile;
			}
			set
			{
				if ((this._NTile != value))
				{
					this.OnNTileChanging(value);
					this.SendPropertyChanging();
					this._NTile = value;
					this.SendPropertyChanged("NTile");
					this.OnNTileChanged();
				}
			}
		}
		
		[Association(Name="Domain_Images_MOST_POPULAR_DOMAINS_BY_HOST", Storage="_Domain", ThisKey="DomainID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Domain Domain
		{
			get
			{
				return this._Domain.Entity;
			}
			set
			{
				Domain previousValue = this._Domain.Entity;
				if (((previousValue != value) 
							|| (this._Domain.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Domain.Entity = null;
						previousValue.Images_MOST_POPULAR_DOMAINS_BY_HOST = null;
					}
					this._Domain.Entity = value;
					if ((value != null))
					{
						value.Images_MOST_POPULAR_DOMAINS_BY_HOST = this;
						this._DomainID = value.ID;
					}
					else
					{
						this._DomainID = default(int);
					}
					this.SendPropertyChanged("Domain");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="rpt.Images_MOST_POPULAR_DOMAINS_BY_SCHEMES")]
	public partial class Images_MOST_POPULAR_DOMAINS_BY_SCHEME : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RowNumber;
		
		private System.Nullable<System.DateTime> _InitiallyDiscovered;
		
		private System.DateTime _LastDiscovered;
		
		private int _DomainID;
		
		private int _Count;
		
		private System.Nullable<short> _DaysSinceInitiallyDiscovered;
		
		private short _DaysSinceLastDiscovered;
		
		private System.Nullable<double> _Strength;
		
		private int _Rank;
		
		private int _DenseRank;
		
		private byte _NTile;
		
		private EntityRef<Domain> _Domain;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRowNumberChanging(int value);
    partial void OnRowNumberChanged();
    partial void OnInitiallyDiscoveredChanging(System.Nullable<System.DateTime> value);
    partial void OnInitiallyDiscoveredChanged();
    partial void OnLastDiscoveredChanging(System.DateTime value);
    partial void OnLastDiscoveredChanged();
    partial void OnDomainIDChanging(int value);
    partial void OnDomainIDChanged();
    partial void OnCountChanging(int value);
    partial void OnCountChanged();
    partial void OnDaysSinceInitiallyDiscoveredChanging(System.Nullable<short> value);
    partial void OnDaysSinceInitiallyDiscoveredChanged();
    partial void OnDaysSinceLastDiscoveredChanging(short value);
    partial void OnDaysSinceLastDiscoveredChanged();
    partial void OnStrengthChanging(System.Nullable<double> value);
    partial void OnStrengthChanged();
    partial void OnRankChanging(int value);
    partial void OnRankChanged();
    partial void OnDenseRankChanging(int value);
    partial void OnDenseRankChanged();
    partial void OnNTileChanging(byte value);
    partial void OnNTileChanged();
    #endregion
		
		public Images_MOST_POPULAR_DOMAINS_BY_SCHEME()
		{
			this._Domain = default(EntityRef<Domain>);
			OnCreated();
		}
		
		[Column(Storage="_RowNumber", DbType="Int NOT NULL")]
		public int RowNumber
		{
			get
			{
				return this._RowNumber;
			}
			set
			{
				if ((this._RowNumber != value))
				{
					this.OnRowNumberChanging(value);
					this.SendPropertyChanging();
					this._RowNumber = value;
					this.SendPropertyChanged("RowNumber");
					this.OnRowNumberChanged();
				}
			}
		}
		
		[Column(Storage="_InitiallyDiscovered", DbType="DateTime")]
		public System.Nullable<System.DateTime> InitiallyDiscovered
		{
			get
			{
				return this._InitiallyDiscovered;
			}
			set
			{
				if ((this._InitiallyDiscovered != value))
				{
					this.OnInitiallyDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._InitiallyDiscovered = value;
					this.SendPropertyChanged("InitiallyDiscovered");
					this.OnInitiallyDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_LastDiscovered", DbType="DateTime NOT NULL")]
		public System.DateTime LastDiscovered
		{
			get
			{
				return this._LastDiscovered;
			}
			set
			{
				if ((this._LastDiscovered != value))
				{
					this.OnLastDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._LastDiscovered = value;
					this.SendPropertyChanged("LastDiscovered");
					this.OnLastDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_DomainID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int DomainID
		{
			get
			{
				return this._DomainID;
			}
			set
			{
				if ((this._DomainID != value))
				{
					if (this._Domain.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDomainIDChanging(value);
					this.SendPropertyChanging();
					this._DomainID = value;
					this.SendPropertyChanged("DomainID");
					this.OnDomainIDChanged();
				}
			}
		}
		
		[Column(Storage="_Count", DbType="Int NOT NULL")]
		public int Count
		{
			get
			{
				return this._Count;
			}
			set
			{
				if ((this._Count != value))
				{
					this.OnCountChanging(value);
					this.SendPropertyChanging();
					this._Count = value;
					this.SendPropertyChanged("Count");
					this.OnCountChanged();
				}
			}
		}
		
		[Column(Storage="_DaysSinceInitiallyDiscovered", DbType="SmallInt")]
		public System.Nullable<short> DaysSinceInitiallyDiscovered
		{
			get
			{
				return this._DaysSinceInitiallyDiscovered;
			}
			set
			{
				if ((this._DaysSinceInitiallyDiscovered != value))
				{
					this.OnDaysSinceInitiallyDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._DaysSinceInitiallyDiscovered = value;
					this.SendPropertyChanged("DaysSinceInitiallyDiscovered");
					this.OnDaysSinceInitiallyDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_DaysSinceLastDiscovered", DbType="SmallInt NOT NULL")]
		public short DaysSinceLastDiscovered
		{
			get
			{
				return this._DaysSinceLastDiscovered;
			}
			set
			{
				if ((this._DaysSinceLastDiscovered != value))
				{
					this.OnDaysSinceLastDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._DaysSinceLastDiscovered = value;
					this.SendPropertyChanged("DaysSinceLastDiscovered");
					this.OnDaysSinceLastDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_Strength", DbType="Float")]
		public System.Nullable<double> Strength
		{
			get
			{
				return this._Strength;
			}
			set
			{
				if ((this._Strength != value))
				{
					this.OnStrengthChanging(value);
					this.SendPropertyChanging();
					this._Strength = value;
					this.SendPropertyChanged("Strength");
					this.OnStrengthChanged();
				}
			}
		}
		
		[Column(Storage="_Rank", DbType="Int NOT NULL")]
		public int Rank
		{
			get
			{
				return this._Rank;
			}
			set
			{
				if ((this._Rank != value))
				{
					this.OnRankChanging(value);
					this.SendPropertyChanging();
					this._Rank = value;
					this.SendPropertyChanged("Rank");
					this.OnRankChanged();
				}
			}
		}
		
		[Column(Storage="_DenseRank", DbType="Int NOT NULL")]
		public int DenseRank
		{
			get
			{
				return this._DenseRank;
			}
			set
			{
				if ((this._DenseRank != value))
				{
					this.OnDenseRankChanging(value);
					this.SendPropertyChanging();
					this._DenseRank = value;
					this.SendPropertyChanged("DenseRank");
					this.OnDenseRankChanged();
				}
			}
		}
		
		[Column(Storage="_NTile", DbType="TinyInt NOT NULL")]
		public byte NTile
		{
			get
			{
				return this._NTile;
			}
			set
			{
				if ((this._NTile != value))
				{
					this.OnNTileChanging(value);
					this.SendPropertyChanging();
					this._NTile = value;
					this.SendPropertyChanged("NTile");
					this.OnNTileChanged();
				}
			}
		}
		
		[Association(Name="Domain_Images_MOST_POPULAR_DOMAINS_BY_SCHEME", Storage="_Domain", ThisKey="DomainID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Domain Domain
		{
			get
			{
				return this._Domain.Entity;
			}
			set
			{
				Domain previousValue = this._Domain.Entity;
				if (((previousValue != value) 
							|| (this._Domain.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Domain.Entity = null;
						previousValue.Images_MOST_POPULAR_DOMAINS_BY_SCHEME = null;
					}
					this._Domain.Entity = value;
					if ((value != null))
					{
						value.Images_MOST_POPULAR_DOMAINS_BY_SCHEME = this;
						this._DomainID = value.ID;
					}
					else
					{
						this._DomainID = default(int);
					}
					this.SendPropertyChanged("Domain");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="rpt.Images_MOST_POPULAR_EXTENSIONS_BY_ABSOLUTEURIS")]
	public partial class Images_MOST_POPULAR_EXTENSIONS_BY_ABSOLUTEURI : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RowNumber;
		
		private System.Nullable<System.DateTime> _InitiallyDiscovered;
		
		private System.DateTime _LastDiscovered;
		
		private int _ExtensionID;
		
		private int _Count;
		
		private System.Nullable<short> _DaysSinceInitiallyDiscovered;
		
		private short _DaysSinceLastDiscovered;
		
		private System.Nullable<double> _Strength;
		
		private int _Rank;
		
		private int _DenseRank;
		
		private byte _NTile;
		
		private EntityRef<Extension> _Extension;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRowNumberChanging(int value);
    partial void OnRowNumberChanged();
    partial void OnInitiallyDiscoveredChanging(System.Nullable<System.DateTime> value);
    partial void OnInitiallyDiscoveredChanged();
    partial void OnLastDiscoveredChanging(System.DateTime value);
    partial void OnLastDiscoveredChanged();
    partial void OnExtensionIDChanging(int value);
    partial void OnExtensionIDChanged();
    partial void OnCountChanging(int value);
    partial void OnCountChanged();
    partial void OnDaysSinceInitiallyDiscoveredChanging(System.Nullable<short> value);
    partial void OnDaysSinceInitiallyDiscoveredChanged();
    partial void OnDaysSinceLastDiscoveredChanging(short value);
    partial void OnDaysSinceLastDiscoveredChanged();
    partial void OnStrengthChanging(System.Nullable<double> value);
    partial void OnStrengthChanged();
    partial void OnRankChanging(int value);
    partial void OnRankChanged();
    partial void OnDenseRankChanging(int value);
    partial void OnDenseRankChanged();
    partial void OnNTileChanging(byte value);
    partial void OnNTileChanged();
    #endregion
		
		public Images_MOST_POPULAR_EXTENSIONS_BY_ABSOLUTEURI()
		{
			this._Extension = default(EntityRef<Extension>);
			OnCreated();
		}
		
		[Column(Storage="_RowNumber", DbType="Int NOT NULL")]
		public int RowNumber
		{
			get
			{
				return this._RowNumber;
			}
			set
			{
				if ((this._RowNumber != value))
				{
					this.OnRowNumberChanging(value);
					this.SendPropertyChanging();
					this._RowNumber = value;
					this.SendPropertyChanged("RowNumber");
					this.OnRowNumberChanged();
				}
			}
		}
		
		[Column(Storage="_InitiallyDiscovered", DbType="DateTime")]
		public System.Nullable<System.DateTime> InitiallyDiscovered
		{
			get
			{
				return this._InitiallyDiscovered;
			}
			set
			{
				if ((this._InitiallyDiscovered != value))
				{
					this.OnInitiallyDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._InitiallyDiscovered = value;
					this.SendPropertyChanged("InitiallyDiscovered");
					this.OnInitiallyDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_LastDiscovered", DbType="DateTime NOT NULL")]
		public System.DateTime LastDiscovered
		{
			get
			{
				return this._LastDiscovered;
			}
			set
			{
				if ((this._LastDiscovered != value))
				{
					this.OnLastDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._LastDiscovered = value;
					this.SendPropertyChanged("LastDiscovered");
					this.OnLastDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_ExtensionID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ExtensionID
		{
			get
			{
				return this._ExtensionID;
			}
			set
			{
				if ((this._ExtensionID != value))
				{
					if (this._Extension.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnExtensionIDChanging(value);
					this.SendPropertyChanging();
					this._ExtensionID = value;
					this.SendPropertyChanged("ExtensionID");
					this.OnExtensionIDChanged();
				}
			}
		}
		
		[Column(Storage="_Count", DbType="Int NOT NULL")]
		public int Count
		{
			get
			{
				return this._Count;
			}
			set
			{
				if ((this._Count != value))
				{
					this.OnCountChanging(value);
					this.SendPropertyChanging();
					this._Count = value;
					this.SendPropertyChanged("Count");
					this.OnCountChanged();
				}
			}
		}
		
		[Column(Storage="_DaysSinceInitiallyDiscovered", DbType="SmallInt")]
		public System.Nullable<short> DaysSinceInitiallyDiscovered
		{
			get
			{
				return this._DaysSinceInitiallyDiscovered;
			}
			set
			{
				if ((this._DaysSinceInitiallyDiscovered != value))
				{
					this.OnDaysSinceInitiallyDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._DaysSinceInitiallyDiscovered = value;
					this.SendPropertyChanged("DaysSinceInitiallyDiscovered");
					this.OnDaysSinceInitiallyDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_DaysSinceLastDiscovered", DbType="SmallInt NOT NULL")]
		public short DaysSinceLastDiscovered
		{
			get
			{
				return this._DaysSinceLastDiscovered;
			}
			set
			{
				if ((this._DaysSinceLastDiscovered != value))
				{
					this.OnDaysSinceLastDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._DaysSinceLastDiscovered = value;
					this.SendPropertyChanged("DaysSinceLastDiscovered");
					this.OnDaysSinceLastDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_Strength", DbType="Float")]
		public System.Nullable<double> Strength
		{
			get
			{
				return this._Strength;
			}
			set
			{
				if ((this._Strength != value))
				{
					this.OnStrengthChanging(value);
					this.SendPropertyChanging();
					this._Strength = value;
					this.SendPropertyChanged("Strength");
					this.OnStrengthChanged();
				}
			}
		}
		
		[Column(Storage="_Rank", DbType="Int NOT NULL")]
		public int Rank
		{
			get
			{
				return this._Rank;
			}
			set
			{
				if ((this._Rank != value))
				{
					this.OnRankChanging(value);
					this.SendPropertyChanging();
					this._Rank = value;
					this.SendPropertyChanged("Rank");
					this.OnRankChanged();
				}
			}
		}
		
		[Column(Storage="_DenseRank", DbType="Int NOT NULL")]
		public int DenseRank
		{
			get
			{
				return this._DenseRank;
			}
			set
			{
				if ((this._DenseRank != value))
				{
					this.OnDenseRankChanging(value);
					this.SendPropertyChanging();
					this._DenseRank = value;
					this.SendPropertyChanged("DenseRank");
					this.OnDenseRankChanged();
				}
			}
		}
		
		[Column(Storage="_NTile", DbType="TinyInt NOT NULL")]
		public byte NTile
		{
			get
			{
				return this._NTile;
			}
			set
			{
				if ((this._NTile != value))
				{
					this.OnNTileChanging(value);
					this.SendPropertyChanging();
					this._NTile = value;
					this.SendPropertyChanged("NTile");
					this.OnNTileChanged();
				}
			}
		}
		
		[Association(Name="Extension_Images_MOST_POPULAR_EXTENSIONS_BY_ABSOLUTEURI", Storage="_Extension", ThisKey="ExtensionID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Extension Extension
		{
			get
			{
				return this._Extension.Entity;
			}
			set
			{
				Extension previousValue = this._Extension.Entity;
				if (((previousValue != value) 
							|| (this._Extension.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Extension.Entity = null;
						previousValue.Images_MOST_POPULAR_EXTENSIONS_BY_ABSOLUTEURI = null;
					}
					this._Extension.Entity = value;
					if ((value != null))
					{
						value.Images_MOST_POPULAR_EXTENSIONS_BY_ABSOLUTEURI = this;
						this._ExtensionID = value.ID;
					}
					else
					{
						this._ExtensionID = default(int);
					}
					this.SendPropertyChanged("Extension");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="rpt.Images_MOST_POPULAR_EXTENSIONS_BY_DOMAINS")]
	public partial class Images_MOST_POPULAR_EXTENSIONS_BY_DOMAIN : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RowNumber;
		
		private System.Nullable<System.DateTime> _InitiallyDiscovered;
		
		private System.DateTime _LastDiscovered;
		
		private int _ExtensionID;
		
		private int _Count;
		
		private System.Nullable<short> _DaysSinceInitiallyDiscovered;
		
		private short _DaysSinceLastDiscovered;
		
		private System.Nullable<double> _Strength;
		
		private int _Rank;
		
		private int _DenseRank;
		
		private byte _NTile;
		
		private EntityRef<Extension> _Extension;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRowNumberChanging(int value);
    partial void OnRowNumberChanged();
    partial void OnInitiallyDiscoveredChanging(System.Nullable<System.DateTime> value);
    partial void OnInitiallyDiscoveredChanged();
    partial void OnLastDiscoveredChanging(System.DateTime value);
    partial void OnLastDiscoveredChanged();
    partial void OnExtensionIDChanging(int value);
    partial void OnExtensionIDChanged();
    partial void OnCountChanging(int value);
    partial void OnCountChanged();
    partial void OnDaysSinceInitiallyDiscoveredChanging(System.Nullable<short> value);
    partial void OnDaysSinceInitiallyDiscoveredChanged();
    partial void OnDaysSinceLastDiscoveredChanging(short value);
    partial void OnDaysSinceLastDiscoveredChanged();
    partial void OnStrengthChanging(System.Nullable<double> value);
    partial void OnStrengthChanged();
    partial void OnRankChanging(int value);
    partial void OnRankChanged();
    partial void OnDenseRankChanging(int value);
    partial void OnDenseRankChanged();
    partial void OnNTileChanging(byte value);
    partial void OnNTileChanged();
    #endregion
		
		public Images_MOST_POPULAR_EXTENSIONS_BY_DOMAIN()
		{
			this._Extension = default(EntityRef<Extension>);
			OnCreated();
		}
		
		[Column(Storage="_RowNumber", DbType="Int NOT NULL")]
		public int RowNumber
		{
			get
			{
				return this._RowNumber;
			}
			set
			{
				if ((this._RowNumber != value))
				{
					this.OnRowNumberChanging(value);
					this.SendPropertyChanging();
					this._RowNumber = value;
					this.SendPropertyChanged("RowNumber");
					this.OnRowNumberChanged();
				}
			}
		}
		
		[Column(Storage="_InitiallyDiscovered", DbType="DateTime")]
		public System.Nullable<System.DateTime> InitiallyDiscovered
		{
			get
			{
				return this._InitiallyDiscovered;
			}
			set
			{
				if ((this._InitiallyDiscovered != value))
				{
					this.OnInitiallyDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._InitiallyDiscovered = value;
					this.SendPropertyChanged("InitiallyDiscovered");
					this.OnInitiallyDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_LastDiscovered", DbType="DateTime NOT NULL")]
		public System.DateTime LastDiscovered
		{
			get
			{
				return this._LastDiscovered;
			}
			set
			{
				if ((this._LastDiscovered != value))
				{
					this.OnLastDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._LastDiscovered = value;
					this.SendPropertyChanged("LastDiscovered");
					this.OnLastDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_ExtensionID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ExtensionID
		{
			get
			{
				return this._ExtensionID;
			}
			set
			{
				if ((this._ExtensionID != value))
				{
					if (this._Extension.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnExtensionIDChanging(value);
					this.SendPropertyChanging();
					this._ExtensionID = value;
					this.SendPropertyChanged("ExtensionID");
					this.OnExtensionIDChanged();
				}
			}
		}
		
		[Column(Storage="_Count", DbType="Int NOT NULL")]
		public int Count
		{
			get
			{
				return this._Count;
			}
			set
			{
				if ((this._Count != value))
				{
					this.OnCountChanging(value);
					this.SendPropertyChanging();
					this._Count = value;
					this.SendPropertyChanged("Count");
					this.OnCountChanged();
				}
			}
		}
		
		[Column(Storage="_DaysSinceInitiallyDiscovered", DbType="SmallInt")]
		public System.Nullable<short> DaysSinceInitiallyDiscovered
		{
			get
			{
				return this._DaysSinceInitiallyDiscovered;
			}
			set
			{
				if ((this._DaysSinceInitiallyDiscovered != value))
				{
					this.OnDaysSinceInitiallyDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._DaysSinceInitiallyDiscovered = value;
					this.SendPropertyChanged("DaysSinceInitiallyDiscovered");
					this.OnDaysSinceInitiallyDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_DaysSinceLastDiscovered", DbType="SmallInt NOT NULL")]
		public short DaysSinceLastDiscovered
		{
			get
			{
				return this._DaysSinceLastDiscovered;
			}
			set
			{
				if ((this._DaysSinceLastDiscovered != value))
				{
					this.OnDaysSinceLastDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._DaysSinceLastDiscovered = value;
					this.SendPropertyChanged("DaysSinceLastDiscovered");
					this.OnDaysSinceLastDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_Strength", DbType="Float")]
		public System.Nullable<double> Strength
		{
			get
			{
				return this._Strength;
			}
			set
			{
				if ((this._Strength != value))
				{
					this.OnStrengthChanging(value);
					this.SendPropertyChanging();
					this._Strength = value;
					this.SendPropertyChanged("Strength");
					this.OnStrengthChanged();
				}
			}
		}
		
		[Column(Storage="_Rank", DbType="Int NOT NULL")]
		public int Rank
		{
			get
			{
				return this._Rank;
			}
			set
			{
				if ((this._Rank != value))
				{
					this.OnRankChanging(value);
					this.SendPropertyChanging();
					this._Rank = value;
					this.SendPropertyChanged("Rank");
					this.OnRankChanged();
				}
			}
		}
		
		[Column(Storage="_DenseRank", DbType="Int NOT NULL")]
		public int DenseRank
		{
			get
			{
				return this._DenseRank;
			}
			set
			{
				if ((this._DenseRank != value))
				{
					this.OnDenseRankChanging(value);
					this.SendPropertyChanging();
					this._DenseRank = value;
					this.SendPropertyChanged("DenseRank");
					this.OnDenseRankChanged();
				}
			}
		}
		
		[Column(Storage="_NTile", DbType="TinyInt NOT NULL")]
		public byte NTile
		{
			get
			{
				return this._NTile;
			}
			set
			{
				if ((this._NTile != value))
				{
					this.OnNTileChanging(value);
					this.SendPropertyChanging();
					this._NTile = value;
					this.SendPropertyChanged("NTile");
					this.OnNTileChanged();
				}
			}
		}
		
		[Association(Name="Extension_Images_MOST_POPULAR_EXTENSIONS_BY_DOMAIN", Storage="_Extension", ThisKey="ExtensionID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Extension Extension
		{
			get
			{
				return this._Extension.Entity;
			}
			set
			{
				Extension previousValue = this._Extension.Entity;
				if (((previousValue != value) 
							|| (this._Extension.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Extension.Entity = null;
						previousValue.Images_MOST_POPULAR_EXTENSIONS_BY_DOMAIN = null;
					}
					this._Extension.Entity = value;
					if ((value != null))
					{
						value.Images_MOST_POPULAR_EXTENSIONS_BY_DOMAIN = this;
						this._ExtensionID = value.ID;
					}
					else
					{
						this._ExtensionID = default(int);
					}
					this.SendPropertyChanged("Extension");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="rpt.Images_MOST_POPULAR_EXTENSIONS_BY_EXTENSIONS")]
	public partial class Images_MOST_POPULAR_EXTENSIONS_BY_EXTENSION : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RowNumber;
		
		private System.Nullable<System.DateTime> _InitiallyDiscovered;
		
		private System.DateTime _LastDiscovered;
		
		private int _ExtensionID;
		
		private int _Count;
		
		private System.Nullable<short> _DaysSinceInitiallyDiscovered;
		
		private short _DaysSinceLastDiscovered;
		
		private System.Nullable<double> _Strength;
		
		private int _Rank;
		
		private int _DenseRank;
		
		private byte _NTile;
		
		private EntityRef<Extension> _Extension;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRowNumberChanging(int value);
    partial void OnRowNumberChanged();
    partial void OnInitiallyDiscoveredChanging(System.Nullable<System.DateTime> value);
    partial void OnInitiallyDiscoveredChanged();
    partial void OnLastDiscoveredChanging(System.DateTime value);
    partial void OnLastDiscoveredChanged();
    partial void OnExtensionIDChanging(int value);
    partial void OnExtensionIDChanged();
    partial void OnCountChanging(int value);
    partial void OnCountChanged();
    partial void OnDaysSinceInitiallyDiscoveredChanging(System.Nullable<short> value);
    partial void OnDaysSinceInitiallyDiscoveredChanged();
    partial void OnDaysSinceLastDiscoveredChanging(short value);
    partial void OnDaysSinceLastDiscoveredChanged();
    partial void OnStrengthChanging(System.Nullable<double> value);
    partial void OnStrengthChanged();
    partial void OnRankChanging(int value);
    partial void OnRankChanged();
    partial void OnDenseRankChanging(int value);
    partial void OnDenseRankChanged();
    partial void OnNTileChanging(byte value);
    partial void OnNTileChanged();
    #endregion
		
		public Images_MOST_POPULAR_EXTENSIONS_BY_EXTENSION()
		{
			this._Extension = default(EntityRef<Extension>);
			OnCreated();
		}
		
		[Column(Storage="_RowNumber", DbType="Int NOT NULL")]
		public int RowNumber
		{
			get
			{
				return this._RowNumber;
			}
			set
			{
				if ((this._RowNumber != value))
				{
					this.OnRowNumberChanging(value);
					this.SendPropertyChanging();
					this._RowNumber = value;
					this.SendPropertyChanged("RowNumber");
					this.OnRowNumberChanged();
				}
			}
		}
		
		[Column(Storage="_InitiallyDiscovered", DbType="DateTime")]
		public System.Nullable<System.DateTime> InitiallyDiscovered
		{
			get
			{
				return this._InitiallyDiscovered;
			}
			set
			{
				if ((this._InitiallyDiscovered != value))
				{
					this.OnInitiallyDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._InitiallyDiscovered = value;
					this.SendPropertyChanged("InitiallyDiscovered");
					this.OnInitiallyDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_LastDiscovered", DbType="DateTime NOT NULL")]
		public System.DateTime LastDiscovered
		{
			get
			{
				return this._LastDiscovered;
			}
			set
			{
				if ((this._LastDiscovered != value))
				{
					this.OnLastDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._LastDiscovered = value;
					this.SendPropertyChanged("LastDiscovered");
					this.OnLastDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_ExtensionID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ExtensionID
		{
			get
			{
				return this._ExtensionID;
			}
			set
			{
				if ((this._ExtensionID != value))
				{
					if (this._Extension.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnExtensionIDChanging(value);
					this.SendPropertyChanging();
					this._ExtensionID = value;
					this.SendPropertyChanged("ExtensionID");
					this.OnExtensionIDChanged();
				}
			}
		}
		
		[Column(Storage="_Count", DbType="Int NOT NULL")]
		public int Count
		{
			get
			{
				return this._Count;
			}
			set
			{
				if ((this._Count != value))
				{
					this.OnCountChanging(value);
					this.SendPropertyChanging();
					this._Count = value;
					this.SendPropertyChanged("Count");
					this.OnCountChanged();
				}
			}
		}
		
		[Column(Storage="_DaysSinceInitiallyDiscovered", DbType="SmallInt")]
		public System.Nullable<short> DaysSinceInitiallyDiscovered
		{
			get
			{
				return this._DaysSinceInitiallyDiscovered;
			}
			set
			{
				if ((this._DaysSinceInitiallyDiscovered != value))
				{
					this.OnDaysSinceInitiallyDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._DaysSinceInitiallyDiscovered = value;
					this.SendPropertyChanged("DaysSinceInitiallyDiscovered");
					this.OnDaysSinceInitiallyDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_DaysSinceLastDiscovered", DbType="SmallInt NOT NULL")]
		public short DaysSinceLastDiscovered
		{
			get
			{
				return this._DaysSinceLastDiscovered;
			}
			set
			{
				if ((this._DaysSinceLastDiscovered != value))
				{
					this.OnDaysSinceLastDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._DaysSinceLastDiscovered = value;
					this.SendPropertyChanged("DaysSinceLastDiscovered");
					this.OnDaysSinceLastDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_Strength", DbType="Float")]
		public System.Nullable<double> Strength
		{
			get
			{
				return this._Strength;
			}
			set
			{
				if ((this._Strength != value))
				{
					this.OnStrengthChanging(value);
					this.SendPropertyChanging();
					this._Strength = value;
					this.SendPropertyChanged("Strength");
					this.OnStrengthChanged();
				}
			}
		}
		
		[Column(Storage="_Rank", DbType="Int NOT NULL")]
		public int Rank
		{
			get
			{
				return this._Rank;
			}
			set
			{
				if ((this._Rank != value))
				{
					this.OnRankChanging(value);
					this.SendPropertyChanging();
					this._Rank = value;
					this.SendPropertyChanged("Rank");
					this.OnRankChanged();
				}
			}
		}
		
		[Column(Storage="_DenseRank", DbType="Int NOT NULL")]
		public int DenseRank
		{
			get
			{
				return this._DenseRank;
			}
			set
			{
				if ((this._DenseRank != value))
				{
					this.OnDenseRankChanging(value);
					this.SendPropertyChanging();
					this._DenseRank = value;
					this.SendPropertyChanged("DenseRank");
					this.OnDenseRankChanged();
				}
			}
		}
		
		[Column(Storage="_NTile", DbType="TinyInt NOT NULL")]
		public byte NTile
		{
			get
			{
				return this._NTile;
			}
			set
			{
				if ((this._NTile != value))
				{
					this.OnNTileChanging(value);
					this.SendPropertyChanging();
					this._NTile = value;
					this.SendPropertyChanged("NTile");
					this.OnNTileChanged();
				}
			}
		}
		
		[Association(Name="Extension_Images_MOST_POPULAR_EXTENSIONS_BY_EXTENSION", Storage="_Extension", ThisKey="ExtensionID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Extension Extension
		{
			get
			{
				return this._Extension.Entity;
			}
			set
			{
				Extension previousValue = this._Extension.Entity;
				if (((previousValue != value) 
							|| (this._Extension.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Extension.Entity = null;
						previousValue.Images_MOST_POPULAR_EXTENSIONS_BY_EXTENSION = null;
					}
					this._Extension.Entity = value;
					if ((value != null))
					{
						value.Images_MOST_POPULAR_EXTENSIONS_BY_EXTENSION = this;
						this._ExtensionID = value.ID;
					}
					else
					{
						this._ExtensionID = default(int);
					}
					this.SendPropertyChanged("Extension");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="rpt.Images_MOST_POPULAR_EXTENSIONS_BY_HOSTS")]
	public partial class Images_MOST_POPULAR_EXTENSIONS_BY_HOST : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RowNumber;
		
		private System.Nullable<System.DateTime> _InitiallyDiscovered;
		
		private System.DateTime _LastDiscovered;
		
		private int _ExtensionID;
		
		private int _Count;
		
		private System.Nullable<short> _DaysSinceInitiallyDiscovered;
		
		private short _DaysSinceLastDiscovered;
		
		private System.Nullable<double> _Strength;
		
		private int _Rank;
		
		private int _DenseRank;
		
		private byte _NTile;
		
		private EntityRef<Extension> _Extension;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRowNumberChanging(int value);
    partial void OnRowNumberChanged();
    partial void OnInitiallyDiscoveredChanging(System.Nullable<System.DateTime> value);
    partial void OnInitiallyDiscoveredChanged();
    partial void OnLastDiscoveredChanging(System.DateTime value);
    partial void OnLastDiscoveredChanged();
    partial void OnExtensionIDChanging(int value);
    partial void OnExtensionIDChanged();
    partial void OnCountChanging(int value);
    partial void OnCountChanged();
    partial void OnDaysSinceInitiallyDiscoveredChanging(System.Nullable<short> value);
    partial void OnDaysSinceInitiallyDiscoveredChanged();
    partial void OnDaysSinceLastDiscoveredChanging(short value);
    partial void OnDaysSinceLastDiscoveredChanged();
    partial void OnStrengthChanging(System.Nullable<double> value);
    partial void OnStrengthChanged();
    partial void OnRankChanging(int value);
    partial void OnRankChanged();
    partial void OnDenseRankChanging(int value);
    partial void OnDenseRankChanged();
    partial void OnNTileChanging(byte value);
    partial void OnNTileChanged();
    #endregion
		
		public Images_MOST_POPULAR_EXTENSIONS_BY_HOST()
		{
			this._Extension = default(EntityRef<Extension>);
			OnCreated();
		}
		
		[Column(Storage="_RowNumber", DbType="Int NOT NULL")]
		public int RowNumber
		{
			get
			{
				return this._RowNumber;
			}
			set
			{
				if ((this._RowNumber != value))
				{
					this.OnRowNumberChanging(value);
					this.SendPropertyChanging();
					this._RowNumber = value;
					this.SendPropertyChanged("RowNumber");
					this.OnRowNumberChanged();
				}
			}
		}
		
		[Column(Storage="_InitiallyDiscovered", DbType="DateTime")]
		public System.Nullable<System.DateTime> InitiallyDiscovered
		{
			get
			{
				return this._InitiallyDiscovered;
			}
			set
			{
				if ((this._InitiallyDiscovered != value))
				{
					this.OnInitiallyDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._InitiallyDiscovered = value;
					this.SendPropertyChanged("InitiallyDiscovered");
					this.OnInitiallyDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_LastDiscovered", DbType="DateTime NOT NULL")]
		public System.DateTime LastDiscovered
		{
			get
			{
				return this._LastDiscovered;
			}
			set
			{
				if ((this._LastDiscovered != value))
				{
					this.OnLastDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._LastDiscovered = value;
					this.SendPropertyChanged("LastDiscovered");
					this.OnLastDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_ExtensionID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ExtensionID
		{
			get
			{
				return this._ExtensionID;
			}
			set
			{
				if ((this._ExtensionID != value))
				{
					if (this._Extension.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnExtensionIDChanging(value);
					this.SendPropertyChanging();
					this._ExtensionID = value;
					this.SendPropertyChanged("ExtensionID");
					this.OnExtensionIDChanged();
				}
			}
		}
		
		[Column(Storage="_Count", DbType="Int NOT NULL")]
		public int Count
		{
			get
			{
				return this._Count;
			}
			set
			{
				if ((this._Count != value))
				{
					this.OnCountChanging(value);
					this.SendPropertyChanging();
					this._Count = value;
					this.SendPropertyChanged("Count");
					this.OnCountChanged();
				}
			}
		}
		
		[Column(Storage="_DaysSinceInitiallyDiscovered", DbType="SmallInt")]
		public System.Nullable<short> DaysSinceInitiallyDiscovered
		{
			get
			{
				return this._DaysSinceInitiallyDiscovered;
			}
			set
			{
				if ((this._DaysSinceInitiallyDiscovered != value))
				{
					this.OnDaysSinceInitiallyDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._DaysSinceInitiallyDiscovered = value;
					this.SendPropertyChanged("DaysSinceInitiallyDiscovered");
					this.OnDaysSinceInitiallyDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_DaysSinceLastDiscovered", DbType="SmallInt NOT NULL")]
		public short DaysSinceLastDiscovered
		{
			get
			{
				return this._DaysSinceLastDiscovered;
			}
			set
			{
				if ((this._DaysSinceLastDiscovered != value))
				{
					this.OnDaysSinceLastDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._DaysSinceLastDiscovered = value;
					this.SendPropertyChanged("DaysSinceLastDiscovered");
					this.OnDaysSinceLastDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_Strength", DbType="Float")]
		public System.Nullable<double> Strength
		{
			get
			{
				return this._Strength;
			}
			set
			{
				if ((this._Strength != value))
				{
					this.OnStrengthChanging(value);
					this.SendPropertyChanging();
					this._Strength = value;
					this.SendPropertyChanged("Strength");
					this.OnStrengthChanged();
				}
			}
		}
		
		[Column(Storage="_Rank", DbType="Int NOT NULL")]
		public int Rank
		{
			get
			{
				return this._Rank;
			}
			set
			{
				if ((this._Rank != value))
				{
					this.OnRankChanging(value);
					this.SendPropertyChanging();
					this._Rank = value;
					this.SendPropertyChanged("Rank");
					this.OnRankChanged();
				}
			}
		}
		
		[Column(Storage="_DenseRank", DbType="Int NOT NULL")]
		public int DenseRank
		{
			get
			{
				return this._DenseRank;
			}
			set
			{
				if ((this._DenseRank != value))
				{
					this.OnDenseRankChanging(value);
					this.SendPropertyChanging();
					this._DenseRank = value;
					this.SendPropertyChanged("DenseRank");
					this.OnDenseRankChanged();
				}
			}
		}
		
		[Column(Storage="_NTile", DbType="TinyInt NOT NULL")]
		public byte NTile
		{
			get
			{
				return this._NTile;
			}
			set
			{
				if ((this._NTile != value))
				{
					this.OnNTileChanging(value);
					this.SendPropertyChanging();
					this._NTile = value;
					this.SendPropertyChanged("NTile");
					this.OnNTileChanged();
				}
			}
		}
		
		[Association(Name="Extension_Images_MOST_POPULAR_EXTENSIONS_BY_HOST", Storage="_Extension", ThisKey="ExtensionID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Extension Extension
		{
			get
			{
				return this._Extension.Entity;
			}
			set
			{
				Extension previousValue = this._Extension.Entity;
				if (((previousValue != value) 
							|| (this._Extension.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Extension.Entity = null;
						previousValue.Images_MOST_POPULAR_EXTENSIONS_BY_HOST = null;
					}
					this._Extension.Entity = value;
					if ((value != null))
					{
						value.Images_MOST_POPULAR_EXTENSIONS_BY_HOST = this;
						this._ExtensionID = value.ID;
					}
					else
					{
						this._ExtensionID = default(int);
					}
					this.SendPropertyChanged("Extension");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="rpt.Images_MOST_POPULAR_EXTENSIONS_BY_SCHEMES")]
	public partial class Images_MOST_POPULAR_EXTENSIONS_BY_SCHEME : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RowNumber;
		
		private System.Nullable<System.DateTime> _InitiallyDiscovered;
		
		private System.DateTime _LastDiscovered;
		
		private int _ExtensionID;
		
		private int _Count;
		
		private System.Nullable<short> _DaysSinceInitiallyDiscovered;
		
		private short _DaysSinceLastDiscovered;
		
		private System.Nullable<double> _Strength;
		
		private int _Rank;
		
		private int _DenseRank;
		
		private byte _NTile;
		
		private EntityRef<Extension> _Extension;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRowNumberChanging(int value);
    partial void OnRowNumberChanged();
    partial void OnInitiallyDiscoveredChanging(System.Nullable<System.DateTime> value);
    partial void OnInitiallyDiscoveredChanged();
    partial void OnLastDiscoveredChanging(System.DateTime value);
    partial void OnLastDiscoveredChanged();
    partial void OnExtensionIDChanging(int value);
    partial void OnExtensionIDChanged();
    partial void OnCountChanging(int value);
    partial void OnCountChanged();
    partial void OnDaysSinceInitiallyDiscoveredChanging(System.Nullable<short> value);
    partial void OnDaysSinceInitiallyDiscoveredChanged();
    partial void OnDaysSinceLastDiscoveredChanging(short value);
    partial void OnDaysSinceLastDiscoveredChanged();
    partial void OnStrengthChanging(System.Nullable<double> value);
    partial void OnStrengthChanged();
    partial void OnRankChanging(int value);
    partial void OnRankChanged();
    partial void OnDenseRankChanging(int value);
    partial void OnDenseRankChanged();
    partial void OnNTileChanging(byte value);
    partial void OnNTileChanged();
    #endregion
		
		public Images_MOST_POPULAR_EXTENSIONS_BY_SCHEME()
		{
			this._Extension = default(EntityRef<Extension>);
			OnCreated();
		}
		
		[Column(Storage="_RowNumber", DbType="Int NOT NULL")]
		public int RowNumber
		{
			get
			{
				return this._RowNumber;
			}
			set
			{
				if ((this._RowNumber != value))
				{
					this.OnRowNumberChanging(value);
					this.SendPropertyChanging();
					this._RowNumber = value;
					this.SendPropertyChanged("RowNumber");
					this.OnRowNumberChanged();
				}
			}
		}
		
		[Column(Storage="_InitiallyDiscovered", DbType="DateTime")]
		public System.Nullable<System.DateTime> InitiallyDiscovered
		{
			get
			{
				return this._InitiallyDiscovered;
			}
			set
			{
				if ((this._InitiallyDiscovered != value))
				{
					this.OnInitiallyDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._InitiallyDiscovered = value;
					this.SendPropertyChanged("InitiallyDiscovered");
					this.OnInitiallyDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_LastDiscovered", DbType="DateTime NOT NULL")]
		public System.DateTime LastDiscovered
		{
			get
			{
				return this._LastDiscovered;
			}
			set
			{
				if ((this._LastDiscovered != value))
				{
					this.OnLastDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._LastDiscovered = value;
					this.SendPropertyChanged("LastDiscovered");
					this.OnLastDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_ExtensionID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ExtensionID
		{
			get
			{
				return this._ExtensionID;
			}
			set
			{
				if ((this._ExtensionID != value))
				{
					if (this._Extension.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnExtensionIDChanging(value);
					this.SendPropertyChanging();
					this._ExtensionID = value;
					this.SendPropertyChanged("ExtensionID");
					this.OnExtensionIDChanged();
				}
			}
		}
		
		[Column(Storage="_Count", DbType="Int NOT NULL")]
		public int Count
		{
			get
			{
				return this._Count;
			}
			set
			{
				if ((this._Count != value))
				{
					this.OnCountChanging(value);
					this.SendPropertyChanging();
					this._Count = value;
					this.SendPropertyChanged("Count");
					this.OnCountChanged();
				}
			}
		}
		
		[Column(Storage="_DaysSinceInitiallyDiscovered", DbType="SmallInt")]
		public System.Nullable<short> DaysSinceInitiallyDiscovered
		{
			get
			{
				return this._DaysSinceInitiallyDiscovered;
			}
			set
			{
				if ((this._DaysSinceInitiallyDiscovered != value))
				{
					this.OnDaysSinceInitiallyDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._DaysSinceInitiallyDiscovered = value;
					this.SendPropertyChanged("DaysSinceInitiallyDiscovered");
					this.OnDaysSinceInitiallyDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_DaysSinceLastDiscovered", DbType="SmallInt NOT NULL")]
		public short DaysSinceLastDiscovered
		{
			get
			{
				return this._DaysSinceLastDiscovered;
			}
			set
			{
				if ((this._DaysSinceLastDiscovered != value))
				{
					this.OnDaysSinceLastDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._DaysSinceLastDiscovered = value;
					this.SendPropertyChanged("DaysSinceLastDiscovered");
					this.OnDaysSinceLastDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_Strength", DbType="Float")]
		public System.Nullable<double> Strength
		{
			get
			{
				return this._Strength;
			}
			set
			{
				if ((this._Strength != value))
				{
					this.OnStrengthChanging(value);
					this.SendPropertyChanging();
					this._Strength = value;
					this.SendPropertyChanged("Strength");
					this.OnStrengthChanged();
				}
			}
		}
		
		[Column(Storage="_Rank", DbType="Int NOT NULL")]
		public int Rank
		{
			get
			{
				return this._Rank;
			}
			set
			{
				if ((this._Rank != value))
				{
					this.OnRankChanging(value);
					this.SendPropertyChanging();
					this._Rank = value;
					this.SendPropertyChanged("Rank");
					this.OnRankChanged();
				}
			}
		}
		
		[Column(Storage="_DenseRank", DbType="Int NOT NULL")]
		public int DenseRank
		{
			get
			{
				return this._DenseRank;
			}
			set
			{
				if ((this._DenseRank != value))
				{
					this.OnDenseRankChanging(value);
					this.SendPropertyChanging();
					this._DenseRank = value;
					this.SendPropertyChanged("DenseRank");
					this.OnDenseRankChanged();
				}
			}
		}
		
		[Column(Storage="_NTile", DbType="TinyInt NOT NULL")]
		public byte NTile
		{
			get
			{
				return this._NTile;
			}
			set
			{
				if ((this._NTile != value))
				{
					this.OnNTileChanging(value);
					this.SendPropertyChanging();
					this._NTile = value;
					this.SendPropertyChanged("NTile");
					this.OnNTileChanged();
				}
			}
		}
		
		[Association(Name="Extension_Images_MOST_POPULAR_EXTENSIONS_BY_SCHEME", Storage="_Extension", ThisKey="ExtensionID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Extension Extension
		{
			get
			{
				return this._Extension.Entity;
			}
			set
			{
				Extension previousValue = this._Extension.Entity;
				if (((previousValue != value) 
							|| (this._Extension.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Extension.Entity = null;
						previousValue.Images_MOST_POPULAR_EXTENSIONS_BY_SCHEME = null;
					}
					this._Extension.Entity = value;
					if ((value != null))
					{
						value.Images_MOST_POPULAR_EXTENSIONS_BY_SCHEME = this;
						this._ExtensionID = value.ID;
					}
					else
					{
						this._ExtensionID = default(int);
					}
					this.SendPropertyChanged("Extension");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="rpt.Images_MOST_POPULAR_HOSTS_BY_ABSOLUTEURIS")]
	public partial class Images_MOST_POPULAR_HOSTS_BY_ABSOLUTEURI : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RowNumber;
		
		private System.Nullable<System.DateTime> _InitiallyDiscovered;
		
		private System.DateTime _LastDiscovered;
		
		private int _HostID;
		
		private int _Count;
		
		private System.Nullable<short> _DaysSinceInitiallyDiscovered;
		
		private short _DaysSinceLastDiscovered;
		
		private System.Nullable<double> _Strength;
		
		private int _Rank;
		
		private int _DenseRank;
		
		private byte _NTile;
		
		private EntityRef<Host> _Host;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRowNumberChanging(int value);
    partial void OnRowNumberChanged();
    partial void OnInitiallyDiscoveredChanging(System.Nullable<System.DateTime> value);
    partial void OnInitiallyDiscoveredChanged();
    partial void OnLastDiscoveredChanging(System.DateTime value);
    partial void OnLastDiscoveredChanged();
    partial void OnHostIDChanging(int value);
    partial void OnHostIDChanged();
    partial void OnCountChanging(int value);
    partial void OnCountChanged();
    partial void OnDaysSinceInitiallyDiscoveredChanging(System.Nullable<short> value);
    partial void OnDaysSinceInitiallyDiscoveredChanged();
    partial void OnDaysSinceLastDiscoveredChanging(short value);
    partial void OnDaysSinceLastDiscoveredChanged();
    partial void OnStrengthChanging(System.Nullable<double> value);
    partial void OnStrengthChanged();
    partial void OnRankChanging(int value);
    partial void OnRankChanged();
    partial void OnDenseRankChanging(int value);
    partial void OnDenseRankChanged();
    partial void OnNTileChanging(byte value);
    partial void OnNTileChanged();
    #endregion
		
		public Images_MOST_POPULAR_HOSTS_BY_ABSOLUTEURI()
		{
			this._Host = default(EntityRef<Host>);
			OnCreated();
		}
		
		[Column(Storage="_RowNumber", DbType="Int NOT NULL")]
		public int RowNumber
		{
			get
			{
				return this._RowNumber;
			}
			set
			{
				if ((this._RowNumber != value))
				{
					this.OnRowNumberChanging(value);
					this.SendPropertyChanging();
					this._RowNumber = value;
					this.SendPropertyChanged("RowNumber");
					this.OnRowNumberChanged();
				}
			}
		}
		
		[Column(Storage="_InitiallyDiscovered", DbType="DateTime")]
		public System.Nullable<System.DateTime> InitiallyDiscovered
		{
			get
			{
				return this._InitiallyDiscovered;
			}
			set
			{
				if ((this._InitiallyDiscovered != value))
				{
					this.OnInitiallyDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._InitiallyDiscovered = value;
					this.SendPropertyChanged("InitiallyDiscovered");
					this.OnInitiallyDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_LastDiscovered", DbType="DateTime NOT NULL")]
		public System.DateTime LastDiscovered
		{
			get
			{
				return this._LastDiscovered;
			}
			set
			{
				if ((this._LastDiscovered != value))
				{
					this.OnLastDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._LastDiscovered = value;
					this.SendPropertyChanged("LastDiscovered");
					this.OnLastDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_HostID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int HostID
		{
			get
			{
				return this._HostID;
			}
			set
			{
				if ((this._HostID != value))
				{
					if (this._Host.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnHostIDChanging(value);
					this.SendPropertyChanging();
					this._HostID = value;
					this.SendPropertyChanged("HostID");
					this.OnHostIDChanged();
				}
			}
		}
		
		[Column(Storage="_Count", DbType="Int NOT NULL")]
		public int Count
		{
			get
			{
				return this._Count;
			}
			set
			{
				if ((this._Count != value))
				{
					this.OnCountChanging(value);
					this.SendPropertyChanging();
					this._Count = value;
					this.SendPropertyChanged("Count");
					this.OnCountChanged();
				}
			}
		}
		
		[Column(Storage="_DaysSinceInitiallyDiscovered", DbType="SmallInt")]
		public System.Nullable<short> DaysSinceInitiallyDiscovered
		{
			get
			{
				return this._DaysSinceInitiallyDiscovered;
			}
			set
			{
				if ((this._DaysSinceInitiallyDiscovered != value))
				{
					this.OnDaysSinceInitiallyDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._DaysSinceInitiallyDiscovered = value;
					this.SendPropertyChanged("DaysSinceInitiallyDiscovered");
					this.OnDaysSinceInitiallyDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_DaysSinceLastDiscovered", DbType="SmallInt NOT NULL")]
		public short DaysSinceLastDiscovered
		{
			get
			{
				return this._DaysSinceLastDiscovered;
			}
			set
			{
				if ((this._DaysSinceLastDiscovered != value))
				{
					this.OnDaysSinceLastDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._DaysSinceLastDiscovered = value;
					this.SendPropertyChanged("DaysSinceLastDiscovered");
					this.OnDaysSinceLastDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_Strength", DbType="Float")]
		public System.Nullable<double> Strength
		{
			get
			{
				return this._Strength;
			}
			set
			{
				if ((this._Strength != value))
				{
					this.OnStrengthChanging(value);
					this.SendPropertyChanging();
					this._Strength = value;
					this.SendPropertyChanged("Strength");
					this.OnStrengthChanged();
				}
			}
		}
		
		[Column(Storage="_Rank", DbType="Int NOT NULL")]
		public int Rank
		{
			get
			{
				return this._Rank;
			}
			set
			{
				if ((this._Rank != value))
				{
					this.OnRankChanging(value);
					this.SendPropertyChanging();
					this._Rank = value;
					this.SendPropertyChanged("Rank");
					this.OnRankChanged();
				}
			}
		}
		
		[Column(Storage="_DenseRank", DbType="Int NOT NULL")]
		public int DenseRank
		{
			get
			{
				return this._DenseRank;
			}
			set
			{
				if ((this._DenseRank != value))
				{
					this.OnDenseRankChanging(value);
					this.SendPropertyChanging();
					this._DenseRank = value;
					this.SendPropertyChanged("DenseRank");
					this.OnDenseRankChanged();
				}
			}
		}
		
		[Column(Storage="_NTile", DbType="TinyInt NOT NULL")]
		public byte NTile
		{
			get
			{
				return this._NTile;
			}
			set
			{
				if ((this._NTile != value))
				{
					this.OnNTileChanging(value);
					this.SendPropertyChanging();
					this._NTile = value;
					this.SendPropertyChanged("NTile");
					this.OnNTileChanged();
				}
			}
		}
		
		[Association(Name="Host_Images_MOST_POPULAR_HOSTS_BY_ABSOLUTEURI", Storage="_Host", ThisKey="HostID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Host Host
		{
			get
			{
				return this._Host.Entity;
			}
			set
			{
				Host previousValue = this._Host.Entity;
				if (((previousValue != value) 
							|| (this._Host.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Host.Entity = null;
						previousValue.Images_MOST_POPULAR_HOSTS_BY_ABSOLUTEURI = null;
					}
					this._Host.Entity = value;
					if ((value != null))
					{
						value.Images_MOST_POPULAR_HOSTS_BY_ABSOLUTEURI = this;
						this._HostID = value.ID;
					}
					else
					{
						this._HostID = default(int);
					}
					this.SendPropertyChanged("Host");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="rpt.Images_MOST_POPULAR_HOSTS_BY_DOMAINS")]
	public partial class Images_MOST_POPULAR_HOSTS_BY_DOMAIN : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RowNumber;
		
		private System.Nullable<System.DateTime> _InitiallyDiscovered;
		
		private System.DateTime _LastDiscovered;
		
		private int _HostID;
		
		private int _Count;
		
		private System.Nullable<short> _DaysSinceInitiallyDiscovered;
		
		private short _DaysSinceLastDiscovered;
		
		private System.Nullable<double> _Strength;
		
		private int _Rank;
		
		private int _DenseRank;
		
		private byte _NTile;
		
		private EntityRef<Host> _Host;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRowNumberChanging(int value);
    partial void OnRowNumberChanged();
    partial void OnInitiallyDiscoveredChanging(System.Nullable<System.DateTime> value);
    partial void OnInitiallyDiscoveredChanged();
    partial void OnLastDiscoveredChanging(System.DateTime value);
    partial void OnLastDiscoveredChanged();
    partial void OnHostIDChanging(int value);
    partial void OnHostIDChanged();
    partial void OnCountChanging(int value);
    partial void OnCountChanged();
    partial void OnDaysSinceInitiallyDiscoveredChanging(System.Nullable<short> value);
    partial void OnDaysSinceInitiallyDiscoveredChanged();
    partial void OnDaysSinceLastDiscoveredChanging(short value);
    partial void OnDaysSinceLastDiscoveredChanged();
    partial void OnStrengthChanging(System.Nullable<double> value);
    partial void OnStrengthChanged();
    partial void OnRankChanging(int value);
    partial void OnRankChanged();
    partial void OnDenseRankChanging(int value);
    partial void OnDenseRankChanged();
    partial void OnNTileChanging(byte value);
    partial void OnNTileChanged();
    #endregion
		
		public Images_MOST_POPULAR_HOSTS_BY_DOMAIN()
		{
			this._Host = default(EntityRef<Host>);
			OnCreated();
		}
		
		[Column(Storage="_RowNumber", DbType="Int NOT NULL")]
		public int RowNumber
		{
			get
			{
				return this._RowNumber;
			}
			set
			{
				if ((this._RowNumber != value))
				{
					this.OnRowNumberChanging(value);
					this.SendPropertyChanging();
					this._RowNumber = value;
					this.SendPropertyChanged("RowNumber");
					this.OnRowNumberChanged();
				}
			}
		}
		
		[Column(Storage="_InitiallyDiscovered", DbType="DateTime")]
		public System.Nullable<System.DateTime> InitiallyDiscovered
		{
			get
			{
				return this._InitiallyDiscovered;
			}
			set
			{
				if ((this._InitiallyDiscovered != value))
				{
					this.OnInitiallyDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._InitiallyDiscovered = value;
					this.SendPropertyChanged("InitiallyDiscovered");
					this.OnInitiallyDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_LastDiscovered", DbType="DateTime NOT NULL")]
		public System.DateTime LastDiscovered
		{
			get
			{
				return this._LastDiscovered;
			}
			set
			{
				if ((this._LastDiscovered != value))
				{
					this.OnLastDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._LastDiscovered = value;
					this.SendPropertyChanged("LastDiscovered");
					this.OnLastDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_HostID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int HostID
		{
			get
			{
				return this._HostID;
			}
			set
			{
				if ((this._HostID != value))
				{
					if (this._Host.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnHostIDChanging(value);
					this.SendPropertyChanging();
					this._HostID = value;
					this.SendPropertyChanged("HostID");
					this.OnHostIDChanged();
				}
			}
		}
		
		[Column(Storage="_Count", DbType="Int NOT NULL")]
		public int Count
		{
			get
			{
				return this._Count;
			}
			set
			{
				if ((this._Count != value))
				{
					this.OnCountChanging(value);
					this.SendPropertyChanging();
					this._Count = value;
					this.SendPropertyChanged("Count");
					this.OnCountChanged();
				}
			}
		}
		
		[Column(Storage="_DaysSinceInitiallyDiscovered", DbType="SmallInt")]
		public System.Nullable<short> DaysSinceInitiallyDiscovered
		{
			get
			{
				return this._DaysSinceInitiallyDiscovered;
			}
			set
			{
				if ((this._DaysSinceInitiallyDiscovered != value))
				{
					this.OnDaysSinceInitiallyDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._DaysSinceInitiallyDiscovered = value;
					this.SendPropertyChanged("DaysSinceInitiallyDiscovered");
					this.OnDaysSinceInitiallyDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_DaysSinceLastDiscovered", DbType="SmallInt NOT NULL")]
		public short DaysSinceLastDiscovered
		{
			get
			{
				return this._DaysSinceLastDiscovered;
			}
			set
			{
				if ((this._DaysSinceLastDiscovered != value))
				{
					this.OnDaysSinceLastDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._DaysSinceLastDiscovered = value;
					this.SendPropertyChanged("DaysSinceLastDiscovered");
					this.OnDaysSinceLastDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_Strength", DbType="Float")]
		public System.Nullable<double> Strength
		{
			get
			{
				return this._Strength;
			}
			set
			{
				if ((this._Strength != value))
				{
					this.OnStrengthChanging(value);
					this.SendPropertyChanging();
					this._Strength = value;
					this.SendPropertyChanged("Strength");
					this.OnStrengthChanged();
				}
			}
		}
		
		[Column(Storage="_Rank", DbType="Int NOT NULL")]
		public int Rank
		{
			get
			{
				return this._Rank;
			}
			set
			{
				if ((this._Rank != value))
				{
					this.OnRankChanging(value);
					this.SendPropertyChanging();
					this._Rank = value;
					this.SendPropertyChanged("Rank");
					this.OnRankChanged();
				}
			}
		}
		
		[Column(Storage="_DenseRank", DbType="Int NOT NULL")]
		public int DenseRank
		{
			get
			{
				return this._DenseRank;
			}
			set
			{
				if ((this._DenseRank != value))
				{
					this.OnDenseRankChanging(value);
					this.SendPropertyChanging();
					this._DenseRank = value;
					this.SendPropertyChanged("DenseRank");
					this.OnDenseRankChanged();
				}
			}
		}
		
		[Column(Storage="_NTile", DbType="TinyInt NOT NULL")]
		public byte NTile
		{
			get
			{
				return this._NTile;
			}
			set
			{
				if ((this._NTile != value))
				{
					this.OnNTileChanging(value);
					this.SendPropertyChanging();
					this._NTile = value;
					this.SendPropertyChanged("NTile");
					this.OnNTileChanged();
				}
			}
		}
		
		[Association(Name="Host_Images_MOST_POPULAR_HOSTS_BY_DOMAIN", Storage="_Host", ThisKey="HostID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Host Host
		{
			get
			{
				return this._Host.Entity;
			}
			set
			{
				Host previousValue = this._Host.Entity;
				if (((previousValue != value) 
							|| (this._Host.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Host.Entity = null;
						previousValue.Images_MOST_POPULAR_HOSTS_BY_DOMAIN = null;
					}
					this._Host.Entity = value;
					if ((value != null))
					{
						value.Images_MOST_POPULAR_HOSTS_BY_DOMAIN = this;
						this._HostID = value.ID;
					}
					else
					{
						this._HostID = default(int);
					}
					this.SendPropertyChanged("Host");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="rpt.Images_MOST_POPULAR_HOSTS_BY_EXTENSIONS")]
	public partial class Images_MOST_POPULAR_HOSTS_BY_EXTENSION : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RowNumber;
		
		private System.Nullable<System.DateTime> _InitiallyDiscovered;
		
		private System.DateTime _LastDiscovered;
		
		private int _HostID;
		
		private int _Count;
		
		private System.Nullable<short> _DaysSinceInitiallyDiscovered;
		
		private short _DaysSinceLastDiscovered;
		
		private System.Nullable<double> _Strength;
		
		private int _Rank;
		
		private int _DenseRank;
		
		private byte _NTile;
		
		private EntityRef<Host> _Host;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRowNumberChanging(int value);
    partial void OnRowNumberChanged();
    partial void OnInitiallyDiscoveredChanging(System.Nullable<System.DateTime> value);
    partial void OnInitiallyDiscoveredChanged();
    partial void OnLastDiscoveredChanging(System.DateTime value);
    partial void OnLastDiscoveredChanged();
    partial void OnHostIDChanging(int value);
    partial void OnHostIDChanged();
    partial void OnCountChanging(int value);
    partial void OnCountChanged();
    partial void OnDaysSinceInitiallyDiscoveredChanging(System.Nullable<short> value);
    partial void OnDaysSinceInitiallyDiscoveredChanged();
    partial void OnDaysSinceLastDiscoveredChanging(short value);
    partial void OnDaysSinceLastDiscoveredChanged();
    partial void OnStrengthChanging(System.Nullable<double> value);
    partial void OnStrengthChanged();
    partial void OnRankChanging(int value);
    partial void OnRankChanged();
    partial void OnDenseRankChanging(int value);
    partial void OnDenseRankChanged();
    partial void OnNTileChanging(byte value);
    partial void OnNTileChanged();
    #endregion
		
		public Images_MOST_POPULAR_HOSTS_BY_EXTENSION()
		{
			this._Host = default(EntityRef<Host>);
			OnCreated();
		}
		
		[Column(Storage="_RowNumber", DbType="Int NOT NULL")]
		public int RowNumber
		{
			get
			{
				return this._RowNumber;
			}
			set
			{
				if ((this._RowNumber != value))
				{
					this.OnRowNumberChanging(value);
					this.SendPropertyChanging();
					this._RowNumber = value;
					this.SendPropertyChanged("RowNumber");
					this.OnRowNumberChanged();
				}
			}
		}
		
		[Column(Storage="_InitiallyDiscovered", DbType="DateTime")]
		public System.Nullable<System.DateTime> InitiallyDiscovered
		{
			get
			{
				return this._InitiallyDiscovered;
			}
			set
			{
				if ((this._InitiallyDiscovered != value))
				{
					this.OnInitiallyDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._InitiallyDiscovered = value;
					this.SendPropertyChanged("InitiallyDiscovered");
					this.OnInitiallyDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_LastDiscovered", DbType="DateTime NOT NULL")]
		public System.DateTime LastDiscovered
		{
			get
			{
				return this._LastDiscovered;
			}
			set
			{
				if ((this._LastDiscovered != value))
				{
					this.OnLastDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._LastDiscovered = value;
					this.SendPropertyChanged("LastDiscovered");
					this.OnLastDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_HostID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int HostID
		{
			get
			{
				return this._HostID;
			}
			set
			{
				if ((this._HostID != value))
				{
					if (this._Host.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnHostIDChanging(value);
					this.SendPropertyChanging();
					this._HostID = value;
					this.SendPropertyChanged("HostID");
					this.OnHostIDChanged();
				}
			}
		}
		
		[Column(Storage="_Count", DbType="Int NOT NULL")]
		public int Count
		{
			get
			{
				return this._Count;
			}
			set
			{
				if ((this._Count != value))
				{
					this.OnCountChanging(value);
					this.SendPropertyChanging();
					this._Count = value;
					this.SendPropertyChanged("Count");
					this.OnCountChanged();
				}
			}
		}
		
		[Column(Storage="_DaysSinceInitiallyDiscovered", DbType="SmallInt")]
		public System.Nullable<short> DaysSinceInitiallyDiscovered
		{
			get
			{
				return this._DaysSinceInitiallyDiscovered;
			}
			set
			{
				if ((this._DaysSinceInitiallyDiscovered != value))
				{
					this.OnDaysSinceInitiallyDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._DaysSinceInitiallyDiscovered = value;
					this.SendPropertyChanged("DaysSinceInitiallyDiscovered");
					this.OnDaysSinceInitiallyDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_DaysSinceLastDiscovered", DbType="SmallInt NOT NULL")]
		public short DaysSinceLastDiscovered
		{
			get
			{
				return this._DaysSinceLastDiscovered;
			}
			set
			{
				if ((this._DaysSinceLastDiscovered != value))
				{
					this.OnDaysSinceLastDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._DaysSinceLastDiscovered = value;
					this.SendPropertyChanged("DaysSinceLastDiscovered");
					this.OnDaysSinceLastDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_Strength", DbType="Float")]
		public System.Nullable<double> Strength
		{
			get
			{
				return this._Strength;
			}
			set
			{
				if ((this._Strength != value))
				{
					this.OnStrengthChanging(value);
					this.SendPropertyChanging();
					this._Strength = value;
					this.SendPropertyChanged("Strength");
					this.OnStrengthChanged();
				}
			}
		}
		
		[Column(Storage="_Rank", DbType="Int NOT NULL")]
		public int Rank
		{
			get
			{
				return this._Rank;
			}
			set
			{
				if ((this._Rank != value))
				{
					this.OnRankChanging(value);
					this.SendPropertyChanging();
					this._Rank = value;
					this.SendPropertyChanged("Rank");
					this.OnRankChanged();
				}
			}
		}
		
		[Column(Storage="_DenseRank", DbType="Int NOT NULL")]
		public int DenseRank
		{
			get
			{
				return this._DenseRank;
			}
			set
			{
				if ((this._DenseRank != value))
				{
					this.OnDenseRankChanging(value);
					this.SendPropertyChanging();
					this._DenseRank = value;
					this.SendPropertyChanged("DenseRank");
					this.OnDenseRankChanged();
				}
			}
		}
		
		[Column(Storage="_NTile", DbType="TinyInt NOT NULL")]
		public byte NTile
		{
			get
			{
				return this._NTile;
			}
			set
			{
				if ((this._NTile != value))
				{
					this.OnNTileChanging(value);
					this.SendPropertyChanging();
					this._NTile = value;
					this.SendPropertyChanged("NTile");
					this.OnNTileChanged();
				}
			}
		}
		
		[Association(Name="Host_Images_MOST_POPULAR_HOSTS_BY_EXTENSION", Storage="_Host", ThisKey="HostID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Host Host
		{
			get
			{
				return this._Host.Entity;
			}
			set
			{
				Host previousValue = this._Host.Entity;
				if (((previousValue != value) 
							|| (this._Host.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Host.Entity = null;
						previousValue.Images_MOST_POPULAR_HOSTS_BY_EXTENSION = null;
					}
					this._Host.Entity = value;
					if ((value != null))
					{
						value.Images_MOST_POPULAR_HOSTS_BY_EXTENSION = this;
						this._HostID = value.ID;
					}
					else
					{
						this._HostID = default(int);
					}
					this.SendPropertyChanged("Host");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="rpt.Images_MOST_POPULAR_HOSTS_BY_HOSTS")]
	public partial class Images_MOST_POPULAR_HOSTS_BY_HOST : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RowNumber;
		
		private System.Nullable<System.DateTime> _InitiallyDiscovered;
		
		private System.DateTime _LastDiscovered;
		
		private int _HostID;
		
		private int _Count;
		
		private System.Nullable<short> _DaysSinceInitiallyDiscovered;
		
		private short _DaysSinceLastDiscovered;
		
		private System.Nullable<double> _Strength;
		
		private int _Rank;
		
		private int _DenseRank;
		
		private byte _NTile;
		
		private EntityRef<Host> _Host;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRowNumberChanging(int value);
    partial void OnRowNumberChanged();
    partial void OnInitiallyDiscoveredChanging(System.Nullable<System.DateTime> value);
    partial void OnInitiallyDiscoveredChanged();
    partial void OnLastDiscoveredChanging(System.DateTime value);
    partial void OnLastDiscoveredChanged();
    partial void OnHostIDChanging(int value);
    partial void OnHostIDChanged();
    partial void OnCountChanging(int value);
    partial void OnCountChanged();
    partial void OnDaysSinceInitiallyDiscoveredChanging(System.Nullable<short> value);
    partial void OnDaysSinceInitiallyDiscoveredChanged();
    partial void OnDaysSinceLastDiscoveredChanging(short value);
    partial void OnDaysSinceLastDiscoveredChanged();
    partial void OnStrengthChanging(System.Nullable<double> value);
    partial void OnStrengthChanged();
    partial void OnRankChanging(int value);
    partial void OnRankChanged();
    partial void OnDenseRankChanging(int value);
    partial void OnDenseRankChanged();
    partial void OnNTileChanging(byte value);
    partial void OnNTileChanged();
    #endregion
		
		public Images_MOST_POPULAR_HOSTS_BY_HOST()
		{
			this._Host = default(EntityRef<Host>);
			OnCreated();
		}
		
		[Column(Storage="_RowNumber", DbType="Int NOT NULL")]
		public int RowNumber
		{
			get
			{
				return this._RowNumber;
			}
			set
			{
				if ((this._RowNumber != value))
				{
					this.OnRowNumberChanging(value);
					this.SendPropertyChanging();
					this._RowNumber = value;
					this.SendPropertyChanged("RowNumber");
					this.OnRowNumberChanged();
				}
			}
		}
		
		[Column(Storage="_InitiallyDiscovered", DbType="DateTime")]
		public System.Nullable<System.DateTime> InitiallyDiscovered
		{
			get
			{
				return this._InitiallyDiscovered;
			}
			set
			{
				if ((this._InitiallyDiscovered != value))
				{
					this.OnInitiallyDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._InitiallyDiscovered = value;
					this.SendPropertyChanged("InitiallyDiscovered");
					this.OnInitiallyDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_LastDiscovered", DbType="DateTime NOT NULL")]
		public System.DateTime LastDiscovered
		{
			get
			{
				return this._LastDiscovered;
			}
			set
			{
				if ((this._LastDiscovered != value))
				{
					this.OnLastDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._LastDiscovered = value;
					this.SendPropertyChanged("LastDiscovered");
					this.OnLastDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_HostID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int HostID
		{
			get
			{
				return this._HostID;
			}
			set
			{
				if ((this._HostID != value))
				{
					if (this._Host.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnHostIDChanging(value);
					this.SendPropertyChanging();
					this._HostID = value;
					this.SendPropertyChanged("HostID");
					this.OnHostIDChanged();
				}
			}
		}
		
		[Column(Storage="_Count", DbType="Int NOT NULL")]
		public int Count
		{
			get
			{
				return this._Count;
			}
			set
			{
				if ((this._Count != value))
				{
					this.OnCountChanging(value);
					this.SendPropertyChanging();
					this._Count = value;
					this.SendPropertyChanged("Count");
					this.OnCountChanged();
				}
			}
		}
		
		[Column(Storage="_DaysSinceInitiallyDiscovered", DbType="SmallInt")]
		public System.Nullable<short> DaysSinceInitiallyDiscovered
		{
			get
			{
				return this._DaysSinceInitiallyDiscovered;
			}
			set
			{
				if ((this._DaysSinceInitiallyDiscovered != value))
				{
					this.OnDaysSinceInitiallyDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._DaysSinceInitiallyDiscovered = value;
					this.SendPropertyChanged("DaysSinceInitiallyDiscovered");
					this.OnDaysSinceInitiallyDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_DaysSinceLastDiscovered", DbType="SmallInt NOT NULL")]
		public short DaysSinceLastDiscovered
		{
			get
			{
				return this._DaysSinceLastDiscovered;
			}
			set
			{
				if ((this._DaysSinceLastDiscovered != value))
				{
					this.OnDaysSinceLastDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._DaysSinceLastDiscovered = value;
					this.SendPropertyChanged("DaysSinceLastDiscovered");
					this.OnDaysSinceLastDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_Strength", DbType="Float")]
		public System.Nullable<double> Strength
		{
			get
			{
				return this._Strength;
			}
			set
			{
				if ((this._Strength != value))
				{
					this.OnStrengthChanging(value);
					this.SendPropertyChanging();
					this._Strength = value;
					this.SendPropertyChanged("Strength");
					this.OnStrengthChanged();
				}
			}
		}
		
		[Column(Storage="_Rank", DbType="Int NOT NULL")]
		public int Rank
		{
			get
			{
				return this._Rank;
			}
			set
			{
				if ((this._Rank != value))
				{
					this.OnRankChanging(value);
					this.SendPropertyChanging();
					this._Rank = value;
					this.SendPropertyChanged("Rank");
					this.OnRankChanged();
				}
			}
		}
		
		[Column(Storage="_DenseRank", DbType="Int NOT NULL")]
		public int DenseRank
		{
			get
			{
				return this._DenseRank;
			}
			set
			{
				if ((this._DenseRank != value))
				{
					this.OnDenseRankChanging(value);
					this.SendPropertyChanging();
					this._DenseRank = value;
					this.SendPropertyChanged("DenseRank");
					this.OnDenseRankChanged();
				}
			}
		}
		
		[Column(Storage="_NTile", DbType="TinyInt NOT NULL")]
		public byte NTile
		{
			get
			{
				return this._NTile;
			}
			set
			{
				if ((this._NTile != value))
				{
					this.OnNTileChanging(value);
					this.SendPropertyChanging();
					this._NTile = value;
					this.SendPropertyChanged("NTile");
					this.OnNTileChanged();
				}
			}
		}
		
		[Association(Name="Host_Images_MOST_POPULAR_HOSTS_BY_HOST", Storage="_Host", ThisKey="HostID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Host Host
		{
			get
			{
				return this._Host.Entity;
			}
			set
			{
				Host previousValue = this._Host.Entity;
				if (((previousValue != value) 
							|| (this._Host.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Host.Entity = null;
						previousValue.Images_MOST_POPULAR_HOSTS_BY_HOST = null;
					}
					this._Host.Entity = value;
					if ((value != null))
					{
						value.Images_MOST_POPULAR_HOSTS_BY_HOST = this;
						this._HostID = value.ID;
					}
					else
					{
						this._HostID = default(int);
					}
					this.SendPropertyChanged("Host");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="rpt.Images_MOST_POPULAR_HOSTS_BY_SCHEMES")]
	public partial class Images_MOST_POPULAR_HOSTS_BY_SCHEME : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RowNumber;
		
		private System.Nullable<System.DateTime> _InitiallyDiscovered;
		
		private System.DateTime _LastDiscovered;
		
		private int _HostID;
		
		private int _Count;
		
		private System.Nullable<short> _DaysSinceInitiallyDiscovered;
		
		private short _DaysSinceLastDiscovered;
		
		private System.Nullable<double> _Strength;
		
		private int _Rank;
		
		private int _DenseRank;
		
		private byte _NTile;
		
		private EntityRef<Host> _Host;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRowNumberChanging(int value);
    partial void OnRowNumberChanged();
    partial void OnInitiallyDiscoveredChanging(System.Nullable<System.DateTime> value);
    partial void OnInitiallyDiscoveredChanged();
    partial void OnLastDiscoveredChanging(System.DateTime value);
    partial void OnLastDiscoveredChanged();
    partial void OnHostIDChanging(int value);
    partial void OnHostIDChanged();
    partial void OnCountChanging(int value);
    partial void OnCountChanged();
    partial void OnDaysSinceInitiallyDiscoveredChanging(System.Nullable<short> value);
    partial void OnDaysSinceInitiallyDiscoveredChanged();
    partial void OnDaysSinceLastDiscoveredChanging(short value);
    partial void OnDaysSinceLastDiscoveredChanged();
    partial void OnStrengthChanging(System.Nullable<double> value);
    partial void OnStrengthChanged();
    partial void OnRankChanging(int value);
    partial void OnRankChanged();
    partial void OnDenseRankChanging(int value);
    partial void OnDenseRankChanged();
    partial void OnNTileChanging(byte value);
    partial void OnNTileChanged();
    #endregion
		
		public Images_MOST_POPULAR_HOSTS_BY_SCHEME()
		{
			this._Host = default(EntityRef<Host>);
			OnCreated();
		}
		
		[Column(Storage="_RowNumber", DbType="Int NOT NULL")]
		public int RowNumber
		{
			get
			{
				return this._RowNumber;
			}
			set
			{
				if ((this._RowNumber != value))
				{
					this.OnRowNumberChanging(value);
					this.SendPropertyChanging();
					this._RowNumber = value;
					this.SendPropertyChanged("RowNumber");
					this.OnRowNumberChanged();
				}
			}
		}
		
		[Column(Storage="_InitiallyDiscovered", DbType="DateTime")]
		public System.Nullable<System.DateTime> InitiallyDiscovered
		{
			get
			{
				return this._InitiallyDiscovered;
			}
			set
			{
				if ((this._InitiallyDiscovered != value))
				{
					this.OnInitiallyDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._InitiallyDiscovered = value;
					this.SendPropertyChanged("InitiallyDiscovered");
					this.OnInitiallyDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_LastDiscovered", DbType="DateTime NOT NULL")]
		public System.DateTime LastDiscovered
		{
			get
			{
				return this._LastDiscovered;
			}
			set
			{
				if ((this._LastDiscovered != value))
				{
					this.OnLastDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._LastDiscovered = value;
					this.SendPropertyChanged("LastDiscovered");
					this.OnLastDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_HostID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int HostID
		{
			get
			{
				return this._HostID;
			}
			set
			{
				if ((this._HostID != value))
				{
					if (this._Host.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnHostIDChanging(value);
					this.SendPropertyChanging();
					this._HostID = value;
					this.SendPropertyChanged("HostID");
					this.OnHostIDChanged();
				}
			}
		}
		
		[Column(Storage="_Count", DbType="Int NOT NULL")]
		public int Count
		{
			get
			{
				return this._Count;
			}
			set
			{
				if ((this._Count != value))
				{
					this.OnCountChanging(value);
					this.SendPropertyChanging();
					this._Count = value;
					this.SendPropertyChanged("Count");
					this.OnCountChanged();
				}
			}
		}
		
		[Column(Storage="_DaysSinceInitiallyDiscovered", DbType="SmallInt")]
		public System.Nullable<short> DaysSinceInitiallyDiscovered
		{
			get
			{
				return this._DaysSinceInitiallyDiscovered;
			}
			set
			{
				if ((this._DaysSinceInitiallyDiscovered != value))
				{
					this.OnDaysSinceInitiallyDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._DaysSinceInitiallyDiscovered = value;
					this.SendPropertyChanged("DaysSinceInitiallyDiscovered");
					this.OnDaysSinceInitiallyDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_DaysSinceLastDiscovered", DbType="SmallInt NOT NULL")]
		public short DaysSinceLastDiscovered
		{
			get
			{
				return this._DaysSinceLastDiscovered;
			}
			set
			{
				if ((this._DaysSinceLastDiscovered != value))
				{
					this.OnDaysSinceLastDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._DaysSinceLastDiscovered = value;
					this.SendPropertyChanged("DaysSinceLastDiscovered");
					this.OnDaysSinceLastDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_Strength", DbType="Float")]
		public System.Nullable<double> Strength
		{
			get
			{
				return this._Strength;
			}
			set
			{
				if ((this._Strength != value))
				{
					this.OnStrengthChanging(value);
					this.SendPropertyChanging();
					this._Strength = value;
					this.SendPropertyChanged("Strength");
					this.OnStrengthChanged();
				}
			}
		}
		
		[Column(Storage="_Rank", DbType="Int NOT NULL")]
		public int Rank
		{
			get
			{
				return this._Rank;
			}
			set
			{
				if ((this._Rank != value))
				{
					this.OnRankChanging(value);
					this.SendPropertyChanging();
					this._Rank = value;
					this.SendPropertyChanged("Rank");
					this.OnRankChanged();
				}
			}
		}
		
		[Column(Storage="_DenseRank", DbType="Int NOT NULL")]
		public int DenseRank
		{
			get
			{
				return this._DenseRank;
			}
			set
			{
				if ((this._DenseRank != value))
				{
					this.OnDenseRankChanging(value);
					this.SendPropertyChanging();
					this._DenseRank = value;
					this.SendPropertyChanged("DenseRank");
					this.OnDenseRankChanged();
				}
			}
		}
		
		[Column(Storage="_NTile", DbType="TinyInt NOT NULL")]
		public byte NTile
		{
			get
			{
				return this._NTile;
			}
			set
			{
				if ((this._NTile != value))
				{
					this.OnNTileChanging(value);
					this.SendPropertyChanging();
					this._NTile = value;
					this.SendPropertyChanged("NTile");
					this.OnNTileChanged();
				}
			}
		}
		
		[Association(Name="Host_Images_MOST_POPULAR_HOSTS_BY_SCHEME", Storage="_Host", ThisKey="HostID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Host Host
		{
			get
			{
				return this._Host.Entity;
			}
			set
			{
				Host previousValue = this._Host.Entity;
				if (((previousValue != value) 
							|| (this._Host.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Host.Entity = null;
						previousValue.Images_MOST_POPULAR_HOSTS_BY_SCHEME = null;
					}
					this._Host.Entity = value;
					if ((value != null))
					{
						value.Images_MOST_POPULAR_HOSTS_BY_SCHEME = this;
						this._HostID = value.ID;
					}
					else
					{
						this._HostID = default(int);
					}
					this.SendPropertyChanged("Host");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="rpt.Images_MOST_POPULAR_SCHEMES_BY_ABSOLUTEURIS")]
	public partial class Images_MOST_POPULAR_SCHEMES_BY_ABSOLUTEURI : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RowNumber;
		
		private System.Nullable<System.DateTime> _InitiallyDiscovered;
		
		private System.DateTime _LastDiscovered;
		
		private int _SchemeID;
		
		private int _Count;
		
		private System.Nullable<short> _DaysSinceInitiallyDiscovered;
		
		private short _DaysSinceLastDiscovered;
		
		private System.Nullable<double> _Strength;
		
		private int _Rank;
		
		private int _DenseRank;
		
		private short _NTile;
		
		private EntityRef<Scheme> _Scheme;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRowNumberChanging(int value);
    partial void OnRowNumberChanged();
    partial void OnInitiallyDiscoveredChanging(System.Nullable<System.DateTime> value);
    partial void OnInitiallyDiscoveredChanged();
    partial void OnLastDiscoveredChanging(System.DateTime value);
    partial void OnLastDiscoveredChanged();
    partial void OnSchemeIDChanging(int value);
    partial void OnSchemeIDChanged();
    partial void OnCountChanging(int value);
    partial void OnCountChanged();
    partial void OnDaysSinceInitiallyDiscoveredChanging(System.Nullable<short> value);
    partial void OnDaysSinceInitiallyDiscoveredChanged();
    partial void OnDaysSinceLastDiscoveredChanging(short value);
    partial void OnDaysSinceLastDiscoveredChanged();
    partial void OnStrengthChanging(System.Nullable<double> value);
    partial void OnStrengthChanged();
    partial void OnRankChanging(int value);
    partial void OnRankChanged();
    partial void OnDenseRankChanging(int value);
    partial void OnDenseRankChanged();
    partial void OnNTileChanging(short value);
    partial void OnNTileChanged();
    #endregion
		
		public Images_MOST_POPULAR_SCHEMES_BY_ABSOLUTEURI()
		{
			this._Scheme = default(EntityRef<Scheme>);
			OnCreated();
		}
		
		[Column(Storage="_RowNumber", DbType="Int NOT NULL")]
		public int RowNumber
		{
			get
			{
				return this._RowNumber;
			}
			set
			{
				if ((this._RowNumber != value))
				{
					this.OnRowNumberChanging(value);
					this.SendPropertyChanging();
					this._RowNumber = value;
					this.SendPropertyChanged("RowNumber");
					this.OnRowNumberChanged();
				}
			}
		}
		
		[Column(Storage="_InitiallyDiscovered", DbType="DateTime")]
		public System.Nullable<System.DateTime> InitiallyDiscovered
		{
			get
			{
				return this._InitiallyDiscovered;
			}
			set
			{
				if ((this._InitiallyDiscovered != value))
				{
					this.OnInitiallyDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._InitiallyDiscovered = value;
					this.SendPropertyChanged("InitiallyDiscovered");
					this.OnInitiallyDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_LastDiscovered", DbType="DateTime NOT NULL")]
		public System.DateTime LastDiscovered
		{
			get
			{
				return this._LastDiscovered;
			}
			set
			{
				if ((this._LastDiscovered != value))
				{
					this.OnLastDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._LastDiscovered = value;
					this.SendPropertyChanged("LastDiscovered");
					this.OnLastDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_SchemeID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int SchemeID
		{
			get
			{
				return this._SchemeID;
			}
			set
			{
				if ((this._SchemeID != value))
				{
					if (this._Scheme.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSchemeIDChanging(value);
					this.SendPropertyChanging();
					this._SchemeID = value;
					this.SendPropertyChanged("SchemeID");
					this.OnSchemeIDChanged();
				}
			}
		}
		
		[Column(Storage="_Count", DbType="Int NOT NULL")]
		public int Count
		{
			get
			{
				return this._Count;
			}
			set
			{
				if ((this._Count != value))
				{
					this.OnCountChanging(value);
					this.SendPropertyChanging();
					this._Count = value;
					this.SendPropertyChanged("Count");
					this.OnCountChanged();
				}
			}
		}
		
		[Column(Storage="_DaysSinceInitiallyDiscovered", DbType="SmallInt")]
		public System.Nullable<short> DaysSinceInitiallyDiscovered
		{
			get
			{
				return this._DaysSinceInitiallyDiscovered;
			}
			set
			{
				if ((this._DaysSinceInitiallyDiscovered != value))
				{
					this.OnDaysSinceInitiallyDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._DaysSinceInitiallyDiscovered = value;
					this.SendPropertyChanged("DaysSinceInitiallyDiscovered");
					this.OnDaysSinceInitiallyDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_DaysSinceLastDiscovered", DbType="SmallInt NOT NULL")]
		public short DaysSinceLastDiscovered
		{
			get
			{
				return this._DaysSinceLastDiscovered;
			}
			set
			{
				if ((this._DaysSinceLastDiscovered != value))
				{
					this.OnDaysSinceLastDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._DaysSinceLastDiscovered = value;
					this.SendPropertyChanged("DaysSinceLastDiscovered");
					this.OnDaysSinceLastDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_Strength", DbType="Float")]
		public System.Nullable<double> Strength
		{
			get
			{
				return this._Strength;
			}
			set
			{
				if ((this._Strength != value))
				{
					this.OnStrengthChanging(value);
					this.SendPropertyChanging();
					this._Strength = value;
					this.SendPropertyChanged("Strength");
					this.OnStrengthChanged();
				}
			}
		}
		
		[Column(Storage="_Rank", DbType="Int NOT NULL")]
		public int Rank
		{
			get
			{
				return this._Rank;
			}
			set
			{
				if ((this._Rank != value))
				{
					this.OnRankChanging(value);
					this.SendPropertyChanging();
					this._Rank = value;
					this.SendPropertyChanged("Rank");
					this.OnRankChanged();
				}
			}
		}
		
		[Column(Storage="_DenseRank", DbType="Int NOT NULL")]
		public int DenseRank
		{
			get
			{
				return this._DenseRank;
			}
			set
			{
				if ((this._DenseRank != value))
				{
					this.OnDenseRankChanging(value);
					this.SendPropertyChanging();
					this._DenseRank = value;
					this.SendPropertyChanged("DenseRank");
					this.OnDenseRankChanged();
				}
			}
		}
		
		[Column(Storage="_NTile", DbType="SmallInt NOT NULL")]
		public short NTile
		{
			get
			{
				return this._NTile;
			}
			set
			{
				if ((this._NTile != value))
				{
					this.OnNTileChanging(value);
					this.SendPropertyChanging();
					this._NTile = value;
					this.SendPropertyChanged("NTile");
					this.OnNTileChanged();
				}
			}
		}
		
		[Association(Name="Scheme_Images_MOST_POPULAR_SCHEMES_BY_ABSOLUTEURI", Storage="_Scheme", ThisKey="SchemeID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Scheme Scheme
		{
			get
			{
				return this._Scheme.Entity;
			}
			set
			{
				Scheme previousValue = this._Scheme.Entity;
				if (((previousValue != value) 
							|| (this._Scheme.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Scheme.Entity = null;
						previousValue.Images_MOST_POPULAR_SCHEMES_BY_ABSOLUTEURI = null;
					}
					this._Scheme.Entity = value;
					if ((value != null))
					{
						value.Images_MOST_POPULAR_SCHEMES_BY_ABSOLUTEURI = this;
						this._SchemeID = value.ID;
					}
					else
					{
						this._SchemeID = default(int);
					}
					this.SendPropertyChanged("Scheme");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="rpt.Images_MOST_POPULAR_SCHEMES_BY_DOMAINS")]
	public partial class Images_MOST_POPULAR_SCHEMES_BY_DOMAIN : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RowNumber;
		
		private System.Nullable<System.DateTime> _InitiallyDiscovered;
		
		private System.DateTime _LastDiscovered;
		
		private int _SchemeID;
		
		private int _Count;
		
		private System.Nullable<short> _DaysSinceInitiallyDiscovered;
		
		private short _DaysSinceLastDiscovered;
		
		private System.Nullable<double> _Strength;
		
		private int _Rank;
		
		private int _DenseRank;
		
		private short _NTile;
		
		private EntityRef<Scheme> _Scheme;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRowNumberChanging(int value);
    partial void OnRowNumberChanged();
    partial void OnInitiallyDiscoveredChanging(System.Nullable<System.DateTime> value);
    partial void OnInitiallyDiscoveredChanged();
    partial void OnLastDiscoveredChanging(System.DateTime value);
    partial void OnLastDiscoveredChanged();
    partial void OnSchemeIDChanging(int value);
    partial void OnSchemeIDChanged();
    partial void OnCountChanging(int value);
    partial void OnCountChanged();
    partial void OnDaysSinceInitiallyDiscoveredChanging(System.Nullable<short> value);
    partial void OnDaysSinceInitiallyDiscoveredChanged();
    partial void OnDaysSinceLastDiscoveredChanging(short value);
    partial void OnDaysSinceLastDiscoveredChanged();
    partial void OnStrengthChanging(System.Nullable<double> value);
    partial void OnStrengthChanged();
    partial void OnRankChanging(int value);
    partial void OnRankChanged();
    partial void OnDenseRankChanging(int value);
    partial void OnDenseRankChanged();
    partial void OnNTileChanging(short value);
    partial void OnNTileChanged();
    #endregion
		
		public Images_MOST_POPULAR_SCHEMES_BY_DOMAIN()
		{
			this._Scheme = default(EntityRef<Scheme>);
			OnCreated();
		}
		
		[Column(Storage="_RowNumber", DbType="Int NOT NULL")]
		public int RowNumber
		{
			get
			{
				return this._RowNumber;
			}
			set
			{
				if ((this._RowNumber != value))
				{
					this.OnRowNumberChanging(value);
					this.SendPropertyChanging();
					this._RowNumber = value;
					this.SendPropertyChanged("RowNumber");
					this.OnRowNumberChanged();
				}
			}
		}
		
		[Column(Storage="_InitiallyDiscovered", DbType="DateTime")]
		public System.Nullable<System.DateTime> InitiallyDiscovered
		{
			get
			{
				return this._InitiallyDiscovered;
			}
			set
			{
				if ((this._InitiallyDiscovered != value))
				{
					this.OnInitiallyDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._InitiallyDiscovered = value;
					this.SendPropertyChanged("InitiallyDiscovered");
					this.OnInitiallyDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_LastDiscovered", DbType="DateTime NOT NULL")]
		public System.DateTime LastDiscovered
		{
			get
			{
				return this._LastDiscovered;
			}
			set
			{
				if ((this._LastDiscovered != value))
				{
					this.OnLastDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._LastDiscovered = value;
					this.SendPropertyChanged("LastDiscovered");
					this.OnLastDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_SchemeID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int SchemeID
		{
			get
			{
				return this._SchemeID;
			}
			set
			{
				if ((this._SchemeID != value))
				{
					if (this._Scheme.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSchemeIDChanging(value);
					this.SendPropertyChanging();
					this._SchemeID = value;
					this.SendPropertyChanged("SchemeID");
					this.OnSchemeIDChanged();
				}
			}
		}
		
		[Column(Storage="_Count", DbType="Int NOT NULL")]
		public int Count
		{
			get
			{
				return this._Count;
			}
			set
			{
				if ((this._Count != value))
				{
					this.OnCountChanging(value);
					this.SendPropertyChanging();
					this._Count = value;
					this.SendPropertyChanged("Count");
					this.OnCountChanged();
				}
			}
		}
		
		[Column(Storage="_DaysSinceInitiallyDiscovered", DbType="SmallInt")]
		public System.Nullable<short> DaysSinceInitiallyDiscovered
		{
			get
			{
				return this._DaysSinceInitiallyDiscovered;
			}
			set
			{
				if ((this._DaysSinceInitiallyDiscovered != value))
				{
					this.OnDaysSinceInitiallyDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._DaysSinceInitiallyDiscovered = value;
					this.SendPropertyChanged("DaysSinceInitiallyDiscovered");
					this.OnDaysSinceInitiallyDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_DaysSinceLastDiscovered", DbType="SmallInt NOT NULL")]
		public short DaysSinceLastDiscovered
		{
			get
			{
				return this._DaysSinceLastDiscovered;
			}
			set
			{
				if ((this._DaysSinceLastDiscovered != value))
				{
					this.OnDaysSinceLastDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._DaysSinceLastDiscovered = value;
					this.SendPropertyChanged("DaysSinceLastDiscovered");
					this.OnDaysSinceLastDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_Strength", DbType="Float")]
		public System.Nullable<double> Strength
		{
			get
			{
				return this._Strength;
			}
			set
			{
				if ((this._Strength != value))
				{
					this.OnStrengthChanging(value);
					this.SendPropertyChanging();
					this._Strength = value;
					this.SendPropertyChanged("Strength");
					this.OnStrengthChanged();
				}
			}
		}
		
		[Column(Storage="_Rank", DbType="Int NOT NULL")]
		public int Rank
		{
			get
			{
				return this._Rank;
			}
			set
			{
				if ((this._Rank != value))
				{
					this.OnRankChanging(value);
					this.SendPropertyChanging();
					this._Rank = value;
					this.SendPropertyChanged("Rank");
					this.OnRankChanged();
				}
			}
		}
		
		[Column(Storage="_DenseRank", DbType="Int NOT NULL")]
		public int DenseRank
		{
			get
			{
				return this._DenseRank;
			}
			set
			{
				if ((this._DenseRank != value))
				{
					this.OnDenseRankChanging(value);
					this.SendPropertyChanging();
					this._DenseRank = value;
					this.SendPropertyChanged("DenseRank");
					this.OnDenseRankChanged();
				}
			}
		}
		
		[Column(Storage="_NTile", DbType="SmallInt NOT NULL")]
		public short NTile
		{
			get
			{
				return this._NTile;
			}
			set
			{
				if ((this._NTile != value))
				{
					this.OnNTileChanging(value);
					this.SendPropertyChanging();
					this._NTile = value;
					this.SendPropertyChanged("NTile");
					this.OnNTileChanged();
				}
			}
		}
		
		[Association(Name="Scheme_Images_MOST_POPULAR_SCHEMES_BY_DOMAIN", Storage="_Scheme", ThisKey="SchemeID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Scheme Scheme
		{
			get
			{
				return this._Scheme.Entity;
			}
			set
			{
				Scheme previousValue = this._Scheme.Entity;
				if (((previousValue != value) 
							|| (this._Scheme.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Scheme.Entity = null;
						previousValue.Images_MOST_POPULAR_SCHEMES_BY_DOMAIN = null;
					}
					this._Scheme.Entity = value;
					if ((value != null))
					{
						value.Images_MOST_POPULAR_SCHEMES_BY_DOMAIN = this;
						this._SchemeID = value.ID;
					}
					else
					{
						this._SchemeID = default(int);
					}
					this.SendPropertyChanged("Scheme");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="rpt.Images_MOST_POPULAR_SCHEMES_BY_EXTENSIONS")]
	public partial class Images_MOST_POPULAR_SCHEMES_BY_EXTENSION : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RowNumber;
		
		private System.Nullable<System.DateTime> _InitiallyDiscovered;
		
		private System.DateTime _LastDiscovered;
		
		private int _SchemeID;
		
		private int _Count;
		
		private System.Nullable<short> _DaysSinceInitiallyDiscovered;
		
		private short _DaysSinceLastDiscovered;
		
		private System.Nullable<double> _Strength;
		
		private int _Rank;
		
		private int _DenseRank;
		
		private short _NTile;
		
		private EntityRef<Scheme> _Scheme;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRowNumberChanging(int value);
    partial void OnRowNumberChanged();
    partial void OnInitiallyDiscoveredChanging(System.Nullable<System.DateTime> value);
    partial void OnInitiallyDiscoveredChanged();
    partial void OnLastDiscoveredChanging(System.DateTime value);
    partial void OnLastDiscoveredChanged();
    partial void OnSchemeIDChanging(int value);
    partial void OnSchemeIDChanged();
    partial void OnCountChanging(int value);
    partial void OnCountChanged();
    partial void OnDaysSinceInitiallyDiscoveredChanging(System.Nullable<short> value);
    partial void OnDaysSinceInitiallyDiscoveredChanged();
    partial void OnDaysSinceLastDiscoveredChanging(short value);
    partial void OnDaysSinceLastDiscoveredChanged();
    partial void OnStrengthChanging(System.Nullable<double> value);
    partial void OnStrengthChanged();
    partial void OnRankChanging(int value);
    partial void OnRankChanged();
    partial void OnDenseRankChanging(int value);
    partial void OnDenseRankChanged();
    partial void OnNTileChanging(short value);
    partial void OnNTileChanged();
    #endregion
		
		public Images_MOST_POPULAR_SCHEMES_BY_EXTENSION()
		{
			this._Scheme = default(EntityRef<Scheme>);
			OnCreated();
		}
		
		[Column(Storage="_RowNumber", DbType="Int NOT NULL")]
		public int RowNumber
		{
			get
			{
				return this._RowNumber;
			}
			set
			{
				if ((this._RowNumber != value))
				{
					this.OnRowNumberChanging(value);
					this.SendPropertyChanging();
					this._RowNumber = value;
					this.SendPropertyChanged("RowNumber");
					this.OnRowNumberChanged();
				}
			}
		}
		
		[Column(Storage="_InitiallyDiscovered", DbType="DateTime")]
		public System.Nullable<System.DateTime> InitiallyDiscovered
		{
			get
			{
				return this._InitiallyDiscovered;
			}
			set
			{
				if ((this._InitiallyDiscovered != value))
				{
					this.OnInitiallyDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._InitiallyDiscovered = value;
					this.SendPropertyChanged("InitiallyDiscovered");
					this.OnInitiallyDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_LastDiscovered", DbType="DateTime NOT NULL")]
		public System.DateTime LastDiscovered
		{
			get
			{
				return this._LastDiscovered;
			}
			set
			{
				if ((this._LastDiscovered != value))
				{
					this.OnLastDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._LastDiscovered = value;
					this.SendPropertyChanged("LastDiscovered");
					this.OnLastDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_SchemeID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int SchemeID
		{
			get
			{
				return this._SchemeID;
			}
			set
			{
				if ((this._SchemeID != value))
				{
					if (this._Scheme.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSchemeIDChanging(value);
					this.SendPropertyChanging();
					this._SchemeID = value;
					this.SendPropertyChanged("SchemeID");
					this.OnSchemeIDChanged();
				}
			}
		}
		
		[Column(Storage="_Count", DbType="Int NOT NULL")]
		public int Count
		{
			get
			{
				return this._Count;
			}
			set
			{
				if ((this._Count != value))
				{
					this.OnCountChanging(value);
					this.SendPropertyChanging();
					this._Count = value;
					this.SendPropertyChanged("Count");
					this.OnCountChanged();
				}
			}
		}
		
		[Column(Storage="_DaysSinceInitiallyDiscovered", DbType="SmallInt")]
		public System.Nullable<short> DaysSinceInitiallyDiscovered
		{
			get
			{
				return this._DaysSinceInitiallyDiscovered;
			}
			set
			{
				if ((this._DaysSinceInitiallyDiscovered != value))
				{
					this.OnDaysSinceInitiallyDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._DaysSinceInitiallyDiscovered = value;
					this.SendPropertyChanged("DaysSinceInitiallyDiscovered");
					this.OnDaysSinceInitiallyDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_DaysSinceLastDiscovered", DbType="SmallInt NOT NULL")]
		public short DaysSinceLastDiscovered
		{
			get
			{
				return this._DaysSinceLastDiscovered;
			}
			set
			{
				if ((this._DaysSinceLastDiscovered != value))
				{
					this.OnDaysSinceLastDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._DaysSinceLastDiscovered = value;
					this.SendPropertyChanged("DaysSinceLastDiscovered");
					this.OnDaysSinceLastDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_Strength", DbType="Float")]
		public System.Nullable<double> Strength
		{
			get
			{
				return this._Strength;
			}
			set
			{
				if ((this._Strength != value))
				{
					this.OnStrengthChanging(value);
					this.SendPropertyChanging();
					this._Strength = value;
					this.SendPropertyChanged("Strength");
					this.OnStrengthChanged();
				}
			}
		}
		
		[Column(Storage="_Rank", DbType="Int NOT NULL")]
		public int Rank
		{
			get
			{
				return this._Rank;
			}
			set
			{
				if ((this._Rank != value))
				{
					this.OnRankChanging(value);
					this.SendPropertyChanging();
					this._Rank = value;
					this.SendPropertyChanged("Rank");
					this.OnRankChanged();
				}
			}
		}
		
		[Column(Storage="_DenseRank", DbType="Int NOT NULL")]
		public int DenseRank
		{
			get
			{
				return this._DenseRank;
			}
			set
			{
				if ((this._DenseRank != value))
				{
					this.OnDenseRankChanging(value);
					this.SendPropertyChanging();
					this._DenseRank = value;
					this.SendPropertyChanged("DenseRank");
					this.OnDenseRankChanged();
				}
			}
		}
		
		[Column(Storage="_NTile", DbType="SmallInt NOT NULL")]
		public short NTile
		{
			get
			{
				return this._NTile;
			}
			set
			{
				if ((this._NTile != value))
				{
					this.OnNTileChanging(value);
					this.SendPropertyChanging();
					this._NTile = value;
					this.SendPropertyChanged("NTile");
					this.OnNTileChanged();
				}
			}
		}
		
		[Association(Name="Scheme_Images_MOST_POPULAR_SCHEMES_BY_EXTENSION", Storage="_Scheme", ThisKey="SchemeID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Scheme Scheme
		{
			get
			{
				return this._Scheme.Entity;
			}
			set
			{
				Scheme previousValue = this._Scheme.Entity;
				if (((previousValue != value) 
							|| (this._Scheme.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Scheme.Entity = null;
						previousValue.Images_MOST_POPULAR_SCHEMES_BY_EXTENSION = null;
					}
					this._Scheme.Entity = value;
					if ((value != null))
					{
						value.Images_MOST_POPULAR_SCHEMES_BY_EXTENSION = this;
						this._SchemeID = value.ID;
					}
					else
					{
						this._SchemeID = default(int);
					}
					this.SendPropertyChanged("Scheme");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="rpt.Images_MOST_POPULAR_SCHEMES_BY_HOSTS")]
	public partial class Images_MOST_POPULAR_SCHEMES_BY_HOST : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RowNumber;
		
		private System.Nullable<System.DateTime> _InitiallyDiscovered;
		
		private System.DateTime _LastDiscovered;
		
		private int _SchemeID;
		
		private int _Count;
		
		private System.Nullable<short> _DaysSinceInitiallyDiscovered;
		
		private short _DaysSinceLastDiscovered;
		
		private System.Nullable<double> _Strength;
		
		private int _Rank;
		
		private int _DenseRank;
		
		private short _NTile;
		
		private EntityRef<Scheme> _Scheme;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRowNumberChanging(int value);
    partial void OnRowNumberChanged();
    partial void OnInitiallyDiscoveredChanging(System.Nullable<System.DateTime> value);
    partial void OnInitiallyDiscoveredChanged();
    partial void OnLastDiscoveredChanging(System.DateTime value);
    partial void OnLastDiscoveredChanged();
    partial void OnSchemeIDChanging(int value);
    partial void OnSchemeIDChanged();
    partial void OnCountChanging(int value);
    partial void OnCountChanged();
    partial void OnDaysSinceInitiallyDiscoveredChanging(System.Nullable<short> value);
    partial void OnDaysSinceInitiallyDiscoveredChanged();
    partial void OnDaysSinceLastDiscoveredChanging(short value);
    partial void OnDaysSinceLastDiscoveredChanged();
    partial void OnStrengthChanging(System.Nullable<double> value);
    partial void OnStrengthChanged();
    partial void OnRankChanging(int value);
    partial void OnRankChanged();
    partial void OnDenseRankChanging(int value);
    partial void OnDenseRankChanged();
    partial void OnNTileChanging(short value);
    partial void OnNTileChanged();
    #endregion
		
		public Images_MOST_POPULAR_SCHEMES_BY_HOST()
		{
			this._Scheme = default(EntityRef<Scheme>);
			OnCreated();
		}
		
		[Column(Storage="_RowNumber", DbType="Int NOT NULL")]
		public int RowNumber
		{
			get
			{
				return this._RowNumber;
			}
			set
			{
				if ((this._RowNumber != value))
				{
					this.OnRowNumberChanging(value);
					this.SendPropertyChanging();
					this._RowNumber = value;
					this.SendPropertyChanged("RowNumber");
					this.OnRowNumberChanged();
				}
			}
		}
		
		[Column(Storage="_InitiallyDiscovered", DbType="DateTime")]
		public System.Nullable<System.DateTime> InitiallyDiscovered
		{
			get
			{
				return this._InitiallyDiscovered;
			}
			set
			{
				if ((this._InitiallyDiscovered != value))
				{
					this.OnInitiallyDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._InitiallyDiscovered = value;
					this.SendPropertyChanged("InitiallyDiscovered");
					this.OnInitiallyDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_LastDiscovered", DbType="DateTime NOT NULL")]
		public System.DateTime LastDiscovered
		{
			get
			{
				return this._LastDiscovered;
			}
			set
			{
				if ((this._LastDiscovered != value))
				{
					this.OnLastDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._LastDiscovered = value;
					this.SendPropertyChanged("LastDiscovered");
					this.OnLastDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_SchemeID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int SchemeID
		{
			get
			{
				return this._SchemeID;
			}
			set
			{
				if ((this._SchemeID != value))
				{
					if (this._Scheme.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSchemeIDChanging(value);
					this.SendPropertyChanging();
					this._SchemeID = value;
					this.SendPropertyChanged("SchemeID");
					this.OnSchemeIDChanged();
				}
			}
		}
		
		[Column(Storage="_Count", DbType="Int NOT NULL")]
		public int Count
		{
			get
			{
				return this._Count;
			}
			set
			{
				if ((this._Count != value))
				{
					this.OnCountChanging(value);
					this.SendPropertyChanging();
					this._Count = value;
					this.SendPropertyChanged("Count");
					this.OnCountChanged();
				}
			}
		}
		
		[Column(Storage="_DaysSinceInitiallyDiscovered", DbType="SmallInt")]
		public System.Nullable<short> DaysSinceInitiallyDiscovered
		{
			get
			{
				return this._DaysSinceInitiallyDiscovered;
			}
			set
			{
				if ((this._DaysSinceInitiallyDiscovered != value))
				{
					this.OnDaysSinceInitiallyDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._DaysSinceInitiallyDiscovered = value;
					this.SendPropertyChanged("DaysSinceInitiallyDiscovered");
					this.OnDaysSinceInitiallyDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_DaysSinceLastDiscovered", DbType="SmallInt NOT NULL")]
		public short DaysSinceLastDiscovered
		{
			get
			{
				return this._DaysSinceLastDiscovered;
			}
			set
			{
				if ((this._DaysSinceLastDiscovered != value))
				{
					this.OnDaysSinceLastDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._DaysSinceLastDiscovered = value;
					this.SendPropertyChanged("DaysSinceLastDiscovered");
					this.OnDaysSinceLastDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_Strength", DbType="Float")]
		public System.Nullable<double> Strength
		{
			get
			{
				return this._Strength;
			}
			set
			{
				if ((this._Strength != value))
				{
					this.OnStrengthChanging(value);
					this.SendPropertyChanging();
					this._Strength = value;
					this.SendPropertyChanged("Strength");
					this.OnStrengthChanged();
				}
			}
		}
		
		[Column(Storage="_Rank", DbType="Int NOT NULL")]
		public int Rank
		{
			get
			{
				return this._Rank;
			}
			set
			{
				if ((this._Rank != value))
				{
					this.OnRankChanging(value);
					this.SendPropertyChanging();
					this._Rank = value;
					this.SendPropertyChanged("Rank");
					this.OnRankChanged();
				}
			}
		}
		
		[Column(Storage="_DenseRank", DbType="Int NOT NULL")]
		public int DenseRank
		{
			get
			{
				return this._DenseRank;
			}
			set
			{
				if ((this._DenseRank != value))
				{
					this.OnDenseRankChanging(value);
					this.SendPropertyChanging();
					this._DenseRank = value;
					this.SendPropertyChanged("DenseRank");
					this.OnDenseRankChanged();
				}
			}
		}
		
		[Column(Storage="_NTile", DbType="SmallInt NOT NULL")]
		public short NTile
		{
			get
			{
				return this._NTile;
			}
			set
			{
				if ((this._NTile != value))
				{
					this.OnNTileChanging(value);
					this.SendPropertyChanging();
					this._NTile = value;
					this.SendPropertyChanged("NTile");
					this.OnNTileChanged();
				}
			}
		}
		
		[Association(Name="Scheme_Images_MOST_POPULAR_SCHEMES_BY_HOST", Storage="_Scheme", ThisKey="SchemeID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Scheme Scheme
		{
			get
			{
				return this._Scheme.Entity;
			}
			set
			{
				Scheme previousValue = this._Scheme.Entity;
				if (((previousValue != value) 
							|| (this._Scheme.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Scheme.Entity = null;
						previousValue.Images_MOST_POPULAR_SCHEMES_BY_HOST = null;
					}
					this._Scheme.Entity = value;
					if ((value != null))
					{
						value.Images_MOST_POPULAR_SCHEMES_BY_HOST = this;
						this._SchemeID = value.ID;
					}
					else
					{
						this._SchemeID = default(int);
					}
					this.SendPropertyChanged("Scheme");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="rpt.Images_MOST_POPULAR_SCHEMES_BY_SCHEMES")]
	public partial class Images_MOST_POPULAR_SCHEMES_BY_SCHEME : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RowNumber;
		
		private System.Nullable<System.DateTime> _InitiallyDiscovered;
		
		private System.DateTime _LastDiscovered;
		
		private int _SchemeID;
		
		private int _Count;
		
		private System.Nullable<short> _DaysSinceInitiallyDiscovered;
		
		private short _DaysSinceLastDiscovered;
		
		private System.Nullable<double> _Strength;
		
		private int _Rank;
		
		private int _DenseRank;
		
		private short _NTile;
		
		private EntityRef<Scheme> _Scheme;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRowNumberChanging(int value);
    partial void OnRowNumberChanged();
    partial void OnInitiallyDiscoveredChanging(System.Nullable<System.DateTime> value);
    partial void OnInitiallyDiscoveredChanged();
    partial void OnLastDiscoveredChanging(System.DateTime value);
    partial void OnLastDiscoveredChanged();
    partial void OnSchemeIDChanging(int value);
    partial void OnSchemeIDChanged();
    partial void OnCountChanging(int value);
    partial void OnCountChanged();
    partial void OnDaysSinceInitiallyDiscoveredChanging(System.Nullable<short> value);
    partial void OnDaysSinceInitiallyDiscoveredChanged();
    partial void OnDaysSinceLastDiscoveredChanging(short value);
    partial void OnDaysSinceLastDiscoveredChanged();
    partial void OnStrengthChanging(System.Nullable<double> value);
    partial void OnStrengthChanged();
    partial void OnRankChanging(int value);
    partial void OnRankChanged();
    partial void OnDenseRankChanging(int value);
    partial void OnDenseRankChanged();
    partial void OnNTileChanging(short value);
    partial void OnNTileChanged();
    #endregion
		
		public Images_MOST_POPULAR_SCHEMES_BY_SCHEME()
		{
			this._Scheme = default(EntityRef<Scheme>);
			OnCreated();
		}
		
		[Column(Storage="_RowNumber", DbType="Int NOT NULL")]
		public int RowNumber
		{
			get
			{
				return this._RowNumber;
			}
			set
			{
				if ((this._RowNumber != value))
				{
					this.OnRowNumberChanging(value);
					this.SendPropertyChanging();
					this._RowNumber = value;
					this.SendPropertyChanged("RowNumber");
					this.OnRowNumberChanged();
				}
			}
		}
		
		[Column(Storage="_InitiallyDiscovered", DbType="DateTime")]
		public System.Nullable<System.DateTime> InitiallyDiscovered
		{
			get
			{
				return this._InitiallyDiscovered;
			}
			set
			{
				if ((this._InitiallyDiscovered != value))
				{
					this.OnInitiallyDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._InitiallyDiscovered = value;
					this.SendPropertyChanged("InitiallyDiscovered");
					this.OnInitiallyDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_LastDiscovered", DbType="DateTime NOT NULL")]
		public System.DateTime LastDiscovered
		{
			get
			{
				return this._LastDiscovered;
			}
			set
			{
				if ((this._LastDiscovered != value))
				{
					this.OnLastDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._LastDiscovered = value;
					this.SendPropertyChanged("LastDiscovered");
					this.OnLastDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_SchemeID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int SchemeID
		{
			get
			{
				return this._SchemeID;
			}
			set
			{
				if ((this._SchemeID != value))
				{
					if (this._Scheme.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSchemeIDChanging(value);
					this.SendPropertyChanging();
					this._SchemeID = value;
					this.SendPropertyChanged("SchemeID");
					this.OnSchemeIDChanged();
				}
			}
		}
		
		[Column(Storage="_Count", DbType="Int NOT NULL")]
		public int Count
		{
			get
			{
				return this._Count;
			}
			set
			{
				if ((this._Count != value))
				{
					this.OnCountChanging(value);
					this.SendPropertyChanging();
					this._Count = value;
					this.SendPropertyChanged("Count");
					this.OnCountChanged();
				}
			}
		}
		
		[Column(Storage="_DaysSinceInitiallyDiscovered", DbType="SmallInt")]
		public System.Nullable<short> DaysSinceInitiallyDiscovered
		{
			get
			{
				return this._DaysSinceInitiallyDiscovered;
			}
			set
			{
				if ((this._DaysSinceInitiallyDiscovered != value))
				{
					this.OnDaysSinceInitiallyDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._DaysSinceInitiallyDiscovered = value;
					this.SendPropertyChanged("DaysSinceInitiallyDiscovered");
					this.OnDaysSinceInitiallyDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_DaysSinceLastDiscovered", DbType="SmallInt NOT NULL")]
		public short DaysSinceLastDiscovered
		{
			get
			{
				return this._DaysSinceLastDiscovered;
			}
			set
			{
				if ((this._DaysSinceLastDiscovered != value))
				{
					this.OnDaysSinceLastDiscoveredChanging(value);
					this.SendPropertyChanging();
					this._DaysSinceLastDiscovered = value;
					this.SendPropertyChanged("DaysSinceLastDiscovered");
					this.OnDaysSinceLastDiscoveredChanged();
				}
			}
		}
		
		[Column(Storage="_Strength", DbType="Float")]
		public System.Nullable<double> Strength
		{
			get
			{
				return this._Strength;
			}
			set
			{
				if ((this._Strength != value))
				{
					this.OnStrengthChanging(value);
					this.SendPropertyChanging();
					this._Strength = value;
					this.SendPropertyChanged("Strength");
					this.OnStrengthChanged();
				}
			}
		}
		
		[Column(Storage="_Rank", DbType="Int NOT NULL")]
		public int Rank
		{
			get
			{
				return this._Rank;
			}
			set
			{
				if ((this._Rank != value))
				{
					this.OnRankChanging(value);
					this.SendPropertyChanging();
					this._Rank = value;
					this.SendPropertyChanged("Rank");
					this.OnRankChanged();
				}
			}
		}
		
		[Column(Storage="_DenseRank", DbType="Int NOT NULL")]
		public int DenseRank
		{
			get
			{
				return this._DenseRank;
			}
			set
			{
				if ((this._DenseRank != value))
				{
					this.OnDenseRankChanging(value);
					this.SendPropertyChanging();
					this._DenseRank = value;
					this.SendPropertyChanged("DenseRank");
					this.OnDenseRankChanged();
				}
			}
		}
		
		[Column(Storage="_NTile", DbType="SmallInt NOT NULL")]
		public short NTile
		{
			get
			{
				return this._NTile;
			}
			set
			{
				if ((this._NTile != value))
				{
					this.OnNTileChanging(value);
					this.SendPropertyChanging();
					this._NTile = value;
					this.SendPropertyChanged("NTile");
					this.OnNTileChanged();
				}
			}
		}
		
		[Association(Name="Scheme_Images_MOST_POPULAR_SCHEMES_BY_SCHEME", Storage="_Scheme", ThisKey="SchemeID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Scheme Scheme
		{
			get
			{
				return this._Scheme.Entity;
			}
			set
			{
				Scheme previousValue = this._Scheme.Entity;
				if (((previousValue != value) 
							|| (this._Scheme.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Scheme.Entity = null;
						previousValue.Images_MOST_POPULAR_SCHEMES_BY_SCHEME = null;
					}
					this._Scheme.Entity = value;
					if ((value != null))
					{
						value.Images_MOST_POPULAR_SCHEMES_BY_SCHEME = this;
						this._SchemeID = value.ID;
					}
					else
					{
						this._SchemeID = default(int);
					}
					this.SendPropertyChanged("Scheme");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="rpt.WebPages_COUNT_BY_DOMAIN")]
	public partial class WebPages_COUNT_BY_DOMAIN : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RowNumber;
		
		private string _Domain;
		
		private int _Count;
		
		private int _Rank;
		
		private int _DenseRank;
		
		private byte _NTile;
		
		private EntityRef<Domain> _Domain1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRowNumberChanging(int value);
    partial void OnRowNumberChanged();
    partial void OnDomainChanging(string value);
    partial void OnDomainChanged();
    partial void OnCountChanging(int value);
    partial void OnCountChanged();
    partial void OnRankChanging(int value);
    partial void OnRankChanged();
    partial void OnDenseRankChanging(int value);
    partial void OnDenseRankChanged();
    partial void OnNTileChanging(byte value);
    partial void OnNTileChanged();
    #endregion
		
		public WebPages_COUNT_BY_DOMAIN()
		{
			this._Domain1 = default(EntityRef<Domain>);
			OnCreated();
		}
		
		[Column(Storage="_RowNumber", DbType="Int NOT NULL")]
		public int RowNumber
		{
			get
			{
				return this._RowNumber;
			}
			set
			{
				if ((this._RowNumber != value))
				{
					this.OnRowNumberChanging(value);
					this.SendPropertyChanging();
					this._RowNumber = value;
					this.SendPropertyChanged("RowNumber");
					this.OnRowNumberChanged();
				}
			}
		}
		
		[Column(Storage="_Domain", DbType="VarChar(884) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Domain
		{
			get
			{
				return this._Domain;
			}
			set
			{
				if ((this._Domain != value))
				{
					if (this._Domain1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDomainChanging(value);
					this.SendPropertyChanging();
					this._Domain = value;
					this.SendPropertyChanged("Domain");
					this.OnDomainChanged();
				}
			}
		}
		
		[Column(Storage="_Count", DbType="Int NOT NULL")]
		public int Count
		{
			get
			{
				return this._Count;
			}
			set
			{
				if ((this._Count != value))
				{
					this.OnCountChanging(value);
					this.SendPropertyChanging();
					this._Count = value;
					this.SendPropertyChanged("Count");
					this.OnCountChanged();
				}
			}
		}
		
		[Column(Storage="_Rank", DbType="Int NOT NULL")]
		public int Rank
		{
			get
			{
				return this._Rank;
			}
			set
			{
				if ((this._Rank != value))
				{
					this.OnRankChanging(value);
					this.SendPropertyChanging();
					this._Rank = value;
					this.SendPropertyChanged("Rank");
					this.OnRankChanged();
				}
			}
		}
		
		[Column(Storage="_DenseRank", DbType="Int NOT NULL")]
		public int DenseRank
		{
			get
			{
				return this._DenseRank;
			}
			set
			{
				if ((this._DenseRank != value))
				{
					this.OnDenseRankChanging(value);
					this.SendPropertyChanging();
					this._DenseRank = value;
					this.SendPropertyChanged("DenseRank");
					this.OnDenseRankChanged();
				}
			}
		}
		
		[Column(Storage="_NTile", DbType="TinyInt NOT NULL")]
		public byte NTile
		{
			get
			{
				return this._NTile;
			}
			set
			{
				if ((this._NTile != value))
				{
					this.OnNTileChanging(value);
					this.SendPropertyChanging();
					this._NTile = value;
					this.SendPropertyChanged("NTile");
					this.OnNTileChanged();
				}
			}
		}
		
		[Association(Name="Domain_WebPages_COUNT_BY_DOMAIN", Storage="_Domain1", ThisKey="Domain", OtherKey="Domain1", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Domain Domain1
		{
			get
			{
				return this._Domain1.Entity;
			}
			set
			{
				Domain previousValue = this._Domain1.Entity;
				if (((previousValue != value) 
							|| (this._Domain1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Domain1.Entity = null;
						previousValue.WebPages_COUNT_BY_DOMAIN = null;
					}
					this._Domain1.Entity = value;
					if ((value != null))
					{
						value.WebPages_COUNT_BY_DOMAIN = this;
						this._Domain = value.Domain1;
					}
					else
					{
						this._Domain = default(string);
					}
					this.SendPropertyChanged("Domain1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="rpt.WebPages_COUNT_BY_EXTENSION")]
	public partial class WebPages_COUNT_BY_EXTENSION : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RowNumber;
		
		private string _Extension;
		
		private int _Count;
		
		private int _Rank;
		
		private int _DenseRank;
		
		private byte _NTile;
		
		private EntityRef<Extension> _Extension1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRowNumberChanging(int value);
    partial void OnRowNumberChanged();
    partial void OnExtensionChanging(string value);
    partial void OnExtensionChanged();
    partial void OnCountChanging(int value);
    partial void OnCountChanged();
    partial void OnRankChanging(int value);
    partial void OnRankChanged();
    partial void OnDenseRankChanging(int value);
    partial void OnDenseRankChanged();
    partial void OnNTileChanging(byte value);
    partial void OnNTileChanged();
    #endregion
		
		public WebPages_COUNT_BY_EXTENSION()
		{
			this._Extension1 = default(EntityRef<Extension>);
			OnCreated();
		}
		
		[Column(Storage="_RowNumber", DbType="Int NOT NULL")]
		public int RowNumber
		{
			get
			{
				return this._RowNumber;
			}
			set
			{
				if ((this._RowNumber != value))
				{
					this.OnRowNumberChanging(value);
					this.SendPropertyChanging();
					this._RowNumber = value;
					this.SendPropertyChanged("RowNumber");
					this.OnRowNumberChanged();
				}
			}
		}
		
		[Column(Storage="_Extension", DbType="VarChar(884) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Extension
		{
			get
			{
				return this._Extension;
			}
			set
			{
				if ((this._Extension != value))
				{
					if (this._Extension1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnExtensionChanging(value);
					this.SendPropertyChanging();
					this._Extension = value;
					this.SendPropertyChanged("Extension");
					this.OnExtensionChanged();
				}
			}
		}
		
		[Column(Storage="_Count", DbType="Int NOT NULL")]
		public int Count
		{
			get
			{
				return this._Count;
			}
			set
			{
				if ((this._Count != value))
				{
					this.OnCountChanging(value);
					this.SendPropertyChanging();
					this._Count = value;
					this.SendPropertyChanged("Count");
					this.OnCountChanged();
				}
			}
		}
		
		[Column(Storage="_Rank", DbType="Int NOT NULL")]
		public int Rank
		{
			get
			{
				return this._Rank;
			}
			set
			{
				if ((this._Rank != value))
				{
					this.OnRankChanging(value);
					this.SendPropertyChanging();
					this._Rank = value;
					this.SendPropertyChanged("Rank");
					this.OnRankChanged();
				}
			}
		}
		
		[Column(Storage="_DenseRank", DbType="Int NOT NULL")]
		public int DenseRank
		{
			get
			{
				return this._DenseRank;
			}
			set
			{
				if ((this._DenseRank != value))
				{
					this.OnDenseRankChanging(value);
					this.SendPropertyChanging();
					this._DenseRank = value;
					this.SendPropertyChanged("DenseRank");
					this.OnDenseRankChanged();
				}
			}
		}
		
		[Column(Storage="_NTile", DbType="TinyInt NOT NULL")]
		public byte NTile
		{
			get
			{
				return this._NTile;
			}
			set
			{
				if ((this._NTile != value))
				{
					this.OnNTileChanging(value);
					this.SendPropertyChanging();
					this._NTile = value;
					this.SendPropertyChanged("NTile");
					this.OnNTileChanged();
				}
			}
		}
		
		[Association(Name="Extension_WebPages_COUNT_BY_EXTENSION", Storage="_Extension1", ThisKey="Extension", OtherKey="Extension1", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Extension Extension1
		{
			get
			{
				return this._Extension1.Entity;
			}
			set
			{
				Extension previousValue = this._Extension1.Entity;
				if (((previousValue != value) 
							|| (this._Extension1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Extension1.Entity = null;
						previousValue.WebPages_COUNT_BY_EXTENSION = null;
					}
					this._Extension1.Entity = value;
					if ((value != null))
					{
						value.WebPages_COUNT_BY_EXTENSION = this;
						this._Extension = value.Extension1;
					}
					else
					{
						this._Extension = default(string);
					}
					this.SendPropertyChanged("Extension1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="rpt.WebPages_COUNT_BY_FULLTEXTINDEXTYPE")]
	public partial class WebPages_COUNT_BY_FULLTEXTINDEXTYPE : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RowNumber;
		
		private string _FullTextIndexType;
		
		private int _Count;
		
		private int _Rank;
		
		private int _DenseRank;
		
		private byte _NTile;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRowNumberChanging(int value);
    partial void OnRowNumberChanged();
    partial void OnFullTextIndexTypeChanging(string value);
    partial void OnFullTextIndexTypeChanged();
    partial void OnCountChanging(int value);
    partial void OnCountChanged();
    partial void OnRankChanging(int value);
    partial void OnRankChanged();
    partial void OnDenseRankChanging(int value);
    partial void OnDenseRankChanged();
    partial void OnNTileChanging(byte value);
    partial void OnNTileChanged();
    #endregion
		
		public WebPages_COUNT_BY_FULLTEXTINDEXTYPE()
		{
			OnCreated();
		}
		
		[Column(Storage="_RowNumber", DbType="Int NOT NULL")]
		public int RowNumber
		{
			get
			{
				return this._RowNumber;
			}
			set
			{
				if ((this._RowNumber != value))
				{
					this.OnRowNumberChanging(value);
					this.SendPropertyChanging();
					this._RowNumber = value;
					this.SendPropertyChanged("RowNumber");
					this.OnRowNumberChanged();
				}
			}
		}
		
		[Column(Storage="_FullTextIndexType", DbType="VarChar(20) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string FullTextIndexType
		{
			get
			{
				return this._FullTextIndexType;
			}
			set
			{
				if ((this._FullTextIndexType != value))
				{
					this.OnFullTextIndexTypeChanging(value);
					this.SendPropertyChanging();
					this._FullTextIndexType = value;
					this.SendPropertyChanged("FullTextIndexType");
					this.OnFullTextIndexTypeChanged();
				}
			}
		}
		
		[Column(Storage="_Count", DbType="Int NOT NULL")]
		public int Count
		{
			get
			{
				return this._Count;
			}
			set
			{
				if ((this._Count != value))
				{
					this.OnCountChanging(value);
					this.SendPropertyChanging();
					this._Count = value;
					this.SendPropertyChanged("Count");
					this.OnCountChanged();
				}
			}
		}
		
		[Column(Storage="_Rank", DbType="Int NOT NULL")]
		public int Rank
		{
			get
			{
				return this._Rank;
			}
			set
			{
				if ((this._Rank != value))
				{
					this.OnRankChanging(value);
					this.SendPropertyChanging();
					this._Rank = value;
					this.SendPropertyChanged("Rank");
					this.OnRankChanged();
				}
			}
		}
		
		[Column(Storage="_DenseRank", DbType="Int NOT NULL")]
		public int DenseRank
		{
			get
			{
				return this._DenseRank;
			}
			set
			{
				if ((this._DenseRank != value))
				{
					this.OnDenseRankChanging(value);
					this.SendPropertyChanging();
					this._DenseRank = value;
					this.SendPropertyChanged("DenseRank");
					this.OnDenseRankChanged();
				}
			}
		}
		
		[Column(Storage="_NTile", DbType="TinyInt NOT NULL")]
		public byte NTile
		{
			get
			{
				return this._NTile;
			}
			set
			{
				if ((this._NTile != value))
				{
					this.OnNTileChanging(value);
					this.SendPropertyChanging();
					this._NTile = value;
					this.SendPropertyChanged("NTile");
					this.OnNTileChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="rpt.WebPages_COUNT_BY_HOST")]
	public partial class WebPages_COUNT_BY_HOST : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RowNumber;
		
		private string _Host;
		
		private int _Count;
		
		private int _Rank;
		
		private int _DenseRank;
		
		private byte _NTile;
		
		private EntityRef<Host> _Host1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRowNumberChanging(int value);
    partial void OnRowNumberChanged();
    partial void OnHostChanging(string value);
    partial void OnHostChanged();
    partial void OnCountChanging(int value);
    partial void OnCountChanged();
    partial void OnRankChanging(int value);
    partial void OnRankChanged();
    partial void OnDenseRankChanging(int value);
    partial void OnDenseRankChanged();
    partial void OnNTileChanging(byte value);
    partial void OnNTileChanged();
    #endregion
		
		public WebPages_COUNT_BY_HOST()
		{
			this._Host1 = default(EntityRef<Host>);
			OnCreated();
		}
		
		[Column(Storage="_RowNumber", DbType="Int NOT NULL")]
		public int RowNumber
		{
			get
			{
				return this._RowNumber;
			}
			set
			{
				if ((this._RowNumber != value))
				{
					this.OnRowNumberChanging(value);
					this.SendPropertyChanging();
					this._RowNumber = value;
					this.SendPropertyChanged("RowNumber");
					this.OnRowNumberChanged();
				}
			}
		}
		
		[Column(Storage="_Host", DbType="VarChar(884) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Host
		{
			get
			{
				return this._Host;
			}
			set
			{
				if ((this._Host != value))
				{
					if (this._Host1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnHostChanging(value);
					this.SendPropertyChanging();
					this._Host = value;
					this.SendPropertyChanged("Host");
					this.OnHostChanged();
				}
			}
		}
		
		[Column(Storage="_Count", DbType="Int NOT NULL")]
		public int Count
		{
			get
			{
				return this._Count;
			}
			set
			{
				if ((this._Count != value))
				{
					this.OnCountChanging(value);
					this.SendPropertyChanging();
					this._Count = value;
					this.SendPropertyChanged("Count");
					this.OnCountChanged();
				}
			}
		}
		
		[Column(Storage="_Rank", DbType="Int NOT NULL")]
		public int Rank
		{
			get
			{
				return this._Rank;
			}
			set
			{
				if ((this._Rank != value))
				{
					this.OnRankChanging(value);
					this.SendPropertyChanging();
					this._Rank = value;
					this.SendPropertyChanged("Rank");
					this.OnRankChanged();
				}
			}
		}
		
		[Column(Storage="_DenseRank", DbType="Int NOT NULL")]
		public int DenseRank
		{
			get
			{
				return this._DenseRank;
			}
			set
			{
				if ((this._DenseRank != value))
				{
					this.OnDenseRankChanging(value);
					this.SendPropertyChanging();
					this._DenseRank = value;
					this.SendPropertyChanged("DenseRank");
					this.OnDenseRankChanged();
				}
			}
		}
		
		[Column(Storage="_NTile", DbType="TinyInt NOT NULL")]
		public byte NTile
		{
			get
			{
				return this._NTile;
			}
			set
			{
				if ((this._NTile != value))
				{
					this.OnNTileChanging(value);
					this.SendPropertyChanging();
					this._NTile = value;
					this.SendPropertyChanged("NTile");
					this.OnNTileChanged();
				}
			}
		}
		
		[Association(Name="Host_WebPages_COUNT_BY_HOST", Storage="_Host1", ThisKey="Host", OtherKey="Host1", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Host Host1
		{
			get
			{
				return this._Host1.Entity;
			}
			set
			{
				Host previousValue = this._Host1.Entity;
				if (((previousValue != value) 
							|| (this._Host1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Host1.Entity = null;
						previousValue.WebPages_COUNT_BY_HOST = null;
					}
					this._Host1.Entity = value;
					if ((value != null))
					{
						value.WebPages_COUNT_BY_HOST = this;
						this._Host = value.Host1;
					}
					else
					{
						this._Host = default(string);
					}
					this.SendPropertyChanged("Host1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="rpt.arachnode_rvw_DisallowedAbsoluteUris_COUNT_BY_ABSOLUTEURI")]
	public partial class arachnode_rvw_DisallowedAbsoluteUris_COUNT_BY_ABSOLUTEURI
	{
		
		private long _ID;
		
		private System.Nullable<int> _Count;
		
		public arachnode_rvw_DisallowedAbsoluteUris_COUNT_BY_ABSOLUTEURI()
		{
		}
		
		[Column(Storage="_ID", DbType="BigInt NOT NULL")]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this._ID = value;
				}
			}
		}
		
		[Column(Storage="_Count", DbType="Int")]
		public System.Nullable<int> Count
		{
			get
			{
				return this._Count;
			}
			set
			{
				if ((this._Count != value))
				{
					this._Count = value;
				}
			}
		}
	}
	
	[Table(Name="rpt.arachnode_rvw_WebPagesWithoutSchemes_Discoveries")]
	public partial class arachnode_rvw_WebPagesWithoutSchemes_Discovery
	{
		
		private System.DateTime _InitiallyDiscovered;
		
		private System.DateTime _LastModified;
		
		private long _ID;
		
		private string _AbsoluteUri;
		
		private string _ResponseHeaders;
		
		private System.Data.Linq.Binary _Source;
		
		private string _FullTextIndexType;
		
		private int _CrawlDepth;
		
		public arachnode_rvw_WebPagesWithoutSchemes_Discovery()
		{
		}
		
		[Column(Storage="_InitiallyDiscovered", DbType="DateTime NOT NULL")]
		public System.DateTime InitiallyDiscovered
		{
			get
			{
				return this._InitiallyDiscovered;
			}
			set
			{
				if ((this._InitiallyDiscovered != value))
				{
					this._InitiallyDiscovered = value;
				}
			}
		}
		
		[Column(Storage="_LastModified", DbType="DateTime NOT NULL")]
		public System.DateTime LastModified
		{
			get
			{
				return this._LastModified;
			}
			set
			{
				if ((this._LastModified != value))
				{
					this._LastModified = value;
				}
			}
		}
		
		[Column(Storage="_ID", AutoSync=AutoSync.Always, DbType="BigInt NOT NULL IDENTITY", IsDbGenerated=true)]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this._ID = value;
				}
			}
		}
		
		[Column(Storage="_AbsoluteUri", DbType="VarChar(884) NOT NULL", CanBeNull=false)]
		public string AbsoluteUri
		{
			get
			{
				return this._AbsoluteUri;
			}
			set
			{
				if ((this._AbsoluteUri != value))
				{
					this._AbsoluteUri = value;
				}
			}
		}
		
		[Column(Storage="_ResponseHeaders", DbType="VarChar(4000)")]
		public string ResponseHeaders
		{
			get
			{
				return this._ResponseHeaders;
			}
			set
			{
				if ((this._ResponseHeaders != value))
				{
					this._ResponseHeaders = value;
				}
			}
		}
		
		[Column(Storage="_Source", DbType="VarBinary(MAX) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary Source
		{
			get
			{
				return this._Source;
			}
			set
			{
				if ((this._Source != value))
				{
					this._Source = value;
				}
			}
		}
		
		[Column(Storage="_FullTextIndexType", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string FullTextIndexType
		{
			get
			{
				return this._FullTextIndexType;
			}
			set
			{
				if ((this._FullTextIndexType != value))
				{
					this._FullTextIndexType = value;
				}
			}
		}
		
		[Column(Storage="_CrawlDepth", DbType="Int NOT NULL")]
		public int CrawlDepth
		{
			get
			{
				return this._CrawlDepth;
			}
			set
			{
				if ((this._CrawlDepth != value))
				{
					this._CrawlDepth = value;
				}
			}
		}
	}
	
	[Table(Name="rpt.arachnode_rvw_DisallowedAbsoluteUris_COUNT_BY_DOMAIN")]
	public partial class arachnode_rvw_DisallowedAbsoluteUris_COUNT_BY_DOMAIN
	{
		
		private int _DomainID;
		
		private System.Nullable<int> _Count;
		
		public arachnode_rvw_DisallowedAbsoluteUris_COUNT_BY_DOMAIN()
		{
		}
		
		[Column(Storage="_DomainID", DbType="Int NOT NULL")]
		public int DomainID
		{
			get
			{
				return this._DomainID;
			}
			set
			{
				if ((this._DomainID != value))
				{
					this._DomainID = value;
				}
			}
		}
		
		[Column(Storage="_Count", DbType="Int")]
		public System.Nullable<int> Count
		{
			get
			{
				return this._Count;
			}
			set
			{
				if ((this._Count != value))
				{
					this._Count = value;
				}
			}
		}
	}
	
	[Table(Name="rpt.arachnode_rvw_DisallowedAbsoluteUris_COUNT_BY_EXTENSION")]
	public partial class arachnode_rvw_DisallowedAbsoluteUris_COUNT_BY_EXTENSION
	{
		
		private int _ExtensionID;
		
		private System.Nullable<int> _Count;
		
		public arachnode_rvw_DisallowedAbsoluteUris_COUNT_BY_EXTENSION()
		{
		}
		
		[Column(Storage="_ExtensionID", DbType="Int NOT NULL")]
		public int ExtensionID
		{
			get
			{
				return this._ExtensionID;
			}
			set
			{
				if ((this._ExtensionID != value))
				{
					this._ExtensionID = value;
				}
			}
		}
		
		[Column(Storage="_Count", DbType="Int")]
		public System.Nullable<int> Count
		{
			get
			{
				return this._Count;
			}
			set
			{
				if ((this._Count != value))
				{
					this._Count = value;
				}
			}
		}
	}
	
	[Table(Name="rpt.arachnode_rvw_DisallowedAbsoluteUris_COUNT_BY_HOST")]
	public partial class arachnode_rvw_DisallowedAbsoluteUris_COUNT_BY_HOST
	{
		
		private int _HostID;
		
		private System.Nullable<int> _Count;
		
		public arachnode_rvw_DisallowedAbsoluteUris_COUNT_BY_HOST()
		{
		}
		
		[Column(Storage="_HostID", DbType="Int NOT NULL")]
		public int HostID
		{
			get
			{
				return this._HostID;
			}
			set
			{
				if ((this._HostID != value))
				{
					this._HostID = value;
				}
			}
		}
		
		[Column(Storage="_Count", DbType="Int")]
		public System.Nullable<int> Count
		{
			get
			{
				return this._Count;
			}
			set
			{
				if ((this._Count != value))
				{
					this._Count = value;
				}
			}
		}
	}
	
	[Table(Name="rpt.arachnode_rvw_DisallowedAbsoluteUris_COUNT_BY_SCHEME")]
	public partial class arachnode_rvw_DisallowedAbsoluteUris_COUNT_BY_SCHEME
	{
		
		private int _SchemeID;
		
		private System.Nullable<int> _Count;
		
		public arachnode_rvw_DisallowedAbsoluteUris_COUNT_BY_SCHEME()
		{
		}
		
		[Column(Storage="_SchemeID", DbType="Int NOT NULL")]
		public int SchemeID
		{
			get
			{
				return this._SchemeID;
			}
			set
			{
				if ((this._SchemeID != value))
				{
					this._SchemeID = value;
				}
			}
		}
		
		[Column(Storage="_Count", DbType="Int")]
		public System.Nullable<int> Count
		{
			get
			{
				return this._Count;
			}
			set
			{
				if ((this._Count != value))
				{
					this._Count = value;
				}
			}
		}
	}
	
	[Table(Name="rpt.arachnode_rvw_DisallowedAbsoluteUris_COUNT_NEW_BY_DATE")]
	public partial class arachnode_rvw_DisallowedAbsoluteUris_COUNT_NEW_BY_DATE
	{
		
		private System.Nullable<System.DateTime> _Date;
		
		private System.Nullable<int> _DisallowedAbsoluteUris;
		
		private System.Nullable<int> _DisallowedAbsoluteUris_Discoveries;
		
		public arachnode_rvw_DisallowedAbsoluteUris_COUNT_NEW_BY_DATE()
		{
		}
		
		[Column(Storage="_Date", DbType="DateTime")]
		public System.Nullable<System.DateTime> Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this._Date = value;
				}
			}
		}
		
		[Column(Storage="_DisallowedAbsoluteUris", DbType="Int")]
		public System.Nullable<int> DisallowedAbsoluteUris
		{
			get
			{
				return this._DisallowedAbsoluteUris;
			}
			set
			{
				if ((this._DisallowedAbsoluteUris != value))
				{
					this._DisallowedAbsoluteUris = value;
				}
			}
		}
		
		[Column(Storage="_DisallowedAbsoluteUris_Discoveries", DbType="Int")]
		public System.Nullable<int> DisallowedAbsoluteUris_Discoveries
		{
			get
			{
				return this._DisallowedAbsoluteUris_Discoveries;
			}
			set
			{
				if ((this._DisallowedAbsoluteUris_Discoveries != value))
				{
					this._DisallowedAbsoluteUris_Discoveries = value;
				}
			}
		}
	}
	
	[Table(Name="rpt.arachnode_rvw_Domains_ALL")]
	public partial class arachnode_rvw_Domains_ALL
	{
		
		private System.Nullable<System.DateTime> _InitiallyDiscovered;
		
		private System.Nullable<System.DateTime> _LastDiscovered;
		
		private int _DiscoveryTypeID;
		
		private string _Domain;
		
		public arachnode_rvw_Domains_ALL()
		{
		}
		
		[Column(Storage="_InitiallyDiscovered", DbType="DateTime")]
		public System.Nullable<System.DateTime> InitiallyDiscovered
		{
			get
			{
				return this._InitiallyDiscovered;
			}
			set
			{
				if ((this._InitiallyDiscovered != value))
				{
					this._InitiallyDiscovered = value;
				}
			}
		}
		
		[Column(Storage="_LastDiscovered", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastDiscovered
		{
			get
			{
				return this._LastDiscovered;
			}
			set
			{
				if ((this._LastDiscovered != value))
				{
					this._LastDiscovered = value;
				}
			}
		}
		
		[Column(Storage="_DiscoveryTypeID", DbType="Int NOT NULL")]
		public int DiscoveryTypeID
		{
			get
			{
				return this._DiscoveryTypeID;
			}
			set
			{
				if ((this._DiscoveryTypeID != value))
				{
					this._DiscoveryTypeID = value;
				}
			}
		}
		
		[Column(Storage="_Domain", DbType="NVarChar(4000)")]
		public string Domain
		{
			get
			{
				return this._Domain;
			}
			set
			{
				if ((this._Domain != value))
				{
					this._Domain = value;
				}
			}
		}
	}
	
	[Table(Name="rpt.arachnode_rvw_Domains_Extensions_Hosts_Discoveries_ALL")]
	public partial class arachnode_rvw_Domains_Extensions_Hosts_Discoveries_ALL
	{
		
		private System.Nullable<System.DateTime> _HostInitiallyDiscovered;
		
		private System.Nullable<System.DateTime> _HostLastDiscovered;
		
		private byte _HostDiscoveryTypeID;
		
		private int _HostID;
		
		private int _Host_DiscoveryID;
		
		private string _Host;
		
		private System.Nullable<System.DateTime> _DomainInitiallyDiscovered;
		
		private System.Nullable<System.DateTime> _DomainLastDiscovered;
		
		private byte _DomainDiscoveryTypeID;
		
		private int _DomainID;
		
		private int _Domain_DiscoveryID;
		
		private string _Domain;
		
		private System.Nullable<System.DateTime> _ExtensionInitiallyDiscovered;
		
		private System.Nullable<System.DateTime> _ExtensionLastDiscovered;
		
		private byte _ExtensionDiscoveryTypeID;
		
		private int _Extension_DiscoveryID;
		
		private int _ExtensionID;
		
		private string _Extension;
		
		public arachnode_rvw_Domains_Extensions_Hosts_Discoveries_ALL()
		{
		}
		
		[Column(Storage="_HostInitiallyDiscovered", DbType="DateTime")]
		public System.Nullable<System.DateTime> HostInitiallyDiscovered
		{
			get
			{
				return this._HostInitiallyDiscovered;
			}
			set
			{
				if ((this._HostInitiallyDiscovered != value))
				{
					this._HostInitiallyDiscovered = value;
				}
			}
		}
		
		[Column(Storage="_HostLastDiscovered", DbType="DateTime")]
		public System.Nullable<System.DateTime> HostLastDiscovered
		{
			get
			{
				return this._HostLastDiscovered;
			}
			set
			{
				if ((this._HostLastDiscovered != value))
				{
					this._HostLastDiscovered = value;
				}
			}
		}
		
		[Column(Storage="_HostDiscoveryTypeID", DbType="TinyInt NOT NULL")]
		public byte HostDiscoveryTypeID
		{
			get
			{
				return this._HostDiscoveryTypeID;
			}
			set
			{
				if ((this._HostDiscoveryTypeID != value))
				{
					this._HostDiscoveryTypeID = value;
				}
			}
		}
		
		[Column(Storage="_HostID", DbType="Int NOT NULL")]
		public int HostID
		{
			get
			{
				return this._HostID;
			}
			set
			{
				if ((this._HostID != value))
				{
					this._HostID = value;
				}
			}
		}
		
		[Column(Storage="_Host_DiscoveryID", DbType="Int NOT NULL")]
		public int Host_DiscoveryID
		{
			get
			{
				return this._Host_DiscoveryID;
			}
			set
			{
				if ((this._Host_DiscoveryID != value))
				{
					this._Host_DiscoveryID = value;
				}
			}
		}
		
		[Column(Storage="_Host", DbType="VarChar(884) NOT NULL", CanBeNull=false)]
		public string Host
		{
			get
			{
				return this._Host;
			}
			set
			{
				if ((this._Host != value))
				{
					this._Host = value;
				}
			}
		}
		
		[Column(Storage="_DomainInitiallyDiscovered", DbType="DateTime")]
		public System.Nullable<System.DateTime> DomainInitiallyDiscovered
		{
			get
			{
				return this._DomainInitiallyDiscovered;
			}
			set
			{
				if ((this._DomainInitiallyDiscovered != value))
				{
					this._DomainInitiallyDiscovered = value;
				}
			}
		}
		
		[Column(Storage="_DomainLastDiscovered", DbType="DateTime")]
		public System.Nullable<System.DateTime> DomainLastDiscovered
		{
			get
			{
				return this._DomainLastDiscovered;
			}
			set
			{
				if ((this._DomainLastDiscovered != value))
				{
					this._DomainLastDiscovered = value;
				}
			}
		}
		
		[Column(Storage="_DomainDiscoveryTypeID", DbType="TinyInt NOT NULL")]
		public byte DomainDiscoveryTypeID
		{
			get
			{
				return this._DomainDiscoveryTypeID;
			}
			set
			{
				if ((this._DomainDiscoveryTypeID != value))
				{
					this._DomainDiscoveryTypeID = value;
				}
			}
		}
		
		[Column(Storage="_DomainID", DbType="Int NOT NULL")]
		public int DomainID
		{
			get
			{
				return this._DomainID;
			}
			set
			{
				if ((this._DomainID != value))
				{
					this._DomainID = value;
				}
			}
		}
		
		[Column(Storage="_Domain_DiscoveryID", DbType="Int NOT NULL")]
		public int Domain_DiscoveryID
		{
			get
			{
				return this._Domain_DiscoveryID;
			}
			set
			{
				if ((this._Domain_DiscoveryID != value))
				{
					this._Domain_DiscoveryID = value;
				}
			}
		}
		
		[Column(Storage="_Domain", DbType="VarChar(884) NOT NULL", CanBeNull=false)]
		public string Domain
		{
			get
			{
				return this._Domain;
			}
			set
			{
				if ((this._Domain != value))
				{
					this._Domain = value;
				}
			}
		}
		
		[Column(Storage="_ExtensionInitiallyDiscovered", DbType="DateTime")]
		public System.Nullable<System.DateTime> ExtensionInitiallyDiscovered
		{
			get
			{
				return this._ExtensionInitiallyDiscovered;
			}
			set
			{
				if ((this._ExtensionInitiallyDiscovered != value))
				{
					this._ExtensionInitiallyDiscovered = value;
				}
			}
		}
		
		[Column(Storage="_ExtensionLastDiscovered", DbType="DateTime")]
		public System.Nullable<System.DateTime> ExtensionLastDiscovered
		{
			get
			{
				return this._ExtensionLastDiscovered;
			}
			set
			{
				if ((this._ExtensionLastDiscovered != value))
				{
					this._ExtensionLastDiscovered = value;
				}
			}
		}
		
		[Column(Storage="_ExtensionDiscoveryTypeID", DbType="TinyInt NOT NULL")]
		public byte ExtensionDiscoveryTypeID
		{
			get
			{
				return this._ExtensionDiscoveryTypeID;
			}
			set
			{
				if ((this._ExtensionDiscoveryTypeID != value))
				{
					this._ExtensionDiscoveryTypeID = value;
				}
			}
		}
		
		[Column(Storage="_Extension_DiscoveryID", DbType="Int NOT NULL")]
		public int Extension_DiscoveryID
		{
			get
			{
				return this._Extension_DiscoveryID;
			}
			set
			{
				if ((this._Extension_DiscoveryID != value))
				{
					this._Extension_DiscoveryID = value;
				}
			}
		}
		
		[Column(Storage="_ExtensionID", DbType="Int NOT NULL")]
		public int ExtensionID
		{
			get
			{
				return this._ExtensionID;
			}
			set
			{
				if ((this._ExtensionID != value))
				{
					this._ExtensionID = value;
				}
			}
		}
		
		[Column(Storage="_Extension", DbType="VarChar(884) NOT NULL", CanBeNull=false)]
		public string Extension
		{
			get
			{
				return this._Extension;
			}
			set
			{
				if ((this._Extension != value))
				{
					this._Extension = value;
				}
			}
		}
	}
	
	[Table(Name="rpt.arachnode_rvw_Domains_NEW")]
	public partial class arachnode_rvw_Domains_NEW
	{
		
		private System.Nullable<System.DateTime> _InitiallyDiscovered;
		
		private System.Nullable<System.DateTime> _LastDiscovered;
		
		private int _DiscoveryTypeID;
		
		private string _Domain;
		
		public arachnode_rvw_Domains_NEW()
		{
		}
		
		[Column(Storage="_InitiallyDiscovered", DbType="DateTime")]
		public System.Nullable<System.DateTime> InitiallyDiscovered
		{
			get
			{
				return this._InitiallyDiscovered;
			}
			set
			{
				if ((this._InitiallyDiscovered != value))
				{
					this._InitiallyDiscovered = value;
				}
			}
		}
		
		[Column(Storage="_LastDiscovered", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastDiscovered
		{
			get
			{
				return this._LastDiscovered;
			}
			set
			{
				if ((this._LastDiscovered != value))
				{
					this._LastDiscovered = value;
				}
			}
		}
		
		[Column(Storage="_DiscoveryTypeID", DbType="Int NOT NULL")]
		public int DiscoveryTypeID
		{
			get
			{
				return this._DiscoveryTypeID;
			}
			set
			{
				if ((this._DiscoveryTypeID != value))
				{
					this._DiscoveryTypeID = value;
				}
			}
		}
		
		[Column(Storage="_Domain", DbType="NVarChar(4000)")]
		public string Domain
		{
			get
			{
				return this._Domain;
			}
			set
			{
				if ((this._Domain != value))
				{
					this._Domain = value;
				}
			}
		}
	}
	
	[Table(Name="rpt.arachnode_rvw_EmailAddresses_COUNT_BY_ABSOLUTEURI")]
	public partial class arachnode_rvw_EmailAddresses_COUNT_BY_ABSOLUTEURI
	{
		
		private long _ID;
		
		private System.Nullable<int> _Count;
		
		public arachnode_rvw_EmailAddresses_COUNT_BY_ABSOLUTEURI()
		{
		}
		
		[Column(Storage="_ID", DbType="BigInt NOT NULL")]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this._ID = value;
				}
			}
		}
		
		[Column(Storage="_Count", DbType="Int")]
		public System.Nullable<int> Count
		{
			get
			{
				return this._Count;
			}
			set
			{
				if ((this._Count != value))
				{
					this._Count = value;
				}
			}
		}
	}
	
	[Table(Name="rpt.arachnode_rvw_EmailAddresses_COUNT_BY_DOMAIN")]
	public partial class arachnode_rvw_EmailAddresses_COUNT_BY_DOMAIN
	{
		
		private int _DomainID;
		
		private System.Nullable<int> _Count;
		
		public arachnode_rvw_EmailAddresses_COUNT_BY_DOMAIN()
		{
		}
		
		[Column(Storage="_DomainID", DbType="Int NOT NULL")]
		public int DomainID
		{
			get
			{
				return this._DomainID;
			}
			set
			{
				if ((this._DomainID != value))
				{
					this._DomainID = value;
				}
			}
		}
		
		[Column(Storage="_Count", DbType="Int")]
		public System.Nullable<int> Count
		{
			get
			{
				return this._Count;
			}
			set
			{
				if ((this._Count != value))
				{
					this._Count = value;
				}
			}
		}
	}
	
	[Table(Name="rpt.arachnode_rvw_EmailAddresses_COUNT_BY_EXTENSION")]
	public partial class arachnode_rvw_EmailAddresses_COUNT_BY_EXTENSION
	{
		
		private int _ExtensionID;
		
		private System.Nullable<int> _Count;
		
		public arachnode_rvw_EmailAddresses_COUNT_BY_EXTENSION()
		{
		}
		
		[Column(Storage="_ExtensionID", DbType="Int NOT NULL")]
		public int ExtensionID
		{
			get
			{
				return this._ExtensionID;
			}
			set
			{
				if ((this._ExtensionID != value))
				{
					this._ExtensionID = value;
				}
			}
		}
		
		[Column(Storage="_Count", DbType="Int")]
		public System.Nullable<int> Count
		{
			get
			{
				return this._Count;
			}
			set
			{
				if ((this._Count != value))
				{
					this._Count = value;
				}
			}
		}
	}
	
	[Table(Name="rpt.arachnode_rvw_EmailAddresses_COUNT_BY_HOST")]
	public partial class arachnode_rvw_EmailAddresses_COUNT_BY_HOST
	{
		
		private int _HostID;
		
		private System.Nullable<int> _Count;
		
		public arachnode_rvw_EmailAddresses_COUNT_BY_HOST()
		{
		}
		
		[Column(Storage="_HostID", DbType="Int NOT NULL")]
		public int HostID
		{
			get
			{
				return this._HostID;
			}
			set
			{
				if ((this._HostID != value))
				{
					this._HostID = value;
				}
			}
		}
		
		[Column(Storage="_Count", DbType="Int")]
		public System.Nullable<int> Count
		{
			get
			{
				return this._Count;
			}
			set
			{
				if ((this._Count != value))
				{
					this._Count = value;
				}
			}
		}
	}
	
	[Table(Name="rpt.arachnode_rvw_EmailAddresses_COUNT_BY_SCHEME")]
	public partial class arachnode_rvw_EmailAddresses_COUNT_BY_SCHEME
	{
		
		private int _SchemeID;
		
		private System.Nullable<int> _Count;
		
		public arachnode_rvw_EmailAddresses_COUNT_BY_SCHEME()
		{
		}
		
		[Column(Storage="_SchemeID", DbType="Int NOT NULL")]
		public int SchemeID
		{
			get
			{
				return this._SchemeID;
			}
			set
			{
				if ((this._SchemeID != value))
				{
					this._SchemeID = value;
				}
			}
		}
		
		[Column(Storage="_Count", DbType="Int")]
		public System.Nullable<int> Count
		{
			get
			{
				return this._Count;
			}
			set
			{
				if ((this._Count != value))
				{
					this._Count = value;
				}
			}
		}
	}
	
	[Table(Name="rpt.arachnode_rvw_EmailAddresses_COUNT_NEW_BY_DATE")]
	public partial class arachnode_rvw_EmailAddresses_COUNT_NEW_BY_DATE
	{
		
		private System.Nullable<System.DateTime> _Date;
		
		private System.Nullable<int> _EmailAddresses;
		
		private System.Nullable<int> _EmailAddresses_Discoveries;
		
		public arachnode_rvw_EmailAddresses_COUNT_NEW_BY_DATE()
		{
		}
		
		[Column(Storage="_Date", DbType="DateTime")]
		public System.Nullable<System.DateTime> Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this._Date = value;
				}
			}
		}
		
		[Column(Storage="_EmailAddresses", DbType="Int")]
		public System.Nullable<int> EmailAddresses
		{
			get
			{
				return this._EmailAddresses;
			}
			set
			{
				if ((this._EmailAddresses != value))
				{
					this._EmailAddresses = value;
				}
			}
		}
		
		[Column(Storage="_EmailAddresses_Discoveries", DbType="Int")]
		public System.Nullable<int> EmailAddresses_Discoveries
		{
			get
			{
				return this._EmailAddresses_Discoveries;
			}
			set
			{
				if ((this._EmailAddresses_Discoveries != value))
				{
					this._EmailAddresses_Discoveries = value;
				}
			}
		}
	}
	
	[Table(Name="rpt.arachnode_rvw_EmailAddressesWithoutDiscoveries")]
	public partial class arachnode_rvw_EmailAddressesWithoutDiscovery
	{
		
		private long _ID;
		
		private string _AbsoluteUri;
		
		public arachnode_rvw_EmailAddressesWithoutDiscovery()
		{
		}
		
		[Column(Storage="_ID", AutoSync=AutoSync.Always, DbType="BigInt NOT NULL IDENTITY", IsDbGenerated=true)]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this._ID = value;
				}
			}
		}
		
		[Column(Storage="_AbsoluteUri", DbType="VarChar(884) NOT NULL", CanBeNull=false)]
		public string AbsoluteUri
		{
			get
			{
				return this._AbsoluteUri;
			}
			set
			{
				if ((this._AbsoluteUri != value))
				{
					this._AbsoluteUri = value;
				}
			}
		}
	}
	
	[Table(Name="rpt.arachnode_rvw_EmailAddressesWithoutHosts_Discoveries")]
	public partial class arachnode_rvw_EmailAddressesWithoutHosts_Discovery
	{
		
		private long _ID;
		
		private string _AbsoluteUri;
		
		public arachnode_rvw_EmailAddressesWithoutHosts_Discovery()
		{
		}
		
		[Column(Storage="_ID", AutoSync=AutoSync.Always, DbType="BigInt NOT NULL IDENTITY", IsDbGenerated=true)]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this._ID = value;
				}
			}
		}
		
		[Column(Storage="_AbsoluteUri", DbType="VarChar(884) NOT NULL", CanBeNull=false)]
		public string AbsoluteUri
		{
			get
			{
				return this._AbsoluteUri;
			}
			set
			{
				if ((this._AbsoluteUri != value))
				{
					this._AbsoluteUri = value;
				}
			}
		}
	}
	
	[Table(Name="rpt.arachnode_rvw_EmailAddressesWithoutSchemes_Discoveries")]
	public partial class arachnode_rvw_EmailAddressesWithoutSchemes_Discovery
	{
		
		private long _ID;
		
		private string _AbsoluteUri;
		
		public arachnode_rvw_EmailAddressesWithoutSchemes_Discovery()
		{
		}
		
		[Column(Storage="_ID", AutoSync=AutoSync.Always, DbType="BigInt NOT NULL IDENTITY", IsDbGenerated=true)]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this._ID = value;
				}
			}
		}
		
		[Column(Storage="_AbsoluteUri", DbType="VarChar(884) NOT NULL", CanBeNull=false)]
		public string AbsoluteUri
		{
			get
			{
				return this._AbsoluteUri;
			}
			set
			{
				if ((this._AbsoluteUri != value))
				{
					this._AbsoluteUri = value;
				}
			}
		}
	}
	
	[Table(Name="rpt.arachnode_rvw_Exceptions_COUNT_BY_ABSOLUTEURI1")]
	public partial class arachnode_rvw_Exceptions_COUNT_BY_ABSOLUTEURI1
	{
		
		private System.Nullable<System.DateTime> _InitiallyCreated;
		
		private System.Nullable<System.DateTime> _LastCreated;
		
		private string _AbsoluteUri1;
		
		private System.Nullable<int> _Count;
		
		private System.Nullable<int> _DaysSinceInitiallyDiscovered;
		
		private System.Nullable<int> _DaysSinceLastDiscovered;
		
		private System.Nullable<double> _Strength;
		
		public arachnode_rvw_Exceptions_COUNT_BY_ABSOLUTEURI1()
		{
		}
		
		[Column(Storage="_InitiallyCreated", DbType="DateTime")]
		public System.Nullable<System.DateTime> InitiallyCreated
		{
			get
			{
				return this._InitiallyCreated;
			}
			set
			{
				if ((this._InitiallyCreated != value))
				{
					this._InitiallyCreated = value;
				}
			}
		}
		
		[Column(Storage="_LastCreated", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastCreated
		{
			get
			{
				return this._LastCreated;
			}
			set
			{
				if ((this._LastCreated != value))
				{
					this._LastCreated = value;
				}
			}
		}
		
		[Column(Storage="_AbsoluteUri1", DbType="VarChar(884)")]
		public string AbsoluteUri1
		{
			get
			{
				return this._AbsoluteUri1;
			}
			set
			{
				if ((this._AbsoluteUri1 != value))
				{
					this._AbsoluteUri1 = value;
				}
			}
		}
		
		[Column(Storage="_Count", DbType="Int")]
		public System.Nullable<int> Count
		{
			get
			{
				return this._Count;
			}
			set
			{
				if ((this._Count != value))
				{
					this._Count = value;
				}
			}
		}
		
		[Column(Storage="_DaysSinceInitiallyDiscovered", DbType="Int")]
		public System.Nullable<int> DaysSinceInitiallyDiscovered
		{
			get
			{
				return this._DaysSinceInitiallyDiscovered;
			}
			set
			{
				if ((this._DaysSinceInitiallyDiscovered != value))
				{
					this._DaysSinceInitiallyDiscovered = value;
				}
			}
		}
		
		[Column(Storage="_DaysSinceLastDiscovered", DbType="Int")]
		public System.Nullable<int> DaysSinceLastDiscovered
		{
			get
			{
				return this._DaysSinceLastDiscovered;
			}
			set
			{
				if ((this._DaysSinceLastDiscovered != value))
				{
					this._DaysSinceLastDiscovered = value;
				}
			}
		}
		
		[Column(Storage="_Strength", DbType="Float")]
		public System.Nullable<double> Strength
		{
			get
			{
				return this._Strength;
			}
			set
			{
				if ((this._Strength != value))
				{
					this._Strength = value;
				}
			}
		}
	}
	
	[Table(Name="rpt.arachnode_rvw_Exceptions_COUNT_BY_ABSOLUTEURI2")]
	public partial class arachnode_rvw_Exceptions_COUNT_BY_ABSOLUTEURI2
	{
		
		private System.Nullable<System.DateTime> _InitiallyCreated;
		
		private System.Nullable<System.DateTime> _LastCreated;
		
		private string _AbsoluteUri2;
		
		private System.Nullable<int> _Count;
		
		private System.Nullable<int> _DaysSinceInitiallyDiscovered;
		
		private System.Nullable<int> _DaysSinceLastDiscovered;
		
		private System.Nullable<double> _Strength;
		
		public arachnode_rvw_Exceptions_COUNT_BY_ABSOLUTEURI2()
		{
		}
		
		[Column(Storage="_InitiallyCreated", DbType="DateTime")]
		public System.Nullable<System.DateTime> InitiallyCreated
		{
			get
			{
				return this._InitiallyCreated;
			}
			set
			{
				if ((this._InitiallyCreated != value))
				{
					this._InitiallyCreated = value;
				}
			}
		}
		
		[Column(Storage="_LastCreated", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastCreated
		{
			get
			{
				return this._LastCreated;
			}
			set
			{
				if ((this._LastCreated != value))
				{
					this._LastCreated = value;
				}
			}
		}
		
		[Column(Storage="_AbsoluteUri2", DbType="VarChar(884)")]
		public string AbsoluteUri2
		{
			get
			{
				return this._AbsoluteUri2;
			}
			set
			{
				if ((this._AbsoluteUri2 != value))
				{
					this._AbsoluteUri2 = value;
				}
			}
		}
		
		[Column(Storage="_Count", DbType="Int")]
		public System.Nullable<int> Count
		{
			get
			{
				return this._Count;
			}
			set
			{
				if ((this._Count != value))
				{
					this._Count = value;
				}
			}
		}
		
		[Column(Storage="_DaysSinceInitiallyDiscovered", DbType="Int")]
		public System.Nullable<int> DaysSinceInitiallyDiscovered
		{
			get
			{
				return this._DaysSinceInitiallyDiscovered;
			}
			set
			{
				if ((this._DaysSinceInitiallyDiscovered != value))
				{
					this._DaysSinceInitiallyDiscovered = value;
				}
			}
		}
		
		[Column(Storage="_DaysSinceLastDiscovered", DbType="Int")]
		public System.Nullable<int> DaysSinceLastDiscovered
		{
			get
			{
				return this._DaysSinceLastDiscovered;
			}
			set
			{
				if ((this._DaysSinceLastDiscovered != value))
				{
					this._DaysSinceLastDiscovered = value;
				}
			}
		}
		
		[Column(Storage="_Strength", DbType="Float")]
		public System.Nullable<double> Strength
		{
			get
			{
				return this._Strength;
			}
			set
			{
				if ((this._Strength != value))
				{
					this._Strength = value;
				}
			}
		}
	}
	
	[Table(Name="rpt.arachnode_rvw_Exceptions_COUNT_BY_ABSOLUTEURIS")]
	public partial class arachnode_rvw_Exceptions_COUNT_BY_ABSOLUTEURI
	{
		
		private System.Nullable<System.DateTime> _InitiallyCreated;
		
		private System.Nullable<System.DateTime> _LastCreated;
		
		private string _AbsoluteUri1;
		
		private string _AbsoluteUri2;
		
		private System.Nullable<int> _Count;
		
		private System.Nullable<int> _DaysSinceInitiallyDiscovered;
		
		private System.Nullable<int> _DaysSinceLastDiscovered;
		
		private System.Nullable<double> _Strength;
		
		public arachnode_rvw_Exceptions_COUNT_BY_ABSOLUTEURI()
		{
		}
		
		[Column(Storage="_InitiallyCreated", DbType="DateTime")]
		public System.Nullable<System.DateTime> InitiallyCreated
		{
			get
			{
				return this._InitiallyCreated;
			}
			set
			{
				if ((this._InitiallyCreated != value))
				{
					this._InitiallyCreated = value;
				}
			}
		}
		
		[Column(Storage="_LastCreated", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastCreated
		{
			get
			{
				return this._LastCreated;
			}
			set
			{
				if ((this._LastCreated != value))
				{
					this._LastCreated = value;
				}
			}
		}
		
		[Column(Storage="_AbsoluteUri1", DbType="VarChar(884)")]
		public string AbsoluteUri1
		{
			get
			{
				return this._AbsoluteUri1;
			}
			set
			{
				if ((this._AbsoluteUri1 != value))
				{
					this._AbsoluteUri1 = value;
				}
			}
		}
		
		[Column(Storage="_AbsoluteUri2", DbType="VarChar(884)")]
		public string AbsoluteUri2
		{
			get
			{
				return this._AbsoluteUri2;
			}
			set
			{
				if ((this._AbsoluteUri2 != value))
				{
					this._AbsoluteUri2 = value;
				}
			}
		}
		
		[Column(Storage="_Count", DbType="Int")]
		public System.Nullable<int> Count
		{
			get
			{
				return this._Count;
			}
			set
			{
				if ((this._Count != value))
				{
					this._Count = value;
				}
			}
		}
		
		[Column(Storage="_DaysSinceInitiallyDiscovered", DbType="Int")]
		public System.Nullable<int> DaysSinceInitiallyDiscovered
		{
			get
			{
				return this._DaysSinceInitiallyDiscovered;
			}
			set
			{
				if ((this._DaysSinceInitiallyDiscovered != value))
				{
					this._DaysSinceInitiallyDiscovered = value;
				}
			}
		}
		
		[Column(Storage="_DaysSinceLastDiscovered", DbType="Int")]
		public System.Nullable<int> DaysSinceLastDiscovered
		{
			get
			{
				return this._DaysSinceLastDiscovered;
			}
			set
			{
				if ((this._DaysSinceLastDiscovered != value))
				{
					this._DaysSinceLastDiscovered = value;
				}
			}
		}
		
		[Column(Storage="_Strength", DbType="Float")]
		public System.Nullable<double> Strength
		{
			get
			{
				return this._Strength;
			}
			set
			{
				if ((this._Strength != value))
				{
					this._Strength = value;
				}
			}
		}
	}
	
	[Table(Name="rpt.arachnode_rvw_Exceptions_COUNT_BY_DOMAIN1")]
	public partial class arachnode_rvw_Exceptions_COUNT_BY_DOMAIN1
	{
		
		private System.Nullable<System.DateTime> _InitiallyCreated;
		
		private System.Nullable<System.DateTime> _LastCreated;
		
		private string _Domain1;
		
		private System.Nullable<int> _Count;
		
		private System.Nullable<int> _DaysSinceInitiallyDiscovered;
		
		private System.Nullable<int> _DaysSinceLastDiscovered;
		
		private System.Nullable<double> _Strength;
		
		public arachnode_rvw_Exceptions_COUNT_BY_DOMAIN1()
		{
		}
		
		[Column(Storage="_InitiallyCreated", DbType="DateTime")]
		public System.Nullable<System.DateTime> InitiallyCreated
		{
			get
			{
				return this._InitiallyCreated;
			}
			set
			{
				if ((this._InitiallyCreated != value))
				{
					this._InitiallyCreated = value;
				}
			}
		}
		
		[Column(Storage="_LastCreated", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastCreated
		{
			get
			{
				return this._LastCreated;
			}
			set
			{
				if ((this._LastCreated != value))
				{
					this._LastCreated = value;
				}
			}
		}
		
		[Column(Storage="_Domain1", DbType="VarChar(884) NOT NULL", CanBeNull=false)]
		public string Domain1
		{
			get
			{
				return this._Domain1;
			}
			set
			{
				if ((this._Domain1 != value))
				{
					this._Domain1 = value;
				}
			}
		}
		
		[Column(Storage="_Count", DbType="Int")]
		public System.Nullable<int> Count
		{
			get
			{
				return this._Count;
			}
			set
			{
				if ((this._Count != value))
				{
					this._Count = value;
				}
			}
		}
		
		[Column(Storage="_DaysSinceInitiallyDiscovered", DbType="Int")]
		public System.Nullable<int> DaysSinceInitiallyDiscovered
		{
			get
			{
				return this._DaysSinceInitiallyDiscovered;
			}
			set
			{
				if ((this._DaysSinceInitiallyDiscovered != value))
				{
					this._DaysSinceInitiallyDiscovered = value;
				}
			}
		}
		
		[Column(Storage="_DaysSinceLastDiscovered", DbType="Int")]
		public System.Nullable<int> DaysSinceLastDiscovered
		{
			get
			{
				return this._DaysSinceLastDiscovered;
			}
			set
			{
				if ((this._DaysSinceLastDiscovered != value))
				{
					this._DaysSinceLastDiscovered = value;
				}
			}
		}
		
		[Column(Storage="_Strength", DbType="Float")]
		public System.Nullable<double> Strength
		{
			get
			{
				return this._Strength;
			}
			set
			{
				if ((this._Strength != value))
				{
					this._Strength = value;
				}
			}
		}
	}
	
	[Table(Name="rpt.arachnode_rvw_Exceptions_COUNT_BY_DOMAIN2")]
	public partial class arachnode_rvw_Exceptions_COUNT_BY_DOMAIN2
	{
		
		private System.Nullable<System.DateTime> _InitiallyCreated;
		
		private System.Nullable<System.DateTime> _LastCreated;
		
		private string _Domain2;
		
		private System.Nullable<int> _Count;
		
		private System.Nullable<int> _DaysSinceInitiallyDiscovered;
		
		private System.Nullable<int> _DaysSinceLastDiscovered;
		
		private System.Nullable<double> _Strength;
		
		public arachnode_rvw_Exceptions_COUNT_BY_DOMAIN2()
		{
		}
		
		[Column(Storage="_InitiallyCreated", DbType="DateTime")]
		public System.Nullable<System.DateTime> InitiallyCreated
		{
			get
			{
				return this._InitiallyCreated;
			}
			set
			{
				if ((this._InitiallyCreated != value))
				{
					this._InitiallyCreated = value;
				}
			}
		}
		
		[Column(Storage="_LastCreated", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastCreated
		{
			get
			{
				return this._LastCreated;
			}
			set
			{
				if ((this._LastCreated != value))
				{
					this._LastCreated = value;
				}
			}
		}
		
		[Column(Storage="_Domain2", DbType="VarChar(884) NOT NULL", CanBeNull=false)]
		public string Domain2
		{
			get
			{
				return this._Domain2;
			}
			set
			{
				if ((this._Domain2 != value))
				{
					this._Domain2 = value;
				}
			}
		}
		
		[Column(Storage="_Count", DbType="Int")]
		public System.Nullable<int> Count
		{
			get
			{
				return this._Count;
			}
			set
			{
				if ((this._Count != value))
				{
					this._Count = value;
				}
			}
		}
		
		[Column(Storage="_DaysSinceInitiallyDiscovered", DbType="Int")]
		public System.Nullable<int> DaysSinceInitiallyDiscovered
		{
			get
			{
				return this._DaysSinceInitiallyDiscovered;
			}
			set
			{
				if ((this._DaysSinceInitiallyDiscovered != value))
				{
					this._DaysSinceInitiallyDiscovered = value;
				}
			}
		}
		
		[Column(Storage="_DaysSinceLastDiscovered", DbType="Int")]
		public System.Nullable<int> DaysSinceLastDiscovered
		{
			get
			{
				return this._DaysSinceLastDiscovered;
			}
			set
			{
				if ((this._DaysSinceLastDiscovered != value))
				{
					this._DaysSinceLastDiscovered = value;
				}
			}
		}
		
		[Column(Storage="_Strength", DbType="Float")]
		public System.Nullable<double> Strength
		{
			get
			{
				return this._Strength;
			}
			set
			{
				if ((this._Strength != value))
				{
					this._Strength = value;
				}
			}
		}
	}
	
	[Table(Name="rpt.arachnode_rvw_Exceptions_COUNT_BY_DOMAINS")]
	public partial class arachnode_rvw_Exceptions_COUNT_BY_DOMAIN
	{
		
		private System.Nullable<System.DateTime> _InitiallyCreated;
		
		private System.Nullable<System.DateTime> _LastCreated;
		
		private string _Domain1;
		
		private string _Domain2;
		
		private System.Nullable<int> _Count;
		
		private System.Nullable<int> _DaysSinceInitiallyDiscovered;
		
		private System.Nullable<int> _DaysSinceLastDiscovered;
		
		private System.Nullable<double> _Strength;
		
		public arachnode_rvw_Exceptions_COUNT_BY_DOMAIN()
		{
		}
		
		[Column(Storage="_InitiallyCreated", DbType="DateTime")]
		public System.Nullable<System.DateTime> InitiallyCreated
		{
			get
			{
				return this._InitiallyCreated;
			}
			set
			{
				if ((this._InitiallyCreated != value))
				{
					this._InitiallyCreated = value;
				}
			}
		}
		
		[Column(Storage="_LastCreated", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastCreated
		{
			get
			{
				return this._LastCreated;
			}
			set
			{
				if ((this._LastCreated != value))
				{
					this._LastCreated = value;
				}
			}
		}
		
		[Column(Storage="_Domain1", DbType="VarChar(884) NOT NULL", CanBeNull=false)]
		public string Domain1
		{
			get
			{
				return this._Domain1;
			}
			set
			{
				if ((this._Domain1 != value))
				{
					this._Domain1 = value;
				}
			}
		}
		
		[Column(Storage="_Domain2", DbType="VarChar(884) NOT NULL", CanBeNull=false)]
		public string Domain2
		{
			get
			{
				return this._Domain2;
			}
			set
			{
				if ((this._Domain2 != value))
				{
					this._Domain2 = value;
				}
			}
		}
		
		[Column(Storage="_Count", DbType="Int")]
		public System.Nullable<int> Count
		{
			get
			{
				return this._Count;
			}
			set
			{
				if ((this._Count != value))
				{
					this._Count = value;
				}
			}
		}
		
		[Column(Storage="_DaysSinceInitiallyDiscovered", DbType="Int")]
		public System.Nullable<int> DaysSinceInitiallyDiscovered
		{
			get
			{
				return this._DaysSinceInitiallyDiscovered;
			}
			set
			{
				if ((this._DaysSinceInitiallyDiscovered != value))
				{
					this._DaysSinceInitiallyDiscovered = value;
				}
			}
		}
		
		[Column(Storage="_DaysSinceLastDiscovered", DbType="Int")]
		public System.Nullable<int> DaysSinceLastDiscovered
		{
			get
			{
				return this._DaysSinceLastDiscovered;
			}
			set
			{
				if ((this._DaysSinceLastDiscovered != value))
				{
					this._DaysSinceLastDiscovered = value;
				}
			}
		}
		
		[Column(Storage="_Strength", DbType="Float")]
		public System.Nullable<double> Strength
		{
			get
			{
				return this._Strength;
			}
			set
			{
				if ((this._Strength != value))
				{
					this._Strength = value;
				}
			}
		}
	}
	
	[Table(Name="rpt.arachnode_rvw_Exceptions_COUNT_BY_EXTENSION1")]
	public partial class arachnode_rvw_Exceptions_COUNT_BY_EXTENSION1
	{
		
		private System.Nullable<System.DateTime> _InitiallyCreated;
		
		private System.Nullable<System.DateTime> _LastCreated;
		
		private string _Extension1;
		
		private System.Nullable<int> _Count;
		
		private System.Nullable<int> _DaysSinceInitiallyDiscovered;
		
		private System.Nullable<int> _DaysSinceLastDiscovered;
		
		private System.Nullable<double> _Strength;
		
		public arachnode_rvw_Exceptions_COUNT_BY_EXTENSION1()
		{
		}
		
		[Column(Storage="_InitiallyCreated", DbType="DateTime")]
		public System.Nullable<System.DateTime> InitiallyCreated
		{
			get
			{
				return this._InitiallyCreated;
			}
			set
			{
				if ((this._InitiallyCreated != value))
				{
					this._InitiallyCreated = value;
				}
			}
		}
		
		[Column(Storage="_LastCreated", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastCreated
		{
			get
			{
				return this._LastCreated;
			}
			set
			{
				if ((this._LastCreated != value))
				{
					this._LastCreated = value;
				}
			}
		}
		
		[Column(Storage="_Extension1", DbType="VarChar(884) NOT NULL", CanBeNull=false)]
		public string Extension1
		{
			get
			{
				return this._Extension1;
			}
			set
			{
				if ((this._Extension1 != value))
				{
					this._Extension1 = value;
				}
			}
		}
		
		[Column(Storage="_Count", DbType="Int")]
		public System.Nullable<int> Count
		{
			get
			{
				return this._Count;
			}
			set
			{
				if ((this._Count != value))
				{
					this._Count = value;
				}
			}
		}
		
		[Column(Storage="_DaysSinceInitiallyDiscovered", DbType="Int")]
		public System.Nullable<int> DaysSinceInitiallyDiscovered
		{
			get
			{
				return this._DaysSinceInitiallyDiscovered;
			}
			set
			{
				if ((this._DaysSinceInitiallyDiscovered != value))
				{
					this._DaysSinceInitiallyDiscovered = value;
				}
			}
		}
		
		[Column(Storage="_DaysSinceLastDiscovered", DbType="Int")]
		public System.Nullable<int> DaysSinceLastDiscovered
		{
			get
			{
				return this._DaysSinceLastDiscovered;
			}
			set
			{
				if ((this._DaysSinceLastDiscovered != value))
				{
					this._DaysSinceLastDiscovered = value;
				}
			}
		}
		
		[Column(Storage="_Strength", DbType="Float")]
		public System.Nullable<double> Strength
		{
			get
			{
				return this._Strength;
			}
			set
			{
				if ((this._Strength != value))
				{
					this._Strength = value;
				}
			}
		}
	}
	
	[Table(Name="rpt.arachnode_rvw_Exceptions_COUNT_BY_EXTENSION2")]
	public partial class arachnode_rvw_Exceptions_COUNT_BY_EXTENSION2
	{
		
		private System.Nullable<System.DateTime> _InitiallyCreated;
		
		private System.Nullable<System.DateTime> _LastCreated;
		
		private string _Extension2;
		
		private System.Nullable<int> _Count;
		
		private System.Nullable<int> _DaysSinceInitiallyDiscovered;
		
		private System.Nullable<int> _DaysSinceLastDiscovered;
		
		private System.Nullable<double> _Strength;
		
		public arachnode_rvw_Exceptions_COUNT_BY_EXTENSION2()
		{
		}
		
		[Column(Storage="_InitiallyCreated", DbType="DateTime")]
		public System.Nullable<System.DateTime> InitiallyCreated
		{
			get
			{
				return this._InitiallyCreated;
			}
			set
			{
				if ((this._InitiallyCreated != value))
				{
					this._InitiallyCreated = value;
				}
			}
		}
		
		[Column(Storage="_LastCreated", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastCreated
		{
			get
			{
				return this._LastCreated;
			}
			set
			{
				if ((this._LastCreated != value))
				{
					this._LastCreated = value;
				}
			}
		}
		
		[Column(Storage="_Extension2", DbType="VarChar(884) NOT NULL", CanBeNull=false)]
		public string Extension2
		{
			get
			{
				return this._Extension2;
			}
			set
			{
				if ((this._Extension2 != value))
				{
					this._Extension2 = value;
				}
			}
		}
		
		[Column(Storage="_Count", DbType="Int")]
		public System.Nullable<int> Count
		{
			get
			{
				return this._Count;
			}
			set
			{
				if ((this._Count != value))
				{
					this._Count = value;
				}
			}
		}
		
		[Column(Storage="_DaysSinceInitiallyDiscovered", DbType="Int")]
		public System.Nullable<int> DaysSinceInitiallyDiscovered
		{
			get
			{
				return this._DaysSinceInitiallyDiscovered;
			}
			set
			{
				if ((this._DaysSinceInitiallyDiscovered != value))
				{
					this._DaysSinceInitiallyDiscovered = value;
				}
			}
		}
		
		[Column(Storage="_DaysSinceLastDiscovered", DbType="Int")]
		public System.Nullable<int> DaysSinceLastDiscovered
		{
			get
			{
				return this._DaysSinceLastDiscovered;
			}
			set
			{
				if ((this._DaysSinceLastDiscovered != value))
				{
					this._DaysSinceLastDiscovered = value;
				}
			}
		}
		
		[Column(Storage="_Strength", DbType="Float")]
		public System.Nullable<double> Strength
		{
			get
			{
				return this._Strength;
			}
			set
			{
				if ((this._Strength != value))
				{
					this._Strength = value;
				}
			}
		}
	}
	
	[Table(Name="rpt.arachnode_rvw_Exceptions_COUNT_BY_EXTENSIONS")]
	public partial class arachnode_rvw_Exceptions_COUNT_BY_EXTENSION
	{
		
		private System.Nullable<System.DateTime> _InitiallyCreated;
		
		private System.Nullable<System.DateTime> _LastCreated;
		
		private string _Extension1;
		
		private string _Extension2;
		
		private System.Nullable<int> _Count;
		
		private System.Nullable<int> _DaysSinceInitiallyDiscovered;
		
		private System.Nullable<int> _DaysSinceLastDiscovered;
		
		private System.Nullable<double> _Strength;
		
		public arachnode_rvw_Exceptions_COUNT_BY_EXTENSION()
		{
		}
		
		[Column(Storage="_InitiallyCreated", DbType="DateTime")]
		public System.Nullable<System.DateTime> InitiallyCreated
		{
			get
			{
				return this._InitiallyCreated;
			}
			set
			{
				if ((this._InitiallyCreated != value))
				{
					this._InitiallyCreated = value;
				}
			}
		}
		
		[Column(Storage="_LastCreated", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastCreated
		{
			get
			{
				return this._LastCreated;
			}
			set
			{
				if ((this._LastCreated != value))
				{
					this._LastCreated = value;
				}
			}
		}
		
		[Column(Storage="_Extension1", DbType="VarChar(884) NOT NULL", CanBeNull=false)]
		public string Extension1
		{
			get
			{
				return this._Extension1;
			}
			set
			{
				if ((this._Extension1 != value))
				{
					this._Extension1 = value;
				}
			}
		}
		
		[Column(Storage="_Extension2", DbType="VarChar(884) NOT NULL", CanBeNull=false)]
		public string Extension2
		{
			get
			{
				return this._Extension2;
			}
			set
			{
				if ((this._Extension2 != value))
				{
					this._Extension2 = value;
				}
			}
		}
		
		[Column(Storage="_Count", DbType="Int")]
		public System.Nullable<int> Count
		{
			get
			{
				return this._Count;
			}
			set
			{
				if ((this._Count != value))
				{
					this._Count = value;
				}
			}
		}
		
		[Column(Storage="_DaysSinceInitiallyDiscovered", DbType="Int")]
		public System.Nullable<int> DaysSinceInitiallyDiscovered
		{
			get
			{
				return this._DaysSinceInitiallyDiscovered;
			}
			set
			{
				if ((this._DaysSinceInitiallyDiscovered != value))
				{
					this._DaysSinceInitiallyDiscovered = value;
				}
			}
		}
		
		[Column(Storage="_DaysSinceLastDiscovered", DbType="Int")]
		public System.Nullable<int> DaysSinceLastDiscovered
		{
			get
			{
				return this._DaysSinceLastDiscovered;
			}
			set
			{
				if ((this._DaysSinceLastDiscovered != value))
				{
					this._DaysSinceLastDiscovered = value;
				}
			}
		}
		
		[Column(Storage="_Strength", DbType="Float")]
		public System.Nullable<double> Strength
		{
			get
			{
				return this._Strength;
			}
			set
			{
				if ((this._Strength != value))
				{
					this._Strength = value;
				}
			}
		}
	}
	
	[Table(Name="rpt.arachnode_rvw_Exceptions_COUNT_BY_HOST1")]
	public partial class arachnode_rvw_Exceptions_COUNT_BY_HOST1
	{
		
		private System.Nullable<System.DateTime> _InitiallyCreated;
		
		private System.Nullable<System.DateTime> _LastCreated;
		
		private string _Host1;
		
		private System.Nullable<int> _Count;
		
		private System.Nullable<int> _DaysSinceInitiallyDiscovered;
		
		private System.Nullable<int> _DaysSinceLastDiscovered;
		
		private System.Nullable<double> _Strength;
		
		public arachnode_rvw_Exceptions_COUNT_BY_HOST1()
		{
		}
		
		[Column(Storage="_InitiallyCreated", DbType="DateTime")]
		public System.Nullable<System.DateTime> InitiallyCreated
		{
			get
			{
				return this._InitiallyCreated;
			}
			set
			{
				if ((this._InitiallyCreated != value))
				{
					this._InitiallyCreated = value;
				}
			}
		}
		
		[Column(Storage="_LastCreated", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastCreated
		{
			get
			{
				return this._LastCreated;
			}
			set
			{
				if ((this._LastCreated != value))
				{
					this._LastCreated = value;
				}
			}
		}
		
		[Column(Storage="_Host1", DbType="VarChar(884) NOT NULL", CanBeNull=false)]
		public string Host1
		{
			get
			{
				return this._Host1;
			}
			set
			{
				if ((this._Host1 != value))
				{
					this._Host1 = value;
				}
			}
		}
		
		[Column(Storage="_Count", DbType="Int")]
		public System.Nullable<int> Count
		{
			get
			{
				return this._Count;
			}
			set
			{
				if ((this._Count != value))
				{
					this._Count = value;
				}
			}
		}
		
		[Column(Storage="_DaysSinceInitiallyDiscovered", DbType="Int")]
		public System.Nullable<int> DaysSinceInitiallyDiscovered
		{
			get
			{
				return this._DaysSinceInitiallyDiscovered;
			}
			set
			{
				if ((this._DaysSinceInitiallyDiscovered != value))
				{
					this._DaysSinceInitiallyDiscovered = value;
				}
			}
		}
		
		[Column(Storage="_DaysSinceLastDiscovered", DbType="Int")]
		public System.Nullable<int> DaysSinceLastDiscovered
		{
			get
			{
				return this._DaysSinceLastDiscovered;
			}
			set
			{
				if ((this._DaysSinceLastDiscovered != value))
				{
					this._DaysSinceLastDiscovered = value;
				}
			}
		}
		
		[Column(Storage="_Strength", DbType="Float")]
		public System.Nullable<double> Strength
		{
			get
			{
				return this._Strength;
			}
			set
			{
				if ((this._Strength != value))
				{
					this._Strength = value;
				}
			}
		}
	}
	
	[Table(Name="rpt.arachnode_rvw_Exceptions_COUNT_BY_HOST2")]
	public partial class arachnode_rvw_Exceptions_COUNT_BY_HOST2
	{
		
		private System.Nullable<System.DateTime> _InitiallyCreated;
		
		private System.Nullable<System.DateTime> _LastCreated;
		
		private string _Host2;
		
		private System.Nullable<int> _Count;
		
		private System.Nullable<int> _DaysSinceInitiallyDiscovered;
		
		private System.Nullable<int> _DaysSinceLastDiscovered;
		
		private System.Nullable<double> _Strength;
		
		public arachnode_rvw_Exceptions_COUNT_BY_HOST2()
		{
		}
		
		[Column(Storage="_InitiallyCreated", DbType="DateTime")]
		public System.Nullable<System.DateTime> InitiallyCreated
		{
			get
			{
				return this._InitiallyCreated;
			}
			set
			{
				if ((this._InitiallyCreated != value))
				{
					this._InitiallyCreated = value;
				}
			}
		}
		
		[Column(Storage="_LastCreated", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastCreated
		{
			get
			{
				return this._LastCreated;
			}
			set
			{
				if ((this._LastCreated != value))
				{
					this._LastCreated = value;
				}
			}
		}
		
		[Column(Storage="_Host2", DbType="VarChar(884) NOT NULL", CanBeNull=false)]
		public string Host2
		{
			get
			{
				return this._Host2;
			}
			set
			{
				if ((this._Host2 != value))
				{
					this._Host2 = value;
				}
			}
		}
		
		[Column(Storage="_Count", DbType="Int")]
		public System.Nullable<int> Count
		{
			get
			{
				return this._Count;
			}
			set
			{
				if ((this._Count != value))
				{
					this._Count = value;
				}
			}
		}
		
		[Column(Storage="_DaysSinceInitiallyDiscovered", DbType="Int")]
		public System.Nullable<int> DaysSinceInitiallyDiscovered
		{
			get
			{
				return this._DaysSinceInitiallyDiscovered;
			}
			set
			{
				if ((this._DaysSinceInitiallyDiscovered != value))
				{
					this._DaysSinceInitiallyDiscovered = value;
				}
			}
		}
		
		[Column(Storage="_DaysSinceLastDiscovered", DbType="Int")]
		public System.Nullable<int> DaysSinceLastDiscovered
		{
			get
			{
				return this._DaysSinceLastDiscovered;
			}
			set
			{
				if ((this._DaysSinceLastDiscovered != value))
				{
					this._DaysSinceLastDiscovered = value;
				}
			}
		}
		
		[Column(Storage="_Strength", DbType="Float")]
		public System.Nullable<double> Strength
		{
			get
			{
				return this._Strength;
			}
			set
			{
				if ((this._Strength != value))
				{
					this._Strength = value;
				}
			}
		}
	}
	
	[Table(Name="rpt.arachnode_rvw_Exceptions_COUNT_BY_HOSTS")]
	public partial class arachnode_rvw_Exceptions_COUNT_BY_HOST
	{
		
		private System.Nullable<System.DateTime> _InitiallyCreated;
		
		private System.Nullable<System.DateTime> _LastCreated;
		
		private string _Host1;
		
		private string _Host2;
		
		private System.Nullable<int> _Count;
		
		private System.Nullable<int> _DaysSinceInitiallyDiscovered;
		
		private System.Nullable<int> _DaysSinceLastDiscovered;
		
		private System.Nullable<double> _Strength;
		
		public arachnode_rvw_Exceptions_COUNT_BY_HOST()
		{
		}
		
		[Column(Storage="_InitiallyCreated", DbType="DateTime")]
		public System.Nullable<System.DateTime> InitiallyCreated
		{
			get
			{
				return this._InitiallyCreated;
			}
			set
			{
				if ((this._InitiallyCreated != value))
				{
					this._InitiallyCreated = value;
				}
			}
		}
		
		[Column(Storage="_LastCreated", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastCreated
		{
			get
			{
				return this._LastCreated;
			}
			set
			{
				if ((this._LastCreated != value))
				{
					this._LastCreated = value;
				}
			}
		}
		
		[Column(Storage="_Host1", DbType="VarChar(884) NOT NULL", CanBeNull=false)]
		public string Host1
		{
			get
			{
				return this._Host1;
			}
			set
			{
				if ((this._Host1 != value))
				{
					this._Host1 = value;
				}
			}
		}
		
		[Column(Storage="_Host2", DbType="VarChar(884) NOT NULL", CanBeNull=false)]
		public string Host2
		{
			get
			{
				return this._Host2;
			}
			set
			{
				if ((this._Host2 != value))
				{
					this._Host2 = value;
				}
			}
		}
		
		[Column(Storage="_Count", DbType="Int")]
		public System.Nullable<int> Count
		{
			get
			{
				return this._Count;
			}
			set
			{
				if ((this._Count != value))
				{
					this._Count = value;
				}
			}
		}
		
		[Column(Storage="_DaysSinceInitiallyDiscovered", DbType="Int")]
		public System.Nullable<int> DaysSinceInitiallyDiscovered
		{
			get
			{
				return this._DaysSinceInitiallyDiscovered;
			}
			set
			{
				if ((this._DaysSinceInitiallyDiscovered != value))
				{
					this._DaysSinceInitiallyDiscovered = value;
				}
			}
		}
		
		[Column(Storage="_DaysSinceLastDiscovered", DbType="Int")]
		public System.Nullable<int> DaysSinceLastDiscovered
		{
			get
			{
				return this._DaysSinceLastDiscovered;
			}
			set
			{
				if ((this._DaysSinceLastDiscovered != value))
				{
					this._DaysSinceLastDiscovered = value;
				}
			}
		}
		
		[Column(Storage="_Strength", DbType="Float")]
		public System.Nullable<double> Strength
		{
			get
			{
				return this._Strength;
			}
			set
			{
				if ((this._Strength != value))
				{
					this._Strength = value;
				}
			}
		}
	}
	
	[Table(Name="rpt.arachnode_rvw_Exceptions_COUNT_BY_MESSAGE")]
	public partial class arachnode_rvw_Exceptions_COUNT_BY_MESSAGE
	{
		
		private System.Nullable<System.DateTime> _InitiallyCreated;
		
		private System.Nullable<System.DateTime> _LastCreated;
		
		private string _Message;
		
		private System.Nullable<int> _Count;
		
		private System.Nullable<int> _DaysSinceInitiallyDiscovered;
		
		private System.Nullable<int> _DaysSinceLastDiscovered;
		
		private System.Nullable<double> _Strength;
		
		public arachnode_rvw_Exceptions_COUNT_BY_MESSAGE()
		{
		}
		
		[Column(Storage="_InitiallyCreated", DbType="DateTime")]
		public System.Nullable<System.DateTime> InitiallyCreated
		{
			get
			{
				return this._InitiallyCreated;
			}
			set
			{
				if ((this._InitiallyCreated != value))
				{
					this._InitiallyCreated = value;
				}
			}
		}
		
		[Column(Storage="_LastCreated", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastCreated
		{
			get
			{
				return this._LastCreated;
			}
			set
			{
				if ((this._LastCreated != value))
				{
					this._LastCreated = value;
				}
			}
		}
		
		[Column(Storage="_Message", DbType="VarChar(2000) NOT NULL", CanBeNull=false)]
		public string Message
		{
			get
			{
				return this._Message;
			}
			set
			{
				if ((this._Message != value))
				{
					this._Message = value;
				}
			}
		}
		
		[Column(Storage="_Count", DbType="Int")]
		public System.Nullable<int> Count
		{
			get
			{
				return this._Count;
			}
			set
			{
				if ((this._Count != value))
				{
					this._Count = value;
				}
			}
		}
		
		[Column(Storage="_DaysSinceInitiallyDiscovered", DbType="Int")]
		public System.Nullable<int> DaysSinceInitiallyDiscovered
		{
			get
			{
				return this._DaysSinceInitiallyDiscovered;
			}
			set
			{
				if ((this._DaysSinceInitiallyDiscovered != value))
				{
					this._DaysSinceInitiallyDiscovered = value;
				}
			}
		}
		
		[Column(Storage="_DaysSinceLastDiscovered", DbType="Int")]
		public System.Nullable<int> DaysSinceLastDiscovered
		{
			get
			{
				return this._DaysSinceLastDiscovered;
			}
			set
			{
				if ((this._DaysSinceLastDiscovered != value))
				{
					this._DaysSinceLastDiscovered = value;
				}
			}
		}
		
		[Column(Storage="_Strength", DbType="Float")]
		public System.Nullable<double> Strength
		{
			get
			{
				return this._Strength;
			}
			set
			{
				if ((this._Strength != value))
				{
					this._Strength = value;
				}
			}
		}
	}
	
	[Table(Name="rpt.arachnode_rvw_Exceptions_COUNT_BY_SCHEME1")]
	public partial class arachnode_rvw_Exceptions_COUNT_BY_SCHEME1
	{
		
		private System.Nullable<System.DateTime> _InitiallyCreated;
		
		private System.Nullable<System.DateTime> _LastCreated;
		
		private string _Scheme1;
		
		private System.Nullable<int> _Count;
		
		private System.Nullable<int> _DaysSinceInitiallyDiscovered;
		
		private System.Nullable<int> _DaysSinceLastDiscovered;
		
		private System.Nullable<double> _Strength;
		
		public arachnode_rvw_Exceptions_COUNT_BY_SCHEME1()
		{
		}
		
		[Column(Storage="_InitiallyCreated", DbType="DateTime")]
		public System.Nullable<System.DateTime> InitiallyCreated
		{
			get
			{
				return this._InitiallyCreated;
			}
			set
			{
				if ((this._InitiallyCreated != value))
				{
					this._InitiallyCreated = value;
				}
			}
		}
		
		[Column(Storage="_LastCreated", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastCreated
		{
			get
			{
				return this._LastCreated;
			}
			set
			{
				if ((this._LastCreated != value))
				{
					this._LastCreated = value;
				}
			}
		}
		
		[Column(Storage="_Scheme1", DbType="VarChar(884) NOT NULL", CanBeNull=false)]
		public string Scheme1
		{
			get
			{
				return this._Scheme1;
			}
			set
			{
				if ((this._Scheme1 != value))
				{
					this._Scheme1 = value;
				}
			}
		}
		
		[Column(Storage="_Count", DbType="Int")]
		public System.Nullable<int> Count
		{
			get
			{
				return this._Count;
			}
			set
			{
				if ((this._Count != value))
				{
					this._Count = value;
				}
			}
		}
		
		[Column(Storage="_DaysSinceInitiallyDiscovered", DbType="Int")]
		public System.Nullable<int> DaysSinceInitiallyDiscovered
		{
			get
			{
				return this._DaysSinceInitiallyDiscovered;
			}
			set
			{
				if ((this._DaysSinceInitiallyDiscovered != value))
				{
					this._DaysSinceInitiallyDiscovered = value;
				}
			}
		}
		
		[Column(Storage="_DaysSinceLastDiscovered", DbType="Int")]
		public System.Nullable<int> DaysSinceLastDiscovered
		{
			get
			{
				return this._DaysSinceLastDiscovered;
			}
			set
			{
				if ((this._DaysSinceLastDiscovered != value))
				{
					this._DaysSinceLastDiscovered = value;
				}
			}
		}
		
		[Column(Storage="_Strength", DbType="Float")]
		public System.Nullable<double> Strength
		{
			get
			{
				return this._Strength;
			}
			set
			{
				if ((this._Strength != value))
				{
					this._Strength = value;
				}
			}
		}
	}
	
	[Table(Name="rpt.arachnode_rvw_Exceptions_COUNT_BY_SCHEME2")]
	public partial class arachnode_rvw_Exceptions_COUNT_BY_SCHEME2
	{
		
		private System.Nullable<System.DateTime> _InitiallyCreated;
		
		private System.Nullable<System.DateTime> _LastCreated;
		
		private string _Scheme2;
		
		private System.Nullable<int> _Count;
		
		private System.Nullable<int> _DaysSinceInitiallyDiscovered;
		
		private System.Nullable<int> _DaysSinceLastDiscovered;
		
		private System.Nullable<double> _Strength;
		
		public arachnode_rvw_Exceptions_COUNT_BY_SCHEME2()
		{
		}
		
		[Column(Storage="_InitiallyCreated", DbType="DateTime")]
		public System.Nullable<System.DateTime> InitiallyCreated
		{
			get
			{
				return this._InitiallyCreated;
			}
			set
			{
				if ((this._InitiallyCreated != value))
				{
					this._InitiallyCreated = value;
				}
			}
		}
		
		[Column(Storage="_LastCreated", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastCreated
		{
			get
			{
				return this._LastCreated;
			}
			set
			{
				if ((this._LastCreated != value))
				{
					this._LastCreated = value;
				}
			}
		}
		
		[Column(Storage="_Scheme2", DbType="VarChar(884) NOT NULL", CanBeNull=false)]
		public string Scheme2
		{
			get
			{
				return this._Scheme2;
			}
			set
			{
				if ((this._Scheme2 != value))
				{
					this._Scheme2 = value;
				}
			}
		}
		
		[Column(Storage="_Count", DbType="Int")]
		public System.Nullable<int> Count
		{
			get
			{
				return this._Count;
			}
			set
			{
				if ((this._Count != value))
				{
					this._Count = value;
				}
			}
		}
		
		[Column(Storage="_DaysSinceInitiallyDiscovered", DbType="Int")]
		public System.Nullable<int> DaysSinceInitiallyDiscovered
		{
			get
			{
				return this._DaysSinceInitiallyDiscovered;
			}
			set
			{
				if ((this._DaysSinceInitiallyDiscovered != value))
				{
					this._DaysSinceInitiallyDiscovered = value;
				}
			}
		}
		
		[Column(Storage="_DaysSinceLastDiscovered", DbType="Int")]
		public System.Nullable<int> DaysSinceLastDiscovered
		{
			get
			{
				return this._DaysSinceLastDiscovered;
			}
			set
			{
				if ((this._DaysSinceLastDiscovered != value))
				{
					this._DaysSinceLastDiscovered = value;
				}
			}
		}
		
		[Column(Storage="_Strength", DbType="Float")]
		public System.Nullable<double> Strength
		{
			get
			{
				return this._Strength;
			}
			set
			{
				if ((this._Strength != value))
				{
					this._Strength = value;
				}
			}
		}
	}
	
	[Table(Name="rpt.arachnode_rvw_Exceptions_COUNT_BY_SCHEMES")]
	public partial class arachnode_rvw_Exceptions_COUNT_BY_SCHEME
	{
		
		private System.Nullable<System.DateTime> _InitiallyCreated;
		
		private System.Nullable<System.DateTime> _LastCreated;
		
		private string _Scheme1;
		
		private string _Scheme2;
		
		private System.Nullable<int> _Count;
		
		private System.Nullable<int> _DaysSinceInitiallyDiscovered;
		
		private System.Nullable<int> _DaysSinceLastDiscovered;
		
		private System.Nullable<double> _Strength;
		
		public arachnode_rvw_Exceptions_COUNT_BY_SCHEME()
		{
		}
		
		[Column(Storage="_InitiallyCreated", DbType="DateTime")]
		public System.Nullable<System.DateTime> InitiallyCreated
		{
			get
			{
				return this._InitiallyCreated;
			}
			set
			{
				if ((this._InitiallyCreated != value))
				{
					this._InitiallyCreated = value;
				}
			}
		}
		
		[Column(Storage="_LastCreated", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastCreated
		{
			get
			{
				return this._LastCreated;
			}
			set
			{
				if ((this._LastCreated != value))
				{
					this._LastCreated = value;
				}
			}
		}
		
		[Column(Storage="_Scheme1", DbType="VarChar(884) NOT NULL", CanBeNull=false)]
		public string Scheme1
		{
			get
			{
				return this._Scheme1;
			}
			set
			{
				if ((this._Scheme1 != value))
				{
					this._Scheme1 = value;
				}
			}
		}
		
		[Column(Storage="_Scheme2", DbType="VarChar(884) NOT NULL", CanBeNull=false)]
		public string Scheme2
		{
			get
			{
				return this._Scheme2;
			}
			set
			{
				if ((this._Scheme2 != value))
				{
					this._Scheme2 = value;
				}
			}
		}
		
		[Column(Storage="_Count", DbType="Int")]
		public System.Nullable<int> Count
		{
			get
			{
				return this._Count;
			}
			set
			{
				if ((this._Count != value))
				{
					this._Count = value;
				}
			}
		}
		
		[Column(Storage="_DaysSinceInitiallyDiscovered", DbType="Int")]
		public System.Nullable<int> DaysSinceInitiallyDiscovered
		{
			get
			{
				return this._DaysSinceInitiallyDiscovered;
			}
			set
			{
				if ((this._DaysSinceInitiallyDiscovered != value))
				{
					this._DaysSinceInitiallyDiscovered = value;
				}
			}
		}
		
		[Column(Storage="_DaysSinceLastDiscovered", DbType="Int")]
		public System.Nullable<int> DaysSinceLastDiscovered
		{
			get
			{
				return this._DaysSinceLastDiscovered;
			}
			set
			{
				if ((this._DaysSinceLastDiscovered != value))
				{
					this._DaysSinceLastDiscovered = value;
				}
			}
		}
		
		[Column(Storage="_Strength", DbType="Float")]
		public System.Nullable<double> Strength
		{
			get
			{
				return this._Strength;
			}
			set
			{
				if ((this._Strength != value))
				{
					this._Strength = value;
				}
			}
		}
	}
	
	[Table(Name="rpt.arachnode_rvw_Exceptions_COUNT_BY_SOURCE")]
	public partial class arachnode_rvw_Exceptions_COUNT_BY_SOURCE
	{
		
		private System.Nullable<System.DateTime> _InitiallyCreated;
		
		private System.Nullable<System.DateTime> _LastCreated;
		
		private string _Source;
		
		private System.Nullable<int> _Count;
		
		private System.Nullable<int> _DaysSinceInitiallyDiscovered;
		
		private System.Nullable<int> _DaysSinceLastDiscovered;
		
		private System.Nullable<double> _Strength;
		
		public arachnode_rvw_Exceptions_COUNT_BY_SOURCE()
		{
		}
		
		[Column(Storage="_InitiallyCreated", DbType="DateTime")]
		public System.Nullable<System.DateTime> InitiallyCreated
		{
			get
			{
				return this._InitiallyCreated;
			}
			set
			{
				if ((this._InitiallyCreated != value))
				{
					this._InitiallyCreated = value;
				}
			}
		}
		
		[Column(Storage="_LastCreated", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastCreated
		{
			get
			{
				return this._LastCreated;
			}
			set
			{
				if ((this._LastCreated != value))
				{
					this._LastCreated = value;
				}
			}
		}
		
		[Column(Storage="_Source", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Source
		{
			get
			{
				return this._Source;
			}
			set
			{
				if ((this._Source != value))
				{
					this._Source = value;
				}
			}
		}
		
		[Column(Storage="_Count", DbType="Int")]
		public System.Nullable<int> Count
		{
			get
			{
				return this._Count;
			}
			set
			{
				if ((this._Count != value))
				{
					this._Count = value;
				}
			}
		}
		
		[Column(Storage="_DaysSinceInitiallyDiscovered", DbType="Int")]
		public System.Nullable<int> DaysSinceInitiallyDiscovered
		{
			get
			{
				return this._DaysSinceInitiallyDiscovered;
			}
			set
			{
				if ((this._DaysSinceInitiallyDiscovered != value))
				{
					this._DaysSinceInitiallyDiscovered = value;
				}
			}
		}
		
		[Column(Storage="_DaysSinceLastDiscovered", DbType="Int")]
		public System.Nullable<int> DaysSinceLastDiscovered
		{
			get
			{
				return this._DaysSinceLastDiscovered;
			}
			set
			{
				if ((this._DaysSinceLastDiscovered != value))
				{
					this._DaysSinceLastDiscovered = value;
				}
			}
		}
		
		[Column(Storage="_Strength", DbType="Float")]
		public System.Nullable<double> Strength
		{
			get
			{
				return this._Strength;
			}
			set
			{
				if ((this._Strength != value))
				{
					this._Strength = value;
				}
			}
		}
	}
	
	[Table(Name="rpt.arachnode_rvw_Exceptions_COUNT_BY_STACKTRACE")]
	public partial class arachnode_rvw_Exceptions_COUNT_BY_STACKTRACE
	{
		
		private System.Nullable<System.DateTime> _InitiallyCreated;
		
		private System.Nullable<System.DateTime> _LastCreated;
		
		private string _StackTrace;
		
		private System.Nullable<int> _Count;
		
		private System.Nullable<int> _DaysSinceInitiallyDiscovered;
		
		private System.Nullable<int> _DaysSinceLastDiscovered;
		
		private System.Nullable<double> _Strength;
		
		public arachnode_rvw_Exceptions_COUNT_BY_STACKTRACE()
		{
		}
		
		[Column(Storage="_InitiallyCreated", DbType="DateTime")]
		public System.Nullable<System.DateTime> InitiallyCreated
		{
			get
			{
				return this._InitiallyCreated;
			}
			set
			{
				if ((this._InitiallyCreated != value))
				{
					this._InitiallyCreated = value;
				}
			}
		}
		
		[Column(Storage="_LastCreated", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastCreated
		{
			get
			{
				return this._LastCreated;
			}
			set
			{
				if ((this._LastCreated != value))
				{
					this._LastCreated = value;
				}
			}
		}
		
		[Column(Storage="_StackTrace", DbType="VarChar(4000) NOT NULL", CanBeNull=false)]
		public string StackTrace
		{
			get
			{
				return this._StackTrace;
			}
			set
			{
				if ((this._StackTrace != value))
				{
					this._StackTrace = value;
				}
			}
		}
		
		[Column(Storage="_Count", DbType="Int")]
		public System.Nullable<int> Count
		{
			get
			{
				return this._Count;
			}
			set
			{
				if ((this._Count != value))
				{
					this._Count = value;
				}
			}
		}
		
		[Column(Storage="_DaysSinceInitiallyDiscovered", DbType="Int")]
		public System.Nullable<int> DaysSinceInitiallyDiscovered
		{
			get
			{
				return this._DaysSinceInitiallyDiscovered;
			}
			set
			{
				if ((this._DaysSinceInitiallyDiscovered != value))
				{
					this._DaysSinceInitiallyDiscovered = value;
				}
			}
		}
		
		[Column(Storage="_DaysSinceLastDiscovered", DbType="Int")]
		public System.Nullable<int> DaysSinceLastDiscovered
		{
			get
			{
				return this._DaysSinceLastDiscovered;
			}
			set
			{
				if ((this._DaysSinceLastDiscovered != value))
				{
					this._DaysSinceLastDiscovered = value;
				}
			}
		}
		
		[Column(Storage="_Strength", DbType="Float")]
		public System.Nullable<double> Strength
		{
			get
			{
				return this._Strength;
			}
			set
			{
				if ((this._Strength != value))
				{
					this._Strength = value;
				}
			}
		}
	}
	
	[Table(Name="rpt.arachnode_rvw_Exceptions_COUNT_NEW_BY_DATE")]
	public partial class arachnode_rvw_Exceptions_COUNT_NEW_BY_DATE
	{
		
		private System.Nullable<System.DateTime> _Date;
		
		private System.Nullable<int> _Exceptions;
		
		public arachnode_rvw_Exceptions_COUNT_NEW_BY_DATE()
		{
		}
		
		[Column(Storage="_Date", DbType="DateTime")]
		public System.Nullable<System.DateTime> Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this._Date = value;
				}
			}
		}
		
		[Column(Storage="_Exceptions", DbType="Int")]
		public System.Nullable<int> Exceptions
		{
			get
			{
				return this._Exceptions;
			}
			set
			{
				if ((this._Exceptions != value))
				{
					this._Exceptions = value;
				}
			}
		}
	}
	
	[Table(Name="rpt.arachnode_rvw_ExceptionsWithoutHosts_Discoveries")]
	public partial class arachnode_rvw_ExceptionsWithoutHosts_Discovery
	{
		
		private System.DateTime _Created;
		
		private long _ID;
		
		private string _AbsoluteUri1;
		
		private string _AbsoluteUri2;
		
		private string _HelpLink;
		
		private string _Message;
		
		private string _Source;
		
		private string _StackTrace;
		
		public arachnode_rvw_ExceptionsWithoutHosts_Discovery()
		{
		}
		
		[Column(Storage="_Created", DbType="DateTime NOT NULL")]
		public System.DateTime Created
		{
			get
			{
				return this._Created;
			}
			set
			{
				if ((this._Created != value))
				{
					this._Created = value;
				}
			}
		}
		
		[Column(Storage="_ID", AutoSync=AutoSync.Always, DbType="BigInt NOT NULL IDENTITY", IsDbGenerated=true)]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this._ID = value;
				}
			}
		}
		
		[Column(Storage="_AbsoluteUri1", DbType="VarChar(884)")]
		public string AbsoluteUri1
		{
			get
			{
				return this._AbsoluteUri1;
			}
			set
			{
				if ((this._AbsoluteUri1 != value))
				{
					this._AbsoluteUri1 = value;
				}
			}
		}
		
		[Column(Storage="_AbsoluteUri2", DbType="VarChar(884)")]
		public string AbsoluteUri2
		{
			get
			{
				return this._AbsoluteUri2;
			}
			set
			{
				if ((this._AbsoluteUri2 != value))
				{
					this._AbsoluteUri2 = value;
				}
			}
		}
		
		[Column(Storage="_HelpLink", DbType="VarChar(400)")]
		public string HelpLink
		{
			get
			{
				return this._HelpLink;
			}
			set
			{
				if ((this._HelpLink != value))
				{
					this._HelpLink = value;
				}
			}
		}
		
		[Column(Storage="_Message", DbType="VarChar(2000) NOT NULL", CanBeNull=false)]
		public string Message
		{
			get
			{
				return this._Message;
			}
			set
			{
				if ((this._Message != value))
				{
					this._Message = value;
				}
			}
		}
		
		[Column(Storage="_Source", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Source
		{
			get
			{
				return this._Source;
			}
			set
			{
				if ((this._Source != value))
				{
					this._Source = value;
				}
			}
		}
		
		[Column(Storage="_StackTrace", DbType="VarChar(4000) NOT NULL", CanBeNull=false)]
		public string StackTrace
		{
			get
			{
				return this._StackTrace;
			}
			set
			{
				if ((this._StackTrace != value))
				{
					this._StackTrace = value;
				}
			}
		}
	}
	
	[Table(Name="rpt.arachnode_rvw_ExceptionsWithoutSchemes_Discoveries")]
	public partial class arachnode_rvw_ExceptionsWithoutSchemes_Discovery
	{
		
		private System.DateTime _Created;
		
		private long _ID;
		
		private string _AbsoluteUri1;
		
		private string _AbsoluteUri2;
		
		private string _HelpLink;
		
		private string _Message;
		
		private string _Source;
		
		private string _StackTrace;
		
		public arachnode_rvw_ExceptionsWithoutSchemes_Discovery()
		{
		}
		
		[Column(Storage="_Created", DbType="DateTime NOT NULL")]
		public System.DateTime Created
		{
			get
			{
				return this._Created;
			}
			set
			{
				if ((this._Created != value))
				{
					this._Created = value;
				}
			}
		}
		
		[Column(Storage="_ID", AutoSync=AutoSync.Always, DbType="BigInt NOT NULL IDENTITY", IsDbGenerated=true)]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this._ID = value;
				}
			}
		}
		
		[Column(Storage="_AbsoluteUri1", DbType="VarChar(884)")]
		public string AbsoluteUri1
		{
			get
			{
				return this._AbsoluteUri1;
			}
			set
			{
				if ((this._AbsoluteUri1 != value))
				{
					this._AbsoluteUri1 = value;
				}
			}
		}
		
		[Column(Storage="_AbsoluteUri2", DbType="VarChar(884)")]
		public string AbsoluteUri2
		{
			get
			{
				return this._AbsoluteUri2;
			}
			set
			{
				if ((this._AbsoluteUri2 != value))
				{
					this._AbsoluteUri2 = value;
				}
			}
		}
		
		[Column(Storage="_HelpLink", DbType="VarChar(400)")]
		public string HelpLink
		{
			get
			{
				return this._HelpLink;
			}
			set
			{
				if ((this._HelpLink != value))
				{
					this._HelpLink = value;
				}
			}
		}
		
		[Column(Storage="_Message", DbType="VarChar(2000) NOT NULL", CanBeNull=false)]
		public string Message
		{
			get
			{
				return this._Message;
			}
			set
			{
				if ((this._Message != value))
				{
					this._Message = value;
				}
			}
		}
		
		[Column(Storage="_Source", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Source
		{
			get
			{
				return this._Source;
			}
			set
			{
				if ((this._Source != value))
				{
					this._Source = value;
				}
			}
		}
		
		[Column(Storage="_StackTrace", DbType="VarChar(4000) NOT NULL", CanBeNull=false)]
		public string StackTrace
		{
			get
			{
				return this._StackTrace;
			}
			set
			{
				if ((this._StackTrace != value))
				{
					this._StackTrace = value;
				}
			}
		}
	}
	
	[Table(Name="rpt.arachnode_rvw_Extensions_ALL")]
	public partial class arachnode_rvw_Extensions_ALL
	{
		
		private System.Nullable<System.DateTime> _InitiallyDiscovered;
		
		private System.Nullable<System.DateTime> _LastDiscovered;
		
		private int _DiscoveryTypeID;
		
		private string _Extension;
		
		public arachnode_rvw_Extensions_ALL()
		{
		}
		
		[Column(Storage="_InitiallyDiscovered", DbType="DateTime")]
		public System.Nullable<System.DateTime> InitiallyDiscovered
		{
			get
			{
				return this._InitiallyDiscovered;
			}
			set
			{
				if ((this._InitiallyDiscovered != value))
				{
					this._InitiallyDiscovered = value;
				}
			}
		}
		
		[Column(Storage="_LastDiscovered", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastDiscovered
		{
			get
			{
				return this._LastDiscovered;
			}
			set
			{
				if ((this._LastDiscovered != value))
				{
					this._LastDiscovered = value;
				}
			}
		}
		
		[Column(Storage="_DiscoveryTypeID", DbType="Int NOT NULL")]
		public int DiscoveryTypeID
		{
			get
			{
				return this._DiscoveryTypeID;
			}
			set
			{
				if ((this._DiscoveryTypeID != value))
				{
					this._DiscoveryTypeID = value;
				}
			}
		}
		
		[Column(Storage="_Extension", DbType="NVarChar(4000)")]
		public string Extension
		{
			get
			{
				return this._Extension;
			}
			set
			{
				if ((this._Extension != value))
				{
					this._Extension = value;
				}
			}
		}
	}
	
	[Table(Name="rpt.arachnode_rvw_Extensions_NEW")]
	public partial class arachnode_rvw_Extensions_NEW
	{
		
		private System.Nullable<System.DateTime> _InitiallyDiscovered;
		
		private System.Nullable<System.DateTime> _LastDiscovered;
		
		private int _DiscoveryTypeID;
		
		private string _Extension;
		
		public arachnode_rvw_Extensions_NEW()
		{
		}
		
		[Column(Storage="_InitiallyDiscovered", DbType="DateTime")]
		public System.Nullable<System.DateTime> InitiallyDiscovered
		{
			get
			{
				return this._InitiallyDiscovered;
			}
			set
			{
				if ((this._InitiallyDiscovered != value))
				{
					this._InitiallyDiscovered = value;
				}
			}
		}
		
		[Column(Storage="_LastDiscovered", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastDiscovered
		{
			get
			{
				return this._LastDiscovered;
			}
			set
			{
				if ((this._LastDiscovered != value))
				{
					this._LastDiscovered = value;
				}
			}
		}
		
		[Column(Storage="_DiscoveryTypeID", DbType="Int NOT NULL")]
		public int DiscoveryTypeID
		{
			get
			{
				return this._DiscoveryTypeID;
			}
			set
			{
				if ((this._DiscoveryTypeID != value))
				{
					this._DiscoveryTypeID = value;
				}
			}
		}
		
		[Column(Storage="_Extension", DbType="NVarChar(4000)")]
		public string Extension
		{
			get
			{
				return this._Extension;
			}
			set
			{
				if ((this._Extension != value))
				{
					this._Extension = value;
				}
			}
		}
	}
	
	[Table(Name="rpt.arachnode_rvw_Files_COUNT_BY_ABSOLUTEURI")]
	public partial class arachnode_rvw_Files_COUNT_BY_ABSOLUTEURI
	{
		
		private long _ID;
		
		private System.Nullable<int> _Count;
		
		public arachnode_rvw_Files_COUNT_BY_ABSOLUTEURI()
		{
		}
		
		[Column(Storage="_ID", DbType="BigInt NOT NULL")]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this._ID = value;
				}
			}
		}
		
		[Column(Storage="_Count", DbType="Int")]
		public System.Nullable<int> Count
		{
			get
			{
				return this._Count;
			}
			set
			{
				if ((this._Count != value))
				{
					this._Count = value;
				}
			}
		}
	}
	
	[Table(Name="rpt.arachnode_rvw_Files_COUNT_BY_DOMAIN")]
	public partial class arachnode_rvw_Files_COUNT_BY_DOMAIN
	{
		
		private int _DomainID;
		
		private System.Nullable<int> _Count;
		
		public arachnode_rvw_Files_COUNT_BY_DOMAIN()
		{
		}
		
		[Column(Storage="_DomainID", DbType="Int NOT NULL")]
		public int DomainID
		{
			get
			{
				return this._DomainID;
			}
			set
			{
				if ((this._DomainID != value))
				{
					this._DomainID = value;
				}
			}
		}
		
		[Column(Storage="_Count", DbType="Int")]
		public System.Nullable<int> Count
		{
			get
			{
				return this._Count;
			}
			set
			{
				if ((this._Count != value))
				{
					this._Count = value;
				}
			}
		}
	}
	
	[Table(Name="rpt.arachnode_rvw_Files_COUNT_BY_EXTENSION")]
	public partial class arachnode_rvw_Files_COUNT_BY_EXTENSION
	{
		
		private int _ExtensionID;
		
		private System.Nullable<int> _Count;
		
		public arachnode_rvw_Files_COUNT_BY_EXTENSION()
		{
		}
		
		[Column(Storage="_ExtensionID", DbType="Int NOT NULL")]
		public int ExtensionID
		{
			get
			{
				return this._ExtensionID;
			}
			set
			{
				if ((this._ExtensionID != value))
				{
					this._ExtensionID = value;
				}
			}
		}
		
		[Column(Storage="_Count", DbType="Int")]
		public System.Nullable<int> Count
		{
			get
			{
				return this._Count;
			}
			set
			{
				if ((this._Count != value))
				{
					this._Count = value;
				}
			}
		}
	}
	
	[Table(Name="rpt.arachnode_rvw_Files_COUNT_BY_FULLTEXTINDEXTYPE")]
	public partial class arachnode_rvw_Files_COUNT_BY_FULLTEXTINDEXTYPE
	{
		
		private string _FullTextIndexType;
		
		private System.Nullable<int> _Count;
		
		public arachnode_rvw_Files_COUNT_BY_FULLTEXTINDEXTYPE()
		{
		}
		
		[Column(Storage="_FullTextIndexType", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string FullTextIndexType
		{
			get
			{
				return this._FullTextIndexType;
			}
			set
			{
				if ((this._FullTextIndexType != value))
				{
					this._FullTextIndexType = value;
				}
			}
		}
		
		[Column(Storage="_Count", DbType="Int")]
		public System.Nullable<int> Count
		{
			get
			{
				return this._Count;
			}
			set
			{
				if ((this._Count != value))
				{
					this._Count = value;
				}
			}
		}
	}
	
	[Table(Name="rpt.arachnode_rvw_Files_COUNT_BY_HOST")]
	public partial class arachnode_rvw_Files_COUNT_BY_HOST
	{
		
		private int _HostID;
		
		private System.Nullable<int> _Count;
		
		public arachnode_rvw_Files_COUNT_BY_HOST()
		{
		}
		
		[Column(Storage="_HostID", DbType="Int NOT NULL")]
		public int HostID
		{
			get
			{
				return this._HostID;
			}
			set
			{
				if ((this._HostID != value))
				{
					this._HostID = value;
				}
			}
		}
		
		[Column(Storage="_Count", DbType="Int")]
		public System.Nullable<int> Count
		{
			get
			{
				return this._Count;
			}
			set
			{
				if ((this._Count != value))
				{
					this._Count = value;
				}
			}
		}
	}
	
	[Table(Name="rpt.arachnode_rvw_Files_COUNT_BY_SCHEME")]
	public partial class arachnode_rvw_Files_COUNT_BY_SCHEME
	{
		
		private int _SchemeID;
		
		private System.Nullable<int> _Count;
		
		public arachnode_rvw_Files_COUNT_BY_SCHEME()
		{
		}
		
		[Column(Storage="_SchemeID", DbType="Int NOT NULL")]
		public int SchemeID
		{
			get
			{
				return this._SchemeID;
			}
			set
			{
				if ((this._SchemeID != value))
				{
					this._SchemeID = value;
				}
			}
		}
		
		[Column(Storage="_Count", DbType="Int")]
		public System.Nullable<int> Count
		{
			get
			{
				return this._Count;
			}
			set
			{
				if ((this._Count != value))
				{
					this._Count = value;
				}
			}
		}
	}
	
	[Table(Name="rpt.arachnode_rvw_Files_COUNT_NEW_BY_DATE")]
	public partial class arachnode_rvw_Files_COUNT_NEW_BY_DATE
	{
		
		private System.Nullable<System.DateTime> _Date;
		
		private System.Nullable<int> _Files;
		
		private System.Nullable<int> _Files_Discoveries;
		
		public arachnode_rvw_Files_COUNT_NEW_BY_DATE()
		{
		}
		
		[Column(Storage="_Date", DbType="DateTime")]
		public System.Nullable<System.DateTime> Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this._Date = value;
				}
			}
		}
		
		[Column(Storage="_Files", DbType="Int")]
		public System.Nullable<int> Files
		{
			get
			{
				return this._Files;
			}
			set
			{
				if ((this._Files != value))
				{
					this._Files = value;
				}
			}
		}
		
		[Column(Storage="_Files_Discoveries", DbType="Int")]
		public System.Nullable<int> Files_Discoveries
		{
			get
			{
				return this._Files_Discoveries;
			}
			set
			{
				if ((this._Files_Discoveries != value))
				{
					this._Files_Discoveries = value;
				}
			}
		}
	}
	
	[Table(Name="rpt.arachnode_rvw_FilesWithoutDiscoveries")]
	public partial class arachnode_rvw_FilesWithoutDiscovery
	{
		
		private long _ID;
		
		private string _AbsoluteUri;
		
		private string _ResponseHeaders;
		
		private System.Data.Linq.Binary _Source;
		
		private string _FullTextIndexType;
		
		public arachnode_rvw_FilesWithoutDiscovery()
		{
		}
		
		[Column(Storage="_ID", AutoSync=AutoSync.Always, DbType="BigInt NOT NULL IDENTITY", IsDbGenerated=true)]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this._ID = value;
				}
			}
		}
		
		[Column(Storage="_AbsoluteUri", DbType="VarChar(884) NOT NULL", CanBeNull=false)]
		public string AbsoluteUri
		{
			get
			{
				return this._AbsoluteUri;
			}
			set
			{
				if ((this._AbsoluteUri != value))
				{
					this._AbsoluteUri = value;
				}
			}
		}
		
		[Column(Storage="_ResponseHeaders", DbType="VarChar(4000)")]
		public string ResponseHeaders
		{
			get
			{
				return this._ResponseHeaders;
			}
			set
			{
				if ((this._ResponseHeaders != value))
				{
					this._ResponseHeaders = value;
				}
			}
		}
		
		[Column(Storage="_Source", DbType="VarBinary(MAX) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary Source
		{
			get
			{
				return this._Source;
			}
			set
			{
				if ((this._Source != value))
				{
					this._Source = value;
				}
			}
		}
		
		[Column(Storage="_FullTextIndexType", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string FullTextIndexType
		{
			get
			{
				return this._FullTextIndexType;
			}
			set
			{
				if ((this._FullTextIndexType != value))
				{
					this._FullTextIndexType = value;
				}
			}
		}
	}
	
	[Table(Name="rpt.arachnode_rvw_FilesWithoutHosts_Discoveries")]
	public partial class arachnode_rvw_FilesWithoutHosts_Discovery
	{
		
		private long _ID;
		
		private string _AbsoluteUri;
		
		private string _ResponseHeaders;
		
		private System.Data.Linq.Binary _Source;
		
		private string _FullTextIndexType;
		
		public arachnode_rvw_FilesWithoutHosts_Discovery()
		{
		}
		
		[Column(Storage="_ID", AutoSync=AutoSync.Always, DbType="BigInt NOT NULL IDENTITY", IsDbGenerated=true)]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this._ID = value;
				}
			}
		}
		
		[Column(Storage="_AbsoluteUri", DbType="VarChar(884) NOT NULL", CanBeNull=false)]
		public string AbsoluteUri
		{
			get
			{
				return this._AbsoluteUri;
			}
			set
			{
				if ((this._AbsoluteUri != value))
				{
					this._AbsoluteUri = value;
				}
			}
		}
		
		[Column(Storage="_ResponseHeaders", DbType="VarChar(4000)")]
		public string ResponseHeaders
		{
			get
			{
				return this._ResponseHeaders;
			}
			set
			{
				if ((this._ResponseHeaders != value))
				{
					this._ResponseHeaders = value;
				}
			}
		}
		
		[Column(Storage="_Source", DbType="VarBinary(MAX) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary Source
		{
			get
			{
				return this._Source;
			}
			set
			{
				if ((this._Source != value))
				{
					this._Source = value;
				}
			}
		}
		
		[Column(Storage="_FullTextIndexType", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string FullTextIndexType
		{
			get
			{
				return this._FullTextIndexType;
			}
			set
			{
				if ((this._FullTextIndexType != value))
				{
					this._FullTextIndexType = value;
				}
			}
		}
	}
	
	[Table(Name="rpt.arachnode_rvw_FilesWithoutSchemes_Discoveries")]
	public partial class arachnode_rvw_FilesWithoutSchemes_Discovery
	{
		
		private long _ID;
		
		private string _AbsoluteUri;
		
		private string _ResponseHeaders;
		
		private System.Data.Linq.Binary _Source;
		
		private string _FullTextIndexType;
		
		public arachnode_rvw_FilesWithoutSchemes_Discovery()
		{
		}
		
		[Column(Storage="_ID", AutoSync=AutoSync.Always, DbType="BigInt NOT NULL IDENTITY", IsDbGenerated=true)]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this._ID = value;
				}
			}
		}
		
		[Column(Storage="_AbsoluteUri", DbType="VarChar(884) NOT NULL", CanBeNull=false)]
		public string AbsoluteUri
		{
			get
			{
				return this._AbsoluteUri;
			}
			set
			{
				if ((this._AbsoluteUri != value))
				{
					this._AbsoluteUri = value;
				}
			}
		}
		
		[Column(Storage="_ResponseHeaders", DbType="VarChar(4000)")]
		public string ResponseHeaders
		{
			get
			{
				return this._ResponseHeaders;
			}
			set
			{
				if ((this._ResponseHeaders != value))
				{
					this._ResponseHeaders = value;
				}
			}
		}
		
		[Column(Storage="_Source", DbType="VarBinary(MAX) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary Source
		{
			get
			{
				return this._Source;
			}
			set
			{
				if ((this._Source != value))
				{
					this._Source = value;
				}
			}
		}
		
		[Column(Storage="_FullTextIndexType", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string FullTextIndexType
		{
			get
			{
				return this._FullTextIndexType;
			}
			set
			{
				if ((this._FullTextIndexType != value))
				{
					this._FullTextIndexType = value;
				}
			}
		}
	}
	
	[Table(Name="rpt.arachnode_rvw_Hosts_ALL")]
	public partial class arachnode_rvw_Hosts_ALL
	{
		
		private System.Nullable<System.DateTime> _InitiallyDiscovered;
		
		private System.Nullable<System.DateTime> _LastDiscovered;
		
		private int _DiscoveryTypeID;
		
		private string _Host;
		
		public arachnode_rvw_Hosts_ALL()
		{
		}
		
		[Column(Storage="_InitiallyDiscovered", DbType="DateTime")]
		public System.Nullable<System.DateTime> InitiallyDiscovered
		{
			get
			{
				return this._InitiallyDiscovered;
			}
			set
			{
				if ((this._InitiallyDiscovered != value))
				{
					this._InitiallyDiscovered = value;
				}
			}
		}
		
		[Column(Storage="_LastDiscovered", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastDiscovered
		{
			get
			{
				return this._LastDiscovered;
			}
			set
			{
				if ((this._LastDiscovered != value))
				{
					this._LastDiscovered = value;
				}
			}
		}
		
		[Column(Storage="_DiscoveryTypeID", DbType="Int NOT NULL")]
		public int DiscoveryTypeID
		{
			get
			{
				return this._DiscoveryTypeID;
			}
			set
			{
				if ((this._DiscoveryTypeID != value))
				{
					this._DiscoveryTypeID = value;
				}
			}
		}
		
		[Column(Storage="_Host", DbType="NVarChar(4000)")]
		public string Host
		{
			get
			{
				return this._Host;
			}
			set
			{
				if ((this._Host != value))
				{
					this._Host = value;
				}
			}
		}
	}
	
	[Table(Name="rpt.arachnode_rvw_Hosts_NEW")]
	public partial class arachnode_rvw_Hosts_NEW
	{
		
		private System.Nullable<System.DateTime> _InitiallyDiscovered;
		
		private System.Nullable<System.DateTime> _LastDiscovered;
		
		private int _DiscoveryTypeID;
		
		private string _Host;
		
		public arachnode_rvw_Hosts_NEW()
		{
		}
		
		[Column(Storage="_InitiallyDiscovered", DbType="DateTime")]
		public System.Nullable<System.DateTime> InitiallyDiscovered
		{
			get
			{
				return this._InitiallyDiscovered;
			}
			set
			{
				if ((this._InitiallyDiscovered != value))
				{
					this._InitiallyDiscovered = value;
				}
			}
		}
		
		[Column(Storage="_LastDiscovered", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastDiscovered
		{
			get
			{
				return this._LastDiscovered;
			}
			set
			{
				if ((this._LastDiscovered != value))
				{
					this._LastDiscovered = value;
				}
			}
		}
		
		[Column(Storage="_DiscoveryTypeID", DbType="Int NOT NULL")]
		public int DiscoveryTypeID
		{
			get
			{
				return this._DiscoveryTypeID;
			}
			set
			{
				if ((this._DiscoveryTypeID != value))
				{
					this._DiscoveryTypeID = value;
				}
			}
		}
		
		[Column(Storage="_Host", DbType="NVarChar(4000)")]
		public string Host
		{
			get
			{
				return this._Host;
			}
			set
			{
				if ((this._Host != value))
				{
					this._Host = value;
				}
			}
		}
	}
	
	[Table(Name="rpt.arachnode_rvw_HyperLinks_COUNT_BY_ABSOLUTEURI")]
	public partial class arachnode_rvw_HyperLinks_COUNT_BY_ABSOLUTEURI
	{
		
		private long _ID;
		
		private System.Nullable<int> _Count;
		
		public arachnode_rvw_HyperLinks_COUNT_BY_ABSOLUTEURI()
		{
		}
		
		[Column(Storage="_ID", DbType="BigInt NOT NULL")]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this._ID = value;
				}
			}
		}
		
		[Column(Storage="_Count", DbType="Int")]
		public System.Nullable<int> Count
		{
			get
			{
				return this._Count;
			}
			set
			{
				if ((this._Count != value))
				{
					this._Count = value;
				}
			}
		}
	}
	
	[Table(Name="rpt.arachnode_rvw_HyperLinks_COUNT_BY_DOMAIN")]
	public partial class arachnode_rvw_HyperLinks_COUNT_BY_DOMAIN
	{
		
		private int _DomainID;
		
		private System.Nullable<int> _Count;
		
		public arachnode_rvw_HyperLinks_COUNT_BY_DOMAIN()
		{
		}
		
		[Column(Storage="_DomainID", DbType="Int NOT NULL")]
		public int DomainID
		{
			get
			{
				return this._DomainID;
			}
			set
			{
				if ((this._DomainID != value))
				{
					this._DomainID = value;
				}
			}
		}
		
		[Column(Storage="_Count", DbType="Int")]
		public System.Nullable<int> Count
		{
			get
			{
				return this._Count;
			}
			set
			{
				if ((this._Count != value))
				{
					this._Count = value;
				}
			}
		}
	}
	
	[Table(Name="rpt.arachnode_rvw_HyperLinks_COUNT_BY_EXTENSION")]
	public partial class arachnode_rvw_HyperLinks_COUNT_BY_EXTENSION
	{
		
		private int _ExtensionID;
		
		private System.Nullable<int> _Count;
		
		public arachnode_rvw_HyperLinks_COUNT_BY_EXTENSION()
		{
		}
		
		[Column(Storage="_ExtensionID", DbType="Int NOT NULL")]
		public int ExtensionID
		{
			get
			{
				return this._ExtensionID;
			}
			set
			{
				if ((this._ExtensionID != value))
				{
					this._ExtensionID = value;
				}
			}
		}
		
		[Column(Storage="_Count", DbType="Int")]
		public System.Nullable<int> Count
		{
			get
			{
				return this._Count;
			}
			set
			{
				if ((this._Count != value))
				{
					this._Count = value;
				}
			}
		}
	}
	
	[Table(Name="rpt.arachnode_rvw_HyperLinks_COUNT_BY_HOST")]
	public partial class arachnode_rvw_HyperLinks_COUNT_BY_HOST
	{
		
		private int _HostID;
		
		private System.Nullable<int> _Count;
		
		public arachnode_rvw_HyperLinks_COUNT_BY_HOST()
		{
		}
		
		[Column(Storage="_HostID", DbType="Int NOT NULL")]
		public int HostID
		{
			get
			{
				return this._HostID;
			}
			set
			{
				if ((this._HostID != value))
				{
					this._HostID = value;
				}
			}
		}
		
		[Column(Storage="_Count", DbType="Int")]
		public System.Nullable<int> Count
		{
			get
			{
				return this._Count;
			}
			set
			{
				if ((this._Count != value))
				{
					this._Count = value;
				}
			}
		}
	}
	
	[Table(Name="rpt.arachnode_rvw_HyperLinks_COUNT_BY_SCHEME")]
	public partial class arachnode_rvw_HyperLinks_COUNT_BY_SCHEME
	{
		
		private int _SchemeID;
		
		private System.Nullable<int> _Count;
		
		public arachnode_rvw_HyperLinks_COUNT_BY_SCHEME()
		{
		}
		
		[Column(Storage="_SchemeID", DbType="Int NOT NULL")]
		public int SchemeID
		{
			get
			{
				return this._SchemeID;
			}
			set
			{
				if ((this._SchemeID != value))
				{
					this._SchemeID = value;
				}
			}
		}
		
		[Column(Storage="_Count", DbType="Int")]
		public System.Nullable<int> Count
		{
			get
			{
				return this._Count;
			}
			set
			{
				if ((this._Count != value))
				{
					this._Count = value;
				}
			}
		}
	}
	
	[Table(Name="rpt.arachnode_rvw_HyperLinks_COUNT_NEW_BY_DATE")]
	public partial class arachnode_rvw_HyperLinks_COUNT_NEW_BY_DATE
	{
		
		private System.Nullable<System.DateTime> _Date;
		
		private System.Nullable<int> _HyperLinks;
		
		private System.Nullable<int> _HyperLinks_Discoveries;
		
		public arachnode_rvw_HyperLinks_COUNT_NEW_BY_DATE()
		{
		}
		
		[Column(Storage="_Date", DbType="DateTime")]
		public System.Nullable<System.DateTime> Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this._Date = value;
				}
			}
		}
		
		[Column(Storage="_HyperLinks", DbType="Int")]
		public System.Nullable<int> HyperLinks
		{
			get
			{
				return this._HyperLinks;
			}
			set
			{
				if ((this._HyperLinks != value))
				{
					this._HyperLinks = value;
				}
			}
		}
		
		[Column(Storage="_HyperLinks_Discoveries", DbType="Int")]
		public System.Nullable<int> HyperLinks_Discoveries
		{
			get
			{
				return this._HyperLinks_Discoveries;
			}
			set
			{
				if ((this._HyperLinks_Discoveries != value))
				{
					this._HyperLinks_Discoveries = value;
				}
			}
		}
	}
	
	[Table(Name="rpt.arachnode_rvw_HyperLinksWithoutDiscoveries")]
	public partial class arachnode_rvw_HyperLinksWithoutDiscovery
	{
		
		private long _ID;
		
		private string _AbsoluteUri;
		
		public arachnode_rvw_HyperLinksWithoutDiscovery()
		{
		}
		
		[Column(Storage="_ID", AutoSync=AutoSync.Always, DbType="BigInt NOT NULL IDENTITY", IsDbGenerated=true)]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this._ID = value;
				}
			}
		}
		
		[Column(Storage="_AbsoluteUri", DbType="VarChar(884) NOT NULL", CanBeNull=false)]
		public string AbsoluteUri
		{
			get
			{
				return this._AbsoluteUri;
			}
			set
			{
				if ((this._AbsoluteUri != value))
				{
					this._AbsoluteUri = value;
				}
			}
		}
	}
	
	[Table(Name="rpt.arachnode_rvw_HyperLinksWithoutHosts_Discoveries")]
	public partial class arachnode_rvw_HyperLinksWithoutHosts_Discovery
	{
		
		private long _ID;
		
		private string _AbsoluteUri;
		
		public arachnode_rvw_HyperLinksWithoutHosts_Discovery()
		{
		}
		
		[Column(Storage="_ID", AutoSync=AutoSync.Always, DbType="BigInt NOT NULL IDENTITY", IsDbGenerated=true)]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this._ID = value;
				}
			}
		}
		
		[Column(Storage="_AbsoluteUri", DbType="VarChar(884) NOT NULL", CanBeNull=false)]
		public string AbsoluteUri
		{
			get
			{
				return this._AbsoluteUri;
			}
			set
			{
				if ((this._AbsoluteUri != value))
				{
					this._AbsoluteUri = value;
				}
			}
		}
	}
	
	[Table(Name="rpt.arachnode_rvw_HyperLinksWithoutSchemes_Discoveries")]
	public partial class arachnode_rvw_HyperLinksWithoutSchemes_Discovery
	{
		
		private long _ID;
		
		private string _AbsoluteUri;
		
		public arachnode_rvw_HyperLinksWithoutSchemes_Discovery()
		{
		}
		
		[Column(Storage="_ID", AutoSync=AutoSync.Always, DbType="BigInt NOT NULL IDENTITY", IsDbGenerated=true)]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this._ID = value;
				}
			}
		}
		
		[Column(Storage="_AbsoluteUri", DbType="VarChar(884) NOT NULL", CanBeNull=false)]
		public string AbsoluteUri
		{
			get
			{
				return this._AbsoluteUri;
			}
			set
			{
				if ((this._AbsoluteUri != value))
				{
					this._AbsoluteUri = value;
				}
			}
		}
	}
	
	[Table(Name="rpt.arachnode_rvw_Images_COUNT_BY_ABSOLUTEURI")]
	public partial class arachnode_rvw_Images_COUNT_BY_ABSOLUTEURI
	{
		
		private long _ID;
		
		private System.Nullable<int> _Count;
		
		public arachnode_rvw_Images_COUNT_BY_ABSOLUTEURI()
		{
		}
		
		[Column(Storage="_ID", DbType="BigInt NOT NULL")]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this._ID = value;
				}
			}
		}
		
		[Column(Storage="_Count", DbType="Int")]
		public System.Nullable<int> Count
		{
			get
			{
				return this._Count;
			}
			set
			{
				if ((this._Count != value))
				{
					this._Count = value;
				}
			}
		}
	}
	
	[Table(Name="rpt.arachnode_rvw_Images_COUNT_BY_DOMAIN")]
	public partial class arachnode_rvw_Images_COUNT_BY_DOMAIN
	{
		
		private int _DomainID;
		
		private System.Nullable<int> _Count;
		
		public arachnode_rvw_Images_COUNT_BY_DOMAIN()
		{
		}
		
		[Column(Storage="_DomainID", DbType="Int NOT NULL")]
		public int DomainID
		{
			get
			{
				return this._DomainID;
			}
			set
			{
				if ((this._DomainID != value))
				{
					this._DomainID = value;
				}
			}
		}
		
		[Column(Storage="_Count", DbType="Int")]
		public System.Nullable<int> Count
		{
			get
			{
				return this._Count;
			}
			set
			{
				if ((this._Count != value))
				{
					this._Count = value;
				}
			}
		}
	}
	
	[Table(Name="rpt.arachnode_rvw_Images_COUNT_BY_EXTENSION")]
	public partial class arachnode_rvw_Images_COUNT_BY_EXTENSION
	{
		
		private int _ExtensionID;
		
		private System.Nullable<int> _Count;
		
		public arachnode_rvw_Images_COUNT_BY_EXTENSION()
		{
		}
		
		[Column(Storage="_ExtensionID", DbType="Int NOT NULL")]
		public int ExtensionID
		{
			get
			{
				return this._ExtensionID;
			}
			set
			{
				if ((this._ExtensionID != value))
				{
					this._ExtensionID = value;
				}
			}
		}
		
		[Column(Storage="_Count", DbType="Int")]
		public System.Nullable<int> Count
		{
			get
			{
				return this._Count;
			}
			set
			{
				if ((this._Count != value))
				{
					this._Count = value;
				}
			}
		}
	}
	
	[Table(Name="rpt.arachnode_rvw_Images_COUNT_BY_FULLTEXTINDEXTYPE")]
	public partial class arachnode_rvw_Images_COUNT_BY_FULLTEXTINDEXTYPE
	{
		
		private string _FullTextIndexType;
		
		private System.Nullable<int> _Count;
		
		public arachnode_rvw_Images_COUNT_BY_FULLTEXTINDEXTYPE()
		{
		}
		
		[Column(Storage="_FullTextIndexType", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string FullTextIndexType
		{
			get
			{
				return this._FullTextIndexType;
			}
			set
			{
				if ((this._FullTextIndexType != value))
				{
					this._FullTextIndexType = value;
				}
			}
		}
		
		[Column(Storage="_Count", DbType="Int")]
		public System.Nullable<int> Count
		{
			get
			{
				return this._Count;
			}
			set
			{
				if ((this._Count != value))
				{
					this._Count = value;
				}
			}
		}
	}
	
	[Table(Name="rpt.arachnode_rvw_Images_COUNT_BY_HOST")]
	public partial class arachnode_rvw_Images_COUNT_BY_HOST
	{
		
		private int _HostID;
		
		private System.Nullable<int> _Count;
		
		public arachnode_rvw_Images_COUNT_BY_HOST()
		{
		}
		
		[Column(Storage="_HostID", DbType="Int NOT NULL")]
		public int HostID
		{
			get
			{
				return this._HostID;
			}
			set
			{
				if ((this._HostID != value))
				{
					this._HostID = value;
				}
			}
		}
		
		[Column(Storage="_Count", DbType="Int")]
		public System.Nullable<int> Count
		{
			get
			{
				return this._Count;
			}
			set
			{
				if ((this._Count != value))
				{
					this._Count = value;
				}
			}
		}
	}
	
	[Table(Name="rpt.arachnode_rvw_Images_COUNT_BY_SCHEME")]
	public partial class arachnode_rvw_Images_COUNT_BY_SCHEME
	{
		
		private int _SchemeID;
		
		private System.Nullable<int> _Count;
		
		public arachnode_rvw_Images_COUNT_BY_SCHEME()
		{
		}
		
		[Column(Storage="_SchemeID", DbType="Int NOT NULL")]
		public int SchemeID
		{
			get
			{
				return this._SchemeID;
			}
			set
			{
				if ((this._SchemeID != value))
				{
					this._SchemeID = value;
				}
			}
		}
		
		[Column(Storage="_Count", DbType="Int")]
		public System.Nullable<int> Count
		{
			get
			{
				return this._Count;
			}
			set
			{
				if ((this._Count != value))
				{
					this._Count = value;
				}
			}
		}
	}
	
	[Table(Name="rpt.arachnode_rvw_Images_COUNT_NEW_BY_DATE")]
	public partial class arachnode_rvw_Images_COUNT_NEW_BY_DATE
	{
		
		private System.Nullable<System.DateTime> _Date;
		
		private System.Nullable<int> _Images;
		
		private System.Nullable<int> _Images_Discoveries;
		
		public arachnode_rvw_Images_COUNT_NEW_BY_DATE()
		{
		}
		
		[Column(Storage="_Date", DbType="DateTime")]
		public System.Nullable<System.DateTime> Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this._Date = value;
				}
			}
		}
		
		[Column(Storage="_Images", DbType="Int")]
		public System.Nullable<int> Images
		{
			get
			{
				return this._Images;
			}
			set
			{
				if ((this._Images != value))
				{
					this._Images = value;
				}
			}
		}
		
		[Column(Storage="_Images_Discoveries", DbType="Int")]
		public System.Nullable<int> Images_Discoveries
		{
			get
			{
				return this._Images_Discoveries;
			}
			set
			{
				if ((this._Images_Discoveries != value))
				{
					this._Images_Discoveries = value;
				}
			}
		}
	}
	
	[Table(Name="rpt.arachnode_rvw_ImagesWithoutDiscoveries")]
	public partial class arachnode_rvw_ImagesWithoutDiscovery
	{
		
		private long _ID;
		
		private string _AbsoluteUri;
		
		private string _ResponseHeaders;
		
		private System.Data.Linq.Binary _Source;
		
		private string _FullTextIndexType;
		
		public arachnode_rvw_ImagesWithoutDiscovery()
		{
		}
		
		[Column(Storage="_ID", AutoSync=AutoSync.Always, DbType="BigInt NOT NULL IDENTITY", IsDbGenerated=true)]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this._ID = value;
				}
			}
		}
		
		[Column(Storage="_AbsoluteUri", DbType="VarChar(884) NOT NULL", CanBeNull=false)]
		public string AbsoluteUri
		{
			get
			{
				return this._AbsoluteUri;
			}
			set
			{
				if ((this._AbsoluteUri != value))
				{
					this._AbsoluteUri = value;
				}
			}
		}
		
		[Column(Storage="_ResponseHeaders", DbType="VarChar(4000)")]
		public string ResponseHeaders
		{
			get
			{
				return this._ResponseHeaders;
			}
			set
			{
				if ((this._ResponseHeaders != value))
				{
					this._ResponseHeaders = value;
				}
			}
		}
		
		[Column(Storage="_Source", DbType="VarBinary(MAX) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary Source
		{
			get
			{
				return this._Source;
			}
			set
			{
				if ((this._Source != value))
				{
					this._Source = value;
				}
			}
		}
		
		[Column(Storage="_FullTextIndexType", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string FullTextIndexType
		{
			get
			{
				return this._FullTextIndexType;
			}
			set
			{
				if ((this._FullTextIndexType != value))
				{
					this._FullTextIndexType = value;
				}
			}
		}
	}
	
	[Table(Name="rpt.arachnode_rvw_ImagesWithoutHosts_Discoveries")]
	public partial class arachnode_rvw_ImagesWithoutHosts_Discovery
	{
		
		private long _ID;
		
		private string _AbsoluteUri;
		
		private string _ResponseHeaders;
		
		private System.Data.Linq.Binary _Source;
		
		private string _FullTextIndexType;
		
		public arachnode_rvw_ImagesWithoutHosts_Discovery()
		{
		}
		
		[Column(Storage="_ID", AutoSync=AutoSync.Always, DbType="BigInt NOT NULL IDENTITY", IsDbGenerated=true)]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this._ID = value;
				}
			}
		}
		
		[Column(Storage="_AbsoluteUri", DbType="VarChar(884) NOT NULL", CanBeNull=false)]
		public string AbsoluteUri
		{
			get
			{
				return this._AbsoluteUri;
			}
			set
			{
				if ((this._AbsoluteUri != value))
				{
					this._AbsoluteUri = value;
				}
			}
		}
		
		[Column(Storage="_ResponseHeaders", DbType="VarChar(4000)")]
		public string ResponseHeaders
		{
			get
			{
				return this._ResponseHeaders;
			}
			set
			{
				if ((this._ResponseHeaders != value))
				{
					this._ResponseHeaders = value;
				}
			}
		}
		
		[Column(Storage="_Source", DbType="VarBinary(MAX) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary Source
		{
			get
			{
				return this._Source;
			}
			set
			{
				if ((this._Source != value))
				{
					this._Source = value;
				}
			}
		}
		
		[Column(Storage="_FullTextIndexType", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string FullTextIndexType
		{
			get
			{
				return this._FullTextIndexType;
			}
			set
			{
				if ((this._FullTextIndexType != value))
				{
					this._FullTextIndexType = value;
				}
			}
		}
	}
	
	[Table(Name="rpt.arachnode_rvw_ImagesWithoutSchemes_Discoveries")]
	public partial class arachnode_rvw_ImagesWithoutSchemes_Discovery
	{
		
		private long _ID;
		
		private string _AbsoluteUri;
		
		private string _ResponseHeaders;
		
		private System.Data.Linq.Binary _Source;
		
		private string _FullTextIndexType;
		
		public arachnode_rvw_ImagesWithoutSchemes_Discovery()
		{
		}
		
		[Column(Storage="_ID", AutoSync=AutoSync.Always, DbType="BigInt NOT NULL IDENTITY", IsDbGenerated=true)]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this._ID = value;
				}
			}
		}
		
		[Column(Storage="_AbsoluteUri", DbType="VarChar(884) NOT NULL", CanBeNull=false)]
		public string AbsoluteUri
		{
			get
			{
				return this._AbsoluteUri;
			}
			set
			{
				if ((this._AbsoluteUri != value))
				{
					this._AbsoluteUri = value;
				}
			}
		}
		
		[Column(Storage="_ResponseHeaders", DbType="VarChar(4000)")]
		public string ResponseHeaders
		{
			get
			{
				return this._ResponseHeaders;
			}
			set
			{
				if ((this._ResponseHeaders != value))
				{
					this._ResponseHeaders = value;
				}
			}
		}
		
		[Column(Storage="_Source", DbType="VarBinary(MAX) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary Source
		{
			get
			{
				return this._Source;
			}
			set
			{
				if ((this._Source != value))
				{
					this._Source = value;
				}
			}
		}
		
		[Column(Storage="_FullTextIndexType", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string FullTextIndexType
		{
			get
			{
				return this._FullTextIndexType;
			}
			set
			{
				if ((this._FullTextIndexType != value))
				{
					this._FullTextIndexType = value;
				}
			}
		}
	}
	
	[Table(Name="rpt.arachnode_rvw_Schemes_ALL")]
	public partial class arachnode_rvw_Schemes_ALL
	{
		
		private System.Nullable<System.DateTime> _InitiallyDiscovered;
		
		private System.Nullable<System.DateTime> _LastDiscovered;
		
		private int _DiscoveryTypeID;
		
		private string _Scheme;
		
		public arachnode_rvw_Schemes_ALL()
		{
		}
		
		[Column(Storage="_InitiallyDiscovered", DbType="DateTime")]
		public System.Nullable<System.DateTime> InitiallyDiscovered
		{
			get
			{
				return this._InitiallyDiscovered;
			}
			set
			{
				if ((this._InitiallyDiscovered != value))
				{
					this._InitiallyDiscovered = value;
				}
			}
		}
		
		[Column(Storage="_LastDiscovered", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastDiscovered
		{
			get
			{
				return this._LastDiscovered;
			}
			set
			{
				if ((this._LastDiscovered != value))
				{
					this._LastDiscovered = value;
				}
			}
		}
		
		[Column(Storage="_DiscoveryTypeID", DbType="Int NOT NULL")]
		public int DiscoveryTypeID
		{
			get
			{
				return this._DiscoveryTypeID;
			}
			set
			{
				if ((this._DiscoveryTypeID != value))
				{
					this._DiscoveryTypeID = value;
				}
			}
		}
		
		[Column(Storage="_Scheme", DbType="NVarChar(4000)")]
		public string Scheme
		{
			get
			{
				return this._Scheme;
			}
			set
			{
				if ((this._Scheme != value))
				{
					this._Scheme = value;
				}
			}
		}
	}
	
	[Table(Name="rpt.arachnode_rvw_Schemes_Discoveries_ALL")]
	public partial class arachnode_rvw_Schemes_Discoveries_ALL
	{
		
		private System.Nullable<System.DateTime> _SchemeInitiallyDiscovered;
		
		private System.Nullable<System.DateTime> _SchemeLastDiscovered;
		
		private byte _SchemeDiscoveryTypeID;
		
		private int _SchemeID;
		
		private int _Scheme_DiscoveryID;
		
		private string _Scheme;
		
		public arachnode_rvw_Schemes_Discoveries_ALL()
		{
		}
		
		[Column(Storage="_SchemeInitiallyDiscovered", DbType="DateTime")]
		public System.Nullable<System.DateTime> SchemeInitiallyDiscovered
		{
			get
			{
				return this._SchemeInitiallyDiscovered;
			}
			set
			{
				if ((this._SchemeInitiallyDiscovered != value))
				{
					this._SchemeInitiallyDiscovered = value;
				}
			}
		}
		
		[Column(Storage="_SchemeLastDiscovered", DbType="DateTime")]
		public System.Nullable<System.DateTime> SchemeLastDiscovered
		{
			get
			{
				return this._SchemeLastDiscovered;
			}
			set
			{
				if ((this._SchemeLastDiscovered != value))
				{
					this._SchemeLastDiscovered = value;
				}
			}
		}
		
		[Column(Storage="_SchemeDiscoveryTypeID", DbType="TinyInt NOT NULL")]
		public byte SchemeDiscoveryTypeID
		{
			get
			{
				return this._SchemeDiscoveryTypeID;
			}
			set
			{
				if ((this._SchemeDiscoveryTypeID != value))
				{
					this._SchemeDiscoveryTypeID = value;
				}
			}
		}
		
		[Column(Storage="_SchemeID", DbType="Int NOT NULL")]
		public int SchemeID
		{
			get
			{
				return this._SchemeID;
			}
			set
			{
				if ((this._SchemeID != value))
				{
					this._SchemeID = value;
				}
			}
		}
		
		[Column(Storage="_Scheme_DiscoveryID", DbType="Int NOT NULL")]
		public int Scheme_DiscoveryID
		{
			get
			{
				return this._Scheme_DiscoveryID;
			}
			set
			{
				if ((this._Scheme_DiscoveryID != value))
				{
					this._Scheme_DiscoveryID = value;
				}
			}
		}
		
		[Column(Storage="_Scheme", DbType="VarChar(884) NOT NULL", CanBeNull=false)]
		public string Scheme
		{
			get
			{
				return this._Scheme;
			}
			set
			{
				if ((this._Scheme != value))
				{
					this._Scheme = value;
				}
			}
		}
	}
	
	[Table(Name="rpt.arachnode_rvw_Schemes_NEW")]
	public partial class arachnode_rvw_Schemes_NEW
	{
		
		private System.Nullable<System.DateTime> _InitiallyDiscovered;
		
		private System.Nullable<System.DateTime> _LastDiscovered;
		
		private int _DiscoveryTypeID;
		
		private string _Scheme;
		
		public arachnode_rvw_Schemes_NEW()
		{
		}
		
		[Column(Storage="_InitiallyDiscovered", DbType="DateTime")]
		public System.Nullable<System.DateTime> InitiallyDiscovered
		{
			get
			{
				return this._InitiallyDiscovered;
			}
			set
			{
				if ((this._InitiallyDiscovered != value))
				{
					this._InitiallyDiscovered = value;
				}
			}
		}
		
		[Column(Storage="_LastDiscovered", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastDiscovered
		{
			get
			{
				return this._LastDiscovered;
			}
			set
			{
				if ((this._LastDiscovered != value))
				{
					this._LastDiscovered = value;
				}
			}
		}
		
		[Column(Storage="_DiscoveryTypeID", DbType="Int NOT NULL")]
		public int DiscoveryTypeID
		{
			get
			{
				return this._DiscoveryTypeID;
			}
			set
			{
				if ((this._DiscoveryTypeID != value))
				{
					this._DiscoveryTypeID = value;
				}
			}
		}
		
		[Column(Storage="_Scheme", DbType="NVarChar(4000)")]
		public string Scheme
		{
			get
			{
				return this._Scheme;
			}
			set
			{
				if ((this._Scheme != value))
				{
					this._Scheme = value;
				}
			}
		}
	}
	
	[Table(Name="rpt.arachnode_rvw_WebPages_COUNT_BY_DOMAIN")]
	public partial class arachnode_rvw_WebPages_COUNT_BY_DOMAIN
	{
		
		private string _Domain;
		
		private System.Nullable<int> _Count;
		
		public arachnode_rvw_WebPages_COUNT_BY_DOMAIN()
		{
		}
		
		[Column(Storage="_Domain", DbType="VarChar(884) NOT NULL", CanBeNull=false)]
		public string Domain
		{
			get
			{
				return this._Domain;
			}
			set
			{
				if ((this._Domain != value))
				{
					this._Domain = value;
				}
			}
		}
		
		[Column(Storage="_Count", DbType="Int")]
		public System.Nullable<int> Count
		{
			get
			{
				return this._Count;
			}
			set
			{
				if ((this._Count != value))
				{
					this._Count = value;
				}
			}
		}
	}
	
	[Table(Name="rpt.arachnode_rvw_WebPages_COUNT_BY_EXTENSION")]
	public partial class arachnode_rvw_WebPages_COUNT_BY_EXTENSION
	{
		
		private string _Extension;
		
		private System.Nullable<int> _Count;
		
		public arachnode_rvw_WebPages_COUNT_BY_EXTENSION()
		{
		}
		
		[Column(Storage="_Extension", DbType="VarChar(884) NOT NULL", CanBeNull=false)]
		public string Extension
		{
			get
			{
				return this._Extension;
			}
			set
			{
				if ((this._Extension != value))
				{
					this._Extension = value;
				}
			}
		}
		
		[Column(Storage="_Count", DbType="Int")]
		public System.Nullable<int> Count
		{
			get
			{
				return this._Count;
			}
			set
			{
				if ((this._Count != value))
				{
					this._Count = value;
				}
			}
		}
	}
	
	[Table(Name="rpt.arachnode_rvw_WebPages_COUNT_BY_FULLTEXTINDEXTYPE")]
	public partial class arachnode_rvw_WebPages_COUNT_BY_FULLTEXTINDEXTYPE
	{
		
		private string _FullTextIndexType;
		
		private System.Nullable<int> _Count;
		
		public arachnode_rvw_WebPages_COUNT_BY_FULLTEXTINDEXTYPE()
		{
		}
		
		[Column(Storage="_FullTextIndexType", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string FullTextIndexType
		{
			get
			{
				return this._FullTextIndexType;
			}
			set
			{
				if ((this._FullTextIndexType != value))
				{
					this._FullTextIndexType = value;
				}
			}
		}
		
		[Column(Storage="_Count", DbType="Int")]
		public System.Nullable<int> Count
		{
			get
			{
				return this._Count;
			}
			set
			{
				if ((this._Count != value))
				{
					this._Count = value;
				}
			}
		}
	}
	
	[Table(Name="rpt.arachnode_rvw_WebPages_COUNT_BY_HOST")]
	public partial class arachnode_rvw_WebPages_COUNT_BY_HOST
	{
		
		private string _Host;
		
		private System.Nullable<int> _Count;
		
		public arachnode_rvw_WebPages_COUNT_BY_HOST()
		{
		}
		
		[Column(Storage="_Host", DbType="VarChar(884) NOT NULL", CanBeNull=false)]
		public string Host
		{
			get
			{
				return this._Host;
			}
			set
			{
				if ((this._Host != value))
				{
					this._Host = value;
				}
			}
		}
		
		[Column(Storage="_Count", DbType="Int")]
		public System.Nullable<int> Count
		{
			get
			{
				return this._Count;
			}
			set
			{
				if ((this._Count != value))
				{
					this._Count = value;
				}
			}
		}
	}
	
	[Table(Name="rpt.arachnode_rvw_WebPages_COUNT_BY_SCHEME")]
	public partial class arachnode_rvw_WebPages_COUNT_BY_SCHEME
	{
		
		private string _Scheme;
		
		private System.Nullable<int> _Count;
		
		public arachnode_rvw_WebPages_COUNT_BY_SCHEME()
		{
		}
		
		[Column(Storage="_Scheme", DbType="VarChar(884) NOT NULL", CanBeNull=false)]
		public string Scheme
		{
			get
			{
				return this._Scheme;
			}
			set
			{
				if ((this._Scheme != value))
				{
					this._Scheme = value;
				}
			}
		}
		
		[Column(Storage="_Count", DbType="Int")]
		public System.Nullable<int> Count
		{
			get
			{
				return this._Count;
			}
			set
			{
				if ((this._Count != value))
				{
					this._Count = value;
				}
			}
		}
	}
	
	[Table(Name="rpt.arachnode_rvw_WebPages_COUNT_NEW_BY_DATE")]
	public partial class arachnode_rvw_WebPages_COUNT_NEW_BY_DATE
	{
		
		private System.Nullable<System.DateTime> _Date;
		
		private System.Nullable<int> _WebPages;
		
		public arachnode_rvw_WebPages_COUNT_NEW_BY_DATE()
		{
		}
		
		[Column(Storage="_Date", DbType="DateTime")]
		public System.Nullable<System.DateTime> Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this._Date = value;
				}
			}
		}
		
		[Column(Storage="_WebPages", DbType="Int")]
		public System.Nullable<int> WebPages
		{
			get
			{
				return this._WebPages;
			}
			set
			{
				if ((this._WebPages != value))
				{
					this._WebPages = value;
				}
			}
		}
	}
	
	[Table(Name="rpt.arachnode_rvw_WebPagesWithoutHosts_Discoveries")]
	public partial class arachnode_rvw_WebPagesWithoutHosts_Discovery
	{
		
		private System.DateTime _InitiallyDiscovered;
		
		private System.DateTime _LastModified;
		
		private long _ID;
		
		private string _AbsoluteUri;
		
		private string _ResponseHeaders;
		
		private System.Data.Linq.Binary _Source;
		
		private string _FullTextIndexType;
		
		private int _CrawlDepth;
		
		public arachnode_rvw_WebPagesWithoutHosts_Discovery()
		{
		}
		
		[Column(Storage="_InitiallyDiscovered", DbType="DateTime NOT NULL")]
		public System.DateTime InitiallyDiscovered
		{
			get
			{
				return this._InitiallyDiscovered;
			}
			set
			{
				if ((this._InitiallyDiscovered != value))
				{
					this._InitiallyDiscovered = value;
				}
			}
		}
		
		[Column(Storage="_LastModified", DbType="DateTime NOT NULL")]
		public System.DateTime LastModified
		{
			get
			{
				return this._LastModified;
			}
			set
			{
				if ((this._LastModified != value))
				{
					this._LastModified = value;
				}
			}
		}
		
		[Column(Storage="_ID", AutoSync=AutoSync.Always, DbType="BigInt NOT NULL IDENTITY", IsDbGenerated=true)]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this._ID = value;
				}
			}
		}
		
		[Column(Storage="_AbsoluteUri", DbType="VarChar(884) NOT NULL", CanBeNull=false)]
		public string AbsoluteUri
		{
			get
			{
				return this._AbsoluteUri;
			}
			set
			{
				if ((this._AbsoluteUri != value))
				{
					this._AbsoluteUri = value;
				}
			}
		}
		
		[Column(Storage="_ResponseHeaders", DbType="VarChar(4000)")]
		public string ResponseHeaders
		{
			get
			{
				return this._ResponseHeaders;
			}
			set
			{
				if ((this._ResponseHeaders != value))
				{
					this._ResponseHeaders = value;
				}
			}
		}
		
		[Column(Storage="_Source", DbType="VarBinary(MAX) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary Source
		{
			get
			{
				return this._Source;
			}
			set
			{
				if ((this._Source != value))
				{
					this._Source = value;
				}
			}
		}
		
		[Column(Storage="_FullTextIndexType", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string FullTextIndexType
		{
			get
			{
				return this._FullTextIndexType;
			}
			set
			{
				if ((this._FullTextIndexType != value))
				{
					this._FullTextIndexType = value;
				}
			}
		}
		
		[Column(Storage="_CrawlDepth", DbType="Int NOT NULL")]
		public int CrawlDepth
		{
			get
			{
				return this._CrawlDepth;
			}
			set
			{
				if ((this._CrawlDepth != value))
				{
					this._CrawlDepth = value;
				}
			}
		}
	}
}
#pragma warning restore 1591
